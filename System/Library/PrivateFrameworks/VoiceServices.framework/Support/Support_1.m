void *sub_1000613CC(uint64_t *a1, uint64_t a2, unsigned __int16 *a3, int a4, int a5, uint64_t a6, uint64_t *a7)
{
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _WORD *v21;
  void *v22;
  uint64_t vars8;

  sub_1000614D0(a1, a2, a3, a4, a5, a6, a7);
  v13 = sub_1000B51F8(a1) + 3;
  v21 = sub_1000CD454(4 * v13, v14, v15, v16, v17, v18, v19, v20);
  qword_100101CF0 = (uint64_t)v21;
  *(void *)algn_100101CF8 = &v21[v13];
  *v21 = 0;
  v21[v13] = 0;
  if (a5)
  {
    qword_100101D00 = a6;
    qsort(a3, a4, 2uLL, (int (__cdecl *)(const void *, const void *))sub_1000615F0);
    qword_100101D00 = 0;
  }
  else
  {
    qword_100101D08 = (uint64_t)a1;
    qword_100101D10 = a2;
    qsort(a3, a4, 2uLL, (int (__cdecl *)(const void *, const void *))sub_1000616C0);
  }
  v22 = (void *)qword_100101CF0;
  return sub_1000CD4D0(v22, 4 * v13);
}

uint64_t *sub_1000614D0(uint64_t *result, uint64_t a2, unsigned __int16 *a3, int a4, int a5, uint64_t a6, uint64_t *a7)
{
  if (a5)
  {
    v12 = result;
    int v13 = sub_1000B51F8(result);
    uint64_t v39 = 2 * (v13 + 1);
    v21 = (unsigned __int16 *)sub_1000CD454(v39, v14, v15, v16, v17, v18, v19, v20);
    *a7 = sub_1000C42C0(v13 * a4, (uint64_t)(v13 * a4 + (v13 * a4 < 0)) >> 1, 2, v22, v23, v24, v25, v26);
    if (a4 >= 1)
    {
      uint64_t v27 = a4;
      do
      {
        unsigned int v28 = *a3++;
        int v29 = sub_1000BB100(v12, v28, v21);
        v36 = (_WORD *)sub_1000C4484(*a7, 2 * (v29 + 1), v30, v31, v32, v33, v34, v35);
        sub_100005524(a2, v21, v29, v36, 0, 0, v37, v38);
        v36[v29] = 0x7FFF;
        *(void *)(a6 + 8 * v28) = v36;
        --v27;
      }
      while (v27);
    }
    return sub_1000CD4D0(v21, v39);
  }
  return result;
}

uint64_t sub_1000615F0(unsigned __int16 *a1, unsigned __int16 *a2)
{
  v4 = *(unsigned __int16 **)(qword_100101D00 + 8 * *a1);
  v5 = *(unsigned __int16 **)(qword_100101D00 + 8 * *a2);
  signed int v6 = sub_10009BF48((unint64_t)v4);
  signed int v7 = sub_10009BF48((unint64_t)v5);
  if (v6 >= v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = v6;
  }
  if ((int)v8 < 1)
  {
LABEL_10:
    if (v6 == v7)
    {
      unsigned int v14 = *a1;
      unsigned int v15 = *a2;
      BOOL v12 = v14 >= v15;
      LODWORD(v13) = v14 != v15;
      if (v12) {
        return v13;
      }
      else {
        return 0xFFFFFFFFLL;
      }
    }
    else if (v6 > v7)
    {
      return 1;
    }
    else
    {
      return 0xFFFFFFFFLL;
    }
  }
  else
  {
    while (1)
    {
      unsigned int v10 = *v4++;
      unsigned int v9 = v10;
      unsigned int v11 = *v5++;
      BOOL v12 = v9 >= v11;
      LODWORD(v13) = v9 != v11;
      uint64_t v13 = v12 ? v13 : 0xFFFFFFFFLL;
      if (v13) {
        break;
      }
      if (!--v8) {
        goto LABEL_10;
      }
    }
  }
  return v13;
}

uint64_t sub_1000616C0(unsigned __int16 *a1, unsigned __int16 *a2)
{
  v4 = (unsigned __int16 *)(qword_100101CF0 + 2);
  v5 = (unsigned __int16 *)(*(void *)algn_100101CF8 + 2);
  sub_1000BB100((uint64_t *)qword_100101D08, *a1, (_DWORD *)(qword_100101CF0 + 2));
  sub_1000BB100((uint64_t *)qword_100101D08, *a2, v5);
  int v10 = *a1;
  int v11 = *a2;
  return sub_100064958(v4, v5, v10, v11, v6, v7, v8, v9);
}

uint64_t sub_100061748(uint64_t a1, uint64_t *a2, uint64_t a3, int a4, unsigned __int16 *a5, uint64_t a6, int a7, int a8, int a9, uint64_t a10, int a11, int a12, int a13, int *a14, uint64_t a15)
{
  int v20 = a13;
  uint64_t v28 = sub_1000CD550();
  v206 = a2;
  if (a2)
  {
    int v29 = sub_1000B51F8(a2);
    if (a12) {
      int v37 = 2;
    }
    else {
      int v37 = 1;
    }
    int v38 = v29 + v37;
    v203 = (unsigned __int16 *)sub_1000CD454(2 * (v29 + v37 + 1), v30, v31, v32, v33, v34, v35, v36);
  }
  else
  {
    if (a4 < 1)
    {
      int v39 = 0;
    }
    else
    {
      int v39 = 0;
      uint64_t v40 = a4;
      v41 = a5;
      do
      {
        unsigned int v42 = *v41++;
        int v43 = sub_10009BF2C(*(void *)(a6 + 8 * v42));
        if (v43 > v39) {
          int v39 = v43;
        }
        --v40;
      }
      while (v40);
    }
    a7 = 0;
    v203 = 0;
    if (a12) {
      int v44 = 2;
    }
    else {
      int v44 = 1;
    }
    int v38 = v39 + v44;
    int v20 = a13;
  }
  BOOL v45 = v20 == 0;
  BOOL v46 = v38 + 100 >= a8;
  BOOL v47 = !v45 || !v46;
  if (!v45 || !v46) {
    a9 = v38 + 100;
  }
  if (v47) {
    int v49 = v38 + 100;
  }
  else {
    int v49 = a8;
  }
  int v230 = v49;
  int v231 = a9;
  uint64_t v210 = v28;
  v207 = 0;
  if (a4)
  {
    v223 = 0;
    v50 = 0;
    if (!a7)
    {
      size_t v51 = 2 * (v38 + 2);
      v207 = (unsigned __int16 *)sub_1000CD454(v51, v21, v22, v23, v24, v25, v26, v27);
      v223 = sub_1000CD454(v51, v52, v53, v54, v55, v56, v57, v58);
      v50 = (unsigned __int16 *)sub_1000CD454(v51, v59, v60, v61, v62, v63, v64, v65);
    }
    uint64_t v215 = 4 * v38;
    v73 = sub_1000CD454(v215, v21, v22, v23, v24, v25, v26, v27);
    int v74 = *(_DWORD *)(a1 + 28);
    if (v20) {
      goto LABEL_27;
    }
  }
  else
  {
    v223 = 0;
    v50 = 0;
    uint64_t v215 = 4 * v38;
    v73 = sub_1000CD454(v215, v21, v22, v23, v24, v25, v26, v27);
    int v74 = *(_DWORD *)(a1 + 28);
    if (v20) {
LABEL_27:
    }
      v74 -= *(_DWORD *)(a1 + 32) == 1;
  }
  uint64_t v214 = v74;
  uint64_t v75 = a1 + 4 * v74;
  int v77 = *(_DWORD *)(v75 + 104);
  v76 = (_DWORD *)(v75 + 104);
  v221 = v73;
  if (v38 > v77)
  {
    uint64_t v78 = sub_1000C33A0(4 * (v38 + 5));
    if (!v78) {
      goto LABEL_202;
    }
    uint64_t v79 = v78;
    uint64_t v80 = a1 + 8 * v214;
    sub_1000C321C(*(void *)(v80 + 168));
    *(void *)(v80 + 168) = v79;
    _DWORD *v76 = v38 + 5;
  }
  v236[0] = 0;
  v235 = 0;
  v220 = sub_1000CD454(v215, v66, v67, v68, v69, v70, v71, v72);
  if (a11) {
    int v81 = a11;
  }
  else {
    int v81 = 65533;
  }
  int v228 = v81;
  int v211 = a4;
  uint64_t v208 = a1;
  uint64_t v204 = a6;
  int v202 = v38;
  if (!a4)
  {
    int v233 = 0;
    _DWORD *v73 = 1;
    goto LABEL_119;
  }
  if (!a7)
  {
    uint64_t v114 = *a5;
    if (a15)
    {
      sub_10009D254(a15, v114, 0, &v235, v236);
      LODWORD(v83) = v236[0];
      memcpy(v50, v235, 2 * v236[0]);
      if (a12)
      {
        v50[(int)v83] = 0;
        LODWORD(v83) = v83 + 1;
        v236[0] = v83;
      }
    }
    else
    {
      if (v206)
      {
        v122 = v203;
        int v123 = sub_1000BB100(v206, v114, v203);
        LODWORD(v83) = v123;
        v236[0] = v123;
        if (a12)
        {
          v203[v123] = 0;
          uint64_t v83 = v123 + 1;
          v236[0] = v123 + 1;
          v203[v83] = -1;
        }
      }
      else
      {
        v122 = *(unsigned __int16 **)(a6 + 8 * v114);
        LODWORD(v83) = sub_10009BF2C((unint64_t)v122);
        v236[0] = v83;
      }
      sub_100005524(a3, v122, v83, v50, 0, 0, v124, v125);
    }
    v84 = v207;
    v50[(int)v83] = 0x7FFF;
    v82 = v50;
    _DWORD *v73 = 1;
    uint64_t v226 = (a4 - 1);
    if (a4 >= 1) {
      goto LABEL_37;
    }
    goto LABEL_118;
  }
  v82 = *(unsigned __int16 **)(a10 + 8 * *a5);
  LODWORD(v83) = sub_10009BF48((unint64_t)v82);
  v84 = 0;
  _DWORD *v73 = 1;
  uint64_t v226 = (a4 - 1);
  if (a4 < 1)
  {
LABEL_118:
    int v233 = 0;
LABEL_119:
    int v89 = 2;
LABEL_120:
    sub_1000CD4D0(v220, v215);
    int v115 = v89;
    int v121 = v211;
    uint64_t v117 = v208;
    v118 = a5;
    uint64_t v119 = v214;
    int v120 = a11;
    goto LABEL_121;
  }
LABEL_37:
  int v233 = 0;
  int v85 = v38;
  uint64_t v86 = 0;
  int v217 = 0;
  int v218 = 0;
  LODWORD(v87) = 0;
  int v88 = 0;
  size_t __n = 4 * v85;
  v205 = v73 + 5;
  v213 = v73 + 1;
  int v89 = 2;
  v90.i64[0] = 0x100000001;
  v90.i64[1] = 0x100000001;
  __dst = v223;
  uint64_t v224 = a4;
  while (1)
  {
    int v91 = v83;
    int v92 = v87;
    if (a7)
    {
      if (v86 == v226)
      {
        LODWORD(v83) = 0;
        LODWORD(v87) = 0;
        __dst = v84;
        v84 = v82;
        v82 = 0;
        goto LABEL_70;
      }
      unint64_t v87 = *(void *)(a10 + 8 * a5[v86 + 1]);
      int v93 = sub_10009BF48(v87);
      LODWORD(v83) = v93;
      if (v91 >= v93) {
        int v94 = v93;
      }
      else {
        int v94 = v91;
      }
      if (!v87)
      {
        __dst = v84;
        v84 = v82;
        v82 = 0;
        v90.i64[0] = 0x100000001;
        v90.i64[1] = 0x100000001;
        goto LABEL_70;
      }
      __dst = v84;
      v84 = v82;
      v82 = (unsigned __int16 *)v87;
      v90.i64[0] = 0x100000001;
      v90.i64[1] = 0x100000001;
      if (v94 < 2) {
        goto LABEL_51;
      }
    }
    else
    {
      if (v86) {
        memcpy(__dst, v84, 2 * v88 + 2);
      }
      memcpy(v84, v82, 2 * (int)v83 + 2);
      if (v86 == v226)
      {
        LODWORD(v83) = 0;
      }
      else
      {
        uint64_t v95 = a5[v86 + 1];
        if (a15)
        {
          sub_10009D254(a15, v95, 0, &v235, v236);
          memcpy(v82, v235, 2 * v236[0]);
          LODWORD(v83) = v236[0];
          if (a12)
          {
            v82[v236[0]] = 0;
            LODWORD(v83) = ++v236[0];
          }
        }
        else
        {
          if (v206)
          {
            uint64_t v83 = (uint64_t)v203;
            int v96 = sub_1000BB100(v206, v95, v203);
            LODWORD(v99) = v96;
            v236[0] = v96;
            if (a12)
            {
              v203[v96] = 0;
              uint64_t v99 = v96 + 1;
              v236[0] = v96 + 1;
              v203[v99] = -1;
            }
          }
          else
          {
            uint64_t v83 = *(void *)(v204 + 8 * v95);
            LODWORD(v99) = sub_10009BF2C(v83);
            v236[0] = v99;
          }
          sub_100005524(a3, (unsigned __int16 *)v83, v99, v82, 0, 0, v97, v98);
          LODWORD(v83) = v236[0];
        }
      }
      v90.i64[0] = 0x100000001;
      v90.i64[1] = 0x100000001;
      v82[(int)v83] = 0x7FFF;
      if (v91 >= (int)v83) {
        int v94 = v83;
      }
      else {
        int v94 = v91;
      }
      if (v94 < 2)
      {
LABEL_51:
        LODWORD(v87) = 0;
        goto LABEL_70;
      }
    }
    uint64_t v100 = 0;
    unint64_t v87 = (v94 - 1);
    while (v84[v100] == v82[v100])
    {
      if (v87 == ++v100) {
        goto LABEL_70;
      }
    }
    LODWORD(v87) = v100;
LABEL_70:
    if (v92 <= (int)v87) {
      int v101 = v87;
    }
    else {
      int v101 = v92;
    }
    if (v91 >= v230) {
      int v102 = v230;
    }
    else {
      int v102 = v91;
    }
    if (v101 + 1 >= v230) {
      int v103 = v101 + 1;
    }
    else {
      int v103 = v102;
    }
    if (v92 >= v231) {
      int v104 = v231;
    }
    else {
      int v104 = v92;
    }
    if (v103 <= v231)
    {
      int v105 = v103;
    }
    else
    {
      int v92 = v104;
      int v105 = v231 + 1;
    }
    int v106 = v233;
    if (v105 < v91) {
      int v106 = 1;
    }
    int v233 = v106;
    if (v105 + v89 - v92 > v228) {
      break;
    }
    if (v86 && !v92)
    {
      memcpy(v220, v221, __n);
      v90.i64[0] = 0x100000001;
      v90.i64[1] = 0x100000001;
      int v218 = v89;
      int v217 = v86;
    }
    if (v92 < v105)
    {
      unint64_t v107 = v105 - (uint64_t)v92;
      unint64_t v108 = v92;
      if (v107 < 8) {
        goto LABEL_96;
      }
      unint64_t v108 = (v107 & 0xFFFFFFFFFFFFFFF8) + v92;
      v109 = (int32x4_t *)&v205[v92];
      unint64_t v110 = v107 & 0xFFFFFFFFFFFFFFF8;
      do
      {
        int32x4_t v111 = vaddq_s32(*v109, v90);
        v109[-1] = vaddq_s32(v109[-1], v90);
        int32x4_t *v109 = v111;
        v109 += 2;
        v110 -= 8;
      }
      while (v110);
      if (v107 != (v107 & 0xFFFFFFFFFFFFFFF8))
      {
LABEL_96:
        unint64_t v112 = v105 - v108;
        v113 = &v213[v108];
        do
        {
          ++*v113++;
          --v112;
        }
        while (v112);
      }
    }
    int v89 = v89 - v92 + v105;
    ++v86;
    int v88 = v91;
    if (v86 == v224) {
      goto LABEL_120;
    }
  }
  int v115 = v218;
  if (v218)
  {
    memcpy(v221, v220, __n);
    int v116 = v211;
    uint64_t v117 = v208;
    v118 = a5;
    uint64_t v119 = v214;
    int v120 = a11;
    LODWORD(v86) = v217;
    sub_1000CD4D0(v220, v215);
    if (a13) {
      goto LABEL_107;
    }
LABEL_113:
    int v121 = v86;
    goto LABEL_121;
  }
  int v115 = v89;
  int v116 = v211;
  uint64_t v117 = v208;
  v118 = a5;
  uint64_t v119 = v214;
  int v120 = a11;
  sub_1000CD4D0(v220, v215);
  if (!a13) {
    goto LABEL_113;
  }
LABEL_107:
  int v121 = v86;
  if (v86 != v116) {
    goto LABEL_202;
  }
LABEL_121:
  if (v120)
  {
    if (v115 > v120) {
      goto LABEL_202;
    }
    if (a13)
    {
      int v126 = *(_DWORD *)(v117 + 32);
      uint64_t v127 = v204;
      goto LABEL_129;
    }
    uint64_t v127 = v204;
    uint64_t v189 = sub_1000C33A0(4 * v120);
    uint64_t v130 = v117 + 8 * v119;
    *(void *)(v130 + 616) = v189;
    if (!v189)
    {
LABEL_202:
      sub_1000CD534(v210);
      return 0;
    }
LABEL_131:
    uint64_t v132 = sub_1000C33A0(v120);
    *(void *)(v130 + 744) = v132;
    if (!v132)
    {
      sub_1000C321C(*(void *)(v130 + 616));
      goto LABEL_202;
    }
    *(_DWORD *)(v117 + 4 * v119 + 296) = v120;
    ++*(_DWORD *)(v117 + 28);
    if (a13) {
      *(_DWORD *)(v117 + 32) = 1;
    }
  }
  else
  {
    uint64_t v128 = v117 + 8 * v119;
    sub_1000C321C(*(void *)(v128 + 616));
    sub_1000C321C(*(void *)(v128 + 744));
    int v120 = v115;
    uint64_t v127 = v204;
    if (!a13) {
      goto LABEL_130;
    }
    int v126 = *(_DWORD *)(v117 + 32);
    int v120 = v115;
    if (v126 == 1)
    {
      *(void *)(v117 + 28) = (*(_DWORD *)(v117 + 28) - 1);
      int v120 = v115;
      uint64_t v129 = sub_1000C33A0(4 * v115);
      uint64_t v130 = v117 + 8 * v119;
      *(void *)(v130 + 616) = v129;
      if (!v129) {
        goto LABEL_202;
      }
      goto LABEL_131;
    }
LABEL_129:
    if (!v126)
    {
LABEL_130:
      uint64_t v131 = sub_1000C33A0(4 * v120);
      uint64_t v130 = v117 + 8 * v119;
      *(void *)(v130 + 616) = v131;
      if (!v131) {
        goto LABEL_202;
      }
      goto LABEL_131;
    }
  }
  v133 = *(_WORD **)(v117 + 8 * v119 + 616);
  _WORD *v133 = sub_1000041E4(a3);
  v133[1] = 1;
  uint64_t v134 = v115 - 1;
  v135 = &v133[2 * v134];
  _WORD *v135 = 0;
  v135[1] = v134;
  v236[0] = 0;
  v235 = 0;
  v143 = sub_1000CD454(4 * (v202 + 5), v136, v137, v138, v139, v140, v141, v142);
  v144 = v143;
  v145 = v221;
  if (v202 >= 1)
  {
    int v146 = 0;
    v147 = v143;
    uint64_t v148 = v202;
    do
    {
      *v147++ = v146;
      int v149 = *v145++;
      v146 += v149;
      --v148;
    }
    while (v148);
  }
  int v219 = v115;
  int v212 = v121;
  if (!v121)
  {
    int v154 = 0;
    v158 = v143;
    _DWORD *v143 = 1;
    goto LABEL_213;
  }
  if (!a7)
  {
    uint64_t v191 = *v118;
    if (a15)
    {
      sub_10009D254(a15, v191, 0, &v235, v236);
      LODWORD(v150) = v236[0];
      memcpy(v50, v235, 2 * v236[0]);
      if (a12)
      {
        v50[(int)v150] = 0;
        LODWORD(v150) = v150 + 1;
        v236[0] = v150;
      }
    }
    else
    {
      if (v206)
      {
        v192 = v203;
        int v193 = sub_1000BB100(v206, v191, v203);
        LODWORD(v150) = v193;
        v236[0] = v193;
        if (a12)
        {
          v203[v193] = 0;
          uint64_t v150 = v193 + 1;
          v236[0] = v193 + 1;
          v203[v150] = -1;
        }
      }
      else
      {
        v192 = *(unsigned __int16 **)(v127 + 8 * v191);
        LODWORD(v150) = sub_10009BF2C((unint64_t)v192);
        v236[0] = v150;
      }
      sub_100005524(a3, v192, v150, v50, 0, 0, v194, v195);
    }
    v151 = v207;
    v50[(int)v150] = 0x7FFF;
    _DWORD *v144 = 1;
    uint64_t v229 = (v121 - 1);
    if (v121 < 1) {
      goto LABEL_212;
    }
LABEL_140:
    unsigned int v152 = v121;
    uint64_t v153 = 0;
    int v154 = 0;
    int v155 = 0;
    int v156 = 0;
    if (a12) {
      int v157 = 2;
    }
    else {
      int v157 = 1;
    }
    int v227 = v157;
    v158 = v144;
    v225 = v144 + 1;
    uint64_t v159 = v152;
    while (1)
    {
      if (a7)
      {
        if (v153 == v229)
        {
          unint64_t v160 = 0;
          int v161 = 0;
          v223 = v151;
          LODWORD(v162) = 0;
        }
        else
        {
          unint64_t v160 = *(void *)(a10 + 8 * a5[v153 + 1]);
          v164 = v151;
          int v161 = sub_10009BF48(v160);
          v223 = v164;
          LODWORD(v162) = 0;
          if ((int)v150 >= v161) {
            int v165 = v161;
          }
          else {
            int v165 = v150;
          }
          if (v160) {
            goto LABEL_169;
          }
        }
      }
      else
      {
        v163 = v151;
        if (v153)
        {
          memcpy(v223, v151, 2 * v156 + 2);
          v151 = v163;
        }
        memcpy(v151, v50, 2 * (int)v150 + 2);
        if (v153 == v229)
        {
          int v161 = 0;
        }
        else
        {
          uint64_t v166 = a5[v153 + 1];
          if (a15)
          {
            sub_10009D254(a15, v166, 0, &v235, v236);
            memcpy(v50, v235, 2 * v236[0]);
            int v161 = v236[0];
            if (a12)
            {
              v50[v236[0]] = 0;
              int v161 = ++v236[0];
            }
          }
          else
          {
            if (v206)
            {
              v167 = v203;
              int v168 = sub_1000BB100(v206, v166, v203);
              LODWORD(v171) = v168;
              v236[0] = v168;
              if (a12)
              {
                v203[v168] = 0;
                uint64_t v171 = v168 + 1;
                v236[0] = v168 + 1;
                v203[v171] = -1;
              }
            }
            else
            {
              v167 = *(unsigned __int16 **)(v204 + 8 * v166);
              LODWORD(v171) = sub_10009BF2C((unint64_t)v167);
              v236[0] = v171;
            }
            sub_100005524(a3, v167, v171, v50, 0, 0, v169, v170);
            int v161 = v236[0];
          }
        }
        v50[v161] = 0x7FFF;
        unint64_t v160 = (unint64_t)v50;
        v50 = v163;
        LODWORD(v162) = 0;
        if ((int)v150 >= v161) {
          int v165 = v161;
        }
        else {
          int v165 = v150;
        }
        if (v160)
        {
LABEL_169:
          if (v165 >= 2)
          {
            uint64_t v172 = 0;
            uint64_t v162 = (v165 - 1);
            while (v50[v172] == *(unsigned __int16 *)(v160 + 2 * v172))
            {
              if (v162 == ++v172) {
                goto LABEL_175;
              }
            }
            LODWORD(v162) = v172;
          }
        }
      }
LABEL_175:
      if (v155 <= (int)v162) {
        int v173 = v162;
      }
      else {
        int v173 = v155;
      }
      if ((int)v150 >= v230) {
        int v174 = v230;
      }
      else {
        int v174 = v150;
      }
      if (v173 + 1 >= v230) {
        int v175 = v173 + 1;
      }
      else {
        int v175 = v174;
      }
      if (v155 >= v231) {
        int v176 = v231;
      }
      else {
        int v176 = v155;
      }
      if (v175 <= v231) {
        int v177 = v155;
      }
      else {
        int v177 = v176;
      }
      if (v175 > v231) {
        int v175 = v231 + 1;
      }
      if (v177 < v175)
      {
        uint64_t v178 = v175 - 1;
        uint64_t v179 = v175;
        v180 = &v225[v177];
        uint64_t v181 = v178 - v177;
        uint64_t v182 = v179 - v177;
        v183 = &v50[v177];
        do
        {
          uint64_t v185 = *v180;
          v186 = &v133[2 * v185];
          __int16 v188 = *v183++;
          __int16 v187 = v188;
          _WORD *v186 = v188;
          if (v181)
          {
            int v184 = v180[1];
          }
          else
          {
            LOWORD(v184) = a5[v153];
            _WORD *v186 = v187 | 0x8000;
          }
          v133[2 * v185 + 1] = v184;
          ++*v180++;
          --v181;
          --v182;
        }
        while (v182);
      }
      v154 += v227 + v150;
      ++v153;
      int v155 = v162;
      int v156 = v150;
      v151 = v50;
      LODWORD(v150) = v161;
      v50 = (unsigned __int16 *)v160;
      if (v153 == v159) {
        goto LABEL_213;
      }
    }
  }
  v50 = *(unsigned __int16 **)(a10 + 8 * *v118);
  LODWORD(v150) = sub_10009BF48((unint64_t)v50);
  v151 = 0;
  _DWORD *v144 = 1;
  uint64_t v229 = (v121 - 1);
  if (v121 >= 1) {
    goto LABEL_140;
  }
LABEL_212:
  v158 = v144;
  int v154 = 0;
LABEL_213:
  sub_1000CD4D0(v158, 4 * (v202 + 5));
  v196 = (_DWORD *)(v208 + 4 * v214);
  v196[106] = *v221;
  v196[90] = v219;
  v196[122] = v212;
  v196[138] = v154;
  if (v233) {
    *(_DWORD *)(v208 + 20) = 1;
  }
  if (v202 < 1)
  {
    int v198 = 0;
  }
  else
  {
    uint64_t v197 = 0;
    int v198 = 0;
    int v199 = 0;
    uint64_t v200 = *(void *)(v208 + 8 * v214 + 168);
    do
    {
      *(_DWORD *)(v200 + 4 * v197) = v199;
      int v201 = v221[v197];
      v199 += v201;
      if (v201 > 0) {
        int v198 = v197;
      }
      ++v197;
    }
    while (v202 != v197);
  }
  *(_DWORD *)(v208 + 4 * v214 + 40) = v198;
  sub_1000CD534(v210);
  *a14 = v212;
  return 1;
}

uint64_t sub_100062588(uint64_t a1, unsigned __int16 *__base, uint64_t __nel, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10)
{
  int v29 = a8;
  int v10 = a7;
  int v13 = __nel;
  uint64_t v31 = 0;
  if (a7)
  {
    BOOL v16 = 0;
    *(void *)a1 = a5;
    *(void *)(a1 + 8) = a4;
    if (__nel)
    {
      uint64_t v17 = 0;
      int v18 = 0;
      int v19 = a9;
      int v32 = 0;
      if (!a4) {
        goto LABEL_9;
      }
      goto LABEL_18;
    }
    return sub_100061748(a1, a4, a5, 0, __base, a6, v16, 0x7FFFFFFF, 0x7FFFFFFF, 0, 0, 0, 0, &v32, a10);
  }
  if (!qword_100101CC0)
  {
    *(void *)a1 = a5;
    *(void *)(a1 + 8) = a4;
    if (!__nel)
    {
      BOOL v16 = 1;
      return sub_100061748(a1, a4, a5, 0, __base, a6, v16, 0x7FFFFFFF, 0x7FFFFFFF, 0, 0, 0, 0, &v32, a10);
    }
    goto LABEL_15;
  }
  int v20 = *(_DWORD *)(qword_100101CC0 + 3664);
  BOOL v16 = v20 == 0;
  *(void *)a1 = a5;
  *(void *)(a1 + 8) = a4;
  if (!__nel) {
    return sub_100061748(a1, a4, a5, 0, __base, a6, v16, 0x7FFFFFFF, 0x7FFFFFFF, 0, 0, 0, 0, &v32, a10);
  }
  if (!v20)
  {
LABEL_15:
    int v18 = __nel;
    if (a4) {
      int v18 = sub_1000B51F0((uint64_t)a4) + 1;
    }
    uint64_t v17 = sub_1000CD454(8 * v18, (uint64_t)__base, __nel, (uint64_t)a4, a5, a6, a7, a8);
    BOOL v16 = 1;
    int v19 = a9;
    int v32 = 0;
    if (!a4) {
      goto LABEL_9;
    }
    goto LABEL_18;
  }
  BOOL v16 = 0;
  int v18 = 0;
  uint64_t v17 = 0;
  int v19 = a9;
  int v32 = 0;
  if (!a4)
  {
LABEL_9:
    qword_100101D10 = a5;
    qword_100101D18 = a6;
    if (v13 > 0)
    {
      int v28 = v18;
      qsort(__base, v13, 2uLL, (int (__cdecl *)(const void *, const void *))sub_100062898);
      int v21 = 0;
      *(_DWORD *)(a1 + 20) = 0;
      while (sub_100061748(a1, 0, a5, v13 - v21, &__base[v21], a6, v16, 0x7FFFFFFF, 0x7FFFFFFF, (uint64_t)v17, v19, v10, v29, &v32, a10))
      {
        v21 += v32;
        if (v21 >= v13) {
          goto LABEL_25;
        }
      }
      goto LABEL_26;
    }
    *(_DWORD *)(a1 + 20) = 0;
    uint64_t v25 = 1;
    uint64_t v26 = qword_100101CC0;
    if (!qword_100101CC0)
    {
LABEL_33:
      sub_1000C4364(v31);
      sub_1000CD4D0(v17, 8 * v18);
      return v25;
    }
    goto LABEL_32;
  }
LABEL_18:
  sub_1000613CC(a4, a5, __base, v13, v16, (uint64_t)v17, &v31);
  *(_DWORD *)(a1 + 20) = 0;
  if (v13 >= 1)
  {
    int v28 = v18;
    int v22 = 0;
    while (1)
    {
      LODWORD(v23) = qword_100101CC0;
      if (qword_100101CC0)
      {
        int v24 = *(_DWORD *)(qword_100101CC0 + 3688);
        uint64_t v23 = *(void *)(qword_100101CC0 + 3680);
      }
      else
      {
        int v24 = 0;
      }
      if (!sub_100061748(a1, a4, a5, v13 - v22, &__base[v22], a6, v16, v24, v23, (uint64_t)v17, v19, v10, v29, &v32, a10))break; {
      v22 += v32;
      }
      if (v22 >= v13)
      {
LABEL_25:
        uint64_t v25 = 1;
        goto LABEL_27;
      }
    }
LABEL_26:
    uint64_t v25 = 0;
LABEL_27:
    int v18 = v28;
    uint64_t v26 = qword_100101CC0;
    if (!qword_100101CC0) {
      goto LABEL_33;
    }
    goto LABEL_32;
  }
  uint64_t v25 = 1;
  uint64_t v26 = qword_100101CC0;
  if (!qword_100101CC0) {
    goto LABEL_33;
  }
LABEL_32:
  if (!*(_DWORD *)(v26 + 3664)) {
    goto LABEL_33;
  }
  return v25;
}

uint64_t sub_100062898(unsigned __int16 *a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = *a1;
  int v11 = *(unsigned __int16 **)(qword_100101D18 + 8 * v10);
  uint64_t v12 = *a2;
  int v13 = *(unsigned __int16 **)(qword_100101D18 + 8 * v12);
  uint64_t v14 = *v11;
  unsigned int v17 = v11[1];
  BOOL v16 = v11 + 1;
  unsigned int v15 = v17;
  if (__PAIR64__(v17, v14) == __PAIR64__(v13[1], *v13))
  {
LABEL_13:
    return sub_100064958(v16, v13 + 1, v10, v12, a5, a6, a7, a8);
  }
  if (v15 == 0xFFFF) {
    uint64_t v18 = 0;
  }
  else {
    uint64_t v18 = v15;
  }
  unsigned int v23 = sub_100005304(qword_100101D10, 0, v14, v18, a5, a6, a7, a8);
  if (v13[1] == 0xFFFF) {
    uint64_t v24 = 0;
  }
  else {
    uint64_t v24 = v13[1];
  }
  unsigned int v25 = sub_100005304(qword_100101D10, 0, *v13, v24, v19, v20, v21, v22);
  if (v23 < v25) {
    uint64_t result = 0xFFFFFFFFLL;
  }
  else {
    uint64_t result = v23 != v25;
  }
  if (!result)
  {
    LODWORD(v10) = *a1;
    LODWORD(v12) = *a2;
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_100062994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1000CD550();
  uint64_t v16 = sub_1000C33A0(888);
  if (v16)
  {
    unint64_t v24 = sub_1000CD3E8(8 * (int)a2, v9, v10, v11, v12, v13, v14, v15);
    if ((int)a2 < 1)
    {
      int v37 = 0;
      goto LABEL_32;
    }
    uint64_t v46 = v8;
    uint64_t v25 = 0;
    uint64_t v47 = a2;
    uint64_t v26 = a2;
    do
    {
      if (*(int *)(a3 + 4) < 1)
      {
        int v29 = 0;
      }
      else
      {
        uint64_t v28 = 0;
        int v29 = 0;
        do
        {
          int v30 = sub_10009DA20(a4, *(unsigned __int16 *)(a3 + 2 * v28 + 16)) + v29;
          uint64_t v31 = *(int *)(a3 + 4);
          if (v28 >= v31 - 1) {
            int v32 = v30;
          }
          else {
            int v32 = v30 + 1;
          }
          if (*(unsigned char *)(a3 + v28 + 88)) {
            int v29 = v32;
          }
          else {
            int v29 = v30;
          }
          ++v28;
        }
        while (v28 < v31);
      }
      unint64_t v33 = sub_1000CD3E8(2 * (v29 + 1), v17, v18, v19, v20, v21, v22, v23);
      *(void *)(v24 + 8 * v25) = v33;
      if (*(int *)(a3 + 4) < 1)
      {
        int v27 = 0;
      }
      else
      {
        uint64_t v34 = 0;
        int v27 = 0;
        int v49 = 0;
        __src = 0;
        do
        {
          sub_10009D254(a4, *(unsigned __int16 *)(a3 + 2 * v34 + 16), &__src, 0, &v49);
          j__memmove((void *)(v33 + 2 * v27), __src, 2 * v49);
          v27 += v49;
          int v35 = *(_DWORD *)(a3 + 4);
          if (*(unsigned char *)(a3 + v34 + 88) && v34 < v35 - 1)
          {
            *(_WORD *)(v33 + 2 * v27++) = 0;
            int v35 = *(_DWORD *)(a3 + 4);
          }
          ++v34;
        }
        while (v34 < v35);
      }
      *(_WORD *)(v33 + 2 * v27) = -1;
      a3 += 128;
      ++v25;
    }
    while (v25 != v26);
    uint64_t v36 = sub_1000C33A0(2 * v26);
    uint64_t v8 = v46;
    if (!v36) {
      goto LABEL_33;
    }
    int v37 = (unsigned __int16 *)v36;
    if (v47 >= 0x10)
    {
      uint64_t v39 = 0;
      uint64_t v38 = v26 & 0xFFFFFFF0;
      int16x8_t v40 = (int16x8_t)xmmword_1000F48A0;
      v41.i64[0] = 0x8000800080008;
      v41.i64[1] = 0x8000800080008;
      v42.i64[0] = 0x10001000100010;
      v42.i64[1] = 0x10001000100010;
      do
      {
        int v43 = (int16x8_t *)(v36 + v39);
        *int v43 = v40;
        v43[1] = vaddq_s16(v40, v41);
        int16x8_t v40 = vaddq_s16(v40, v42);
        v39 += 32;
      }
      while (((2 * v26) & 0x1FFFFFFE0) != v39);
      if (v38 == v26) {
        goto LABEL_31;
      }
    }
    else
    {
      uint64_t v38 = 0;
    }
    do
    {
      *(_WORD *)(v36 + 2 * v38) = v38;
      ++v38;
    }
    while (v26 != v38);
LABEL_31:
    a2 = v47;
LABEL_32:
    int v44 = sub_100062588(v16, v37, a2, 0, a1, v24, 0, 0, 0, 0);
    sub_1000C321C((uint64_t)v37);
    if (v44)
    {
LABEL_34:
      sub_1000CD534(v8);
      return v16;
    }
LABEL_33:
    sub_1000C321C(v16);
    uint64_t v16 = 0;
    goto LABEL_34;
  }
  return v16;
}

uint64_t sub_100062C2C(uint64_t a1, int a2)
{
  return (a2 - *(_DWORD *)(a1 + 4 * *(int *)(a1 + 28) + 356));
}

BOOL sub_100062C40(uint64_t a1, unsigned int a2, int a3, int *a4)
{
  uint64_t v8 = *(uint64_t **)(a1 + 8);
  sub_1000B51F8(v8);
  if (a3) {
    int v9 = a3;
  }
  else {
    int v9 = 65533;
  }
  if (!*(_DWORD *)(a1 + 32))
  {
    uint64_t v43 = 2 * (int)(sub_1000B51F8(v8) + 1);
    size_t v51 = (_DWORD *)sub_1000CD3E8(v43, v44, v45, v46, v47, v48, v49, v50);
    int v52 = sub_1000BB100(v8, a2, v51);
    *a4 = v52;
    sub_1000CD4D0(v51, v43);
    return v52 <= v9;
  }
  uint64_t v11 = *(void *)a1;
  uint64_t v10 = *(uint64_t **)(a1 + 8);
  uint64_t v12 = 2 * (int)(sub_1000B51F8(v10) + 1);
  uint64_t v20 = (unsigned __int16 *)sub_1000CD3E8(v12, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v21 = *(int *)(a1 + 28) - 1;
  uint64_t v22 = *(__int16 **)(a1 + 8 * v21 + 616);
  int v30 = sub_1000BB100(v10, a2, v20);
  if (!*(_DWORD *)(a1 + 4 * v21 + 488))
  {
    sub_1000CD4D0(v20, v12);
    goto LABEL_24;
  }
  uint64_t v31 = (_WORD *)sub_1000CD3E8(v12, v23, v24, v25, v26, v27, v28, v29);
  sub_100005524(v11, v20, v30, v31, 0, 0, v32, v33);
  LODWORD(v11) = 0;
  if (v30 < 2) {
    goto LABEL_23;
  }
  uint64_t v34 = 0;
  int v35 = 0;
  uint64_t v11 = (v30 - 1);
  uint64_t v36 = v22;
  while (1)
  {
    int v37 = v36 + 2;
    do
    {
      int v38 = *v37;
      v37 += 2;
    }
    while (v38 < 0);
    uint64_t v39 = (unsigned __int16)v36[1];
    uint64_t v40 = (unsigned __int16)*(v37 - 1) - v39;
    if ((int)v40 >= 1) {
      break;
    }
    if (!v40) {
      goto LABEL_22;
    }
LABEL_18:
    ++v34;
    uint64_t v36 = v35;
    if (v34 == v11) {
      goto LABEL_23;
    }
  }
  uint64_t v41 = 0;
  int v35 = &v22[2 * v39];
  while (1)
  {
    int v42 = *v35;
    if ((v42 & 0x80000000) == 0 && (unsigned __int16)v31[v34] == (unsigned __int16)v42) {
      break;
    }
    ++v41;
    v35 += 2;
    if (v40 == v41) {
      goto LABEL_22;
    }
  }
  if (v41 != v40) {
    goto LABEL_18;
  }
LABEL_22:
  LODWORD(v11) = v34;
LABEL_23:
  sub_1000CD4D0(v31, v12);
  sub_1000CD4D0(v20, v12);
  v30 -= v11;
LABEL_24:
  *a4 = v30;
  return v30 <= v9 - *(_DWORD *)(a1 + 4 * *(int *)(a1 + 28) + 356);
}

uint64_t sub_100062E50(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  uint64_t v89 = *(void *)a1;
  int32x4_t v90 = *(uint64_t **)(a1 + 8);
  uint64_t v8 = *(int *)(a1 + 28) - 1;
  int v9 = (int *)(a1 + 4 * v8 + 488);
  int v10 = *v9 + a3;
  int v11 = sub_1000B51F8(v90);
  int v12 = v11;
  if (!qword_100101CC0 || !*(_DWORD *)(qword_100101CC0 + 3696))
  {
    int v81 = a4;
    uint64_t v14 = 0;
    uint64_t v15 = sub_1000C33A0(2 * v10);
    if (v15) {
      goto LABEL_7;
    }
    return 0;
  }
  int v13 = *(_DWORD *)(a1 + 4 * v8 + 552) + (v11 + 2) * a3 + *v9;
  uint64_t v14 = sub_10009CAF4(0, *(_DWORD *)(qword_100101CC0 + 4508), *(_DWORD *)(qword_100101CC0 + 4512), 0, 1, v90, v89);
  if (!sub_10009CED4(v14, v10, v13))
  {
    sub_10009CD24(v14);
    return 0;
  }
  int v81 = a4;
  uint64_t v15 = sub_1000C33A0(2 * v10);
  if (!v15) {
    return 0;
  }
LABEL_7:
  uint64_t v23 = (unsigned __int16 *)v15;
  uint64_t v24 = *(void *)(a1 + 8 * v8 + 616);
  uint64_t v25 = *(unsigned int *)(a1 + 4 * v8 + 424);
  v93[0] = 0;
  if (v14)
  {
    uint64_t v26 = (void *)sub_1000CD3E8(2 * (v12 + 1), v16, v17, v18, v19, v20, v21, v22);
    uint64_t v92 = 0;
    int v91 = 0;
    if ((int)v25 < 1) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v26 = 0;
    uint64_t v92 = 0;
    int v91 = 0;
    if ((int)v25 < 1) {
      goto LABEL_13;
    }
  }
  uint64_t v27 = 0;
  uint64_t v28 = 4 * v25;
  do
  {
    sub_100064AAC(v24, (__int16 *)(v24 + v27), (uint64_t)v23, v93, v14, (uint64_t)v26, 0);
    v27 += 4;
  }
  while (v28 != v27);
LABEL_13:
  uint64_t v29 = 2 * (v12 + 1);
  sub_1000CD4D0(v26, v29);
  int v88 = (unsigned __int16 *)sub_1000C33A0(v29);
  if (!v88)
  {
    uint64_t v31 = (uint64_t)v23;
LABEL_81:
    sub_1000C321C(v31);
    return 0;
  }
  if (v14)
  {
    uint64_t v30 = 0;
  }
  else
  {
    uint64_t v30 = sub_1000C33A0(v29);
    if (!v30)
    {
      sub_1000C321C((uint64_t)v23);
      uint64_t v31 = (uint64_t)v88;
      goto LABEL_81;
    }
  }
  uint64_t v80 = a1;
  uint64_t v32 = sub_1000C33A0(v29);
  if (!v32)
  {
    sub_1000C321C((uint64_t)v23);
    sub_1000C321C((uint64_t)v88);
    uint64_t v31 = v30;
    goto LABEL_81;
  }
  uint64_t v33 = (unsigned __int16 *)v32;
  uint64_t v34 = sub_1000C33A0(v29);
  if (!v34)
  {
    sub_1000C321C((uint64_t)v23);
    sub_1000C321C((uint64_t)v88);
    sub_1000C321C(v30);
    uint64_t v31 = (uint64_t)v33;
    goto LABEL_81;
  }
  int v35 = (unsigned __int16 *)v34;
  int v36 = *v9;
  uint64_t v79 = v30;
  if (a3 < 1) {
    goto LABEL_74;
  }
  uint64_t v37 = 0;
  int v38 = -1;
  uint64_t v83 = a3;
  do
  {
    while (1)
    {
      uint64_t v39 = *(unsigned __int16 *)(a2 + 2 * v37);
      int v86 = v36;
      int v87 = *(unsigned __int16 *)(a2 + 2 * v37);
      uint64_t v85 = v37;
      if (!v14)
      {
        HIDWORD(v92) = sub_1000BB100(v90, v39, v88);
        sub_100005524(v89, v88, SHIDWORD(v92), v33, 0, 0, v55, v56);
        v33[SHIDWORD(v92)] = 0x7FFF;
        int v40 = 0;
        int v57 = v36 - 1;
        if (v36 < 1) {
          goto LABEL_49;
        }
        while (1)
        {
          int v58 = v57 + v40;
          if (v57 + v40 < 0 != __OFADD__(v57, v40)) {
            ++v58;
          }
          int v59 = v58 >> 1;
          unsigned int v60 = v23[v58 >> 1];
          LODWORD(v92) = sub_1000BB100(v90, v60, v88);
          sub_100005524(v89, v88, v92, v35, 0, 0, v61, v62);
          v35[(int)v92] = 0x7FFF;
          signed int v63 = sub_10009BF48((unint64_t)v33);
          signed int v64 = sub_10009BF48((unint64_t)v35);
          uint64_t v65 = v63 >= v64 ? v64 : v63;
          if ((int)v65 >= 1) {
            break;
          }
LABEL_69:
          int v38 = v63 != v64;
          if (v63 >= v64) {
            goto LABEL_70;
          }
          int v38 = -1;
LABEL_53:
          if (v38 < 0) {
            int v57 = v59 - 1;
          }
          else {
            int v40 = v59 + 1;
          }
          if (v40 > v57) {
            goto LABEL_49;
          }
        }
        uint64_t v66 = v33;
        uint64_t v67 = v35;
        while (1)
        {
          unsigned int v69 = *v66++;
          unsigned int v68 = v69;
          unsigned int v70 = *v67++;
          BOOL v53 = v68 >= v70;
          BOOL v71 = v68 != v70;
          int v38 = v53 ? v71 : -1;
          if (v38) {
            break;
          }
          if (!--v65) {
            goto LABEL_69;
          }
        }
LABEL_70:
        if (!v38)
        {
          int v38 = v87 - v60;
          if (v87 == v60) {
            goto LABEL_23;
          }
        }
        goto LABEL_53;
      }
      sub_10009D254(v14, v39, 0, &v91, (int *)&v92 + 1);
      memcpy(v33, v91, 2 * SHIDWORD(v92));
      v33[SHIDWORD(v92)] = 0x7FFF;
      int v40 = 0;
      int v41 = v36 - 1;
      if (v36 >= 1)
      {
        while (1)
        {
          int v42 = v41 + v40;
          if (v41 + v40 < 0 != __OFADD__(v41, v40)) {
            ++v42;
          }
          int v43 = v42 >> 1;
          int v44 = v23[v42 >> 1];
          sub_10009D254(v14, v23[v42 >> 1], 0, &v91, (int *)&v92);
          memcpy(v35, v91, 2 * (int)v92);
          v35[(int)v92] = 0x7FFF;
          signed int v45 = sub_10009BF48((unint64_t)v33);
          signed int v46 = sub_10009BF48((unint64_t)v35);
          uint64_t v47 = v45 >= v46 ? v46 : v45;
          if ((int)v47 >= 1) {
            break;
          }
LABEL_44:
          int v38 = v45 != v46;
          if (v45 >= v46) {
            goto LABEL_45;
          }
          int v38 = -1;
LABEL_28:
          if (v38 < 0) {
            int v41 = v43 - 1;
          }
          else {
            int v40 = v43 + 1;
          }
          if (v40 > v41) {
            goto LABEL_49;
          }
        }
        uint64_t v48 = v33;
        uint64_t v49 = v35;
        while (1)
        {
          unsigned int v51 = *v48++;
          unsigned int v50 = v51;
          unsigned int v52 = *v49++;
          BOOL v53 = v50 >= v52;
          BOOL v54 = v50 != v52;
          int v38 = v53 ? v54 : -1;
          if (v38) {
            break;
          }
          if (!--v47) {
            goto LABEL_44;
          }
        }
LABEL_45:
        if (!v38)
        {
          int v38 = v87 - v44;
          if (v87 == v44) {
            goto LABEL_23;
          }
        }
        goto LABEL_28;
      }
LABEL_49:
      if (v38) {
        break;
      }
LABEL_23:
      int v36 = v86;
      uint64_t v37 = v85 + 1;
      if (v85 + 1 == v83) {
        goto LABEL_74;
      }
    }
    if (v86 > v40) {
      j__memmove(&v23[v40 + 1], &v23[v40], 2 * (v86 - v40));
    }
    v23[v40] = v87;
    int v36 = v86 + 1;
    uint64_t v37 = v85 + 1;
  }
  while (v85 + 1 != v83);
LABEL_74:
  int v72 = sub_1000B51F0((uint64_t)v90);
  uint64_t v73 = sub_1000C33A0(8 * (v72 + 1));
  if (!v73)
  {
    sub_1000C321C((uint64_t)v23);
    sub_1000C321C((uint64_t)v88);
    sub_1000C321C(v79);
    sub_1000C321C((uint64_t)v33);
    uint64_t v31 = (uint64_t)v35;
    goto LABEL_81;
  }
  uint64_t v74 = v73;
  int v75 = qword_100101CC0;
  if (qword_100101CC0)
  {
    int v76 = *(_DWORD *)(qword_100101CC0 + 3688);
    int v75 = *(_DWORD *)(qword_100101CC0 + 3680);
  }
  else
  {
    int v76 = 0;
  }
  uint64_t v77 = sub_100061748(v80, v90, v89, v36, v23, 0, 0, v76, v75, v73, v81, a5, 1, v93, v14);
  if (v14) {
    sub_10009CD24(v14);
  }
  sub_1000C321C(v74);
  sub_1000C321C((uint64_t)v35);
  sub_1000C321C((uint64_t)v33);
  sub_1000C321C(v79);
  sub_1000C321C((uint64_t)v88);
  sub_1000C321C((uint64_t)v23);
  return v77;
}

uint64_t sub_100063468(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  uint64_t v5 = *(int *)(a1 + 28) - 1;
  uint64_t v6 = a1 + 4 * v5;
  uint64_t v7 = *(int *)(v6 + 488);
  if (!v7) {
    return 1;
  }
  int v13 = *(uint64_t **)(a1 + 8);
  uint64_t v58 = *(void *)a1;
  int v59 = (int *)(v6 + 488);
  int v14 = sub_1000B51F8(v13);
  if (v14 <= *(_DWORD *)(v6 + 40)) {
    int v15 = *(_DWORD *)(v6 + 40);
  }
  else {
    int v15 = v14;
  }
  int v56 = a5;
  int v57 = v13;
  if (!qword_100101CC0 || !*(_DWORD *)(qword_100101CC0 + 3696))
  {
    uint64_t v17 = 0;
    uint64_t v18 = sub_1000C33A0(2 * v7);
    if (v18) {
      goto LABEL_11;
    }
    return 0;
  }
  int v16 = *v59 + *(_DWORD *)(a1 + 4 * v5 + 552);
  uint64_t v17 = sub_10009CAF4(0, *(_DWORD *)(qword_100101CC0 + 4508), *(_DWORD *)(qword_100101CC0 + 4512), 0, 1, v13, v58);
  if (!sub_10009CED4(v17, v7, v16))
  {
    sub_10009CD24(v17);
    return 0;
  }
  uint64_t v18 = sub_1000C33A0(2 * v7);
  if (!v18) {
    return 0;
  }
LABEL_11:
  uint64_t v26 = (unsigned __int16 *)v18;
  uint64_t v27 = *(void *)(a1 + 8 * v5 + 616);
  uint64_t v28 = *(unsigned int *)(a1 + 4 * v5 + 424);
  int v61 = 0;
  int v55 = a4;
  if (v17)
  {
    uint64_t v29 = (void *)sub_1000CD3E8(2 * (v15 + 1), v19, v20, v21, v22, v23, v24, v25);
    if ((int)v28 < 1) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v29 = 0;
    if ((int)v28 < 1) {
      goto LABEL_18;
    }
  }
  uint64_t v31 = 0;
  uint64_t v32 = 4 * v28;
  do
  {
    sub_100064AAC(v27, (__int16 *)(v27 + v31), (uint64_t)v26, &v61, v17, (uint64_t)v29, 0);
    v31 += 4;
  }
  while (v32 != v31);
LABEL_18:
  uint64_t v33 = 2 * (v15 + 1);
  sub_1000CD4D0(v29, v33);
  uint64_t v34 = sub_1000C33A0(v33);
  if (!v34)
  {
    uint64_t v46 = (uint64_t)v26;
LABEL_40:
    sub_1000C321C(v46);
    return 0;
  }
  uint64_t v35 = v34;
  uint64_t v36 = sub_1000C33A0(v33);
  if (!v36)
  {
    sub_1000C321C((uint64_t)v26);
    uint64_t v46 = v35;
    goto LABEL_40;
  }
  uint64_t v37 = v36;
  uint64_t v38 = sub_1000C33A0(v33);
  if (!v38)
  {
    sub_1000C321C((uint64_t)v26);
    sub_1000C321C(v35);
    uint64_t v46 = v37;
    goto LABEL_40;
  }
  uint64_t v39 = v38;
  uint64_t v40 = sub_1000C33A0(v33);
  if (!v40)
  {
    sub_1000C321C((uint64_t)v26);
    sub_1000C321C(v35);
    sub_1000C321C(v37);
    uint64_t v46 = v39;
    goto LABEL_40;
  }
  int v41 = *v59;
  uint64_t v53 = v40;
  uint64_t v54 = v39;
  if (a3 >= 1)
  {
    uint64_t v42 = 0;
    do
    {
      if (v41 >= 1)
      {
        uint64_t v43 = v41;
        int v44 = 2 * v41 - 2;
        signed int v45 = v26;
        while (*(unsigned __int16 *)(a2 + 2 * v42) != *v45)
        {
          v44 -= 2;
          ++v45;
          if (!--v43) {
            goto LABEL_25;
          }
        }
        j__memmove(v45, v45 + 1, v44);
        --v41;
      }
LABEL_25:
      ++v42;
    }
    while (v42 != a3);
  }
  int v47 = sub_1000B51F0((uint64_t)v57);
  uint64_t v48 = sub_1000C33A0(8 * (v47 + 1));
  if (!v48)
  {
    sub_1000C321C((uint64_t)v26);
    sub_1000C321C(v35);
    sub_1000C321C(v37);
    sub_1000C321C(v54);
    uint64_t v46 = v53;
    goto LABEL_40;
  }
  uint64_t v49 = v48;
  int v50 = qword_100101CC0;
  if (qword_100101CC0)
  {
    int v51 = *(_DWORD *)(qword_100101CC0 + 3688);
    int v50 = *(_DWORD *)(qword_100101CC0 + 3680);
  }
  else
  {
    int v51 = 0;
  }
  uint64_t v30 = sub_100061748(a1, v57, v58, v41, v26, 0, 0, v51, v50, v48, v55, v56, 1, &v60, v17);
  if (v17) {
    sub_10009CD24(v17);
  }
  sub_1000C321C(v49);
  sub_1000C321C(v53);
  sub_1000C321C(v54);
  sub_1000C321C(v37);
  sub_1000C321C(v35);
  sub_1000C321C((uint64_t)v26);
  return v30;
}

uint64_t sub_100063814(uint64_t a1)
{
  unsigned int v2 = sub_1000C085C(*(_DWORD *)(a1 + 20), 4, 0xFFFFFFFF);
  unsigned int v3 = sub_1000C085C(*(_DWORD *)(a1 + 24), 4, v2);
  unsigned int v4 = sub_1000C085C(*(_DWORD *)(a1 + 28), 4, v3);
  unsigned int v5 = sub_1000C085C(*(_DWORD *)(a1 + 32), 4, v4);
  uint64_t v6 = sub_1000C085C(*(unsigned __int8 *)(a1 + 36), 1, v5);
  uint64_t v7 = sub_1000C09B0((unint64_t *)(a1 + 40), 4, *(_DWORD *)(a1 + 28), v6);
  uint64_t v8 = sub_1000C09B0((unint64_t *)(a1 + 104), 4, *(_DWORD *)(a1 + 28), v7);
  LODWORD(v9) = *(_DWORD *)(a1 + 28);
  if ((int)v9 >= 1)
  {
    uint64_t v10 = 0;
    do
    {
      uint64_t v8 = sub_1000C09B0(*(unint64_t **)(a1 + 104 + 8 * v10 + 64), 4, *(_DWORD *)(a1 + 104 + 4 * v10), v8);
      ++v10;
      uint64_t v9 = *(int *)(a1 + 28);
    }
    while (v10 < v9);
  }
  uint64_t v11 = sub_1000C09B0((unint64_t *)(a1 + 296), 4, v9, v8);
  uint64_t v12 = sub_1000C09B0((unint64_t *)(a1 + 360), 4, *(_DWORD *)(a1 + 28), v11);
  uint64_t v13 = sub_1000C09B0((unint64_t *)(a1 + 424), 4, *(_DWORD *)(a1 + 28), v12);
  uint64_t v14 = sub_1000C09B0((unint64_t *)(a1 + 488), 4, *(_DWORD *)(a1 + 28), v13);
  uint64_t v15 = sub_1000C09B0((unint64_t *)(a1 + 552), 4, *(_DWORD *)(a1 + 28), v14);
  LODWORD(v16) = *(_DWORD *)(a1 + 28);
  if ((int)v16 >= 1)
  {
    uint64_t v17 = 0;
    do
    {
      uint64_t v18 = a1 + 4 * v17;
      if (*(int *)(v18 + 360) >= 1)
      {
        uint64_t v19 = 0;
        uint64_t v20 = 0;
        uint64_t v21 = (int *)(v18 + 360);
        uint64_t v22 = (void *)(a1 + 8 * v17 + 616);
        do
        {
          unsigned int v23 = sub_1000C085C(*(unsigned __int16 *)(*v22 + v19), 2, v15);
          LODWORD(v15) = sub_1000C085C(*(unsigned __int16 *)(*v22 + v19 + 2), 2, v23);
          ++v20;
          uint64_t v24 = *v21;
          v19 += 4;
        }
        while (v20 < v24);
        if ((int)v24 >= 2)
        {
          uint64_t v25 = 0;
          do
            LODWORD(v15) = sub_1000C085C(*(unsigned __int8 *)(*(void *)(a1 + 8 * v17 + 744) + v25++), 1, v15);
          while (v25 < *v21 - 1);
        }
      }
      uint64_t v15 = sub_1000C085C(*(unsigned __int8 *)(a1 + v17++ + 872), 1, v15);
      uint64_t v16 = *(int *)(a1 + 28);
    }
    while (v17 < v16);
  }
  return sub_1000C09B0((unint64_t *)(a1 + 872), 1, v16, v15);
}

uint64_t sub_100063A5C(uint64_t result, uint64_t a2)
{
  *(unsigned char *)(result + 36) = -1;
  if (*(int *)(result + 28) >= 1)
  {
    uint64_t v3 = result;
    uint64_t v4 = 0;
    do
    {
      uint64_t result = sub_100063B94(v3, v4, a2, 0, 0);
      unsigned int v6 = **(unsigned __int8 **)(v3 + 8 * v4 + 744);
      *(unsigned char *)(v3 + v4 + 872) = v6;
      if (v6 < *(unsigned __int8 *)(v3 + 36)) {
        *(unsigned char *)(v3 + 36) = v6;
      }
      ++v4;
      uint64_t v5 = *(int *)(v3 + 28);
    }
    while (v4 < v5);
    if ((int)v5 >= 1)
    {
      uint64_t v7 = 0;
      do
      {
        uint64_t v8 = v3 + 8 * v7;
        uint64_t v9 = *(void *)(v8 + 616);
        uint64_t v10 = *(unsigned char **)(v8 + 744);
        int v11 = *(unsigned __int8 *)(v3 + 36);
        *uint64_t v10 = 0;
        int v12 = *(unsigned __int16 *)(v9 + 2);
        uint64_t v13 = (__int16 *)(v9 + 4);
        do
        {
          int v14 = *v13;
          v13 += 2;
        }
        while (v14 < 0);
        int v15 = (unsigned __int16)*(v13 - 1);
        unsigned __int16 v16 = v15 - v12;
        if (v15 != v12)
        {
          int v17 = 0;
          do
            uint64_t result = sub_1000640AC(v9, a2, (uint64_t)v10, (unsigned __int16)(v17++ + v12), v11, 1);
          while ((unsigned __int16)v17 < v16);
        }
        ++v7;
      }
      while (v7 < *(int *)(v3 + 28));
    }
  }
  return result;
}

uint64_t sub_100063B94(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5)
{
  uint64_t v7 = a1 + 8 * (int)a2;
  uint64_t v8 = *(void *)(v7 + 616);
  uint64_t v9 = *(void *)(v7 + 744);
  uint64_t v10 = a4;
  if (*(__int16 *)(v8 + 4 * a4) < 0)
  {
    uint64_t v20 = *(void *)(a1 + 8);
    unsigned int v21 = sub_1000BD964(v20, *(unsigned __int16 *)(v8 + 4 * a4 + 2), 0);
    int v22 = sub_1000BDD20(v20, 0, 0, v21);
    if (v22 >= 255) {
      int v23 = 255;
    }
    else {
      int v23 = v22;
    }
    if (v23 <= (int)a5) {
      unsigned __int8 v19 = a5;
    }
    else {
      unsigned __int8 v19 = v23;
    }
  }
  else
  {
    uint64_t v13 = v8 + 4 * a4;
    int v14 = *(unsigned __int16 *)(v13 + 2);
    int v15 = (__int16 *)(v13 + 4);
    do
    {
      int v16 = *v15;
      v15 += 2;
    }
    while (v16 < 0);
    int v17 = (unsigned __int16)*(v15 - 1);
    unsigned __int16 v18 = v17 - v14;
    if (v17 == v14)
    {
      unsigned __int8 v19 = -1;
    }
    else
    {
      unsigned __int16 v24 = 0;
      unsigned __int8 v19 = -1;
      do
      {
        unsigned int v25 = sub_100063B94(a1, a2, a3, (unsigned __int16)(v24 + v14), a5);
        if (v25 < v19) {
          unsigned __int8 v19 = v25;
        }
        ++v24;
      }
      while (v24 < v18);
    }
  }
  *(unsigned char *)(v9 + v10) = v19;
  return v19;
}

uint64_t sub_100063CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v4 = a2;
  if (*(int *)(a1 + 28) < 2) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = *(unsigned __int8 *)(a1 + 36);
  }
  uint64_t result = sub_100063B94(a1, a2, a3, 0, v6);
  uint64_t v8 = v4;
  uint64_t v9 = *(unsigned char **)(a1 + 8 * v4 + 744);
  int v10 = *v9;
  *(unsigned char *)(a1 + v8 + 872) = v10;
  if (*(int *)(a1 + 28) >= 2) {
    int v10 = *(unsigned __int8 *)(a1 + 36);
  }
  else {
    *(unsigned char *)(a1 + 36) = v10;
  }
  uint64_t v11 = *(void *)(a1 + 8 * v8 + 616);
  *uint64_t v9 = 0;
  int v12 = *(unsigned __int16 *)(v11 + 2);
  uint64_t v13 = (__int16 *)(v11 + 4);
  do
  {
    int v14 = *v13;
    v13 += 2;
  }
  while (v14 < 0);
  int v15 = (unsigned __int16)*(v13 - 1);
  unsigned __int16 v16 = v15 - v12;
  if (v15 != v12)
  {
    int v17 = 0;
    do
      uint64_t result = sub_1000640AC(v11, a3, (uint64_t)v9, (unsigned __int16)(v17++ + v12), v10, 1);
    while ((unsigned __int16)v17 < v16);
  }
  return result;
}

uint64_t sub_100063DA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = a2 + 8 * a3;
  uint64_t v9 = *(void *)(v8 + 616);
  int v10 = *(unsigned char **)(v8 + 744);
  uint64_t result = sub_100063F38(a1, v9, a4, (uint64_t)v10, 0, a5);
  unsigned int v13 = *v10;
  *(unsigned char *)(a2 + a3 + 872) = v13;
  unsigned int v14 = *(unsigned __int8 *)(a2 + 36);
  if (v13 >= v14)
  {
    *int v10 = 0;
    int v25 = *(unsigned __int16 *)(v9 + 2);
    uint64_t v26 = (__int16 *)(v9 + 4);
    do
    {
      int v27 = *v26;
      v26 += 2;
    }
    while (v27 < 0);
    int v28 = (unsigned __int16)*(v26 - 1);
    unsigned __int16 v29 = v28 - v25;
    if (v28 != v25)
    {
      int v30 = 0;
      do
        uint64_t result = sub_1000640AC(v9, a4, (uint64_t)v10, (unsigned __int16)(v30++ + v25), v14, 1);
      while ((unsigned __int16)v30 < v29);
    }
  }
  else
  {
    *(unsigned char *)(a2 + 36) = v13;
    if (*(int *)(a2 + 28) >= 1)
    {
      uint64_t v15 = 0;
      do
      {
        uint64_t v16 = a2 + 8 * v15;
        uint64_t v17 = *(void *)(v16 + 616);
        unsigned __int16 v18 = *(unsigned char **)(v16 + 744);
        uint64_t result = sub_100063F38(a1, v17, a4, (uint64_t)v18, 0, a5);
        *unsigned __int16 v18 = 0;
        int v19 = *(unsigned __int16 *)(v17 + 2);
        uint64_t v20 = (__int16 *)(v17 + 4);
        do
        {
          int v21 = *v20;
          v20 += 2;
        }
        while (v21 < 0);
        int v22 = (unsigned __int16)*(v20 - 1);
        unsigned __int16 v23 = v22 - v19;
        if (v22 != v19)
        {
          int v24 = 0;
          do
            uint64_t result = sub_1000640AC(v17, a4, (uint64_t)v18, (unsigned __int16)(v24++ + v19), v13, 1);
          while ((unsigned __int16)v24 < v23);
        }
        ++v15;
      }
      while (v15 < *(int *)(a2 + 28));
    }
  }
  return result;
}

uint64_t sub_100063F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6)
{
  __int16 v27 = a6;
  uint64_t v9 = a5;
  int v10 = (__int16 *)(a2 + 4 * a5);
  int v11 = (unsigned __int16)v10[1];
  if (*v10 < 0)
  {
    unsigned int v19 = sub_1000BD964(a1, (unsigned __int16)v10[1], 0);
    if (a6 == 0xFFFF)
    {
      uint64_t v21 = a1;
      uint64_t v20 = 0;
      unsigned int v22 = 0;
    }
    else
    {
      uint64_t v20 = &v27;
      uint64_t v21 = a1;
      unsigned int v22 = 1;
    }
    int v25 = sub_1000BDCD4(v21, (uint64_t)v20, v22, v19);
    if (v25 >= 255) {
      unsigned __int8 v18 = -1;
    }
    else {
      unsigned __int8 v18 = v25;
    }
  }
  else
  {
    unsigned int v14 = (__int16 *)(a2 + 4 * a5 + 4);
    do
    {
      int v15 = *v14;
      v14 += 2;
    }
    while (v15 < 0);
    int v16 = (unsigned __int16)*(v14 - 1);
    unsigned __int16 v17 = v16 - v11;
    if (v16 == v11)
    {
      unsigned __int8 v18 = -1;
    }
    else
    {
      unsigned __int16 v23 = 0;
      unsigned __int8 v18 = -1;
      do
      {
        unsigned int v24 = sub_100063F38(a1, a2, a3, a4, (unsigned __int16)(v23 + v11), a6);
        if (v24 < v18) {
          unsigned __int8 v18 = v24;
        }
        ++v23;
      }
      while (v23 < v17);
    }
  }
  *(unsigned char *)(a4 + v9) = v18;
  return v18;
}

uint64_t sub_100064068(uint64_t a1, unsigned int a2, int a3)
{
  int v4 = sub_1000BDD20(a1, 0, 0, a2);
  if (v4 >= 255) {
    int v5 = 255;
  }
  else {
    int v5 = v4;
  }
  if (v5 <= a3) {
    return a3;
  }
  else {
    return v5;
  }
}

uint64_t sub_1000640AC(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, int a5, int a6)
{
  if ((int)a2 >= 0) {
    int v6 = a2;
  }
  else {
    int v6 = a2 + 1;
  }
  int v7 = (*(unsigned __int8 *)(a3 + a4) - a5 + (v6 >> 1)) / (int)a2;
  *(unsigned char *)(a3 + a4) = v7;
  if (*(__int16 *)(result + 4 * a4) < 0) {
    return result;
  }
  uint64_t v10 = result;
  int v7 = v7;
  if (qword_100101CC0)
  {
    unsigned int v11 = *(unsigned __int8 *)(qword_100101CC0 + 3168);
    if (*(void *)(qword_100101CC0 + 3176) < a6) {
      goto LABEL_11;
    }
LABEL_9:
    if (v11 < v7)
    {
      *(unsigned char *)(a3 + a4) = v11;
      int v7 = v11;
    }
    goto LABEL_11;
  }
  unsigned int v11 = 0;
  if (a6 <= 0) {
    goto LABEL_9;
  }
LABEL_11:
  int v12 = a5 + v7 * a2;
  if (v12 >= 255) {
    LOBYTE(v12) = -1;
  }
  uint64_t v13 = result + 4 * a4;
  int v14 = *(unsigned __int16 *)(v13 + 2);
  int v15 = (__int16 *)(v13 + 4);
  do
  {
    int v16 = *v15;
    v15 += 2;
  }
  while (v16 < 0);
  int v17 = (unsigned __int16)*(v15 - 1);
  unsigned __int16 v18 = v17 - v14;
  if (v17 != v14)
  {
    int v19 = 0;
    uint64_t v20 = (a6 + 1);
    uint64_t v21 = v12;
    do
      uint64_t result = sub_1000640AC(v10, a2, a3, (unsigned __int16)(v19++ + v14), v21, v20);
    while ((unsigned __int16)v19 < v18);
  }
  return result;
}

uint64_t sub_1000641C8(uint64_t result, uint64_t a2)
{
  if (*(_DWORD *)(result + 16))
  {
    uint64_t v2 = qword_100101CC0;
    if (qword_100101CC0)
    {
      if (*(_DWORD *)(qword_100101CC0 + 5360))
      {
        *(unsigned char *)(result + 36) = -1;
        if (!*(_DWORD *)(v2 + 5360)) {
          return result;
        }
        return sub_100063A5C(result, a2);
      }
      if (*(_DWORD *)(qword_100101CC0 + 5264)) {
        char v3 = -1;
      }
      else {
        char v3 = 0;
      }
      *(unsigned char *)(result + 36) = v3;
      if (*(_DWORD *)(v2 + 5360)) {
        return sub_100063A5C(result, a2);
      }
    }
    else
    {
      *(unsigned char *)(result + 36) = 0;
    }
  }
  return result;
}

uint64_t sub_100064220(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_100064228(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_100064230(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 36);
}

uint64_t sub_100064238(uint64_t a1, int a2)
{
  return *(void *)(a1 + 8 * a2 + 616);
}

uint64_t sub_100064244(uint64_t a1, int a2)
{
  return *(void *)(a1 + 8 * a2 + 168);
}

uint64_t sub_100064250(uint64_t a1, int a2)
{
  return *(void *)(a1 + 8 * a2 + 744);
}

uint64_t sub_10006425C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

int8x8_t *sub_100064264(uint64_t a1, uint64_t a2, uint8x8_t a3)
{
  if (!a2) {
    return 0;
  }
  uint64_t result = (int8x8_t *)sub_1000BFD58(a2, *(_DWORD *)(a1 + 32), a3);
  if (result)
  {
    if (*(_DWORD *)(a1 + 32) != 1) {
      return (int8x8_t *)1;
    }
    uint64_t v7 = *(int *)(a1 + 28) - 1;
    uint64_t v8 = a1 + 4 * v7;
    uint64_t result = (int8x8_t *)sub_1000BFD58(a2, *(_DWORD *)(v8 + 40), v6);
    if (result)
    {
      __int32 v11 = *(_DWORD *)(v8 + 104);
      uint64_t v10 = (_DWORD *)(v8 + 104);
      uint64_t result = (int8x8_t *)sub_1000BFD58(a2, v11, v9);
      if (result)
      {
        uint64_t v13 = a1 + 4 * v7;
        uint64_t result = (int8x8_t *)sub_1000BFD58(a2, *(_DWORD *)(v13 + 296), v12);
        if (result)
        {
          uint64_t result = (int8x8_t *)sub_1000BFD58(a2, *(_DWORD *)(v13 + 360), v14);
          if (result)
          {
            uint64_t v16 = a1 + 4 * v7;
            uint64_t result = (int8x8_t *)sub_1000BFD58(a2, *(_DWORD *)(v16 + 424), v15);
            if (result)
            {
              uint64_t result = (int8x8_t *)sub_1000BFD58(a2, *(_DWORD *)(v16 + 488), v17);
              if (result)
              {
                uint64_t result = (int8x8_t *)sub_1000BFD58(a2, *(_DWORD *)(a1 + 4 * v7 + 552), v18);
                if (result)
                {
                  uint64_t result = (int8x8_t *)sub_1000BFD58(a2, *(unsigned __int8 *)(a1 + v7 + 872), v19);
                  if (result)
                  {
                    uint64_t v21 = *(void **)(a1 + 8 * v7 + 168);
                    unsigned int v22 = v21 ? *v10 : 0;
                    uint64_t result = sub_1000BFDB0(a2, v21, v22, 4, v20);
                    if (result)
                    {
                      unsigned int v24 = (_DWORD *)(v13 + 296);
                      int v25 = *(void **)(a1 + 8 * v7 + 616);
                      unsigned int v26 = v25 ? *v24 : 0;
                      uint64_t result = sub_1000BFDB0(a2, v25, v26, 4, v23);
                      if (result)
                      {
                        int v28 = *(void **)(a1 + 8 * v7 + 744);
                        unsigned int v29 = v28 ? *v24 : 0;
                        uint64_t result = sub_1000BFDB0(a2, v28, v29, 1, v27);
                        if (result) {
                          return (int8x8_t *)1;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000643E0(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t result = sub_1000BFC50(a2, "blt0", a3);
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = sub_100064264(a1, result, v5);
    sub_1000BFD14(v6);
    return (uint64_t)v7;
  }
  return result;
}

uint64_t sub_100064438(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  char v3 = (_DWORD *)(a1 + 32);
  if (*(_DWORD *)(a1 + 32)) {
    return 0;
  }
  uint64_t result = sub_1000BEECC(a2, v3);
  if (result)
  {
    if (*v3 != 1) {
      return 1;
    }
    uint64_t v6 = *(int *)(a1 + 28);
    uint64_t v7 = a1 + 4 * v6;
    uint64_t result = sub_1000BEECC(a2, (void *)(v7 + 40));
    if (result)
    {
      uint64_t v8 = (_DWORD *)(v7 + 104);
      uint64_t result = sub_1000BEECC(a2, (void *)(v7 + 104));
      if (result)
      {
        uint64_t v9 = a1 + 4 * v6;
        uint64_t v10 = (_DWORD *)(v9 + 296);
        uint64_t result = sub_1000BEECC(a2, (void *)(v9 + 296));
        if (result)
        {
          uint64_t result = sub_1000BEECC(a2, (void *)(v9 + 360));
          if (result)
          {
            uint64_t v11 = a1 + 4 * v6;
            uint64_t result = sub_1000BEECC(a2, (void *)(v11 + 424));
            if (result)
            {
              uint64_t result = sub_1000BEECC(a2, (void *)(v11 + 488));
              if (result)
              {
                uint64_t result = sub_1000BEECC(a2, (void *)(a1 + 4 * v6 + 552));
                if (result)
                {
                  uint64_t result = sub_1000BEF1C(a2, (unsigned char *)(a1 + v6 + 872));
                  if (result)
                  {
                    int v14 = 0;
                    if (!sub_1000BF078(a2, 4, (uint64_t *)(a1 + 8 * v6 + 168), &v14)
                      || *(void *)(a1 + 8 * v6 + 168) && v14 != *v8)
                    {
                      return 0;
                    }
                    int v13 = 0;
                    if (!sub_1000BF078(a2, 4, (uint64_t *)(a1 + 8 * v6 + 616), &v13)
                      || *(void *)(a1 + 8 * v6 + 616) && v13 != *v10)
                    {
                      return 0;
                    }
                    int v12 = 0;
                    if (!sub_1000BF078(a2, 1, (uint64_t *)(a1 + 8 * v6 + 744), &v12)
                      || *(void *)(a1 + 8 * v6 + 744) && v12 != *v10)
                    {
                      return 0;
                    }
                    ++*(_DWORD *)(a1 + 28);
                    return 1;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t *sub_100064618(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result = sub_1000BEC58(a2, "blt0", a3, a4, a5, a6, a7, a8);
  if (result)
  {
    uint64_t v10 = (uint64_t)result;
    uint64_t v11 = sub_100064438(a1, (uint64_t)result);
    sub_1000BED3C(v10);
    return (uint64_t *)v11;
  }
  return result;
}

uint64_t sub_100064670(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v13 = sub_1000C33A0(888);
  if (v13)
  {
    int v14 = sub_1000BEC58(a1, "blt0", a2, v8, v9, v10, v11, v12);
    if (!v14) {
      return 0;
    }
    uint64_t v15 = (uint64_t)v14;
    *(void *)uint64_t v13 = a3;
    *(void *)(v13 + 8) = a4;
    *(_DWORD *)(v13 + 16) = 1;
    if (!sub_1000BEECC((uint64_t)v14, (void *)(v13 + 20))) {
      goto LABEL_23;
    }
    if (!sub_1000BEECC(v15, (void *)(v13 + 24))) {
      goto LABEL_23;
    }
    uint64_t v16 = (int *)(v13 + 28);
    if (!sub_1000BEECC(v15, (void *)(v13 + 28))
      || !sub_1000BEECC(v15, (void *)(v13 + 32))
      || !sub_1000BEF1C(v15, (unsigned char *)(v13 + 36))
      || !sub_1000BEFCC(v15, (void *)(v13 + 40), 16, 4)
      || !sub_1000BEFCC(v15, (void *)(v13 + 104), 16, 4))
    {
      goto LABEL_23;
    }
    if (*v16 >= 1)
    {
      uint64_t v17 = 0;
      uint8x8_t v18 = (uint64_t *)(v13 + 168);
      do
      {
        LODWORD(v27) = 0;
        if (!sub_1000BF078(v15, 4, v18, (int *)&v27)
          || *v18 && v27 != *(_DWORD *)(v13 + 104 + 4 * v17))
        {
          break;
        }
        ++v17;
        ++v18;
      }
      while (v17 < *v16);
    }
    if (!sub_1000BEFCC(v15, (void *)(v13 + 296), 16, 4)
      || !sub_1000BEFCC(v15, (void *)(v13 + 360), 16, 4)
      || !sub_1000BEFCC(v15, (void *)(v13 + 424), 16, 4)
      || !sub_1000BEFCC(v15, (void *)(v13 + 488), 16, 4)
      || !sub_1000BEFCC(v15, (void *)(v13 + 552), 16, 4))
    {
LABEL_23:
      sub_1000BED3C(v15);
LABEL_24:
      sub_100061280((_DWORD *)v13);
      return 0;
    }
    if (*v16 >= 1)
    {
      uint64_t v19 = 0;
      uint64_t v20 = v13 + 616;
      while (1)
      {
        uint64_t v27 = 0;
        int v26 = 0;
        if (!sub_1000BF078(v15, 2, &v27, &v26) || v27 && v26 != 2 * *(_DWORD *)(v20 + 4 * v19 - 320)) {
          break;
        }
        *(void *)(v20 + 8 * v19++) = v27;
        uint64_t v22 = *v16;
        if (v19 >= v22) {
          goto LABEL_32;
        }
      }
      LODWORD(v22) = *v16;
LABEL_32:
      if ((int)v22 >= 1)
      {
        uint64_t v23 = 0;
        unsigned int v24 = (uint64_t *)(v13 + 744);
        do
        {
          LODWORD(v27) = 0;
          if (!sub_1000BF078(v15, 1, v24, (int *)&v27)
            || *v24 && v27 != *(_DWORD *)(v13 + 296 + 4 * v23))
          {
            break;
          }
          ++v23;
          ++v24;
        }
        while (v23 < *v16);
      }
    }
    BOOL v25 = sub_1000BEFCC(v15, (void *)(v13 + 872), 16, 1);
    sub_1000BED3C(v15);
    if (!v25) {
      goto LABEL_24;
    }
  }
  return v13;
}

uint64_t sub_100064958(unsigned __int16 *a1, unsigned __int16 *a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v10 = *a1;
  int v11 = *a2;
  if (v10 == v11)
  {
    int v12 = *a1;
    while (v12 != 0xFFFF)
    {
      int v13 = a1[1];
      ++a1;
      int v12 = v13;
      int v14 = a2[1];
      ++a2;
      if (v12 != v14) {
        goto LABEL_5;
      }
    }
    return (a3 - a4);
  }
  else
  {
LABEL_5:
    if (v10 == v11) {
      uint64_t v15 = -1;
    }
    else {
      uint64_t v15 = 0;
    }
    uint64_t v16 = v15;
    uint64_t v17 = &a2[v16];
    uint8x8_t v18 = &a1[v16];
    while (1)
    {
      uint64_t v19 = *v18;
      int v20 = *v17;
      if (v19 == 0xFFFF) {
        break;
      }
      if (v20 == 0xFFFF) {
        return 1;
      }
      unsigned int v22 = v18[1];
      ++v18;
      unsigned int v21 = v22;
      if (v22 == 0xFFFF) {
        uint64_t v23 = 0;
      }
      else {
        uint64_t v23 = v21;
      }
      unsigned int v28 = sub_100005304(qword_100101D10, *(v18 - 2), v19, v23, a5, a6, a7, a8);
      if (v17[1] == 0xFFFF) {
        uint64_t v29 = 0;
      }
      else {
        uint64_t v29 = v17[1];
      }
      unsigned int v30 = sub_100005304(qword_100101D10, *(v17 - 1), *v17, v29, v24, v25, v26, v27);
      if (v28 < v30) {
        uint64_t result = 0xFFFFFFFFLL;
      }
      else {
        uint64_t result = v28 != v30;
      }
      ++v17;
      if (result) {
        return result;
      }
    }
    if (v20 == 0xFFFF) {
      return (a3 - a4);
    }
    else {
      return 0xFFFFFFFFLL;
    }
  }
}

uint64_t sub_100064AAC(uint64_t result, __int16 *a2, uint64_t a3, _DWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = result;
  if (a5 && (int)a7 >= 1) {
    *(_WORD *)(a6 + 2 * (a7 - 1)) = *a2;
  }
  if (*a2 < 0)
  {
    uint64_t v20 = (unsigned __int16)a2[1];
    *(_WORD *)(a3 + 2 * (int)(*a4)++) = v20;
    if (a5)
    {
      *(_WORD *)(a6 + 2 * (int)a7) = 0x7FFF;
      return sub_10009D8F0(a5, v20, a6, a7);
    }
  }
  else
  {
    int v13 = a2 + 2;
    do
    {
      int v14 = *v13;
      v13 += 2;
    }
    while (v14 < 0);
    int v15 = (unsigned __int16)*(v13 - 1);
    int v16 = (unsigned __int16)a2[1];
    if (v15 - v16 >= 1)
    {
      uint64_t v17 = 0;
      uint64_t v18 = (a7 + 1);
      int v19 = v15 - v16;
      do
      {
        uint64_t result = sub_100064AAC(v12, v12 + 4 * (v17 + (unsigned __int16)a2[1]), a3, a4, a5, a6, v18);
        ++v17;
      }
      while (v19 != v17);
    }
  }
  return result;
}

uint64_t sub_100064BE0(uint64_t result)
{
  if (result)
  {
    v1 = (uint64_t *)result;
    sub_1000760C8(*(void *)(result + 144));
    sub_10007BDDC(v1[15]);
    sub_1000C321C(v1[11]);
    sub_10007C538(v1[13]);
    sub_10007C538(v1[9]);
    sub_10007BDDC(v1[7]);
    sub_10007C538(v1[5]);
    sub_10007C538(v1[2]);
    return sub_1000C321C((uint64_t)v1);
  }
  return result;
}

uint64_t sub_100064C5C(uint64_t a1)
{
  unsigned int v2 = sub_1000C0758(*(_DWORD *)a1, 0xFFFFFFFF);
  unsigned int v3 = sub_1000C0758(*(_DWORD *)(a1 + 24), v2);
  unsigned int v4 = sub_1000C0758(*(_DWORD *)(a1 + 128), v3);
  unsigned int v5 = sub_10007C594(*(void *)(a1 + 8));
  unsigned int v6 = sub_1000C085C(v5, 4, v4);
  unsigned int v7 = sub_10007C594(*(void *)(a1 + 32));
  unsigned int v8 = sub_1000C085C(v7, 4, v6);
  unsigned int v9 = sub_10007BE2C(*(void *)(a1 + 48));
  unsigned int v10 = sub_1000C085C(v9, 4, v8);
  unsigned int v11 = sub_10007C594(*(void *)(a1 + 64));
  unsigned int v12 = sub_1000C085C(v11, 4, v10);
  uint64_t v13 = *(void *)(a1 + 96);
  if (v13)
  {
    unsigned int v14 = sub_10007C594(v13);
    unsigned int v12 = sub_1000C085C(v14, 4, v12);
  }
  int v15 = *(unint64_t **)(a1 + 80);
  if (v15)
  {
    unsigned int v16 = sub_1000C09B0(v15, 2, 256, 0xFFFFFFFFLL);
    unsigned int v12 = sub_1000C085C(v16, 4, v12);
  }
  uint64_t v17 = *(void *)(a1 + 112);
  if (v17)
  {
    unsigned int v18 = sub_10007BE2C(v17);
    unsigned int v12 = sub_1000C085C(v18, 4, v12);
  }
  unsigned int v19 = sub_10007A0FC(*(void *)(a1 + 136));
  return sub_1000C085C(v19, 4, v12);
}

uint64_t *sub_100064D84(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8 = sub_1000BEC58(a1, "blid0", a2, a4, a5, a6, a7, a8);
  if (!v8) {
    return 0;
  }
  uint64_t v9 = (uint64_t)v8;
  unsigned int v10 = (uint64_t *)sub_1000C33A0(152);
  if (!v10)
  {
LABEL_22:
    sub_1000BED3C(v9);
    return v10;
  }
  int v22 = 0;
  if (sub_1000BEECC(v9, v10) && sub_1000BEECC(v9, v10 + 3) && sub_1000BEECC(v9, v10 + 16))
  {
    uint64_t v11 = sub_10007C684(v9);
    v10[2] = v11;
    if (v11)
    {
      v10[1] = v11;
      uint64_t v12 = sub_10007C684(v9);
      v10[5] = v12;
      if (v12)
      {
        v10[4] = v12;
        uint64_t v13 = sub_10007BE80(v9);
        v10[7] = v13;
        if (v13)
        {
          v10[6] = v13;
          uint64_t v14 = sub_10007C684(v9);
          v10[9] = v14;
          if (v14)
          {
            v10[8] = v14;
            int v21 = 0;
            int v15 = v10 + 11;
            if (sub_1000BF078(v9, 2, v10 + 11, &v21))
            {
              uint64_t v16 = *v15;
              if (!*v15 || v21 == 256)
              {
                if (v16) {
                  v10[10] = v16;
                }
                if (sub_1000BEECC(v9, &v22))
                {
                  if (v22 != 1) {
                    goto LABEL_20;
                  }
                  uint64_t v17 = sub_10007C684(v9);
                  v10[13] = v17;
                  if (v17)
                  {
                    v10[12] = v17;
                    uint64_t v18 = sub_10007BE80(v9);
                    v10[15] = v18;
                    if (v18)
                    {
                      v10[14] = v18;
LABEL_20:
                      unsigned int v19 = sub_10007A118(v9);
                      v10[18] = (uint64_t)v19;
                      if (v19)
                      {
                        v10[17] = (uint64_t)v19;
                        goto LABEL_22;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  sub_1000BED3C(v9);
  sub_100064BE0((uint64_t)v10);
  return 0;
}

uint64_t sub_100064F28(uint64_t a1)
{
  return *(unsigned int *)(a1 + 552);
}

uint64_t sub_100064F30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 8892) = a2;
  return result;
}

uint64_t sub_100064F38(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4 = *(unsigned int *)(a1 + 9364);
  if ((int)v4 < 1)
  {
    uint64_t result = 0;
    if ((int)v4 >= *(_DWORD *)(a1 + 9360))
    {
LABEL_10:
      uint64_t result = 0;
      *(_DWORD *)(a1 + 552) = 3;
    }
    else
    {
LABEL_12:
      *(void *)(*(void *)(a1 + 9328) + 8 * result) = *(void *)(a3 + 24);
      *(_WORD *)(*(void *)(a1 + 9336) + 2 * result) = a2;
      *(_DWORD *)(*(void *)(a1 + 9344) + 4 * result) = (*(void *)(a3 + 8) >> 35) & 0x3FFFF;
      uint64_t v7 = *(void *)(a1 + 9352);
      if (v7) {
        *(_DWORD *)(v7 + 4 * result) = *(_DWORD *)(a1 + 9376);
      }
      ++*(_DWORD *)(a1 + 9364);
    }
  }
  else
  {
    uint64_t result = 0;
    while (1)
    {
      if (((*(void *)(a3 + 8) >> 35) & 0x3FFFF) == *(_DWORD *)(*(void *)(a1 + 9344) + 4 * result)
        && *(unsigned __int16 *)(*(void *)(a1 + 9336) + 2 * result) == a2)
      {
        uint64_t v6 = *(void *)(a1 + 9352);
        if (!v6 || *(_DWORD *)(v6 + 4 * result) == *(_DWORD *)(a1 + 9376)) {
          break;
        }
      }
      if (v4 == ++result)
      {
        uint64_t result = v4;
        if ((int)v4 < *(_DWORD *)(a1 + 9360)) {
          goto LABEL_12;
        }
        goto LABEL_10;
      }
    }
  }
  return result;
}

uint64_t sub_100065018(uint64_t result)
{
  *(_DWORD *)(result + 552) = 3;
  return result;
}

uint64_t sub_100065024(uint64_t a1)
{
  unsigned int v2 = (_WORD *)(a1 + 9048);
  int v3 = *(__int16 *)(a1 + 9048);
  int v4 = (__int16)(*(_WORD *)(a1 + 9048) + *(_WORD *)(a1 + 9064));
  if (v4 >= *(__int16 *)(a1 + 9062)) {
    int v4 = *(__int16 *)(a1 + 9062);
  }
  if ((__int16)(*(_WORD *)(a1 + 9050) + *(_WORD *)(a1 + 9066)) >= v4) {
    __int16 v5 = v4;
  }
  else {
    __int16 v5 = *(_WORD *)(a1 + 9050) + *(_WORD *)(a1 + 9066);
  }
  int v6 = *(_DWORD *)(a1 + 9212);
  uint64_t v7 = *(int **)(a1 + 9240);
  if (v6 >= v7[1]) {
    return (__int16)(v5 - v3);
  }
  else {
    return (__int16)(sub_10005EF28(v7, v6, v3, v5) - *v2);
  }
}

uint64_t sub_1000650C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8 = a5 - 1;
  if ((int)a5 < 1) {
    return 0;
  }
  uint64_t v9 = (unsigned __int8 *)a7;
  unsigned int v11 = a5;
  uint64_t v12 = (_WORD *)(a1 + 9068);
  __int16 v13 = sub_10003A104(a1, a2, a3, a4, a5, a6, a7, a8);
  if (*(_DWORD *)(a6 + 4 * v8) == -4) {
    unsigned int v14 = v8;
  }
  else {
    unsigned int v14 = v11;
  }
  uint64_t v15 = v14 - 1;
  __int16 v16 = v12[1] + v13 + *v12 * (v14 - 1);
  if (v14 >= 2 && v9 != 0)
  {
    do
    {
      if (*v9++) {
        v16 += v12[2];
      }
      --v15;
    }
    while (v15);
  }
  return v16;
}

uint64_t sub_10006517C(uint64_t result, uint64_t a2, int a3)
{
  if (qword_100101CC0)
  {
    if (*(_DWORD *)(qword_100101CC0 + 5308))
    {
      if (*(unsigned char *)(qword_100101CC0 + 4220))
      {
        uint64_t v3 = result;
        if (*(void *)(result + 9296))
        {
          uint64_t v5 = sub_10002BD6C(result + 680, *(_DWORD *)(result + 8872));
          uint64_t v36 = v3;
          if (*(_DWORD *)(v3 + 8900))
          {
            int v6 = *(_DWORD *)(v3 + 8872);
            if (v6 >= 1 && a3 >= 1)
            {
              uint64_t v7 = 0;
              int v8 = -1;
              int v9 = -1;
              do
              {
                if (*(void *)(*(void *)(v3 + 9296) + 8 * v7))
                {
                  uint64_t v10 = 0;
                  uint64_t v35 = (void *)(v3 + 8 * v7 + 680);
                  uint64_t v11 = a2 + 384;
                  do
                  {
                    if (*v35 == *(void *)(a2 + 1096 * v10 + 16))
                    {
                      uint64_t v12 = a2 + 1096 * v10;
                      int v14 = *(_DWORD *)(v12 + 8);
                      __int16 v13 = (int *)(v12 + 8);
                      if (v14 >= 1)
                      {
                        uint64_t v15 = 0;
                        do
                        {
                          __int16 v16 = (char *)sub_100031CE0(v5, *(_DWORD *)(v11 + 4 * v15));
                          if (sub_100034A6C(v16))
                          {
                            int v17 = *(_DWORD *)(v11 + 4 * v15);
                            if (v17 != v8)
                            {
                              int v9 = sub_100027A20(*(void *)(*(void *)(v36 + 9288) + 8 * v7), *(_DWORD *)(v11 + 4 * v15));
                              int v8 = v17;
                            }
                            *(_DWORD *)(v11 + 4 * v15) = v9;
                          }
                          ++v15;
                        }
                        while (v15 < *v13);
                      }
                    }
                    ++v10;
                    v11 += 1096;
                  }
                  while (v10 != a3);
                  uint64_t v3 = v36;
                  int v6 = *(_DWORD *)(v36 + 8872);
                }
                ++v7;
              }
              while (v7 < v6);
            }
          }
          if (qword_100101CC0) {
            uint64_t v18 = (unsigned __int8 *)(qword_100101CC0 + 4220);
          }
          else {
            uint64_t v18 = 0;
          }
          uint64_t result = sub_100031BE8(v5, v18);
          if (result != -1)
          {
            int v19 = *(_DWORD *)(v3 + 8872);
            if (v19 >= 1 && a3 >= 1)
            {
              int v20 = result;
              for (uint64_t i = 0; i < v19; ++i)
              {
                if (*(void *)(*(void *)(v3 + 9296) + 8 * i))
                {
                  uint64_t v22 = 0;
                  uint64_t v34 = i;
                  uint64_t v23 = (void *)(v3 + 8 * i + 680);
                  uint64_t v24 = a2;
                  do
                  {
                    uint64_t v25 = a2;
                    if (*v23 == *(void *)(a2 + 1096 * v22 + 16))
                    {
                      uint64_t v26 = a2 + 1096 * v22;
                      int v28 = *(_DWORD *)(v26 + 8);
                      uint64_t v27 = (int *)(v26 + 8);
                      if (v28 >= 1)
                      {
                        uint64_t v29 = 0;
                        int v30 = 0;
                        do
                        {
                          uint64_t v31 = v24 + 4 * v29;
                          uint64_t v32 = (char *)sub_100031CE0(v5, *(_DWORD *)(v31 + 384));
                          uint64_t result = sub_100034A6C(v32);
                          if (result)
                          {
                            *(_DWORD *)(v31 + 384) = v20;
                            if (v30) {
                              *(unsigned char *)(v24 + v29 + 323) = 0;
                            }
                          }
                          ++v29;
                          int v30 = result;
                        }
                        while (v29 < *v27);
                      }
                    }
                    ++v22;
                    v24 += 1096;
                    a2 = v25;
                  }
                  while (v22 != a3);
                  uint64_t v3 = v36;
                  int v19 = *(_DWORD *)(v36 + 8872);
                  uint64_t i = v34;
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10006544C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t result = sub_100025D50(*(unsigned int **)(a1 + 680));
  if (result == 3 && *(void *)(a1 + 9296))
  {
    int v7 = *(_DWORD *)(a1 + 8872);
    if (v7 >= 1 && a3 >= 1)
    {
      uint64_t v9 = 0;
      do
      {
        if (*(void *)(*(void *)(a1 + 9296) + 8 * v9))
        {
          uint64_t v10 = *(void *)(*(void *)(a1 + 9288) + 8 * v9);
          uint64_t v11 = a3;
          uint64_t v12 = (void *)(a2 + 16);
          do
          {
            if (*(void *)(a1 + 8 * v9 + 680) == *v12) {
              void *v12 = v10;
            }
            v12 += 137;
            --v11;
          }
          while (v11);
          int v7 = *(_DWORD *)(a1 + 8872);
        }
        ++v9;
      }
      while (v9 < v7);
    }
  }
  return result;
}

uint64_t sub_100065514(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 472);
  *(_OWORD *)(a2 + 88) = 0u;
  uint64_t v5 = a2 + 88;
  *(_DWORD *)(a2 + 120) = 0;
  *(_OWORD *)(a2 + 104) = 0u;
  if (sub_100039EB4(a1) == 3)
  {
    int v6 = (_DWORD *)(a2 + 12);
  }
  else
  {
    if (v4)
    {
      if (qword_100101CC0) {
        int v7 = *(_DWORD *)(qword_100101CC0 + 1512);
      }
      else {
        int v7 = 0;
      }
      sub_1000D6EF8(v4, v7, *(_DWORD *)(a1 + 452), a1 + 448);
      int v8 = (uint64_t *)(v4 + 128);
    }
    else
    {
      int v8 = (uint64_t *)(a1 + 9000);
    }
    int v6 = (_DWORD *)(a2 + 12);
    int v9 = sub_10009F2E8(*v8, a2 + 16, 0, 0, 0, 0, 36, (_DWORD *)(a2 + 4), (_DWORD *)(a2 + 12), 0, *(_DWORD *)(a1 + 8884), v5, 0);
    int v10 = *(_DWORD *)(a2 + 4);
    if (v10 && v10 <= 36 && v9) {
      return 1;
    }
    *(_DWORD *)(a1 + 552) = 3;
  }
  uint64_t result = 0;
  *int v6 = 0x40000000;
  return result;
}

uint64_t sub_10006562C(uint64_t a1)
{
  return sub_1000D34EC(*(long long **)(a1 + 472));
}

uint64_t sub_100065634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v9 = a2;
  uint64_t v15 = 0;
  uint64_t v11 = 2 * (int)a2;
  uint64_t v12 = (void *)sub_1000CD3E8(v11, a2, a3, a4, a5, a6, a7, a8);
  sub_10009F2E8(*(void *)(a1 + 9000), (uint64_t)v12, 0, 0, 0, 0, v9, (_DWORD *)&v15 + 1, &v15, 0, 0, 0, 0);
  if (SHIDWORD(v15) >= 1)
  {
    uint64_t v13 = 0;
    do
    {
      *(_DWORD *)(a3 + 4 * v13) = sub_1000BD96C(*(void *)(a1 + 376), *((unsigned __int16 *)v12 + v13));
      ++v13;
    }
    while (v13 < SHIDWORD(v15));
  }
  sub_1000CD4D0(v12, v11);
  return HIDWORD(v15);
}

uint64_t sub_1000656FC(uint64_t a1)
{
  return sub_10009CE2C(*(void *)(a1 + 9256));
}

uint64_t sub_100065704(uint64_t a1)
{
  return sub_10009CE2C(*(void *)(a1 + 9256));
}

uint64_t sub_10006570C(uint64_t a1)
{
  *(_DWORD *)(a1 + 552) = 4;
  return 1;
}

uint64_t sub_100065748(uint64_t a1)
{
  *(_DWORD *)(a1 + 552) = 4;
  return 1;
}

uint64_t sub_10006577C(uint64_t a1)
{
  uint64_t v2 = qword_100101CC0;
  if (!*(void *)(a1 + 576))
  {
    if (!qword_100101CC0)
    {
      int v3 = 0;
      int v4 = 0;
      *(_DWORD *)(a1 + 584) = 0;
      goto LABEL_10;
    }
    *(_DWORD *)(a1 + 584) = *(void *)(qword_100101CC0 + 1576);
    uint64_t v5 = *(void *)(v2 + 1576);
    if (v5 < 1) {
      goto LABEL_3;
    }
    uint64_t result = sub_1000C33A0(4 * v5);
    *(void *)(a1 + 576) = result;
    if (!result) {
      return result;
    }
    uint64_t v2 = qword_100101CC0;
    if (qword_100101CC0) {
      goto LABEL_3;
    }
LABEL_8:
    int v3 = 0;
    int v4 = 0;
    goto LABEL_10;
  }
  if (!qword_100101CC0) {
    goto LABEL_8;
  }
LABEL_3:
  int v3 = *(_DWORD *)(v2 + 4508);
  int v4 = *(_DWORD *)(v2 + 4512);
LABEL_10:
  uint64_t result = sub_10009CAF4(1, v3, v4, *(_DWORD *)(a1 + 556), 1, *(uint64_t **)(a1 + 376), *(void *)(a1 + 384));
  *(void *)(a1 + 9256) = result;
  if (result)
  {
    if (!qword_100101CC0) {
      return 1;
    }
    uint64_t v7 = *(void *)(qword_100101CC0 + 2288);
    if (v7 < 1) {
      return 1;
    }
    uint64_t result = sub_1000521DC(v7, 8 * (int)v7, *(void *)(a1 + 384));
    *(void *)(a1 + 9264) = result;
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_100065850(uint64_t a1)
{
  int v2 = sub_1000B51F0(*(void *)(a1 + 376));
  if (*(_DWORD *)(a1 + 8896))
  {
    int v3 = qword_100101CC0;
    if (qword_100101CC0) {
      int v3 = *(_DWORD *)(qword_100101CC0 + 4176);
    }
    int v4 = v2 + *(_DWORD *)(a1 + 9360) + v3 + 2;
  }
  else
  {
    int v4 = qword_100101CC0;
    if (qword_100101CC0) {
      int v4 = *(_DWORD *)(qword_100101CC0 + 4160);
    }
  }
  signed int v5 = (v4 + 255) >> 8;
  if (v5 <= *(_DWORD *)(a1 + 608)) {
    return 1;
  }
  uint64_t result = sub_1000C33A0((8 * v5));
  if (!result) {
    return result;
  }
  uint64_t v7 = (void *)result;
  if (!*(_DWORD *)(a1 + 556))
  {
    int v8 = 0;
    signed int v9 = *(_DWORD *)(a1 + 608);
    if (v9 >= v5) {
      goto LABEL_20;
    }
    goto LABEL_14;
  }
  int v8 = (void *)sub_1000C33A0((8 * v5));
  if (!v8)
  {
    uint64_t v16 = (uint64_t)v7;
LABEL_33:
    sub_1000C321C(v16);
    return 0;
  }
  signed int v9 = *(_DWORD *)(a1 + 608);
  if (v9 < v5)
  {
LABEL_14:
    uint64_t v10 = v9;
    uint64_t v11 = &v7[v10];
    uint64_t v12 = &v8[v10];
    while (1)
    {
      uint64_t v13 = sub_1000C33A0(6144);
      *uint64_t v11 = v13;
      if (!v13) {
        break;
      }
      if (*(_DWORD *)(a1 + 556))
      {
        uint64_t v14 = sub_1000C33A0(256);
        uint64_t *v12 = v14;
        if (!v14)
        {
          sub_1000C321C(*v11);
          break;
        }
      }
      ++v9;
      ++v11;
      ++v12;
      if (v5 == v9) {
        goto LABEL_21;
      }
    }
  }
LABEL_20:
  if (v9 != v5)
  {
    if (v9 > *(_DWORD *)(a1 + 608))
    {
      uint64_t v15 = v9;
      do
      {
        sub_1000C321C(v7[v15 - 1]);
        if (*(_DWORD *)(a1 + 556)) {
          sub_1000C321C(v8[v15 - 1]);
        }
        --v15;
      }
      while (v15 > *(int *)(a1 + 608));
    }
    sub_1000C321C((uint64_t)v7);
    uint64_t v16 = (uint64_t)v8;
    goto LABEL_33;
  }
LABEL_21:
  j__memmove(v7, *(const void **)(a1 + 592), 8 * *(int *)(a1 + 608));
  sub_1000C321C(*(void *)(a1 + 592));
  *(void *)(a1 + 592) = v7;
  if (*(_DWORD *)(a1 + 556))
  {
    j__memmove(v8, *(const void **)(a1 + 600), 8 * *(int *)(a1 + 608));
    sub_1000C321C(*(void *)(a1 + 600));
    *(void *)(a1 + 600) = v8;
  }
  *(_DWORD *)(a1 + 608) = v5;
  return 1;
}

uint64_t sub_100065A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned char *a13, int a14, unsigned int a15, _DWORD *a16)
{
  int v16 = a7;
  uint64_t v18 = a2;
  uint64_t v20 = 2 * (int)a2;
  unint64_t v21 = sub_1000CD3E8(v20, a2, a3, a4, a5, a6, a7, a8);
  uint64_t v26 = (unsigned __int16 *)v21;
  if ((int)v18 >= 1)
  {
    uint64_t v27 = v18;
    int v28 = (unsigned int *)a3;
    uint64_t v29 = (_WORD *)v21;
    do
    {
      unsigned int v30 = *v28++;
      *v29++ = sub_1000BD9AC(*(void *)(a1 + 376), v30);
      --v27;
    }
    while (v27);
  }
  int v31 = sub_10005D30C(a12, a13, a15, a3 + 4 * a14, v22, v23, v24, v25);
  if (v16 >= 1 && v31) {
    int v31 = sub_100026420(a8, v16, v26, v18);
  }
  if (v31)
  {
    *a16 = 0;
    sub_1000CD4D0(v26, v20);
  }
  else
  {
    int v32 = *(_DWORD *)(a1 + 9324);
    if (v32 < 1)
    {
LABEL_19:
      sub_1000CD4D0(v26, v20);
      return 0xFFFFFFFFLL;
    }
    else
    {
      uint64_t v33 = (_DWORD *)(*(void *)(a1 + 9312) + 28);
      while (*(v33 - 5) != v18 || memcmp(v26, v33, 2 * (int)v18))
      {
        v33 += 274;
        if (!--v32) {
          goto LABEL_19;
        }
      }
      int v38 = 0;
      v39[0] = v18;
      if (sub_10003BAA4((uint64_t)v26, a9, a10, a11, a4, v39, &v38) && v39[0] >= 1)
      {
        uint64_t v34 = 0;
        do
        {
          *(_DWORD *)(a3 + 4 * v34) = sub_1000BD96C(*(void *)(a1 + 376), v26[v34]);
          ++v34;
        }
        while (v34 < v39[0]);
      }
      *a16 = v38;
      sub_1000CD4D0(v26, v20);
      return v39[0];
    }
  }
  return v18;
}

uint64_t sub_100065C7C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 9296);
  if (v2)
  {
    if (*(int *)(a1 + 9304) >= 1)
    {
      uint64_t v3 = 0;
      do
      {
        uint64_t v4 = *(void *)(a1 + 9296);
        uint64_t v5 = *(void *)(v4 + 8 * v3);
        if (v5)
        {
          sub_100026244(v5);
          uint64_t v4 = *(void *)(a1 + 9296);
        }
        *(void *)(v4 + 8 * v3++) = 0;
      }
      while (v3 < *(int *)(a1 + 9304));
      uint64_t v2 = *(void *)(a1 + 9296);
    }
    sub_1000C321C(v2);
    *(void *)(a1 + 9296) = 0;
    *(_DWORD *)(a1 + 9304) = 0;
  }
  uint64_t result = *(void *)(a1 + 9288);
  if (a1 + 680 != result && result != 0)
  {
    uint64_t result = sub_1000C321C(result);
    *(void *)(a1 + 9288) = 0;
  }
  return result;
}

_DWORD *sub_100065D14(_DWORD *result, uint64_t a2)
{
  uint64_t v2 = result;
  if (a2)
  {
    uint64_t v3 = result[2218];
    if ((int)v3 >= 1)
    {
      unint64_t v5 = v3 + 1;
      int v6 = -(int)v3;
      uint64_t v7 = (char *)&result[2 * v3 + 170];
      do
      {
        uint64_t v8 = (v5 - 2);
        if (*(void *)&v2[2 * v8 + 170] == a2)
        {
          uint64_t result = j__memmove(&v2[2 * v8 + 170], v7, 8 * ((int)v3 + v6));
          LODWORD(v3) = v2[2218] - 1;
          v2[2218] = v3;
        }
        --v5;
        ++v6;
        v7 -= 8;
      }
      while (v5 > 1);
    }
  }
  else
  {
    result[2218] = 0;
  }
  return result;
}

uint64_t sub_100065DC0(uint64_t a1)
{
  return *(__int16 *)(a1 + 9200);
}

void sub_100065DCC(uint64_t a1)
{
  size_t v1 = *(int *)(a1 + 588);
  if (v1)
  {
    qsort(*(void **)(a1 + 576), v1, 4uLL, (int (__cdecl *)(const void *, const void *))sub_100065E8C);
    int v3 = *(_DWORD *)(a1 + 588);
    if (v3 < 2)
    {
      int v4 = 0;
    }
    else
    {
      int v4 = 0;
      uint64_t v5 = *(void *)(a1 + 576);
      int v6 = (unsigned __int16 *)(v5 + 4);
      for (uint64_t i = 1; i < v3; ++i)
      {
        uint64_t v8 = v4;
        if (*v6 != *(unsigned __int16 *)(v5 + 4 * v4) || v6[1] != *(unsigned __int16 *)(v5 + 4 * v4 + 2))
        {
          ++v4;
          *(_DWORD *)(v5 + 4 * (v8 + 1)) = *(_DWORD *)v6;
          int v3 = *(_DWORD *)(a1 + 588);
        }
        v6 += 2;
      }
    }
    *(_DWORD *)(a1 + 588) = v4 + 1;
  }
}

uint64_t sub_100065E8C(unsigned __int16 *a1, unsigned __int16 *a2)
{
  int v2 = a1[1];
  int v3 = a2[1];
  if (v2 != v3) {
    return ((__int16)v2 - (__int16)v3);
  }
  unsigned int v4 = *a1 - *a2;
  if (v4) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t sub_100065EC0(uint64_t a1, _DWORD *a2)
{
  *a2 = *(_DWORD *)(a1 + 648);
  return *(void *)(a1 + 640);
}

void *sub_100065ED0(uint64_t a1, const void *a2, _DWORD *a3)
{
  int v6 = *(void **)(a1 + 640);
  int v7 = sub_100004148(*(void *)(a1 + 384));
  uint64_t result = memcpy(v6, a2, v7);
  *(_DWORD *)(a1 + 648) = *a3;
  return result;
}

uint64_t sub_100065F24(uint64_t result)
{
  size_t v1 = (__int16 *)(result + 9048);
  __int16 v2 = *(_WORD *)(result + 9048);
  if (*(_DWORD *)(result + 8896))
  {
    int v3 = *(_DWORD *)(result + 9360) + *(_DWORD *)(result + 620);
    if (v3 >= 0)
    {
      unsigned int v4 = 0;
      uint64_t v5 = *(void *)(result + 592);
      do
      {
        uint64_t v7 = *(void *)(v5 + 8 * (v4 >> 8));
        int v8 = *(__int16 *)(v7 + 24 * v4 + 16);
        if (v8 < 0x4000)
        {
          if (v8 < v2) {
            __int16 v2 = *(_WORD *)(v7 + 24 * v4 + 16);
          }
          for (unsigned int i = *(unsigned __int16 *)(v7 + 24 * v4 + 14);
                i != 0xFFFF;
                unsigned int i = *(unsigned __int16 *)(v10 + 14))
          {
            uint64_t v10 = *(void *)(v5 + 8 * (i >> 8)) + 24 * i;
            if (*(__int16 *)(v10 + 16) < v2) {
              __int16 v2 = *(_WORD *)(v10 + 16);
            }
          }
        }
      }
      while (v4++ != v3);
    }
    goto LABEL_28;
  }
  int v11 = *(_DWORD *)(result + 612);
  if (v11 < 1) {
    goto LABEL_28;
  }
  uint64_t v12 = *(void *)(result + 592);
  if (v11 == 1)
  {
    for (unsigned int j = 0; j != v11; ++j)
    {
LABEL_25:
      if (*(__int16 *)(*(void *)(v12 + 8 * (j >> 8)) + 24 * j + 16) < v2) {
        __int16 v2 = *(_WORD *)(*(void *)(v12 + 8 * (j >> 8)) + 24 * j + 16);
      }
    }
    goto LABEL_28;
  }
  unsigned int v14 = 0;
  unsigned int j = v11 & 0xFFFFFFFE;
  __int16 v15 = *(_WORD *)(result + 9048);
  do
  {
    uint64_t v16 = *(void *)(v12 + 8 * (v14 >> 8));
    uint64_t result = v14 & 0xFE | 1;
    int v17 = *(__int16 *)(v16 + 24 * (v14 & 0xFE) + 16);
    int v18 = *(__int16 *)(v16 + 24 * result + 16);
    if (v17 < v2) {
      __int16 v2 = v17;
    }
    if (v18 < v15) {
      __int16 v15 = v18;
    }
    v14 += 2;
  }
  while (j != v14);
  if (v2 >= v15) {
    __int16 v2 = v15;
  }
  if (v11 != j) {
    goto LABEL_25;
  }
LABEL_28:
  __int16 *v1 = v2;
  return result;
}

uint64_t *sub_100066098(uint64_t a1, long long *a2)
{
  int v4 = *(_DWORD *)(a1 + 612);
  unsigned int v5 = *((unsigned __int16 *)a2 + 7);
  int v6 = v4 - 1;
  int v7 = *(_DWORD *)(a1 + 8904);
  uint64_t result = *(uint64_t **)(a1 + 592);
  int v9 = 0;
  if (v7)
  {
    if (v4 >= 1)
    {
      unint64_t v10 = *(void *)a2 & 0x7FFFFFFFFFFFFFFFLL;
      while (1)
      {
        unsigned int v11 = (v9 + v6) / 2;
        uint64_t v12 = result[v11 >> 8];
        uint64_t v13 = v12 + 24 * v11;
        unsigned int v14 = *(unsigned __int16 *)(v13 + 14);
        if (v5 < v14) {
          goto LABEL_4;
        }
        if (v5 > v14) {
          goto LABEL_9;
        }
        unint64_t v15 = *(void *)v13 & 0x7FFFFFFFFFFFFFFFLL;
        if (v10 < v15)
        {
LABEL_4:
          int v6 = v11 - 1;
          if (v9 > (int)(v11 - 1)) {
            break;
          }
        }
        else
        {
          if (v10 <= v15)
          {
            uint64_t v32 = v12 + 24 * ((v9 + v6) / 2);
            int v35 = *(__int16 *)(v32 + 16);
            uint64_t v34 = (_WORD *)(v32 + 16);
            __int16 v33 = v35;
            __int16 v36 = *((_WORD *)a2 + 8);
            int v37 = v35 - v36;
            if (v37 < 1)
            {
              int v37 = -v37;
              __int16 v38 = v36 - *(_WORD *)(a1 + 9048);
              int v27 = *(_DWORD *)(v12 + 24 * v11 + 8);
              int v29 = *((_DWORD *)a2 + 2);
              if (v29 != v27) {
                goto LABEL_37;
              }
            }
            else
            {
              __int16 v38 = v33 - *(_WORD *)(a1 + 9048);
              int v27 = *((_DWORD *)a2 + 2);
              uint64_t v39 = v12 + 24 * v11;
              int v29 = *(_DWORD *)(v39 + 8);
              *uint64_t v34 = v36;
              *(_DWORD *)(v39 + 8) = *((_DWORD *)a2 + 2);
              if (v29 != v27)
              {
LABEL_37:
                if (*(_DWORD *)(a1 + 9008))
                {
                  uint64_t v40 = *(uint64_t **)(a1 + 9016);
                  __int16 v41 = v37;
                  __int16 v42 = v38;
LABEL_39:
                  return sub_1000241EC(v40, v29, v27, v41, v42);
                }
              }
            }
            return result;
          }
LABEL_9:
          int v9 = v11 + 1;
          if ((int)(v11 + 1) > v6) {
            break;
          }
        }
      }
    }
    uint64_t v16 = result[v9 >> 8] + 24 * v9;
LABEL_23:
    uint64_t v30 = *(unsigned int *)(a1 + 608);
    if (v4 != (v30 << 8) - 1)
    {
      if (v4 > v9)
      {
        sub_1000C403C(result, v30, 256, 24, v9, v4 - v9, v9 + 1);
        uint64_t result = *(uint64_t **)(a1 + 600);
        if (result) {
          uint64_t result = sub_1000C403C(result, *(unsigned int *)(a1 + 608), 256, 1, v9, v4 - v9, v9 + 1);
        }
        uint64_t v16 = *(void *)(*(void *)(a1 + 592) + 8 * (v9 >> 8)) + 24 * v9;
      }
      long long v31 = *a2;
      *(void *)(v16 + 16) = *((void *)a2 + 2);
      *(_OWORD *)uint64_t v16 = v31;
      *(_DWORD *)(a1 + 612) = v4 + 1;
    }
    return result;
  }
  if (v4 >= 1)
  {
    do
    {
      int v17 = v9 + v6;
      if (v9 + v6 < 0 != __OFADD__(v9, v6)) {
        ++v17;
      }
      unsigned int v18 = v17 >> 1;
      if (v5 > *(unsigned __int16 *)(result[v18 >> 8] + 24 * v18 + 14)) {
        int v9 = v18 + 1;
      }
      else {
        int v6 = v18 - 1;
      }
    }
    while (v9 <= v6);
  }
  uint64_t v19 = result[v9 >> 8];
  uint64_t v16 = v19 + 24 * v9;
  if (v9 >= v4 || v5 != *(unsigned __int16 *)(v19 + 24 * v9 + 14)) {
    goto LABEL_23;
  }
  uint64_t v20 = v19 + 24 * v9;
  int v23 = *(__int16 *)(v20 + 16);
  uint64_t v22 = (_WORD *)(v20 + 16);
  __int16 v21 = v23;
  __int16 v24 = *((_WORD *)a2 + 8);
  int v25 = v23 - v24;
  if (v25 < 1)
  {
    int v25 = -v25;
    __int16 v26 = v24 - *(_WORD *)(a1 + 9048);
    int v27 = *(_DWORD *)(v19 + 24 * v9 + 8);
    int v29 = *((_DWORD *)a2 + 2);
    if (v29 == v27) {
      return result;
    }
  }
  else
  {
    __int16 v26 = v21 - *(_WORD *)(a1 + 9048);
    int v27 = *((_DWORD *)a2 + 2);
    uint64_t v28 = v19 + 24 * v9;
    int v29 = *(_DWORD *)(v28 + 8);
    *uint64_t v22 = v24;
    *(_DWORD *)(v28 + 8) = *((_DWORD *)a2 + 2);
    if (v29 == v27) {
      return result;
    }
  }
  if (*(_DWORD *)(a1 + 9008))
  {
    uint64_t v40 = *(uint64_t **)(a1 + 9016);
    __int16 v41 = v25;
    __int16 v42 = v26;
    goto LABEL_39;
  }
  return result;
}

__n128 sub_1000663E8(uint64_t a1, __n128 *a2)
{
  unint64_t v2 = a2->n128_u16[7];
  uint64_t v3 = *(void *)(a1 + 592);
  uint64_t v4 = *(void *)(v3 + ((v2 >> 5) & 0x7F8));
  unsigned int v5 = a2->n128_u16[7];
  int v6 = (__n128 *)(v4 + 24 * a2->n128_u16[7]);
  if (v6[1].n128_u16[0] == 0x4000)
  {
    __n128 result = *a2;
    v6[1].n128_u64[0] = a2[1].n128_u64[0];
    *int v6 = result;
    if (*(_DWORD *)(a1 + 620) >= (int)v2) {
      *(_WORD *)(v4 + 24 * v5 + 14) = -1;
    }
    return result;
  }
  if (*(_DWORD *)(a1 + 620) >= (int)v2)
  {
    unint64_t v8 = a2->n128_u64[0] & 0x7FFFFFFFFFFFFFFFLL;
    unint64_t v9 = v6->n128_u64[0] & 0x7FFFFFFFFFFFFFFFLL;
    LOWORD(v10) = -1;
    if (v8 <= v9)
    {
      uint64_t v12 = 0;
    }
    else
    {
      unsigned int v11 = *(unsigned __int16 *)(v4 + 24 * a2->n128_u16[7] + 14);
      if (v11 == 0xFFFF)
      {
        uint64_t v12 = 0;
        goto LABEL_20;
      }
      unsigned int v10 = v11;
      while (1)
      {
        uint64_t v19 = *(void *)(v3 + 8 * (v10 >> 8));
        uint64_t v12 = v6;
        int v6 = (__n128 *)(v19 + 24 * v10);
        unint64_t v9 = v6->n128_u64[0] & 0x7FFFFFFFFFFFFFFFLL;
        if (v8 <= v9) {
          break;
        }
        unsigned int v10 = *(unsigned __int16 *)(v19 + 24 * v10 + 14);
        if (v10 == 0xFFFF)
        {
          LOWORD(v10) = -1;
          goto LABEL_20;
        }
      }
    }
    if (v8 != v9)
    {
LABEL_20:
      int v20 = *(_DWORD *)(a1 + 612);
      if (v20 < (*(_DWORD *)(a1 + 608) << 8) - 2)
      {
        uint64_t v21 = *(void *)(v3 + (((unint64_t)*(unsigned int *)(a1 + 612) >> 5) & 0x7FFFFF8))
            + 24 * *(_DWORD *)(a1 + 612);
        if (v8 <= v9)
        {
          if (v12)
          {
            LOWORD(v10) = v12->n128_u16[7];
            v12->n128_u16[7] = v20;
          }
          else
          {
            __n128 v22 = *v6;
            *(void *)(v21 + 16) = v6[1].n128_u64[0];
            *(__n128 *)uint64_t v21 = v22;
            unsigned int v10 = *(_DWORD *)(a1 + 612);
            uint64_t v21 = (uint64_t)v6;
          }
        }
        else
        {
          v6->n128_u16[7] = v20;
        }
        ++*(_DWORD *)(a1 + 612);
        unint64_t v23 = a2[1].n128_u64[0];
        __n128 result = *a2;
        *(__n128 *)uint64_t v21 = *a2;
        *(void *)(v21 + 16) = v23;
        *(_WORD *)(v21 + 14) = v10;
      }
      return result;
    }
  }
  int v13 = v6[1].n128_i16[0];
  signed __int16 v14 = a2[1].n128_i16[0];
  int v15 = v13 - v14;
  if (v15 < 1)
  {
    LOWORD(v15) = a2[1].n128_u16[0] - v13;
    __int16 v16 = v14 - *(_WORD *)(a1 + 9048);
    int v17 = v6->n128_i32[2];
    int v18 = a2->n128_i32[2];
    if (v18 == v17) {
      return result;
    }
  }
  else
  {
    __int16 v16 = v13 - *(_WORD *)(a1 + 9048);
    int v17 = a2->n128_i32[2];
    int v18 = v6->n128_i32[2];
    v6[1].n128_u16[0] = v14;
    v6->n128_u32[2] = a2->n128_u32[2];
    if (v18 == v17) {
      return result;
    }
  }
  if (*(_DWORD *)(a1 + 9008)) {
    sub_1000241EC(*(uint64_t **)(a1 + 9016), v18, v17, v15, v16);
  }
  return result;
}

uint64_t *sub_1000665E8(uint64_t *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result[74] + (((unint64_t)*(unsigned __int16 *)(a2 + 14) >> 5) & 0x7F8));
  uint64_t v3 = v2 + 24 * *(_WORD *)(a2 + 14);
  int v6 = *(__int16 *)(v3 + 16);
  unsigned int v5 = (_WORD *)(v3 + 16);
  int v4 = v6;
  if (v6 == 0x4000)
  {
    uint64_t v7 = v2 + 24 * *(_WORD *)(a2 + 14);
    uint64_t v8 = *(void *)(a2 + 16);
    *(_OWORD *)uint64_t v7 = *(_OWORD *)a2;
    *(void *)(v7 + 16) = v8;
    *(_WORD *)(v7 + 14) = -1;
    return result;
  }
  __int16 v9 = *(_WORD *)(a2 + 16);
  int v10 = v4 - v9;
  if (v10 < 1)
  {
    LOWORD(v10) = *(_WORD *)(a2 + 16) - v4;
    __int16 v11 = v9 - *((_WORD *)result + 4524);
    int v12 = *(_DWORD *)(v2 + 24 * *(_WORD *)(a2 + 14) + 8);
    int v14 = *(_DWORD *)(a2 + 8);
    if (v14 == v12) {
      return result;
    }
  }
  else
  {
    __int16 v11 = v4 - *((_WORD *)result + 4524);
    int v12 = *(_DWORD *)(a2 + 8);
    uint64_t v13 = v2 + 24 * *(_WORD *)(a2 + 14);
    int v14 = *(_DWORD *)(v13 + 8);
    _WORD *v5 = v9;
    *(_DWORD *)(v13 + 8) = *(_DWORD *)(a2 + 8);
    if (v14 == v12) {
      return result;
    }
  }
  if (*((_DWORD *)result + 2252)) {
    return sub_1000241EC((uint64_t *)result[1127], v14, v12, v10, v11);
  }
  return result;
}

uint64_t sub_1000666C8(uint64_t result, __int16 a2)
{
  if (*(int *)(result + 612) >= 1)
  {
    uint64_t v3 = result;
    unsigned int v4 = 0;
    unsigned int v5 = (__int16 *)(result + 9070);
    uint64_t v6 = result + 9202;
    do
    {
      uint64_t v8 = *(void *)(*(void *)(v3 + 592) + 8 * (v4 >> 8));
      __int16 v9 = *v5;
      if (*(_DWORD *)(v3 + 9280))
      {
        unsigned int v10 = sub_1000BD964(*(void *)(v3 + 376), *(unsigned __int16 *)(v8 + 24 * v4 + 14), 0);
        __n128 result = sub_1000BDCD4(*(void *)(v3 + 376), v6, *(_DWORD *)(v3 + 9204), v10);
        v9 += result;
      }
      uint64_t v7 = v8 + 24 * v4;
      *(_WORD *)(v7 + 16) = v9 + a2;
      *(_DWORD *)(v7 + 8) = -1;
      ++v4;
    }
    while ((signed int)v4 < *(_DWORD *)(v3 + 612));
  }
  return result;
}

uint64_t sub_1000667A4(uint64_t result, __int16 a2)
{
  uint64_t v2 = *(unsigned int *)(result + 612);
  if (!v2) {
    return result;
  }
  uint64_t v4 = result;
  uint64_t v5 = qword_100101CC0;
  if (qword_100101CC0) {
    uint64_t v5 = *(void *)(qword_100101CC0 + 3616);
  }
  if (v5 >= (int)v2)
  {
    if ((int)v2 < 1 || *(_DWORD *)(result + 9280) != 0) {
      goto LABEL_11;
    }
LABEL_19:
    int v12 = 0;
    do
    {
      uint64_t v14 = *(void *)(*(void *)(v4 + 592) + 8 * (v12 >> 8));
      __int16 v15 = *(_WORD *)(v4 + 9070);
      if (*(_DWORD *)(v4 + 9280))
      {
        unsigned int v16 = sub_1000BD964(*(void *)(v4 + 376), *(unsigned __int16 *)(v14 + 24 * v12 + 14), 0);
        __n128 result = sub_1000BDCD4(*(void *)(v4 + 376), v4 + 9202, *(_DWORD *)(v4 + 9204), v16);
        v15 += result;
      }
      uint64_t v13 = v14 + 24 * v12;
      *(_WORD *)(v13 + 16) = v15 + a2;
      *(_DWORD *)(v13 + 8) = -1;
      ++v12;
      uint64_t v2 = *(unsigned int *)(v4 + 612);
    }
    while (v12 < (int)v2);
    goto LABEL_11;
  }
  if ((int)v2 >= 1) {
    goto LABEL_19;
  }
LABEL_11:
  if (*(_DWORD *)(v4 + 9280))
  {
    __n128 result = sub_1000BDD6C(*(void *)(v4 + 376), *(_DWORD *)(v4 + 9204), v4 + 9202, v2, *(unsigned __int16 **)(v4 + 656), *(_DWORD *)(v4 + 672), *(__int16 **)(v4 + 664));
    *(_DWORD *)(v4 + 672) = result;
    LODWORD(v2) = *(_DWORD *)(v4 + 612);
  }
  if ((int)v2 >= 1)
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = *(void *)(*(void *)(v4 + 592) + 8 * (v7 >> 8));
      __int16 v9 = *(_WORD *)(v4 + 9070) + a2;
      uint64_t v10 = v8 + 24 * v7;
      *(_WORD *)(v10 + 16) = v9;
      __int16 v11 = (_WORD *)(v10 + 16);
      if (*(_DWORD *)(v4 + 9280)) {
        *__int16 v11 = *(_WORD *)(*(void *)(v4 + 664) + 2 * v7) + v9;
      }
      *(_DWORD *)(v8 + 24 * v7++ + 8) = -1;
    }
    while (v7 < *(int *)(v4 + 612));
  }
  return result;
}

uint64_t sub_10006695C(uint64_t a1, __int16 a2)
{
  uint64_t v20 = 0;
  memset(v19, 0, sizeof(v19));
  unint64_t v16 = 0;
  uint64_t v18 = 0;
  uint64_t v17 = 0xFFFFFFFFLL;
  uint64_t result = (uint64_t)sub_100028F14(*(_DWORD **)(a1 + 680), (uint64_t)v19);
  if (*(int *)(a1 + 8872) >= 1)
  {
    for (uint64_t i = 0; i < *(int *)(a1 + 8872); ++i)
    {
      uint64_t v6 = *(unsigned __int16 **)(a1 + 9192);
      uint64_t v7 = *(void *)(a1 + 8 * i + 680);
      unint64_t v8 = sub_100026258(v7, i);
      uint64_t result = sub_100028F34(v7, 65534, 0xFFFEu, v8, *(_DWORD *)(a1 + 9224), *(void *)(a1 + 9216), *(_DWORD *)(a1 + 9188), (unint64_t)v6);
      int v9 = result;
      if ((int)result > *(_DWORD *)(a1 + 9188))
      {
        int v10 = 2 * result;
        uint64_t result = sub_1000C33A0(48 * result);
        if (!result)
        {
          *(_DWORD *)(a1 + 552) = 3;
          return result;
        }
        uint64_t v6 = (unsigned __int16 *)result;
        sub_1000C321C(*(void *)(a1 + 9192));
        *(_DWORD *)(a1 + 9188) = v10;
        *(void *)(a1 + 9192) = v6;
        unint64_t v11 = sub_100026258(v7, i);
        uint64_t result = sub_100028F34(v7, 65534, 0xFFFEu, v11, *(_DWORD *)(a1 + 9224), *(void *)(a1 + 9216), *(_DWORD *)(a1 + 9188), (unint64_t)v6);
        int v9 = result;
      }
      if (v9 >= 1)
      {
        do
        {
          __int16 v14 = *(_WORD *)(a1 + 9070);
          if (*(_DWORD *)(a1 + 9280))
          {
            unsigned int v15 = sub_1000BD964(*(void *)(a1 + 376), *v6, 0);
            v14 += sub_1000BDCD4(*(void *)(a1 + 376), a1 + 9202, *(_DWORD *)(a1 + 9204), v15);
          }
          LOWORD(v18) = v14 + a2 + v6[1];
          if (*((_DWORD *)v6 + 4)) {
            unint64_t v12 = *((void *)v6 + 1) | 0x8000000000000000;
          }
          else {
            unint64_t v12 = *((void *)v6 + 1);
          }
          unint64_t v16 = v12;
          __int16 v13 = *v6;
          v6 += 12;
          HIWORD(v17) = v13;
          uint64_t result = (*(uint64_t (**)(uint64_t, unint64_t *))(a1 + 9408))(a1, &v16);
          --v9;
        }
        while (v9);
      }
    }
  }
  return result;
}

_DWORD *sub_100066B5C(uint64_t a1, __int16 a2)
{
  uint64_t v24 = 0;
  long long v22 = 0u;
  memset(v23, 0, sizeof(v23));
  long long v21 = 0u;
  unint64_t v18 = 0;
  uint64_t v20 = 0;
  uint64_t v19 = 0xFFFFFFFFLL;
  uint64_t result = sub_100028F14(*(_DWORD **)(a1 + 680), (uint64_t)v23);
  if (*(int *)(a1 + 8872) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = *(void *)(a1 + 8 * v5 + 680);
      if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 4544)) {
        sub_100029B58((uint64_t)v23, -1, a2);
      }
      uint64_t v7 = *(void (**)(uint64_t, _OWORD *, uint64_t, uint64_t, uint64_t))(v6 + 104);
      uint64_t v8 = sub_100026258(v6, v5);
      v7(v6, v23, 65534, v8, 0xFFFFLL);
      while (1)
      {
        uint64_t result = (_DWORD *)(*(uint64_t (**)(_OWORD *, uint64_t, long long *))(v6 + 112))(v23, v6, &v21);
        if (!result) {
          break;
        }
        __int16 v11 = *(_WORD *)(a1 + 9070);
        if (*(_DWORD *)(a1 + 9280))
        {
          unsigned int v12 = sub_1000BD964(*(void *)(a1 + 376), (unsigned __int16)v21, 0);
          v11 += sub_1000BDCD4(*(void *)(a1 + 376), a1 + 9202, *(_DWORD *)(a1 + 9204), v12);
        }
        LOWORD(v20) = v11 + a2 + WORD1(v21);
        if (v22) {
          unint64_t v13 = *((void *)&v21 + 1) | 0x8000000000000000;
        }
        else {
          unint64_t v13 = *((void *)&v21 + 1);
        }
        unint64_t v18 = v13;
        if (*((void *)&v22 + 1))
        {
          uint64_t v14 = (*((void *)&v21 + 1) >> 35) & 0x3FFFFLL;
          uint64_t v15 = *(unsigned int *)(a1 + 9364);
          if ((int)v15 < 1)
          {
            LODWORD(v9) = 0;
            if ((int)v15 >= *(_DWORD *)(a1 + 9360))
            {
LABEL_8:
              LODWORD(v9) = 0;
              *(_DWORD *)(a1 + 552) = 3;
            }
            else
            {
LABEL_30:
              *(void *)(*(void *)(a1 + 9328) + 8 * v9) = *((void *)&v22 + 1);
              *(_WORD *)(*(void *)(a1 + 9336) + 2 * v9) = v5;
              *(_DWORD *)(*(void *)(a1 + 9344) + 4 * v9) = v14;
              uint64_t v17 = *(void *)(a1 + 9352);
              if (v17) {
                *(_DWORD *)(v17 + 4 * v9) = *(_DWORD *)(a1 + 9376);
              }
              ++*(_DWORD *)(a1 + 9364);
            }
          }
          else
          {
            uint64_t v9 = 0;
            while (1)
            {
              if (v14 == *(_DWORD *)(*(void *)(a1 + 9344) + 4 * v9)
                && *(unsigned __int16 *)(*(void *)(a1 + 9336) + 2 * v9) == (unsigned __int16)v5)
              {
                uint64_t v16 = *(void *)(a1 + 9352);
                if (!v16 || *(_DWORD *)(v16 + 4 * v9) == *(_DWORD *)(a1 + 9376)) {
                  break;
                }
              }
              if (v15 == ++v9)
              {
                LODWORD(v9) = *(_DWORD *)(a1 + 9364);
                if ((int)v15 >= *(_DWORD *)(a1 + 9360)) {
                  goto LABEL_8;
                }
                goto LABEL_30;
              }
            }
          }
          int v10 = v9 + *(_DWORD *)(a1 + 620) + 1;
        }
        else
        {
          LOWORD(v10) = v21;
        }
        HIWORD(v19) = v10;
        (*(void (**)(uint64_t, unint64_t *))(a1 + 9408))(a1, &v18);
      }
      ++v5;
    }
    while (v5 < *(int *)(a1 + 8872));
  }
  return result;
}

uint64_t sub_100066DF0(uint64_t result)
{
  *(_DWORD *)(*(void *)(*(void *)(result + 592)
                        + (((unint64_t)*(unsigned int *)(result + 612) >> 5) & 0x7FFFFF8))
            + 24 * *(_DWORD *)(result + 612)
            + 14) = 0xFFFF;
  return result;
}

_DWORD *sub_100066E1C(_DWORD *result)
{
  uint64_t v1 = result[147];
  if ((int)v1 < 1)
  {
LABEL_5:
    result[147] = 0;
  }
  else
  {
    uint64_t v2 = 0;
    uint64_t v3 = 0;
    uint64_t v4 = (char *)*((void *)result + 72);
    while (*((__int16 *)result + 4600) - *((__int16 *)result + 4454) > *(__int16 *)&v4[v2 + 2])
    {
      ++v3;
      v2 += 4;
      if (v1 == v3) {
        goto LABEL_5;
      }
    }
    if (v3)
    {
      result[147] = v1 - v3;
      return j__memmove(v4, &v4[v2], 4 * (int)v1 - (int)v2);
    }
  }
  return result;
}

void sub_100066E94(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 544) == 5)
  {
    sub_1000670EC(a1);
  }
  else
  {
    int v2 = *(_DWORD *)(a1 + 608) << 8;
    if (*(int *)(a1 + 588) <= 0)
    {
      LODWORD(v4) = 0;
      unsigned int v11 = 0;
      uint64_t v8 = (int *)(a1 + 612);
      *(_DWORD *)(a1 + 612) = 0;
    }
    else
    {
      uint64_t v3 = 0;
      uint64_t v4 = 0;
      do
      {
        uint64_t v5 = *(void *)(a1 + 576);
        if (*(__int16 *)(v5 + v3 + 2) - *(__int16 *)(a1 + 8910) > *(__int16 *)(a1 + 9200) || v2 - 1 <= (int)v4) {
          break;
        }
        uint64_t v7 = *(void *)(*(void *)(a1 + 592) + 8 * (v4 >> 8)) + 24 * v4;
        *(_WORD *)(v7 + 14) = *(_WORD *)(v5 + v3);
        *(_WORD *)(v7 + 16) = 0x4000;
        ++v4;
        v3 += 4;
      }
      while (v4 < *(int *)(a1 + 588));
      uint64_t v8 = (int *)(a1 + 612);
      *(_DWORD *)(a1 + 612) = v4;
      if (v4)
      {
        sub_10006772C(a1, 0, (v4 - 1));
        int v9 = *(_DWORD *)(a1 + 612);
        if (v9 < 2)
        {
          unsigned int v11 = 1;
        }
        else
        {
          uint64_t v10 = **(void **)(a1 + 592);
          unsigned int v11 = 1;
          for (int i = 1; i < v9; ++i)
          {
            uint64_t v13 = *(void *)(a1 + 592);
            uint64_t v14 = *(void *)(v13 + 8 * (i >> 8));
            if (*(unsigned __int16 *)(v14 + 24 * i + 14) != *(unsigned __int16 *)(v10 + 14))
            {
              uint64_t v15 = (long long *)(v14 + 24 * i);
              uint64_t v10 = *(void *)(v13 + 8 * (v11 >> 8)) + 24 * v11;
              long long v16 = *v15;
              *(void *)(v10 + 16) = *((void *)v15 + 2);
              *(_OWORD *)uint64_t v10 = v16;
              ++v11;
              int v9 = *v8;
            }
          }
        }
        *uint64_t v8 = v11;
      }
      else
      {
        unsigned int v11 = 0;
      }
    }
    if ((int)v4 >= v2 - 1) {
      *uint64_t v8 = --v11;
    }
    *(_DWORD *)(*(void *)(*(void *)(a1 + 592) + 8 * (v11 >> 8)) + 24 * v11 + 14) = 0xFFFF;
    if (*(_DWORD *)(a1 + 9280))
    {
      uint64_t v17 = *v8;
      if ((int)v17 >= 1)
      {
        uint64_t v18 = qword_100101CC0;
        if (qword_100101CC0) {
          uint64_t v18 = *(void *)(qword_100101CC0 + 3616);
        }
        if (v18 >= v17)
        {
          uint64_t v19 = 0;
          uint64_t v20 = *(void *)(a1 + 376);
          *(_DWORD *)(a1 + 672) = -1;
          do
          {
            *(_WORD *)(*(void *)(a1 + 656) + 2 * v19) = sub_1000BD964(v20, *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 592)+ 8* (v19 >> 8))+ 24 * v19+ 14), 0);
            ++v19;
          }
          while (v19 < *(int *)(a1 + 612));
        }
      }
    }
  }
}

void sub_1000670EC(uint64_t a1)
{
  int v2 = (__int16 *)(a1 + 8910);
  if (*(int *)(a1 + 588) <= 0)
  {
    uint64_t v14 = 0;
    int v20 = 0;
    uint64_t v5 = (int *)(a1 + 9224);
    *(_DWORD *)(a1 + 9224) = 0;
    uint64_t v21 = qword_100101CC0;
    if (qword_100101CC0) {
      goto LABEL_35;
    }
    goto LABEL_31;
  }
  uint64_t v3 = 0;
  int v4 = 0;
  uint64_t v5 = (int *)(a1 + 9224);
  do
  {
    uint64_t v7 = *(void *)(a1 + 576);
    if (*(__int16 *)(v7 + 4 * v3 + 2) - *v2 > v2[145]) {
      break;
    }
    uint64_t v8 = qword_100101CC0;
    if (qword_100101CC0)
    {
      size_t v6 = v4;
      if (*(void *)(qword_100101CC0 + 4064) <= v4) {
        goto LABEL_10;
      }
    }
    else
    {
      size_t v6 = v4;
      if (v4 >= 0)
      {
LABEL_10:
        int *v5 = v4;
        if (v4)
        {
          qsort(*(void **)(a1 + 9216), v6, 2uLL, (int (__cdecl *)(const void *, const void *))sub_1000678B8);
          int v9 = *(_DWORD *)(a1 + 9224);
          if (v9 < 2)
          {
            LODWORD(v10) = 0;
          }
          else
          {
            LODWORD(v10) = 0;
            uint64_t v11 = *(void *)(a1 + 9216);
            for (uint64_t i = 1; i < v9; ++i)
            {
              int v13 = *(unsigned __int16 *)(v11 + 2 * i);
              if (v13 != *(unsigned __int16 *)(v11 + 2 * (int)v10))
              {
                uint64_t v10 = (int)v10 + 1;
                *(_WORD *)(v11 + 2 * v10) = v13;
                int v9 = *v5;
              }
            }
          }
          int v4 = v10 + 1;
          int *v5 = v10 + 1;
          uint64_t v8 = qword_100101CC0;
        }
        if (v8)
        {
          size_t v6 = v4;
          if (*(void *)(v8 + 4064) <= v4) {
            break;
          }
        }
        else
        {
          size_t v6 = v4;
          if (v4 >= 0) {
            break;
          }
        }
        uint64_t v7 = *(void *)(a1 + 576);
      }
    }
    *(_WORD *)(*(void *)(a1 + 9216) + 2 * v6) = *(_WORD *)(v7 + 4 * v3);
    ++v4;
    ++v3;
  }
  while (v3 < *(int *)(a1 + 588));
  int *v5 = v4;
  if (!v4)
  {
    uint64_t v14 = 0;
    int v20 = 0;
    uint64_t v21 = qword_100101CC0;
    if (qword_100101CC0) {
      goto LABEL_35;
    }
LABEL_31:
    if (v14 >= 0) {
      goto LABEL_36;
    }
    goto LABEL_37;
  }
  uint64_t v14 = v4;
  qsort(*(void **)(a1 + 9216), v4, 2uLL, (int (__cdecl *)(const void *, const void *))sub_1000678B8);
  int v15 = *(_DWORD *)(a1 + 9224);
  if (v15 < 2)
  {
    LODWORD(v16) = 0;
  }
  else
  {
    LODWORD(v16) = 0;
    uint64_t v17 = *(void *)(a1 + 9216);
    for (uint64_t j = 1; j < v15; ++j)
    {
      int v19 = *(unsigned __int16 *)(v17 + 2 * j);
      if (v19 != *(unsigned __int16 *)(v17 + 2 * (int)v16))
      {
        uint64_t v16 = (int)v16 + 1;
        *(_WORD *)(v17 + 2 * v16) = v19;
        int v15 = *v5;
      }
    }
  }
  int v20 = v16 + 1;
  int *v5 = v16 + 1;
  uint64_t v21 = qword_100101CC0;
  if (!qword_100101CC0) {
    goto LABEL_31;
  }
LABEL_35:
  if (*(void *)(v21 + 4064) <= v14) {
LABEL_36:
  }
    int *v5 = --v20;
LABEL_37:
  if ((!v21 || !*(_DWORD *)(v21 + 4544))
    && !sub_100026168((uint64_t *)(a1 + 680), *(_DWORD *)(a1 + 8872), *(void *)(a1 + 9216), v20, v2[145]))
  {
    *(_DWORD *)(a1 + 552) = 3;
  }
}

uint64_t sub_100067390(uint64_t result, __int16 a2, __int16 a3)
{
  uint64_t v3 = *(int *)(result + 588);
  if ((int)v3 < *(_DWORD *)(result + 584))
  {
    int v4 = (_WORD *)(*(void *)(result + 576) + 4 * v3);
    _WORD *v4 = a2;
    v4[1] = a3;
    ++*(_DWORD *)(result + 588);
  }
  return result;
}

uint64_t sub_1000673C0(uint64_t a1)
{
  return (*(_DWORD *)(a1 + 9076) + *(__int16 *)(a1 + 9048));
}

uint64_t sub_1000673D4(uint64_t result, int a2)
{
  int v2 = qword_100101CC0;
  if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 1648) && !*(_DWORD *)(result + 632))
  {
    *(_DWORD *)(result + 632) = 1;
  }
  else if (*(_DWORD *)(result + 8892))
  {
    int v3 = *(_DWORD *)(result + 552);
    BOOL v4 = v3 == 3 || v3 == 5;
    if (!v4 && a2 <= 0x3FFFFFFF)
    {
      int v6 = *(__int16 *)(result + 9048);
      if (qword_100101CC0) {
        int v2 = *(_DWORD *)(qword_100101CC0 + 5224);
      }
      int v7 = *(_DWORD *)(result + 9076) + v6 - (v2 + a2);
      if (v7 >= 1)
      {
        __int16 v8 = *(_WORD *)(result + 9060) - v7 + v6;
        if (*(__int16 *)(result + 9062) > v8) {
          *(_WORD *)(result + 9062) = v8;
        }
      }
    }
  }
  return result;
}

uint64_t sub_100067470(uint64_t result, int a2)
{
  *(_DWORD *)(result + 9080) = a2;
  return result;
}

BOOL sub_100067478(uint64_t a1)
{
  if (*(__int16 *)(a1 + 8980) < 0x4000) {
    return 0;
  }
  if (*(unsigned __int16 *)(a1 + 9052) == *(unsigned __int16 *)(a1 + 9054)) {
    return 1;
  }
  return *(unsigned __int16 *)(a1 + 9184) == 0;
}

uint64_t sub_1000674BC(uint64_t a1)
{
  return *(__int16 *)(a1 + 8992);
}

uint64_t sub_1000674C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 8896) = a2;
  return result;
}

uint64_t sub_1000674D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2;
  if (a2 || (uint64_t result = sub_10002BD6C(a1 + 680, *(_DWORD *)(a1 + 8872)), (v4 = result) != 0))
  {
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t result = sub_1000396BC(a1, v4, 0, 0, 3, 0, (int *)&v13 + 1, (int *)&v13, (int *)&v12 + 1, (int *)&v12);
    if (result)
    {
      uint64_t result = sub_10009CED4(*(void *)(a1 + 9256), SHIDWORD(v12), v12);
      if (result) {
        return sub_100035970(v4, *(void *)(a1 + 9256), a3, v7, v8, v9, v10, v11);
      }
    }
  }
  return result;
}

uint64_t sub_100067578(uint64_t a1, uint64_t a2, char *a3)
{
  if (*(_DWORD *)(a1 + 560)) {
    return 0;
  }
  uint64_t v7 = *(void *)(a1 + 9296);
  if (v7)
  {
    if (*(int *)(a1 + 9304) >= 1)
    {
      uint64_t v8 = 0;
      do
      {
        uint64_t v9 = *(void *)(a1 + 9296);
        uint64_t v10 = *(void *)(v9 + 8 * v8);
        if (v10)
        {
          sub_100026244(v10);
          uint64_t v9 = *(void *)(a1 + 9296);
        }
        *(void *)(v9 + 8 * v8++) = 0;
      }
      while (v8 < *(int *)(a1 + 9304));
      uint64_t v7 = *(void *)(a1 + 9296);
    }
    sub_1000C321C(v7);
    *(void *)(a1 + 9296) = 0;
    *(_DWORD *)(a1 + 9304) = 0;
  }
  uint64_t v11 = *(void *)(a1 + 9288);
  if (a1 + 680 != v11 && v11 != 0)
  {
    sub_1000C321C(v11);
    *(void *)(a1 + 9288) = 0;
  }
  uint64_t v13 = *(void *)(a1 + 9256);
  if (!v13) {
    return 1;
  }
  uint64_t result = sub_10009DEE0(v13, a2, a3);
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_100067654(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = *(_DWORD **)(a1 + 9256);
  if (!v8) {
    return 1;
  }
  uint64_t result = sub_10009E16C(v8, a2, a3, a4, a5, a6, a7, a8);
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_10006767C(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  if ((int)sub_100004180(a2) > 2) {
    return 0;
  }
  if (a5)
  {
    return sub_10006E9CC(a1, a2, a3, a4);
  }
  else
  {
    return sub_10006799C(a1, a2, a3, a4);
  }
}

uint64_t sub_10006772C(uint64_t a1, int a2, uint64_t a3)
{
  while (1)
  {
    uint64_t v3 = a3;
    uint64_t v4 = a1;
    uint64_t v5 = *(void *)(a1 + 592);
    unsigned int v6 = *(unsigned __int16 *)(*(void *)(v5 + 8 * ((a3 + a2) >> 9))
                             + 24 * ((a3 + a2) >> 1)
                             + 14);
    unsigned int v7 = a3;
    unsigned int v8 = a2;
LABEL_2:
    unsigned int v9 = v8 + 1;
    unsigned int v10 = v7 - v8;
    do
    {
      unsigned int v11 = v8;
      unsigned int v12 = v9;
      LODWORD(result) = v10;
      uint64_t v14 = *(void *)(v5 + 8 * (v8 >> 8)) + 24 * v8;
      ++v8;
      ++v9;
      --v10;
    }
    while (*(unsigned __int16 *)(v14 + 14) < v6);
    ++v7;
    do
    {
      --v7;
      int v15 = result;
      uint64_t v16 = *(void *)(v5 + 8 * (v7 >> 8)) + 24 * v7;
      unsigned int v17 = *(unsigned __int16 *)(v16 + 14);
      uint64_t result = (result - 1);
    }
    while (v17 > v6);
    if (v11 == v7)
    {
      unsigned int v7 = v8 - 1;
      if ((int)(v8 - 2) > a2) {
        goto LABEL_12;
      }
    }
    else
    {
      do
      {
        if (*(unsigned __int16 *)(v14 + 14) != v17)
        {
          long long v18 = *(_OWORD *)v14;
          uint64_t v19 = *(void *)(v14 + 16);
          uint64_t v20 = *(void *)(v16 + 16);
          *(_OWORD *)uint64_t v14 = *(_OWORD *)v16;
          *(void *)(v14 + 16) = v20;
          *(_OWORD *)uint64_t v16 = v18;
          *(void *)(v16 + 16) = v19;
          uint64_t v5 = *(void *)(v4 + 592);
          unsigned int v8 = v12 - 1;
          goto LABEL_2;
        }
        uint64_t v14 = *(void *)(v5 + 8 * (v12 >> 8)) + 24 * v12;
        ++v12;
        --v15;
      }
      while (v15);
      if ((int)(v7 - 1) > a2) {
LABEL_12:
      }
        uint64_t result = sub_10006772C(v4);
    }
    a2 = v7 + 1;
    if ((int)(v7 + 1) >= (int)v3) {
      return result;
    }
    a1 = v4;
    a3 = v3;
  }
}

uint64_t sub_1000678B8(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a1 - *a2;
}

uint64_t sub_1000678C8(uint64_t result, uint64_t a2)
{
  int v2 = *(_DWORD *)(result + 9040) << 8;
  int v3 = *(_DWORD *)(result + 9044);
  uint64_t v4 = *(void *)(*(void *)(result + 9032) + 8 * ((v2 - v3) >> 8))
     + 32 * -*(unsigned char *)(result + 9044);
  __int16 v5 = qword_100101CC0;
  if (qword_100101CC0) {
    __int16 v5 = *(_WORD *)(qword_100101CC0 + 3352);
  }
  int v6 = (__int16)(v5 + *(_WORD *)(result + 9048));
  int v7 = 1 - v3;
  int v8 = *(unsigned __int16 *)(v4 + 18);
  if (v8 != 0xFFFF)
  {
LABEL_4:
    if ((qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 3484)
       || v8 == *(unsigned __int16 *)(result + 9054)
       || !*(_WORD *)(v4 + 16))
      && *(__int16 *)(v4 + 24) <= v6)
    {
      *(unsigned char *)(a2 + ((*(void *)v4 >> 53) & 0x3FFLL)) = 1;
    }
  }
  while (v7)
  {
    uint64_t v4 = *(void *)(*(void *)(result + 9032) + 8 * ((v2 + v7) >> 8))
       + 32 * (v2 + v7);
    ++v7;
    int v8 = *(unsigned __int16 *)(v4 + 18);
    if (v8 != 0xFFFF) {
      goto LABEL_4;
    }
  }
  return result;
}

uint64_t sub_10006799C(uint64_t a1, uint64_t a2, int a3, int a4)
{
  int v8 = (_WORD *)sub_1000C33A0(9432);
  uint64_t v9 = (uint64_t)v8;
  if (!v8) {
    return v9;
  }
  unsigned int v10 = v8 + 4454;
  memcpy(v8, off_1000FD510, 0x208uLL);
  *(void *)(v9 + 376) = a1;
  *(void *)(v9 + 384) = a2;
  *(_DWORD *)(v9 + 432) = a3;
  *(_DWORD *)(v9 + 560) = a4;
  int v11 = qword_100101CC0;
  if (qword_100101CC0) {
    int v11 = *(_DWORD *)(qword_100101CC0 + 5276);
  }
  *(_DWORD *)(v9 + 8896) = v11;
  *(_DWORD *)(v9 + 368) = 3;
  *(_WORD *)(v9 + 8976) = sub_1000041E4(a2);
  *(_DWORD *)(v9 + 556) = 0;
  uint64_t v12 = *(int *)(v9 + 432);
  int v13 = sub_100004180(*(void *)(v9 + 384));
  *(_DWORD *)(v9 + 568) = v13;
  uint64_t v14 = sub_10006DDF8;
  if (v13 == 1) {
    uint64_t v14 = sub_10006C6D4;
  }
  *(void *)(v9 + 9424) = v14;
  *(void *)(v9 + 592) = 0;
  *(_DWORD *)(v9 + 588) = 0;
  *(void *)(v9 + 576) = 0;
  uint64_t v15 = qword_100101CC0;
  if (qword_100101CC0)
  {
    uint64_t v16 = *(void *)(qword_100101CC0 + 5208) / v12;
    *(_WORD *)(v9 + 8910) = v16;
    *unsigned int v10 = *(void *)(v15 + 5216) / v12 - v16;
    *(_OWORD *)(v9 + 9024) = 0u;
    *(_WORD *)(v9 + 9064) = *(void *)(v15 + 1688);
    *(_WORD *)(v9 + 9066) = *(void *)(v15 + 1456);
    *(_WORD *)(v9 + 9070) = *(void *)(v15 + 1496);
    __int16 v17 = *(_WORD *)(v15 + 1664);
  }
  else
  {
    __int16 v17 = 0;
    *(_DWORD *)unsigned int v10 = 0;
    *(_DWORD *)(v9 + 9064) = 0;
    *(_WORD *)(v9 + 9070) = 0;
    *(_OWORD *)(v9 + 9024) = 0u;
  }
  *(_WORD *)(v9 + 9072) = v17;
  *(_WORD *)(v9 + 9202) = -1;
  *(void *)(v9 + 456) = 0xFFFFFFFFLL;
  *(_DWORD *)(v9 + 9204) = 0;
  if (v15)
  {
    uint64_t v18 = sub_10009E548(*(_DWORD *)(v15 + 4120));
    *(void *)(v9 + 9000) = v18;
    if (!v18) {
      goto LABEL_34;
    }
  }
  else
  {
    uint64_t v18 = sub_10009E548(0);
    *(void *)(v9 + 9000) = v18;
    if (!v18) {
      goto LABEL_34;
    }
  }
  sub_10009E68C(v18, *(void *)(v9 + 376));
  *(void *)(v9 + 9016) = 0;
  *(_DWORD *)(v9 + 8872) = 0;
  if (!sub_10006577C(v9)) {
    goto LABEL_34;
  }
  sub_10003B678(v9);
  if (!*(void *)(v9 + 408)) {
    goto LABEL_34;
  }
  *(void *)(v9 + 9232) = sub_10005EE38();
  *(void *)(v9 + 9240) = sub_10005EE38();
  int v19 = sub_100004148(*(void *)(v9 + 384));
  *(void *)(v9 + 640) = sub_1000C33A0(v19);
  *(void *)(v9 + 528) = sub_10006BE94;
  *(void *)(v9 + 536) = sub_10006E024;
  uint64_t v20 = qword_100101CC0;
  if (!qword_100101CC0) {
    goto LABEL_23;
  }
  uint64_t v21 = *(void *)(qword_100101CC0 + 4064);
  if (v21 < 1)
  {
LABEL_19:
    *(void *)(v9 + 9360) = *(void *)(v20 + 1520);
    if (*(uint64_t *)(v20 + 1528) < 1) {
      goto LABEL_33;
    }
    uint64_t v23 = sub_1000C33A0(8 * *(void *)(v20 + 1520));
    *(void *)(v9 + 9328) = v23;
    if (!v23) {
      goto LABEL_34;
    }
    uint64_t v24 = qword_100101CC0 ? 2 * *(void *)(qword_100101CC0 + 1520) : 0;
    uint64_t v26 = sub_1000C33A0(v24);
    *(void *)(v9 + 9336) = v26;
    if (!v26) {
      goto LABEL_34;
    }
    uint64_t v27 = qword_100101CC0 ? 4 * *(void *)(qword_100101CC0 + 1520) : 0;
    uint64_t v28 = sub_1000C33A0(v27);
    *(void *)(v9 + 9344) = v28;
    if (!v28) {
      goto LABEL_34;
    }
    uint64_t v20 = qword_100101CC0;
    if (qword_100101CC0)
    {
LABEL_33:
      *(_DWORD *)(v9 + 9368) = *(void *)(v20 + 1608);
      *(_DWORD *)(v9 + 9372) = *(_DWORD *)(v20 + 1616);
      return v9;
    }
    goto LABEL_24;
  }
  uint64_t v22 = sub_1000C33A0(2 * v21);
  *(void *)(v9 + 9216) = v22;
  if (v22)
  {
    uint64_t v20 = qword_100101CC0;
    if (qword_100101CC0) {
      goto LABEL_19;
    }
LABEL_23:
    *(void *)(v9 + 9360) = 0;
LABEL_24:
    *(void *)(v9 + 9368) = 0;
    return v9;
  }
LABEL_34:
  sub_100067C9C(v9);
  return 0;
}

uint64_t sub_100067C9C(uint64_t a1)
{
  sub_100065C7C(a1);
  int v2 = *(uint64_t **)(a1 + 9016);
  if (v2)
  {
    sub_1000241A8(v2);
    *(void *)(a1 + 9016) = 0;
  }
  sub_1000C321C(*(void *)(a1 + 640));
  sub_10005EEB0(*(void *)(a1 + 9232));
  sub_10005EEB0(*(void *)(a1 + 9240));
  sub_100006A98(*(void *)(a1 + 408));
  sub_1000C3F24(*(void *)(a1 + 592), *(unsigned int *)(a1 + 608), *(_DWORD *)(a1 + 608));
  sub_1000C3F24(*(void *)(a1 + 600), *(unsigned int *)(a1 + 608), *(_DWORD *)(a1 + 608));
  sub_10009CD24(*(void *)(a1 + 9256));
  sub_1000522C0(*(void *)(a1 + 9264));
  sub_1000C321C(*(void *)(a1 + 576));
  sub_1000C3F24(*(void *)(a1 + 9032), *(unsigned int *)(a1 + 9040), *(_DWORD *)(a1 + 9040));
  sub_10009E614(*(void *)(a1 + 9000));
  sub_1000C321C(*(void *)(a1 + 9216));
  sub_1000C321C(*(void *)(a1 + 9312));
  sub_1000C321C(*(void *)(a1 + 9328));
  sub_1000C321C(*(void *)(a1 + 9336));
  sub_1000C321C(*(void *)(a1 + 9344));
  sub_1000C321C(*(void *)(a1 + 9352));
  sub_1000C321C(*(void *)(a1 + 656));
  sub_1000C321C(*(void *)(a1 + 664));
  sub_1000C321C(*(void *)(a1 + 9192));
  sub_100026244(*(void *)(a1 + 9384));
  return sub_1000C321C(a1);
}

uint64_t sub_100067DA4(uint64_t a1, int a2)
{
  sub_1000C3F24(*(void *)(a1 + 592), *(unsigned int *)(a1 + 608), *(_DWORD *)(a1 + 608));
  *(void *)(a1 + 592) = 0;
  if (*(_DWORD *)(a1 + 556))
  {
    sub_1000C3F24(*(void *)(a1 + 600), *(unsigned int *)(a1 + 608), *(_DWORD *)(a1 + 608));
    *(void *)(a1 + 600) = 0;
    int v4 = *(_DWORD *)(a1 + 556);
    *(_DWORD *)(a1 + 608) = 0;
    if (v4)
    {
      sub_1000C321C(0);
      *(void *)(a1 + 600) = 0;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 608) = 0;
  }
  sub_1000C3F24(*(void *)(a1 + 9032), *(unsigned int *)(a1 + 9040), *(_DWORD *)(a1 + 9040));
  *(void *)(a1 + 9032) = 0;
  *(_DWORD *)(a1 + 9040) = 0;
  uint64_t result = sub_1000C321C(*(void *)(a1 + 9192));
  *(void *)(a1 + 9192) = 0;
  *(_DWORD *)(a1 + 9188) = 0;
  if (a2)
  {
    uint64_t v6 = *(void *)(a1 + 9256);
    return sub_10009CD8C(v6);
  }
  return result;
}

uint64_t sub_100067E64(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, int a9, int a10)
{
  uint64_t v112 = 0;
  uint64_t v113 = 0;
  *(_DWORD *)(a1 + 552) = 4;
  *(_DWORD *)(a1 + 544) = a6;
  *(_DWORD *)(a1 + 548) = a7;
  if ((int)a5 >= 1025) {
    goto LABEL_2;
  }
  uint64_t v15 = a5;
  uint64_t v16 = (char *)a4;
  int v19 = *(_DWORD *)(a1 + 8896);
  if (v19)
  {
    if (a6 == 5 || a6 == 2) {
      goto LABEL_2;
    }
  }
  uint64_t v20 = qword_100101CC0;
  if (!qword_100101CC0)
  {
    if (a6 != 11) {
      goto LABEL_15;
    }
LABEL_2:
    uint64_t result = 0;
LABEL_3:
    *(_DWORD *)(a1 + 552) = 3;
    return result;
  }
  if (*(_DWORD *)(qword_100101CC0 + 4452) && *(_DWORD *)(qword_100101CC0 + 4544)
    || a6 == 11 && *(uint64_t *)(qword_100101CC0 + 4912) <= 0)
  {
    goto LABEL_2;
  }
LABEL_15:
  BOOL v74 = v19 == 0;
  uint64_t v21 = sub_10006A544;
  if (v74) {
    uint64_t v21 = sub_10006A9E4;
  }
  *(void *)(a1 + 520) = v21;
  int v22 = a9;
  switch((int)a6)
  {
    case 2:
      break;
    case 3:
    case 5:
    case 11:
      if (!v20
        || *(void *)(v20 + 1272) != 0x7FFFFFFFLL
        && (!*(_DWORD *)(v20 + 4736)
         || !a8
         || a9
         || *(__int16 *)(a1 + 456) != -1
         || !*(void *)(v20 + 1528)
         || !*(_DWORD *)(a1 + 9360)))
      {
        goto LABEL_2;
      }
      break;
    default:
      goto LABEL_2;
  }
  uint64_t result = sub_100025D60(a4, a5);
  if (!result) {
    goto LABEL_3;
  }
  if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 1264))
  {
    uint64_t v16 = (char *)(a1 + 9384);
    if (!*(void *)(a1 + 9384)) {
      *(void *)(a1 + 9384) = sub_100026CA4(*(void *)(a1 + 376), 0);
    }
    uint64_t v15 = 1;
  }
  sub_100065C7C(a1);
  unint64_t v108 = (_DWORD *)(a1 + 680);
  size_t __n = 8 * (int)v15;
  memcpy((void *)(a1 + 680), v16, __n);
  *(_DWORD *)(a1 + 8872) = v15;
  int v23 = sub_1000286D4(v15, (uint64_t)v16);
  *(_DWORD *)(a1 + 8900) = v23;
  if (v23)
  {
    int v105 = v23;
    uint64_t result = sub_1000C33A0(8 * (int)v15);
    *(void *)(a1 + 9288) = result;
    if (!result) {
      return result;
    }
    memcpy((void *)result, v16, __n);
    uint64_t v24 = sub_1000C33A0(8 * (int)v15);
    *(void *)(a1 + 9296) = v24;
    if (!v24) {
      goto LABEL_129;
    }
    *(_DWORD *)(a1 + 9304) = v15;
    int v25 = (uint64_t *)(a1 + 680);
    int v23 = v105;
    if ((int)v15 >= 1)
    {
      uint64_t v26 = 0;
      do
      {
        uint64_t result = sub_100027F64(*(void *)&v16[v26]);
        *(void *)(a1 + 680 + v26) = result;
        if (!result)
        {
          *(void *)(a1 + v26 + 680) = *(void *)&v16[v26];
          return result;
        }
        if (*(void *)(*(void *)(a1 + 9288) + v26) != result) {
          *(void *)(*(void *)(a1 + 9296) + v26) = result;
        }
        v26 += 8;
      }
      while (8 * v15 != v26);
      int v25 = (uint64_t *)(a1 + 680);
      int v22 = a9;
      int v23 = v105;
      uint64_t v27 = qword_100101CC0;
      if (!qword_100101CC0) {
        goto LABEL_57;
      }
      goto LABEL_44;
    }
  }
  else
  {
    int v25 = (uint64_t *)v16;
  }
  uint64_t v27 = qword_100101CC0;
  if (!qword_100101CC0) {
    goto LABEL_57;
  }
LABEL_44:
  if (!*(_DWORD *)(v27 + 5308) || v23 || (int)v15 < 1 || !*(unsigned char *)(v27 + 4220))
  {
LABEL_50:
    uint64_t v29 = qword_100101CC0;
    if (qword_100101CC0)
    {
LABEL_51:
      char v30 = 0;
      BOOL __na = a7 == 1;
      if (a7 == 1) {
        uint64_t v31 = 0;
      }
      else {
        uint64_t v31 = *(unsigned int *)(v29 + 1072);
      }
      *(_DWORD *)(a1 + 544) = a6;
      unint64_t v107 = (_DWORD *)(a1 + 9272);
      *(_DWORD *)(a1 + 9272) = a8;
      int v106 = (_DWORD *)(a1 + 9276);
      *(_DWORD *)(a1 + 9276) = v22;
      *(_DWORD *)(a1 + 8892) = 1;
      uint64_t v32 = *(void *)(v29 + 1704);
LABEL_58:
      *(_WORD *)(a1 + 9068) = v32;
      if (a3 < 1)
      {
        *(_DWORD *)(a1 + 9204) = 0;
        __int16 v33 = -1;
      }
      else
      {
        *(_DWORD *)(a1 + 9204) = 1;
        __int16 v33 = *(_WORD *)(a2 + 2 * (a3 - 1));
      }
      *(_WORD *)(a1 + 9202) = v33;
      int32x4_t v111 = v25;
      if (a6 == 2)
      {
        if (v30)
        {
          int v34 = 0;
          int v35 = 0;
        }
        else
        {
          int v34 = *(_DWORD *)(v29 + 5348);
          int v35 = *(_DWORD *)(v29 + 5372);
        }
        sub_100039634(a1, v34, v35);
        int v37 = 0;
        *(_DWORD *)(a1 + 8872) = v15;
      }
      else
      {
        if (v30) {
          int v36 = 0;
        }
        else {
          int v36 = *(_DWORD *)(v29 + 5348);
        }
        if ((int)v15 < 1)
        {
          int v36 = 0;
          int v37 = 1;
        }
        else
        {
          uint64_t v38 = v15;
          uint64_t v39 = v25;
          while (*v39 && sub_100026908(*v39))
          {
            ++v39;
            if (!--v38)
            {
              int v36 = 0;
              int v37 = 1;
              goto LABEL_76;
            }
          }
          int v37 = 0;
LABEL_76:
          uint64_t v29 = qword_100101CC0;
        }
        if (v29) {
          int v40 = *(_DWORD *)(v29 + 5372);
        }
        else {
          int v40 = 0;
        }
        sub_100039634(a1, v36, v40);
      }
      if (*(_DWORD *)(a1 + 556))
      {
        int v41 = 1;
        goto LABEL_84;
      }
      int v45 = *(_DWORD *)(a1 + 544);
      if ((v45 | 8) == 0xB)
      {
        if (!v37)
        {
          __int16 v42 = (_DWORD *)(a1 + 8888);
          *(_DWORD *)(a1 + 8888) = a10;
          uint64_t v43 = (_DWORD *)(a1 + 8884);
          *(_DWORD *)(a1 + 8884) = a10;
LABEL_89:
          char v44 = 1;
          if (a6 != 2 && a6 != 5)
          {
            int v46 = sub_1000396BC(a1, 0, (uint64_t)v111, v15, a6, a7, (int *)&v113, (int *)&v113 + 1, (int *)&v112 + 1, (int *)&v112);
LABEL_106:
            char v51 = 1;
LABEL_109:
            if (!v46 || !v113 || !sub_10006ACE8(a1, v113)) {
              goto LABEL_245;
            }
            if (!sub_10009CED4(*(void *)(a1 + 9256), SHIDWORD(v112), v112)) {
              goto LABEL_244;
            }
            if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 4504)) {
              sub_100026910(v108, *(_DWORD *)(a1 + 8872), *(void *)(a1 + 9256));
            }
            if (!sub_100065850(a1)
              || !sub_10002609C((uint64_t)v111, v15, v31, *(void *)(a1 + 9256), v52, v53, v54, v55))
            {
              goto LABEL_245;
            }
            int v56 = *(_DWORD *)(a1 + 9040);
            if (a7)
            {
              int v57 = HIDWORD(v113);
              uint64_t v58 = qword_100101CC0;
              int v59 = v111;
            }
            else
            {
              uint64_t v58 = qword_100101CC0;
              if (qword_100101CC0) {
                uint64_t v64 = *(void *)(qword_100101CC0 + 1544);
              }
              else {
                LODWORD(v64) = 0;
              }
              int v59 = v111;
              int v57 = HIDWORD(v113) + *(_DWORD *)(a1 + 9080) * v64;
              if (v57 <= 1) {
                int v57 = 1;
              }
              HIDWORD(v113) = v57;
            }
            *(_DWORD *)(a1 + 9208) = v57;
            if (v58) {
              uint64_t v65 = *(void *)(v58 + 1552);
            }
            else {
              LODWORD(v65) = 0;
            }
            *(_DWORD *)(a1 + 9212) = v65;
            if ((v51 & 1) == 0)
            {
              int v66 = v56 << 8;
              if (v66 >= 65533) {
                int v66 = 65533;
              }
              *(_DWORD *)(a1 + 9208) = v66;
            }
            *(_DWORD *)(a1 + 8876) = v37;
            if (a7 == 2)
            {
              if (v58) {
                uint64_t v58 = *(void *)(v58 + 968);
              }
              goto LABEL_163;
            }
            if (a7 == 1)
            {
              if (v58) {
                uint64_t v58 = *(void *)(v58 + 4568);
              }
              goto LABEL_163;
            }
            if (a7)
            {
              LOWORD(v58) = 0;
LABEL_163:
              *(_WORD *)(a1 + 9060) = v58;
              *(_WORD *)(a1 + 9062) = v58;
              if (*(__int16 *)(a1 + 9070) <= (__int16)v58 && *(__int16 *)(a1 + 9068) <= 0x4000)
              {
                *(_WORD *)(a1 + 8976) = sub_1000041E4(*(void *)(a1 + 384));
                *(_WORD *)(a1 + 9248) = sub_1000041DC(*(void *)(a1 + 384));
                unsigned int v70 = *(_DWORD *)(a1 + 544);
                if (v70 <= 0xB && ((1 << v70) & 0x828) != 0)
                {
                  if ((int)v15 <= 1)
                  {
                    int v71 = sub_10002623C(*v111);
                    unsigned int v70 = *(_DWORD *)(a1 + 544);
                  }
                  else
                  {
                    int v71 = 1;
                  }
                  *(_DWORD *)(a1 + 8904) = v71;
                }
                if (v70 <= 0xB && ((1 << v70) & 0x828) != 0 && sub_100026978((uint64_t)v111, v15))
                {
                  *(_DWORD *)(a1 + 9008) = 0;
                  goto LABEL_189;
                }
                uint64_t v72 = qword_100101CC0;
                if (qword_100101CC0) {
                  int v73 = *(_DWORD *)(qword_100101CC0 + 4552);
                }
                else {
                  int v73 = 0;
                }
                if (v73) {
                  BOOL v74 = *(_DWORD *)(a1 + 556) == 0;
                }
                else {
                  BOOL v74 = 1;
                }
                if (!v74) {
                  int v73 = 0;
                }
                *(_DWORD *)(a1 + 9008) = v73;
                if (!v73) {
                  goto LABEL_189;
                }
                *uint64_t v43 = 0;
                *__int16 v42 = 0;
                if (v72)
                {
                  uint64_t v75 = *(void *)(v72 + 4040);
                  if (v75)
                  {
                    uint64_t v76 = *(void *)(a1 + 9016);
                    if (v76)
                    {
                      sub_1000241E4(v76);
                      goto LABEL_189;
                    }
                    uint64_t v77 = sub_100024128(*(void *)(a1 + 9000), v75);
                    *(void *)(a1 + 9016) = v77;
                    if (v77)
                    {
LABEL_189:
                      BOOL v78 = __na;
                      if (__na)
                      {
                        LODWORD(v79) = 1000000;
                      }
                      else
                      {
                        if (qword_100101CC0) {
                          uint64_t v79 = *(void *)(qword_100101CC0 + 1592);
                        }
                        else {
                          LODWORD(v79) = 0;
                        }
                        BOOL v78 = __na;
                      }
                      if (qword_100101CC0)
                      {
                        int v80 = *(_DWORD *)(qword_100101CC0 + 1600);
                        uint64_t v81 = *(void *)(qword_100101CC0 + 1440);
                      }
                      else
                      {
                        int v80 = 0;
                        LODWORD(v81) = 0;
                      }
                      sub_1000B4440(a1 + 9084, *(_DWORD *)(a1 + 432), v80, v79, v81, 0);
                      if (v78
                        || !qword_100101CC0
                        || *(void *)(qword_100101CC0 + 1656) >= *(void *)(qword_100101CC0 + 1592))
                      {
                        *(_DWORD *)(a1 + 9180) = 0;
                        uint64_t v85 = qword_100101CC0;
                        if (!qword_100101CC0) {
                          goto LABEL_206;
                        }
                      }
                      else
                      {
                        *(_DWORD *)(a1 + 9180) = 1;
                        *(_DWORD *)(a1 + 8880) = sub_100025DE4((uint64_t)v111, v15);
                        if (qword_100101CC0)
                        {
                          int v82 = *(_DWORD *)(qword_100101CC0 + 1600);
                          int v83 = *(_DWORD *)(qword_100101CC0 + 1656);
                          uint64_t v84 = *(void *)(qword_100101CC0 + 1440);
                        }
                        else
                        {
                          int v83 = 0;
                          int v82 = 0;
                          LODWORD(v84) = 0;
                        }
                        sub_1000B4440(a1 + 9132, *(_DWORD *)(a1 + 432), v82, v83, v84, 0);
                        uint64_t v85 = qword_100101CC0;
                        if (!qword_100101CC0) {
                          goto LABEL_206;
                        }
                      }
                      if (*(_DWORD *)(v85 + 4464)) {
                        sub_10009CC28(*(void *)(a1 + 9256));
                      }
LABEL_206:
                      uint64_t v86 = *(void *)(a1 + 9264);
                      if (v86) {
                        sub_10005230C(v86);
                      }
                      int v87 = sub_1000B51F0(*(void *)(a1 + 376));
                      *(_DWORD *)(a1 + 620) = v87;
                      if (*(_DWORD *)(a1 + 8896))
                      {
                        int v88 = v87 + *(_DWORD *)(a1 + 9360) + 2;
                        *(_DWORD *)(a1 + 616) = v88;
                        *(_DWORD *)(a1 + 612) = v88;
                      }
                      uint64_t v89 = qword_100101CC0;
                      if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 1684))
                      {
                        BOOL v90 = sub_1000B5190(*(void *)(a1 + 376));
                        *(_DWORD *)(a1 + 9280) = v90;
                        uint64_t v89 = qword_100101CC0;
                      }
                      else
                      {
                        BOOL v90 = 0;
                        *(_DWORD *)(a1 + 9280) = 0;
                        *(_WORD *)(a1 + 456) = -1;
                      }
                      if (v89) {
                        int v91 = *(_DWORD *)(v89 + 1288);
                      }
                      else {
                        int v91 = 0;
                      }
                      *(_DWORD *)(a1 + 9284) = v91;
                      switch(*(_DWORD *)(a1 + 544))
                      {
                        case 2:
                          int v93 = sub_10006ADF8;
                          if (v89)
                          {
                            uint64_t v94 = *(void *)(v89 + 3616);
                            uint64_t v95 = sub_1000667A4;
                            BOOL v96 = v94 == 0;
                            if (!v94) {
                              uint64_t v95 = sub_1000666C8;
                            }
                            int v93 = sub_10006AF80;
                            if (v96) {
                              int v93 = sub_10006ADF8;
                            }
                          }
                          else
                          {
                            uint64_t v95 = sub_1000666C8;
                          }
                          *(void *)(a1 + 9392) = v95;
                          *(void *)(a1 + 9400) = v93;
                          if (v90)
                          {
                            if (v89)
                            {
                              if (!*(void *)(a1 + 656))
                              {
                                uint64_t v101 = *(void *)(v89 + 3616);
                                if (v101 >= 1)
                                {
                                  uint64_t v102 = sub_1000C33A0(2 * v101);
                                  *(void *)(a1 + 656) = v102;
                                  if (!v102) {
                                    goto LABEL_244;
                                  }
                                  uint64_t v103 = qword_100101CC0 ? 2 * *(void *)(qword_100101CC0 + 3616) : 0;
                                  uint64_t v104 = sub_1000C33A0(v103);
                                  *(void *)(a1 + 664) = v104;
                                  if (!v104) {
                                    goto LABEL_244;
                                  }
                                }
                              }
                            }
                          }
                          break;
                        case 3:
                        case 0xB:
                          *(void *)(a1 + 9392) = sub_100066B5C;
                          if (v90) {
                            uint64_t v92 = sub_10006B308;
                          }
                          else {
                            uint64_t v92 = sub_10006B4E8;
                          }
                          *(void *)(a1 + 9400) = v92;
                          break;
                        case 5:
                          *(void *)(a1 + 9392) = sub_10006695C;
                          *(void *)(a1 + 9400) = sub_10006B158;
                          *(_DWORD *)(a1 + 9284) = 0;
                          break;
                        default:
                          break;
                      }
                      if (*(_DWORD *)(a1 + 8896))
                      {
                        if (*(_DWORD *)(a1 + 8904)) {
                          uint64_t v97 = sub_1000663E8;
                        }
                        else {
                          uint64_t v97 = sub_1000665E8;
                        }
                      }
                      else
                      {
                        uint64_t v97 = sub_100066098;
                      }
                      *(void *)(a1 + 9408) = v97;
                      if (!qword_100101CC0
                        || !*(_DWORD *)(qword_100101CC0 + 4736)
                        || (unsigned int v98 = *(_DWORD *)(a1 + 544), v98 > 0xB)
                        || ((1 << v98) & 0x828) == 0
                        || !*v107
                        || *v106
                        || (uint64_t v99 = sub_10006B67C, *(__int16 *)(a1 + 456) != -1))
                      {
                        uint64_t v99 = sub_10006BE94;
                      }
                      *(void *)(a1 + 528) = v99;
                      if (!*(_DWORD *)(a1 + 9280) || *(int *)(a1 + 9360) < 1)
                      {
                        unsigned int v100 = sub_1000B529C(*(uint64_t **)(a1 + 376));
                        *(_WORD *)(a1 + 9054) = sub_1000BD9AC(*(void *)(a1 + 376), v100);
                        sub_10006C504(a1);
                        return 1;
                      }
                    }
                  }
                }
              }
LABEL_244:
              *(_DWORD *)(a1 + 552) = 3;
LABEL_245:
              sub_100065C7C(a1);
              return 0;
            }
            BOOL v67 = sub_10003CE54((_DWORD **)v59, v15);
            LODWORD(v58) = qword_100101CC0;
            if (v67)
            {
              if (qword_100101CC0)
              {
                unsigned int v68 = (int *)(qword_100101CC0 + 4920);
LABEL_159:
                int v69 = *v68;
                uint64_t v58 = *(void *)(qword_100101CC0 + 1640);
                goto LABEL_161;
              }
            }
            else if (qword_100101CC0)
            {
              unsigned int v68 = (int *)(qword_100101CC0 + 1632);
              goto LABEL_159;
            }
            int v69 = 0;
LABEL_161:
            LODWORD(v58) = v69 + *(_DWORD *)(a1 + 9080) * v58;
            if ((int)v58 <= 1) {
              LOWORD(v58) = 1;
            }
            goto LABEL_163;
          }
LABEL_95:
          LODWORD(v47) = qword_100101CC0;
          if (qword_100101CC0)
          {
            uint64_t v48 = *(void *)(qword_100101CC0 + 1536);
            if (v48) {
              BOOL v49 = v48 < 65534;
            }
            else {
              BOOL v49 = 0;
            }
            int v46 = v49;
            HIDWORD(v113) = *(void *)(qword_100101CC0 + 1536);
            LODWORD(v113) = *(void *)(qword_100101CC0 + 1560);
            if (v44)
            {
              HIDWORD(v112) = *(void *)(qword_100101CC0 + 4488);
              uint64_t v50 = *(void *)(qword_100101CC0 + 4496);
LABEL_105:
              LODWORD(v112) = v50;
              goto LABEL_106;
            }
            HIDWORD(v112) = *(void *)(qword_100101CC0 + 4472);
            uint64_t v47 = *(void *)(qword_100101CC0 + 4480);
          }
          else
          {
            int v46 = 0;
            LODWORD(v50) = 0;
            uint64_t v113 = 0;
            HIDWORD(v112) = 0;
            if (v44) {
              goto LABEL_105;
            }
          }
          char v51 = 0;
          LODWORD(v112) = v47;
          goto LABEL_109;
        }
      }
      else
      {
        int v41 = a10;
        if (!v37 || (int v41 = a10, v45 != 5))
        {
LABEL_84:
          __int16 v42 = (_DWORD *)(a1 + 8888);
          *(_DWORD *)(a1 + 8888) = v41;
          uint64_t v43 = (_DWORD *)(a1 + 8884);
          *(_DWORD *)(a1 + 8884) = a10;
          if (v37)
          {
            char v44 = 0;
            goto LABEL_95;
          }
          goto LABEL_89;
        }
      }
      char v44 = 0;
      __int16 v42 = (_DWORD *)(a1 + 8888);
      *(_DWORD *)(a1 + 8888) = 1;
      uint64_t v43 = (_DWORD *)(a1 + 8884);
      *(_DWORD *)(a1 + 8884) = a10;
      goto LABEL_95;
    }
LABEL_57:
    uint64_t v29 = 0;
    uint64_t v31 = 0;
    LOWORD(v32) = 0;
    BOOL __na = a7 == 1;
    *(_DWORD *)(a1 + 544) = a6;
    unint64_t v107 = (_DWORD *)(a1 + 9272);
    *(_DWORD *)(a1 + 9272) = a8;
    *(_DWORD *)(a1 + 9276) = v22;
    char v30 = 1;
    *(_DWORD *)(a1 + 8892) = 1;
    int v106 = (_DWORD *)(a1 + 9276);
    goto LABEL_58;
  }
  uint64_t v28 = v25;
  if (sub_100025F00(v25, v15))
  {
    int v25 = v28;
    goto LABEL_50;
  }
  uint64_t result = sub_1000C33A0(8 * v15);
  *(void *)(a1 + 9288) = result;
  if (result)
  {
    memcpy((void *)result, v28, __n);
    uint64_t v60 = sub_1000C33A0(8 * v15);
    *(void *)(a1 + 9296) = v60;
    if (v60)
    {
      if (qword_100101CC0) {
        int v61 = (unsigned __int8 *)(qword_100101CC0 + 4220);
      }
      else {
        int v61 = 0;
      }
      sub_100034AE4(0, v61, v15, v28, v108);
      uint64_t v62 = 0;
      *(_DWORD *)(a1 + 9304) = v15;
      do
      {
        *(void *)(*(void *)(a1 + 9296) + v62) = 0;
        uint64_t v63 = *(void *)(a1 + 680 + v62);
        if (*(void *)(*(void *)(a1 + 9288) + v62) != v63) {
          *(void *)(*(void *)(a1 + 9296) + v62) = v63;
        }
        v62 += 8;
      }
      while (8 * v15 != v62);
      int v25 = (uint64_t *)(a1 + 680);
      uint64_t v29 = qword_100101CC0;
      if (qword_100101CC0) {
        goto LABEL_51;
      }
      goto LABEL_57;
    }
LABEL_129:
    sub_1000C321C(*(void *)(a1 + 9288));
    uint64_t result = 0;
    *(void *)(a1 + 9288) = 0;
  }
  return result;
}

void sub_100068B9C(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 9040))
  {
    if (*(_DWORD *)(a1 + 9008))
    {
      uint64_t v2 = *(void *)(a1 + 9016);
      if (v2) {
        sub_1000241E4(v2);
      }
    }
    sub_1000B4488(a1 + 9084);
    if (*(_DWORD *)(a1 + 9180)) {
      sub_1000B4488(a1 + 9132);
    }
    unsigned int v7 = qword_100101CC0;
    if (qword_100101CC0) {
      unsigned int v7 = *(_DWORD *)(qword_100101CC0 + 1072);
    }
    if (*(_DWORD *)(a1 + 548) == 1) {
      uint64_t v8 = 0;
    }
    else {
      uint64_t v8 = v7;
    }
    sub_10002609C(a1 + 680, *(unsigned int *)(a1 + 8872), v8, *(void *)(a1 + 9256), v3, v4, v5, v6);
    sub_10006C504(a1);
  }
}

uint64_t sub_100068C48(uint64_t result, const void *a2, int *a3, int32x4_t a4, double a5, int32x4_t a6, int32x4_t a7, int8x16_t a8, int8x16_t a9)
{
  uint64_t v11 = result;
  uint64_t v12 = (unsigned __int16 *)(result + 8976);
  int v82 = 0;
  uint64_t v13 = qword_100101CC0;
  if (qword_100101CC0)
  {
    if (*(_DWORD *)(qword_100101CC0 + 1648) && !*(_DWORD *)(result + 632))
    {
      BOOL v15 = 1;
      goto LABEL_145;
    }
    if (!*(_DWORD *)(qword_100101CC0 + 1680) || *(__int16 *)(result + 9200) < 1)
    {
LABEL_8:
      int v82 = *a3;
      if (*(_DWORD *)(v13 + 1464))
      {
        if (*(_DWORD *)(v11 + 628))
        {
          uint64_t result = (uint64_t)sub_100065ED0(v11, a2, a3);
          if (v12[41] != 0x4000) {
            goto LABEL_20;
          }
LABEL_18:
          unsigned __int16 v16 = v12[112];
          if (v16)
          {
            *(_DWORD *)(v11 + 9076) = 0x40000000;
LABEL_30:
            v12[112] = v16 + 1;
            goto LABEL_140;
          }
          goto LABEL_20;
        }
        uint64_t result = sub_100065EC0(v11, &v82);
        a2 = (const void *)result;
      }
      if (v12[41] != 0x4000) {
        goto LABEL_20;
      }
      goto LABEL_18;
    }
    uint64_t v14 = sub_100065EC0(result, &v82);
    uint64_t result = sub_100015518(*(void *)(v11 + 384), (uint64_t)a2, v14);
    uint64_t v13 = qword_100101CC0;
    if (qword_100101CC0)
    {
      *(_DWORD *)(v11 + 628) = *(void *)(qword_100101CC0 + 1472) < (int)result;
      goto LABEL_8;
    }
    *(_DWORD *)(v11 + 628) = (int)result > 0;
  }
  int v82 = *a3;
  if (v12[41] == 0x4000) {
    goto LABEL_18;
  }
LABEL_20:
  if (a2) {
    sub_100006AA4(*(void *)(v11 + 384), (uint64_t)a2, (__int16 *)&v82, *(void *)(v11 + 408), v12[112], *(_DWORD *)(v11 + 628), a4, a5, a6, a7, a8, a9);
  }
  sub_10009E740(*(void *)(v11 + 9000));
  if ((__int16)v12[46] < 0 || (__int16)v12[47] < 0) {
    sub_100065F24(v11);
  }
  int v17 = (__int16)v12[36];
  v12[41] = v17;
  *(_DWORD *)(v11 + 9076) += v17;
  *((_DWORD *)v12 + 18) = 1073758208;
  v12[38] = -1;
  if (qword_100101CC0
    && *(_DWORD *)(qword_100101CC0 + 4544)
    && !sub_100026168((uint64_t *)(v11 + 680), *(_DWORD *)(v11 + 8872), 0, 0, v12[112]))
  {
    *(_DWORD *)(v11 + 552) = 3;
    sub_10005EEF4(*(int **)(v11 + 9240));
    if (v12[41] == 0x4000) {
      goto LABEL_29;
    }
  }
  else
  {
    sub_10005EEF4(*(int **)(v11 + 9240));
    if (v12[41] == 0x4000)
    {
LABEL_29:
      uint64_t result = sub_100006C90(*(void *)(v11 + 384), (__int16)v12[112], (_DWORD *)(v11 + 436));
      *(_DWORD *)(v11 + 9076) = 0x40000000;
      *(_DWORD *)(v11 + 552) = 5;
      unsigned __int16 v16 = v12[112];
      goto LABEL_30;
    }
  }
  (*(void (**)(uint64_t))(v11 + 520))(v11);
  if (*(_DWORD *)(v11 + 552) == 3)
  {
    uint64_t result = sub_100006C90(*(void *)(v11 + 384), (__int16)v12[112], (_DWORD *)(v11 + 436));
    goto LABEL_140;
  }
  BOOL v18 = sub_10003CE54((_DWORD **)(v11 + 680), *(_DWORD *)(v11 + 8872));
  int v19 = *(_DWORD *)(v11 + 9044);
  int v20 = *(_DWORD *)(v11 + 9208);
  if (v18)
  {
    if (v19 > v20)
    {
      uint64_t v21 = *(int **)(v11 + 9232);
      int v22 = (char *)*((void *)v21 + 1);
      uint64_t v23 = *v21;
      bzero(v22, 2 * v23);
      if ((int)v23 > (__int16)v12[2]) {
        ++*(_WORD *)&v22[2 * (__int16)v12[2]];
      }
      int v24 = *(_DWORD *)(v11 + 9044);
      if (v24 >= 2)
      {
        int v25 = 0;
        do
        {
          int v26 = *(__int16 *)(*(void *)(*(void *)(v11 + 9032) + 8 * (v25 >> 8))
                           + 32 * v25
                           + 24);
          if ((int)v23 > v26)
          {
            uint64_t v27 = 2 * ((__int16)v26 & ~((__int16)v26 >> 31));
            ++*(_WORD *)&v22[v27];
            int v24 = *(_DWORD *)(v11 + 9044);
          }
          ++v25;
        }
        while (v25 < v24 - 1);
      }
    }
  }
  else if (v19 > v20)
  {
    uint64_t v28 = *(int **)(v11 + 9232);
    uint64_t v29 = (void *)*((void *)v28 + 1);
    uint64_t v30 = *v28;
    bzero(v29, 2 * v30);
    if ((int)v30 > (__int16)v12[2]) {
      ++*((_WORD *)v29 + (__int16)v12[2]);
    }
    int v31 = *(_DWORD *)(v11 + 9044);
    if (v31 >= 2)
    {
      int v32 = 0;
      do
      {
        int v33 = *(__int16 *)(*(void *)(*(void *)(v11 + 9032) + 8 * (v32 >> 8))
                         + 32 * v32
                         + 24);
        if ((int)v30 > v33)
        {
          ++*((_WORD *)v29 + v33);
          int v31 = *(_DWORD *)(v11 + 9044);
        }
        ++v32;
      }
      while (v32 < v31 - 1);
    }
  }
  (*(void (**)(uint64_t))(v11 + 528))(v11);
  if ((__int16)v12[8] == -1 && v12[2] == 0x4000) {
    v12[8] = v12[112];
  }
  if (*(unsigned char *)(v11 + 424)) {
    sub_10003A240(v11, v34, v35, v36, v37, v38, v39, v40);
  }
  sub_100006C90(*(void *)(v11 + 384), (__int16)v12[112], (_DWORD *)(v11 + 436));
  if (!qword_100101CC0
    || !*(_DWORD *)(qword_100101CC0 + 1492)
    || sub_100025D50((unsigned int *)(v11 + 9084)) != 3)
  {
    BOOL v50 = v12[104] == *v12;
    goto LABEL_78;
  }
  int v41 = 0;
  int v42 = *(_DWORD *)(v11 + 9040) << 8;
  unsigned int v43 = v42 - *(_DWORD *)(v11 + 9044);
  uint64_t v44 = *(void *)(v11 + 9032);
  uint64_t v45 = *(void *)(v44 + 8 * (v43 >> 8)) + 32 * -*(unsigned char *)(v11 + 9044);
  signed __int16 v81 = v12[2];
  __int16 v46 = 0x4000;
  unsigned __int16 v47 = -1;
  while (1)
  {
    int v48 = *(unsigned __int16 *)(v45 + 18);
    if (v48 != 0xFFFF) {
      break;
    }
    if (v42 - 1 == v43) {
      goto LABEL_115;
    }
    ++v43;
LABEL_62:
    uint64_t v45 = *(void *)(v44 + 8 * (v43 >> 8)) + 32 * v43;
  }
  if (v48 != v47)
  {
    int v41 = sub_10009DA20(*(void *)(v11 + 9256), *(unsigned __int16 *)(v45 + 18));
    unsigned __int16 v47 = v48;
  }
  if (v41 == *(unsigned __int8 *)(v45 + 26))
  {
    if ((*(_DWORD *)(v11 + 544) == 2 || (*(void *)v45 & 0x8000000000000000) != 0) && *(__int16 *)(v45 + 20) < v46) {
      __int16 v46 = *(_WORD *)(v45 + 20);
    }
  }
  else
  {
    int v49 = *(__int16 *)(v45 + 24);
    if (v49 >= v81) {
      LOWORD(v49) = v81;
    }
    signed __int16 v81 = v49;
  }
  if (++v43 != v42)
  {
    uint64_t v44 = *(void *)(v11 + 9032);
    goto LABEL_62;
  }
LABEL_115:
  BOOL v50 = v46 <= v81;
LABEL_78:
  uint64_t result = sub_1000B44AC((unsigned int *)(v11 + 9084), v50);
  if (*(_DWORD *)(v11 + 9180)) {
    uint64_t result = sub_1000B44AC((unsigned int *)(v11 + 9132), v50);
  }
  if (*(_DWORD *)(v11 + 544) != 11) {
    goto LABEL_86;
  }
  uint64_t v51 = qword_100101CC0;
  if (qword_100101CC0) {
    uint64_t v51 = *(void *)(qword_100101CC0 + 4912);
  }
  if (v51 < (__int16)(v12[2] - v12[36]))
  {
    if (*(_DWORD *)(v11 + 552) != 6) {
      *(_DWORD *)(v11 + 552) = 6;
    }
LABEL_87:
    uint64_t result = sub_1000B4630((_DWORD *)(v11 + 9084));
    if (result)
    {
LABEL_88:
      int v58 = 0;
      BOOL v59 = 0;
      goto LABEL_102;
    }
    uint64_t v83 = 0;
    if (*(_DWORD *)(v11 + 9180))
    {
      if (sub_1000B4630((_DWORD *)(v11 + 9132)))
      {
        uint64_t result = sub_10009F2D4(*(void *)(v11 + 9000), &v83, (_DWORD *)&v83 + 1);
        if (*(_DWORD *)(v11 + 9076) + (__int16)v12[36] == HIDWORD(v83) && v83 != -1)
        {
          if (!*(_DWORD *)(v11 + 8880)) {
            goto LABEL_88;
          }
          if (v12[2] == 0x4000)
          {
            int v60 = *(_DWORD *)(v11 + 9040) << 8;
            int v61 = *(_DWORD *)(v11 + 9044);
            if (v60 - v61 >= v60 - 1)
            {
LABEL_100:
              uint64_t result = sub_10006D294(v11);
              if (result) {
                goto LABEL_88;
              }
            }
            else
            {
              int v62 = -v61;
              while (1)
              {
                unint64_t v63 = *(void *)(*(void *)(*(void *)(v11 + 9032) + 8 * ((v60 + v62) >> 8))
                                + 32 * (v60 + v62));
                uint64_t v64 = *(unsigned int **)(v11 + 8 * ((v63 >> 53) & 0x3FF) + 680);
                if (sub_100025D50(v64) != 3 || sub_10002A7AC((uint64_t)v64, (v63 >> 35) & 0x3FFFF)) {
                  break;
                }
                if (++v62 == -1) {
                  goto LABEL_100;
                }
              }
            }
          }
        }
      }
    }
    uint64_t result = sub_100039F98(v11);
    int v58 = 0;
    BOOL v59 = result == 0;
    if (result)
    {
LABEL_102:
      if (qword_100101CC0)
      {
        int v58 = *(_DWORD *)(qword_100101CC0 + 5364);
        if (v58)
        {
          uint64_t result = sub_100039A9C(v11, *(unsigned int *)(qword_100101CC0 + 5376), v52, v53, v54, v55, v56, v57);
          int v58 = result != 0;
        }
      }
    }
    if ((v59 | v58) == 1)
    {
      if (*(_DWORD *)(v11 + 552) != 6)
      {
        int v65 = 1;
        goto LABEL_109;
      }
    }
    else
    {
      int v65 = 2;
LABEL_109:
      *(_DWORD *)(v11 + 552) = v65;
    }
    if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 816) && v12[2] == 0x4000)
    {
      unsigned int v66 = (*(_DWORD *)(v11 + 9040) << 8) - *(_DWORD *)(v11 + 9044);
      uint64_t v67 = *(void *)(v11 + 9032);
      uint64_t v68 = *(void *)(v67 + 8 * (v66 >> 8));
      uint64_t v69 = -*(unsigned char *)(v11 + 9044);
      uint64_t v70 = v68 + 32 * v69;
      if (*(_DWORD *)(v11 + 620) >= (int)*(unsigned __int16 *)(v70 + 18))
      {
        __int16 v72 = 0x4000;
        __int16 v71 = 0x4000;
        do
        {
          uint64_t result = sub_10002BD4C(*(void *)(v11 + 8 * ((*(void *)v70 >> 53) & 0x3FFLL) + 680), *(void *)v70);
          int v73 = *(__int16 *)(v68 + 32 * v69 + 24);
          __int16 v74 = v71;
          if (v73 < v71) {
            __int16 v74 = *(_WORD *)(v68 + 32 * v69 + 24);
          }
          __int16 v75 = v72;
          if (v73 < v72) {
            __int16 v75 = *(_WORD *)(v68 + 32 * v69 + 24);
          }
          if (result) {
            __int16 v71 = v74;
          }
          ++v66;
          uint64_t v67 = *(void *)(v11 + 9032);
          uint64_t v68 = *(void *)(v67 + 8 * (v66 >> 8));
          if (!result) {
            __int16 v72 = v75;
          }
          uint64_t v69 = v66;
          uint64_t v70 = v68 + 32 * v66;
        }
        while (*(_DWORD *)(v11 + 620) >= (int)*(unsigned __int16 *)(v70 + 18));
      }
      else
      {
        __int16 v71 = 0x4000;
        __int16 v72 = 0x4000;
      }
      while (*(__int16 *)(v70 + 18) != -1)
      {
        uint64_t v70 = *(void *)(v67 + 8 * (v66 >> 8)) + 32 * v66;
        if (*(__int16 *)(v70 + 24) < v72) {
          __int16 v72 = *(_WORD *)(v70 + 24);
        }
        ++v66;
      }
      uint64_t v76 = qword_100101CC0;
      if (qword_100101CC0) {
        uint64_t v76 = *(void *)(qword_100101CC0 + 1504);
      }
      if (v76 < (__int16)(v72 - v71)) {
        *(_DWORD *)(v11 + 552) = 2;
      }
    }
  }
  else
  {
LABEL_86:
    if (*(_DWORD *)(v11 + 552) != 3) {
      goto LABEL_87;
    }
  }
  ++v12[112];
  int v77 = *(_DWORD *)(v11 + 9380) + 1;
  *(_DWORD *)(v11 + 9380) = v77;
  if (v77 == *(_DWORD *)(v11 + 9372))
  {
    *(_DWORD *)(v11 + 9380) = 0;
    int v78 = *(_DWORD *)(v11 + 9376);
    if (v78 + 1 == *(_DWORD *)(v11 + 9368)) {
      int v79 = 0;
    }
    else {
      int v79 = v78 + 1;
    }
    *(_DWORD *)(v11 + 9376) = v79;
  }
LABEL_140:
  uint64_t v80 = qword_100101CC0;
  if (qword_100101CC0)
  {
    if (*(_DWORD *)(qword_100101CC0 + 1464)) {
      *(_DWORD *)(v11 + 628) = *(_DWORD *)(v11 + 628) == 0;
    }
    if (*(_DWORD *)(v80 + 1648))
    {
      BOOL v15 = *(_DWORD *)(v11 + 632) == 0;
LABEL_145:
      *(_DWORD *)(v11 + 632) = v15;
    }
  }
  return result;
}

uint64_t sub_100069520(uint64_t a1, int a2)
{
  uint64_t v2 = *(unsigned int *)(a1 + 552);
  if (v2 != 1) {
    return v2;
  }
  BOOL v5 = 1;
  if (sub_1000B46DC((unsigned int *)(a1 + 9084), a2, 0) == 2)
  {
    BOOL v6 = sub_10009F2C4(*(void *)(a1 + 9000));
    if (v6) {
      uint64_t v2 = 2;
    }
    else {
      uint64_t v2 = 1;
    }
    BOOL v5 = !v6;
    if (!*(_DWORD *)(a1 + 9180)) {
      return v2;
    }
  }
  else
  {
    uint64_t v2 = 1;
    if (!*(_DWORD *)(a1 + 9180)) {
      return v2;
    }
  }
  if (sub_1000B46DC((unsigned int *)(a1 + 9132), a2, 0) == 2 && v5)
  {
    uint64_t v14 = 0;
    sub_10009F2D4(*(void *)(a1 + 9000), &v14, (_DWORD *)&v14 + 1);
    uint64_t v2 = 1;
    if (*(_DWORD *)(a1 + 9076) + *(__int16 *)(a1 + 9048) == HIDWORD(v14) && v14 != -1)
    {
      if (*(_DWORD *)(a1 + 8880))
      {
        if (*(_WORD *)(a1 + 8980) == 0x4000)
        {
          int v8 = *(_DWORD *)(a1 + 9040) << 8;
          int v9 = *(_DWORD *)(a1 + 9044);
          if (v8 - v9 >= v8 - 1)
          {
LABEL_22:
            if (sub_10006D294(a1)) {
              return 2;
            }
            else {
              return 1;
            }
          }
          else
          {
            int v10 = -v9;
            while (1)
            {
              unint64_t v11 = *(void *)(*(void *)(*(void *)(a1 + 9032) + 8 * ((v8 + v10) >> 8))
                              + 32 * (v8 + v10));
              uint64_t v12 = *(unsigned int **)(a1 + 8 * ((v11 >> 53) & 0x3FF) + 680);
              if (sub_100025D50(v12) != 3 || sub_10002A7AC((uint64_t)v12, (v11 >> 35) & 0x3FFFF)) {
                return 1;
              }
              if (++v10 == -1) {
                goto LABEL_22;
              }
            }
          }
        }
      }
      else
      {
        return 2;
      }
    }
  }
  return v2;
}

uint64_t sub_1000696C8(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4, int a5, _DWORD *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v22 = sub_100039EB4(a1);
  if (v22 == 4 || v22 == 3 || v22 == 1) {
    goto LABEL_9;
  }
  unsigned int v23 = *(_DWORD *)(a1 + 544);
  BOOL v24 = v23 > 0xB;
  int v25 = (1 << v23) & 0x828;
  if (v24 || v25 == 0)
  {
    int v27 = *(_DWORD *)(a1 + 8872);
  }
  else
  {
    int v27 = *(_DWORD *)(a1 + 8872);
    if (!v27)
    {
LABEL_9:
      uint64_t result = 0;
LABEL_10:
      *a6 = -1;
      *a3 = 0x40000000;
      return result;
    }
  }
  uint64_t v33 = sub_10002BD6C(a1 + 680, v27);
  if (*(_DWORD *)(a1 + 9320) < (int)a2)
  {
    sub_1000C321C(*(void *)(a1 + 9312));
    uint64_t result = sub_1000C33A0(1096 * (int)a2);
    *(void *)(a1 + 9312) = result;
    if (!result) {
      goto LABEL_10;
    }
    *(_DWORD *)(a1 + 9320) = a2;
  }
  uint64_t v68 = (_DWORD **)(a1 + 680);
  BOOL v69 = *(int *)(a1 + 8872) >= 1 && sub_100025D50(*(unsigned int **)(a1 + 680)) == 3;
  *(void *)uint64_t v70 = 0;
  unint64_t v34 = *(void *)(a1 + 9312);
  if (*(_DWORD *)(a1 + 9008))
  {
    uint64_t v66 = a8;
    if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 4736))
    {
      uint64_t v65 = a4;
      if (*(_DWORD *)(a1 + 556)) {
        v70[1] = sub_10006D384(a1, v34, a2, 0, v29, v30, v31, v32);
      }
      else {
        v70[1] = sub_10006D77C(a1, (char *)v34, a2, 0);
      }
LABEL_55:
      signed int v52 = *(_DWORD *)(a1 + 8872);
      if (v52 >= 1 && (v53 = sub_100025D50(*(unsigned int **)(a1 + 680)), signed int v52 = *(_DWORD *)(a1 + 8872), v53 == 3))
      {
        sub_100024580(*(void *)(a1 + 376), v33, *(void *)(a1 + 9016), (char *)v34, &v70[1], a2, (uint64_t)v68, v52, a14);
        if (qword_100101CC0 && *(void *)(qword_100101CC0 + 1272) == 0x7FFFFFFFLL) {
          int v54 = *(_DWORD *)(a1 + 9284);
        }
        else {
          int v54 = 0;
        }
        uint64_t v55 = v65;
        uint64_t v57 = a10;
        uint64_t v56 = a9;
        sub_10003C260(v34, v70[1], v68, *(unsigned int *)(a1 + 8872), v54);
      }
      else
      {
        sub_100025048(*(void **)(a1 + 376), v33, *(int **)(a1 + 9016), (char *)v34, &v70[1], a2, (uint64_t)v68, v52, a14);
        uint64_t v55 = v65;
        uint64_t v57 = a10;
        uint64_t v56 = a9;
      }
      bzero(a7, a5);
      if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 4592) && *(_DWORD *)(qword_100101CC0 + 4596))
      {
        if (*(void *)(qword_100101CC0 + 4104) < v70[1]) {
          v70[1] = *(void *)(qword_100101CC0 + 4104);
        }
        sub_10003CBC0(a1, 0, (char *)v34, &v70[1]);
      }
      if (v69) {
        sub_10006517C(a1, v34, v70[1]);
      }
      sub_10006544C(a1, v34, v70[1]);
      sub_10003BAB8(v34, &v70[1], a2, (uint64_t)a3, v55, a5, (uint64_t)a6, (uint64_t)a7, v66, v56, v57, a11, a12, *(void *)(a1 + 376));
      uint64_t result = v70[1];
      *(_DWORD *)(a1 + 9324) = v70[1];
      return result;
    }
    uint64_t result = sub_10009F2E8(*(void *)(a1 + 9000), v34 + 28, v34 + 384, v34 + 856, v34 + 323, (__int16 *)(v34 + 146), 59, (_DWORD *)(v34 + 8), (_DWORD *)v34, (_DWORD *)(v34 + 24), 0, 0, v70);
    *(_WORD *)(v34 + 4) = 0;
    *(_OWORD *)(v34 + 264) = 0u;
    *(_OWORD *)(v34 + 280) = 0u;
    *(_OWORD *)(v34 + 296) = 0u;
    *(_OWORD *)(v34 + 307) = 0u;
    if (*(int *)(a1 + 8872) >= 1) {
      *(void *)(v34 + 16) = *(void *)(a1 + 8 * v70[0] + 680);
    }
    if (result)
    {
      uint64_t v40 = *(int *)(v34 + 8);
      if (!v40) {
        return 0;
      }
      uint64_t v65 = a4;
      if (v33)
      {
        if ((int)v40 >= 1)
        {
          uint64_t v41 = 0;
          do
          {
            *(_DWORD *)(v34 + 4 * v41 + 620) = sub_100031A50(v33, *(unsigned int *)(v34 + 4 * v41 + 384), *(unsigned int *)(v34 + 4 * v41 + 856), v35, v36, v37, v38, v39);
            ++v41;
          }
          while (v41 < *(int *)(v34 + 8));
        }
      }
      else
      {
        bzero((void *)(v34 + 620), 4 * v40);
      }
      v70[1] = 1;
      goto LABEL_55;
    }
  }
  else
  {
    if (a7) {
      bzero(a7, a5);
    }
    uint64_t v42 = *(unsigned int *)(a1 + 8884);
    if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 4152))
    {
      if (*(_DWORD *)(a1 + 556)) {
        int v43 = sub_10006D384(a1, v34, a2, v42, v29, v30, v31, v32);
      }
      else {
        int v43 = sub_10006D77C(a1, (char *)v34, a2, v42);
      }
      v70[1] = v43;
      if (v69)
      {
        sub_100024474(*(void *)(a1 + 9000), v33, (uint64_t)v68, v34, v43);
        sub_100024E48(*(void *)(a1 + 376), v34, &v70[1]);
        sub_10003C260(v34, v70[1], v68, *(unsigned int *)(a1 + 8872), *(_DWORD *)(a1 + 9284));
        sub_10006517C(a1, v34, v70[1]);
      }
      if (qword_100101CC0
        && *(_DWORD *)(qword_100101CC0 + 4592)
        && *(_DWORD *)(qword_100101CC0 + 4596)
        && !*(_DWORD *)(qword_100101CC0 + 5196))
      {
        if (*(void *)(qword_100101CC0 + 4104) < v70[1]) {
          v70[1] = *(void *)(qword_100101CC0 + 4104);
        }
        sub_10003CBC0(a1, 0, (char *)v34, &v70[1]);
      }
      sub_10006544C(a1, v34, v70[1]);
      sub_10003BAB8(v34, &v70[1], a2, (uint64_t)a3, a4, a5, (uint64_t)a6, (uint64_t)a7, a8, a9, a10, a11, a12, *(void *)(a1 + 376));
      uint64_t result = v70[1];
      *(_DWORD *)(a1 + 9324) = v70[1];
      if (!result)
      {
        *(_DWORD *)(a1 + 552) = 3;
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v67 = a8;
      int v44 = sub_10009F2E8(*(void *)(a1 + 9000), v34 + 28, v34 + 384, v34 + 856, v34 + 323, (__int16 *)(v34 + 146), 59, (_DWORD *)(v34 + 8), (_DWORD *)v34, (_DWORD *)(v34 + 24), v42, v34 + 264, v70);
      if (*(int *)(a1 + 8872) >= 1) {
        *(void *)(v34 + 16) = *(void *)(a1 + 8 * v70[0] + 680);
      }
      *(_WORD *)(v34 + 4) = 0;
      if (v69)
      {
        int v64 = v44;
        sub_10003C260(v34, 1, v68, *(unsigned int *)(a1 + 8872), *(_DWORD *)(a1 + 9284));
        int v44 = v64;
      }
      uint64_t v50 = *(int *)(v34 + 8);
      if (!v50 || !v44)
      {
        uint64_t result = 0;
        *(_DWORD *)(a1 + 552) = 3;
        *a6 = -1;
        return result;
      }
      if (v33)
      {
        if ((int)v50 >= 1)
        {
          uint64_t v51 = 0;
          do
          {
            *(_DWORD *)(v34 + 4 * v51 + 620) = sub_100031A50(v33, *(unsigned int *)(v34 + 4 * v51 + 384), *(unsigned int *)(v34 + 4 * v51 + 856), v45, v46, v47, v48, v49);
            ++v51;
          }
          while (v51 < *(int *)(v34 + 8));
        }
      }
      else
      {
        bzero((void *)(v34 + 620), 4 * v50);
      }
      int v58 = 1;
      v70[1] = 1;
      if (qword_100101CC0)
      {
        uint64_t v59 = a4;
        uint64_t v61 = a10;
        uint64_t v60 = a9;
        if (*(_DWORD *)(qword_100101CC0 + 4592) && *(_DWORD *)(qword_100101CC0 + 4596))
        {
          if (*(uint64_t *)(qword_100101CC0 + 4104) <= 0) {
            v70[1] = *(void *)(qword_100101CC0 + 4104);
          }
          sub_10003CBC0(a1, 0, (char *)v34, &v70[1]);
          int v58 = v70[1];
        }
      }
      else
      {
        uint64_t v59 = a4;
        uint64_t v61 = a10;
        uint64_t v60 = a9;
      }
      if (v69)
      {
        sub_10006517C(a1, v34, v58);
        int v58 = v70[1];
      }
      sub_10006544C(a1, v34, v58);
      sub_10003BAB8(v34, &v70[1], a2, (uint64_t)a3, v59, a5, (uint64_t)a6, (uint64_t)a7, v67, v60, v61, a11, a12, *(void *)(a1 + 376));
      uint64_t result = v70[1];
      *(_DWORD *)(a1 + 9324) = v70[1];
    }
    if (*(_DWORD *)(a1 + 9280) && (int)result >= 1)
    {
      int v62 = 0;
      uint64_t v63 = v34 + 28;
      do
      {
        *(_WORD *)(v63 - 24) += sub_10003C5C0(*(void *)(a1 + 376), 1, *(unsigned int *)(a1 + 9204), a1 + 9202, *(unsigned int *)(a1 + 460), a1 + 456, v63, *(unsigned int *)(v63 - 20));
        ++v62;
        uint64_t result = v70[1];
        v63 += 1096;
      }
      while (v62 < v70[1]);
    }
  }
  return result;
}

uint64_t sub_100069E84(uint64_t a1)
{
  if (!sub_10009F2C4(*(void *)(a1 + 9000))) {
    *(_DWORD *)(a1 + 552) = 3;
  }
  unsigned int v8 = *(_DWORD *)(a1 + 544);
  if (v8 <= 0xB && ((1 << v8) & 0x828) != 0)
  {
    int v10 = *(_DWORD *)(a1 + 552);
    if (v10 != 3) {
      *(_DWORD *)(a1 + 552) = 0;
    }
    if (v8 <= 0xB && ((1 << v8) & 0x828) != 0 && v10 != 3)
    {
      int v12 = 0;
      int v13 = *(_DWORD *)(a1 + 9040) << 8;
      unsigned int v14 = v13 - *(_DWORD *)(a1 + 9044);
      uint64_t v15 = *(void *)(a1 + 9032);
      uint64_t v16 = *(void *)(v15 + 8 * (v14 >> 8)) + 32 * -*(unsigned char *)(a1 + 9044);
      int v26 = 0;
      unsigned __int16 v17 = -1;
      while (1)
      {
        int v18 = *(unsigned __int16 *)(v16 + 18);
        if (v18 == 0xFFFF)
        {
          if (++v14 == v13) {
            break;
          }
          goto LABEL_17;
        }
        int v19 = *(_DWORD *)(a1 + 620);
        if (v19 >= v18)
        {
          if (v18 != v17)
          {
            int v12 = sub_10009DA20(*(void *)(a1 + 9256), *(unsigned __int16 *)(v16 + 18));
            unsigned __int16 v17 = v18;
          }
          if (v12 > *(unsigned __int8 *)(v16 + 26)) {
            goto LABEL_21;
          }
          uint64_t v2 = *(void *)v16 & 0x7FFFFFFFFFFFFFFFLL;
          if (*(_DWORD *)(a1 + 544) == 2)
          {
            int v26 = 1;
LABEL_31:
            if (*(_WORD *)(v16 + 20) != 0x4000) {
              *(_WORD *)(v16 + 20) += sub_100025ED4(a1 + 680, *(unsigned int *)(a1 + 8872), v2);
            }
            goto LABEL_21;
          }
          int v26 = *(void *)v16 >> 63;
          if (*(uint64_t *)v16 < 0) {
            goto LABEL_31;
          }
        }
        else
        {
          int v20 = ~v19 + v18;
          uint64_t v21 = sub_100064238(*(void *)(*(void *)(a1 + 9328) + 8 * v20), 0);
          uint64_t v22 = *(void *)v16 & 0x3FFFFFFLL;
          if (*(__int16 *)(v21 + 4 * v22) < 0)
          {
            uint64_t v23 = v20;
            unsigned __int16 v17 = *(_WORD *)(v21 + 4 * v22 + 2);
            uint64_t v24 = (*(void *)v16 >> 53) & 0x3FFLL;
            uint64_t v25 = 4 * v23;
            sub_1000266D8(*(void *)(a1 + 8 * v24 + 680));
            uint64_t v2 = ((unint64_t)*(unsigned int *)(*(void *)(a1 + 9344) + v25) << 35) + (v24 << 53);
            if (v26) {
              goto LABEL_31;
            }
          }
        }
LABEL_21:
        if (++v14 == v13) {
          break;
        }
        uint64_t v15 = *(void *)(a1 + 9032);
LABEL_17:
        uint64_t v16 = *(void *)(v15 + 8 * (v14 >> 8)) + 32 * v14;
      }
    }
  }
  uint64_t result = sub_100039A9C(a1, *(unsigned int *)(a1 + 428), v2, v3, v4, v5, v6, v7);
  if (result) {
    return sub_100039FBC(a1);
  }
  return result;
}

void sub_10006A0D8(uint64_t a1, int a2, int a3, void *a4, uint64_t a5)
{
  sub_100065DCC(a1);
  if (a2 < a3)
  {
    int v26 = 0;
    if (a5)
    {
      do
      {
        if (a2 >= 1 && *(_DWORD *)(a1 + 8892)) {
          sub_1000673D4(a1, *(_DWORD *)(a5 + 4 * a2));
        }
        int v18 = (const void *)sub_10005A674(a4, a2, &v26);
        sub_100068C48(a1, v18, v26, v19, v20, v21, v22, v23, v24);
        ++a2;
      }
      while (*(_DWORD *)(a1 + 552) != 3 && a2 < a3);
    }
    else
    {
      do
      {
        int v10 = (const void *)sub_10005A674(a4, a2, &v26);
        sub_100068C48(a1, v10, v26, v11, v12, v13, v14, v15, v16);
        ++a2;
      }
      while (*(_DWORD *)(a1 + 552) != 3 && a2 < a3);
    }
  }
}

uint64_t sub_10006A1C0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, _WORD *a5)
{
  unsigned int v5 = *(_DWORD *)(a1 + 544);
  BOOL v6 = v5 > 0xB;
  int v7 = (1 << v5) & 0x828;
  if (v6 || v7 == 0) {
    return 0;
  }
  if (a2 >= 1)
  {
    uint64_t v12 = 0;
    if (a2 < 0x10) {
      goto LABEL_11;
    }
    if ((unint64_t)(a4 - a3) < 0x20) {
      goto LABEL_11;
    }
    uint64_t v12 = a2 & 0x7FFFFFF0;
    int32x4_t v13 = (_OWORD *)(a3 + 16);
    int32x4_t v14 = (_OWORD *)(a4 + 16);
    *(void *)&long long v15 = 0x4000400040004000;
    *((void *)&v15 + 1) = 0x4000400040004000;
    uint64_t v16 = a2 & 0xFFFFFFF0;
    do
    {
      *(v13 - 1) = v15;
      *int32x4_t v13 = v15;
      v13 += 2;
      *(v14 - 1) = v15;
      *int32x4_t v14 = v15;
      v14 += 2;
      v16 -= 16;
    }
    while (v16);
    if (v12 != a2)
    {
LABEL_11:
      unsigned __int16 v17 = (_WORD *)(a4 + 2 * v12);
      int v18 = (_WORD *)(a3 + 2 * v12);
      uint64_t v19 = a2 - v12;
      do
      {
        *v18++ = 0x4000;
        *v17++ = 0x4000;
        --v19;
      }
      while (v19);
    }
  }
  *a5 = *(_WORD *)(a1 + 8980);
  unsigned int v20 = (*(_DWORD *)(a1 + 9040) << 8) - *(_DWORD *)(a1 + 9044);
  uint64_t v21 = *(void *)(*(void *)(a1 + 9032) + 8 * (v20 >> 8));
  uint64_t v22 = -*(unsigned char *)(a1 + 9044);
  int v23 = *(unsigned __int16 *)(v21 + 32 * v22 + 18);
  if (v23 != 0xFFFF)
  {
    unsigned int v25 = v20 + 1;
    do
    {
      unint64_t v26 = *(void *)(v21 + 32 * v22);
      uint64_t v27 = (v26 >> 53) & 0x3FF;
      if (*(_DWORD *)(a1 + 620) >= v23 && sub_10002BD4C(*(void *)(a1 + 8 * v27 + 680), v26))
      {
        int v28 = *(__int16 *)(v21 + 32 * v22 + 24);
        if (v28 < *(__int16 *)(a3 + 2 * v27)) {
          *(_WORD *)(a3 + 2 * v27) = v28;
        }
      }
      else
      {
        int v29 = *(__int16 *)(v21 + 32 * v22 + 24);
        if (v29 < *(__int16 *)(a4 + 2 * v27)) {
          *(_WORD *)(a4 + 2 * v27) = v29;
        }
      }
      uint64_t v21 = *(void *)(*(void *)(a1 + 9032) + 8 * (v25 >> 8));
      uint64_t v22 = v25;
      int v23 = *(unsigned __int16 *)(v21 + 32 * v25++ + 18);
    }
    while (v23 != 0xFFFF);
  }
  return 1;
}

BOOL sub_10006A388(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v9 = sub_100039F58(a1);
  BOOL v10 = *(unsigned __int16 *)(a1 + 8980) != 0x4000;
  unsigned int v11 = (*(_DWORD *)(a1 + 9040) << 8) - *(_DWORD *)(a1 + 9044);
  uint64_t v12 = *(void *)(a1 + 9032);
  uint64_t v13 = *(void *)(v12 + 8 * (v11 >> 8));
  uint64_t v14 = -*(unsigned char *)(a1 + 9044);
  int v15 = *(unsigned __int16 *)(v13 + 32 * v14 + 18);
  int v16 = *(_DWORD *)(a1 + 620);
  if (v15 != 0xFFFF && v16 >= v15)
  {
    unsigned int v20 = v11 + 1;
    do
    {
      unint64_t v23 = *(void *)(v13 + 32 * v14);
      uint64_t v24 = (v23 >> 53) & 0x3FF;
      if (*(_DWORD *)(a3 + 4 * v24) && *(__int16 *)(v13 + 32 * v14 + 24) < 0x4000)
      {
        if (sub_10002BD4C(*(void *)(a1 + 8 * v24 + 680), v23))
        {
          sub_1000B4748(a1 + 9084, a4);
          return 1;
        }
        uint64_t v12 = *(void *)(a1 + 9032);
        int v16 = *(_DWORD *)(a1 + 620);
        BOOL v10 = 1;
      }
      uint64_t v13 = *(void *)(v12 + 8 * (v20 >> 8));
      uint64_t v14 = v20;
      int v21 = *(unsigned __int16 *)(v13 + 32 * v20++ + 18);
    }
    while (v21 != 0xFFFF && v16 >= v21);
  }
  sub_1000B4748(a1 + 9084, 0);
  return v10 && v9 < a5;
}

uint64_t sub_10006A4D8(uint64_t result, _DWORD *a2, _DWORD *a3, _DWORD *a4)
{
  *a2 = *(_DWORD *)(result + 9076) + *(__int16 *)(result + 9048);
  int v4 = *(__int16 *)(result + 8980);
  if (v4 == 0x4000)
  {
    *a3 = 0x40000000;
    int v5 = *(__int16 *)(result + 9050);
    if (v5 != 0x4000)
    {
LABEL_3:
      *a4 = *(_DWORD *)(result + 9076) + v5;
      return result;
    }
  }
  else
  {
    *a3 = *(_DWORD *)(result + 9076) + v4;
    int v5 = *(__int16 *)(result + 9050);
    if (v5 != 0x4000) {
      goto LABEL_3;
    }
  }
  *a4 = 0x40000000;
  return result;
}

uint64_t sub_10006A544(uint64_t a1)
{
  uint64_t v2 = (_WORD *)(a1 + 8976);
  uint64_t result = sub_100015A34(*(void *)(a1 + 384), *(unsigned __int16 *)(a1 + 8976));
  int v4 = (__int16)v2[2];
  if (v4 > 0x4000)
  {
    int v4 = 0x4000;
    v2[2] = 0x4000;
    *(_DWORD *)(a1 + 8968) = -1;
  }
  uint64_t v32 = 0;
  uint64_t v30 = 0;
  if (v4 <= (__int16)v2[43])
  {
    uint64_t v5 = *(unsigned __int16 *)result;
    uint64_t result = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 384) + 1792) + 2 * v5);
    if (result == 0x4000)
    {
      uint64_t result = sub_100015A48(*(void *)(a1 + 384), v5);
      LOWORD(v4) = v2[2];
    }
    __int16 v6 = result - v2[41] + v4;
    v2[2] = v6;
    v2[4] = v6;
    if (v6 < (__int16)v2[36])
    {
      v2[36] = v6;
      v2[38] = v2[1];
      v2[104] = *v2;
    }
  }
  else
  {
    v2[4] = 0x4000;
    v2[2] = 0x4000;
  }
  int v7 = *(_DWORD *)(a1 + 620);
  uint64_t v8 = *(void *)(a1 + 592);
  uint64_t v9 = *(void *)(v8 + 8 * ((v7 + 1) >> 8)) + 24 * (v7 + 1);
  int v11 = *(unsigned __int16 *)(v9 + 16);
  BOOL v10 = (_WORD *)(v9 + 16);
  if (v11 == 0x4000)
  {
    *BOOL v10 = 0x3FFF;
    int v7 = *(_DWORD *)(a1 + 620);
    uint64_t v8 = *(void *)(a1 + 592);
  }
  unsigned int v12 = 0;
  unsigned int v13 = (*(_DWORD *)(a1 + 9040) << 8) - *(_DWORD *)(a1 + 9044);
  LODWORD(v32) = 0;
  HIDWORD(v32) = v13;
  int v14 = *(_DWORD *)(a1 + 9364) + v7;
  do
  {
    uint64_t v15 = *(void *)(v8 + 8 * (v12 >> 8)) + 24 * v12;
    uint64_t v30 = v15;
    int v16 = *(unsigned __int16 *)(v15 + 16);
    ++v12;
  }
  while (v16 == 0x4000);
  if (v16 == 0x3FFF)
  {
    *(_WORD *)(v15 + 16) = 0x4000;
    uint64_t v17 = *(void *)(a1 + 592);
    uint64_t v15 = *(void *)(v17 + 8 * (v12 >> 8)) + 24 * v12;
    uint64_t v30 = v15;
    if ((int)v12 <= v14)
    {
      while (*(_WORD *)(v15 + 16) == 0x4000)
      {
        ++v12;
        uint64_t v15 = *(void *)(v17 + 8 * (v12 >> 8)) + 24 * v12;
        uint64_t v30 = v15;
        if (v14 + 1 == v12)
        {
          unsigned int v12 = v14 + 1;
          break;
        }
      }
    }
  }
  else
  {
    --v12;
  }
  int v31 = v12;
  uint64_t v18 = *(void *)(a1 + 9032);
  uint64_t v19 = *(void *)(v18 + 8 * (v13 >> 8)) + 32 * v13;
  signed int v20 = *(_DWORD *)(a1 + 620);
  signed int v21 = *(unsigned __int16 *)(v19 + 18);
  if ((int)v12 <= v20 || v20 >= v21)
  {
    uint64_t v23 = v15;
    do
    {
      if ((unsigned __int16)v12 < v21
        || (unsigned __int16)v12 == v21
        && (*(void *)v23 & 0x7FFFFFFFFFFFFFFFuLL) < (*(void *)v19 & 0x7FFFFFFFFFFFFFFFuLL))
      {
        uint64_t result = sub_10006C7BC(a1, (unsigned __int16)v12, v23, v12, v13, &v32);
        if (*(_DWORD *)(a1 + 552) == 3) {
          return result;
        }
      }
      else
      {
        uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t *, void, uint64_t))(a1 + 536))(a1, (char *)&v32 + 4, &v32, (unsigned __int16)v12, v23);
        if (*(_DWORD *)(a1 + 552) == 3) {
          return result;
        }
        if (!result) {
          goto LABEL_48;
        }
      }
      if (*(_DWORD *)(a1 + 8896))
      {
        if (*(unsigned __int16 *)(v23 + 14) == 0xFFFFLL)
        {
          *(_WORD *)(v15 + 16) = 0x4000;
          uint64_t v26 = *(void *)(a1 + 592);
          do
          {
            ++v12;
            uint64_t v23 = *(void *)(v26 + 8 * (v12 >> 8)) + 24 * v12;
            uint64_t v30 = v23;
          }
          while (*(_WORD *)(v23 + 16) == 0x4000);
          uint64_t v15 = v23;
          if (*(_WORD *)(v23 + 16) == 0x3FFF) {
            goto LABEL_35;
          }
        }
        else
        {
          uint64_t v23 = *(void *)(*(void *)(a1 + 592) + (((unint64_t)*(unsigned __int16 *)(v23 + 14) >> 5) & 0x7F8))
              + 24 * *(_WORD *)(v23 + 14);
          uint64_t v30 = v23;
          if (*(_WORD *)(v23 + 16) == 0x3FFF) {
            goto LABEL_35;
          }
        }
      }
      else
      {
        uint64_t v24 = *(void *)(a1 + 592);
        do
        {
          ++v12;
          uint64_t v23 = *(void *)(v24 + 8 * (v12 >> 8)) + 24 * v12;
          uint64_t v30 = v23;
        }
        while (*(_WORD *)(v23 + 16) == 0x4000);
        if (*(_WORD *)(v23 + 16) == 0x3FFF)
        {
LABEL_35:
          *(_WORD *)(v23 + 16) = 0x4000;
          uint64_t v25 = *(void *)(a1 + 592);
          uint64_t v23 = *(void *)(v25 + 8 * ((v12 + 1) >> 8)) + 24 * (v12 + 1);
          uint64_t v30 = v23;
          if ((int)v12 >= v14)
          {
            ++v12;
          }
          else
          {
            while (*(_WORD *)(v23 + 16) == 0x4000)
            {
              uint64_t v23 = *(void *)(v25 + 8 * ((v12 + 2) >> 8)) + 24 * (v12 + 2);
              uint64_t v30 = v23;
              if (v14 == ++v12)
              {
                unsigned int v12 = v14 + 1;
                goto LABEL_48;
              }
            }
            ++v12;
          }
        }
      }
LABEL_48:
      unsigned int v13 = HIDWORD(v32);
      uint64_t v18 = *(void *)(a1 + 9032);
      uint64_t v19 = *(void *)(v18 + (((unint64_t)HIDWORD(v32) >> 5) & 0x7FFFFF8)) + 32 * BYTE4(v32);
      signed int v27 = *(_DWORD *)(a1 + 620);
      signed int v21 = *(unsigned __int16 *)(v19 + 18);
    }
    while ((int)v12 <= v27 || v27 >= v21);
  }
  int v31 = v12;
  while (v31 <= v14)
  {
    int v28 = &v30;
LABEL_52:
    uint64_t result = sub_10006C998(a1, (_DWORD *)&v32 + 1, (unsigned int *)&v32, v28, &v31);
    uint64_t v18 = *(void *)(a1 + 9032);
    uint64_t v19 = *(void *)(v18 + (((unint64_t)HIDWORD(v32) >> 5) & 0x7FFFFF8)) + 32 * BYTE4(v32);
    if (*(_DWORD *)(a1 + 552) == 3) {
      return result;
    }
  }
  if (*(__int16 *)(v19 + 18) != -1)
  {
    int v28 = 0;
    goto LABEL_52;
  }
  uint64_t v29 = *(void *)(v18 + (((unint64_t)v32 >> 5) & 0x7FFFFF8)) + 32 * v32;
  *(_WORD *)(v29 + 18) = -1;
  *(void *)uint64_t v29 = 0x7FFFFFFFFFFFFFFFLL;
  *(_DWORD *)(a1 + 9044) = v32 + 1;
  return result;
}

uint64_t sub_10006A9E4(uint64_t a1)
{
  uint64_t v2 = (_WORD *)(a1 + 8976);
  uint64_t v24 = 0;
  uint64_t v22 = *(void *)(*(void *)(a1 + 592) + (((unint64_t)*(unsigned int *)(a1 + 612) >> 5) & 0x7FFFFF8))
      + 24 * *(_DWORD *)(a1 + 612);
  *(_DWORD *)(v22 + 14) = 0xFFFF;
  uint64_t result = sub_100015A34(*(void *)(a1 + 384), *(unsigned __int16 *)(a1 + 8976));
  int v4 = (__int16)v2[2];
  if (v4 > 0x4000)
  {
    int v4 = 0x4000;
    v2[2] = 0x4000;
    *(_DWORD *)(a1 + 8968) = -1;
  }
  if (v4 <= (__int16)v2[43])
  {
    uint64_t v5 = *(unsigned __int16 *)result;
    uint64_t result = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 384) + 1792) + 2 * v5);
    if (result == 0x4000)
    {
      uint64_t result = sub_100015A48(*(void *)(a1 + 384), v5);
      LOWORD(v4) = v2[2];
    }
    __int16 v6 = result - v2[41] + v4;
    v2[2] = v6;
    v2[4] = v6;
    if (v6 < (__int16)v2[36])
    {
      v2[36] = v6;
      v2[38] = v2[1];
      v2[104] = *v2;
    }
  }
  else
  {
    v2[4] = 0x4000;
    v2[2] = 0x4000;
  }
  unsigned int v7 = (*(_DWORD *)(a1 + 9040) << 8) - *(_DWORD *)(a1 + 9044);
  LODWORD(v24) = 0;
  HIDWORD(v24) = v7;
  uint64_t v8 = *(void *)(a1 + 592);
  unsigned int v9 = -1;
  do
  {
    uint64_t v10 = *(void *)(v8 + 8 * (++v9 >> 8));
    uint64_t v11 = v10 + 24 * v9;
    uint64_t v22 = v11;
  }
  while (*(_WORD *)(v11 + 16) == 0x4000);
  unsigned int v23 = v9;
  uint64_t v12 = *(void *)(a1 + 9032);
  uint64_t v13 = *(void *)(v12 + 8 * (v7 >> 8)) + 32 * v7;
  int v14 = *(unsigned __int16 *)(v10 + 24 * v9 + 14);
  int v15 = *(_DWORD *)(a1 + 620);
  int v16 = *(unsigned __int16 *)(v13 + 18);
  if (v15 >= v14 || v15 >= v16)
  {
    do
    {
      if ((unsigned __int16)v14 < (unsigned __int16)v16
        || (unsigned __int16)v14 == (unsigned __int16)v16
        && (*(void *)v11 & 0x7FFFFFFFFFFFFFFFuLL) < (*(void *)v13 & 0x7FFFFFFFFFFFFFFFuLL))
      {
        uint64_t result = sub_10006C7BC(a1, (unsigned __int16)v14, v11, v9, v7, &v24);
        if (*(_DWORD *)(a1 + 552) == 3) {
          return result;
        }
      }
      else
      {
        uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t *, void, uint64_t))(a1 + 536))(a1, (char *)&v24 + 4, &v24, (unsigned __int16)v14, v11);
        if (*(_DWORD *)(a1 + 552) == 3) {
          return result;
        }
        if (!result) {
          goto LABEL_21;
        }
      }
      uint64_t v18 = *(void *)(a1 + 592);
      do
      {
        ++v9;
        uint64_t v11 = *(void *)(v18 + 8 * (v9 >> 8)) + 24 * v9;
        uint64_t v22 = v11;
      }
      while (*(_WORD *)(v11 + 16) == 0x4000);
LABEL_21:
      unsigned int v7 = HIDWORD(v24);
      uint64_t v12 = *(void *)(a1 + 9032);
      uint64_t v13 = *(void *)(v12 + (((unint64_t)HIDWORD(v24) >> 5) & 0x7FFFFF8)) + 32 * BYTE4(v24);
      int v14 = *(unsigned __int16 *)(v11 + 14);
      int v19 = *(_DWORD *)(a1 + 620);
      int v16 = *(unsigned __int16 *)(v13 + 18);
    }
    while (v19 >= v14 || v19 >= v16);
  }
  unsigned int v23 = v9;
  if ((_WORD)v14 != 0xFFFF) {
    goto LABEL_32;
  }
LABEL_31:
  if (*(__int16 *)(v13 + 18) == -1)
  {
    uint64_t v21 = *(void *)(v12 + (((unint64_t)v24 >> 5) & 0x7FFFFF8)) + 32 * v24;
    *(_WORD *)(v21 + 18) = -1;
    *(void *)uint64_t v21 = 0x7FFFFFFFFFFFFFFFLL;
    *(_DWORD *)(a1 + 9044) = v24 + 1;
  }
  else
  {
LABEL_32:
    while (1)
    {
      uint64_t result = sub_10006C998(a1, (_DWORD *)&v24 + 1, (unsigned int *)&v24, &v22, (int *)&v23);
      if (*(_DWORD *)(a1 + 552) == 3) {
        break;
      }
      uint64_t v12 = *(void *)(a1 + 9032);
      uint64_t v13 = *(void *)(v12 + (((unint64_t)HIDWORD(v24) >> 5) & 0x7FFFFF8)) + 32 * BYTE4(v24);
      if (*(_WORD *)(v22 + 14) == 0xFFFF) {
        goto LABEL_31;
      }
    }
  }
  return result;
}

uint64_t sub_10006ACE8(uint64_t a1, int a2)
{
  uint64_t v2 = (a2 + 255) >> 8;
  if ((int)v2 <= *(_DWORD *)(a1 + 9040)) {
    return 1;
  }
  uint64_t result = sub_1000C33A0((8 * v2));
  if (!result) {
    return result;
  }
  uint64_t v5 = (void *)result;
  int v6 = *(_DWORD *)(a1 + 9040);
  if (v6 < (int)v2)
  {
    unsigned int v7 = (uint64_t *)(result + 8 * v6);
    uint64_t v8 = v2 - v6;
    while (1)
    {
      uint64_t v9 = sub_1000C33A0(0x2000);
      *unsigned int v7 = v9;
      if (!v9) {
        break;
      }
      ++v6;
      ++v7;
      if (!--v8) {
        goto LABEL_9;
      }
    }
  }
  if (v6 == v2)
  {
LABEL_9:
    j__memmove(v5, *(const void **)(a1 + 9032), 8 * *(int *)(a1 + 9040));
    sub_1000C321C(*(void *)(a1 + 9032));
    *(void *)(a1 + 9032) = v5;
    *(_DWORD *)(a1 + 9040) = v2;
    return 1;
  }
  if (v6 > *(_DWORD *)(a1 + 9040))
  {
    uint64_t v10 = v6;
    do
    {
      uint64_t v11 = v10 - 1;
      sub_1000C321C(*((void *)v5 + v10 - 1));
      uint64_t v10 = v11;
    }
    while (v11 > *(int *)(a1 + 9040));
  }
  sub_1000C321C((uint64_t)v5);
  return 0;
}

uint64_t sub_10006ADF8(uint64_t a1, __int16 a2, unsigned int a3, uint64_t a4, int a5)
{
  uint64_t result = sub_1000BD964(*(void *)(a1 + 376), a3, 0);
  __int16 v22 = result;
  if (*(int *)(a1 + 612) >= 1)
  {
    unsigned int v9 = 0;
    uint64_t v21 = (_WORD *)(a1 + 9048);
    do
    {
      uint64_t v10 = *(void *)(*(void *)(a1 + 592) + 8 * (v9 >> 8));
      __int16 v11 = a2;
      if (*(_DWORD *)(a1 + 9280))
      {
        unsigned int v12 = sub_1000BD964(*(void *)(a1 + 376), *(unsigned __int16 *)(v10 + 24 * v9 + 14), 0);
        uint64_t result = sub_1000BDCD4(*(void *)(a1 + 376), (uint64_t)&v22, 1u, v12);
        __int16 v11 = result + a2;
      }
      uint64_t v13 = v10 + 24 * v9;
      int v16 = *(__int16 *)(v13 + 16);
      int v15 = (_WORD *)(v13 + 16);
      int v14 = v16;
      int v17 = *(_DWORD *)(a1 + 9008);
      if (v16 <= v11)
      {
        if (v17)
        {
          int v20 = *(_DWORD *)(v10 + 24 * v9 + 8);
          if (v20 != a5) {
            uint64_t result = (uint64_t)sub_1000241EC(*(uint64_t **)(a1 + 9016), a5, v20, v11 - (unsigned __int16)v14, v11 - *v21);
          }
        }
      }
      else
      {
        if (v17)
        {
          int v18 = *(_DWORD *)(v10 + 24 * v9 + 8);
          if (v14 != 0x4000 && v18 != a5) {
            uint64_t result = (uint64_t)sub_1000241EC(*(uint64_t **)(a1 + 9016), v18, a5, (unsigned __int16)v14 - v11, (unsigned __int16)v14 - *v21);
          }
        }
        *int v15 = v11;
        *(_DWORD *)(v10 + 24 * v9 + 8) = a5;
      }
      ++v9;
    }
    while ((signed int)v9 < *(_DWORD *)(a1 + 612));
  }
  return result;
}

uint64_t sub_10006AF80(uint64_t result, __int16 a2, unsigned int a3, uint64_t a4, int a5)
{
  uint64_t v5 = *(int *)(result + 612);
  if (v5)
  {
    uint64_t v9 = result;
    uint64_t v10 = qword_100101CC0;
    if (qword_100101CC0) {
      uint64_t v10 = *(void *)(qword_100101CC0 + 3616);
    }
    __int16 v25 = 0;
    if (v10 >= v5 && *(_DWORD *)(result + 9280)
      || (uint64_t result = sub_10006ADF8(result, a2, a3, a4, a5), *(_DWORD *)(v9 + 9280)))
    {
      __int16 v25 = sub_1000BD964(*(void *)(v9 + 376), a3, 0);
      uint64_t result = sub_1000BDD6C(*(void *)(v9 + 376), 1, (uint64_t)&v25, *(unsigned int *)(v9 + 612), *(unsigned __int16 **)(v9 + 656), *(_DWORD *)(v9 + 672), *(__int16 **)(v9 + 664));
      *(_DWORD *)(v9 + 672) = result;
    }
    if (*(int *)(v9 + 612) >= 1)
    {
      uint64_t v11 = 0;
      __int16 v12 = 0;
      uint64_t v24 = (_WORD *)(v9 + 9048);
      do
      {
        if (*(_DWORD *)(v9 + 9280)) {
          __int16 v12 = *(_WORD *)(*(void *)(v9 + 664) + 2 * v11);
        }
        uint64_t v13 = *(void *)(*(void *)(v9 + 592) + 8 * (v11 >> 8));
        int v14 = (__int16)(v12 + a2);
        uint64_t v15 = v13 + 24 * v11;
        int v18 = *(__int16 *)(v15 + 16);
        int v17 = (_WORD *)(v15 + 16);
        int v16 = v18;
        int v19 = *(_DWORD *)(v9 + 9008);
        __int16 v20 = v14 - v18;
        if (v14 >= v18)
        {
          if (v19)
          {
            int v23 = *(_DWORD *)(v13 + 24 * v11 + 8);
            if (v23 != a5) {
              uint64_t result = (uint64_t)sub_1000241EC(*(uint64_t **)(v9 + 9016), a5, v23, v20, (unsigned __int16)v14 - *v24);
            }
          }
        }
        else
        {
          if (v19)
          {
            int v21 = *(_DWORD *)(v13 + 24 * v11 + 8);
            if (v16 != 0x4000 && v21 != a5) {
              uint64_t result = (uint64_t)sub_1000241EC(*(uint64_t **)(v9 + 9016), v21, a5, (unsigned __int16)v16 - (unsigned __int16)v14, (unsigned __int16)v16 - *v24);
            }
          }
          *int v17 = v14;
          *(_DWORD *)(v13 + 24 * v11 + 8) = a5;
        }
        ++v11;
      }
      while (v11 < *(int *)(v9 + 612));
    }
  }
  return result;
}

uint64_t sub_10006B158(uint64_t a1, __int16 a2, unsigned int a3, unint64_t a4, int a5)
{
  unint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  uint64_t v9 = *(unsigned __int16 **)(a1 + 9192);
  LODWORD(v19) = a5;
  unsigned int v10 = sub_1000BD964(*(void *)(a1 + 376), a3, 0);
  __int16 v21 = v10;
  uint64_t v11 = *(void *)(a1 + 8 * ((a4 >> 53) & 0x3FF) + 680);
  uint64_t result = sub_100028F34(v11, a3, v10, a4, *(_DWORD *)(a1 + 9224), *(void *)(a1 + 9216), *(_DWORD *)(a1 + 9188), (unint64_t)v9);
  int v13 = result;
  if ((int)result > *(_DWORD *)(a1 + 9188))
  {
    int v14 = 2 * result;
    uint64_t result = sub_1000C33A0(48 * result);
    if (!result)
    {
      *(_DWORD *)(a1 + 552) = 3;
      return result;
    }
    uint64_t v9 = (unsigned __int16 *)result;
    sub_1000C321C(*(void *)(a1 + 9192));
    *(_DWORD *)(a1 + 9188) = v14;
    *(void *)(a1 + 9192) = v9;
    uint64_t result = sub_100028F34(v11, a3, v10, a4, *(_DWORD *)(a1 + 9224), *(void *)(a1 + 9216), v14, (unint64_t)v9);
    int v13 = result;
  }
  if (v13 >= 1)
  {
    do
    {
      __int16 v15 = v9[1] + a2;
      LOWORD(v20) = v15;
      if (*(_DWORD *)(a1 + 9280))
      {
        unsigned int v16 = sub_1000BD964(*(void *)(a1 + 376), *v9, 0);
        uint64_t result = sub_1000BDCD4(*(void *)(a1 + 376), (uint64_t)&v21, 1u, v16);
        __int16 v15 = v20 + result;
        LOWORD(v20) = v20 + result;
      }
      if (*(__int16 *)(a1 + 9062) >= v15)
      {
        if (*((_DWORD *)v9 + 4)) {
          unint64_t v17 = *((void *)v9 + 1) | 0x8000000000000000;
        }
        else {
          unint64_t v17 = *((void *)v9 + 1);
        }
        unint64_t v18 = v17;
        HIWORD(v19) = *v9;
        uint64_t result = (*(uint64_t (**)(uint64_t, unint64_t *))(a1 + 9408))(a1, &v18);
      }
      v9 += 12;
      --v13;
    }
    while (v13);
  }
  return result;
}

uint64_t sub_10006B308(uint64_t a1, __int16 a2, uint64_t a3, unint64_t a4, unsigned int a5)
{
  uint64_t v24 = 0;
  long long v22 = 0u;
  memset(v23, 0, sizeof(v23));
  long long v21 = 0u;
  unint64_t v18 = 0;
  uint64_t v19 = a5;
  uint64_t v9 = (a4 >> 53) & 0x3FF;
  uint64_t v20 = 0;
  __int16 v25 = -1;
  uint64_t v10 = *(void *)(a1 + 8 * v9 + 680);
  sub_100028F14((_DWORD *)v10, (uint64_t)v23);
  (*(void (**)(uint64_t, _OWORD *, uint64_t, unint64_t, uint64_t))(v10 + 104))(v10, v23, a3, a4, 0xFFFFLL);
  uint64_t result = (*(uint64_t (**)(_OWORD *, uint64_t, long long *))(v10 + 112))(v23, v10, &v21);
  if (result)
  {
    __int16 v12 = (__int16 *)(a1 + 9062);
    while (!*(_DWORD *)(a1 + 9280) || *((void *)&v22 + 1) != 0)
    {
      LOWORD(v20) = WORD1(v21) + a2;
      if (*v12 >= (__int16)(WORD1(v21) + a2)) {
        goto LABEL_15;
      }
LABEL_5:
      uint64_t result = (*(uint64_t (**)(_OWORD *, uint64_t, long long *))(v10 + 112))(v23, v10, &v21);
      if (!result) {
        return result;
      }
    }
    if (v25 == -1) {
      __int16 v25 = sub_1000BD964(*(void *)(a1 + 376), a3, 0);
    }
    unsigned int v15 = sub_1000BD964(*(void *)(a1 + 376), (unsigned __int16)v21, 0);
    LOWORD(v20) = sub_1000BDCD4(*(void *)(a1 + 376), (uint64_t)&v25, 1u, v15) + a2;
    if (*v12 < (__int16)v20) {
      goto LABEL_5;
    }
LABEL_15:
    if (v22) {
      unint64_t v16 = *((void *)&v21 + 1) | 0x8000000000000000;
    }
    else {
      unint64_t v16 = *((void *)&v21 + 1);
    }
    unint64_t v18 = v16;
    if (*((void *)&v22 + 1))
    {
      v17[0] = v21;
      v17[1] = v22;
      int v13 = sub_100064F38(a1, v9, (uint64_t)v17) + *(_DWORD *)(a1 + 620) + 1;
    }
    else
    {
      LOWORD(v13) = v21;
    }
    HIWORD(v19) = v13;
    (*(void (**)(uint64_t, unint64_t *))(a1 + 9408))(a1, &v18);
    goto LABEL_5;
  }
  return result;
}

uint64_t sub_10006B4E8(uint64_t a1, __int16 a2, uint64_t a3, unint64_t a4, unsigned int a5)
{
  uint64_t v22 = 0;
  long long v20 = 0u;
  memset(v21, 0, sizeof(v21));
  long long v19 = 0u;
  unint64_t v16 = 0;
  uint64_t v10 = (a4 >> 53) & 0x3FF;
  uint64_t v18 = 0;
  uint64_t v17 = a5;
  uint64_t v11 = *(void *)(a1 + 8 * v10 + 680);
  sub_100028F14((_DWORD *)v11, (uint64_t)v21);
  if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 4544)) {
    sub_100029B58((uint64_t)v21, a5, a2);
  }
  (*(void (**)(uint64_t, _OWORD *, uint64_t, unint64_t, uint64_t))(v11 + 104))(v11, v21, a3, a4, 0xFFFFLL);
  for (uint64_t result = (*(uint64_t (**)(_OWORD *, uint64_t, long long *))(v11 + 112))(v21, v11, &v19);
        result;
        uint64_t result = (*(uint64_t (**)(_OWORD *, uint64_t, long long *))(v11 + 112))(v21, v11, &v19))
  {
    LOWORD(v18) = WORD1(v19) + a2;
    if (*(__int16 *)(a1 + 9062) >= (__int16)(WORD1(v19) + a2))
    {
      if (v20) {
        unint64_t v14 = *((void *)&v19 + 1) | 0x8000000000000000;
      }
      else {
        unint64_t v14 = *((void *)&v19 + 1);
      }
      unint64_t v16 = v14;
      if (*((void *)&v20 + 1))
      {
        v15[0] = v19;
        v15[1] = v20;
        int v13 = sub_100064F38(a1, v10, (uint64_t)v15) + *(_DWORD *)(a1 + 620) + 1;
      }
      else
      {
        LOWORD(v13) = v19;
      }
      HIWORD(v17) = v13;
      (*(void (**)(uint64_t, unint64_t *))(a1 + 9408))(a1, &v16);
    }
  }
  return result;
}

void sub_10006B67C(uint64_t a1)
{
  uint64_t v2 = (__int16 *)(a1 + 8980);
  uint64_t v3 = a1 + 680;
  uint64_t v4 = sub_10002BD6C(a1 + 680, *(_DWORD *)(a1 + 8872));
  sub_100066E1C((_DWORD *)a1);
  int v5 = *(_DWORD *)(a1 + 8896);
  if (v5) {
    int v5 = *(_DWORD *)(a1 + 616);
  }
  *(_DWORD *)(a1 + 612) = v5;
  int v6 = *(_DWORD *)(a1 + 544);
  if (v6 == 5 || v6 == 2) {
    sub_100066E94(a1);
  }
  int v8 = v2[34];
  if (v8 + v2[40] <= 16382) {
    __int16 v9 = v8 + v2[40];
  }
  else {
    __int16 v9 = 0x3FFF;
  }
  int v10 = *(_DWORD *)(a1 + 9208);
  if (*(_DWORD *)(a1 + 9044) > v10) {
    __int16 v9 = sub_10005EF28(*(int **)(a1 + 9232), v10, v8, v9);
  }
  if (*(_DWORD *)(a1 + 544) == 3
    && qword_100101CC0
    && *(uint64_t *)(qword_100101CC0 + 1248) >= 1
    && *v2 == v2[34]
    && sub_100006578(*(void *)(a1 + 384)))
  {
    __int16 v11 = qword_100101CC0;
    if (qword_100101CC0) {
      __int16 v11 = *(_WORD *)(qword_100101CC0 + 1248);
    }
    int v12 = (__int16)(v9 - v11);
    if (v12 <= v2[34]) {
      __int16 v9 = v2[34];
    }
    else {
      __int16 v9 = v12;
    }
  }
  v2[41] = v9;
  int v13 = *v2;
  v2[38] = *v2;
  if (v13 <= v9)
  {
    (*(void (**)(uint64_t))(a1 + 9392))(a1);
  }
  else
  {
    *uint64_t v2 = 0x4000;
    v2[2] = 0x4000;
  }
  int v14 = *(_DWORD *)(a1 + 9044);
  uint64_t v15 = *(void *)(a1 + 9032);
  unint64_t v16 = (long long *)(*(void *)(v15 + 8 * ((v14 - 1) >> 8)) + 32 * (v14 - 1));
  int v17 = *(_DWORD *)(a1 + 9040) << 8;
  uint64_t v18 = *(void *)(v15 + 8 * ((v17 - 1) >> 8));
  long long v19 = *v16;
  *(_OWORD *)(v18 + 8176) = v16[1];
  *(_OWORD *)(v18 + 8160) = v19;
  if (*(_DWORD *)(a1 + 9044) == 1)
  {
    if (!*(_DWORD *)(a1 + 8896))
    {
      sub_100066DF0(a1);
    }
    return;
  }
  uint64_t v82 = v3;
  uint64_t v20 = *(void *)(a1 + 9032);
  uint64_t v21 = *(void *)(v20 + 8 * ((v14 - 2) >> 8));
  unsigned int v22 = v17 - 2;
  uint64_t v23 = *(void *)(v20 + 8 * ((v17 - 2) >> 8));
  int v24 = *(_DWORD *)(a1 + 9076);
  int v25 = v2[44];
  int v26 = sub_100065024(a1);
  int v27 = v14 - 2;
  if (v14 < 2)
  {
    int v32 = 1;
  }
  else
  {
    int v79 = v24 - v25;
    int v80 = v26;
    int v28 = (_OWORD *)(v23 + 8128);
    uint64_t v29 = v21 + 32 * (v14 - 2);
    int v30 = *(_DWORD *)(a1 + 620);
    int v31 = (unsigned __int16 *)(v29 + 18);
    if (v30 < *(unsigned __int16 *)(v29 + 18))
    {
      int v81 = 0;
      int v32 = 1;
      while (1)
      {
        while (*(__int16 *)(v29 + 24) > v2[41])
        {
          BOOL v33 = __OFSUB__(v27--, 1);
          if (v27 < 0 != v33) {
            goto LABEL_56;
          }
          uint64_t v29 = *(void *)(*(void *)(a1 + 9032) + 8 * (v27 >> 8)) + 32 * v27;
          int v31 = (unsigned __int16 *)(v29 + 18);
          if (v30 >= *(unsigned __int16 *)(v29 + 18)) {
            goto LABEL_65;
          }
        }
        long long v34 = *(_OWORD *)(v29 + 16);
        *int v28 = *(_OWORD *)v29;
        v28[1] = v34;
        --v22;
        int v28 = (_OWORD *)(*(void *)(*(void *)(a1 + 9032) + 8 * (v22 >> 8)) + 32 * v22);
        ++v32;
        int v35 = ~*(_DWORD *)(a1 + 620) + *v31;
        uint64_t v36 = sub_100064238(*(void *)(*(void *)(a1 + 9328) + 8 * v35), 0);
        uint64_t v37 = *(void *)v29 & 0x3FFFFFFLL;
        if (*(__int16 *)(v36 + 4 * v37) < 0)
        {
          uint64_t v38 = (__int16 *)(v29 + 20);
          uint64_t v39 = (unsigned int *)(v29 + 8);
          int v81 = 1;
        }
        else
        {
          uint64_t v37 = *(unsigned __int16 *)(v36 + 4 * v37 + 2);
          if ((*(__int16 *)(v36 + 4 * v37) & 0x80000000) == 0)
          {
            BOOL v33 = __OFSUB__(v27--, 1);
            if (v27 < 0 != v33) {
              goto LABEL_56;
            }
            goto LABEL_42;
          }
          int v81 = 0;
          uint64_t v40 = *(int *)(a1 + 568) - 1;
          uint64_t v38 = (__int16 *)(v29 + 2 * v40 + 20);
          uint64_t v39 = (unsigned int *)(v29 + 4 * v40 + 8);
        }
        uint64_t v75 = *(unsigned int *)(*(void *)(a1 + 9344) + 4 * v35);
        unsigned int v70 = *(unsigned __int16 *)(v36 + 4 * v37 + 2);
        __int16 v41 = *v38;
        unsigned int v42 = *v39;
        if (!*(_DWORD *)(a1 + 9284)
          || v42 == -1
          || (unsigned int v43 = *v39,
              __int16 v71 = v41,
              unsigned int v44 = sub_10009F29C(*(void *)(a1 + 9000), *v39),
              BOOL v45 = sub_1000BDE10(*(void *)(a1 + 376), v44, v70),
              __int16 v41 = v71,
              unsigned int v42 = v43,
              v45))
        {
          if ((__int16)(v41 - v2[34]) <= v80)
          {
            uint64_t v69 = (*(void *)v29 >> 53) & 0x3FFLL;
            int v72 = (__int16)(v41 - v2[34]);
            unsigned int v68 = v42;
            sub_1000266D8(*(void *)(a1 + 8 * v69 + 680));
            sub_10009E750(*(unsigned int **)(a1 + 9000), v68, v70, (v69 << 53) + (v75 << 35), v81, v72, v2[110]);
            int v73 = (__int16)(v2[34] + v2[44] + v72);
            if (v73 <= v2[41] && (__int16)(v73 + sub_1000319BC(v4, v75, 0, v46, v47, v48, v49, v50)) <= v2[41]) {
              (*(void (**)(uint64_t))(a1 + 9400))(a1);
            }
          }
        }
        if (v27 < 1) {
          goto LABEL_56;
        }
        --v27;
LABEL_42:
        uint64_t v29 = *(void *)(*(void *)(a1 + 9032) + 8 * (v27 >> 8)) + 32 * v27;
        int v30 = *(_DWORD *)(a1 + 620);
        int v31 = (unsigned __int16 *)(v29 + 18);
        if (v30 >= *(unsigned __int16 *)(v29 + 18)) {
          goto LABEL_65;
        }
      }
    }
    int v81 = 0;
    int v32 = 1;
LABEL_65:
    int v51 = 0;
    int v52 = -1;
    unsigned __int16 v53 = -1;
LABEL_66:
    int v76 = v52;
    int v54 = v2[41];
    uint64_t v55 = (__int16 *)(v29 + 24);
    if (*(__int16 *)(v29 + 24) <= v54) {
      goto LABEL_69;
    }
LABEL_67:
    while (1)
    {
      BOOL v33 = __OFSUB__(v27--, 1);
      if (v27 < 0 != v33) {
        break;
      }
      uint64_t v29 = *(void *)(*(void *)(a1 + 9032) + 8 * (v27 >> 8)) + 32 * v27;
      uint64_t v55 = (__int16 *)(v29 + 24);
      if (*(__int16 *)(v29 + 24) <= v54)
      {
        while (1)
        {
LABEL_69:
          long long v56 = *(_OWORD *)(v29 + 16);
          *int v28 = *(_OWORD *)v29;
          v28[1] = v56;
          int v57 = *(unsigned __int16 *)(v29 + 18);
          if (v57 != v53)
          {
            int v51 = sub_10009DA20(*(void *)(a1 + 9256), *(unsigned __int16 *)(v29 + 18));
            unsigned __int16 v53 = v57;
          }
          ++v32;
          int v58 = *(unsigned __int8 *)(v29 + 26);
          if (v51 - 1 <= v58) {
            break;
          }
          int v59 = *v55;
          if (v59 < v2[38]) {
            v2[38] = v59;
          }
          BOOL v33 = __OFSUB__(v27--, 1);
          if (v27 < 0 != v33) {
            goto LABEL_56;
          }
          uint64_t v60 = *(void *)(a1 + 9032);
          uint64_t v29 = *(void *)(v60 + 8 * (v27 >> 8)) + 32 * v27;
          --v22;
          int v28 = (_OWORD *)(*(void *)(v60 + 8 * (v22 >> 8)) + 32 * v22);
          int v54 = v2[41];
          uint64_t v55 = (__int16 *)(v29 + 24);
          if (*(__int16 *)(v29 + 24) > v54) {
            goto LABEL_67;
          }
        }
        if (v51 == v58) {
          int v61 = 0;
        }
        else {
          int v61 = v76;
        }
        int v77 = v61;
        int v62 = v81;
        if (v51 == v58) {
          int v62 = 1;
        }
        int v81 = v62;
        if (v51 - 1 == v58)
        {
          int v63 = *v55;
          if (v63 < v2[38]) {
            v2[38] = v63;
          }
          int v81 = 0;
          int v52 = *(_DWORD *)(a1 + 568) - 1;
        }
        else
        {
          int v52 = v77;
        }
        int v64 = (__int16)(*(_WORD *)(v29 + 2 * v52 + 20) - v2[34]);
        if (v64 <= v80)
        {
          uint64_t v78 = *(void *)v29 & 0x7FFFFFFFFFFFFFFFLL;
          unsigned int v74 = sub_10009E750(*(unsigned int **)(a1 + 9000), *(unsigned int *)(v29 + 4 * v52 + 8), v53, v78, v81, v64, v2[110]);
          uint64_t v65 = (__int16)(v2[34] + v2[44] + v64);
          if ((int)v65 <= v2[41]) {
            (*(void (**)(uint64_t, uint64_t, void, uint64_t, void))(a1 + 9400))(a1, v65, v53, v78, v74);
          }
          if ((*(void *)v29 & 0x8000000000000000) != 0 && v81)
          {
            int v66 = sub_100025ED4(v82, *(unsigned int *)(a1 + 8872), v78);
            sub_10009EBBC(*(void *)(a1 + 9000), v74, v79 + v65 + v66);
          }
        }
        BOOL v33 = __OFSUB__(v27--, 1);
        if (v27 < 0 == v33)
        {
          uint64_t v67 = *(void *)(a1 + 9032);
          uint64_t v29 = *(void *)(v67 + 8 * (v27 >> 8)) + 32 * v27;
          --v22;
          int v28 = (_OWORD *)(*(void *)(v67 + 8 * (v22 >> 8)) + 32 * v22);
          goto LABEL_66;
        }
        break;
      }
    }
  }
LABEL_56:
  if (sub_10009F2BC(*(void *)(a1 + 9000)))
  {
    *(_DWORD *)(a1 + 552) = 3;
  }
  else
  {
    if (*(_DWORD *)(a1 + 612) >= (*(_DWORD *)(a1 + 608) << 8) - 1) {
      *(_DWORD *)(a1 + 552) = 3;
    }
    if (!*(_DWORD *)(a1 + 8896)) {
      sub_100066DF0(a1);
    }
    *(_DWORD *)(a1 + 9044) = v32;
  }
}

void sub_10006BE94(uint64_t a1)
{
  uint64_t v2 = (__int16 *)(a1 + 8980);
  int v68 = 0x40000000;
  unsigned int v69 = -1;
  __int16 v67 = 0;
  sub_100066E1C((_DWORD *)a1);
  int v3 = *(_DWORD *)(a1 + 8896);
  if (v3) {
    int v3 = *(_DWORD *)(a1 + 616);
  }
  *(_DWORD *)(a1 + 612) = v3;
  int v4 = *(_DWORD *)(a1 + 544);
  if (v4 == 5 || v4 == 2) {
    sub_100066E94(a1);
  }
  int v6 = v2[34];
  if (v6 + v2[40] <= 16382) {
    __int16 v7 = v6 + v2[40];
  }
  else {
    __int16 v7 = 0x3FFF;
  }
  int v8 = *(_DWORD *)(a1 + 9208);
  if (*(_DWORD *)(a1 + 9044) > v8) {
    __int16 v7 = sub_10005EF28(*(int **)(a1 + 9232), v8, v6, v7);
  }
  if (*(_DWORD *)(a1 + 544) == 3
    && qword_100101CC0
    && *(uint64_t *)(qword_100101CC0 + 1248) >= 1
    && *v2 == v2[34]
    && sub_100006578(*(void *)(a1 + 384)))
  {
    __int16 v9 = qword_100101CC0;
    if (qword_100101CC0) {
      __int16 v9 = *(_WORD *)(qword_100101CC0 + 1248);
    }
    int v10 = (__int16)(v7 - v9);
    if (v10 <= v2[34]) {
      __int16 v7 = v2[34];
    }
    else {
      __int16 v7 = v10;
    }
  }
  v2[41] = v7;
  int v11 = *v2;
  v2[38] = *v2;
  if (v11 <= v7)
  {
    (*(void (**)(uint64_t))(a1 + 9392))(a1);
  }
  else
  {
    *uint64_t v2 = 0x4000;
    v2[2] = 0x4000;
  }
  int v12 = *(_DWORD *)(a1 + 9044);
  uint64_t v13 = *(void *)(a1 + 9032);
  int v14 = (long long *)(*(void *)(v13 + 8 * ((v12 - 1) >> 8)) + 32 * (v12 - 1));
  int v15 = *(_DWORD *)(a1 + 9040) << 8;
  uint64_t v16 = *(void *)(v13 + 8 * ((v15 - 1) >> 8));
  long long v17 = *v14;
  *(_OWORD *)(v16 + 8176) = v14[1];
  *(_OWORD *)(v16 + 8160) = v17;
  if (*(_DWORD *)(a1 + 9044) == 1)
  {
    if (!*(_DWORD *)(a1 + 8896))
    {
      sub_100066DF0(a1);
    }
    return;
  }
  int v18 = v12 - 2;
  uint64_t v19 = *(void *)(a1 + 9032);
  uint64_t v20 = *(void *)(v19 + 8 * (v18 >> 8)) + 32 * v18;
  unsigned int v21 = v15 - 2;
  unsigned int v22 = (_OWORD *)(*(void *)(v19 + 8 * ((v15 - 2) >> 8)) + 8128);
  int v64 = sub_100065024(a1);
  int v66 = 0;
  int v65 = 0;
  int v23 = 0;
  unsigned __int16 v24 = -1;
  int v25 = 1;
  int v26 = v2[41];
  if (*(__int16 *)(v20 + 24) <= v26) {
    goto LABEL_35;
  }
LABEL_33:
  while (1)
  {
    BOOL v27 = __OFSUB__(v18--, 1);
    if (v18 < 0 != v27) {
      break;
    }
    uint64_t v20 = *(void *)(*(void *)(a1 + 9032) + 8 * (v18 >> 8)) + 32 * v18;
    if (*(__int16 *)(v20 + 24) <= v26)
    {
      while (1)
      {
LABEL_35:
        long long v28 = *(_OWORD *)(v20 + 16);
        *unsigned int v22 = *(_OWORD *)v20;
        v22[1] = v28;
        int v29 = *(unsigned __int16 *)(v20 + 18);
        if (v29 != v24)
        {
          int v23 = sub_10009DA20(*(void *)(a1 + 9256), *(unsigned __int16 *)(v20 + 18));
          unsigned __int16 v24 = v29;
        }
        ++v25;
        int v30 = *(unsigned __int8 *)(v20 + 26);
        if (v23 - 1 > v30)
        {
          int v31 = *(__int16 *)(v20 + 24);
          if (v31 < v2[38]) {
            v2[38] = v31;
          }
          BOOL v27 = __OFSUB__(v18--, 1);
          if (v18 < 0 != v27) {
            goto LABEL_86;
          }
          goto LABEL_41;
        }
        int v33 = v66;
        if (v23 == v30)
        {
          int v33 = 1;
          int v34 = 0;
        }
        else
        {
          int v34 = v65;
        }
        if (v23 - 1 == v30)
        {
          int v35 = *(__int16 *)(v20 + 24);
          if (v35 < v2[38]) {
            v2[38] = v35;
          }
          int v66 = 0;
          int v36 = *(_DWORD *)(a1 + 568) - 1;
        }
        else
        {
          int v66 = v33;
          int v36 = v34;
        }
        int v65 = v36;
        int v63 = (__int16)(*(_WORD *)(v20 + 2 * v36 + 20) - v2[34]);
        if (v63 <= v64)
        {
          if (*(__int16 *)(a1 + 456) == -1)
          {
            int v37 = 0;
          }
          else
          {
            __int16 v67 = sub_1000BD964(*(void *)(a1 + 376), v24, 0);
            int v37 = sub_1000BDCD4(*(void *)(a1 + 376), (uint64_t)&v67, 1u, *(unsigned __int16 *)(a1 + 456));
          }
          uint64_t v62 = *(void *)v20 & 0x7FFFFFFFFFFFFFFFLL;
          unsigned int v38 = *(_DWORD *)(a1 + 544);
          if (v38 <= 0xB && ((1 << v38) & 0x828) != 0)
          {
            v37 += sub_100025ED4(a1 + 680, *(unsigned int *)(a1 + 8872), v62);
            unsigned int v38 = *(_DWORD *)(a1 + 544);
          }
          int v39 = v2[34];
          int v40 = *(_DWORD *)(a1 + 9076);
          __int16 v61 = v37;
          if (v38 == 2) {
            LODWORD(v41) = 1;
          }
          else {
            uint64_t v41 = *(void *)v20 >> 63;
          }
          BOOL v42 = 1;
          int v60 = v41;
          if (*(_DWORD *)(a1 + 9008) && v41 && (!qword_100101CC0 || !*(_DWORD *)(qword_100101CC0 + 4736)))
          {
            int v43 = v2[34];
            int v58 = *(_DWORD *)(a1 + 9076);
            sub_10009F2D4(*(void *)(a1 + 9000), &v69, &v68);
            int v40 = v58;
            int v39 = v43;
            BOOL v42 = v68 == 0x40000000;
          }
          int v59 = v63 + v61 + v39 + v40;
          unint64_t v44 = *(unsigned int *)(v20 + 4 * v65 + 8);
          int v45 = v66;
          int v46 = sub_10009E750(*(unsigned int **)(a1 + 9000), v44, v24, v62, v66, v63, v2[110]);
          int v47 = v46;
          if (!v42)
          {
            int v48 = v69;
            if (v46 != v69)
            {
              __int16 v49 = v68 - v59;
              if (v68 <= v59)
              {
                __int16 v49 = v59 - v68;
                int v55 = v46;
                int v54 = v46;
                LOWORD(v50) = v63;
              }
              else
              {
                int v50 = v68 - (*(_DWORD *)(a1 + 9076) + (unsigned __int16)v2[34]);
                if (*(__int16 *)(a1 + 456) != -1)
                {
                  int v57 = v46;
                  __int16 v51 = v68 - v59;
                  unsigned int v52 = sub_10009F29C(*(void *)(a1 + 9000), v69);
                  __int16 v67 = sub_1000BD964(*(void *)(a1 + 376), v52, 0);
                  __int16 v53 = sub_1000BDCD4(*(void *)(a1 + 376), (uint64_t)&v67, 1u, *(unsigned __int16 *)(a1 + 456));
                  __int16 v49 = v51;
                  int v47 = v57;
                  LOWORD(v50) = v50 - (v53 - v61);
                  int v48 = v69;
                }
                int v54 = v48;
                int v55 = v47;
                int v48 = v47;
              }
              sub_1000241EC(*(uint64_t **)(a1 + 9016), v54, v48, v49, v50);
              int v45 = v66;
              int v47 = v55;
            }
          }
          if (!*(_DWORD *)(a1 + 9272) && v45) {
            goto LABEL_76;
          }
          if (!*(_DWORD *)(a1 + 9276) || v66) {
            break;
          }
        }
LABEL_81:
        if (sub_10009F2BC(*(void *)(a1 + 9000)))
        {
          *(_DWORD *)(a1 + 552) = 3;
          return;
        }
        if (!v18) {
          goto LABEL_86;
        }
        --v18;
LABEL_41:
        uint64_t v32 = *(void *)(a1 + 9032);
        uint64_t v20 = *(void *)(v32 + 8 * (v18 >> 8)) + 32 * v18;
        --v21;
        unsigned int v22 = (_OWORD *)(*(void *)(v32 + 8 * (v21 >> 8)) + 32 * v21);
        int v26 = v2[41];
        if (*(__int16 *)(v20 + 24) > v26) {
          goto LABEL_33;
        }
      }
      if ((__int16)(v2[34] + v2[44] + v63) <= v2[41])
      {
        int v56 = v47;
        (*(void (**)(uint64_t))(a1 + 9400))(a1);
        int v47 = v56;
      }
LABEL_76:
      if (v60 && v66) {
        sub_10009EBBC(*(void *)(a1 + 9000), v47, v59);
      }
      goto LABEL_81;
    }
  }
LABEL_86:
  if (*(_DWORD *)(a1 + 612) >= (*(_DWORD *)(a1 + 608) << 8) - 1) {
    *(_DWORD *)(a1 + 552) = 3;
  }
  if (!*(_DWORD *)(a1 + 8896)) {
    sub_100066DF0(a1);
  }
  *(_DWORD *)(a1 + 9044) = v25;
}

void sub_10006C504(uint64_t a1)
{
  uint64_t v2 = (_WORD *)(a1 + 8976);
  *(void *)(a1 + 628) = 0x100000001;
  *(_WORD *)(a1 + 9048) = 0;
  *(_WORD *)(a1 + 9052) = -1;
  *(_WORD *)(a1 + 9056) = 0;
  BOOL v3 = 1;
  *(_DWORD *)(a1 + 9044) = 1;
  *(_WORD *)(a1 + 8992) = -1;
  uint64_t v4 = *(void *)(*(void *)(a1 + 9032) + 8 * ((*(_DWORD *)(a1 + 9040) - 1) & 0xFFFFFF));
  *(_WORD *)(v4 + 8178) = -1;
  *(void *)(v4 + 8160) = 0x7FFFFFFFFFFFFFFFLL;
  *(_DWORD *)(a1 + 624) = 0;
  *(unsigned char *)(a1 + 8986) = -1;
  *(_DWORD *)(a1 + 8976) = -1;
  *(_OWORD *)(a1 + 8960) = xmmword_1000F4C60;
  memset_pattern16((void *)(a1 + 8980), &unk_1000F4890, 4uLL);
  v2[2] = 0;
  *(_DWORD *)(a1 + 8968) = 0;
  v2[4] = 0;
  *uint64_t v2 = sub_1000041E4(*(void *)(a1 + 384));
  int v5 = *(_DWORD *)(a1 + 544);
  if ((v5 | 8) != 0xB) {
    BOOL v3 = v5 == 5;
  }
  sub_10009E6D4(*(void *)(a1 + 9000), *(_DWORD *)(a1 + 8888), v3);
  v2[112] = 0;
  *(void *)(a1 + 9376) = 0;
  *(_DWORD *)(a1 + 9076) = 0;
  if (*(_DWORD *)(a1 + 8896))
  {
    int v6 = *(_DWORD *)(a1 + 616);
    if (v6 >= 1)
    {
      for (int i = 0; i < v6; ++i)
      {
        *(_WORD *)(*(void *)(*(void *)(a1 + 592) + 8 * (i >> 8)) + 24 * i + 16) = 0x4000;
        int v6 = *(_DWORD *)(a1 + 616);
      }
    }
    *(_WORD *)(*(void *)(*(void *)(a1 + 592) + 8 * ((v6 - 1) >> 8))
             + 24 * (v6 - 1)
             + 14) = -1;
  }
  else
  {
    int v8 = *(_DWORD *)(a1 + 608) << 8;
    if (v8 >= 1)
    {
      for (unsigned int j = 0; j != v8; ++j)
        *(void *)(*(void *)(*(void *)(a1 + 592) + 8 * (j >> 8)) + 24 * j) = 0x7FFFFFFFFFFFFFFFLL;
    }
    *(_DWORD *)(**(void **)(a1 + 592) + 14) = 0xFFFF;
    *(_DWORD *)(a1 + 612) = 0;
  }
  *(_DWORD *)(a1 + 588) = 0;
  *(_DWORD *)(a1 + 9364) = 0;
  *(_DWORD *)(a1 + 552) = 1;
}

uint64_t sub_10006C6D4(uint64_t a1, __int16 *a2, uint64_t a3)
{
  int v6 = (_WORD *)(a1 + 9048);
  uint64_t result = sub_100015A34(*(void *)(a1 + 384), *(unsigned __int16 *)(a3 + 16));
  int v8 = *a2;
  int v9 = *(__int16 *)(a3 + 20);
  if (v8 < v9)
  {
    *(_WORD *)(a3 + 20) = *a2;
    *(_DWORD *)(a3 + 8) = *((_DWORD *)a2 + 1);
    int v9 = v8;
  }
  if (v9 <= (__int16)v6[7])
  {
    uint64_t v10 = *(unsigned __int16 *)result;
    uint64_t result = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 384) + 1792) + 2 * v10);
    if (result == 0x4000)
    {
      uint64_t result = sub_100015A48(*(void *)(a1 + 384), v10);
      LOWORD(v9) = *(_WORD *)(a3 + 20);
    }
    __int16 v11 = result - v6[5] + v9;
    *(_WORD *)(a3 + 20) = v11;
    *(_WORD *)(a3 + 24) = v11;
    if (v11 < (__int16)*v6)
    {
      *int v6 = v11;
      v6[2] = *(_WORD *)(a3 + 18);
      v6[68] = *(_WORD *)(a3 + 16);
    }
  }
  else
  {
    *(_WORD *)(a3 + 24) = 0x4000;
    *(_WORD *)(a3 + 20) = 0x4000;
  }
  return result;
}

uint64_t sub_10006C7BC(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, int a5, _DWORD *a6)
{
  int v6 = (_WORD *)(result + 9048);
  if (*(__int16 *)(a3 + 16) - *(__int16 *)(result + 9058) <= *(__int16 *)(result + 9064))
  {
    uint64_t v8 = result;
    unint64_t v9 = *a6;
    if (a5 - 2 <= (int)v9)
    {
      *(_DWORD *)(result + 552) = 3;
    }
    else
    {
      __int16 v12 = a2;
      int v22 = 0;
      unsigned int v21 = 0;
      if (*(_DWORD *)(result + 556))
      {
        uint64_t v13 = (unsigned __int16 *)(a3 + 12);
      }
      else
      {
        sub_10009D254(*(void *)(result + 9256), a2, 0, &v21, &v22);
        uint64_t v13 = v21;
      }
      int v14 = *v13;
      uint64_t v20 = *(void *)(*(void *)(v8 + 9032) + ((v9 >> 5) & 0x7FFFFF8));
      uint64_t v15 = v20 + 32 * v9;
      *(_DWORD *)(v15 + 20) = 1073758208;
      uint64_t v16 = (_WORD *)(v15 + 20);
      *(unsigned char *)(v15 + 26) = 0;
      *(_WORD *)(v15 + 18) = v12;
      *(_WORD *)(v15 + 16) = v14;
      *(void *)uint64_t v15 = *(void *)a3;
      uint64_t result = sub_100015A34(*(void *)(v8 + 384), v14);
      if (*(_DWORD *)(v8 + 556)) {
        *(unsigned char *)(v15 + 27) = *(unsigned char *)(*(void *)(*(void *)(v8 + 600) + 8 * (a4 >> 8)) + a4);
      }
      int v17 = *(__int16 *)(a3 + 16);
      *uint64_t v16 = *(_WORD *)(a3 + 16);
      *(_DWORD *)(v15 + 8) = *(_DWORD *)(a3 + 8);
      if (v17 <= (__int16)v6[7])
      {
        uint64_t v18 = *(unsigned __int16 *)result;
        uint64_t result = *(unsigned __int16 *)(*(void *)(*(void *)(v8 + 384) + 1792) + 2 * v18);
        if (result == 0x4000)
        {
          uint64_t result = sub_100015A48(*(void *)(v8 + 384), v18);
          LOWORD(v17) = *v16;
        }
        __int16 v19 = result - v6[5] + v17;
        *uint64_t v16 = v19;
        *(_WORD *)(v20 + 32 * v9 + 24) = v19;
        if (v19 < (__int16)*v6)
        {
          *int v6 = v19;
          v6[2] = *(_WORD *)(v15 + 18);
          v6[68] = *(_WORD *)(v15 + 16);
        }
      }
      else
      {
        *(_WORD *)(v20 + 32 * v9 + 24) = 0x4000;
        *uint64_t v16 = 0x4000;
      }
      ++*a6;
    }
  }
  return result;
}

uint64_t sub_10006C998(uint64_t a1, _DWORD *a2, unsigned int *a3, uint64_t *a4, int *a5)
{
  uint64_t v5 = a1;
  if (a4) {
    uint64_t v6 = *a4;
  }
  else {
    uint64_t v6 = 0;
  }
  v109 = (_WORD *)(a1 + 9048);
  int v7 = *(__int16 *)(a1 + 9062);
  int v8 = *a5;
  uint64_t v110 = 0;
  unint64_t v9 = *a2;
  uint64_t v10 = *(void *)(a1 + 9032);
  uint64_t v11 = *a2;
  uint64_t v12 = *(void *)(v10 + 8 * (v9 >> 8)) + 32 * v11;
  unsigned int v106 = *a3;
  uint64_t v13 = *(void *)(v10 + (((unint64_t)*a3 >> 5) & 0x7FFFFF8)) + 32 * *a3;
  unsigned int v14 = *(unsigned __int16 *)(v12 + 18);
  if (!v6 || (unsigned int v15 = *(unsigned __int16 *)(v6 + 14), v15 > v14))
  {
    uint64_t v16 = (int)(~*(_DWORD *)(a1 + 620) + v14);
    uint64_t result = sub_100064238(*(void *)(*(void *)(a1 + 9328) + 8 * v16), 0);
    uint64_t v18 = *(void *)(v5 + 9032);
    uint64_t v19 = *(void *)(v18 + 8 * (v9 >> 8));
    if (*(unsigned __int16 *)(v19 + 32 * v11 + 18) != v14)
    {
      LODWORD(v31) = 0;
      uint64_t v23 = 0;
      LOWORD(v26) = 0x4000;
      uint64_t v27 = 0xFFFFFFFFLL;
      LODWORD(v28) = 0xFFFF;
      unsigned int v20 = v9;
      unsigned int v22 = v106;
      unsigned int v21 = v109;
      goto LABEL_23;
    }
    unsigned int v20 = v9;
    unsigned int v22 = v106;
    unsigned int v21 = v109;
    while (1)
    {
      uint64_t v23 = *(void *)(v19 + 32 * v11);
      if ((*(__int16 *)(result + 4 * (v23 & 0x3FFFFFF)) & 0x80000000) == 0)
      {
        uint64_t v24 = *(int *)(v5 + 568) - 1;
        uint64_t v25 = v19 + 32 * v11;
        int v26 = *(__int16 *)(v25 + 2 * v24 + 20);
        if (v26 <= (__int16)v109[7]) {
          break;
        }
      }
      uint64_t v19 = *(void *)(v18 + 8 * (++v20 >> 8));
      uint64_t v11 = v20;
      if (*(unsigned __int16 *)(v19 + 32 * v20 + 18) != v14)
      {
        LODWORD(v31) = 0;
        uint64_t v23 = 0;
        LOWORD(v26) = 0x4000;
        uint64_t v27 = 0xFFFFFFFFLL;
        LODWORD(v28) = 0xFFFF;
        goto LABEL_23;
      }
    }
    uint64_t v27 = *(unsigned int *)(v25 + 4 * v24 + 8);
    LODWORD(v28) = *(unsigned __int16 *)(result + 4 * (v23 & 0x3FFFFFF) + 2);
    int v29 = (__int16 *)(result + 4 * (v23 & 0x3FFFFFF) + 4);
    do
    {
      int v30 = *v29;
      v29 += 2;
    }
    while (v30 < 0);
    LODWORD(v31) = (unsigned __int16)*(v29 - 1);
LABEL_23:
    int v97 = 0;
    uint64_t v40 = *(unsigned __int16 *)(*(void *)(v5 + 9336) + 2 * v16);
    goto LABEL_24;
  }
  uint64_t v98 = (int)(~*(_DWORD *)(a1 + 620) + v15);
  uint64_t result = sub_100064238(*(void *)(*(void *)(a1 + 9328) + 8 * v98), 0);
  int v26 = *(__int16 *)(v6 + 16);
  uint64_t v27 = *(unsigned int *)(v6 + 8);
  uint64_t v28 = *(unsigned __int16 *)(result + 2);
  uint64_t v23 = *(void *)v6;
  uint64_t v32 = (__int16 *)(result + 4);
  do
  {
    int v33 = *v32;
    v32 += 2;
  }
  while (v33 < 0);
  uint64_t v31 = (unsigned __int16)*(v32 - 1);
  *(_WORD *)(v6 + 16) = 0x4000;
  unsigned int v34 = v8 + 1;
  uint64_t v35 = *(void *)(v5 + 592);
  uint64_t v36 = *(void *)(v35 + 8 * ((v8 + 1) >> 8)) + 24 * (v8 + 1);
  int v37 = *(_DWORD *)(v5 + 9360) + *(_DWORD *)(v5 + 620);
  if (*(_WORD *)(v36 + 16) == 0x4000 && v8 < v37)
  {
    unsigned int v22 = v106;
    int v39 = a5;
    do
    {
      int v76 = v34++;
      uint64_t v77 = *(void *)(v35 + 8 * (v34 >> 8));
    }
    while (*(_WORD *)(v77 + 24 * v34 + 16) == 0x4000 && v76 < v37);
    uint64_t v36 = v77 + 24 * v34;
  }
  else
  {
    unsigned int v22 = v106;
    int v39 = a5;
  }
  *int v39 = v34;
  *a4 = v36;
  uint64_t v40 = *(unsigned __int16 *)(*(void *)(v5 + 9336) + 2 * v98);
  unsigned int v21 = v109;
  if (*(unsigned __int16 *)(v6 + 14) >= v14)
  {
    int v97 = 1;
    unsigned int v20 = v9;
LABEL_24:
    LODWORD(v41) = *(_DWORD *)v12 & 0x3FFFFFF;
    uint64_t v94 = v40 << 53;
    uint64_t v95 = v5;
    uint64_t v90 = result + 4;
    int v92 = -1;
    int v96 = v7;
    uint64_t v99 = result;
    while ((int)v28 >= (int)v41)
    {
      if (*(unsigned __int16 *)(v12 + 18) != v14) {
        goto LABEL_82;
      }
      if (*(__int16 *)(v12 + 24) <= v7)
      {
        long long v60 = *(_OWORD *)(v12 + 16);
        *(_OWORD *)uint64_t v13 = *(_OWORD *)v12;
        *(_OWORD *)(v13 + 16) = v60;
        if (v28 == v41)
        {
          LODWORD(v28) = v28 + 1;
          if ((int)v28 >= (int)v31)
          {
            if (!v97) {
              ++v20;
            }
            while (1)
            {
              uint64_t v64 = *(void *)(*(void *)(v5 + 9032) + 8 * (v20 >> 8));
              if (*(unsigned __int16 *)(v64 + 32 * v20 + 18) != v14)
              {
                int v97 = 0;
                LODWORD(v28) = 0xFFFF;
                unsigned int v61 = v27;
                int v62 = v27;
                __int16 v63 = v26;
                LOWORD(v26) = 0x4000;
                goto LABEL_65;
              }
              uint64_t v65 = *(void *)(v64 + 32 * v20);
              if ((*(__int16 *)(result + 4 * (v65 & 0x3FFFFFF)) & 0x80000000) == 0)
              {
                uint64_t v66 = *(int *)(v5 + 568) - 1;
                uint64_t v67 = v64 + 32 * v20;
                int v68 = *(__int16 *)(v67 + 2 * v66 + 20);
                if (v68 <= (__int16)v21[7]) {
                  break;
                }
              }
              ++v20;
            }
            unsigned int v61 = *(_DWORD *)(v67 + 4 * v66 + 8);
            LODWORD(v28) = *(unsigned __int16 *)(result + 4 * (v65 & 0x3FFFFFF) + 2);
            unsigned int v69 = (__int16 *)(v90 + 4 * (v65 & 0x3FFFFFF));
            do
            {
              int v70 = *v69;
              v69 += 2;
            }
            while (v70 < 0);
            int v97 = 0;
            LODWORD(v31) = (unsigned __int16)*(v69 - 1);
            int v62 = v27;
            uint64_t v23 = v65;
            __int16 v63 = v26;
            LOWORD(v26) = v68;
          }
          else
          {
            unsigned int v61 = v27;
            int v62 = v27;
            __int16 v63 = v26;
          }
        }
        else
        {
          __int16 v63 = 0x4000;
          unsigned int v61 = v27;
          int v62 = v92;
        }
LABEL_65:
        unsigned int v108 = v61;
        uint64_t v102 = v23;
        int v105 = v31;
        int v71 = v22;
        LOWORD(v110) = v63;
        HIDWORD(v110) = v62;
        if (*(_WORD *)(v13 + 16))
        {
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v5 + 9424))(v5, &v110, v13);
          unsigned int v21 = v109;
        }
        else
        {
          uint64_t result = sub_100015A34(*(void *)(v5 + 384), 0);
          int v72 = (__int16)v110;
          int v73 = *(__int16 *)(v13 + 20);
          if ((__int16)v110 < v73)
          {
            *(_WORD *)(v13 + 20) = v110;
            *(_DWORD *)(v13 + 8) = HIDWORD(v110);
            int v73 = v72;
          }
          unsigned int v21 = v109;
          if (v73 <= (__int16)v109[7])
          {
            uint64_t v74 = *(unsigned __int16 *)result;
            uint64_t result = *(unsigned __int16 *)(*(void *)(*(void *)(v5 + 384) + 1792) + 2 * v74);
            if (result == 0x4000)
            {
              uint64_t result = sub_100015A48(*(void *)(v5 + 384), v74);
              unsigned int v21 = v109;
              LOWORD(v73) = *(_WORD *)(v13 + 20);
            }
            __int16 v75 = result - v21[5] + v73;
            *(_WORD *)(v13 + 20) = v75;
            *(_WORD *)(v13 + 24) = v75;
            if (v75 < (__int16)*v21)
            {
              _WORD *v21 = v75;
              v21[2] = *(_WORD *)(v13 + 18);
              v21[68] = *(_WORD *)(v13 + 16);
            }
          }
          else
          {
            *(_WORD *)(v13 + 24) = 0x4000;
            *(_WORD *)(v13 + 20) = 0x4000;
          }
        }
        unsigned int v22 = v71;
        if ((int)(v20 - 2) <= v71) {
          goto LABEL_93;
        }
        int v92 = v62;
        LODWORD(v9) = v9 + 1;
        uint64_t v12 = *(void *)(*(void *)(v5 + 9032) + 8 * (v9 >> 8)) + 32 * v9;
        if (*(unsigned __int16 *)(v12 + 18) == v14) {
          uint64_t v41 = *(void *)v12 & 0x3FFFFFFLL;
        }
        else {
          LODWORD(v41) = 0xFFFF;
        }
        uint64_t result = v99;
        uint64_t v23 = v102;
        LODWORD(v31) = v105;
        uint64_t v27 = v108;
LABEL_80:
        if (*(_DWORD *)(v5 + 552) == 3)
        {
LABEL_82:
          *a2 = v9;
          goto LABEL_83;
        }
        ++v22;
        uint64_t v13 = *(void *)(*(void *)(v5 + 9032) + 8 * (v22 >> 8)) + 32 * v22;
      }
      else
      {
        LODWORD(v9) = v9 + 1;
        uint64_t v12 = *(void *)(*(void *)(v5 + 9032) + 8 * (v9 >> 8)) + 32 * v9;
        if (*(unsigned __int16 *)(v12 + 18) == v14) {
          uint64_t v41 = *(void *)v12 & 0x3FFFFFFLL;
        }
        else {
          LODWORD(v41) = 0xFFFF;
        }
      }
    }
    if ((int)(v20 - 2) <= (int)v22) {
      goto LABEL_93;
    }
    int v104 = v31;
    unsigned int v107 = v22;
    *(_DWORD *)(v13 + 20) = 1073758208;
    *(_WORD *)(v13 + 18) = v14;
    *(unsigned char *)(v13 + 26) = 0;
    int v42 = *(_WORD *)(result + 4 * (int)v28) & 0x7FFF;
    *(_WORD *)(v13 + 16) = v42;
    uint64_t v101 = v23;
    *(void *)uint64_t v13 = v94 + (int)v28 + (v23 & 0x8000000000000000);
    uint64_t v43 = *(void *)(v5 + 384);
    uint64_t v44 = v5;
    uint64_t v45 = v27;
    int v46 = (unsigned __int16 *)sub_100015A34(v43, v42);
    uint64_t v47 = v45;
    unsigned int v21 = v109;
    *(_WORD *)(v13 + 20) = v26;
    *(_DWORD *)(v13 + 8) = v45;
    if ((__int16)v109[7] >= (__int16)v26)
    {
      uint64_t v48 = *v46;
      int v49 = *(unsigned __int16 *)(*(void *)(*(void *)(v44 + 384) + 1792) + 2 * v48);
      __int16 v50 = v26;
      if (v49 == 0x4000)
      {
        LOWORD(v49) = sub_100015A48(*(void *)(v44 + 384), v48);
        uint64_t v47 = v45;
        unsigned int v21 = v109;
        __int16 v50 = *(_WORD *)(v13 + 20);
      }
      __int16 v51 = v49 - v21[5] + v50;
      *(_WORD *)(v13 + 20) = v51;
      *(_WORD *)(v13 + 24) = v51;
      uint64_t v23 = v101;
      if (v51 < (__int16)*v21)
      {
        _WORD *v21 = v51;
        v21[2] = *(_WORD *)(v13 + 18);
        v21[68] = *(_WORD *)(v13 + 16);
      }
    }
    else
    {
      *(_WORD *)(v13 + 24) = 0x4000;
      *(_WORD *)(v13 + 20) = 0x4000;
      uint64_t v23 = v101;
    }
    LODWORD(v28) = v28 + 1;
    LODWORD(v31) = v104;
    unsigned int v22 = v107;
    uint64_t result = v99;
    uint64_t v5 = v95;
    if ((int)v28 >= v104)
    {
      int v7 = v96;
      if (!v97) {
        ++v20;
      }
      uint64_t v52 = *(void *)(v95 + 9032);
      uint64_t v53 = *(void *)(v52 + 8 * (v20 >> 8));
      uint64_t v54 = v20;
      if (*(unsigned __int16 *)(v53 + 32 * v20 + 18) == v14)
      {
        while (1)
        {
          uint64_t v55 = *(void *)(v53 + 32 * v54);
          if ((*(__int16 *)(v99 + 4 * (v55 & 0x3FFFFFF)) & 0x80000000) == 0)
          {
            uint64_t v56 = *(int *)(v95 + 568) - 1;
            uint64_t v57 = v53 + 32 * v54;
            int v26 = *(__int16 *)(v57 + 2 * v56 + 20);
            if (v26 <= (__int16)v21[7]) {
              break;
            }
          }
          uint64_t v53 = *(void *)(v52 + 8 * (++v20 >> 8));
          uint64_t v54 = v20;
          if (*(unsigned __int16 *)(v53 + 32 * v20 + 18) != v14) {
            goto LABEL_43;
          }
        }
        uint64_t v27 = *(unsigned int *)(v57 + 4 * v56 + 8);
        LODWORD(v28) = *(unsigned __int16 *)(v99 + 4 * (v55 & 0x3FFFFFF) + 2);
        int v58 = (__int16 *)(v90 + 4 * (v55 & 0x3FFFFFF));
        do
        {
          int v59 = *v58;
          v58 += 2;
        }
        while (v59 < 0);
        int v97 = 0;
        LODWORD(v31) = (unsigned __int16)*(v58 - 1);
        uint64_t v23 = v55;
      }
      else
      {
LABEL_43:
        int v97 = 0;
        LOWORD(v26) = 0x4000;
        LODWORD(v28) = 0xFFFF;
        uint64_t v27 = v47;
      }
    }
    else
    {
      uint64_t v27 = v47;
      int v7 = v96;
    }
    goto LABEL_80;
  }
  if ((int)v9 - 2 >= (int)(v22 - v28 + v31))
  {
    if (v28 < v31)
    {
      int v79 = (_WORD *)(result + 4 * v28);
      unint64_t v80 = (v40 << 53) - (v23 & 0x8000000000000000);
      do
      {
        uint64_t v82 = v31;
        unsigned int v83 = v22;
        *(_DWORD *)(v13 + 20) = 1073758208;
        *(_WORD *)(v13 + 18) = *(_WORD *)(v6 + 14);
        *(unsigned char *)(v13 + 26) = 0;
        *(void *)uint64_t v13 = v80 + v28;
        int v84 = *v79 & 0x7FFF;
        *(_WORD *)(v13 + 16) = *v79 & 0x7FFF;
        uint64_t v85 = v27;
        uint64_t result = sub_100015A34(*(void *)(v5 + 384), v84);
        uint64_t v27 = v85;
        int v86 = *(__int16 *)(v13 + 20);
        if (v26 < v86)
        {
          *(_WORD *)(v13 + 20) = v26;
          *(_DWORD *)(v13 + 8) = v85;
          int v86 = v26;
        }
        int v87 = v109;
        if (v86 > (__int16)v109[7])
        {
          *(_WORD *)(v13 + 24) = 0x4000;
          *(_WORD *)(v13 + 20) = 0x4000;
          unsigned int v81 = v83;
          uint64_t v31 = v82;
        }
        else
        {
          uint64_t v88 = *(unsigned __int16 *)result;
          uint64_t result = *(unsigned __int16 *)(*(void *)(*(void *)(v5 + 384) + 1792) + 2 * v88);
          if (result == 0x4000)
          {
            uint64_t result = sub_100015A48(*(void *)(v5 + 384), v88);
            uint64_t v27 = v85;
            int v87 = v109;
            LOWORD(v86) = *(_WORD *)(v13 + 20);
          }
          __int16 v89 = result - v87[5] + v86;
          *(_WORD *)(v13 + 20) = v89;
          *(_WORD *)(v13 + 24) = v89;
          unsigned int v81 = v83;
          uint64_t v31 = v82;
          if (v89 < (__int16)*v87)
          {
            *int v87 = v89;
            v87[2] = *(_WORD *)(v13 + 18);
            v87[68] = *(_WORD *)(v13 + 16);
          }
        }
        unsigned int v22 = v81 + 1;
        uint64_t v13 = *(void *)(*(void *)(v5 + 9032) + 8 * (v22 >> 8)) + 32 * v22;
        v79 += 2;
        ++v28;
      }
      while (v28 < v31);
    }
LABEL_83:
    *a3 = v22;
  }
  else
  {
LABEL_93:
    *(_DWORD *)(v5 + 552) = 3;
  }
  return result;
}

uint64_t sub_10006D294(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 9040) << 8;
  int v2 = *(_DWORD *)(a1 + 9044);
  if (v1 - v2 >= v1 - 1) {
    return 1;
  }
  int v16 = 0;
  uint64_t v15 = 0;
  int v4 = -v2;
  while (1)
  {
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a1 + 9032) + 8 * ((v1 + v4) >> 8))
                   + 32 * (v1 + v4));
    int v6 = v5 & 0x3FF;
    uint64_t v7 = (v5 >> 10) & 0x1FFFFFF;
    uint64_t v8 = (v5 >> 35) & 0x3FFFF;
    uint64_t v15 = *(void *)(a1 + 8 * ((v5 >> 53) & 0x3FF) + 680);
    uint64_t v9 = sub_10002BD6C((uint64_t)&v15, 1);
    sub_1000339F8(v9, v8, v7, &v16, v10, v11, v12, v13);
    if (v6 != v16 - 1) {
      break;
    }
    if (++v4 == -1) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_10006D384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a4;
  int v43 = a3;
  uint64_t v9 = (char *)a2;
  int v11 = 0;
  int v12 = *(_DWORD *)(a1 + 9040) << 8;
  unsigned int v13 = v12 - *(_DWORD *)(a1 + 9044);
  uint64_t v14 = *(void *)(a1 + 9032);
  uint64_t v15 = *(void *)(v14 + 8 * (v13 >> 8)) + 32 * -*(unsigned char *)(a1 + 9044);
  unsigned int v50 = 0;
  uint64_t v48 = (unsigned int **)(a1 + 680);
  uint64_t v44 = (_WORD *)(a1 + 9200);
  int v16 = v12 - 1;
  uint64_t v17 = 0xFFFFLL;
  while (1)
  {
    uint64_t v18 = *(unsigned __int16 *)(v15 + 18);
    if (v18 == 0xFFFF) {
      break;
    }
    if (v18 != (unsigned __int16)v17)
    {
      int v11 = sub_10009DA20(*(void *)(a1 + 9256), *(unsigned __int16 *)(v15 + 18));
      uint64_t v17 = v18;
    }
    int v19 = *(unsigned __int8 *)(v15 + 26);
    if (!qword_100101CC0 || (*(_DWORD *)(qword_100101CC0 + 816) ? (BOOL v20 = v11 == v19) : (BOOL v20 = 1), v20))
    {
      if (v11 != v19) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v21 = v17;
      int v22 = sub_10002BD4C(*(void *)(a1 + 8 * ((*(void *)v15 >> 53) & 0x3FFLL) + 680), *(void *)v15);
      uint64_t v17 = v21;
      if (!v22) {
        goto LABEL_4;
      }
    }
    if ((v11 == 1 || *(_DWORD *)(a1 + 544) != 2) && (*(void *)v15 & 0x8000000000000000) == 0
      || *(_WORD *)(v15 + 20) == 0x4000)
    {
      goto LABEL_4;
    }
    int v41 = *(__int16 *)(v15 + 20);
    int v42 = v12;
    unsigned int v47 = v17;
    int v46 = v9;
    unsigned int v23 = *(_DWORD *)(v15 + 8);
    int v51 = 0;
    int v49 = v50;
    unint64_t v24 = sub_1000CD3E8(1096, a2, a3, a4, a5, a6, a7, a8);
    uint64_t v25 = sub_10002BD6C((uint64_t)v48, *(_DWORD *)(a1 + 8872));
    *(_DWORD *)(v24 + 12) = 1;
    *(_OWORD *)(v24 + 264) = 0u;
    *(_OWORD *)(v24 + 280) = 0u;
    *(_OWORD *)(v24 + 296) = 0u;
    int v45 = v8;
    if (v8) {
      uint64_t v26 = v24 + 264;
    }
    else {
      uint64_t v26 = 0;
    }
    *(_OWORD *)(v24 + 307) = 0uLL;
    unsigned int v40 = v23;
    int v27 = sub_10009EFC4(*(void *)(a1 + 9000), v23, v24 + 28, v24 + 384, v24 + 323, v24 + 856, (__int16 *)(v24 + 146), v26, 59, &v51);
    *(_DWORD *)(v24 + 8) = v27;
    if (v27 <= 58)
    {
      LODWORD(v33) = v27;
      if (v25)
      {
        if (v27 >= 1)
        {
          uint64_t v34 = 0;
          do
          {
            *(_DWORD *)(v24 + 4 * v34 + 620) = sub_100031A50(v25, *(unsigned int *)(v24 + 4 * v34 + 384), *(unsigned int *)(v24 + 4 * v34 + 856), v28, v29, v30, v31, v32);
            ++v34;
            uint64_t v33 = *(int *)(v24 + 8);
          }
          while (v34 < v33);
        }
      }
      else
      {
        bzero((void *)(v24 + 620), 4 * v27);
      }
      uint64_t v35 = (*(void *)v15 >> 53) & 0x3FFLL;
      int v51 = (*(void *)v15 >> 53) & 0x3FF;
      *(void *)(v24 + 16) = *(void *)(a1 + 8 * v35 + 680);
      *(_WORD *)(v24 + 2 * (int)v33 + 28) = v47;
      *(_DWORD *)(v24 + 4 * *(int *)(v24 + 8) + 384) = (*(void *)v15 >> 35) & 0x3FFFF;
      *(unsigned char *)(v24 + *(int *)(v24 + 8) + 323) = (*(void *)v15 & 0x3FFLL) == 0;
      *(_WORD *)(v24 + 2 * (int)(*(_DWORD *)(v24 + 8))++ + 146) = *v44 - 1;
      *(_DWORD *)unint64_t v24 = *(_DWORD *)(a1 + 9076) + v41;
      if (v49 >= 1)
      {
        int v36 = 0;
        int v37 = 1096 * v49 - 1096;
        unsigned int v38 = v46;
        while (sub_100024398(v24, (uint64_t)v38))
        {
          v38 += 1096;
          ++v36;
          v37 -= 1096;
          if (v49 == v36) {
            goto LABEL_2;
          }
        }
        if (*(_DWORD *)v24 >= *(_DWORD *)v38) {
          goto LABEL_3;
        }
        unsigned int v50 = v49 - 1;
        if (v36 < v49 - 1) {
          j__memmove(v38, v38 + 1096, v37);
        }
      }
LABEL_2:
      sub_10006DA20(a1, (unsigned __int16)v47, v15, v41, v40, v46, (int *)&v50, v43, v45);
    }
LABEL_3:
    sub_1000CD4D0((void *)v24, 1096);
    uint64_t v9 = v46;
    int v8 = v45;
    int v12 = v42;
    uint64_t v17 = v47;
LABEL_4:
    if (++v13 == v12) {
      goto LABEL_43;
    }
    uint64_t v14 = *(void *)(a1 + 9032);
LABEL_6:
    uint64_t v15 = *(void *)(v14 + 8 * (v13 >> 8)) + 32 * v13;
  }
  if (v16 != v13)
  {
    ++v13;
    goto LABEL_6;
  }
LABEL_43:
  if (*(int *)(a1 + 8872) >= 1 && sub_100025D50(*v48) == 3) {
    sub_100025CA8(v9, (int *)&v50);
  }
  else {
    sub_100024E48(*(void *)(a1 + 376), (unint64_t)v9, (int *)&v50);
  }
  return v50;
}

uint64_t sub_10006D77C(uint64_t a1, char *a2, int a3, int a4)
{
  int v28 = 0;
  int v5 = 0;
  HIDWORD(v29) = 0;
  uint64_t v26 = *(void *)(a1 + 376);
  int v6 = *(_DWORD *)(a1 + 9040) << 8;
  unsigned int v7 = v6 - *(_DWORD *)(a1 + 9044);
  uint64_t v8 = *(void *)(a1 + 9032);
  uint64_t v9 = *(void *)(v8 + 8 * (v7 >> 8)) + 32 * -*(unsigned char *)(a1 + 9044);
  LOWORD(v10) = -1;
  while (1)
  {
    int v11 = *(unsigned __int16 *)(v9 + 18);
    if (v11 != 0xFFFF) {
      break;
    }
    if (++v7 == v6) {
      goto LABEL_33;
    }
LABEL_3:
    uint64_t v9 = *(void *)(v8 + 8 * (v7 >> 8)) + 32 * v7;
  }
  __int16 v12 = *(_WORD *)(v9 + 20);
  unint64_t v13 = *(unsigned int *)(v9 + 8);
  int v14 = *(_DWORD *)(a1 + 620);
  if (v14 >= v11)
  {
    if (v11 != (unsigned __int16)v10)
    {
      int v5 = sub_10009DA20(*(void *)(a1 + 9256), *(unsigned __int16 *)(v9 + 18));
      LOWORD(v10) = v11;
    }
    int v17 = *(unsigned __int8 *)(v9 + 26);
    if (!qword_100101CC0 || (*(_DWORD *)(qword_100101CC0 + 816) ? (BOOL v18 = v5 == v17) : (BOOL v18 = 1), v18))
    {
      if (v5 != v17) {
        goto LABEL_32;
      }
    }
    else
    {
      if (!sub_10002BD4C(*(void *)(a1 + 8 * ((*(void *)v9 >> 53) & 0x3FFLL) + 680), *(void *)v9)) {
        goto LABEL_32;
      }
      if (*(unsigned __int16 *)(v9 + 24) != *(unsigned __int16 *)(v9 + 20))
      {
        __int16 v12 = *(_WORD *)(v9 + 22);
        unint64_t v13 = *(unsigned int *)(v9 + 12);
      }
    }
    BOOL v20 = (_WORD *)(v9 + 20);
    if (*(_DWORD *)(a1 + 544) == 2)
    {
      int v28 = 1;
LABEL_30:
      if (*v20 != 0x4000) {
        sub_10006DA20(a1, (unsigned __int16)v10, v9, v12, v13, a2, (int *)&v29 + 1, a3, a4);
      }
      goto LABEL_32;
    }
    uint64_t v21 = *(void *)v9 >> 63;
    int v28 = v21;
LABEL_29:
    if (!v21) {
      goto LABEL_32;
    }
    goto LABEL_30;
  }
  uint64_t v15 = sub_100064238(*(void *)(*(void *)(a1 + 9328) + 8 * (~v14 + v11)), 0);
  uint64_t v16 = *(void *)v9 & 0x3FFFFFFLL;
  if ((*(__int16 *)(v15 + 4 * v16) & 0x80000000) == 0)
  {
    if (++v7 == v6) {
      goto LABEL_33;
    }
    goto LABEL_8;
  }
  unsigned int v10 = *(unsigned __int16 *)(v15 + 4 * v16 + 2);
  sub_1000266D8(*(void *)(a1 + 8 * ((*(void *)v9 >> 53) & 0x3FFLL) + 680));
  if (!*(_DWORD *)(a1 + 9284)
    || v13 == -1
    || (unsigned int v19 = sub_10009F29C(*(void *)(a1 + 9000), v13), sub_1000BDE10(v26, v19, v10)))
  {
    BOOL v20 = (_WORD *)(v9 + 20);
    LODWORD(v21) = v28;
    goto LABEL_29;
  }
LABEL_32:
  if (++v7 != v6)
  {
LABEL_8:
    uint64_t v8 = *(void *)(a1 + 9032);
    goto LABEL_3;
  }
LABEL_33:
  if (*(int *)(a1 + 8872) >= 1 && sub_100025D50(*(unsigned int **)(a1 + 680)) == 3) {
    sub_100025CA8(a2, (int *)&v29 + 1);
  }
  else {
    sub_100024E48(*(void *)(a1 + 376), (unint64_t)a2, (int *)&v29 + 1);
  }
  return HIDWORD(v29);
}

void *sub_10006DA20(uint64_t a1, unsigned int a2, uint64_t a3, int a4, unint64_t a5, _DWORD *a6, int *a7, int a8, int a9)
{
  unsigned int v50 = 0;
  int v14 = *a7;
  __int16 v49 = 0;
  uint64_t v15 = (unsigned int **)(a1 + 680);
  uint64_t v16 = (uint64_t *)sub_10002BD6C(a1 + 680, *(_DWORD *)(a1 + 8872));
  unint64_t v24 = (_DWORD *)sub_1000CD3E8(1096, v17, v18, v19, v20, v21, v22, v23);
  bzero(v24, 0x448uLL);
  v24[3] = 1;
  *(_OWORD *)(v24 + 66) = 0u;
  *(_OWORD *)(v24 + 70) = 0u;
  *(_OWORD *)(v24 + 74) = 0u;
  *(_OWORD *)((char *)v24 + 307) = 0u;
  if (a9) {
    uint64_t v25 = (uint64_t)(v24 + 66);
  }
  else {
    uint64_t v25 = 0;
  }
  if (*(int *)(a1 + 8872) >= 1 && sub_100025D50(*v15) == 3)
  {
    int v26 = *(unsigned __int16 *)(a3 + 18);
    int v27 = *(_DWORD *)(a1 + 620);
    if (v27 >= v26)
    {
      unint64_t v29 = *(void *)a3 & 0x7FFFFFFFFFFFFFFFLL;
    }
    else
    {
      uint64_t v48 = 0;
      BOOL v47 = 0;
      uint64_t v28 = *(unsigned int *)(*(void *)(a1 + 9344) + 4 * (~v27 + v26));
      unsigned int v50 = (*(void *)a3 >> 53) & 0x3FF;
      sub_1000340F4(v16, v28, a2, (unsigned int *)&v48 + 1, (int *)&v48, &v47);
      unint64_t v29 = ((unint64_t)v50 << 53) + (v28 << 35) + ((uint64_t)SHIDWORD(v48) << 10);
    }
    v24[6] = sub_10009E750(*(unsigned int **)(a1 + 9000), a5, a2, v29, 0, 0, *(_WORD *)(a1 + 9200));
    char v38 = 1;
    goto LABEL_18;
  }
  int v30 = sub_10009EFC4(*(void *)(a1 + 9000), a5, (uint64_t)(v24 + 7), (uint64_t)(v24 + 96), (uint64_t)v24 + 323, (uint64_t)(v24 + 214), (__int16 *)v24 + 73, v25, 59, &v50);
  v24[2] = v30;
  if (v30 <= 58)
  {
    LODWORD(v36) = v30;
    if (v16)
    {
      if (v30 >= 1)
      {
        uint64_t v37 = 0;
        do
        {
          v24[v37 + 155] = sub_100031A50((uint64_t)v16, v24[v37 + 96], v24[v37 + 214], v31, v32, v33, v34, v35);
          ++v37;
          uint64_t v36 = (int)v24[2];
        }
        while (v37 < v36);
      }
    }
    else
    {
      bzero(v24 + 155, 4 * v30);
    }
    char v38 = 0;
    *((_WORD *)v24 + (int)v36 + 14) = a2;
    v24[v24[2] + 96] = (*(void *)a3 >> 35) & 0x3FFFF;
    *((unsigned char *)v24 + v24[2] + 323) = (*(void *)a3 & 0x3FFLL) == 0;
    *((_WORD *)v24 + v24[2]++ + 73) = *(_WORD *)(a1 + 9200) - 1;
LABEL_18:
    uint64_t v39 = (*(void *)a3 >> 53) & 0x3FFLL;
    unsigned int v50 = (*(void *)a3 >> 53) & 0x3FF;
    *((void *)v24 + 2) = *(void *)(a1 + 8 * v39 + 680);
    *unint64_t v24 = *(_DWORD *)(a1 + 9076) + a4;
    *((_WORD *)v24 + 2) = 0;
    unsigned int v40 = *(_DWORD *)(a1 + 544);
    if ((v40 > 0xB || ((1 << v40) & 0x828) == 0) && *(__int16 *)(a1 + 456) != -1)
    {
      __int16 v49 = sub_1000BD964(*(void *)(a1 + 376), a2, 0);
      *v24 += sub_1000BDCD4(*(void *)(a1 + 376), (uint64_t)&v49, 1u, *(unsigned __int16 *)(a1 + 456));
    }
    if (v38)
    {
      if (v14 >= 1)
      {
        int v41 = 0;
        while ((sub_100024450(v24, a6) & 0x80000000) == 0)
        {
          a6 += 274;
          if (v14 == ++v41) {
            goto LABEL_30;
          }
        }
        goto LABEL_31;
      }
    }
    else if (v14 >= 1)
    {
      int v41 = 0;
      while ((sub_1000242D0(v24, a6) & 0x80000000) == 0)
      {
        a6 += 274;
        if (v14 == ++v41)
        {
LABEL_30:
          int v41 = v14;
          break;
        }
      }
LABEL_31:
      int v42 = v14 - v41;
      if (v14 < a8) {
        goto LABEL_32;
      }
      goto LABEL_36;
    }
    int v41 = 0;
    int v42 = v14;
    if (v14 < a8)
    {
LABEL_32:
      *a7 = v14 + 1;
      if (v42 < 1)
      {
LABEL_34:
        memcpy(a6, v24, 0x448uLL);
        return sub_1000CD4D0(v24, 1096);
      }
LABEL_33:
      j__memmove(a6 + 274, a6, 1096 * v42);
      goto LABEL_34;
    }
LABEL_36:
    if (v14 == v41) {
      return sub_1000CD4D0(v24, 1096);
    }
    if (--v42 < 1) {
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  return sub_1000CD4D0(v24, 1096);
}

uint64_t sub_10006DDF8(uint64_t a1, __int16 *a2, uint64_t a3)
{
  int v6 = (_WORD *)(a1 + 8976);
  int v7 = *(unsigned __int16 *)(a3 + 16);
  int v8 = *(unsigned __int16 *)(a1 + 8976);
  uint64_t result = sub_100015A34(*(void *)(a1 + 384), v7);
  unsigned int v10 = (unsigned __int16 *)result;
  if (v7 == v8)
  {
    int v11 = *a2;
    int v12 = *(__int16 *)(a3 + 20);
    if (v11 < v12)
    {
      *(_WORD *)(a3 + 20) = *a2;
      *(_DWORD *)(a3 + 8) = *((_DWORD *)a2 + 1);
      int v12 = v11;
    }
    if (v12 > (__int16)v6[43])
    {
      *(_WORD *)(a3 + 24) = 0x4000;
      *(_WORD *)(a3 + 20) = 0x4000;
      return result;
    }
    uint64_t v17 = *(unsigned __int16 *)result;
    uint64_t result = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 384) + 1792) + 2 * v17);
    if (result == 0x4000)
    {
      uint64_t result = sub_100015A48(*(void *)(a1 + 384), v17);
      LOWORD(v12) = *(_WORD *)(a3 + 20);
    }
    __int16 v18 = result - v6[41] + v12;
    *(_WORD *)(a3 + 20) = v18;
    *(_WORD *)(a3 + 24) = v18;
    if (v18 < (__int16)v6[36])
    {
      v6[36] = v18;
LABEL_28:
      v6[38] = *(_WORD *)(a3 + 18);
      v6[104] = *(_WORD *)(a3 + 16);
      return result;
    }
    return result;
  }
  int v13 = *(__int16 *)(a3 + 20);
  int v14 = *(__int16 *)(a3 + 22);
  if (v13 < v14)
  {
    *(_WORD *)(a3 + 22) = *(_WORD *)(a3 + 20);
    *(_DWORD *)(a3 + 12) = *(_DWORD *)(a3 + 8);
    int v14 = v13;
  }
  if (v14 > (__int16)v6[43])
  {
    *(_DWORD *)(a3 + 22) = 1073758208;
    __int16 v15 = 0x4000;
    int v16 = *a2;
    if (v16 >= (__int16)v13) {
      goto LABEL_20;
    }
LABEL_19:
    *(_WORD *)(a3 + 20) = v16;
    *(_DWORD *)(a3 + 8) = *((_DWORD *)a2 + 1);
    LOWORD(v13) = v16;
    goto LABEL_20;
  }
  uint64_t v19 = *(unsigned __int16 *)(result + 2);
  uint64_t result = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 384) + 1792) + 2 * v19);
  if (result == 0x4000)
  {
    uint64_t result = sub_100015A48(*(void *)(a1 + 384), v19);
    LOWORD(v14) = *(_WORD *)(a3 + 22);
    LOWORD(v13) = *(_WORD *)(a3 + 20);
  }
  __int16 v15 = result - v6[41] + v14;
  *(_WORD *)(a3 + 22) = v15;
  *(_WORD *)(a3 + 24) = v15;
  int v16 = *a2;
  if (v16 < (__int16)v13) {
    goto LABEL_19;
  }
LABEL_20:
  if ((__int16)v6[43] >= (__int16)v13)
  {
    uint64_t v20 = *v10;
    uint64_t result = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 384) + 1792) + 2 * v20);
    if (result == 0x4000)
    {
      uint64_t result = sub_100015A48(*(void *)(a1 + 384), v20);
      LOWORD(v13) = *(_WORD *)(a3 + 20);
      __int16 v15 = *(_WORD *)(a3 + 24);
    }
    __int16 v21 = result - v6[41] + v13;
    *(_WORD *)(a3 + 20) = v21;
    if (v21 < v15)
    {
      *(_WORD *)(a3 + 24) = v21;
      __int16 v15 = v21;
    }
  }
  else
  {
    *(_WORD *)(a3 + 20) = 0x4000;
  }
  if ((__int16)v6[36] > v15)
  {
    v6[36] = v15;
    goto LABEL_28;
  }
  return result;
}

uint64_t sub_10006E024(uint64_t a1, _DWORD *a2, int *a3, int a4, uint64_t *a5)
{
  int v89 = 0;
  int v87 = 0;
  uint64_t v88 = 0;
  long long v85 = 0u;
  long long v86 = 0u;
  BYTE10(v86) = -1;
  uint64_t v8 = *(int *)(a1 + 568) - 1;
  *((_WORD *)&v86 + v8 + 2) = 0x4000;
  unint64_t v9 = *a2;
  uint64_t v10 = *(void *)(a1 + 9032);
  uint64_t v11 = *(void *)(v10 + ((v9 >> 5) & 0x7FFFFF8));
  *((_DWORD *)&v85 + v8 + 2) = -1;
  int v12 = (long long *)(v11 + 32 * v9);
  int v84 = *a3;
  uint64_t v13 = *a3;
  uint64_t v81 = *(void *)(v10 + (((unint64_t)*a3 >> 5) & 0x7FFFFF8));
  uint64_t v14 = v81 + 32 * v13;
  sub_10009D254(*(void *)(a1 + 9256), *((unsigned __int16 *)v12 + 9), 0, &v87, &v89);
  if (*((unsigned __int16 *)v12 + 9) == a4 && ((*(void *)v12 ^ *a5) & 0x7FFFFFFFFFFFFFFFLL) == 0)
  {
    if (*(unsigned char *)(v11 + 32 * v9 + 26))
    {
      if ((int)v9 - 2 <= v84)
      {
        *(_DWORD *)(a1 + 552) = 3;
        return 1;
      }
      uint64_t v21 = v81 + 32 * v13;
      *(_DWORD *)(v21 + 20) = 1073758208;
      *(_WORD *)(v21 + 18) = a4;
      *(unsigned char *)(v21 + 26) = 0;
      __int16 v22 = *v87;
      *(_WORD *)(v21 + 16) = *v87;
      uint64_t v23 = *a5;
      *(void *)uint64_t v14 = *a5;
      LOWORD(v88) = *((_WORD *)a5 + 8);
      HIDWORD(v88) = *((_DWORD *)a5 + 2);
      WORD1(v86) = a4;
      uint64_t v17 = v81;
      LOWORD(v86) = v22;
      *(void *)&long long v85 = v23;
      ++*a3;
      unsigned int v80 = 1;
      uint64_t v16 = v11 + 32 * v9;
      int v12 = &v85;
      __int16 v18 = (unsigned __int16 *)(a1 + 8976);
      uint64_t v19 = v81 + 32 * v13;
      uint64_t v20 = (unsigned __int16 *)(v19 + 16);
      if (*(_WORD *)(v19 + 16)) {
        goto LABEL_5;
      }
      goto LABEL_9;
    }
    LOWORD(v88) = *((_WORD *)a5 + 8);
    HIDWORD(v88) = *((_DWORD *)a5 + 2);
    long long v79 = v12[1];
    *(_OWORD *)uint64_t v14 = *v12;
    *(_OWORD *)(v14 + 16) = v79;
    LODWORD(v9) = v9 + 1;
    uint64_t v16 = *(void *)(*(void *)(a1 + 9032) + 8 * (v9 >> 8)) + 32 * v9;
    unsigned int v80 = 1;
  }
  else
  {
    unsigned int v80 = 0;
    long long v15 = v12[1];
    *(_OWORD *)uint64_t v14 = *v12;
    *(_OWORD *)(v14 + 16) = v15;
    LOWORD(v88) = 0x4000;
    HIDWORD(v88) = -1;
    LODWORD(v9) = v9 + 1;
    uint64_t v16 = *(void *)(*(void *)(a1 + 9032) + 8 * (v9 >> 8)) + 32 * v9;
  }
  uint64_t v17 = v81;
  __int16 v18 = (unsigned __int16 *)(a1 + 8976);
  uint64_t v19 = v81 + 32 * v13;
  uint64_t v20 = (unsigned __int16 *)(v19 + 16);
  if (*(_WORD *)(v19 + 16))
  {
LABEL_5:
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(a1 + 9424))(a1, &v88, v14);
    goto LABEL_17;
  }
LABEL_9:
  unint64_t v24 = (unsigned __int16 *)sub_100015A34(*(void *)(a1 + 384), 0);
  int v25 = (__int16)v88;
  int v28 = *(__int16 *)(v19 + 20);
  int v27 = (signed __int16 *)(v19 + 20);
  int v26 = v28;
  if ((__int16)v88 < v28)
  {
    *int v27 = v88;
    *(_DWORD *)(v17 + 32 * v13 + 8) = HIDWORD(v88);
    int v26 = v25;
  }
  if (v26 <= (__int16)v18[43])
  {
    uint64_t v29 = *v24;
    int v30 = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 384) + 1792) + 2 * v29);
    if (v30 == 0x4000)
    {
      LOWORD(v30) = sub_100015A48(*(void *)(a1 + 384), v29);
      LOWORD(v26) = *v27;
    }
    signed __int16 v31 = v30 - v18[41] + v26;
    *int v27 = v31;
    uint64_t v32 = v17 + 32 * v13;
    *(_WORD *)(v32 + 24) = v31;
    if (v31 < (__int16)v18[36])
    {
      v18[36] = v31;
      v18[38] = *(_WORD *)(v32 + 18);
      v18[104] = *v20;
    }
  }
  else
  {
    *(_WORD *)(v17 + 32 * v13 + 24) = 0x4000;
    *int v27 = 0x4000;
  }
LABEL_17:
  int v33 = *(unsigned __int8 *)(v17 + 32 * v13 + 26);
  if (v89 - 1 <= v33)
  {
    if (v89 == v33)
    {
      uint64_t v34 = *(__int16 *)(v17 + 32 * v13 + 20);
      uint64_t v35 = *(void *)(a1 + 9240);
      if (*(_DWORD *)v35 <= (int)v34)
      {
LABEL_23:
        if ((int)v34 < (__int16)v18[37]) {
          v18[37] = v34;
        }
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v34 = *(__int16 *)(v17 + 32 * v13 + 2 * *(int *)(a1 + 568) + 18);
      uint64_t v35 = *(void *)(a1 + 9240);
      if (*(_DWORD *)v35 <= (int)v34) {
        goto LABEL_23;
      }
    }
    ++*(_WORD *)(*(void *)(v35 + 8) + 2 * v34);
    ++*(_DWORD *)(*(void *)(a1 + 9240) + 4);
    goto LABEL_23;
  }
LABEL_25:
  unsigned int v36 = v84 + 1;
  for (uint64_t i = *(void *)(*(void *)(a1 + 9032) + 8 * ((v84 + 1) >> 8))
          + 32 * (v84 + 1); ; uint64_t i = *(void *)(v38 + 8 * (v36 >> 8)) + 32 * v36)
  {
    int v39 = *((unsigned __int8 *)v12 + 26);
    if (v39 + 1 == *(unsigned __int8 *)(v16 + 26))
    {
      int v40 = *((unsigned __int16 *)v12 + 9);
      int v41 = v12;
      int v12 = (long long *)v16;
      if (v40 == *(unsigned __int16 *)(v16 + 18))
      {
        while (1)
        {
          int v12 = (long long *)v16;
          if (*(void *)v41 != *(void *)v16) {
            goto LABEL_52;
          }
          uint64_t v42 = *(int *)(a1 + 568) - 1;
          LOWORD(v88) = *((_WORD *)v41 + v42 + 10);
          HIDWORD(v88) = *((_DWORD *)v41 + v42 + 2);
          long long v43 = *(_OWORD *)(v16 + 16);
          *(_OWORD *)uint64_t i = *(_OWORD *)v16;
          *(_OWORD *)(i + 16) = v43;
          if (*(_WORD *)(i + 16))
          {
            (*(void (**)(uint64_t, uint64_t *, uint64_t))(a1 + 9424))(a1, &v88, i);
          }
          else
          {
            uint64_t v44 = (unsigned __int16 *)sub_100015A34(*(void *)(a1 + 384), 0);
            int v45 = (__int16)v88;
            int v46 = *(__int16 *)(i + 20);
            if ((__int16)v88 < v46)
            {
              *(_WORD *)(i + 20) = v88;
              *(_DWORD *)(i + 8) = HIDWORD(v88);
              int v46 = v45;
            }
            if (v46 <= (__int16)v18[43])
            {
              uint64_t v47 = *v44;
              int v48 = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 384) + 1792) + 2 * v47);
              if (v48 == 0x4000)
              {
                LOWORD(v48) = sub_100015A48(*(void *)(a1 + 384), v47);
                LOWORD(v46) = *(_WORD *)(i + 20);
              }
              signed __int16 v49 = v48 - v18[41] + v46;
              *(_WORD *)(i + 20) = v49;
              *(_WORD *)(i + 24) = v49;
              if (v49 < (__int16)v18[36])
              {
                v18[36] = v49;
                v18[38] = *(_WORD *)(i + 18);
                v18[104] = *(_WORD *)(i + 16);
              }
            }
            else
            {
              *(_WORD *)(i + 24) = 0x4000;
              *(_WORD *)(i + 20) = 0x4000;
            }
          }
          int v50 = *(unsigned __int8 *)(i + 26);
          if (v89 - 1 <= v50) {
            break;
          }
LABEL_49:
          LODWORD(v9) = v9 + 1;
          uint64_t v53 = *(void *)(a1 + 9032);
          uint64_t v16 = *(void *)(v53 + 8 * (v9 >> 8)) + 32 * v9;
          ++v36;
          uint64_t i = *(void *)(v53 + 8 * (v36 >> 8)) + 32 * v36;
          int v39 = *((unsigned __int8 *)v12 + 26);
          if (v39 + 1 == *(unsigned __int8 *)(v16 + 26))
          {
            int v41 = v12;
            if (*((unsigned __int16 *)v12 + 9) == *(unsigned __int16 *)(v16 + 18)) {
              continue;
            }
          }
          goto LABEL_51;
        }
        if (v89 == v50)
        {
          uint64_t v51 = *(__int16 *)(i + 20);
          uint64_t v52 = *(void *)(a1 + 9240);
          if (*(_DWORD *)v52 <= (int)v51)
          {
LABEL_47:
            if ((int)v51 < (__int16)v18[37]) {
              v18[37] = v51;
            }
            goto LABEL_49;
          }
        }
        else
        {
          uint64_t v51 = *(__int16 *)(i + 2 * *(int *)(a1 + 568) + 18);
          uint64_t v52 = *(void *)(a1 + 9240);
          if (*(_DWORD *)v52 <= (int)v51) {
            goto LABEL_47;
          }
        }
        ++*(_WORD *)(*(void *)(v52 + 8) + 2 * v51);
        ++*(_DWORD *)(*(void *)(a1 + 9240) + 4);
        goto LABEL_47;
      }
    }
    else
    {
LABEL_51:
      int v41 = v12;
      int v12 = (long long *)v16;
    }
LABEL_52:
    int v54 = v89;
    if (v89 > v39)
    {
      uint64_t v55 = *(int *)(a1 + 568) - 1;
      LOWORD(v88) = *((_WORD *)v41 + v55 + 10);
      HIDWORD(v88) = *((_DWORD *)v41 + v55 + 2);
      if ((unsigned __int16)v88 != 0x4000) {
        break;
      }
    }
LABEL_77:
    if (*((unsigned __int16 *)v41 + 9) != *((unsigned __int16 *)v12 + 9)
      || ((*(void *)v12 ^ *(void *)v41) & 0x7FFFFFFFFFFFFFFFLL) != 0)
    {
      *a2 = v9;
      *a3 = v36;
      return v80;
    }
    long long v68 = v12[1];
    *(_OWORD *)uint64_t i = *v12;
    *(_OWORD *)(i + 16) = v68;
    LOWORD(v88) = 0x4000;
    HIDWORD(v88) = -1;
    if (*(_WORD *)(i + 16))
    {
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(a1 + 9424))(a1, &v88, i);
    }
    else
    {
      unsigned int v69 = (unsigned __int16 *)sub_100015A34(*(void *)(a1 + 384), 0);
      int v70 = (__int16)v88;
      int v71 = *(__int16 *)(i + 20);
      if ((__int16)v88 < v71)
      {
        *(_WORD *)(i + 20) = v88;
        *(_DWORD *)(i + 8) = HIDWORD(v88);
        int v71 = v70;
      }
      if (v71 <= (__int16)v18[43])
      {
        uint64_t v72 = *v69;
        int v73 = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 384) + 1792) + 2 * v72);
        if (v73 == 0x4000)
        {
          LOWORD(v73) = sub_100015A48(*(void *)(a1 + 384), v72);
          LOWORD(v71) = *(_WORD *)(i + 20);
        }
        signed __int16 v74 = v73 - v18[41] + v71;
        *(_WORD *)(i + 20) = v74;
        *(_WORD *)(i + 24) = v74;
        if (v74 < (__int16)v18[36])
        {
          v18[36] = v74;
          v18[38] = *(_WORD *)(i + 18);
          v18[104] = *(_WORD *)(i + 16);
        }
      }
      else
      {
        *(_WORD *)(i + 24) = 0x4000;
        *(_WORD *)(i + 20) = 0x4000;
      }
    }
    LODWORD(v9) = v9 + 1;
    uint64_t v38 = *(void *)(a1 + 9032);
    uint64_t v16 = *(void *)(v38 + 8 * (v9 >> 8)) + 32 * v9;
    ++v36;
  }
  if ((int)v9 - 2 > (int)v36)
  {
    *(_WORD *)(i + 18) = *((_WORD *)v41 + 9);
    *(unsigned char *)(i + 26) = *((unsigned char *)v41 + 26) + 1;
    *(void *)uint64_t i = *(void *)v41;
    if (v54 - 1 != *((unsigned __int8 *)v41 + 26))
    {
      *(_DWORD *)(i + 20) = 1073758208;
      int v62 = v87[*((unsigned __int8 *)v41 + 26) + 1];
      *(_WORD *)(i + 16) = v62;
      if (v62)
      {
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(a1 + 9424))(a1, &v88, i);
      }
      else
      {
        uint64_t v65 = (unsigned __int16 *)sub_100015A34(*(void *)(a1 + 384), 0);
        int v66 = (__int16)v88;
        int v67 = *(__int16 *)(i + 20);
        if ((__int16)v88 < v67)
        {
          *(_WORD *)(i + 20) = v88;
          *(_DWORD *)(i + 8) = HIDWORD(v88);
          int v67 = v66;
        }
        if (v67 <= (__int16)v18[43])
        {
          uint64_t v75 = *v65;
          int v76 = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 384) + 1792) + 2 * v75);
          if (v76 == 0x4000)
          {
            LOWORD(v76) = sub_100015A48(*(void *)(a1 + 384), v75);
            LOWORD(v67) = *(_WORD *)(i + 20);
          }
          signed __int16 v77 = v76 - v18[41] + v67;
          *(_WORD *)(i + 20) = v77;
          *(_WORD *)(i + 24) = v77;
          if (v77 < (__int16)v18[36])
          {
            v18[36] = v77;
            v18[38] = *(_WORD *)(i + 18);
            v18[104] = *(_WORD *)(i + 16);
          }
        }
        else
        {
          *(_WORD *)(i + 24) = 0x4000;
          *(_WORD *)(i + 20) = 0x4000;
        }
      }
      goto LABEL_76;
    }
    int v56 = *v18;
    *(_WORD *)(i + 16) = v56;
    *(_WORD *)(i + 20) = 0x4000;
    uint64_t v57 = (unsigned __int16 *)sub_100015A34(*(void *)(a1 + 384), v56);
    int v58 = (__int16)v88;
    int v59 = *(__int16 *)(i + 20);
    if ((__int16)v88 < v59)
    {
      *(_WORD *)(i + 20) = v88;
      *(_DWORD *)(i + 8) = HIDWORD(v88);
      int v59 = v58;
    }
    if (v59 <= (__int16)v18[43])
    {
      uint64_t v63 = *v57;
      int v64 = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 384) + 1792) + 2 * v63);
      if (v64 == 0x4000)
      {
        LOWORD(v64) = sub_100015A48(*(void *)(a1 + 384), v63);
        LOWORD(v59) = *(_WORD *)(i + 20);
      }
      __int16 v60 = v64 - v18[41] + v59;
      *(_WORD *)(i + 20) = v60;
      *(_WORD *)(i + 24) = v60;
      if (v60 < (__int16)v18[36])
      {
        v18[36] = v60;
        v18[38] = *(_WORD *)(i + 18);
        v18[104] = *(_WORD *)(i + 16);
        __int16 v60 = *(_WORD *)(i + 20);
        uint64_t v61 = *(void *)(a1 + 9240);
        if (*(_DWORD *)v61 > v60) {
          goto LABEL_74;
        }
      }
      else
      {
        uint64_t v61 = *(void *)(a1 + 9240);
        if (*(_DWORD *)v61 > v60) {
          goto LABEL_74;
        }
      }
    }
    else
    {
      __int16 v60 = 0x4000;
      *(_WORD *)(i + 24) = 0x4000;
      *(_WORD *)(i + 20) = 0x4000;
      uint64_t v61 = *(void *)(a1 + 9240);
      if (*(int *)v61 > 0x4000)
      {
LABEL_74:
        ++*(_WORD *)(*(void *)(v61 + 8) + 2 * v60);
        ++*(_DWORD *)(*(void *)(a1 + 9240) + 4);
        if ((__int16)v18[37] <= v60)
        {
LABEL_76:
          ++v36;
          uint64_t i = *(void *)(*(void *)(a1 + 9032) + 8 * (v36 >> 8)) + 32 * v36;
          goto LABEL_77;
        }
LABEL_75:
        v18[37] = v60;
        goto LABEL_76;
      }
    }
    if ((__int16)v18[37] <= v60) {
      goto LABEL_76;
    }
    goto LABEL_75;
  }
  *a2 = v9;
  *a3 = v36;
  *(_DWORD *)(a1 + 552) = 3;
  return v80;
}

uint64_t sub_10006E9CC(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v8 = (_WORD *)sub_1000C33A0(9432);
  uint64_t v9 = (uint64_t)v8;
  if (!v8) {
    return v9;
  }
  uint64_t v10 = v8 + 4454;
  memcpy(v8, off_1000FD718, 0x208uLL);
  *(void *)(v9 + 376) = a1;
  *(void *)(v9 + 384) = a2;
  *(_DWORD *)(v9 + 432) = a3;
  *(_DWORD *)(v9 + 560) = a4;
  int v11 = qword_100101CC0;
  if (qword_100101CC0) {
    int v11 = *(_DWORD *)(qword_100101CC0 + 5276);
  }
  *(_DWORD *)(v9 + 8896) = v11;
  *(_DWORD *)(v9 + 368) = 9;
  *(_WORD *)(v9 + 8946) = sub_1000041E4(a2);
  *(_DWORD *)(v9 + 556) = 0;
  uint64_t v12 = *(int *)(v9 + 432);
  int v13 = sub_100004180(*(void *)(v9 + 384));
  *(_DWORD *)(v9 + 568) = v13;
  uint64_t v14 = sub_100075358;
  if (v13 == 1) {
    uint64_t v14 = sub_100073A64;
  }
  *(void *)(v9 + 9416) = v14;
  *(void *)(v9 + 592) = 0;
  *(_DWORD *)(v9 + 588) = 0;
  *(void *)(v9 + 576) = 0;
  uint64_t v15 = qword_100101CC0;
  if (qword_100101CC0)
  {
    uint64_t v16 = *(void *)(qword_100101CC0 + 5208) / v12;
    *(_WORD *)(v9 + 8910) = v16;
    *uint64_t v10 = *(void *)(v15 + 5216) / v12 - v16;
    *(_OWORD *)(v9 + 9024) = 0u;
    *(_WORD *)(v9 + 9064) = *(void *)(v15 + 1688);
    *(_WORD *)(v9 + 9066) = *(void *)(v15 + 1456);
    *(_WORD *)(v9 + 9070) = *(void *)(v15 + 1496);
    __int16 v17 = *(_WORD *)(v15 + 1664);
  }
  else
  {
    __int16 v17 = 0;
    *(_DWORD *)uint64_t v10 = 0;
    *(_DWORD *)(v9 + 9064) = 0;
    *(_WORD *)(v9 + 9070) = 0;
    *(_OWORD *)(v9 + 9024) = 0u;
  }
  *(_WORD *)(v9 + 9072) = v17;
  *(_WORD *)(v9 + 9202) = -1;
  *(void *)(v9 + 456) = 0xFFFFFFFFLL;
  *(_DWORD *)(v9 + 9204) = 0;
  if (v15)
  {
    uint64_t v18 = sub_10009E548(*(_DWORD *)(v15 + 4120));
    *(void *)(v9 + 9000) = v18;
    if (!v18) {
      goto LABEL_39;
    }
  }
  else
  {
    uint64_t v18 = sub_10009E548(0);
    *(void *)(v9 + 9000) = v18;
    if (!v18) {
      goto LABEL_39;
    }
  }
  sub_10009E68C(v18, *(void *)(v9 + 376));
  *(void *)(v9 + 9016) = 0;
  *(_DWORD *)(v9 + 8872) = 0;
  if (!sub_10006577C(v9)) {
    goto LABEL_39;
  }
  sub_10003B678(v9);
  if (!*(void *)(v9 + 408)) {
    goto LABEL_39;
  }
  *(void *)(v9 + 9232) = sub_10005EE38();
  *(void *)(v9 + 9240) = sub_10005EE38();
  int v19 = sub_100004148(*(void *)(v9 + 384));
  *(void *)(v9 + 640) = sub_1000C33A0(v19);
  *(void *)(v9 + 528) = sub_1000731E0;
  *(void *)(v9 + 536) = sub_1000755D8;
  uint64_t v20 = (void *)qword_100101CC0;
  if (!qword_100101CC0) {
    goto LABEL_23;
  }
  uint64_t v21 = *(void *)(qword_100101CC0 + 4064);
  if (v21 >= 1)
  {
    uint64_t v22 = sub_1000C33A0(2 * v21);
    *(void *)(v9 + 9216) = v22;
    if (!v22) {
      goto LABEL_39;
    }
    uint64_t v20 = (void *)qword_100101CC0;
    if (!qword_100101CC0)
    {
LABEL_23:
      *(void *)(v9 + 9360) = 0;
      goto LABEL_24;
    }
  }
  *(void *)(v9 + 9360) = v20[190];
  if ((uint64_t)v20[191] < 1) {
    goto LABEL_36;
  }
  uint64_t v23 = sub_1000C33A0(8 * v20[190]);
  *(void *)(v9 + 9328) = v23;
  if (!v23) {
    goto LABEL_39;
  }
  uint64_t v24 = qword_100101CC0 ? 2 * *(void *)(qword_100101CC0 + 1520) : 0;
  uint64_t v26 = sub_1000C33A0(v24);
  *(void *)(v9 + 9336) = v26;
  if (!v26) {
    goto LABEL_39;
  }
  uint64_t v27 = qword_100101CC0 ? 4 * *(void *)(qword_100101CC0 + 1520) : 0;
  uint64_t v28 = sub_1000C33A0(v27);
  *(void *)(v9 + 9344) = v28;
  if (!v28) {
    goto LABEL_39;
  }
  uint64_t v20 = (void *)qword_100101CC0;
  if (!qword_100101CC0) {
    goto LABEL_24;
  }
  if (*(uint64_t *)(qword_100101CC0 + 1608) < 2)
  {
LABEL_36:
    *(_DWORD *)(v9 + 9368) = v20[201];
    *(_DWORD *)(v9 + 9372) = v20[202];
    uint64_t v30 = v20[198];
    if (v30)
    {
      uint64_t v31 = v20[517];
      if (v31)
      {
        uint64_t v32 = sub_1000D307C(*(void *)(v9 + 384), *(void *)(v9 + 376), v12, v31, v30, 0, 0, 0);
        *(void *)(v9 + 472) = v32;
        if (!v32) {
          goto LABEL_39;
        }
      }
    }
    return v9;
  }
  uint64_t v29 = sub_1000C33A0(4 * *(void *)(qword_100101CC0 + 1520));
  *(void *)(v9 + 9352) = v29;
  if (v29)
  {
    uint64_t v20 = (void *)qword_100101CC0;
    if (qword_100101CC0) {
      goto LABEL_36;
    }
LABEL_24:
    *(void *)(v9 + 9368) = 0;
    return v9;
  }
LABEL_39:
  sub_10006ED10(v9);
  return 0;
}

uint64_t sub_10006ED10(uint64_t a1)
{
  sub_100065C7C(a1);
  int v2 = *(uint64_t **)(a1 + 9016);
  if (v2)
  {
    sub_1000241A8(v2);
    *(void *)(a1 + 9016) = 0;
  }
  sub_1000C321C(*(void *)(a1 + 640));
  uint64_t v3 = *(void *)(a1 + 472);
  if (v3) {
    sub_1000D31E4(v3);
  }
  sub_10005EEB0(*(void *)(a1 + 9232));
  sub_10005EEB0(*(void *)(a1 + 9240));
  sub_100006A98(*(void *)(a1 + 408));
  sub_1000C3F24(*(void *)(a1 + 592), *(unsigned int *)(a1 + 608), *(_DWORD *)(a1 + 608));
  sub_1000C3F24(*(void *)(a1 + 600), *(unsigned int *)(a1 + 608), *(_DWORD *)(a1 + 608));
  sub_10009CD24(*(void *)(a1 + 9256));
  sub_1000522C0(*(void *)(a1 + 9264));
  sub_1000C321C(*(void *)(a1 + 576));
  sub_1000C3F24(*(void *)(a1 + 9024), *(unsigned int *)(a1 + 9040), *(_DWORD *)(a1 + 9040));
  sub_10009E614(*(void *)(a1 + 9000));
  sub_1000C321C(*(void *)(a1 + 9216));
  sub_1000C321C(*(void *)(a1 + 9312));
  sub_1000C321C(*(void *)(a1 + 9328));
  sub_1000C321C(*(void *)(a1 + 9336));
  sub_1000C321C(*(void *)(a1 + 9344));
  sub_1000C321C(*(void *)(a1 + 9352));
  sub_1000C321C(*(void *)(a1 + 656));
  sub_1000C321C(*(void *)(a1 + 664));
  sub_1000C321C(*(void *)(a1 + 9192));
  sub_100026244(*(void *)(a1 + 9384));
  return sub_1000C321C(a1);
}

uint64_t sub_10006EE24(uint64_t a1, int a2)
{
  sub_1000C3F24(*(void *)(a1 + 592), *(unsigned int *)(a1 + 608), *(_DWORD *)(a1 + 608));
  *(void *)(a1 + 592) = 0;
  if (*(_DWORD *)(a1 + 556))
  {
    sub_1000C3F24(*(void *)(a1 + 600), *(unsigned int *)(a1 + 608), *(_DWORD *)(a1 + 608));
    *(void *)(a1 + 600) = 0;
    int v4 = *(_DWORD *)(a1 + 556);
    *(_DWORD *)(a1 + 608) = 0;
    if (v4)
    {
      sub_1000C321C(0);
      *(void *)(a1 + 600) = 0;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 608) = 0;
  }
  sub_1000C3F24(*(void *)(a1 + 9024), *(unsigned int *)(a1 + 9040), *(_DWORD *)(a1 + 9040));
  *(void *)(a1 + 9024) = 0;
  *(_DWORD *)(a1 + 9040) = 0;
  uint64_t result = sub_1000C321C(*(void *)(a1 + 9192));
  *(void *)(a1 + 9192) = 0;
  *(_DWORD *)(a1 + 9188) = 0;
  if (a2)
  {
    uint64_t v6 = *(void *)(a1 + 9256);
    return sub_10009CD8C(v6);
  }
  return result;
}

uint64_t sub_10006EEE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, int a9, int a10)
{
  uint64_t v112 = 0;
  uint64_t v113 = 0;
  *(_DWORD *)(a1 + 552) = 4;
  *(_DWORD *)(a1 + 544) = a6;
  *(_DWORD *)(a1 + 548) = a7;
  if ((int)a5 >= 1025) {
    goto LABEL_2;
  }
  uint64_t v15 = a5;
  uint64_t v16 = (char *)a4;
  int v19 = *(_DWORD *)(a1 + 8896);
  if (v19)
  {
    if (a6 == 5 || a6 == 2) {
      goto LABEL_2;
    }
  }
  uint64_t v20 = qword_100101CC0;
  if (!qword_100101CC0)
  {
    if (a6 != 11) {
      goto LABEL_15;
    }
LABEL_2:
    uint64_t result = 0;
LABEL_3:
    *(_DWORD *)(a1 + 552) = 3;
    return result;
  }
  if (*(_DWORD *)(qword_100101CC0 + 4452) && *(_DWORD *)(qword_100101CC0 + 4544)
    || a6 == 11 && *(uint64_t *)(qword_100101CC0 + 4912) <= 0)
  {
    goto LABEL_2;
  }
LABEL_15:
  BOOL v74 = v19 == 0;
  uint64_t v21 = sub_100071728;
  if (v74) {
    uint64_t v21 = sub_100071BF4;
  }
  *(void *)(a1 + 520) = v21;
  int v22 = a9;
  switch((int)a6)
  {
    case 2:
      break;
    case 3:
    case 5:
    case 11:
      if (!v20
        || *(void *)(v20 + 1272) != 0x7FFFFFFFLL
        && (!*(_DWORD *)(v20 + 4736)
         || !a8
         || a9
         || *(__int16 *)(a1 + 456) != -1
         || !*(void *)(v20 + 1528)
         || !*(_DWORD *)(a1 + 9360)))
      {
        goto LABEL_2;
      }
      break;
    default:
      goto LABEL_2;
  }
  uint64_t result = sub_100025D60(a4, a5);
  if (!result) {
    goto LABEL_3;
  }
  if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 1264))
  {
    uint64_t v16 = (char *)(a1 + 9384);
    if (!*(void *)(a1 + 9384)) {
      *(void *)(a1 + 9384) = sub_100026CA4(*(void *)(a1 + 376), 0);
    }
    uint64_t v15 = 1;
  }
  sub_100065C7C(a1);
  unsigned int v108 = (_DWORD *)(a1 + 680);
  size_t __n = 8 * (int)v15;
  memcpy((void *)(a1 + 680), v16, __n);
  *(_DWORD *)(a1 + 8872) = v15;
  int v23 = sub_1000286D4(v15, (uint64_t)v16);
  *(_DWORD *)(a1 + 8900) = v23;
  if (v23)
  {
    int v105 = v23;
    uint64_t result = sub_1000C33A0(8 * (int)v15);
    *(void *)(a1 + 9288) = result;
    if (!result) {
      return result;
    }
    memcpy((void *)result, v16, __n);
    uint64_t v24 = sub_1000C33A0(8 * (int)v15);
    *(void *)(a1 + 9296) = v24;
    if (!v24) {
      goto LABEL_129;
    }
    *(_DWORD *)(a1 + 9304) = v15;
    int v25 = (uint64_t *)(a1 + 680);
    int v23 = v105;
    if ((int)v15 >= 1)
    {
      uint64_t v26 = 0;
      do
      {
        uint64_t result = sub_100027F64(*(void *)&v16[v26]);
        *(void *)(a1 + 680 + v26) = result;
        if (!result)
        {
          *(void *)(a1 + v26 + 680) = *(void *)&v16[v26];
          return result;
        }
        if (*(void *)(*(void *)(a1 + 9288) + v26) != result) {
          *(void *)(*(void *)(a1 + 9296) + v26) = result;
        }
        v26 += 8;
      }
      while (8 * v15 != v26);
      int v25 = (uint64_t *)(a1 + 680);
      int v22 = a9;
      int v23 = v105;
      uint64_t v27 = qword_100101CC0;
      if (!qword_100101CC0) {
        goto LABEL_57;
      }
      goto LABEL_44;
    }
  }
  else
  {
    int v25 = (uint64_t *)v16;
  }
  uint64_t v27 = qword_100101CC0;
  if (!qword_100101CC0) {
    goto LABEL_57;
  }
LABEL_44:
  if (!*(_DWORD *)(v27 + 5308) || v23 || (int)v15 < 1 || !*(unsigned char *)(v27 + 4220))
  {
LABEL_50:
    uint64_t v29 = qword_100101CC0;
    if (qword_100101CC0)
    {
LABEL_51:
      char v30 = 0;
      BOOL __na = a7 == 1;
      if (a7 == 1) {
        uint64_t v31 = 0;
      }
      else {
        uint64_t v31 = *(unsigned int *)(v29 + 1072);
      }
      *(_DWORD *)(a1 + 544) = a6;
      unsigned int v107 = (_DWORD *)(a1 + 9272);
      *(_DWORD *)(a1 + 9272) = a8;
      unsigned int v106 = (_DWORD *)(a1 + 9276);
      *(_DWORD *)(a1 + 9276) = v22;
      *(_DWORD *)(a1 + 8892) = 1;
      uint64_t v32 = *(void *)(v29 + 1704);
LABEL_58:
      *(_WORD *)(a1 + 9068) = v32;
      if (a3 < 1)
      {
        *(_DWORD *)(a1 + 9204) = 0;
        __int16 v33 = -1;
      }
      else
      {
        *(_DWORD *)(a1 + 9204) = 1;
        __int16 v33 = *(_WORD *)(a2 + 2 * (a3 - 1));
      }
      *(_WORD *)(a1 + 9202) = v33;
      int32x4_t v111 = v25;
      if (a6 == 2)
      {
        if (v30)
        {
          int v34 = 0;
          int v35 = 0;
        }
        else
        {
          int v34 = *(_DWORD *)(v29 + 5348);
          int v35 = *(_DWORD *)(v29 + 5372);
        }
        sub_100039634(a1, v34, v35);
        int v37 = 0;
        *(_DWORD *)(a1 + 8872) = v15;
      }
      else
      {
        if (v30) {
          int v36 = 0;
        }
        else {
          int v36 = *(_DWORD *)(v29 + 5348);
        }
        if ((int)v15 < 1)
        {
          int v36 = 0;
          int v37 = 1;
        }
        else
        {
          uint64_t v38 = v15;
          int v39 = v25;
          while (*v39 && sub_100026908(*v39))
          {
            ++v39;
            if (!--v38)
            {
              int v36 = 0;
              int v37 = 1;
              goto LABEL_76;
            }
          }
          int v37 = 0;
LABEL_76:
          uint64_t v29 = qword_100101CC0;
        }
        if (v29) {
          int v40 = *(_DWORD *)(v29 + 5372);
        }
        else {
          int v40 = 0;
        }
        sub_100039634(a1, v36, v40);
      }
      if (*(_DWORD *)(a1 + 556))
      {
        int v41 = 1;
        goto LABEL_84;
      }
      int v45 = *(_DWORD *)(a1 + 544);
      if ((v45 | 8) == 0xB)
      {
        if (!v37)
        {
          uint64_t v42 = (_DWORD *)(a1 + 8888);
          *(_DWORD *)(a1 + 8888) = a10;
          long long v43 = (_DWORD *)(a1 + 8884);
          *(_DWORD *)(a1 + 8884) = a10;
LABEL_89:
          char v44 = 1;
          if (a6 != 2 && a6 != 5)
          {
            int v46 = sub_1000396BC(a1, 0, (uint64_t)v111, v15, a6, a7, (int *)&v113, (int *)&v113 + 1, (int *)&v112 + 1, (int *)&v112);
LABEL_106:
            char v51 = 1;
LABEL_109:
            if (!v46 || !v113 || !sub_100071F30(a1, v113)) {
              goto LABEL_245;
            }
            if (!sub_10009CED4(*(void *)(a1 + 9256), SHIDWORD(v112), v112)) {
              goto LABEL_244;
            }
            if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 4504)) {
              sub_100026910(v108, *(_DWORD *)(a1 + 8872), *(void *)(a1 + 9256));
            }
            if (!sub_100065850(a1)
              || !sub_10002609C((uint64_t)v111, v15, v31, *(void *)(a1 + 9256), v52, v53, v54, v55))
            {
              goto LABEL_245;
            }
            int v56 = *(_DWORD *)(a1 + 9040);
            if (a7)
            {
              int v57 = HIDWORD(v113);
              uint64_t v58 = qword_100101CC0;
              int v59 = v111;
            }
            else
            {
              uint64_t v58 = qword_100101CC0;
              if (qword_100101CC0) {
                uint64_t v64 = *(void *)(qword_100101CC0 + 1544);
              }
              else {
                LODWORD(v64) = 0;
              }
              int v59 = v111;
              int v57 = HIDWORD(v113) + *(_DWORD *)(a1 + 9080) * v64;
              if (v57 <= 1) {
                int v57 = 1;
              }
              HIDWORD(v113) = v57;
            }
            *(_DWORD *)(a1 + 9208) = v57;
            if (v58) {
              uint64_t v65 = *(void *)(v58 + 1552);
            }
            else {
              LODWORD(v65) = 0;
            }
            *(_DWORD *)(a1 + 9212) = v65;
            if ((v51 & 1) == 0)
            {
              int v66 = v56 << 8;
              if (v66 >= 65533) {
                int v66 = 65533;
              }
              *(_DWORD *)(a1 + 9208) = v66;
            }
            *(_DWORD *)(a1 + 8876) = v37;
            if (a7 == 2)
            {
              if (v58) {
                uint64_t v58 = *(void *)(v58 + 968);
              }
              goto LABEL_163;
            }
            if (a7 == 1)
            {
              if (v58) {
                uint64_t v58 = *(void *)(v58 + 4568);
              }
              goto LABEL_163;
            }
            if (a7)
            {
              LOWORD(v58) = 0;
LABEL_163:
              *(_WORD *)(a1 + 9060) = v58;
              *(_WORD *)(a1 + 9062) = v58;
              if (*(__int16 *)(a1 + 9070) <= (__int16)v58 && *(__int16 *)(a1 + 9068) <= 0x4000)
              {
                *(_WORD *)(a1 + 8946) = sub_1000041E4(*(void *)(a1 + 384));
                *(_WORD *)(a1 + 9248) = sub_1000041DC(*(void *)(a1 + 384));
                unsigned int v70 = *(_DWORD *)(a1 + 544);
                if (v70 <= 0xB && ((1 << v70) & 0x828) != 0)
                {
                  if ((int)v15 <= 1)
                  {
                    int v71 = sub_10002623C(*v111);
                    unsigned int v70 = *(_DWORD *)(a1 + 544);
                  }
                  else
                  {
                    int v71 = 1;
                  }
                  *(_DWORD *)(a1 + 8904) = v71;
                }
                if (v70 <= 0xB && ((1 << v70) & 0x828) != 0 && sub_100026978((uint64_t)v111, v15))
                {
                  *(_DWORD *)(a1 + 9008) = 0;
                  goto LABEL_189;
                }
                uint64_t v72 = qword_100101CC0;
                if (qword_100101CC0) {
                  int v73 = *(_DWORD *)(qword_100101CC0 + 4552);
                }
                else {
                  int v73 = 0;
                }
                if (v73) {
                  BOOL v74 = *(_DWORD *)(a1 + 556) == 0;
                }
                else {
                  BOOL v74 = 1;
                }
                if (!v74) {
                  int v73 = 0;
                }
                *(_DWORD *)(a1 + 9008) = v73;
                if (!v73) {
                  goto LABEL_189;
                }
                *long long v43 = 0;
                *uint64_t v42 = 0;
                if (v72)
                {
                  uint64_t v75 = *(void *)(v72 + 4040);
                  if (v75)
                  {
                    uint64_t v76 = *(void *)(a1 + 9016);
                    if (v76)
                    {
                      sub_1000241E4(v76);
                      goto LABEL_189;
                    }
                    signed __int16 v77 = sub_100024128(*(void *)(a1 + 9000), v75);
                    *(void *)(a1 + 9016) = v77;
                    if (v77)
                    {
LABEL_189:
                      BOOL v78 = __na;
                      if (__na)
                      {
                        LODWORD(v79) = 1000000;
                      }
                      else
                      {
                        if (qword_100101CC0) {
                          uint64_t v79 = *(void *)(qword_100101CC0 + 1592);
                        }
                        else {
                          LODWORD(v79) = 0;
                        }
                        BOOL v78 = __na;
                      }
                      if (qword_100101CC0)
                      {
                        int v80 = *(_DWORD *)(qword_100101CC0 + 1600);
                        uint64_t v81 = *(void *)(qword_100101CC0 + 1440);
                      }
                      else
                      {
                        int v80 = 0;
                        LODWORD(v81) = 0;
                      }
                      sub_1000B4440(a1 + 9084, *(_DWORD *)(a1 + 432), v80, v79, v81, 0);
                      if (v78
                        || !qword_100101CC0
                        || *(void *)(qword_100101CC0 + 1656) >= *(void *)(qword_100101CC0 + 1592))
                      {
                        *(_DWORD *)(a1 + 9180) = 0;
                        uint64_t v85 = qword_100101CC0;
                        if (!qword_100101CC0) {
                          goto LABEL_206;
                        }
                      }
                      else
                      {
                        *(_DWORD *)(a1 + 9180) = 1;
                        *(_DWORD *)(a1 + 8880) = sub_100025DE4((uint64_t)v111, v15);
                        if (qword_100101CC0)
                        {
                          int v82 = *(_DWORD *)(qword_100101CC0 + 1600);
                          int v83 = *(_DWORD *)(qword_100101CC0 + 1656);
                          uint64_t v84 = *(void *)(qword_100101CC0 + 1440);
                        }
                        else
                        {
                          int v83 = 0;
                          int v82 = 0;
                          LODWORD(v84) = 0;
                        }
                        sub_1000B4440(a1 + 9132, *(_DWORD *)(a1 + 432), v82, v83, v84, 0);
                        uint64_t v85 = qword_100101CC0;
                        if (!qword_100101CC0) {
                          goto LABEL_206;
                        }
                      }
                      if (*(_DWORD *)(v85 + 4464)) {
                        sub_10009CC28(*(void *)(a1 + 9256));
                      }
LABEL_206:
                      uint64_t v86 = *(void *)(a1 + 9264);
                      if (v86) {
                        sub_10005230C(v86);
                      }
                      int v87 = sub_1000B51F0(*(void *)(a1 + 376));
                      *(_DWORD *)(a1 + 620) = v87;
                      if (*(_DWORD *)(a1 + 8896))
                      {
                        int v88 = v87 + *(_DWORD *)(a1 + 9360) + 2;
                        *(_DWORD *)(a1 + 616) = v88;
                        *(_DWORD *)(a1 + 612) = v88;
                      }
                      uint64_t v89 = qword_100101CC0;
                      if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 1684))
                      {
                        BOOL v90 = sub_1000B5190(*(void *)(a1 + 376));
                        *(_DWORD *)(a1 + 9280) = v90;
                        uint64_t v89 = qword_100101CC0;
                      }
                      else
                      {
                        BOOL v90 = 0;
                        *(_DWORD *)(a1 + 9280) = 0;
                        *(_WORD *)(a1 + 456) = -1;
                      }
                      if (v89) {
                        int v91 = *(_DWORD *)(v89 + 1288);
                      }
                      else {
                        int v91 = 0;
                      }
                      *(_DWORD *)(a1 + 9284) = v91;
                      switch(*(_DWORD *)(a1 + 544))
                      {
                        case 2:
                          int v93 = sub_100072040;
                          if (v89)
                          {
                            uint64_t v94 = *(void *)(v89 + 3616);
                            uint64_t v95 = sub_1000667A4;
                            BOOL v96 = v94 == 0;
                            if (!v94) {
                              uint64_t v95 = sub_1000666C8;
                            }
                            int v93 = sub_1000721C8;
                            if (v96) {
                              int v93 = sub_100072040;
                            }
                          }
                          else
                          {
                            uint64_t v95 = sub_1000666C8;
                          }
                          *(void *)(a1 + 9392) = v95;
                          *(void *)(a1 + 9400) = v93;
                          if (v90)
                          {
                            if (v89)
                            {
                              if (!*(void *)(a1 + 656))
                              {
                                uint64_t v101 = *(void *)(v89 + 3616);
                                if (v101 >= 1)
                                {
                                  uint64_t v102 = sub_1000C33A0(2 * v101);
                                  *(void *)(a1 + 656) = v102;
                                  if (!v102) {
                                    goto LABEL_244;
                                  }
                                  uint64_t v103 = qword_100101CC0 ? 2 * *(void *)(qword_100101CC0 + 3616) : 0;
                                  uint64_t v104 = sub_1000C33A0(v103);
                                  *(void *)(a1 + 664) = v104;
                                  if (!v104) {
                                    goto LABEL_244;
                                  }
                                }
                              }
                            }
                          }
                          break;
                        case 3:
                        case 0xB:
                          *(void *)(a1 + 9392) = sub_100066B5C;
                          if (v90) {
                            int v92 = sub_100072550;
                          }
                          else {
                            int v92 = sub_100072730;
                          }
                          *(void *)(a1 + 9400) = v92;
                          break;
                        case 5:
                          *(void *)(a1 + 9392) = sub_10006695C;
                          *(void *)(a1 + 9400) = sub_1000723A0;
                          *(_DWORD *)(a1 + 9284) = 0;
                          break;
                        default:
                          break;
                      }
                      if (*(_DWORD *)(a1 + 8896))
                      {
                        if (*(_DWORD *)(a1 + 8904)) {
                          int v97 = sub_1000663E8;
                        }
                        else {
                          int v97 = sub_1000665E8;
                        }
                      }
                      else
                      {
                        int v97 = sub_100066098;
                      }
                      *(void *)(a1 + 9408) = v97;
                      if (!qword_100101CC0
                        || !*(_DWORD *)(qword_100101CC0 + 4736)
                        || (unsigned int v98 = *(_DWORD *)(a1 + 544), v98 > 0xB)
                        || ((1 << v98) & 0x828) == 0
                        || !*v107
                        || *v106
                        || (uint64_t v99 = sub_1000728C4, *(__int16 *)(a1 + 456) != -1))
                      {
                        uint64_t v99 = sub_1000731E0;
                      }
                      *(void *)(a1 + 528) = v99;
                      if (!*(_DWORD *)(a1 + 9280) || *(int *)(a1 + 9360) < 1)
                      {
                        unsigned int v100 = sub_1000B529C(*(uint64_t **)(a1 + 376));
                        *(_WORD *)(a1 + 9054) = sub_1000BD9AC(*(void *)(a1 + 376), v100);
                        sub_100073868(a1);
                        return 1;
                      }
                    }
                  }
                }
              }
LABEL_244:
              *(_DWORD *)(a1 + 552) = 3;
LABEL_245:
              sub_100065C7C(a1);
              return 0;
            }
            BOOL v67 = sub_10003CE54((_DWORD **)v59, v15);
            LODWORD(v58) = qword_100101CC0;
            if (v67)
            {
              if (qword_100101CC0)
              {
                long long v68 = (int *)(qword_100101CC0 + 4920);
LABEL_159:
                int v69 = *v68;
                uint64_t v58 = *(void *)(qword_100101CC0 + 1640);
                goto LABEL_161;
              }
            }
            else if (qword_100101CC0)
            {
              long long v68 = (int *)(qword_100101CC0 + 1632);
              goto LABEL_159;
            }
            int v69 = 0;
LABEL_161:
            LODWORD(v58) = v69 + *(_DWORD *)(a1 + 9080) * v58;
            if ((int)v58 <= 1) {
              LOWORD(v58) = 1;
            }
            goto LABEL_163;
          }
LABEL_95:
          LODWORD(v47) = qword_100101CC0;
          if (qword_100101CC0)
          {
            uint64_t v48 = *(void *)(qword_100101CC0 + 1536);
            if (v48) {
              BOOL v49 = v48 < 65534;
            }
            else {
              BOOL v49 = 0;
            }
            int v46 = v49;
            HIDWORD(v113) = *(void *)(qword_100101CC0 + 1536);
            LODWORD(v113) = *(void *)(qword_100101CC0 + 1560);
            if (v44)
            {
              HIDWORD(v112) = *(void *)(qword_100101CC0 + 4488);
              uint64_t v50 = *(void *)(qword_100101CC0 + 4496);
LABEL_105:
              LODWORD(v112) = v50;
              goto LABEL_106;
            }
            HIDWORD(v112) = *(void *)(qword_100101CC0 + 4472);
            uint64_t v47 = *(void *)(qword_100101CC0 + 4480);
          }
          else
          {
            int v46 = 0;
            LODWORD(v50) = 0;
            uint64_t v113 = 0;
            HIDWORD(v112) = 0;
            if (v44) {
              goto LABEL_105;
            }
          }
          char v51 = 0;
          LODWORD(v112) = v47;
          goto LABEL_109;
        }
      }
      else
      {
        int v41 = a10;
        if (!v37 || (int v41 = a10, v45 != 5))
        {
LABEL_84:
          uint64_t v42 = (_DWORD *)(a1 + 8888);
          *(_DWORD *)(a1 + 8888) = v41;
          long long v43 = (_DWORD *)(a1 + 8884);
          *(_DWORD *)(a1 + 8884) = a10;
          if (v37)
          {
            char v44 = 0;
            goto LABEL_95;
          }
          goto LABEL_89;
        }
      }
      char v44 = 0;
      uint64_t v42 = (_DWORD *)(a1 + 8888);
      *(_DWORD *)(a1 + 8888) = 1;
      long long v43 = (_DWORD *)(a1 + 8884);
      *(_DWORD *)(a1 + 8884) = a10;
      goto LABEL_95;
    }
LABEL_57:
    uint64_t v29 = 0;
    uint64_t v31 = 0;
    LOWORD(v32) = 0;
    BOOL __na = a7 == 1;
    *(_DWORD *)(a1 + 544) = a6;
    unsigned int v107 = (_DWORD *)(a1 + 9272);
    *(_DWORD *)(a1 + 9272) = a8;
    *(_DWORD *)(a1 + 9276) = v22;
    char v30 = 1;
    *(_DWORD *)(a1 + 8892) = 1;
    unsigned int v106 = (_DWORD *)(a1 + 9276);
    goto LABEL_58;
  }
  uint64_t v28 = v25;
  if (sub_100025F00(v25, v15))
  {
    int v25 = v28;
    goto LABEL_50;
  }
  uint64_t result = sub_1000C33A0(8 * v15);
  *(void *)(a1 + 9288) = result;
  if (result)
  {
    memcpy((void *)result, v28, __n);
    uint64_t v60 = sub_1000C33A0(8 * v15);
    *(void *)(a1 + 9296) = v60;
    if (v60)
    {
      if (qword_100101CC0) {
        uint64_t v61 = (unsigned __int8 *)(qword_100101CC0 + 4220);
      }
      else {
        uint64_t v61 = 0;
      }
      sub_100034AE4(0, v61, v15, v28, v108);
      uint64_t v62 = 0;
      *(_DWORD *)(a1 + 9304) = v15;
      do
      {
        *(void *)(*(void *)(a1 + 9296) + v62) = 0;
        uint64_t v63 = *(void *)(a1 + 680 + v62);
        if (*(void *)(*(void *)(a1 + 9288) + v62) != v63) {
          *(void *)(*(void *)(a1 + 9296) + v62) = v63;
        }
        v62 += 8;
      }
      while (8 * v15 != v62);
      int v25 = (uint64_t *)(a1 + 680);
      uint64_t v29 = qword_100101CC0;
      if (qword_100101CC0) {
        goto LABEL_51;
      }
      goto LABEL_57;
    }
LABEL_129:
    sub_1000C321C(*(void *)(a1 + 9288));
    uint64_t result = 0;
    *(void *)(a1 + 9288) = 0;
  }
  return result;
}

void sub_10006FC1C(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 9040))
  {
    if (*(_DWORD *)(a1 + 9008))
    {
      uint64_t v2 = *(void *)(a1 + 9016);
      if (v2) {
        sub_1000241E4(v2);
      }
    }
    sub_1000B4488(a1 + 9084);
    if (*(_DWORD *)(a1 + 9180)) {
      sub_1000B4488(a1 + 9132);
    }
    unsigned int v7 = qword_100101CC0;
    if (qword_100101CC0) {
      unsigned int v7 = *(_DWORD *)(qword_100101CC0 + 1072);
    }
    if (*(_DWORD *)(a1 + 548) == 1) {
      uint64_t v8 = 0;
    }
    else {
      uint64_t v8 = v7;
    }
    sub_10002609C(a1 + 680, *(unsigned int *)(a1 + 8872), v8, *(void *)(a1 + 9256), v3, v4, v5, v6);
    sub_100073868(a1);
  }
}

uint64_t sub_10006FCC8(uint64_t result, const void *a2, int *a3, int32x4_t a4, double a5, int32x4_t a6, int32x4_t a7, int8x16_t a8, int8x16_t a9)
{
  uint64_t v11 = result;
  uint64_t v12 = (__int16 *)(result + 8936);
  int v85 = 0;
  uint64_t v13 = qword_100101CC0;
  if (qword_100101CC0)
  {
    if (*(_DWORD *)(qword_100101CC0 + 1648) && !*(_DWORD *)(result + 632))
    {
      BOOL v15 = 1;
LABEL_144:
      *(_DWORD *)(v11 + 632) = v15;
      return result;
    }
    if (!*(_DWORD *)(qword_100101CC0 + 1680) || *(__int16 *)(result + 9200) < 1)
    {
LABEL_8:
      int v85 = *a3;
      if (*(_DWORD *)(v13 + 1464))
      {
        if (*(_DWORD *)(v11 + 628))
        {
          uint64_t result = (uint64_t)sub_100065ED0(v11, a2, a3);
          if (v12[61] != 0x4000) {
            goto LABEL_20;
          }
          goto LABEL_18;
        }
        uint64_t result = sub_100065EC0(v11, &v85);
        a2 = (const void *)result;
      }
      if (v12[61] != 0x4000) {
        goto LABEL_20;
      }
      goto LABEL_18;
    }
    uint64_t v14 = sub_100065EC0(result, &v85);
    uint64_t result = sub_100015518(*(void *)(v11 + 384), (uint64_t)a2, v14);
    uint64_t v13 = qword_100101CC0;
    if (qword_100101CC0)
    {
      *(_DWORD *)(v11 + 628) = *(void *)(qword_100101CC0 + 1472) < (int)result;
      goto LABEL_8;
    }
    *(_DWORD *)(v11 + 628) = (int)result > 0;
  }
  int v85 = *a3;
  if (v12[61] != 0x4000) {
    goto LABEL_20;
  }
LABEL_18:
  __int16 v16 = v12[132];
  if (v16)
  {
    *(_DWORD *)(v11 + 9076) = 0x40000000;
LABEL_30:
    v12[132] = v16 + 1;
    goto LABEL_139;
  }
LABEL_20:
  if (a2) {
    sub_100006AA4(*(void *)(v11 + 384), (uint64_t)a2, (__int16 *)&v85, *(void *)(v11 + 408), v12[132], *(_DWORD *)(v11 + 628), a4, a5, a6, a7, a8, a9);
  }
  sub_10009E740(*(void *)(v11 + 9000));
  if (v12[66] < 0 || v12[67] < 0) {
    sub_100065F24(v11);
  }
  int v17 = v12[56];
  v12[61] = v17;
  *(_DWORD *)(v11 + 9076) += v17;
  *((_DWORD *)v12 + 28) = 1073758208;
  v12[58] = -1;
  if (qword_100101CC0
    && *(_DWORD *)(qword_100101CC0 + 4544)
    && !sub_100026168((uint64_t *)(v11 + 680), *(_DWORD *)(v11 + 8872), 0, 0, v12[132]))
  {
    *(_DWORD *)(v11 + 552) = 3;
    sub_10005EEF4(*(int **)(v11 + 9240));
    if (v12[61] == 0x4000) {
      goto LABEL_29;
    }
  }
  else
  {
    sub_10005EEF4(*(int **)(v11 + 9240));
    if (v12[61] == 0x4000)
    {
LABEL_29:
      uint64_t result = sub_100006C90(*(void *)(v11 + 384), v12[132], (_DWORD *)(v11 + 436));
      *(_DWORD *)(v11 + 9076) = 0x40000000;
      *(_DWORD *)(v11 + 552) = 5;
      __int16 v16 = v12[132];
      goto LABEL_30;
    }
  }
  (*(void (**)(uint64_t))(v11 + 520))(v11);
  if (*(_DWORD *)(v11 + 552) == 3)
  {
    uint64_t result = sub_100006C90(*(void *)(v11 + 384), v12[132], (_DWORD *)(v11 + 436));
    goto LABEL_139;
  }
  BOOL v18 = sub_10003CE54((_DWORD **)(v11 + 680), *(_DWORD *)(v11 + 8872));
  int v19 = *(_DWORD *)(v11 + 9044);
  int v20 = *(_DWORD *)(v11 + 9208);
  if (v18)
  {
    if (v19 > v20)
    {
      uint64_t v21 = *(int **)(v11 + 9232);
      int v22 = (char *)*((void *)v21 + 1);
      uint64_t v23 = *v21;
      bzero(v22, 2 * v23);
      if ((int)v23 > *v12) {
        ++*(_WORD *)&v22[2 * *v12];
      }
      int v24 = *(_DWORD *)(v11 + 9044);
      if (v24 >= 2)
      {
        int v25 = 0;
        do
        {
          int v26 = *(__int16 *)(*(void *)(*(void *)(v11 + 9024) + 8 * (v25 >> 8))
                           + 48 * v25
                           + 36);
          if ((int)v23 > v26)
          {
            uint64_t v27 = 2 * ((__int16)v26 & ~((__int16)v26 >> 31));
            ++*(_WORD *)&v22[v27];
            int v24 = *(_DWORD *)(v11 + 9044);
          }
          ++v25;
        }
        while (v25 < v24 - 1);
      }
    }
  }
  else if (v19 > v20)
  {
    uint64_t v28 = *(int **)(v11 + 9232);
    uint64_t v29 = (void *)*((void *)v28 + 1);
    uint64_t v30 = *v28;
    bzero(v29, 2 * v30);
    if ((int)v30 > *v12) {
      ++*((_WORD *)v29 + *v12);
    }
    int v31 = *(_DWORD *)(v11 + 9044);
    if (v31 >= 2)
    {
      int v32 = 0;
      do
      {
        int v33 = *(__int16 *)(*(void *)(*(void *)(v11 + 9024) + 8 * (v32 >> 8))
                         + 48 * v32
                         + 36);
        if ((int)v30 > v33)
        {
          ++*((_WORD *)v29 + v33);
          int v31 = *(_DWORD *)(v11 + 9044);
        }
        ++v32;
      }
      while (v32 < v31 - 1);
    }
  }
  (*(void (**)(uint64_t))(v11 + 528))(v11);
  if (v12[28] == -1 && *v12 == 0x4000) {
    v12[28] = v12[132];
  }
  if (*(unsigned char *)(v11 + 424)) {
    sub_10003A240(v11, v34, v35, v36, v37, v38, v39, v40);
  }
  sub_100006C90(*(void *)(v11 + 384), v12[132], (_DWORD *)(v11 + 436));
  if (qword_100101CC0
    && *(_DWORD *)(qword_100101CC0 + 1492)
    && sub_100025D50((unsigned int *)(v11 + 9084)) == 3)
  {
    int v41 = 0;
    int v42 = *(_DWORD *)(v11 + 9040) << 8;
    unsigned int v43 = v42 - *(_DWORD *)(v11 + 9044);
    uint64_t v44 = *(void *)(v11 + 9024);
    uint64_t v45 = *(void *)(v44 + 8 * (v43 >> 8)) + 48 * -*(unsigned char *)(v11 + 9044);
    __int16 v83 = *v12;
    __int16 v84 = 0x4000;
    unsigned __int16 v46 = -1;
    unsigned int v47 = *(unsigned __int16 *)(v45 + 32);
    if (v47 == 0xFFFF) {
      goto LABEL_67;
    }
    while (1)
    {
      if (v47 != v46)
      {
LABEL_61:
        int v41 = sub_10009DA20(*(void *)(v11 + 9256), v47);
        unsigned __int16 v46 = v47;
      }
LABEL_62:
      if (v41 == *(unsigned __int8 *)(v45 + 38))
      {
        if (*(_DWORD *)(v11 + 544) == 2 || (*(void *)v45 & 0x8000000000000000) != 0)
        {
          int v49 = *(__int16 *)(v45 + 24);
          if (v49 >= v84) {
            LOWORD(v49) = v84;
          }
          __int16 v84 = v49;
        }
      }
      else
      {
        int v50 = *(__int16 *)(v45 + 36);
        if (v50 >= v83) {
          LOWORD(v50) = v83;
        }
        __int16 v83 = v50;
      }
      if (++v43 == v42) {
        break;
      }
      uint64_t v44 = *(void *)(v11 + 9024);
      uint64_t v45 = *(void *)(v44 + 8 * (v43 >> 8)) + 48 * v43;
      unsigned int v47 = *(unsigned __int16 *)(v45 + 32);
      if (v47 == 0xFFFF)
      {
LABEL_67:
        while (v42 - 1 != v43)
        {
          uint64_t v48 = *(void *)(v44 + 8 * (++v43 >> 8));
          unsigned int v47 = *(unsigned __int16 *)(v48 + 48 * v43 + 32);
          if (v47 != 0xFFFF)
          {
            uint64_t v45 = v48 + 48 * v43;
            if (v47 != v46) {
              goto LABEL_61;
            }
            goto LABEL_62;
          }
        }
        break;
      }
    }
    BOOL v51 = v84 <= v83;
  }
  else
  {
    BOOL v51 = v12[124] == v12[5];
  }
  uint64_t result = sub_1000B44AC((unsigned int *)(v11 + 9084), v51);
  if (*(_DWORD *)(v11 + 9180)) {
    uint64_t result = sub_1000B44AC((unsigned int *)(v11 + 9132), v51);
  }
  if (*(_DWORD *)(v11 + 544) == 11)
  {
    uint64_t v52 = qword_100101CC0;
    if (qword_100101CC0) {
      uint64_t v52 = *(void *)(qword_100101CC0 + 4912);
    }
    if (v52 < (__int16)(*v12 - v12[56]))
    {
      if (*(_DWORD *)(v11 + 552) != 6) {
        *(_DWORD *)(v11 + 552) = 6;
      }
LABEL_87:
      uint64_t result = sub_1000B4630((_DWORD *)(v11 + 9084));
      if (result)
      {
LABEL_88:
        int v59 = 0;
        BOOL v60 = 0;
LABEL_102:
        if (qword_100101CC0)
        {
          int v59 = *(_DWORD *)(qword_100101CC0 + 5364);
          if (v59)
          {
            uint64_t result = sub_100039A9C(v11, *(unsigned int *)(qword_100101CC0 + 5376), v53, v54, v55, v56, v57, v58);
            int v59 = result != 0;
          }
        }
LABEL_105:
        if ((v60 | v59) == 1)
        {
          if (*(_DWORD *)(v11 + 552) == 6)
          {
LABEL_110:
            if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 816) && *v12 == 0x4000)
            {
              unsigned int v67 = (*(_DWORD *)(v11 + 9040) << 8) - *(_DWORD *)(v11 + 9044);
              uint64_t v68 = *(void *)(v11 + 9024);
              uint64_t v69 = *(void *)(v68 + 8 * (v67 >> 8));
              uint64_t v70 = -*(unsigned char *)(v11 + 9044);
              uint64_t v71 = v69 + 48 * v70;
              if (*(_DWORD *)(v11 + 620) >= (int)*(unsigned __int16 *)(v71 + 32))
              {
                __int16 v73 = 0x4000;
                __int16 v72 = 0x4000;
                do
                {
                  uint64_t result = sub_10002BD4C(*(void *)(v11 + 8 * ((*(void *)v71 >> 53) & 0x3FFLL) + 680), *(void *)v71);
                  int v74 = *(__int16 *)(v69 + 48 * v70 + 36);
                  __int16 v75 = v72;
                  if (v74 < v72) {
                    __int16 v75 = *(_WORD *)(v69 + 48 * v70 + 36);
                  }
                  __int16 v76 = v73;
                  if (v74 < v73) {
                    __int16 v76 = *(_WORD *)(v69 + 48 * v70 + 36);
                  }
                  if (result) {
                    __int16 v72 = v75;
                  }
                  ++v67;
                  uint64_t v68 = *(void *)(v11 + 9024);
                  uint64_t v69 = *(void *)(v68 + 8 * (v67 >> 8));
                  if (!result) {
                    __int16 v73 = v76;
                  }
                  uint64_t v70 = v67;
                  uint64_t v71 = v69 + 48 * v67;
                }
                while (*(_DWORD *)(v11 + 620) >= (int)*(unsigned __int16 *)(v71 + 32));
              }
              else
              {
                __int16 v72 = 0x4000;
                __int16 v73 = 0x4000;
              }
              if (*(__int16 *)(v71 + 32) != -1)
              {
                do
                {
                  uint64_t v77 = *(void *)(v68 + 8 * (v67 >> 8)) + 48 * v67;
                  if (*(__int16 *)(v77 + 36) < v73) {
                    __int16 v73 = *(_WORD *)(v77 + 36);
                  }
                  ++v67;
                }
                while (*(__int16 *)(v77 + 32) != -1);
              }
              uint64_t v78 = qword_100101CC0;
              if (qword_100101CC0) {
                uint64_t v78 = *(void *)(qword_100101CC0 + 1504);
              }
              if (v78 < (__int16)(v73 - v72)) {
                *(_DWORD *)(v11 + 552) = 2;
              }
            }
            goto LABEL_134;
          }
          int v66 = 1;
        }
        else
        {
          int v66 = 2;
        }
        *(_DWORD *)(v11 + 552) = v66;
        goto LABEL_110;
      }
      uint64_t v86 = 0;
      if (*(_DWORD *)(v11 + 9180))
      {
        if (sub_1000B4630((_DWORD *)(v11 + 9132)))
        {
          uint64_t result = sub_10009F2D4(*(void *)(v11 + 9000), &v86, (_DWORD *)&v86 + 1);
          if (*(_DWORD *)(v11 + 9076) + v12[56] == HIDWORD(v86) && v86 != -1)
          {
            if (!*(_DWORD *)(v11 + 8880)) {
              goto LABEL_88;
            }
            if (*v12 == 0x4000)
            {
              int v61 = *(_DWORD *)(v11 + 9040) << 8;
              int v62 = *(_DWORD *)(v11 + 9044);
              if (v61 - v62 >= v61 - 1)
              {
LABEL_100:
                uint64_t result = sub_1000747AC(v11);
                if (result) {
                  goto LABEL_88;
                }
              }
              else
              {
                int v63 = -v62;
                while (1)
                {
                  unint64_t v64 = *(void *)(*(void *)(*(void *)(v11 + 9024) + 8 * ((v61 + v63) >> 8))
                                  + 48 * (v61 + v63));
                  uint64_t v65 = *(unsigned int **)(v11 + 8 * ((v64 >> 53) & 0x3FF) + 680);
                  if (sub_100025D50(v65) != 3 || sub_10002A7AC((uint64_t)v65, (v64 >> 35) & 0x3FFFF)) {
                    break;
                  }
                  if (++v63 == -1) {
                    goto LABEL_100;
                  }
                }
              }
            }
          }
        }
      }
      uint64_t result = sub_100039F98(v11);
      int v59 = 0;
      BOOL v60 = result == 0;
      if (!result) {
        goto LABEL_105;
      }
      goto LABEL_102;
    }
  }
  if (*(_DWORD *)(v11 + 552) != 3) {
    goto LABEL_87;
  }
LABEL_134:
  ++v12[132];
  int v79 = *(_DWORD *)(v11 + 9380) + 1;
  *(_DWORD *)(v11 + 9380) = v79;
  if (v79 == *(_DWORD *)(v11 + 9372))
  {
    *(_DWORD *)(v11 + 9380) = 0;
    int v80 = *(_DWORD *)(v11 + 9376);
    if (v80 + 1 == *(_DWORD *)(v11 + 9368)) {
      int v81 = 0;
    }
    else {
      int v81 = v80 + 1;
    }
    *(_DWORD *)(v11 + 9376) = v81;
  }
LABEL_139:
  uint64_t v82 = qword_100101CC0;
  if (qword_100101CC0)
  {
    if (*(_DWORD *)(qword_100101CC0 + 1464)) {
      *(_DWORD *)(v11 + 628) = *(_DWORD *)(v11 + 628) == 0;
    }
    if (*(_DWORD *)(v82 + 1648))
    {
      BOOL v15 = *(_DWORD *)(v11 + 632) == 0;
      goto LABEL_144;
    }
  }
  return result;
}

uint64_t sub_1000705F8(uint64_t a1, int a2)
{
  uint64_t v2 = *(unsigned int *)(a1 + 552);
  if (v2 != 1) {
    return v2;
  }
  BOOL v5 = 1;
  if (sub_1000B46DC((unsigned int *)(a1 + 9084), a2, 0) == 2)
  {
    BOOL v6 = sub_10009F2C4(*(void *)(a1 + 9000));
    if (v6) {
      uint64_t v2 = 2;
    }
    else {
      uint64_t v2 = 1;
    }
    BOOL v5 = !v6;
    if (!*(_DWORD *)(a1 + 9180)) {
      return v2;
    }
  }
  else
  {
    uint64_t v2 = 1;
    if (!*(_DWORD *)(a1 + 9180)) {
      return v2;
    }
  }
  if (sub_1000B46DC((unsigned int *)(a1 + 9132), a2, 0) == 2 && v5)
  {
    uint64_t v14 = 0;
    sub_10009F2D4(*(void *)(a1 + 9000), &v14, (_DWORD *)&v14 + 1);
    uint64_t v2 = 1;
    if (*(_DWORD *)(a1 + 9076) + *(__int16 *)(a1 + 9048) == HIDWORD(v14) && v14 != -1)
    {
      if (*(_DWORD *)(a1 + 8880))
      {
        if (*(_WORD *)(a1 + 8936) == 0x4000)
        {
          int v8 = *(_DWORD *)(a1 + 9040) << 8;
          int v9 = *(_DWORD *)(a1 + 9044);
          if (v8 - v9 >= v8 - 1)
          {
LABEL_22:
            if (sub_1000747AC(a1)) {
              return 2;
            }
            else {
              return 1;
            }
          }
          else
          {
            int v10 = -v9;
            while (1)
            {
              unint64_t v11 = *(void *)(*(void *)(*(void *)(a1 + 9024) + 8 * ((v8 + v10) >> 8))
                              + 48 * (v8 + v10));
              uint64_t v12 = *(unsigned int **)(a1 + 8 * ((v11 >> 53) & 0x3FF) + 680);
              if (sub_100025D50(v12) != 3 || sub_10002A7AC((uint64_t)v12, (v11 >> 35) & 0x3FFFF)) {
                return 1;
              }
              if (++v10 == -1) {
                goto LABEL_22;
              }
            }
          }
        }
      }
      else
      {
        return 2;
      }
    }
  }
  return v2;
}

uint64_t sub_1000707A4(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4, int a5, _DWORD *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v22 = sub_100039EB4(a1);
  if (v22 == 4 || v22 == 3 || v22 == 1) {
    goto LABEL_9;
  }
  unsigned int v23 = *(_DWORD *)(a1 + 544);
  BOOL v24 = v23 > 0xB;
  int v25 = (1 << v23) & 0x828;
  if (v24 || v25 == 0)
  {
    int v27 = *(_DWORD *)(a1 + 8872);
  }
  else
  {
    int v27 = *(_DWORD *)(a1 + 8872);
    if (!v27)
    {
LABEL_9:
      uint64_t result = 0;
LABEL_10:
      *a6 = -1;
      *a3 = 0x40000000;
      return result;
    }
  }
  uint64_t v33 = sub_10002BD6C(a1 + 680, v27);
  if (*(_DWORD *)(a1 + 9320) < (int)a2)
  {
    sub_1000C321C(*(void *)(a1 + 9312));
    uint64_t result = sub_1000C33A0(1096 * (int)a2);
    *(void *)(a1 + 9312) = result;
    if (!result) {
      goto LABEL_10;
    }
    *(_DWORD *)(a1 + 9320) = a2;
  }
  uint64_t v68 = (_DWORD **)(a1 + 680);
  BOOL v69 = *(int *)(a1 + 8872) >= 1 && sub_100025D50(*(unsigned int **)(a1 + 680)) == 3;
  *(void *)uint64_t v70 = 0;
  unint64_t v34 = *(void *)(a1 + 9312);
  if (*(_DWORD *)(a1 + 9008))
  {
    uint64_t v66 = a8;
    if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 4736))
    {
      uint64_t v65 = a4;
      if (*(_DWORD *)(a1 + 556)) {
        v70[1] = sub_100074894(a1, v34, a2, 0, v29, v30, v31, v32);
      }
      else {
        v70[1] = sub_100074CD0(a1, (char *)v34, a2, 0);
      }
LABEL_55:
      signed int v52 = *(_DWORD *)(a1 + 8872);
      if (v52 >= 1 && (v53 = sub_100025D50(*(unsigned int **)(a1 + 680)), signed int v52 = *(_DWORD *)(a1 + 8872), v53 == 3))
      {
        sub_100024580(*(void *)(a1 + 376), v33, *(void *)(a1 + 9016), (char *)v34, &v70[1], a2, (uint64_t)v68, v52, a14);
        if (qword_100101CC0 && *(void *)(qword_100101CC0 + 1272) == 0x7FFFFFFFLL) {
          int v54 = *(_DWORD *)(a1 + 9284);
        }
        else {
          int v54 = 0;
        }
        uint64_t v55 = v65;
        uint64_t v57 = a10;
        uint64_t v56 = a9;
        sub_10003C260(v34, v70[1], v68, *(unsigned int *)(a1 + 8872), v54);
      }
      else
      {
        sub_100025048(*(void **)(a1 + 376), v33, *(int **)(a1 + 9016), (char *)v34, &v70[1], a2, (uint64_t)v68, v52, a14);
        uint64_t v55 = v65;
        uint64_t v57 = a10;
        uint64_t v56 = a9;
      }
      bzero(a7, a5);
      if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 4592) && *(_DWORD *)(qword_100101CC0 + 4596))
      {
        if (*(void *)(qword_100101CC0 + 4104) < v70[1]) {
          v70[1] = *(void *)(qword_100101CC0 + 4104);
        }
        sub_10003CBC0(a1, 0, (char *)v34, &v70[1]);
      }
      if (v69) {
        sub_10006517C(a1, v34, v70[1]);
      }
      sub_10006544C(a1, v34, v70[1]);
      sub_10003BAB8(v34, &v70[1], a2, (uint64_t)a3, v55, a5, (uint64_t)a6, (uint64_t)a7, v66, v56, v57, a11, a12, *(void *)(a1 + 376));
      uint64_t result = v70[1];
      *(_DWORD *)(a1 + 9324) = v70[1];
      return result;
    }
    uint64_t result = sub_10009F2E8(*(void *)(a1 + 9000), v34 + 28, v34 + 384, v34 + 856, v34 + 323, (__int16 *)(v34 + 146), 59, (_DWORD *)(v34 + 8), (_DWORD *)v34, (_DWORD *)(v34 + 24), 0, 0, v70);
    *(_WORD *)(v34 + 4) = 0;
    *(_OWORD *)(v34 + 264) = 0u;
    *(_OWORD *)(v34 + 280) = 0u;
    *(_OWORD *)(v34 + 296) = 0u;
    *(_OWORD *)(v34 + 307) = 0u;
    if (*(int *)(a1 + 8872) >= 1) {
      *(void *)(v34 + 16) = *(void *)(a1 + 8 * v70[0] + 680);
    }
    if (result)
    {
      uint64_t v40 = *(int *)(v34 + 8);
      if (!v40) {
        return 0;
      }
      uint64_t v65 = a4;
      if (v33)
      {
        if ((int)v40 >= 1)
        {
          uint64_t v41 = 0;
          do
          {
            *(_DWORD *)(v34 + 4 * v41 + 620) = sub_100031A50(v33, *(unsigned int *)(v34 + 4 * v41 + 384), *(unsigned int *)(v34 + 4 * v41 + 856), v35, v36, v37, v38, v39);
            ++v41;
          }
          while (v41 < *(int *)(v34 + 8));
        }
      }
      else
      {
        bzero((void *)(v34 + 620), 4 * v40);
      }
      v70[1] = 1;
      goto LABEL_55;
    }
  }
  else
  {
    if (a7) {
      bzero(a7, a5);
    }
    uint64_t v42 = *(unsigned int *)(a1 + 8884);
    if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 4152))
    {
      if (*(_DWORD *)(a1 + 556)) {
        int v43 = sub_100074894(a1, v34, a2, v42, v29, v30, v31, v32);
      }
      else {
        int v43 = sub_100074CD0(a1, (char *)v34, a2, v42);
      }
      v70[1] = v43;
      if (v69)
      {
        sub_100024474(*(void *)(a1 + 9000), v33, (uint64_t)v68, v34, v43);
        sub_100024E48(*(void *)(a1 + 376), v34, &v70[1]);
        sub_10003C260(v34, v70[1], v68, *(unsigned int *)(a1 + 8872), *(_DWORD *)(a1 + 9284));
        sub_10006517C(a1, v34, v70[1]);
      }
      if (qword_100101CC0
        && *(_DWORD *)(qword_100101CC0 + 4592)
        && *(_DWORD *)(qword_100101CC0 + 4596)
        && !*(_DWORD *)(qword_100101CC0 + 5196))
      {
        if (*(void *)(qword_100101CC0 + 4104) < v70[1]) {
          v70[1] = *(void *)(qword_100101CC0 + 4104);
        }
        sub_10003CBC0(a1, 0, (char *)v34, &v70[1]);
      }
      sub_10006544C(a1, v34, v70[1]);
      sub_10003BAB8(v34, &v70[1], a2, (uint64_t)a3, a4, a5, (uint64_t)a6, (uint64_t)a7, a8, a9, a10, a11, a12, *(void *)(a1 + 376));
      uint64_t result = v70[1];
      *(_DWORD *)(a1 + 9324) = v70[1];
      if (!result)
      {
        *(_DWORD *)(a1 + 552) = 3;
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v67 = a8;
      int v44 = sub_10009F2E8(*(void *)(a1 + 9000), v34 + 28, v34 + 384, v34 + 856, v34 + 323, (__int16 *)(v34 + 146), 59, (_DWORD *)(v34 + 8), (_DWORD *)v34, (_DWORD *)(v34 + 24), v42, v34 + 264, v70);
      if (*(int *)(a1 + 8872) >= 1) {
        *(void *)(v34 + 16) = *(void *)(a1 + 8 * v70[0] + 680);
      }
      *(_WORD *)(v34 + 4) = 0;
      if (v69)
      {
        int v64 = v44;
        sub_10003C260(v34, 1, v68, *(unsigned int *)(a1 + 8872), *(_DWORD *)(a1 + 9284));
        int v44 = v64;
      }
      uint64_t v50 = *(int *)(v34 + 8);
      if (!v50 || !v44)
      {
        uint64_t result = 0;
        *(_DWORD *)(a1 + 552) = 3;
        *a6 = -1;
        return result;
      }
      if (v33)
      {
        if ((int)v50 >= 1)
        {
          uint64_t v51 = 0;
          do
          {
            *(_DWORD *)(v34 + 4 * v51 + 620) = sub_100031A50(v33, *(unsigned int *)(v34 + 4 * v51 + 384), *(unsigned int *)(v34 + 4 * v51 + 856), v45, v46, v47, v48, v49);
            ++v51;
          }
          while (v51 < *(int *)(v34 + 8));
        }
      }
      else
      {
        bzero((void *)(v34 + 620), 4 * v50);
      }
      int v58 = 1;
      v70[1] = 1;
      if (qword_100101CC0)
      {
        uint64_t v59 = a4;
        uint64_t v61 = a10;
        uint64_t v60 = a9;
        if (*(_DWORD *)(qword_100101CC0 + 4592) && *(_DWORD *)(qword_100101CC0 + 4596))
        {
          if (*(uint64_t *)(qword_100101CC0 + 4104) <= 0) {
            v70[1] = *(void *)(qword_100101CC0 + 4104);
          }
          sub_10003CBC0(a1, 0, (char *)v34, &v70[1]);
          int v58 = v70[1];
        }
      }
      else
      {
        uint64_t v59 = a4;
        uint64_t v61 = a10;
        uint64_t v60 = a9;
      }
      if (v69)
      {
        sub_10006517C(a1, v34, v58);
        int v58 = v70[1];
      }
      sub_10006544C(a1, v34, v58);
      sub_10003BAB8(v34, &v70[1], a2, (uint64_t)a3, v59, a5, (uint64_t)a6, (uint64_t)a7, v67, v60, v61, a11, a12, *(void *)(a1 + 376));
      uint64_t result = v70[1];
      *(_DWORD *)(a1 + 9324) = v70[1];
    }
    if (*(_DWORD *)(a1 + 9280) && (int)result >= 1)
    {
      int v62 = 0;
      uint64_t v63 = v34 + 28;
      do
      {
        *(_WORD *)(v63 - 24) += sub_10003C5C0(*(void *)(a1 + 376), 1, *(unsigned int *)(a1 + 9204), a1 + 9202, *(unsigned int *)(a1 + 460), a1 + 456, v63, *(unsigned int *)(v63 - 20));
        ++v62;
        uint64_t result = v70[1];
        v63 += 1096;
      }
      while (v62 < v70[1]);
    }
  }
  return result;
}

uint64_t sub_100070F60(uint64_t a1)
{
  if (!sub_10009F2C4(*(void *)(a1 + 9000))) {
    *(_DWORD *)(a1 + 552) = 3;
  }
  unsigned int v8 = *(_DWORD *)(a1 + 544);
  if (v8 <= 0xB && ((1 << v8) & 0x828) != 0)
  {
    int v10 = *(_DWORD *)(a1 + 552);
    if (v10 != 3) {
      *(_DWORD *)(a1 + 552) = 0;
    }
    if (v8 <= 0xB && ((1 << v8) & 0x828) != 0 && v10 != 3)
    {
      int v12 = 0;
      uint64_t v40 = 0;
      int v39 = 0;
      __int16 v38 = 0;
      unsigned int v37 = 0;
      int v13 = *(_DWORD *)(a1 + 9040) << 8;
      unsigned int v14 = v13 - *(_DWORD *)(a1 + 9044);
      uint64_t v15 = *(void *)(a1 + 9024);
      uint64_t v16 = *(void *)(v15 + 8 * (v14 >> 8)) + 48 * -*(unsigned char *)(a1 + 9044);
      unsigned __int16 v17 = -1;
      while (1)
      {
        int v18 = *(unsigned __int16 *)(v16 + 32);
        if (v18 == 0xFFFF)
        {
          if (++v14 == v13) {
            goto LABEL_12;
          }
          goto LABEL_17;
        }
        int v19 = *(_DWORD *)(a1 + 620);
        if (v19 >= v18) {
          break;
        }
        int v20 = ~v19 + v18;
        uint64_t v21 = sub_100064238(*(void *)(*(void *)(a1 + 9328) + 8 * v20), 0);
        uint64_t v22 = *(void *)v16 & 0x3FFFFFFLL;
        if ((*(__int16 *)(v21 + 4 * v22) & 0x80000000) == 0) {
          goto LABEL_21;
        }
        int v36 = v12;
        uint64_t v35 = (*(void *)v16 >> 53) & 0x3FFLL;
        uint64_t v23 = *(void *)(a1 + 8 * v35 + 680);
        uint64_t v24 = 4 * v20;
        unsigned int v25 = *(_DWORD *)(*(void *)(a1 + 9344) + v24);
        unsigned int v26 = *(unsigned __int16 *)(v21 + 4 * v22 + 2);
        sub_1000266D8(v23);
        uint64_t v27 = *(unsigned int *)(*(void *)(a1 + 9344) + v24);
        if (!qword_100101CC0 || !*(_DWORD *)(qword_100101CC0 + 4544))
        {
          uint64_t v2 = (v27 << 35) + (v35 << 53) + ((uint64_t)SHIDWORD(v40) << 10);
          goto LABEL_42;
        }
        __int16 v38 = *(_WORD *)(v16 + 24);
        unsigned int v28 = *(_DWORD *)(v16 + 16);
        unsigned int v37 = v28;
        uint64_t v34 = SHIDWORD(v40);
        if (v28 == -1)
        {
          LODWORD(v32) = -1;
          int v29 = 65534;
        }
        else
        {
          int v29 = sub_10009F29C(*(void *)(a1 + 9000), v28);
          if (v37 == -1)
          {
            LODWORD(v32) = -1;
          }
          else
          {
            uint64_t v33 = v27;
            int v30 = v29;
            unint64_t v31 = sub_10009F228(*(void *)(a1 + 9000), v37);
            int v29 = v30;
            uint64_t v27 = v33;
            uint64_t v32 = (v31 >> 35) & 0x3FFFF;
          }
        }
        sub_100029B64(v23, v32, v25, v29, v26, *(__int16 *)(v16 + 28), (int *)&v37, &v38, *(_DWORD *)(a1 + 9284));
        if (v38 != 0x4000)
        {
          uint64_t v2 = (v27 << 35) + (v35 << 53) + (v34 << 10);
          *(_WORD *)(v16 + 24) = v38;
          *(_DWORD *)(v16 + 16) = v37;
LABEL_42:
          int v12 = v36;
          unsigned __int16 v17 = v26;
          if (v39)
          {
LABEL_43:
            if (*(_WORD *)(v16 + 24) != 0x4000) {
              *(_WORD *)(v16 + 24) += sub_100025ED4(a1 + 680, *(unsigned int *)(a1 + 8872), v2);
            }
          }
          goto LABEL_21;
        }
        ++v14;
        int v12 = v36;
        if (v14 == v13) {
          goto LABEL_12;
        }
        unsigned __int16 v17 = v26;
        uint64_t v15 = *(void *)(a1 + 9024);
LABEL_17:
        uint64_t v16 = *(void *)(v15 + 8 * (v14 >> 8)) + 48 * v14;
      }
      if (v18 != v17)
      {
        int v12 = sub_10009DA20(*(void *)(a1 + 9256), *(unsigned __int16 *)(v16 + 32));
        unsigned __int16 v17 = v18;
      }
      if (v12 <= *(unsigned __int8 *)(v16 + 38))
      {
        uint64_t v2 = *(void *)v16 & 0x7FFFFFFFFFFFFFFFLL;
        if (*(_DWORD *)(a1 + 544) == 2)
        {
          int v39 = 1;
          goto LABEL_43;
        }
        int v39 = *(void *)v16 >> 63;
        if (v39) {
          goto LABEL_43;
        }
      }
LABEL_21:
      if (++v14 == v13) {
        goto LABEL_12;
      }
      uint64_t v15 = *(void *)(a1 + 9024);
      goto LABEL_17;
    }
  }
LABEL_12:
  uint64_t result = sub_100039A9C(a1, *(unsigned int *)(a1 + 428), v2, v3, v4, v5, v6, v7);
  if (result) {
    return sub_100039FBC(a1);
  }
  return result;
}

void sub_1000712CC(uint64_t a1, int a2, int a3, void *a4, uint64_t a5)
{
  sub_100065DCC(a1);
  if (a2 < a3)
  {
    unsigned int v26 = 0;
    if (a5)
    {
      do
      {
        if (a2 >= 1 && *(_DWORD *)(a1 + 8892)) {
          sub_1000673D4(a1, *(_DWORD *)(a5 + 4 * a2));
        }
        int v18 = (const void *)sub_10005A674(a4, a2, &v26);
        sub_10006FCC8(a1, v18, v26, v19, v20, v21, v22, v23, v24);
        ++a2;
      }
      while (*(_DWORD *)(a1 + 552) != 3 && a2 < a3);
    }
    else
    {
      do
      {
        int v10 = (const void *)sub_10005A674(a4, a2, &v26);
        sub_10006FCC8(a1, v10, v26, v11, v12, v13, v14, v15, v16);
        ++a2;
      }
      while (*(_DWORD *)(a1 + 552) != 3 && a2 < a3);
    }
  }
}

uint64_t sub_1000713B4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, _WORD *a5)
{
  unsigned int v5 = *(_DWORD *)(a1 + 544);
  BOOL v6 = v5 > 0xB;
  int v7 = (1 << v5) & 0x828;
  if (v6 || v7 == 0) {
    return 0;
  }
  if (a2 >= 1)
  {
    uint64_t v12 = 0;
    if (a2 < 0x10) {
      goto LABEL_11;
    }
    if ((unint64_t)(a4 - a3) < 0x20) {
      goto LABEL_11;
    }
    uint64_t v12 = a2 & 0x7FFFFFF0;
    int32x4_t v13 = (_OWORD *)(a3 + 16);
    int32x4_t v14 = (_OWORD *)(a4 + 16);
    *(void *)&long long v15 = 0x4000400040004000;
    *((void *)&v15 + 1) = 0x4000400040004000;
    uint64_t v16 = a2 & 0xFFFFFFF0;
    do
    {
      *(v13 - 1) = v15;
      *int32x4_t v13 = v15;
      v13 += 2;
      *(v14 - 1) = v15;
      *int32x4_t v14 = v15;
      v14 += 2;
      v16 -= 16;
    }
    while (v16);
    if (v12 != a2)
    {
LABEL_11:
      unsigned __int16 v17 = (_WORD *)(a4 + 2 * v12);
      int v18 = (_WORD *)(a3 + 2 * v12);
      uint64_t v19 = a2 - v12;
      do
      {
        *v18++ = 0x4000;
        *v17++ = 0x4000;
        --v19;
      }
      while (v19);
    }
  }
  *a5 = *(_WORD *)(a1 + 8936);
  unsigned int v20 = (*(_DWORD *)(a1 + 9040) << 8) - *(_DWORD *)(a1 + 9044);
  uint64_t v21 = *(void *)(*(void *)(a1 + 9024) + 8 * (v20 >> 8));
  uint64_t v22 = -*(unsigned char *)(a1 + 9044);
  int v23 = *(unsigned __int16 *)(v21 + 48 * v22 + 32);
  if (v23 != 0xFFFF)
  {
    unsigned int v25 = v20 + 1;
    do
    {
      unint64_t v26 = *(void *)(v21 + 48 * v22);
      uint64_t v27 = (v26 >> 53) & 0x3FF;
      if (*(_DWORD *)(a1 + 620) >= v23 && sub_10002BD4C(*(void *)(a1 + 8 * v27 + 680), v26))
      {
        int v28 = *(__int16 *)(v21 + 48 * v22 + 36);
        if (v28 < *(__int16 *)(a3 + 2 * v27)) {
          *(_WORD *)(a3 + 2 * v27) = v28;
        }
      }
      else
      {
        int v29 = *(__int16 *)(v21 + 48 * v22 + 36);
        if (v29 < *(__int16 *)(a4 + 2 * v27)) {
          *(_WORD *)(a4 + 2 * v27) = v29;
        }
      }
      uint64_t v21 = *(void *)(*(void *)(a1 + 9024) + 8 * (v25 >> 8));
      uint64_t v22 = v25;
      int v23 = *(unsigned __int16 *)(v21 + 48 * v25++ + 32);
    }
    while (v23 != 0xFFFF);
  }
  return 1;
}

BOOL sub_100071574(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v9 = sub_100039F58(a1);
  BOOL v10 = *(unsigned __int16 *)(a1 + 8936) != 0x4000;
  unsigned int v11 = (*(_DWORD *)(a1 + 9040) << 8) - *(_DWORD *)(a1 + 9044);
  uint64_t v12 = *(void *)(a1 + 9024);
  uint64_t v13 = *(void *)(v12 + 8 * (v11 >> 8));
  uint64_t v14 = -*(unsigned char *)(a1 + 9044);
  int v15 = *(unsigned __int16 *)(v13 + 48 * v14 + 32);
  int v16 = *(_DWORD *)(a1 + 620);
  if (v15 != 0xFFFF && v16 >= v15)
  {
    unsigned int v20 = v11 + 1;
    do
    {
      unint64_t v23 = *(void *)(v13 + 48 * v14);
      uint64_t v24 = (v23 >> 53) & 0x3FF;
      if (*(_DWORD *)(a3 + 4 * v24) && *(__int16 *)(v13 + 48 * v14 + 36) < 0x4000)
      {
        if (sub_10002BD4C(*(void *)(a1 + 8 * v24 + 680), v23))
        {
          sub_1000B4748(a1 + 9084, a4);
          return 1;
        }
        uint64_t v12 = *(void *)(a1 + 9024);
        int v16 = *(_DWORD *)(a1 + 620);
        BOOL v10 = 1;
      }
      uint64_t v13 = *(void *)(v12 + 8 * (v20 >> 8));
      uint64_t v14 = v20;
      int v21 = *(unsigned __int16 *)(v13 + 48 * v20++ + 32);
    }
    while (v21 != 0xFFFF && v16 >= v21);
  }
  sub_1000B4748(a1 + 9084, 0);
  return v10 && v9 < a5;
}

uint64_t sub_1000716BC(uint64_t result, _DWORD *a2, _DWORD *a3, _DWORD *a4)
{
  *a2 = *(_DWORD *)(result + 9076) + *(__int16 *)(result + 9048);
  int v4 = *(__int16 *)(result + 8936);
  if (v4 == 0x4000)
  {
    *a3 = 0x40000000;
    int v5 = *(__int16 *)(result + 9050);
    if (v5 != 0x4000)
    {
LABEL_3:
      *a4 = *(_DWORD *)(result + 9076) + v5;
      return result;
    }
  }
  else
  {
    *a3 = *(_DWORD *)(result + 9076) + v4;
    int v5 = *(__int16 *)(result + 9050);
    if (v5 != 0x4000) {
      goto LABEL_3;
    }
  }
  *a4 = 0x40000000;
  return result;
}

uint64_t sub_100071728(uint64_t a1)
{
  uint64_t v2 = (__int16 *)(a1 + 8936);
  uint64_t result = sub_100015A34(*(void *)(a1 + 384), *(unsigned __int16 *)(a1 + 8946));
  int v4 = *v2;
  if (v4 > 0x4000)
  {
    int v4 = 0x4000;
    *uint64_t v2 = 0x4000;
    *(_DWORD *)(a1 + 8928) = -1;
    v2[2] = -1;
    *(_DWORD *)(a1 + 8920) = 0;
  }
  uint64_t v32 = 0;
  uint64_t v30 = 0;
  if (v4 <= v2[63])
  {
    uint64_t v5 = *(unsigned __int16 *)result;
    uint64_t result = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 384) + 1792) + 2 * v5);
    if (result == 0x4000)
    {
      uint64_t result = sub_100015A48(*(void *)(a1 + 384), v5);
      LOWORD(v4) = *v2;
    }
    __int16 v6 = result - v2[61] + v4;
    *uint64_t v2 = v6;
    *(_DWORD *)(a1 + 8920) += (__int16)result;
    v2[6] = v6;
    if (v6 < v2[56])
    {
      v2[56] = v6;
      v2[58] = v2[4];
      v2[124] = v2[5];
    }
  }
  else
  {
    v2[6] = 0x4000;
    *uint64_t v2 = 0x4000;
  }
  int v7 = *(_DWORD *)(a1 + 620);
  uint64_t v8 = *(void *)(a1 + 592);
  uint64_t v9 = *(void *)(v8 + 8 * ((v7 + 1) >> 8)) + 24 * (v7 + 1);
  int v11 = *(unsigned __int16 *)(v9 + 16);
  BOOL v10 = (_WORD *)(v9 + 16);
  if (v11 == 0x4000)
  {
    *BOOL v10 = 0x3FFF;
    int v7 = *(_DWORD *)(a1 + 620);
    uint64_t v8 = *(void *)(a1 + 592);
  }
  unsigned int v12 = 0;
  unsigned int v13 = (*(_DWORD *)(a1 + 9040) << 8) - *(_DWORD *)(a1 + 9044);
  LODWORD(v32) = 0;
  HIDWORD(v32) = v13;
  int v14 = *(_DWORD *)(a1 + 9364) + v7;
  do
  {
    uint64_t v15 = *(void *)(v8 + 8 * (v12 >> 8)) + 24 * v12;
    uint64_t v30 = v15;
    int v16 = *(unsigned __int16 *)(v15 + 16);
    ++v12;
  }
  while (v16 == 0x4000);
  if (v16 == 0x3FFF)
  {
    *(_WORD *)(v15 + 16) = 0x4000;
    uint64_t v17 = *(void *)(a1 + 592);
    uint64_t v15 = *(void *)(v17 + 8 * (v12 >> 8)) + 24 * v12;
    uint64_t v30 = v15;
    if ((int)v12 <= v14)
    {
      while (*(_WORD *)(v15 + 16) == 0x4000)
      {
        ++v12;
        uint64_t v15 = *(void *)(v17 + 8 * (v12 >> 8)) + 24 * v12;
        uint64_t v30 = v15;
        if (v14 + 1 == v12)
        {
          unsigned int v12 = v14 + 1;
          break;
        }
      }
    }
  }
  else
  {
    --v12;
  }
  int v31 = v12;
  uint64_t v18 = *(void *)(a1 + 9024);
  uint64_t v19 = *(void *)(v18 + 8 * (v13 >> 8)) + 48 * v13;
  signed int v20 = *(_DWORD *)(a1 + 620);
  signed int v21 = *(unsigned __int16 *)(v19 + 32);
  if ((int)v12 <= v20 || v20 >= v21)
  {
    uint64_t v23 = v15;
    do
    {
      if ((unsigned __int16)v12 < v21
        || (unsigned __int16)v12 == v21
        && (*(void *)v23 & 0x7FFFFFFFFFFFFFFFuLL) < (*(void *)v19 & 0x7FFFFFFFFFFFFFFFuLL))
      {
        uint64_t result = sub_100073B68(a1, (unsigned __int16)v12, v23, v12, v13, &v32);
        if (*(_DWORD *)(a1 + 552) == 3) {
          return result;
        }
      }
      else
      {
        uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t *, void, uint64_t))(a1 + 536))(a1, (char *)&v32 + 4, &v32, (unsigned __int16)v12, v23);
        if (*(_DWORD *)(a1 + 552) == 3) {
          return result;
        }
        if (!result) {
          goto LABEL_48;
        }
      }
      if (*(_DWORD *)(a1 + 8896))
      {
        if (*(unsigned __int16 *)(v23 + 14) == 0xFFFFLL)
        {
          *(_WORD *)(v15 + 16) = 0x4000;
          uint64_t v26 = *(void *)(a1 + 592);
          do
          {
            ++v12;
            uint64_t v23 = *(void *)(v26 + 8 * (v12 >> 8)) + 24 * v12;
            uint64_t v30 = v23;
          }
          while (*(_WORD *)(v23 + 16) == 0x4000);
          uint64_t v15 = v23;
          if (*(_WORD *)(v23 + 16) == 0x3FFF) {
            goto LABEL_35;
          }
        }
        else
        {
          uint64_t v23 = *(void *)(*(void *)(a1 + 592) + (((unint64_t)*(unsigned __int16 *)(v23 + 14) >> 5) & 0x7F8))
              + 24 * *(_WORD *)(v23 + 14);
          uint64_t v30 = v23;
          if (*(_WORD *)(v23 + 16) == 0x3FFF) {
            goto LABEL_35;
          }
        }
      }
      else
      {
        uint64_t v24 = *(void *)(a1 + 592);
        do
        {
          ++v12;
          uint64_t v23 = *(void *)(v24 + 8 * (v12 >> 8)) + 24 * v12;
          uint64_t v30 = v23;
        }
        while (*(_WORD *)(v23 + 16) == 0x4000);
        if (*(_WORD *)(v23 + 16) == 0x3FFF)
        {
LABEL_35:
          *(_WORD *)(v23 + 16) = 0x4000;
          uint64_t v25 = *(void *)(a1 + 592);
          uint64_t v23 = *(void *)(v25 + 8 * ((v12 + 1) >> 8)) + 24 * (v12 + 1);
          uint64_t v30 = v23;
          if ((int)v12 >= v14)
          {
            ++v12;
          }
          else
          {
            while (*(_WORD *)(v23 + 16) == 0x4000)
            {
              uint64_t v23 = *(void *)(v25 + 8 * ((v12 + 2) >> 8)) + 24 * (v12 + 2);
              uint64_t v30 = v23;
              if (v14 == ++v12)
              {
                unsigned int v12 = v14 + 1;
                goto LABEL_48;
              }
            }
            ++v12;
          }
        }
      }
LABEL_48:
      unsigned int v13 = HIDWORD(v32);
      uint64_t v18 = *(void *)(a1 + 9024);
      uint64_t v19 = *(void *)(v18 + (((unint64_t)HIDWORD(v32) >> 5) & 0x7FFFFF8)) + 48 * BYTE4(v32);
      signed int v27 = *(_DWORD *)(a1 + 620);
      signed int v21 = *(unsigned __int16 *)(v19 + 32);
    }
    while ((int)v12 <= v27 || v27 >= v21);
  }
  int v31 = v12;
  while (v31 <= v14)
  {
    int v28 = &v30;
LABEL_52:
    uint64_t result = sub_100073D74(a1, (_DWORD *)&v32 + 1, (unsigned int *)&v32, v28, &v31);
    uint64_t v18 = *(void *)(a1 + 9024);
    uint64_t v19 = *(void *)(v18 + (((unint64_t)HIDWORD(v32) >> 5) & 0x7FFFFF8)) + 48 * BYTE4(v32);
    if (*(_DWORD *)(a1 + 552) == 3) {
      return result;
    }
  }
  if (*(__int16 *)(v19 + 32) != -1)
  {
    int v28 = 0;
    goto LABEL_52;
  }
  uint64_t v29 = *(void *)(v18 + (((unint64_t)v32 >> 5) & 0x7FFFFF8)) + 48 * v32;
  *(_WORD *)(v29 + 32) = -1;
  *(void *)uint64_t v29 = 0x7FFFFFFFFFFFFFFFLL;
  *(_DWORD *)(a1 + 9044) = v32 + 1;
  return result;
}

uint64_t sub_100071BF4(uint64_t a1)
{
  uint64_t v2 = (__int16 *)(a1 + 8936);
  uint64_t v24 = 0;
  uint64_t v22 = *(void *)(*(void *)(a1 + 592) + (((unint64_t)*(unsigned int *)(a1 + 612) >> 5) & 0x7FFFFF8))
      + 24 * *(_DWORD *)(a1 + 612);
  *(_DWORD *)(v22 + 14) = 0xFFFF;
  uint64_t result = sub_100015A34(*(void *)(a1 + 384), *(unsigned __int16 *)(a1 + 8946));
  int v4 = *v2;
  if (v4 > 0x4000)
  {
    LOWORD(v4) = 0x4000;
    *uint64_t v2 = 0x4000;
    *(_DWORD *)(a1 + 8928) = -1;
    v2[2] = -1;
    *(_DWORD *)(a1 + 8920) = 0;
    if (v2[63] < 0x4000) {
      goto LABEL_3;
    }
  }
  else if (v4 > v2[63])
  {
LABEL_3:
    v2[6] = 0x4000;
    *uint64_t v2 = 0x4000;
    goto LABEL_9;
  }
  uint64_t v5 = *(unsigned __int16 *)result;
  uint64_t result = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 384) + 1792) + 2 * v5);
  if (result == 0x4000)
  {
    uint64_t result = sub_100015A48(*(void *)(a1 + 384), v5);
    LOWORD(v4) = *v2;
  }
  __int16 v6 = result - v2[61] + v4;
  *uint64_t v2 = v6;
  *(_DWORD *)(a1 + 8920) += (__int16)result;
  v2[6] = v6;
  if (v6 < v2[56])
  {
    v2[56] = v6;
    v2[58] = v2[4];
    v2[124] = v2[5];
  }
LABEL_9:
  unsigned int v7 = (*(_DWORD *)(a1 + 9040) << 8) - *(_DWORD *)(a1 + 9044);
  LODWORD(v24) = 0;
  HIDWORD(v24) = v7;
  uint64_t v8 = *(void *)(a1 + 592);
  unsigned int v9 = -1;
  do
  {
    uint64_t v10 = *(void *)(v8 + 8 * (++v9 >> 8));
    uint64_t v11 = v10 + 24 * v9;
    uint64_t v22 = v11;
  }
  while (*(_WORD *)(v11 + 16) == 0x4000);
  unsigned int v23 = v9;
  uint64_t v12 = *(void *)(a1 + 9024);
  uint64_t v13 = *(void *)(v12 + 8 * (v7 >> 8)) + 48 * v7;
  int v14 = *(unsigned __int16 *)(v10 + 24 * v9 + 14);
  int v15 = *(_DWORD *)(a1 + 620);
  int v16 = *(unsigned __int16 *)(v13 + 32);
  if (v15 >= v14 || v15 >= v16)
  {
    do
    {
      if ((unsigned __int16)v14 < (unsigned __int16)v16
        || (unsigned __int16)v14 == (unsigned __int16)v16
        && (*(void *)v11 & 0x7FFFFFFFFFFFFFFFuLL) < (*(void *)v13 & 0x7FFFFFFFFFFFFFFFuLL))
      {
        uint64_t result = sub_100073B68(a1, (unsigned __int16)v14, v11, v9, v7, &v24);
        if (*(_DWORD *)(a1 + 552) == 3) {
          return result;
        }
      }
      else
      {
        uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t *, void, uint64_t))(a1 + 536))(a1, (char *)&v24 + 4, &v24, (unsigned __int16)v14, v11);
        if (*(_DWORD *)(a1 + 552) == 3) {
          return result;
        }
        if (!result) {
          goto LABEL_21;
        }
      }
      uint64_t v18 = *(void *)(a1 + 592);
      do
      {
        ++v9;
        uint64_t v11 = *(void *)(v18 + 8 * (v9 >> 8)) + 24 * v9;
        uint64_t v22 = v11;
      }
      while (*(_WORD *)(v11 + 16) == 0x4000);
LABEL_21:
      unsigned int v7 = HIDWORD(v24);
      uint64_t v12 = *(void *)(a1 + 9024);
      uint64_t v13 = *(void *)(v12 + (((unint64_t)HIDWORD(v24) >> 5) & 0x7FFFFF8)) + 48 * BYTE4(v24);
      int v14 = *(unsigned __int16 *)(v11 + 14);
      int v19 = *(_DWORD *)(a1 + 620);
      int v16 = *(unsigned __int16 *)(v13 + 32);
    }
    while (v19 >= v14 || v19 >= v16);
  }
  unsigned int v23 = v9;
  if ((_WORD)v14 != 0xFFFF) {
    goto LABEL_32;
  }
LABEL_31:
  if (*(__int16 *)(v13 + 32) == -1)
  {
    uint64_t v21 = *(void *)(v12 + (((unint64_t)v24 >> 5) & 0x7FFFFF8)) + 48 * v24;
    *(_WORD *)(v21 + 32) = -1;
    *(void *)uint64_t v21 = 0x7FFFFFFFFFFFFFFFLL;
    *(_DWORD *)(a1 + 9044) = v24 + 1;
  }
  else
  {
LABEL_32:
    while (1)
    {
      uint64_t result = sub_100073D74(a1, (_DWORD *)&v24 + 1, (unsigned int *)&v24, &v22, (int *)&v23);
      if (*(_DWORD *)(a1 + 552) == 3) {
        break;
      }
      uint64_t v12 = *(void *)(a1 + 9024);
      uint64_t v13 = *(void *)(v12 + (((unint64_t)HIDWORD(v24) >> 5) & 0x7FFFFF8)) + 48 * BYTE4(v24);
      if (*(_WORD *)(v22 + 14) == 0xFFFF) {
        goto LABEL_31;
      }
    }
  }
  return result;
}

uint64_t sub_100071F30(uint64_t a1, int a2)
{
  uint64_t v2 = (a2 + 255) >> 8;
  if ((int)v2 <= *(_DWORD *)(a1 + 9040)) {
    return 1;
  }
  uint64_t result = sub_1000C33A0((8 * v2));
  if (!result) {
    return result;
  }
  uint64_t v5 = (void *)result;
  int v6 = *(_DWORD *)(a1 + 9040);
  if (v6 < (int)v2)
  {
    unsigned int v7 = (uint64_t *)(result + 8 * v6);
    uint64_t v8 = v2 - v6;
    while (1)
    {
      uint64_t v9 = sub_1000C33A0(12288);
      *unsigned int v7 = v9;
      if (!v9) {
        break;
      }
      ++v6;
      ++v7;
      if (!--v8) {
        goto LABEL_9;
      }
    }
  }
  if (v6 == v2)
  {
LABEL_9:
    j__memmove(v5, *(const void **)(a1 + 9024), 8 * *(int *)(a1 + 9040));
    sub_1000C321C(*(void *)(a1 + 9024));
    *(void *)(a1 + 9024) = v5;
    *(_DWORD *)(a1 + 9040) = v2;
    return 1;
  }
  if (v6 > *(_DWORD *)(a1 + 9040))
  {
    uint64_t v10 = v6;
    do
    {
      uint64_t v11 = v10 - 1;
      sub_1000C321C(*((void *)v5 + v10 - 1));
      uint64_t v10 = v11;
    }
    while (v11 > *(int *)(a1 + 9040));
  }
  sub_1000C321C((uint64_t)v5);
  return 0;
}

uint64_t sub_100072040(uint64_t a1, __int16 a2, unsigned int a3, uint64_t a4, int a5)
{
  uint64_t result = sub_1000BD964(*(void *)(a1 + 376), a3, 0);
  __int16 v22 = result;
  if (*(int *)(a1 + 612) >= 1)
  {
    unsigned int v9 = 0;
    uint64_t v21 = (_WORD *)(a1 + 9048);
    do
    {
      uint64_t v10 = *(void *)(*(void *)(a1 + 592) + 8 * (v9 >> 8));
      __int16 v11 = a2;
      if (*(_DWORD *)(a1 + 9280))
      {
        unsigned int v12 = sub_1000BD964(*(void *)(a1 + 376), *(unsigned __int16 *)(v10 + 24 * v9 + 14), 0);
        uint64_t result = sub_1000BDCD4(*(void *)(a1 + 376), (uint64_t)&v22, 1u, v12);
        __int16 v11 = result + a2;
      }
      uint64_t v13 = v10 + 24 * v9;
      int v16 = *(__int16 *)(v13 + 16);
      int v15 = (_WORD *)(v13 + 16);
      int v14 = v16;
      int v17 = *(_DWORD *)(a1 + 9008);
      if (v16 <= v11)
      {
        if (v17)
        {
          int v20 = *(_DWORD *)(v10 + 24 * v9 + 8);
          if (v20 != a5) {
            uint64_t result = (uint64_t)sub_1000241EC(*(uint64_t **)(a1 + 9016), a5, v20, v11 - (unsigned __int16)v14, v11 - *v21);
          }
        }
      }
      else
      {
        if (v17)
        {
          int v18 = *(_DWORD *)(v10 + 24 * v9 + 8);
          if (v14 != 0x4000 && v18 != a5) {
            uint64_t result = (uint64_t)sub_1000241EC(*(uint64_t **)(a1 + 9016), v18, a5, (unsigned __int16)v14 - v11, (unsigned __int16)v14 - *v21);
          }
        }
        *int v15 = v11;
        *(_DWORD *)(v10 + 24 * v9 + 8) = a5;
      }
      ++v9;
    }
    while ((signed int)v9 < *(_DWORD *)(a1 + 612));
  }
  return result;
}

uint64_t sub_1000721C8(uint64_t result, __int16 a2, unsigned int a3, uint64_t a4, int a5)
{
  uint64_t v5 = *(int *)(result + 612);
  if (v5)
  {
    uint64_t v9 = result;
    uint64_t v10 = qword_100101CC0;
    if (qword_100101CC0) {
      uint64_t v10 = *(void *)(qword_100101CC0 + 3616);
    }
    __int16 v25 = 0;
    if (v10 >= v5 && *(_DWORD *)(result + 9280)
      || (uint64_t result = sub_100072040(result, a2, a3, a4, a5), *(_DWORD *)(v9 + 9280)))
    {
      __int16 v25 = sub_1000BD964(*(void *)(v9 + 376), a3, 0);
      uint64_t result = sub_1000BDD6C(*(void *)(v9 + 376), 1, (uint64_t)&v25, *(unsigned int *)(v9 + 612), *(unsigned __int16 **)(v9 + 656), *(_DWORD *)(v9 + 672), *(__int16 **)(v9 + 664));
      *(_DWORD *)(v9 + 672) = result;
    }
    if (*(int *)(v9 + 612) >= 1)
    {
      uint64_t v11 = 0;
      __int16 v12 = 0;
      uint64_t v24 = (_WORD *)(v9 + 9048);
      do
      {
        if (*(_DWORD *)(v9 + 9280)) {
          __int16 v12 = *(_WORD *)(*(void *)(v9 + 664) + 2 * v11);
        }
        uint64_t v13 = *(void *)(*(void *)(v9 + 592) + 8 * (v11 >> 8));
        int v14 = (__int16)(v12 + a2);
        uint64_t v15 = v13 + 24 * v11;
        int v18 = *(__int16 *)(v15 + 16);
        int v17 = (_WORD *)(v15 + 16);
        int v16 = v18;
        int v19 = *(_DWORD *)(v9 + 9008);
        __int16 v20 = v14 - v18;
        if (v14 >= v18)
        {
          if (v19)
          {
            int v23 = *(_DWORD *)(v13 + 24 * v11 + 8);
            if (v23 != a5) {
              uint64_t result = (uint64_t)sub_1000241EC(*(uint64_t **)(v9 + 9016), a5, v23, v20, (unsigned __int16)v14 - *v24);
            }
          }
        }
        else
        {
          if (v19)
          {
            int v21 = *(_DWORD *)(v13 + 24 * v11 + 8);
            if (v16 != 0x4000 && v21 != a5) {
              uint64_t result = (uint64_t)sub_1000241EC(*(uint64_t **)(v9 + 9016), v21, a5, (unsigned __int16)v16 - (unsigned __int16)v14, (unsigned __int16)v16 - *v24);
            }
          }
          *int v17 = v14;
          *(_DWORD *)(v13 + 24 * v11 + 8) = a5;
        }
        ++v11;
      }
      while (v11 < *(int *)(v9 + 612));
    }
  }
  return result;
}

uint64_t sub_1000723A0(uint64_t a1, __int16 a2, unsigned int a3, unint64_t a4, int a5)
{
  unint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  uint64_t v9 = *(unsigned __int16 **)(a1 + 9192);
  LODWORD(v19) = a5;
  unsigned int v10 = sub_1000BD964(*(void *)(a1 + 376), a3, 0);
  __int16 v21 = v10;
  uint64_t v11 = *(void *)(a1 + 8 * ((a4 >> 53) & 0x3FF) + 680);
  uint64_t result = sub_100028F34(v11, a3, v10, a4, *(_DWORD *)(a1 + 9224), *(void *)(a1 + 9216), *(_DWORD *)(a1 + 9188), (unint64_t)v9);
  int v13 = result;
  if ((int)result > *(_DWORD *)(a1 + 9188))
  {
    int v14 = 2 * result;
    uint64_t result = sub_1000C33A0(48 * result);
    if (!result)
    {
      *(_DWORD *)(a1 + 552) = 3;
      return result;
    }
    uint64_t v9 = (unsigned __int16 *)result;
    sub_1000C321C(*(void *)(a1 + 9192));
    *(_DWORD *)(a1 + 9188) = v14;
    *(void *)(a1 + 9192) = v9;
    uint64_t result = sub_100028F34(v11, a3, v10, a4, *(_DWORD *)(a1 + 9224), *(void *)(a1 + 9216), v14, (unint64_t)v9);
    int v13 = result;
  }
  if (v13 >= 1)
  {
    do
    {
      __int16 v15 = v9[1] + a2;
      LOWORD(v20) = v15;
      if (*(_DWORD *)(a1 + 9280))
      {
        unsigned int v16 = sub_1000BD964(*(void *)(a1 + 376), *v9, 0);
        uint64_t result = sub_1000BDCD4(*(void *)(a1 + 376), (uint64_t)&v21, 1u, v16);
        __int16 v15 = v20 + result;
        LOWORD(v20) = v20 + result;
      }
      if (*(__int16 *)(a1 + 9062) >= v15)
      {
        if (*((_DWORD *)v9 + 4)) {
          unint64_t v17 = *((void *)v9 + 1) | 0x8000000000000000;
        }
        else {
          unint64_t v17 = *((void *)v9 + 1);
        }
        unint64_t v18 = v17;
        HIWORD(v19) = *v9;
        uint64_t result = (*(uint64_t (**)(uint64_t, unint64_t *))(a1 + 9408))(a1, &v18);
      }
      v9 += 12;
      --v13;
    }
    while (v13);
  }
  return result;
}

uint64_t sub_100072550(uint64_t a1, __int16 a2, uint64_t a3, unint64_t a4, unsigned int a5)
{
  uint64_t v24 = 0;
  long long v22 = 0u;
  memset(v23, 0, sizeof(v23));
  long long v21 = 0u;
  unint64_t v18 = 0;
  uint64_t v19 = a5;
  uint64_t v9 = (a4 >> 53) & 0x3FF;
  uint64_t v20 = 0;
  __int16 v25 = -1;
  uint64_t v10 = *(void *)(a1 + 8 * v9 + 680);
  sub_100028F14((_DWORD *)v10, (uint64_t)v23);
  (*(void (**)(uint64_t, _OWORD *, uint64_t, unint64_t, uint64_t))(v10 + 104))(v10, v23, a3, a4, 0xFFFFLL);
  uint64_t result = (*(uint64_t (**)(_OWORD *, uint64_t, long long *))(v10 + 112))(v23, v10, &v21);
  if (result)
  {
    __int16 v12 = (__int16 *)(a1 + 9062);
    while (!*(_DWORD *)(a1 + 9280) || *((void *)&v22 + 1) != 0)
    {
      LOWORD(v20) = WORD1(v21) + a2;
      if (*v12 >= (__int16)(WORD1(v21) + a2)) {
        goto LABEL_15;
      }
LABEL_5:
      uint64_t result = (*(uint64_t (**)(_OWORD *, uint64_t, long long *))(v10 + 112))(v23, v10, &v21);
      if (!result) {
        return result;
      }
    }
    if (v25 == -1) {
      __int16 v25 = sub_1000BD964(*(void *)(a1 + 376), a3, 0);
    }
    unsigned int v15 = sub_1000BD964(*(void *)(a1 + 376), (unsigned __int16)v21, 0);
    LOWORD(v20) = sub_1000BDCD4(*(void *)(a1 + 376), (uint64_t)&v25, 1u, v15) + a2;
    if (*v12 < (__int16)v20) {
      goto LABEL_5;
    }
LABEL_15:
    if (v22) {
      unint64_t v16 = *((void *)&v21 + 1) | 0x8000000000000000;
    }
    else {
      unint64_t v16 = *((void *)&v21 + 1);
    }
    unint64_t v18 = v16;
    if (*((void *)&v22 + 1))
    {
      v17[0] = v21;
      v17[1] = v22;
      int v13 = sub_100064F38(a1, v9, (uint64_t)v17) + *(_DWORD *)(a1 + 620) + 1;
    }
    else
    {
      LOWORD(v13) = v21;
    }
    HIWORD(v19) = v13;
    (*(void (**)(uint64_t, unint64_t *))(a1 + 9408))(a1, &v18);
    goto LABEL_5;
  }
  return result;
}

uint64_t sub_100072730(uint64_t a1, __int16 a2, uint64_t a3, unint64_t a4, unsigned int a5)
{
  uint64_t v22 = 0;
  long long v20 = 0u;
  memset(v21, 0, sizeof(v21));
  long long v19 = 0u;
  unint64_t v16 = 0;
  uint64_t v10 = (a4 >> 53) & 0x3FF;
  uint64_t v18 = 0;
  uint64_t v17 = a5;
  uint64_t v11 = *(void *)(a1 + 8 * v10 + 680);
  sub_100028F14((_DWORD *)v11, (uint64_t)v21);
  if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 4544)) {
    sub_100029B58((uint64_t)v21, a5, a2);
  }
  (*(void (**)(uint64_t, _OWORD *, uint64_t, unint64_t, uint64_t))(v11 + 104))(v11, v21, a3, a4, 0xFFFFLL);
  for (uint64_t result = (*(uint64_t (**)(_OWORD *, uint64_t, long long *))(v11 + 112))(v21, v11, &v19);
        result;
        uint64_t result = (*(uint64_t (**)(_OWORD *, uint64_t, long long *))(v11 + 112))(v21, v11, &v19))
  {
    LOWORD(v18) = WORD1(v19) + a2;
    if (*(__int16 *)(a1 + 9062) >= (__int16)(WORD1(v19) + a2))
    {
      if (v20) {
        unint64_t v14 = *((void *)&v19 + 1) | 0x8000000000000000;
      }
      else {
        unint64_t v14 = *((void *)&v19 + 1);
      }
      unint64_t v16 = v14;
      if (*((void *)&v20 + 1))
      {
        v15[0] = v19;
        v15[1] = v20;
        int v13 = sub_100064F38(a1, v10, (uint64_t)v15) + *(_DWORD *)(a1 + 620) + 1;
      }
      else
      {
        LOWORD(v13) = v19;
      }
      HIWORD(v17) = v13;
      (*(void (**)(uint64_t, unint64_t *))(a1 + 9408))(a1, &v16);
    }
  }
  return result;
}

void sub_1000728C4(uint64_t a1)
{
  uint64_t v2 = (__int16 *)(a1 + 8936);
  uint64_t v3 = a1 + 680;
  uint64_t v4 = sub_10002BD6C(a1 + 680, *(_DWORD *)(a1 + 8872));
  sub_100066E1C((_DWORD *)a1);
  int v5 = *(_DWORD *)(a1 + 8896);
  if (v5) {
    int v5 = *(_DWORD *)(a1 + 616);
  }
  *(_DWORD *)(a1 + 612) = v5;
  int v6 = *(_DWORD *)(a1 + 544);
  if (v6 == 5 || v6 == 2) {
    sub_100066E94(a1);
  }
  int v8 = v2[56];
  if (v8 + v2[62] <= 16382) {
    __int16 v9 = v8 + v2[62];
  }
  else {
    __int16 v9 = 0x3FFF;
  }
  int v10 = *(_DWORD *)(a1 + 9208);
  if (*(_DWORD *)(a1 + 9044) > v10) {
    __int16 v9 = sub_10005EF28(*(int **)(a1 + 9232), v10, v8, v9);
  }
  if (*(_DWORD *)(a1 + 544) == 3
    && qword_100101CC0
    && *(uint64_t *)(qword_100101CC0 + 1248) >= 1
    && *v2 == v2[56]
    && sub_100006578(*(void *)(a1 + 384)))
  {
    __int16 v11 = qword_100101CC0;
    if (qword_100101CC0) {
      __int16 v11 = *(_WORD *)(qword_100101CC0 + 1248);
    }
    int v12 = (__int16)(v9 - v11);
    if (v12 <= v2[56]) {
      __int16 v9 = v2[56];
    }
    else {
      __int16 v9 = v12;
    }
  }
  v2[63] = v9;
  int v13 = *v2;
  signed __int16 v104 = v13;
  v2[60] = v13;
  if (v13 <= v9)
  {
    (*(void (**)(uint64_t))(a1 + 9392))(a1);
  }
  else
  {
    *uint64_t v2 = 0x4000;
    v2[6] = 0x4000;
  }
  int v14 = *(_DWORD *)(a1 + 9044);
  uint64_t v15 = *(void *)(a1 + 9024);
  unint64_t v16 = (long long *)(*(void *)(v15 + 8 * ((v14 - 1) >> 8)) + 48 * (v14 - 1));
  int v17 = *(_DWORD *)(a1 + 9040) << 8;
  uint64_t v18 = *(_OWORD **)(v15 + 8 * ((v17 - 1) >> 8));
  long long v19 = *v16;
  long long v20 = v16[1];
  v18[767] = v16[2];
  v18[766] = v20;
  v18[765] = v19;
  if (*(_DWORD *)(a1 + 9044) == 1)
  {
    if (!*(_DWORD *)(a1 + 8896))
    {
      sub_100066DF0(a1);
    }
    return;
  }
  uint64_t v103 = v3;
  unsigned int v107 = 0;
  unsigned int v105 = 0;
  int v106 = 0;
  uint64_t v21 = *(void *)(a1 + 9024);
  uint64_t v22 = *(void *)(v21 + 8 * ((v14 - 2) >> 8));
  unsigned int v23 = v17 - 2;
  uint64_t v24 = *(void *)(v21 + 8 * ((v17 - 2) >> 8));
  int v25 = *(_DWORD *)(a1 + 9076);
  int v26 = v2[66];
  int v27 = sub_100065024(a1);
  int v28 = v14 - 2;
  if (v14 < 2)
  {
    int v33 = 1;
  }
  else
  {
    int v100 = v25 - v26;
    int v101 = v27;
    uint64_t v29 = (_OWORD *)(v24 + 12192);
    uint64_t v30 = v22 + 48 * (v14 - 2);
    int v31 = *(_DWORD *)(a1 + 620);
    uint64_t v32 = (unsigned __int16 *)(v30 + 32);
    if (v31 < *(unsigned __int16 *)(v30 + 32))
    {
      int v102 = 0;
      int v33 = 1;
      while (1)
      {
        while (*(__int16 *)(v30 + 36) > v2[63])
        {
          BOOL v34 = __OFSUB__(v28--, 1);
          if (v28 < 0 != v34) {
            goto LABEL_72;
          }
          uint64_t v30 = *(void *)(*(void *)(a1 + 9024) + 8 * (v28 >> 8)) + 48 * v28;
          uint64_t v32 = (unsigned __int16 *)(v30 + 32);
          if (v31 >= *(unsigned __int16 *)(v30 + 32)) {
            goto LABEL_81;
          }
        }
        long long v35 = *(_OWORD *)v30;
        long long v36 = *(_OWORD *)(v30 + 32);
        v29[1] = *(_OWORD *)(v30 + 16);
        v29[2] = v36;
        *uint64_t v29 = v35;
        --v23;
        uint64_t v29 = (_OWORD *)(*(void *)(*(void *)(a1 + 9024) + 8 * (v23 >> 8)) + 48 * v23);
        ++v33;
        uint64_t v37 = ~*(_DWORD *)(a1 + 620) + *v32;
        uint64_t v38 = sub_100064238(*(void *)(*(void *)(a1 + 9328) + 8 * v37), 0);
        unint64_t v39 = *(void *)v30;
        uint64_t v40 = *(void *)v30 & 0x3FFFFFFLL;
        if (*(__int16 *)(v38 + 4 * v40) < 0)
        {
          uint64_t v97 = *(unsigned int *)(*(void *)(a1 + 9344) + 4 * v37);
          int v42 = *(unsigned __int16 *)(v30 + 24);
          signed __int16 v104 = *(_WORD *)(v30 + 24);
          unsigned int v43 = *(_DWORD *)(v30 + 16);
          unsigned int v105 = v43;
          int v44 = (__int16 *)(v30 + 28);
          unsigned int v92 = *(unsigned __int16 *)(v38 + 4 * v40 + 2);
          int v102 = 1;
        }
        else
        {
          uint64_t v41 = *(unsigned __int16 *)(v38 + 4 * v40 + 2);
          if ((*(__int16 *)(v38 + 4 * v41) & 0x80000000) == 0)
          {
            BOOL v34 = __OFSUB__(v28--, 1);
            if (v28 < 0 != v34) {
              goto LABEL_72;
            }
            goto LABEL_42;
          }
          int v102 = 0;
          uint64_t v97 = *(unsigned int *)(*(void *)(a1 + 9344) + 4 * v37);
          unsigned int v92 = *(unsigned __int16 *)(v38 + 4 * v41 + 2);
          uint64_t v45 = *(int *)(a1 + 568) - 1;
          uint64_t v46 = v30 + 2 * v45;
          int v42 = *(unsigned __int16 *)(v46 + 24);
          signed __int16 v104 = *(_WORD *)(v46 + 24);
          unsigned int v43 = *(_DWORD *)(v30 + 4 * v45 + 16);
          unsigned int v105 = v43;
          int v44 = (__int16 *)(v46 + 28);
        }
        if (v42 != 0x4000)
        {
          if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 4544))
          {
            __int16 v47 = *v44;
            if (v43 == -1)
            {
              uint64_t v50 = *(void *)(a1 + 8 * ((v39 >> 53) & 0x3FF) + 680);
              LODWORD(v53) = -1;
              int v48 = 65534;
            }
            else
            {
              int v48 = sub_10009F29C(*(void *)(a1 + 9000), v43);
              uint64_t v49 = a1 + 8 * ((*(void *)v30 >> 53) & 0x3FFLL);
              uint64_t v50 = *(void *)(v49 + 680);
              if (v105 == -1)
              {
                LODWORD(v53) = -1;
              }
              else
              {
                uint64_t v90 = *(void *)(v49 + 680);
                __int16 v94 = v47;
                int v51 = v48;
                unint64_t v52 = sub_10009F228(*(void *)(a1 + 9000), v105);
                int v48 = v51;
                __int16 v47 = v94;
                uint64_t v53 = (v52 >> 35) & 0x3FFFF;
                uint64_t v50 = v90;
              }
            }
            sub_100029B64(v50, v53, v97, v48, v92, v47, (int *)&v105, &v104, *(_DWORD *)(a1 + 9284));
            LOWORD(v42) = v104;
            if (v104 != 0x4000) {
              goto LABEL_59;
            }
          }
          else
          {
            if (!*(_DWORD *)(a1 + 9284) || v43 == -1) {
              goto LABEL_59;
            }
            unsigned int v54 = sub_10009F29C(*(void *)(a1 + 9000), v43);
            if (sub_1000BDE10(*(void *)(a1 + 376), v54, v92))
            {
              LOWORD(v42) = v104;
LABEL_59:
              signed __int16 v104 = v42 - v2[56];
              if (v101 >= v104)
              {
                uint64_t v55 = (*(void *)v30 >> 53) & 0x3FFLL;
                sub_1000266D8(*(void *)(a1 + 8 * v55 + 680));
                uint64_t v56 = (v55 << 53) + (v97 << 35) + ((uint64_t)(int)v107 << 10);
                sub_10009E750(*(unsigned int **)(a1 + 9000), v105, v92, v56, v102, v104, v2[132]);
                v104 += v2[66] + v2[56];
                signed __int16 v62 = v104;
                if (v104 <= v2[63])
                {
                  uint64_t v63 = v107;
                  if (v106 >= 2)
                  {
                    int v64 = 0;
                    unsigned int v91 = v107;
                    do
                    {
                      uint64_t v95 = v56;
                      signed __int16 v67 = v104;
                      if ((__int16)(v67 + sub_1000319BC(v4, v97, (v63 + v64), v57, v58, v59, v60, v61)) <= v2[63]) {
                        (*(void (**)(uint64_t))(a1 + 9400))(a1);
                      }
                      uint64_t v56 = v95 + 1024;
                      int v65 = v64 + 1;
                      int v66 = v64 + 2;
                      ++v64;
                      LODWORD(v63) = v91;
                    }
                    while (v66 < v106);
                    signed __int16 v62 = v104;
                    uint64_t v63 = v91 + v65;
                  }
                  if ((__int16)(v62 + sub_1000319BC(v4, v97, v63, v57, v58, v59, v60, v61)) <= v2[63]) {
                    (*(void (**)(uint64_t))(a1 + 9400))(a1);
                  }
                }
              }
            }
          }
        }
        if (v28 < 1) {
          goto LABEL_72;
        }
        --v28;
LABEL_42:
        uint64_t v30 = *(void *)(*(void *)(a1 + 9024) + 8 * (v28 >> 8)) + 48 * v28;
        int v31 = *(_DWORD *)(a1 + 620);
        uint64_t v32 = (unsigned __int16 *)(v30 + 32);
        if (v31 >= *(unsigned __int16 *)(v30 + 32)) {
          goto LABEL_81;
        }
      }
    }
    int v102 = 0;
    int v33 = 1;
LABEL_81:
    int v68 = 0;
    int v98 = -1;
    unsigned __int16 v69 = -1;
    int v70 = v2[63];
    uint64_t v71 = (__int16 *)(v30 + 36);
    if (*(__int16 *)(v30 + 36) <= v70) {
      goto LABEL_85;
    }
LABEL_82:
    while (1)
    {
      BOOL v34 = __OFSUB__(v28--, 1);
      if (v28 < 0 != v34) {
        break;
      }
      uint64_t v72 = *(void *)(*(void *)(a1 + 9024) + 8 * (v28 >> 8));
      uint64_t v73 = v72 + 48 * v28;
      int v74 = *(__int16 *)(v73 + 36);
      uint64_t v71 = (__int16 *)(v73 + 36);
      if (v74 <= v70)
      {
        uint64_t v30 = v72 + 48 * v28;
        while (1)
        {
LABEL_85:
          long long v75 = *(_OWORD *)v30;
          long long v76 = *(_OWORD *)(v30 + 32);
          v29[1] = *(_OWORD *)(v30 + 16);
          v29[2] = v76;
          *uint64_t v29 = v75;
          int v77 = *(unsigned __int16 *)(v30 + 32);
          if (v77 != v69)
          {
            int v68 = sub_10009DA20(*(void *)(a1 + 9256), *(unsigned __int16 *)(v30 + 32));
            unsigned __int16 v69 = v77;
          }
          ++v33;
          int v78 = *(unsigned __int8 *)(v30 + 38);
          if (v68 - 1 <= v78)
          {
            int v81 = v98;
            if (v68 == v78) {
              int v81 = 0;
            }
            int v99 = v81;
            int v82 = v102;
            if (v68 == v78) {
              int v82 = 1;
            }
            int v102 = v82;
            if (v68 - 1 == v78)
            {
              int v83 = *v71;
              if (v83 < v2[60]) {
                v2[60] = v83;
              }
              int v102 = 0;
              int v84 = *(_DWORD *)(a1 + 568) - 1;
            }
            else
            {
              int v84 = v99;
            }
            int v85 = v84;
            signed __int16 v86 = *(_WORD *)(v30 + 2 * v84 + 24) - v2[56];
            signed __int16 v104 = v86;
            int v98 = v85;
            unint64_t v87 = *(unsigned int *)(v30 + 4 * v85 + 16);
            unsigned int v105 = *(_DWORD *)(v30 + 4 * v85 + 16);
            if (v86 <= v101)
            {
              int v96 = v68;
              uint64_t v88 = *(void *)v30 & 0x7FFFFFFFFFFFFFFFLL;
              int v93 = sub_10009E750(*(unsigned int **)(a1 + 9000), v87, v69, v88, v102, v86, v2[132]);
              v104 += v2[66] + v2[56];
              if (v104 <= v2[63]) {
                (*(void (**)(uint64_t))(a1 + 9400))(a1);
              }
              int v68 = v96;
              if ((*(void *)v30 & 0x8000000000000000) != 0 && v102)
              {
                int v89 = sub_100025ED4(v103, *(unsigned int *)(a1 + 8872), v88);
                sub_10009EBBC(*(void *)(a1 + 9000), v93, v100 + v104 + v89);
                int v68 = v96;
              }
            }
          }
          else
          {
            int v79 = *v71;
            if (v79 < v2[60]) {
              v2[60] = v79;
            }
          }
          BOOL v34 = __OFSUB__(v28--, 1);
          if (v28 < 0 != v34) {
            goto LABEL_72;
          }
          uint64_t v80 = *(void *)(a1 + 9024);
          uint64_t v30 = *(void *)(v80 + 8 * (v28 >> 8)) + 48 * v28;
          --v23;
          uint64_t v29 = (_OWORD *)(*(void *)(v80 + 8 * (v23 >> 8)) + 48 * v23);
          int v70 = v2[63];
          uint64_t v71 = (__int16 *)(v30 + 36);
          if (*(__int16 *)(v30 + 36) > v70) {
            goto LABEL_82;
          }
        }
      }
    }
  }
LABEL_72:
  if (sub_10009F2BC(*(void *)(a1 + 9000)))
  {
    *(_DWORD *)(a1 + 552) = 3;
  }
  else
  {
    if (*(_DWORD *)(a1 + 612) >= (*(_DWORD *)(a1 + 608) << 8) - 1) {
      *(_DWORD *)(a1 + 552) = 3;
    }
    if (!*(_DWORD *)(a1 + 8896)) {
      sub_100066DF0(a1);
    }
    *(_DWORD *)(a1 + 9044) = v33;
  }
}

void sub_1000731E0(uint64_t a1)
{
  uint64_t v2 = (__int16 *)(a1 + 8936);
  unsigned int v72 = -1;
  int v71 = 0x40000000;
  __int16 v70 = 0;
  sub_100066E1C((_DWORD *)a1);
  int v3 = *(_DWORD *)(a1 + 8896);
  if (v3) {
    int v3 = *(_DWORD *)(a1 + 616);
  }
  *(_DWORD *)(a1 + 612) = v3;
  int v4 = *(_DWORD *)(a1 + 544);
  if (v4 == 5 || v4 == 2) {
    sub_100066E94(a1);
  }
  int v6 = v2[56];
  if (v6 + v2[62] <= 16382) {
    __int16 v7 = v6 + v2[62];
  }
  else {
    __int16 v7 = 0x3FFF;
  }
  int v8 = *(_DWORD *)(a1 + 9208);
  if (*(_DWORD *)(a1 + 9044) > v8) {
    __int16 v7 = sub_10005EF28(*(int **)(a1 + 9232), v8, v6, v7);
  }
  if (*(_DWORD *)(a1 + 544) == 3
    && qword_100101CC0
    && *(uint64_t *)(qword_100101CC0 + 1248) >= 1
    && *v2 == v2[56]
    && sub_100006578(*(void *)(a1 + 384)))
  {
    __int16 v9 = qword_100101CC0;
    if (qword_100101CC0) {
      __int16 v9 = *(_WORD *)(qword_100101CC0 + 1248);
    }
    int v10 = (__int16)(v7 - v9);
    if (v10 <= v2[56]) {
      __int16 v7 = v2[56];
    }
    else {
      __int16 v7 = v10;
    }
  }
  v2[63] = v7;
  int v11 = *v2;
  v2[60] = *v2;
  if (v11 <= v7)
  {
    (*(void (**)(uint64_t))(a1 + 9392))(a1);
  }
  else
  {
    *uint64_t v2 = 0x4000;
    v2[6] = 0x4000;
  }
  int v12 = *(_DWORD *)(a1 + 9044);
  uint64_t v13 = *(void *)(a1 + 9024);
  int v14 = (long long *)(*(void *)(v13 + 8 * ((v12 - 1) >> 8)) + 48 * (v12 - 1));
  int v15 = *(_DWORD *)(a1 + 9040) << 8;
  unint64_t v16 = *(_OWORD **)(v13 + 8 * ((v15 - 1) >> 8));
  long long v17 = *v14;
  long long v18 = v14[1];
  v16[767] = v14[2];
  v16[766] = v18;
  v16[765] = v17;
  if (*(_DWORD *)(a1 + 9044) == 1)
  {
    if (!*(_DWORD *)(a1 + 8896))
    {
      sub_100066DF0(a1);
    }
    return;
  }
  int v19 = v12 - 2;
  uint64_t v20 = *(void *)(a1 + 9024);
  uint64_t v21 = *(void *)(v20 + 8 * (v19 >> 8)) + 48 * v19;
  unsigned int v22 = v15 - 2;
  unsigned int v23 = (_OWORD *)(*(void *)(v20 + 8 * ((v15 - 2) >> 8)) + 12192);
  int v67 = sub_100065024(a1);
  int v69 = 0;
  int v68 = 0;
  int v24 = 0;
  unsigned __int16 v25 = -1;
  int v26 = 1;
  int v27 = v2[63];
  if (*(__int16 *)(v21 + 36) <= v27) {
    goto LABEL_36;
  }
LABEL_33:
  while (1)
  {
    BOOL v28 = __OFSUB__(v19--, 1);
    if (v19 < 0 != v28) {
      break;
    }
    uint64_t v29 = *(void *)(*(void *)(a1 + 9024) + 8 * (v19 >> 8));
    if (*(__int16 *)(v29 + 48 * v19 + 36) <= v27)
    {
      uint64_t v21 = v29 + 48 * v19;
      while (1)
      {
LABEL_36:
        long long v30 = *(_OWORD *)v21;
        long long v31 = *(_OWORD *)(v21 + 32);
        v23[1] = *(_OWORD *)(v21 + 16);
        v23[2] = v31;
        *unsigned int v23 = v30;
        int v32 = *(unsigned __int16 *)(v21 + 32);
        if (v32 != v25)
        {
          int v24 = sub_10009DA20(*(void *)(a1 + 9256), *(unsigned __int16 *)(v21 + 32));
          unsigned __int16 v25 = v32;
        }
        ++v26;
        int v33 = *(unsigned __int8 *)(v21 + 38);
        if (v24 - 1 > v33)
        {
          int v34 = *(__int16 *)(v21 + 36);
          if (v34 < v2[60]) {
            v2[60] = v34;
          }
          BOOL v28 = __OFSUB__(v19--, 1);
          if (v19 < 0 != v28) {
            goto LABEL_87;
          }
          goto LABEL_42;
        }
        int v36 = v69;
        if (v24 == v33)
        {
          int v36 = 1;
          int v37 = 0;
        }
        else
        {
          int v37 = v68;
        }
        if (v24 - 1 == v33)
        {
          int v38 = *(__int16 *)(v21 + 36);
          if (v38 < v2[60]) {
            v2[60] = v38;
          }
          int v69 = 0;
          int v39 = *(_DWORD *)(a1 + 568) - 1;
        }
        else
        {
          int v69 = v36;
          int v39 = v37;
        }
        int v68 = v39;
        int v66 = (__int16)(*(_WORD *)(v21 + 2 * v39 + 24) - v2[56]);
        if (v66 <= v67)
        {
          if (*(__int16 *)(a1 + 456) == -1)
          {
            int v40 = 0;
          }
          else
          {
            __int16 v70 = sub_1000BD964(*(void *)(a1 + 376), v25, 0);
            int v40 = sub_1000BDCD4(*(void *)(a1 + 376), (uint64_t)&v70, 1u, *(unsigned __int16 *)(a1 + 456));
          }
          uint64_t v65 = *(void *)v21 & 0x7FFFFFFFFFFFFFFFLL;
          unsigned int v41 = *(_DWORD *)(a1 + 544);
          if (v41 <= 0xB && ((1 << v41) & 0x828) != 0)
          {
            v40 += sub_100025ED4(a1 + 680, *(unsigned int *)(a1 + 8872), v65);
            unsigned int v41 = *(_DWORD *)(a1 + 544);
          }
          int v42 = v2[56];
          int v43 = *(_DWORD *)(a1 + 9076);
          __int16 v64 = v40;
          if (v41 == 2) {
            LODWORD(v44) = 1;
          }
          else {
            uint64_t v44 = *(void *)v21 >> 63;
          }
          BOOL v45 = 1;
          int v63 = v44;
          if (*(_DWORD *)(a1 + 9008) && v44 && (!qword_100101CC0 || !*(_DWORD *)(qword_100101CC0 + 4736)))
          {
            int v46 = v2[56];
            int v61 = *(_DWORD *)(a1 + 9076);
            sub_10009F2D4(*(void *)(a1 + 9000), &v72, &v71);
            int v43 = v61;
            int v42 = v46;
            BOOL v45 = v71 == 0x40000000;
          }
          int v62 = v66 + v64 + v42 + v43;
          unint64_t v47 = *(unsigned int *)(v21 + 4 * v68 + 16);
          int v48 = v69;
          int v49 = sub_10009E750(*(unsigned int **)(a1 + 9000), v47, v25, v65, v69, v66, v2[132]);
          int v50 = v49;
          if (!v45)
          {
            int v51 = v72;
            if (v49 != v72)
            {
              __int16 v52 = v71 - v62;
              if (v71 <= v62)
              {
                __int16 v52 = v62 - v71;
                int v58 = v49;
                int v57 = v49;
                LOWORD(v53) = v66;
              }
              else
              {
                int v53 = v71 - (*(_DWORD *)(a1 + 9076) + (unsigned __int16)v2[56]);
                if (*(__int16 *)(a1 + 456) != -1)
                {
                  int v60 = v49;
                  __int16 v54 = v71 - v62;
                  unsigned int v55 = sub_10009F29C(*(void *)(a1 + 9000), v72);
                  __int16 v70 = sub_1000BD964(*(void *)(a1 + 376), v55, 0);
                  __int16 v56 = sub_1000BDCD4(*(void *)(a1 + 376), (uint64_t)&v70, 1u, *(unsigned __int16 *)(a1 + 456));
                  __int16 v52 = v54;
                  int v50 = v60;
                  LOWORD(v53) = v53 - (v56 - v64);
                  int v51 = v72;
                }
                int v57 = v51;
                int v58 = v50;
                int v51 = v50;
              }
              sub_1000241EC(*(uint64_t **)(a1 + 9016), v57, v51, v52, v53);
              int v48 = v69;
              int v50 = v58;
            }
          }
          if (!*(_DWORD *)(a1 + 9272) && v48) {
            goto LABEL_81;
          }
          if (!*(_DWORD *)(a1 + 9276) || v69) {
            break;
          }
        }
LABEL_84:
        if (sub_10009F2BC(*(void *)(a1 + 9000)))
        {
          *(_DWORD *)(a1 + 552) = 3;
          return;
        }
        if (!v19) {
          goto LABEL_87;
        }
        --v19;
LABEL_42:
        uint64_t v35 = *(void *)(a1 + 9024);
        uint64_t v21 = *(void *)(v35 + 8 * (v19 >> 8)) + 48 * v19;
        --v22;
        unsigned int v23 = (_OWORD *)(*(void *)(v35 + 8 * (v22 >> 8)) + 48 * v22);
        int v27 = v2[63];
        if (*(__int16 *)(v21 + 36) > v27) {
          goto LABEL_33;
        }
      }
      if ((__int16)(v2[56] + v2[66] + v66) <= v2[63])
      {
        int v59 = v50;
        (*(void (**)(uint64_t))(a1 + 9400))(a1);
        int v50 = v59;
      }
LABEL_81:
      if (v63 && v69) {
        sub_10009EBBC(*(void *)(a1 + 9000), v50, v62);
      }
      goto LABEL_84;
    }
  }
LABEL_87:
  if (*(_DWORD *)(a1 + 612) >= (*(_DWORD *)(a1 + 608) << 8) - 1) {
    *(_DWORD *)(a1 + 552) = 3;
  }
  if (!*(_DWORD *)(a1 + 8896)) {
    sub_100066DF0(a1);
  }
  *(_DWORD *)(a1 + 9044) = v26;
}

void sub_100073868(uint64_t a1)
{
  uint64_t v2 = (_WORD *)(a1 + 8936);
  *(void *)(a1 + 628) = 0x100000001;
  *(_WORD *)(a1 + 9048) = 0;
  *(_WORD *)(a1 + 9052) = -1;
  *(_WORD *)(a1 + 9056) = 0;
  *(_DWORD *)(a1 + 9044) = 1;
  *(_WORD *)(a1 + 8992) = -1;
  uint64_t v3 = *(void *)(a1 + 472);
  if (v3) {
    sub_1000D3EB4(v3, a1 + 9202, *(_DWORD *)(a1 + 9204), *(_DWORD *)(a1 + 8888));
  }
  uint64_t v4 = *(void *)(*(void *)(a1 + 9024) + 8 * ((*(_DWORD *)(a1 + 9040) - 1) & 0xFFFFFF));
  *(_WORD *)(v4 + 12272) = -1;
  *(void *)(v4 + 12240) = 0x7FFFFFFFFFFFFFFFLL;
  *(_DWORD *)(a1 + 624) = 0;
  *((unsigned char *)v2 + 14) = -1;
  *(void *)(a1 + 8912) = 0x7FFFFFFFFFFFFFFFLL;
  *(void *)(a1 + 8928) = -1;
  memset_pattern16(v2, &unk_1000F4890, 4uLL);
  *uint64_t v2 = 0;
  *(_DWORD *)(a1 + 8928) = 0;
  *(void *)(v2 + 2) = -65536;
  *(_DWORD *)(a1 + 8920) = 0;
  v2[6] = 0;
  v2[5] = sub_1000041E4(*(void *)(a1 + 384));
  int v5 = *(_DWORD *)(a1 + 544);
  int v6 = (v5 | 8) == 0xB || v5 == 5;
  sub_10009E6D4(*(void *)(a1 + 9000), *(_DWORD *)(a1 + 8888), v6);
  v2[132] = 0;
  *(void *)(a1 + 9376) = 0;
  *(_DWORD *)(a1 + 9076) = 0;
  if (*(_DWORD *)(a1 + 8896))
  {
    int v7 = *(_DWORD *)(a1 + 616);
    if (v7 >= 1)
    {
      for (int i = 0; i < v7; ++i)
      {
        *(_WORD *)(*(void *)(*(void *)(a1 + 592) + 8 * (i >> 8)) + 24 * i + 16) = 0x4000;
        int v7 = *(_DWORD *)(a1 + 616);
      }
    }
    *(_WORD *)(*(void *)(*(void *)(a1 + 592) + 8 * ((v7 - 1) >> 8))
             + 24 * (v7 - 1)
             + 14) = -1;
  }
  else
  {
    int v9 = *(_DWORD *)(a1 + 608) << 8;
    if (v9 >= 1)
    {
      for (unsigned int j = 0; j != v9; ++j)
        *(void *)(*(void *)(*(void *)(a1 + 592) + 8 * (j >> 8)) + 24 * j) = 0x7FFFFFFFFFFFFFFFLL;
    }
    *(_DWORD *)(**(void **)(a1 + 592) + 14) = 0xFFFF;
    *(_DWORD *)(a1 + 612) = 0;
  }
  *(_DWORD *)(a1 + 588) = 0;
  *(_DWORD *)(a1 + 9364) = 0;
  *(_DWORD *)(a1 + 552) = 1;
}

uint64_t sub_100073A64(uint64_t a1, __int16 *a2, uint64_t a3)
{
  int v6 = (_WORD *)(a1 + 9048);
  uint64_t result = sub_100015A34(*(void *)(a1 + 384), *(unsigned __int16 *)(a3 + 34));
  int v8 = *a2;
  int v9 = *(__int16 *)(a3 + 24);
  if (v8 < v9)
  {
    *(_WORD *)(a3 + 24) = *a2;
    *(_DWORD *)(a3 + 16) = *((_DWORD *)a2 + 1);
    *(_WORD *)(a3 + 28) = a2[4];
    *(_DWORD *)(a3 + 8) = *((_DWORD *)a2 + 3);
    int v9 = v8;
  }
  if (v9 <= (__int16)v6[7])
  {
    uint64_t v10 = *(unsigned __int16 *)result;
    uint64_t result = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 384) + 1792) + 2 * v10);
    if (result == 0x4000)
    {
      uint64_t result = sub_100015A48(*(void *)(a1 + 384), v10);
      LOWORD(v9) = *(_WORD *)(a3 + 24);
    }
    __int16 v11 = result - v6[5] + v9;
    *(_WORD *)(a3 + 24) = v11;
    *(_DWORD *)(a3 + 8) += (__int16)result;
    *(_WORD *)(a3 + 36) = v11;
    if (v11 < (__int16)*v6)
    {
      *int v6 = v11;
      v6[2] = *(_WORD *)(a3 + 32);
      v6[68] = *(_WORD *)(a3 + 34);
    }
  }
  else
  {
    *(_WORD *)(a3 + 36) = 0x4000;
    *(_WORD *)(a3 + 24) = 0x4000;
  }
  return result;
}

uint64_t sub_100073B68(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, int a5, _DWORD *a6)
{
  int v6 = (_WORD *)(result + 9048);
  if (*(__int16 *)(a3 + 16) - *(__int16 *)(result + 9058) <= *(__int16 *)(result + 9064))
  {
    uint64_t v8 = result;
    unint64_t v9 = *a6;
    if (a5 - 2 <= (int)v9)
    {
      *(_DWORD *)(result + 552) = 3;
    }
    else
    {
      __int16 v12 = a2;
      int v28 = 0;
      int v27 = 0;
      if (*(_DWORD *)(result + 556))
      {
        uint64_t v13 = (unsigned __int16 *)(a3 + 12);
      }
      else
      {
        sub_10009D254(*(void *)(result + 9256), a2, 0, &v27, &v28);
        uint64_t v13 = v27;
      }
      uint64_t v14 = *(void *)(*(void *)(v8 + 9024) + ((v9 >> 5) & 0x7FFFFF8));
      int v15 = *v13;
      uint64_t v16 = v14 + 48 * v9;
      *(_DWORD *)(v16 + 24) = 1073758208;
      long long v17 = (_WORD *)(v16 + 24);
      *(unsigned char *)(v16 + 38) = 0;
      *(_WORD *)(v16 + 32) = v12;
      long long v18 = (_WORD *)(v16 + 32);
      *(_WORD *)(v16 + 34) = v15;
      int v19 = (_WORD *)(v16 + 34);
      *(void *)uint64_t v16 = *(void *)a3;
      uint64_t result = sub_100015A34(*(void *)(v8 + 384), v15);
      if (*(_DWORD *)(v8 + 556)) {
        *(unsigned char *)(v14 + 48 * v9 + 39) = *(unsigned char *)(*(void *)(*(void *)(v8 + 600)
      }
                                                                                 + 8 * (a4 >> 8))
                                                                     + a4);
      int v20 = *(__int16 *)(a3 + 16);
      *long long v17 = *(_WORD *)(a3 + 16);
      __int16 v21 = v6[76];
      uint64_t v22 = v14 + 48 * v9;
      *(_DWORD *)(v22 + 8) = 0;
      unsigned int v23 = (int *)(v22 + 8);
      *((_WORD *)v23 + 10) = v21;
      v23[2] = *(_DWORD *)(a3 + 8);
      if (v20 <= (__int16)v6[7])
      {
        uint64_t v24 = *(unsigned __int16 *)result;
        uint64_t result = *(unsigned __int16 *)(*(void *)(*(void *)(v8 + 384) + 1792) + 2 * v24);
        if (result == 0x4000)
        {
          uint64_t result = sub_100015A48(*(void *)(v8 + 384), v24);
          LOWORD(v20) = *v17;
          int v25 = *v23;
        }
        else
        {
          int v25 = 0;
        }
        __int16 v26 = result - v6[5] + v20;
        *long long v17 = v26;
        *unsigned int v23 = v25 + (__int16)result;
        *(_WORD *)(v14 + 48 * v9 + 36) = v26;
        if (v26 < (__int16)*v6)
        {
          *int v6 = v26;
          v6[2] = *v18;
          v6[68] = *v19;
        }
      }
      else
      {
        *(_WORD *)(v14 + 48 * v9 + 36) = 0x4000;
        *long long v17 = 0x4000;
      }
      ++*a6;
    }
  }
  return result;
}

uint64_t sub_100073D74(uint64_t a1, _DWORD *a2, unsigned int *a3, uint64_t *a4, int *a5)
{
  uint64_t v5 = a1;
  if (a4) {
    uint64_t v6 = *a4;
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v114 = (_WORD *)(a1 + 9048);
  uint64_t v115 = 0;
  int v104 = *(__int16 *)(a1 + 9062);
  uint64_t v116 = 0;
  unint64_t v7 = *a2;
  uint64_t v8 = *(void *)(a1 + 9024);
  int v9 = *a5;
  uint64_t v10 = *a2;
  uint64_t v11 = *(void *)(v8 + 8 * (v7 >> 8)) + 48 * v10;
  unsigned int v110 = *a3;
  uint64_t v12 = *(void *)(v8 + (((unint64_t)*a3 >> 5) & 0x7FFFFF8)) + 48 * *a3;
  unsigned int v13 = *(unsigned __int16 *)(v11 + 32);
  if (!v6 || (unsigned int v14 = *(unsigned __int16 *)(v6 + 14), v14 > v13))
  {
    uint64_t v15 = (int)(~*(_DWORD *)(a1 + 620) + v13);
    uint64_t result = sub_100064238(*(void *)(*(void *)(a1 + 9328) + 8 * v15), 0);
    uint64_t v17 = *(void *)(v5 + 9024);
    uint64_t v18 = *(void *)(v17 + 8 * (v7 >> 8));
    if (*(unsigned __int16 *)(v18 + 48 * v10 + 32) != v13)
    {
      LODWORD(v29) = 0;
      uint64_t v22 = 0;
      LODWORD(v26) = 0xFFFF;
      uint64_t v24 = 0x4000;
      uint64_t v25 = 0xFFFFFFFFLL;
      unsigned int v19 = v7;
      uint64_t v30 = 0xFFFFLL;
      int v20 = v114;
      unsigned int v21 = v110;
      goto LABEL_23;
    }
    unsigned int v19 = v7;
    int v20 = v114;
    unsigned int v21 = v110;
    while (1)
    {
      uint64_t v22 = *(void *)(v18 + 48 * v10);
      if ((*(__int16 *)(result + 4 * (v22 & 0x3FFFFFF)) & 0x80000000) == 0)
      {
        uint64_t v23 = *(int *)(v5 + 568) - 1;
        uint64_t v24 = *(__int16 *)(v18 + 48 * v10 + 2 * v23 + 24);
        if ((int)v24 <= (__int16)v114[7]) {
          break;
        }
      }
      uint64_t v18 = *(void *)(v17 + 8 * (++v19 >> 8));
      uint64_t v10 = v19;
      if (*(unsigned __int16 *)(v18 + 48 * v19 + 32) != v13)
      {
        LODWORD(v29) = 0;
        uint64_t v22 = 0;
        LODWORD(v26) = 0xFFFF;
        uint64_t v24 = 0x4000;
        uint64_t v25 = 0xFFFFFFFFLL;
        uint64_t v30 = 0xFFFFLL;
        goto LABEL_23;
      }
    }
    uint64_t v25 = *(unsigned int *)(v18 + 48 * v10 + 4 * v23 + 16);
    LODWORD(v26) = *(unsigned __int16 *)(result + 4 * (v22 & 0x3FFFFFF) + 2);
    int v27 = (__int16 *)(result + 4 * (v22 & 0x3FFFFFF) + 4);
    do
    {
      int v28 = *v27;
      v27 += 2;
    }
    while (v28 < 0);
    LODWORD(v29) = (unsigned __int16)*(v27 - 1);
    uint64_t v30 = *(unsigned __int16 *)(v18 + 48 * v10 + 2 * v23 + 28);
LABEL_23:
    int v40 = v104;
    int v102 = 0;
    uint64_t v41 = *(unsigned __int16 *)(*(void *)(v5 + 9336) + 2 * v15);
    goto LABEL_24;
  }
  uint64_t v32 = (int)(~*(_DWORD *)(a1 + 620) + v14);
  uint64_t result = sub_100064238(*(void *)(*(void *)(a1 + 9328) + 8 * v32), 0);
  uint64_t v24 = *(__int16 *)(v6 + 16);
  uint64_t v25 = *(unsigned int *)(v6 + 8);
  int v20 = v114;
  uint64_t v30 = (unsigned __int16)v114[76];
  uint64_t v26 = *(unsigned __int16 *)(result + 2);
  int v33 = (__int16 *)(result + 4);
  uint64_t v22 = *(void *)v6;
  do
  {
    int v34 = *v33;
    v33 += 2;
  }
  while (v34 < 0);
  uint64_t v29 = (unsigned __int16)*(v33 - 1);
  *(_WORD *)(v6 + 16) = 0x4000;
  unsigned int v35 = v9 + 1;
  uint64_t v36 = *(void *)(v5 + 592);
  uint64_t v37 = *(void *)(v36 + 8 * ((v9 + 1) >> 8)) + 24 * (v9 + 1);
  int v38 = *(_DWORD *)(v5 + 9360) + *(_DWORD *)(v5 + 620);
  if (*(_WORD *)(v37 + 16) == 0x4000 && v9 < v38)
  {
    unsigned int v21 = v110;
    do
    {
      int v78 = v35++;
      uint64_t v79 = *(void *)(v36 + 8 * (v35 >> 8));
    }
    while (*(_WORD *)(v79 + 24 * v35 + 16) == 0x4000 && v78 < v38);
    uint64_t v37 = v79 + 24 * v35;
  }
  else
  {
    unsigned int v21 = v110;
  }
  *a5 = v35;
  *a4 = v37;
  uint64_t v41 = *(unsigned __int16 *)(*(void *)(v5 + 9336) + 2 * v32);
  if (*(unsigned __int16 *)(v6 + 14) >= v13)
  {
    int v102 = 1;
    unsigned int v19 = v7;
    int v40 = v104;
LABEL_24:
    LODWORD(v42) = *(_DWORD *)v11 & 0x3FFFFFF;
    uint64_t v99 = v41 << 53;
    uint64_t v93 = result + 4;
    uint64_t v96 = 0xFFFFLL;
    int v95 = -1;
    uint64_t v101 = v5;
    uint64_t v103 = result;
    unsigned int v100 = v13;
    while ((int)v26 >= (int)v42)
    {
      if (*(unsigned __int16 *)(v11 + 32) != v13) {
        goto LABEL_84;
      }
      if (*(__int16 *)(v11 + 36) <= v40)
      {
        long long v61 = *(_OWORD *)v11;
        long long v62 = *(_OWORD *)(v11 + 32);
        *(_OWORD *)(v12 + 16) = *(_OWORD *)(v11 + 16);
        *(_OWORD *)(v12 + 32) = v62;
        *(_OWORD *)uint64_t v12 = v61;
        if (v26 == v42)
        {
          LODWORD(v26) = v26 + 1;
          if ((int)v26 >= (int)v29)
          {
            if (!v102) {
              ++v19;
            }
            while (1)
            {
              uint64_t v66 = *(void *)(*(void *)(v5 + 9024) + 8 * (v19 >> 8));
              if (*(unsigned __int16 *)(v66 + 48 * v19 + 32) != v13)
              {
                int v102 = 0;
                LODWORD(v26) = 0xFFFF;
                unsigned int v112 = v25;
                int v63 = v25;
                __int16 v64 = v24;
                uint64_t v24 = 0x4000;
                goto LABEL_65;
              }
              uint64_t v67 = *(void *)(v66 + 48 * v19);
              if ((*(__int16 *)(result + 4 * (v67 & 0x3FFFFFF)) & 0x80000000) == 0)
              {
                uint64_t v68 = *(int *)(v5 + 568) - 1;
                uint64_t v69 = *(__int16 *)(v66 + 48 * v19 + 2 * v68 + 24);
                if ((int)v69 <= (__int16)v20[7]) {
                  break;
                }
              }
              ++v19;
            }
            unsigned int v112 = *(_DWORD *)(v66 + 48 * v19 + 4 * v68 + 16);
            LODWORD(v26) = *(unsigned __int16 *)(result + 4 * (v67 & 0x3FFFFFF) + 2);
            __int16 v70 = (__int16 *)(v93 + 4 * (v67 & 0x3FFFFFF));
            do
            {
              int v71 = *v70;
              v70 += 2;
            }
            while (v71 < 0);
            int v102 = 0;
            LODWORD(v29) = (unsigned __int16)*(v70 - 1);
            unsigned int v98 = *(unsigned __int16 *)(v66 + 48 * v19 + 2 * v68 + 28);
            int v63 = v25;
            uint64_t v22 = *(void *)(v66 + 48 * v19);
            __int16 v64 = v24;
            uint64_t v24 = v69;
          }
          else
          {
            unsigned int v112 = v25;
            int v63 = v25;
            __int16 v64 = v24;
LABEL_65:
            unsigned int v98 = v30;
          }
          uint64_t v65 = v30;
        }
        else
        {
          __int16 v64 = 0x4000;
          unsigned int v112 = v25;
          unsigned int v98 = v30;
          int v63 = v95;
          uint64_t v65 = v96;
        }
        uint64_t v72 = v24;
        uint64_t v106 = v22;
        int v109 = v29;
        int v73 = v21;
        LOWORD(v115) = v64;
        HIDWORD(v115) = v63;
        uint64_t v96 = v65;
        LOWORD(v116) = v65;
        if (*(_WORD *)(v12 + 34))
        {
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v5 + 9416))(v5, &v115, v12);
          int v20 = v114;
        }
        else
        {
          uint64_t result = sub_100015A34(*(void *)(v5 + 384), 0);
          int v74 = (__int16)v115;
          int v75 = *(__int16 *)(v12 + 24);
          if ((__int16)v115 < v75)
          {
            *(_WORD *)(v12 + 24) = v115;
            *(_DWORD *)(v12 + 16) = HIDWORD(v115);
            *(_WORD *)(v12 + 28) = v116;
            *(_DWORD *)(v12 + 8) = HIDWORD(v116);
            int v75 = v74;
          }
          int v20 = v114;
          if (v75 <= (__int16)v114[7])
          {
            uint64_t v76 = *(unsigned __int16 *)result;
            uint64_t result = *(unsigned __int16 *)(*(void *)(*(void *)(v5 + 384) + 1792) + 2 * v76);
            if (result == 0x4000)
            {
              uint64_t result = sub_100015A48(*(void *)(v5 + 384), v76);
              int v20 = v114;
              LOWORD(v75) = *(_WORD *)(v12 + 24);
            }
            __int16 v77 = result - v20[5] + v75;
            *(_WORD *)(v12 + 24) = v77;
            *(_DWORD *)(v12 + 8) += (__int16)result;
            *(_WORD *)(v12 + 36) = v77;
            if (v77 < (__int16)*v20)
            {
              *int v20 = v77;
              v20[2] = *(_WORD *)(v12 + 32);
              v20[68] = *(_WORD *)(v12 + 34);
            }
          }
          else
          {
            *(_WORD *)(v12 + 36) = 0x4000;
            *(_WORD *)(v12 + 24) = 0x4000;
          }
        }
        unsigned int v21 = v73;
        if ((int)(v19 - 2) <= v73) {
          goto LABEL_95;
        }
        int v95 = v63;
        LODWORD(v7) = v7 + 1;
        uint64_t v11 = *(void *)(*(void *)(v5 + 9024) + 8 * (v7 >> 8)) + 48 * v7;
        if (*(unsigned __int16 *)(v11 + 32) == v13) {
          uint64_t v42 = *(void *)v11 & 0x3FFFFFFLL;
        }
        else {
          LODWORD(v42) = 0xFFFF;
        }
        uint64_t result = v103;
        LODWORD(v29) = v109;
        uint64_t v22 = v106;
        uint64_t v24 = v72;
        uint64_t v49 = v112;
        uint64_t v30 = v98;
LABEL_82:
        if (*(_DWORD *)(v5 + 552) == 3)
        {
LABEL_84:
          *a2 = v7;
          goto LABEL_85;
        }
        ++v21;
        uint64_t v12 = *(void *)(*(void *)(v5 + 9024) + 8 * (v21 >> 8)) + 48 * v21;
        uint64_t v25 = v49;
      }
      else
      {
        LODWORD(v7) = v7 + 1;
        uint64_t v11 = *(void *)(*(void *)(v5 + 9024) + 8 * (v7 >> 8)) + 48 * v7;
        if (*(unsigned __int16 *)(v11 + 32) == v13) {
          uint64_t v42 = *(void *)v11 & 0x3FFFFFFLL;
        }
        else {
          LODWORD(v42) = 0xFFFF;
        }
      }
    }
    if ((int)(v19 - 2) <= (int)v21) {
      goto LABEL_95;
    }
    int v108 = v29;
    unsigned int v111 = v21;
    *(_DWORD *)(v12 + 24) = 1073758208;
    *(_WORD *)(v12 + 32) = v13;
    *(unsigned char *)(v12 + 38) = 0;
    int v43 = *(_WORD *)(result + 4 * (int)v26) & 0x7FFF;
    *(_WORD *)(v12 + 34) = v43;
    uint64_t v105 = v22;
    *(void *)uint64_t v12 = v99 + (int)v26 + (v22 & 0x8000000000000000);
    uint64_t v44 = v25;
    uint64_t v45 = v24;
    uint64_t v46 = v30;
    unint64_t v47 = (unsigned __int16 *)sub_100015A34(*(void *)(v5 + 384), v43);
    uint64_t v48 = v46;
    uint64_t v24 = v45;
    uint64_t v49 = v44;
    int v20 = v114;
    *(_WORD *)(v12 + 24) = v45;
    *(_DWORD *)(v12 + 16) = v44;
    *(_WORD *)(v12 + 28) = v46;
    if ((__int16)v114[7] >= (__int16)v45)
    {
      uint64_t v50 = *v47;
      int v51 = *(unsigned __int16 *)(*(void *)(*(void *)(v5 + 384) + 1792) + 2 * v50);
      __int16 v52 = v45;
      if (v51 == 0x4000)
      {
        LOWORD(v51) = sub_100015A48(*(void *)(v5 + 384), v50);
        uint64_t v48 = v46;
        uint64_t v24 = v45;
        uint64_t v49 = v44;
        int v20 = v114;
        __int16 v52 = *(_WORD *)(v12 + 24);
      }
      __int16 v53 = v51 - v20[5] + v52;
      *(_WORD *)(v12 + 24) = v53;
      *(_DWORD *)(v12 + 8) += (__int16)v51;
      *(_WORD *)(v12 + 36) = v53;
      uint64_t v22 = v105;
      if (v53 < (__int16)*v20)
      {
        *int v20 = v53;
        v20[2] = *(_WORD *)(v12 + 32);
        v20[68] = *(_WORD *)(v12 + 34);
      }
    }
    else
    {
      *(_WORD *)(v12 + 36) = 0x4000;
      *(_WORD *)(v12 + 24) = 0x4000;
      uint64_t v22 = v105;
    }
    LODWORD(v26) = v26 + 1;
    LODWORD(v29) = v108;
    unsigned int v21 = v111;
    uint64_t result = v103;
    uint64_t v5 = v101;
    unsigned int v13 = v100;
    if ((int)v26 >= v108)
    {
      if (!v102) {
        ++v19;
      }
      uint64_t v54 = *(void *)(v101 + 9024);
      uint64_t v55 = *(void *)(v54 + 8 * (v19 >> 8));
      uint64_t v56 = v19;
      int v40 = v104;
      if (*(unsigned __int16 *)(v55 + 48 * v19 + 32) == v100)
      {
        while (1)
        {
          uint64_t v57 = *(void *)(v55 + 48 * v56);
          if ((*(__int16 *)(v103 + 4 * (v57 & 0x3FFFFFF)) & 0x80000000) == 0)
          {
            uint64_t v58 = *(int *)(v101 + 568) - 1;
            uint64_t v24 = *(__int16 *)(v55 + 48 * v56 + 2 * v58 + 24);
            if ((int)v24 <= (__int16)v20[7]) {
              break;
            }
          }
          uint64_t v55 = *(void *)(v54 + 8 * (++v19 >> 8));
          uint64_t v56 = v19;
          if (*(unsigned __int16 *)(v55 + 48 * v19 + 32) != v100) {
            goto LABEL_43;
          }
        }
        uint64_t v49 = *(unsigned int *)(v55 + 48 * v56 + 4 * v58 + 16);
        LODWORD(v26) = *(unsigned __int16 *)(v103 + 4 * (v57 & 0x3FFFFFF) + 2);
        int v59 = (__int16 *)(v93 + 4 * (v57 & 0x3FFFFFF));
        do
        {
          int v60 = *v59;
          v59 += 2;
        }
        while (v60 < 0);
        int v102 = 0;
        LODWORD(v29) = (unsigned __int16)*(v59 - 1);
        uint64_t v30 = *(unsigned __int16 *)(v55 + 48 * v56 + 2 * v58 + 28);
        uint64_t v22 = *(void *)(v55 + 48 * v56);
      }
      else
      {
LABEL_43:
        int v102 = 0;
        uint64_t v24 = 0x4000;
        LODWORD(v26) = 0xFFFF;
        uint64_t v30 = v48;
      }
    }
    else
    {
      uint64_t v30 = v48;
      int v40 = v104;
    }
    goto LABEL_82;
  }
  if ((int)v7 - 2 >= (int)(v21 - v26 + v29))
  {
    if (v26 < v29)
    {
      int v81 = (_WORD *)(result + 4 * v26);
      unint64_t v113 = (v41 << 53) - (v22 & 0x8000000000000000);
      do
      {
        uint64_t v83 = v29;
        unsigned int v84 = v21;
        *(_DWORD *)(v12 + 24) = 1073758208;
        *(_WORD *)(v12 + 32) = *(_WORD *)(v6 + 14);
        *(unsigned char *)(v12 + 38) = 0;
        *(void *)uint64_t v12 = v113 + v26;
        int v85 = *v81 & 0x7FFF;
        *(_WORD *)(v12 + 34) = *v81 & 0x7FFF;
        uint64_t v86 = v25;
        uint64_t v87 = v24;
        uint64_t v88 = v30;
        uint64_t result = sub_100015A34(*(void *)(v5 + 384), v85);
        uint64_t v30 = v88;
        uint64_t v24 = v87;
        uint64_t v25 = v86;
        int v89 = *(__int16 *)(v12 + 24);
        if ((int)v87 < v89)
        {
          *(_WORD *)(v12 + 24) = v87;
          *(_DWORD *)(v12 + 16) = v86;
          int v89 = v87;
          *(_WORD *)(v12 + 28) = v88;
        }
        uint64_t v90 = v114;
        if (v89 > (__int16)v114[7])
        {
          *(_WORD *)(v12 + 36) = 0x4000;
          *(_WORD *)(v12 + 24) = 0x4000;
          unsigned int v82 = v84;
          uint64_t v29 = v83;
        }
        else
        {
          uint64_t v91 = *(unsigned __int16 *)result;
          uint64_t result = *(unsigned __int16 *)(*(void *)(*(void *)(v5 + 384) + 1792) + 2 * v91);
          if (result == 0x4000)
          {
            uint64_t result = sub_100015A48(*(void *)(v5 + 384), v91);
            uint64_t v30 = v88;
            uint64_t v24 = v87;
            uint64_t v25 = v86;
            uint64_t v90 = v114;
            LOWORD(v89) = *(_WORD *)(v12 + 24);
          }
          __int16 v92 = result - v90[5] + v89;
          *(_WORD *)(v12 + 24) = v92;
          *(_DWORD *)(v12 + 8) += (__int16)result;
          *(_WORD *)(v12 + 36) = v92;
          unsigned int v82 = v84;
          uint64_t v29 = v83;
          if (v92 < (__int16)*v90)
          {
            *uint64_t v90 = v92;
            v90[2] = *(_WORD *)(v12 + 32);
            v90[68] = *(_WORD *)(v12 + 34);
          }
        }
        unsigned int v21 = v82 + 1;
        uint64_t v12 = *(void *)(*(void *)(v5 + 9024) + 8 * (v21 >> 8)) + 48 * v21;
        v81 += 2;
        ++v26;
      }
      while (v26 < v29);
    }
LABEL_85:
    *a3 = v21;
  }
  else
  {
LABEL_95:
    *(_DWORD *)(v5 + 552) = 3;
  }
  return result;
}

uint64_t sub_1000747AC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 9040) << 8;
  int v2 = *(_DWORD *)(a1 + 9044);
  if (v1 - v2 >= v1 - 1) {
    return 1;
  }
  int v16 = 0;
  uint64_t v15 = 0;
  int v4 = -v2;
  while (1)
  {
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a1 + 9024) + 8 * ((v1 + v4) >> 8))
                   + 48 * (v1 + v4));
    int v6 = v5 & 0x3FF;
    uint64_t v7 = (v5 >> 10) & 0x1FFFFFF;
    uint64_t v8 = (v5 >> 35) & 0x3FFFF;
    uint64_t v15 = *(void *)(a1 + 8 * ((v5 >> 53) & 0x3FF) + 680);
    uint64_t v9 = sub_10002BD6C((uint64_t)&v15, 1);
    sub_1000339F8(v9, v8, v7, &v16, v10, v11, v12, v13);
    if (v6 != v16 - 1) {
      break;
    }
    if (++v4 == -1) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_100074894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v53 = a4;
  int v49 = a3;
  uint64_t v8 = (char *)a2;
  uint64_t v9 = a1;
  uint64_t v10 = 0;
  int v11 = *(_DWORD *)(a1 + 9040) << 8;
  unsigned int v12 = v11 - *(_DWORD *)(a1 + 9044);
  uint64_t v13 = *(void *)(a1 + 9024);
  uint64_t v14 = *(void *)(v13 + 8 * (v12 >> 8)) + 48 * -*(unsigned char *)(a1 + 9044);
  unsigned int v55 = 0;
  uint64_t v54 = (unsigned int **)(a1 + 680);
  uint64_t v50 = (_WORD *)(a1 + 9200);
  int v15 = v11 - 1;
  int v16 = 0xFFFF;
  for (unsigned int i = *(unsigned __int16 *)(v14 + 32); i != 0xFFFF; unsigned int i = *(unsigned __int16 *)(v14 + 32))
  {
    if (i != (unsigned __int16)v16)
    {
LABEL_3:
      uint64_t v10 = sub_10009DA20(*(void *)(v9 + 9256), i);
      int v16 = i;
    }
LABEL_4:
    int v18 = *(unsigned __int8 *)(v14 + 38);
    if (!qword_100101CC0 || (*(_DWORD *)(qword_100101CC0 + 816) ? (BOOL v19 = v10 == v18) : (BOOL v19 = 1), v19))
    {
      if (v10 != v18) {
        goto LABEL_37;
      }
    }
    else
    {
      uint64_t v21 = v10;
      int v22 = sub_10002BD4C(*(void *)(v9 + 8 * ((*(void *)v14 >> 53) & 0x3FFLL) + 680), *(void *)v14);
      uint64_t v10 = v21;
      if (!v22) {
        goto LABEL_37;
      }
    }
    if ((v10 != 1 && *(_DWORD *)(v9 + 544) == 2 || (*(void *)v14 & 0x8000000000000000) != 0)
      && *(_WORD *)(v14 + 24) != 0x4000)
    {
      int v46 = *(__int16 *)(v14 + 24);
      unsigned int v47 = v10;
      int v52 = v16;
      int v48 = v11;
      int v51 = v8;
      unsigned int v23 = *(_DWORD *)(v14 + 16);
      int v56 = 0;
      int v24 = v55;
      unint64_t v25 = sub_1000CD3E8(1096, a2, a3, a4, a5, a6, a7, a8);
      uint64_t v26 = sub_10002BD6C((uint64_t)v54, *(_DWORD *)(v9 + 8872));
      *(_DWORD *)(v25 + 12) = 1;
      *(_OWORD *)(v25 + 264) = 0u;
      *(_OWORD *)(v25 + 280) = 0u;
      *(_OWORD *)(v25 + 296) = 0u;
      if (v53) {
        uint64_t v27 = v25 + 264;
      }
      else {
        uint64_t v27 = 0;
      }
      *(_OWORD *)(v25 + 307) = 0uLL;
      unsigned int v45 = v23;
      int v28 = sub_10009EFC4(*(void *)(v9 + 9000), v23, v25 + 28, v25 + 384, v25 + 323, v25 + 856, (__int16 *)(v25 + 146), v27, 59, &v56);
      *(_DWORD *)(v25 + 8) = v28;
      if (v28 <= 58)
      {
        LODWORD(v34) = v28;
        uint64_t v44 = v9;
        if (v26)
        {
          if (v28 >= 1)
          {
            int v35 = v24;
            uint64_t v36 = 0;
            do
            {
              *(_DWORD *)(v25 + 4 * v36 + 620) = sub_100031A50(v26, *(unsigned int *)(v25 + 4 * v36 + 384), *(unsigned int *)(v25 + 4 * v36 + 856), v29, v30, v31, v32, v33);
              ++v36;
              uint64_t v34 = *(int *)(v25 + 8);
            }
            while (v36 < v34);
            int v24 = v35;
            uint64_t v9 = v44;
          }
        }
        else
        {
          bzero((void *)(v25 + 620), 4 * v28);
        }
        uint64_t v37 = (*(void *)v14 >> 53) & 0x3FFLL;
        int v56 = (*(void *)v14 >> 53) & 0x3FF;
        *(void *)(v25 + 16) = *(void *)(v9 + 8 * v37 + 680);
        *(_WORD *)(v25 + 2 * (int)v34 + 28) = v52;
        *(_DWORD *)(v25 + 4 * *(int *)(v25 + 8) + 384) = (*(void *)v14 >> 35) & 0x3FFFF;
        *(unsigned char *)(v25 + *(int *)(v25 + 8) + 323) = (*(void *)v14 & 0x3FFLL) == 0;
        *(_WORD *)(v25 + 2 * (int)(*(_DWORD *)(v25 + 8))++ + 146) = *v50 - 1;
        *(_DWORD *)unint64_t v25 = *(_DWORD *)(v9 + 9076) + v46;
        signed int v43 = v24 - 1;
        if (v24 < 1)
        {
LABEL_35:
          uint64_t v9 = v44;
          sub_100074F80(v44, (unsigned __int16)v52, v14, v46, v45, v51, (int *)&v55, v49, v53);
        }
        else
        {
          int v38 = v24;
          signed int v39 = 0;
          int v40 = 1096 * v38 - 1096;
          uint64_t v41 = v51;
          while (sub_100024398(v25, (uint64_t)v41))
          {
            v41 += 1096;
            ++v39;
            v40 -= 1096;
            if (v38 == v39) {
              goto LABEL_35;
            }
          }
          uint64_t v9 = v44;
          if (*(_DWORD *)v25 < *(_DWORD *)v41)
          {
            unsigned int v55 = v43;
            if (v39 < v43) {
              j__memmove(v41, v41 + 1096, v40);
            }
            goto LABEL_35;
          }
        }
      }
      sub_1000CD4D0((void *)v25, 1096);
      uint64_t v8 = v51;
      uint64_t v10 = v47;
      int v11 = v48;
      int v16 = v52;
    }
LABEL_37:
    if (++v12 == v11) {
      goto LABEL_43;
    }
    uint64_t v13 = *(void *)(v9 + 9024);
    uint64_t v14 = *(void *)(v13 + 8 * (v12 >> 8)) + 48 * v12;
  }
  while (v15 != v12)
  {
    uint64_t v20 = *(void *)(v13 + 8 * (++v12 >> 8));
    unsigned int i = *(unsigned __int16 *)(v20 + 48 * v12 + 32);
    if (i != 0xFFFF)
    {
      uint64_t v14 = v20 + 48 * v12;
      if (i == (unsigned __int16)v16) {
        goto LABEL_4;
      }
      goto LABEL_3;
    }
  }
LABEL_43:
  if (*(int *)(v9 + 8872) >= 1 && sub_100025D50(*v54) == 3) {
    sub_100025CA8(v8, (int *)&v55);
  }
  else {
    sub_100024E48(*(void *)(v9 + 376), (unint64_t)v8, (int *)&v55);
  }
  return v55;
}

uint64_t sub_100074CD0(uint64_t a1, char *a2, int a3, int a4)
{
  int v28 = 0;
  int v26 = 0;
  HIDWORD(v29) = 0;
  uint64_t v25 = *(void *)(a1 + 376);
  int v5 = *(_DWORD *)(a1 + 9040) << 8;
  unsigned int v6 = v5 - *(_DWORD *)(a1 + 9044);
  uint64_t v7 = *(void *)(a1 + 9024);
  uint64_t v8 = *(void *)(v7 + 8 * (v6 >> 8)) + 48 * -*(unsigned char *)(a1 + 9044);
  LOWORD(v9) = -1;
  while (1)
  {
    int v10 = *(unsigned __int16 *)(v8 + 32);
    if (v10 != 0xFFFF) {
      break;
    }
    if (++v6 == v5) {
      goto LABEL_33;
    }
LABEL_3:
    uint64_t v8 = *(void *)(v7 + 8 * (v6 >> 8)) + 48 * v6;
  }
  __int16 v11 = *(_WORD *)(v8 + 24);
  unint64_t v12 = *(unsigned int *)(v8 + 16);
  int v13 = *(_DWORD *)(a1 + 620);
  if (v13 >= v10)
  {
    if (v10 != (unsigned __int16)v9)
    {
      int v26 = sub_10009DA20(*(void *)(a1 + 9256), *(unsigned __int16 *)(v8 + 32));
      LOWORD(v9) = v10;
    }
    int v16 = *(unsigned __int8 *)(v8 + 38);
    if (!qword_100101CC0 || (*(_DWORD *)(qword_100101CC0 + 816) ? (BOOL v17 = v26 == v16) : (BOOL v17 = 1), v17))
    {
      if (v26 != v16) {
        goto LABEL_32;
      }
    }
    else
    {
      if (!sub_10002BD4C(*(void *)(a1 + 8 * ((*(void *)v8 >> 53) & 0x3FFLL) + 680), *(void *)v8)) {
        goto LABEL_32;
      }
      if (*(unsigned __int16 *)(v8 + 36) != *(unsigned __int16 *)(v8 + 24))
      {
        __int16 v11 = *(_WORD *)(v8 + 26);
        unint64_t v12 = *(unsigned int *)(v8 + 20);
      }
    }
    BOOL v19 = (_WORD *)(v8 + 24);
    if (*(_DWORD *)(a1 + 544) == 2)
    {
      int v28 = 1;
LABEL_30:
      if (*v19 != 0x4000) {
        sub_100074F80(a1, (unsigned __int16)v9, v8, v11, v12, a2, (int *)&v29 + 1, a3, a4);
      }
      goto LABEL_32;
    }
    uint64_t v20 = *(void *)v8 >> 63;
    int v28 = v20;
LABEL_29:
    if (!v20) {
      goto LABEL_32;
    }
    goto LABEL_30;
  }
  uint64_t v14 = sub_100064238(*(void *)(*(void *)(a1 + 9328) + 8 * (~v13 + v10)), 0);
  uint64_t v15 = *(void *)v8 & 0x3FFFFFFLL;
  if ((*(__int16 *)(v14 + 4 * v15) & 0x80000000) == 0)
  {
    if (++v6 == v5) {
      goto LABEL_33;
    }
    goto LABEL_8;
  }
  unsigned int v9 = *(unsigned __int16 *)(v14 + 4 * v15 + 2);
  sub_1000266D8(*(void *)(a1 + 8 * ((*(void *)v8 >> 53) & 0x3FFLL) + 680));
  if (!*(_DWORD *)(a1 + 9284)
    || v12 == -1
    || (unsigned int v18 = sub_10009F29C(*(void *)(a1 + 9000), v12), sub_1000BDE10(v25, v18, v9)))
  {
    BOOL v19 = (_WORD *)(v8 + 24);
    LODWORD(v20) = v28;
    goto LABEL_29;
  }
LABEL_32:
  if (++v6 != v5)
  {
LABEL_8:
    uint64_t v7 = *(void *)(a1 + 9024);
    goto LABEL_3;
  }
LABEL_33:
  if (*(int *)(a1 + 8872) >= 1 && sub_100025D50(*(unsigned int **)(a1 + 680)) == 3) {
    sub_100025CA8(a2, (int *)&v29 + 1);
  }
  else {
    sub_100024E48(*(void *)(a1 + 376), (unint64_t)a2, (int *)&v29 + 1);
  }
  return HIDWORD(v29);
}

void *sub_100074F80(uint64_t a1, unsigned int a2, uint64_t a3, int a4, unint64_t a5, _DWORD *a6, int *a7, int a8, int a9)
{
  unsigned int v50 = 0;
  int v14 = *a7;
  __int16 v49 = 0;
  uint64_t v15 = (unsigned int **)(a1 + 680);
  int v16 = (uint64_t *)sub_10002BD6C(a1 + 680, *(_DWORD *)(a1 + 8872));
  int v24 = (_DWORD *)sub_1000CD3E8(1096, v17, v18, v19, v20, v21, v22, v23);
  bzero(v24, 0x448uLL);
  v24[3] = 1;
  *(_OWORD *)(v24 + 66) = 0u;
  *(_OWORD *)(v24 + 70) = 0u;
  *(_OWORD *)(v24 + 74) = 0u;
  *(_OWORD *)((char *)v24 + 307) = 0u;
  if (a9) {
    uint64_t v25 = (uint64_t)(v24 + 66);
  }
  else {
    uint64_t v25 = 0;
  }
  if (*(int *)(a1 + 8872) >= 1 && sub_100025D50(*v15) == 3)
  {
    int v26 = *(unsigned __int16 *)(a3 + 32);
    int v27 = *(_DWORD *)(a1 + 620);
    if (v27 >= v26)
    {
      unint64_t v29 = *(void *)a3 & 0x7FFFFFFFFFFFFFFFLL;
    }
    else
    {
      uint64_t v48 = 0;
      BOOL v47 = 0;
      uint64_t v28 = *(unsigned int *)(*(void *)(a1 + 9344) + 4 * (~v27 + v26));
      unsigned int v50 = (*(void *)a3 >> 53) & 0x3FF;
      sub_1000340F4(v16, v28, a2, (unsigned int *)&v48 + 1, (int *)&v48, &v47);
      unint64_t v29 = ((unint64_t)v50 << 53) + (v28 << 35) + ((uint64_t)SHIDWORD(v48) << 10);
    }
    v24[6] = sub_10009E750(*(unsigned int **)(a1 + 9000), a5, a2, v29, 0, 0, *(_WORD *)(a1 + 9200));
    char v38 = 1;
    goto LABEL_18;
  }
  int v30 = sub_10009EFC4(*(void *)(a1 + 9000), a5, (uint64_t)(v24 + 7), (uint64_t)(v24 + 96), (uint64_t)v24 + 323, (uint64_t)(v24 + 214), (__int16 *)v24 + 73, v25, 59, &v50);
  v24[2] = v30;
  if (v30 <= 58)
  {
    LODWORD(v36) = v30;
    if (v16)
    {
      if (v30 >= 1)
      {
        uint64_t v37 = 0;
        do
        {
          v24[v37 + 155] = sub_100031A50((uint64_t)v16, v24[v37 + 96], v24[v37 + 214], v31, v32, v33, v34, v35);
          ++v37;
          uint64_t v36 = (int)v24[2];
        }
        while (v37 < v36);
      }
    }
    else
    {
      bzero(v24 + 155, 4 * v30);
    }
    char v38 = 0;
    *((_WORD *)v24 + (int)v36 + 14) = a2;
    v24[v24[2] + 96] = (*(void *)a3 >> 35) & 0x3FFFF;
    *((unsigned char *)v24 + v24[2] + 323) = (*(void *)a3 & 0x3FFLL) == 0;
    *((_WORD *)v24 + v24[2]++ + 73) = *(_WORD *)(a1 + 9200) - 1;
LABEL_18:
    uint64_t v39 = (*(void *)a3 >> 53) & 0x3FFLL;
    unsigned int v50 = (*(void *)a3 >> 53) & 0x3FF;
    *((void *)v24 + 2) = *(void *)(a1 + 8 * v39 + 680);
    *int v24 = *(_DWORD *)(a1 + 9076) + a4;
    *((_WORD *)v24 + 2) = 0;
    unsigned int v40 = *(_DWORD *)(a1 + 544);
    if ((v40 > 0xB || ((1 << v40) & 0x828) == 0) && *(__int16 *)(a1 + 456) != -1)
    {
      __int16 v49 = sub_1000BD964(*(void *)(a1 + 376), a2, 0);
      *v24 += sub_1000BDCD4(*(void *)(a1 + 376), (uint64_t)&v49, 1u, *(unsigned __int16 *)(a1 + 456));
    }
    if (v38)
    {
      if (v14 >= 1)
      {
        int v41 = 0;
        while ((sub_100024450(v24, a6) & 0x80000000) == 0)
        {
          a6 += 274;
          if (v14 == ++v41) {
            goto LABEL_30;
          }
        }
        goto LABEL_31;
      }
    }
    else if (v14 >= 1)
    {
      int v41 = 0;
      while ((sub_1000242D0(v24, a6) & 0x80000000) == 0)
      {
        a6 += 274;
        if (v14 == ++v41)
        {
LABEL_30:
          int v41 = v14;
          break;
        }
      }
LABEL_31:
      int v42 = v14 - v41;
      if (v14 < a8) {
        goto LABEL_32;
      }
      goto LABEL_36;
    }
    int v41 = 0;
    int v42 = v14;
    if (v14 < a8)
    {
LABEL_32:
      *a7 = v14 + 1;
      if (v42 < 1)
      {
LABEL_34:
        memcpy(a6, v24, 0x448uLL);
        return sub_1000CD4D0(v24, 1096);
      }
LABEL_33:
      j__memmove(a6 + 274, a6, 1096 * v42);
      goto LABEL_34;
    }
LABEL_36:
    if (v14 == v41) {
      return sub_1000CD4D0(v24, 1096);
    }
    if (--v42 < 1) {
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  return sub_1000CD4D0(v24, 1096);
}

uint64_t sub_100075358(uint64_t a1, __int16 *a2, uint64_t a3)
{
  unsigned int v6 = (_WORD *)(a1 + 8946);
  int v7 = *(unsigned __int16 *)(a3 + 34);
  int v8 = *(unsigned __int16 *)(a1 + 8946);
  uint64_t result = sub_100015A34(*(void *)(a1 + 384), v7);
  int v10 = (unsigned __int16 *)result;
  if (v7 == v8)
  {
    int v11 = *a2;
    int v12 = *(__int16 *)(a3 + 24);
    if (v11 < v12)
    {
      *(_WORD *)(a3 + 24) = *a2;
      *(_DWORD *)(a3 + 16) = *((_DWORD *)a2 + 1);
      *(_WORD *)(a3 + 28) = a2[4];
      *(_DWORD *)(a3 + 8) = *((_DWORD *)a2 + 3);
      int v12 = v11;
    }
    if (v12 > (__int16)v6[58])
    {
      *(_WORD *)(a3 + 36) = 0x4000;
      *(_WORD *)(a3 + 24) = 0x4000;
      return result;
    }
    uint64_t v17 = *(unsigned __int16 *)result;
    uint64_t result = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 384) + 1792) + 2 * v17);
    if (result == 0x4000)
    {
      uint64_t result = sub_100015A48(*(void *)(a1 + 384), v17);
      LOWORD(v12) = *(_WORD *)(a3 + 24);
    }
    __int16 v18 = result - v6[56] + v12;
    *(_WORD *)(a3 + 24) = v18;
    *(_DWORD *)(a3 + 8) += (__int16)result;
    *(_WORD *)(a3 + 36) = v18;
    if (v18 < (__int16)v6[51])
    {
      v6[51] = v18;
LABEL_28:
      v6[53] = *(_WORD *)(a3 + 32);
      v6[119] = *(_WORD *)(a3 + 34);
      return result;
    }
    return result;
  }
  int v13 = *(__int16 *)(a3 + 24);
  int v14 = *(__int16 *)(a3 + 26);
  if (v13 < v14)
  {
    *(_WORD *)(a3 + 26) = *(_WORD *)(a3 + 24);
    *(_DWORD *)(a3 + 20) = *(_DWORD *)(a3 + 16);
    *(_WORD *)(a3 + 30) = *(_WORD *)(a3 + 28);
    *(_DWORD *)(a3 + 12) = *(_DWORD *)(a3 + 8);
    int v14 = v13;
  }
  if (v14 > (__int16)v6[58])
  {
    __int16 v15 = 0x4000;
    *(_WORD *)(a3 + 36) = 0x4000;
    *(_WORD *)(a3 + 26) = 0x4000;
    int v16 = *a2;
    if (v16 >= (__int16)v13) {
      goto LABEL_20;
    }
LABEL_19:
    *(_WORD *)(a3 + 24) = v16;
    *(_DWORD *)(a3 + 16) = *((_DWORD *)a2 + 1);
    *(_WORD *)(a3 + 28) = a2[4];
    *(_DWORD *)(a3 + 8) = *((_DWORD *)a2 + 3);
    LOWORD(v13) = v16;
    goto LABEL_20;
  }
  uint64_t v19 = *(unsigned __int16 *)(result + 2);
  uint64_t result = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 384) + 1792) + 2 * v19);
  if (result == 0x4000)
  {
    uint64_t result = sub_100015A48(*(void *)(a1 + 384), v19);
    LOWORD(v14) = *(_WORD *)(a3 + 26);
    LOWORD(v13) = *(_WORD *)(a3 + 24);
  }
  __int16 v15 = result - v6[56] + v14;
  *(_WORD *)(a3 + 26) = v15;
  *(_DWORD *)(a3 + 12) += (__int16)result;
  *(_WORD *)(a3 + 36) = v15;
  int v16 = *a2;
  if (v16 < (__int16)v13) {
    goto LABEL_19;
  }
LABEL_20:
  if ((__int16)v6[58] >= (__int16)v13)
  {
    uint64_t v20 = *v10;
    uint64_t result = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 384) + 1792) + 2 * v20);
    if (result == 0x4000)
    {
      uint64_t result = sub_100015A48(*(void *)(a1 + 384), v20);
      LOWORD(v13) = *(_WORD *)(a3 + 24);
      __int16 v15 = *(_WORD *)(a3 + 36);
    }
    __int16 v21 = result - v6[56] + v13;
    *(_WORD *)(a3 + 24) = v21;
    *(_DWORD *)(a3 + 8) += (__int16)result;
    if (v21 < v15)
    {
      *(_WORD *)(a3 + 36) = v21;
      __int16 v15 = v21;
    }
  }
  else
  {
    *(_WORD *)(a3 + 24) = 0x4000;
  }
  if ((__int16)v6[51] > v15)
  {
    v6[51] = v15;
    goto LABEL_28;
  }
  return result;
}

uint64_t sub_1000755D8(uint64_t a1, _DWORD *a2, int *a3, int a4, uint64_t *a5)
{
  int v8 = (unsigned __int16 *)(a1 + 8946);
  int v109 = 0;
  uint64_t v107 = 0;
  uint64_t v108 = 0;
  uint64_t v106 = 0;
  long long v104 = 0u;
  long long v105 = 0u;
  long long v103 = 0u;
  BYTE6(v105) = -1;
  uint64_t v9 = *(int *)(a1 + 568) - 1;
  *((_WORD *)&v104 + v9 + 4) = 0x4000;
  *((_DWORD *)&v104 + v9) = -1;
  unint64_t v10 = *a2;
  uint64_t v11 = *(void *)(a1 + 9024);
  uint64_t v12 = *(void *)(v11 + ((v10 >> 5) & 0x7FFFFF8));
  unsigned int v13 = *a2;
  int v14 = (long long *)(v12 + 48 * *a2);
  int v102 = *a3;
  unsigned int v98 = *a3;
  uint64_t v99 = *(void *)(v11 + (((unint64_t)*a3 >> 5) & 0x7FFFFF8));
  uint64_t v15 = v99 + 48 * *a3;
  sub_10009D254(*(void *)(a1 + 9256), *((unsigned __int16 *)v14 + 16), 0, &v106, &v109);
  if (*((unsigned __int16 *)v14 + 16) == a4 && ((*(void *)v14 ^ *a5) & 0x7FFFFFFFFFFFFFFFLL) == 0)
  {
    if (*(unsigned char *)(v12 + 48 * v13 + 38))
    {
      if ((int)v10 - 2 <= v102)
      {
        *(_DWORD *)(a1 + 552) = 3;
        return 1;
      }
      unsigned int v20 = v98;
      uint64_t v19 = v99;
      uint64_t v24 = v99 + 48 * v98;
      *(_DWORD *)(v24 + 24) = 1073758208;
      *(_WORD *)(v24 + 32) = a4;
      *(unsigned char *)(v24 + 38) = 0;
      __int16 v25 = *v106;
      *(_WORD *)(v24 + 34) = *v106;
      uint64_t v26 = *a5;
      *(void *)uint64_t v15 = *a5;
      LOWORD(v107) = *((_WORD *)a5 + 8);
      HIDWORD(v107) = *((_DWORD *)a5 + 2);
      LOWORD(v108) = v8[127];
      HIDWORD(v108) = 0;
      LOWORD(v105) = a4;
      WORD1(v105) = v25;
      *(void *)&long long v103 = v26;
      ++*a3;
      unsigned int v97 = 1;
      uint64_t v18 = (uint64_t)v14;
      int v14 = &v103;
      uint64_t v27 = v99 + 48 * v98;
      int v28 = *(unsigned __int16 *)(v27 + 34);
      uint64_t v22 = (unsigned __int16 *)(v27 + 34);
      if (v28) {
        goto LABEL_4;
      }
    }
    else
    {
      LOWORD(v107) = *((_WORD *)a5 + 8);
      HIDWORD(v107) = *((_DWORD *)a5 + 2);
      LOWORD(v108) = v8[127];
      HIDWORD(v108) = 0;
      long long v29 = *v14;
      long long v30 = v14[2];
      *(_OWORD *)(v15 + 16) = v14[1];
      *(_OWORD *)(v15 + 32) = v30;
      *(_OWORD *)uint64_t v15 = v29;
      LODWORD(v10) = v10 + 1;
      uint64_t v18 = *(void *)(*(void *)(a1 + 9024) + 8 * (v10 >> 8)) + 48 * v10;
      unsigned int v97 = 1;
      unsigned int v20 = v98;
      uint64_t v19 = v99;
      uint64_t v31 = v99 + 48 * v98;
      int v32 = *(unsigned __int16 *)(v31 + 34);
      uint64_t v22 = (unsigned __int16 *)(v31 + 34);
      if (v32) {
        goto LABEL_4;
      }
    }
  }
  else
  {
    unsigned int v97 = 0;
    long long v16 = v14[2];
    long long v17 = *v14;
    *(_OWORD *)(v15 + 16) = v14[1];
    *(_OWORD *)(v15 + 32) = v16;
    *(_OWORD *)uint64_t v15 = v17;
    LOWORD(v107) = 0x4000;
    HIDWORD(v107) = -1;
    LOWORD(v108) = -1;
    HIDWORD(v108) = 0;
    LODWORD(v10) = v10 + 1;
    uint64_t v18 = *(void *)(*(void *)(a1 + 9024) + 8 * (v10 >> 8)) + 48 * v10;
    unsigned int v20 = v98;
    uint64_t v19 = v99;
    uint64_t v21 = v99 + 48 * v98;
    int v23 = *(unsigned __int16 *)(v21 + 34);
    uint64_t v22 = (unsigned __int16 *)(v21 + 34);
    if (v23)
    {
LABEL_4:
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(a1 + 9416))(a1, &v107, v15);
      goto LABEL_18;
    }
  }
  uint64_t v33 = (unsigned __int16 *)sub_100015A34(*(void *)(a1 + 384), 0);
  int v34 = (__int16)v107;
  uint64_t v35 = v19 + 48 * v20;
  int v38 = *(__int16 *)(v35 + 24);
  uint64_t v37 = (signed __int16 *)(v35 + 24);
  int v36 = v38;
  if ((__int16)v107 < v38)
  {
    *uint64_t v37 = v107;
    uint64_t v39 = v19 + 48 * v20;
    *(_DWORD *)(v39 + 16) = HIDWORD(v107);
    *(_WORD *)(v39 + 28) = v108;
    *(_DWORD *)(v39 + 8) = HIDWORD(v108);
    int v36 = v34;
  }
  if (v36 <= (__int16)v8[58])
  {
    uint64_t v40 = *v33;
    int v41 = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 384) + 1792) + 2 * v40);
    if (v41 == 0x4000)
    {
      LOWORD(v41) = sub_100015A48(*(void *)(a1 + 384), v40);
      LOWORD(v36) = *v37;
    }
    signed __int16 v42 = v41 - v8[56] + v36;
    *uint64_t v37 = v42;
    uint64_t v43 = v19 + 48 * v20;
    *(_DWORD *)(v43 + 8) += (__int16)v41;
    *(_WORD *)(v43 + 36) = v42;
    if (v42 < (__int16)v8[51])
    {
      v8[51] = v42;
      v8[53] = *(_WORD *)(v19 + 48 * v20 + 32);
      v8[119] = *v22;
    }
  }
  else
  {
    *(_WORD *)(v19 + 48 * v20 + 36) = 0x4000;
    *uint64_t v37 = 0x4000;
  }
LABEL_18:
  int v44 = *(unsigned __int8 *)(v19 + 48 * v20 + 38);
  if (v109 - 1 <= v44)
  {
    if (v109 == v44)
    {
      uint64_t v45 = *(__int16 *)(v19 + 48 * v20 + 24);
      uint64_t v46 = *(void *)(a1 + 9240);
      if (*(_DWORD *)v46 <= (int)v45)
      {
LABEL_24:
        if ((int)v45 < (__int16)v8[52]) {
          v8[52] = v45;
        }
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v45 = *(__int16 *)(v19 + 48 * v20 + 2 * *(int *)(a1 + 568) + 22);
      uint64_t v46 = *(void *)(a1 + 9240);
      if (*(_DWORD *)v46 <= (int)v45) {
        goto LABEL_24;
      }
    }
    ++*(_WORD *)(*(void *)(v46 + 8) + 2 * v45);
    ++*(_DWORD *)(*(void *)(a1 + 9240) + 4);
    goto LABEL_24;
  }
LABEL_26:
  unsigned int v47 = v102 + 1;
  for (uint64_t i = *(void *)(*(void *)(a1 + 9024) + 8 * ((v102 + 1) >> 8))
          + 48 * (v102 + 1); ; uint64_t i = *(void *)(v49 + 8 * (v47 >> 8)) + 48 * v47)
  {
    int v50 = *((unsigned __int8 *)v14 + 38);
    if (v50 + 1 == *(unsigned __int8 *)(v18 + 38))
    {
      int v51 = *((unsigned __int16 *)v14 + 16);
      int v52 = v14;
      int v14 = (long long *)v18;
      if (v51 == *(unsigned __int16 *)(v18 + 32))
      {
        while (1)
        {
          int v14 = (long long *)v18;
          if (*(void *)v52 != *(void *)v18) {
            goto LABEL_53;
          }
          uint64_t v53 = *(int *)(a1 + 568) - 1;
          uint64_t v54 = (char *)v52 + 2 * v53;
          LOWORD(v107) = *((_WORD *)v54 + 12);
          unsigned int v55 = (char *)v52 + 4 * v53;
          HIDWORD(v107) = *((_DWORD *)v55 + 4);
          LOWORD(v108) = *((_WORD *)v54 + 14);
          HIDWORD(v108) = *((_DWORD *)v55 + 2);
          long long v56 = *(_OWORD *)v18;
          long long v57 = *(_OWORD *)(v18 + 32);
          *(_OWORD *)(i + 16) = *(_OWORD *)(v18 + 16);
          *(_OWORD *)(i + 32) = v57;
          *(_OWORD *)uint64_t i = v56;
          if (*(_WORD *)(i + 34))
          {
            (*(void (**)(uint64_t, uint64_t *, uint64_t))(a1 + 9416))(a1, &v107, i);
          }
          else
          {
            uint64_t v58 = (unsigned __int16 *)sub_100015A34(*(void *)(a1 + 384), 0);
            int v59 = (__int16)v107;
            int v60 = *(__int16 *)(i + 24);
            if ((__int16)v107 < v60)
            {
              *(_WORD *)(i + 24) = v107;
              *(_DWORD *)(i + 16) = HIDWORD(v107);
              *(_WORD *)(i + 28) = v108;
              *(_DWORD *)(i + 8) = HIDWORD(v108);
              int v60 = v59;
            }
            if (v60 <= (__int16)v8[58])
            {
              uint64_t v61 = *v58;
              int v62 = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 384) + 1792) + 2 * v61);
              if (v62 == 0x4000)
              {
                LOWORD(v62) = sub_100015A48(*(void *)(a1 + 384), v61);
                LOWORD(v60) = *(_WORD *)(i + 24);
              }
              signed __int16 v63 = v62 - v8[56] + v60;
              *(_WORD *)(i + 24) = v63;
              *(_DWORD *)(i + 8) += (__int16)v62;
              *(_WORD *)(i + 36) = v63;
              if (v63 < (__int16)v8[51])
              {
                v8[51] = v63;
                v8[53] = *(_WORD *)(i + 32);
                v8[119] = *(_WORD *)(i + 34);
              }
            }
            else
            {
              *(_WORD *)(i + 36) = 0x4000;
              *(_WORD *)(i + 24) = 0x4000;
            }
          }
          int v64 = *(unsigned __int8 *)(i + 38);
          if (v109 - 1 <= v64) {
            break;
          }
LABEL_50:
          LODWORD(v10) = v10 + 1;
          uint64_t v67 = *(void *)(a1 + 9024);
          uint64_t v68 = *(void *)(v67 + 8 * (v10 >> 8));
          uint64_t v18 = v68 + 48 * v10;
          ++v47;
          uint64_t i = *(void *)(v67 + 8 * (v47 >> 8)) + 48 * v47;
          int v50 = *((unsigned __int8 *)v14 + 38);
          if (v50 + 1 == *(unsigned __int8 *)(v18 + 38))
          {
            int v52 = v14;
            if (*((unsigned __int16 *)v14 + 16) == *(unsigned __int16 *)(v68 + 48 * v10 + 32)) {
              continue;
            }
          }
          goto LABEL_52;
        }
        if (v109 == v64)
        {
          uint64_t v65 = *(__int16 *)(i + 24);
          uint64_t v66 = *(void *)(a1 + 9240);
          if (*(_DWORD *)v66 <= (int)v65)
          {
LABEL_48:
            if ((int)v65 < (__int16)v8[52]) {
              v8[52] = v65;
            }
            goto LABEL_50;
          }
        }
        else
        {
          uint64_t v65 = *(__int16 *)(i + 2 * *(int *)(a1 + 568) + 22);
          uint64_t v66 = *(void *)(a1 + 9240);
          if (*(_DWORD *)v66 <= (int)v65) {
            goto LABEL_48;
          }
        }
        ++*(_WORD *)(*(void *)(v66 + 8) + 2 * v65);
        ++*(_DWORD *)(*(void *)(a1 + 9240) + 4);
        goto LABEL_48;
      }
    }
    else
    {
LABEL_52:
      int v52 = v14;
      int v14 = (long long *)v18;
    }
LABEL_53:
    int v69 = v109;
    if (v109 > v50)
    {
      uint64_t v70 = *(int *)(a1 + 568) - 1;
      int v71 = (char *)v52 + 2 * v70;
      LOWORD(v107) = *((_WORD *)v71 + 12);
      uint64_t v72 = (char *)v52 + 4 * v70;
      HIDWORD(v107) = *((_DWORD *)v72 + 4);
      LOWORD(v108) = *((_WORD *)v71 + 14);
      HIDWORD(v108) = *((_DWORD *)v72 + 2);
      if ((unsigned __int16)v107 != 0x4000) {
        break;
      }
    }
LABEL_78:
    if (*((unsigned __int16 *)v52 + 16) != *((unsigned __int16 *)v14 + 16)
      || ((*(void *)v14 ^ *(void *)v52) & 0x7FFFFFFFFFFFFFFFLL) != 0)
    {
      *a2 = v10;
      *a3 = v47;
      return v97;
    }
    long long v85 = v14[2];
    long long v86 = *v14;
    *(_OWORD *)(i + 16) = v14[1];
    *(_OWORD *)(i + 32) = v85;
    *(_OWORD *)uint64_t i = v86;
    LOWORD(v107) = 0x4000;
    HIDWORD(v107) = -1;
    LOWORD(v108) = -1;
    HIDWORD(v108) = 0;
    if (*(_WORD *)(i + 34))
    {
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(a1 + 9416))(a1, &v107, i);
    }
    else
    {
      uint64_t v87 = (unsigned __int16 *)sub_100015A34(*(void *)(a1 + 384), 0);
      int v88 = (__int16)v107;
      int v89 = *(__int16 *)(i + 24);
      if ((__int16)v107 < v89)
      {
        *(_WORD *)(i + 24) = v107;
        *(_DWORD *)(i + 16) = HIDWORD(v107);
        *(_WORD *)(i + 28) = v108;
        *(_DWORD *)(i + 8) = HIDWORD(v108);
        int v89 = v88;
      }
      if (v89 <= (__int16)v8[58])
      {
        uint64_t v90 = *v87;
        int v91 = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 384) + 1792) + 2 * v90);
        if (v91 == 0x4000)
        {
          LOWORD(v91) = sub_100015A48(*(void *)(a1 + 384), v90);
          LOWORD(v89) = *(_WORD *)(i + 24);
        }
        signed __int16 v92 = v91 - v8[56] + v89;
        *(_WORD *)(i + 24) = v92;
        *(_DWORD *)(i + 8) += (__int16)v91;
        *(_WORD *)(i + 36) = v92;
        if (v92 < (__int16)v8[51])
        {
          v8[51] = v92;
          v8[53] = *(_WORD *)(i + 32);
          v8[119] = *(_WORD *)(i + 34);
        }
      }
      else
      {
        *(_WORD *)(i + 36) = 0x4000;
        *(_WORD *)(i + 24) = 0x4000;
      }
    }
    LODWORD(v10) = v10 + 1;
    uint64_t v49 = *(void *)(a1 + 9024);
    uint64_t v18 = *(void *)(v49 + 8 * (v10 >> 8)) + 48 * v10;
    ++v47;
  }
  if ((int)v10 - 2 > (int)v47)
  {
    *(_WORD *)(i + 32) = *((_WORD *)v52 + 16);
    *(unsigned char *)(i + 38) = *((unsigned char *)v52 + 38) + 1;
    *(void *)uint64_t i = *(void *)v52;
    if (v69 - 1 != *((unsigned __int8 *)v52 + 38))
    {
      *(_DWORD *)(i + 24) = 1073758208;
      int v79 = v106[*((unsigned __int8 *)v52 + 38) + 1];
      *(_WORD *)(i + 34) = v79;
      if (v79)
      {
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(a1 + 9416))(a1, &v107, i);
      }
      else
      {
        unsigned int v82 = (unsigned __int16 *)sub_100015A34(*(void *)(a1 + 384), 0);
        int v83 = (__int16)v107;
        int v84 = *(__int16 *)(i + 24);
        if ((__int16)v107 < v84)
        {
          *(_WORD *)(i + 24) = v107;
          *(_DWORD *)(i + 16) = HIDWORD(v107);
          *(_WORD *)(i + 28) = v108;
          *(_DWORD *)(i + 8) = HIDWORD(v108);
          int v84 = v83;
        }
        if (v84 <= (__int16)v8[58])
        {
          uint64_t v93 = *v82;
          int v94 = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 384) + 1792) + 2 * v93);
          if (v94 == 0x4000)
          {
            LOWORD(v94) = sub_100015A48(*(void *)(a1 + 384), v93);
            LOWORD(v84) = *(_WORD *)(i + 24);
          }
          signed __int16 v95 = v94 - v8[56] + v84;
          *(_WORD *)(i + 24) = v95;
          *(_DWORD *)(i + 8) += (__int16)v94;
          *(_WORD *)(i + 36) = v95;
          if (v95 < (__int16)v8[51])
          {
            v8[51] = v95;
            v8[53] = *(_WORD *)(i + 32);
            v8[119] = *(_WORD *)(i + 34);
          }
        }
        else
        {
          *(_WORD *)(i + 36) = 0x4000;
          *(_WORD *)(i + 24) = 0x4000;
        }
      }
      goto LABEL_77;
    }
    int v73 = *v8;
    *(_WORD *)(i + 34) = v73;
    *(_WORD *)(i + 24) = 0x4000;
    int v74 = (unsigned __int16 *)sub_100015A34(*(void *)(a1 + 384), v73);
    int v75 = (__int16)v107;
    int v76 = *(__int16 *)(i + 24);
    if ((__int16)v107 < v76)
    {
      *(_WORD *)(i + 24) = v107;
      *(_DWORD *)(i + 16) = HIDWORD(v107);
      *(_WORD *)(i + 28) = v108;
      *(_DWORD *)(i + 8) = HIDWORD(v108);
      int v76 = v75;
    }
    if (v76 <= (__int16)v8[58])
    {
      uint64_t v80 = *v74;
      int v81 = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 384) + 1792) + 2 * v80);
      if (v81 == 0x4000)
      {
        LOWORD(v81) = sub_100015A48(*(void *)(a1 + 384), v80);
        LOWORD(v76) = *(_WORD *)(i + 24);
      }
      __int16 v77 = v81 - v8[56] + v76;
      *(_WORD *)(i + 24) = v77;
      *(_DWORD *)(i + 8) += (__int16)v81;
      *(_WORD *)(i + 36) = v77;
      if (v77 < (__int16)v8[51])
      {
        v8[51] = v77;
        v8[53] = *(_WORD *)(i + 32);
        v8[119] = *(_WORD *)(i + 34);
        __int16 v77 = *(_WORD *)(i + 24);
        uint64_t v78 = *(void *)(a1 + 9240);
        if (*(_DWORD *)v78 > v77) {
          goto LABEL_75;
        }
      }
      else
      {
        uint64_t v78 = *(void *)(a1 + 9240);
        if (*(_DWORD *)v78 > v77) {
          goto LABEL_75;
        }
      }
    }
    else
    {
      __int16 v77 = 0x4000;
      *(_WORD *)(i + 36) = 0x4000;
      *(_WORD *)(i + 24) = 0x4000;
      uint64_t v78 = *(void *)(a1 + 9240);
      if (*(int *)v78 > 0x4000)
      {
LABEL_75:
        ++*(_WORD *)(*(void *)(v78 + 8) + 2 * v77);
        ++*(_DWORD *)(*(void *)(a1 + 9240) + 4);
        if ((__int16)v8[52] <= v77)
        {
LABEL_77:
          ++v47;
          uint64_t i = *(void *)(*(void *)(a1 + 9024) + 8 * (v47 >> 8)) + 48 * v47;
          goto LABEL_78;
        }
LABEL_76:
        v8[52] = v77;
        goto LABEL_77;
      }
    }
    if ((__int16)v8[52] <= v77) {
      goto LABEL_77;
    }
    goto LABEL_76;
  }
  *a2 = v10;
  *a3 = v47;
  *(_DWORD *)(a1 + 552) = 3;
  return v97;
}

uint64_t sub_1000760C8(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if (!*(void *)result)
    {
      (*(void (**)(uint64_t))(result + 8))(result);
      return sub_1000C321C(v1);
    }
  }
  return result;
}

uint64_t sub_100076120(uint64_t result, uint64_t a2, unsigned int a3, unsigned int a4)
{
  return sub_100076128(result, a2, a3, a4);
}

uint64_t sub_100076128(uint64_t result, uint64_t a2, unsigned int a3, unsigned int a4)
{
  if (!result) {
    return result;
  }
  int v4 = *(_DWORD *)(result + 108);
  LODWORD(v5) = v4 - 1;
  if (v4 <= (int)a3) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = a3;
  }
  BOOL v6 = __OFSUB__(a3, v4);
  int v7 = a3 - v4;
  if (v7 < 0 != v6) {
    int v8 = 0;
  }
  else {
    int v8 = v7 + 1;
  }
  if ((int)v5 <= 0)
  {
LABEL_37:
    uint64_t v22 = result + 176;
    if (a4 < 0xFFFB) {
      goto LABEL_45;
    }
    goto LABEL_38;
  }
  uint64_t v9 = 94;
  uint64_t v10 = a2 + 2 * v8;
  while (1)
  {
    unint64_t v13 = *(unsigned __int16 *)(v10 + 2 * (v5 + v9 - 95));
    if (v13 >= 0xFFFB) {
      break;
    }
    int64_t v14 = *(int *)(result + 148);
    if ((uint64_t)v13 < v14)
    {
      uint64_t v15 = *(void *)(result + 128);
      if (v15)
      {
        unsigned int v11 = *(unsigned __int16 *)(v15 + 2 * v13);
        *(_WORD *)(result + 2 * v9) = v11;
        int v12 = *(unsigned __int16 *)(result + 112);
        if (!*(_WORD *)(result + 112)) {
          goto LABEL_12;
        }
      }
      else
      {
        unsigned int v11 = v13 + *(unsigned __int16 *)(result + 144);
        *(_WORD *)(result + 2 * v9) = v11;
        int v12 = *(unsigned __int16 *)(result + 112);
        if (!*(_WORD *)(result + 112)) {
          goto LABEL_12;
        }
      }
      goto LABEL_11;
    }
    unsigned int v11 = v13 - v14 + *(_DWORD *)(result + 152) + 1;
    *(_WORD *)(result + 2 * v9) = v11;
    int v12 = *(unsigned __int16 *)(result + 112);
    if (*(_WORD *)(result + 112)) {
      goto LABEL_11;
    }
LABEL_12:
    --v9;
    if ((unint64_t)(v5 + v9 - 93) <= 1) {
      goto LABEL_37;
    }
  }
  if (v13 == 65531)
  {
    unsigned int v11 = *(unsigned __int16 *)(result + 114);
    *(_WORD *)(result + 2 * v9) = v11;
    int v12 = *(unsigned __int16 *)(result + 112);
    if (!*(_WORD *)(result + 112)) {
      goto LABEL_12;
    }
  }
  else if (v13 == 65532 || v13 == 65533)
  {
    unsigned int v11 = *(unsigned __int16 *)(result + 112);
    *(_WORD *)(result + 2 * v9) = v11;
    int v12 = *(unsigned __int16 *)(result + 112);
    if (!*(_WORD *)(result + 112)) {
      goto LABEL_12;
    }
  }
  else
  {
    unsigned int v11 = 0;
    *(_WORD *)(result + 2 * v9) = 0;
    int v12 = *(unsigned __int16 *)(result + 112);
    if (!*(_WORD *)(result + 112)) {
      goto LABEL_12;
    }
  }
LABEL_11:
  if (v12 != (unsigned __int16)v11) {
    goto LABEL_12;
  }
  unsigned int v16 = v9 - 88;
  if ((int)v9 - 88 >= 1)
  {
    uint64_t v17 = (v9 - 88);
    if (v16 < 0x10)
    {
      uint64_t v18 = 0;
      goto LABEL_42;
    }
    uint64_t v18 = v17 & 0xFFFFFFF0;
    int16x8_t v19 = vdupq_n_s16(v11);
    unsigned int v20 = (int16x8_t *)(result + 192);
    uint64_t v21 = v16 & 0xFFFFFFF0;
    do
    {
      v20[-1] = v19;
      *unsigned int v20 = v19;
      v20 += 2;
      v21 -= 16;
    }
    while (v21);
    if (v18 == v17)
    {
      uint64_t v5 = 7;
      goto LABEL_37;
    }
LABEL_42:
    uint64_t v24 = (_WORD *)(result + 2 * v18 + 176);
    uint64_t v25 = v17 - v18;
    do
    {
      *v24++ = v11;
      --v25;
    }
    while (v25);
  }
  uint64_t v5 = 7;
  uint64_t v22 = result + 176;
  if (a4 < 0xFFFB)
  {
LABEL_45:
    uint64_t v26 = *(int *)(result + 148);
    if (a4 >= v26)
    {
      int v23 = a4 - v26 + *(_DWORD *)(result + 152) + 1;
    }
    else
    {
      uint64_t v27 = *(void *)(result + 128);
      if (v27) {
        LOWORD(v23) = *(_WORD *)(v27 + 2 * a4);
      }
      else {
        LOWORD(v23) = *(_WORD *)(result + 144) + a4;
      }
    }
    goto LABEL_52;
  }
LABEL_38:
  if (a4 == 65531)
  {
    LOWORD(v23) = *(_WORD *)(result + 114);
  }
  else if (a4 == 65532 || a4 == 65533)
  {
    LOWORD(v23) = *(_WORD *)(result + 112);
  }
  else
  {
    LOWORD(v23) = 0;
  }
LABEL_52:
  *(_WORD *)(result + 190) = v23;
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t))(result + 32))(result, v22 + 2 * (7 - (int)v5), (v5 + 1), v5);
}

uint64_t sub_100076364(uint64_t result, uint64_t a2, unsigned int a3, unsigned int a4)
{
  return sub_100076128(result, a2, a3, a4);
}

uint64_t sub_10007636C(uint64_t a1, signed int a2, uint64_t a3, uint64_t a4, unsigned __int16 *a5, int a6, _WORD *a7)
{
  uint64_t v9 = a4;
  int v11 = *(_DWORD *)(a1 + 108);
  if (a2 >= v11) {
    int v12 = a2 - v11 + 1;
  }
  else {
    int v12 = 0;
  }
  if (v11 <= a2) {
    uint64_t v13 = (v11 - 1);
  }
  else {
    uint64_t v13 = a2;
  }
  if ((int)v13 <= 0)
  {
LABEL_35:
    uint64_t v27 = a1 + 176;
    if (*(_DWORD *)(a1 + 116) >= (int)a4) {
      goto LABEL_55;
    }
    goto LABEL_36;
  }
  uint64_t v14 = 94;
  uint64_t v15 = a3 + 2 * v12;
  while (1)
  {
    unint64_t v18 = *(unsigned __int16 *)(v15 + 2 * (v13 + v14 - 95));
    if (v18 >= 0xFFFB) {
      break;
    }
    int64_t v19 = *(int *)(a1 + 148);
    if ((uint64_t)v18 < v19)
    {
      uint64_t v20 = *(void *)(a1 + 128);
      if (v20)
      {
        unsigned int v16 = *(unsigned __int16 *)(v20 + 2 * v18);
        *(_WORD *)(a1 + 2 * v14) = v16;
        int v17 = *(unsigned __int16 *)(a1 + 112);
        if (!*(_WORD *)(a1 + 112)) {
          goto LABEL_11;
        }
      }
      else
      {
        unsigned int v16 = v18 + *(unsigned __int16 *)(a1 + 144);
        *(_WORD *)(a1 + 2 * v14) = v16;
        int v17 = *(unsigned __int16 *)(a1 + 112);
        if (!*(_WORD *)(a1 + 112)) {
          goto LABEL_11;
        }
      }
      goto LABEL_10;
    }
    unsigned int v16 = v18 - v19 + *(_DWORD *)(a1 + 152) + 1;
    *(_WORD *)(a1 + 2 * v14) = v16;
    int v17 = *(unsigned __int16 *)(a1 + 112);
    if (*(_WORD *)(a1 + 112)) {
      goto LABEL_10;
    }
LABEL_11:
    --v14;
    if ((unint64_t)(v13 + v14 - 93) <= 1) {
      goto LABEL_35;
    }
  }
  if (v18 == 65531)
  {
    unsigned int v16 = *(unsigned __int16 *)(a1 + 114);
    *(_WORD *)(a1 + 2 * v14) = v16;
    int v17 = *(unsigned __int16 *)(a1 + 112);
    if (!*(_WORD *)(a1 + 112)) {
      goto LABEL_11;
    }
  }
  else if (v18 == 65532 || v18 == 65533)
  {
    unsigned int v16 = *(unsigned __int16 *)(a1 + 112);
    *(_WORD *)(a1 + 2 * v14) = v16;
    int v17 = *(unsigned __int16 *)(a1 + 112);
    if (!*(_WORD *)(a1 + 112)) {
      goto LABEL_11;
    }
  }
  else
  {
    unsigned int v16 = 0;
    *(_WORD *)(a1 + 2 * v14) = 0;
    int v17 = *(unsigned __int16 *)(a1 + 112);
    if (!*(_WORD *)(a1 + 112)) {
      goto LABEL_11;
    }
  }
LABEL_10:
  if (v17 != (unsigned __int16)v16) {
    goto LABEL_11;
  }
  unsigned int v21 = v14 - 88;
  if ((int)v14 - 88 >= 1)
  {
    uint64_t v22 = (v14 - 88);
    if (v21 < 0x10)
    {
      uint64_t v23 = 0;
      goto LABEL_52;
    }
    uint64_t v23 = v22 & 0xFFFFFFF0;
    int16x8_t v24 = vdupq_n_s16(v16);
    uint64_t v25 = (int16x8_t *)(a1 + 192);
    uint64_t v26 = v21 & 0xFFFFFFF0;
    do
    {
      v25[-1] = v24;
      *uint64_t v25 = v24;
      v25 += 2;
      v26 -= 16;
    }
    while (v26);
    if (v23 == v22)
    {
      uint64_t v13 = 7;
      goto LABEL_35;
    }
LABEL_52:
    uint64_t v35 = (_WORD *)(a1 + 2 * v23 + 176);
    uint64_t v36 = v22 - v23;
    do
    {
      *v35++ = v16;
      --v36;
    }
    while (v36);
  }
  uint64_t v13 = 7;
  uint64_t v27 = a1 + 176;
  if (*(_DWORD *)(a1 + 116) < (int)a4)
  {
LABEL_36:
    if ((int)a4 >= 1)
    {
      uint64_t v28 = v27 + 2 * (7 - (int)v13);
      uint64_t v29 = a4;
      do
      {
        unsigned int v31 = *a5++;
        uint64_t v30 = v31;
        if (v31 < 0xFFFBuLL)
        {
          uint64_t v32 = *(int *)(a1 + 148);
          if (v30 >= v32)
          {
            LODWORD(v30) = v30 - v32 + *(_DWORD *)(a1 + 152) + 1;
          }
          else
          {
            uint64_t v33 = *(void *)(a1 + 128);
            if (v33) {
              LOWORD(v30) = *(_WORD *)(v33 + 2 * v30);
            }
            else {
              LOWORD(v30) = v30 + *(_WORD *)(a1 + 144);
            }
          }
        }
        else if (v30 == 65531)
        {
          LOWORD(v30) = *(_WORD *)(a1 + 114);
        }
        else if (v30 == 65532 || v30 == 65533)
        {
          LOWORD(v30) = *(_WORD *)(a1 + 112);
        }
        else
        {
          LOWORD(v30) = 0;
        }
        *(_WORD *)(a1 + 190) = v30;
        *a7++ = (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, void))(a1 + 32))(a1, v28, (v13 + 1), v13, 0);
        --v29;
      }
      while (v29);
    }
    uint64_t result = 0xFFFFFFFFLL;
    *(_DWORD *)(a1 + 120) = -1;
    return result;
  }
LABEL_55:
  if (a6 == -1 || *(_DWORD *)(a1 + 120) != a6)
  {
    unsigned int v38 = sub_1000C085C(a4, 4, 0xFFFFFFFF);
    unint64_t v46 = sub_1000CD3E8(2 * (int)v9, v39, v40, v41, v42, v43, v44, v45);
    uint64_t v58 = v9;
    int v59 = (void *)v46;
    if ((int)v9 >= 1)
    {
      unsigned int v47 = a5;
      uint64_t v48 = (_WORD *)v46;
      uint64_t v9 = v9;
      do
      {
        unsigned int v38 = sub_1000C085C(*v47, 2, v38);
        unsigned int v50 = *v47++;
        uint64_t v49 = v50;
        if (v50 < 0xFFFBuLL)
        {
          uint64_t v51 = *(int *)(a1 + 148);
          if (v49 >= v51)
          {
            LODWORD(v49) = v49 - v51 + *(_DWORD *)(a1 + 152) + 1;
          }
          else
          {
            uint64_t v52 = *(void *)(a1 + 128);
            if (v52) {
              LOWORD(v49) = *(_WORD *)(v52 + 2 * v49);
            }
            else {
              LOWORD(v49) = v49 + *(_WORD *)(a1 + 144);
            }
          }
        }
        else if (v49 == 65531)
        {
          LOWORD(v49) = *(_WORD *)(a1 + 114);
        }
        else if (v49 == 65532 || v49 == 65533)
        {
          LOWORD(v49) = *(_WORD *)(a1 + 112);
        }
        else
        {
          LOWORD(v49) = 0;
        }
        *v48++ = v49;
        --v9;
      }
      while (v9);
    }
    *(_DWORD *)(a1 + 120) = v38;
    uint64_t v9 = v58;
    uint64_t v37 = v59;
  }
  else
  {
    uint64_t v37 = 0;
  }
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, uint64_t, void *, _WORD *))(a1 + 40))(a1, v13, v27 + 2 * (7 - (int)v13), v9, v37, a7))
  {
    if ((int)v9 >= 1)
    {
      uint64_t v53 = v9;
      do
      {
        unsigned int v55 = *a5++;
        uint64_t v54 = v55;
        if (v55 < 0xFFFBuLL)
        {
          uint64_t v56 = *(int *)(a1 + 148);
          if (v54 >= v56)
          {
            LODWORD(v54) = v54 - v56 + *(_DWORD *)(a1 + 152) + 1;
          }
          else
          {
            uint64_t v57 = *(void *)(a1 + 128);
            if (v57) {
              LOWORD(v54) = *(_WORD *)(v57 + 2 * v54);
            }
            else {
              LOWORD(v54) = v54 + *(_WORD *)(a1 + 144);
            }
          }
        }
        else if (v54 == 65531)
        {
          LOWORD(v54) = *(_WORD *)(a1 + 114);
        }
        else if (v54 == 65532 || v54 == 65533)
        {
          LOWORD(v54) = *(_WORD *)(a1 + 112);
        }
        else
        {
          LOWORD(v54) = 0;
        }
        *(_WORD *)(a1 + 190) = v54;
        *a7++ = (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, void))(a1 + 32))(a1, v27 + 2 * (7 - (int)v13), (v13 + 1), v13, 0);
        --v53;
      }
      while (v53);
    }
    *(_DWORD *)(a1 + 120) = -1;
  }
  if (v37) {
    sub_1000CD4D0(v37, 2 * (int)v9);
  }
  return *(unsigned int *)(a1 + 120);
}

uint64_t sub_100076850(uint64_t a1, unsigned int a2)
{
  if (!a1) {
    return 1;
  }
  uint64_t v3 = a2 - (uint64_t)*(int *)(a1 + 148);
  if (v3 < 0 || v3 >= *(int *)(a1 + 160)) {
    return 0;
  }
  if (*(unsigned char *)(*(void *)(a1 + 168) + v3) == 1) {
    return 0;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 56))(a1, v3 + *(int *)(a1 + 152) + 1);
  if (result)
  {
    uint64_t result = 1;
    *(unsigned char *)(*(void *)(a1 + 168) + v3) = 1;
  }
  return result;
}

uint64_t sub_100076900(uint64_t a1, unsigned int a2)
{
  if (!a1) {
    return 1;
  }
  uint64_t v3 = a2 - (uint64_t)*(int *)(a1 + 148);
  if (v3 < 0 || v3 >= *(int *)(a1 + 160)) {
    return 0;
  }
  if (*(unsigned char *)(*(void *)(a1 + 168) + v3))
  {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 64))(a1, v3 + *(int *)(a1 + 152) + 1);
    if (!result) {
      return result;
    }
    *(unsigned char *)(*(void *)(a1 + 168) + v3) = 0;
  }
  return 1;
}

uint64_t sub_100076994(uint64_t a1)
{
  if (a1 && (uint64_t v1 = *(uint64_t (**)(void))(a1 + 72)) != 0) {
    return v1();
  }
  else {
    return 0xFFFFFFFFLL;
  }
}

uint64_t sub_1000769AC(uint64_t result)
{
  if (result) {
    return *(unsigned int *)(result + 108);
  }
  return result;
}

uint64_t sub_1000769B8(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = sub_1000BEC58(a1, "blm0", a2, a4, a5, a6, a7, a8);
  if (!v8) {
    return 0;
  }
  uint64_t v9 = (uint64_t)v8;
  int v13 = 0;
  uint64_t v10 = 0;
  if (sub_1000BEECC((uint64_t)v8, &v13))
  {
    switch(v13)
    {
      case 0:
        uint64_t v11 = sub_10007BB24(v9);
        goto LABEL_9;
      case 1:
        uint64_t v11 = sub_10007D0AC(v9);
        goto LABEL_9;
      case 8:
        uint64_t v11 = (uint64_t)sub_1000785B0(v9);
        goto LABEL_9;
      case 9:
        uint64_t v11 = (uint64_t)sub_100079E88(v9);
LABEL_9:
        uint64_t v10 = v11;
        break;
      default:
        break;
    }
  }
  sub_1000BED3C(v9);
  return v10;
}

uint64_t sub_100076AB0(uint64_t a1)
{
  int v3 = 0;
  if (!sub_1000BEECC(a1, &v3)) {
    return 0;
  }
  uint64_t result = 0;
  switch(v3)
  {
    case 0:
      uint64_t result = sub_10007BB24(a1);
      break;
    case 1:
      uint64_t result = sub_10007D0AC(a1);
      break;
    case 8:
      uint64_t result = (uint64_t)sub_1000785B0(a1);
      break;
    case 9:
      uint64_t result = (uint64_t)sub_100079E88(a1);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100076BA4(uint64_t a1, uint64_t a2, char *a3)
{
  __sprintf_chk(v15, 0, 0x100uLL, "%s", "blm0");
  uint64_t v11 = sub_1000BEC58(a2, v15, a3, v6, v7, v8, v9, v10);
  if (!v11) {
    return 0;
  }
  uint64_t v12 = (uint64_t)v11;
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t *))(a1 + 88))(a1, v11);
  sub_1000BED3C(v12);
  return v13;
}

uint64_t sub_100076C80(uint64_t a1, uint64_t a2, char *a3)
{
  __sprintf_chk(v10, 0, 0x100uLL, "%s", "blm0");
  uint64_t v6 = sub_1000BFC50(a2, v10, a3);
  if (!v6) {
    return 0;
  }
  uint64_t v7 = v6;
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 96))(a1, v6);
  sub_1000BFD14(v7);
  return v8;
}

uint64_t sub_100076D5C(uint64_t a1)
{
  sub_1000C321C(*(void *)(a1 + 168));
  uint64_t v2 = *(void *)(a1 + 136);
  return sub_1000C321C(v2);
}

uint64_t sub_100076D98(uint64_t a1, uint64_t a2)
{
  if (!sub_1000BEECC(a2, (void *)(a1 + 104))) {
    goto LABEL_21;
  }
  if (!sub_1000BEECC(a2, (void *)(a1 + 108))) {
    goto LABEL_21;
  }
  if (!sub_1000BEF74(a2, (_WORD *)(a1 + 112))) {
    goto LABEL_21;
  }
  if (!sub_1000BEF74(a2, (_WORD *)(a1 + 114))) {
    goto LABEL_21;
  }
  if (!sub_1000BEECC(a2, (void *)(a1 + 116))) {
    goto LABEL_21;
  }
  if (!sub_1000BEECC(a2, (void *)(a1 + 120))) {
    goto LABEL_21;
  }
  if (!sub_1000BEE7C(a2, (_DWORD *)(a1 + 124))) {
    goto LABEL_21;
  }
  if (!sub_1000BEECC(a2, (void *)(a1 + 144))) {
    goto LABEL_21;
  }
  if (!sub_1000BEECC(a2, (void *)(a1 + 148))) {
    goto LABEL_21;
  }
  if (!sub_1000BEECC(a2, (void *)(a1 + 152))) {
    goto LABEL_21;
  }
  if (!sub_1000BEE7C(a2, (_DWORD *)(a1 + 156))) {
    goto LABEL_21;
  }
  if (!sub_1000BEECC(a2, (void *)(a1 + 160))) {
    goto LABEL_21;
  }
  int v8 = 0;
  int v4 = (void *)(a1 + 136);
  if (!sub_1000BF078(a2, 2, (uint64_t *)(a1 + 136), &v8)) {
    goto LABEL_21;
  }
  if (*v4)
  {
    if (v8 != *(_DWORD *)(a1 + 148)) {
      goto LABEL_21;
    }
    *(void *)(a1 + 128) = *v4;
  }
  if (*(_DWORD *)(a1 + 156)) {
    return 1;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 160);
  if ((int)v6 < 1) {
    return 1;
  }
  uint64_t v7 = sub_1000C33A0(v6);
  *(void *)(a1 + 168) = v7;
  if (v7) {
    return 1;
  }
LABEL_21:
  sub_1000C321C(*(void *)(a1 + 168));
  sub_1000C321C(*(void *)(a1 + 136));
  return 0;
}

BOOL sub_100076F2C(uint64_t a1, uint64_t a2)
{
  return sub_1000BEFCC(a2, *(void **)(a1 + 168), *(_DWORD *)(a1 + 160), 1);
}

BOOL sub_100076F60(uint64_t a1, uint64_t a2, uint8x8_t a3)
{
  int v4 = *(void **)(a1 + 168);
  if (v4) {
    unsigned int v5 = *(_DWORD *)(a1 + 160);
  }
  else {
    unsigned int v5 = 0;
  }
  return sub_1000BFDB0(a2, v4, v5, 1, a3) != 0;
}

BOOL sub_100076FA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(int *)(a1 + 152);
  if (v2 >= a2) {
    return 0;
  }
  if (~v2 + a2 < *(int *)(a1 + 160)) {
    return a2 < 65533;
  }
  return 0;
}

uint64_t sub_100076FD8(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_100076FD8;
  *(void *)(a1 + 24) = sub_100077298;
  *(void *)(a1 + 8) = sub_1000772DC;
  *(void *)(a1 + 32) = sub_100077380;
  *(void *)(a1 + 40) = sub_100077648;
  *(void *)(a1 + 48) = sub_100077854;
  *(void *)(a1 + 56) = sub_100078278;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 64) = sub_100078334;
  *(void *)(a1 + 88) = sub_10007838C;
  *(void *)(a1 + 96) = sub_10007845C;
  uint64_t v2 = *(unsigned int *)(a1 + 116);
  if ((int)v2 < 1
    || (uint64_t result = sub_1000C33A0(2 * v2), (*(void *)(a1 + 272) = result) != 0)
    && (uint64_t result = sub_1000C33A0(2 * *(int *)(a1 + 116)), (*(void *)(a1 + 280) = result) != 0))
  {
    uint64_t v4 = *(unsigned int *)(a1 + 160);
    if ((int)v4 >= 1)
    {
      uint64_t result = (uint64_t)sub_1000C328C(2 * v4);
      *(void *)(a1 + 376) = result;
      if (!result) {
        return result;
      }
      uint64_t result = (uint64_t)sub_1000C328C(2 * *(int *)(a1 + 160));
      *(void *)(a1 + 384) = result;
      if (!result) {
        return result;
      }
      if (*(int *)(a1 + 160) >= 1)
      {
        uint64_t v5 = 0;
        do
        {
          uint64_t v6 = 2 * v5;
          *(_WORD *)(*(void *)(a1 + 376) + v6) = 0x7FFF;
          *(_WORD *)(*(void *)(a1 + 384) + v6) = -1;
          ++v5;
        }
        while (v5 < *(int *)(a1 + 160));
      }
    }
    if (!*(_DWORD *)(a1 + 124)) {
      return 1;
    }
    *(void *)(a1 + 392) = 0;
    uint64_t result = (uint64_t)sub_1000C328C(*(int *)(a1 + 152) + 1);
    *(void *)(a1 + 400) = result;
    if (result)
    {
      unsigned __int16 v17 = 0;
      if ((*(_DWORD *)(a1 + 152) & 0x80000000) == 0)
      {
        do
        {
          int v16 = 0;
          sub_10007BF98(*(void *)(a1 + 216), &v17, &v16);
          int v7 = v16 - *(_DWORD *)(a1 + 292);
          if (v7 >= 0xFF) {
            LOBYTE(v8) = -1;
          }
          else {
            int v8 = v16 - *(_DWORD *)(a1 + 292);
          }
          if (v7 >= 0) {
            char v9 = v8;
          }
          else {
            char v9 = 0;
          }
          *(unsigned char *)(*(void *)(a1 + 400) + v17++) = v9;
        }
        while (*(_DWORD *)(a1 + 152) >= (int)v17);
      }
      uint64_t result = (uint64_t)sub_1000C328C(*(int *)(a1 + 192) + 1);
      *(void *)(a1 + 408) = result;
      if (result)
      {
        unsigned __int16 v17 = 0;
        if ((*(_DWORD *)(a1 + 192) & 0x80000000) == 0)
        {
          do
          {
            int v15 = 255;
            sub_10007BF98(*(void *)(a1 + 232), &v17, &v15);
            int v10 = v15 - *(_DWORD *)(a1 + 296);
            if (v10 >= 0xFF) {
              LOBYTE(v11) = -1;
            }
            else {
              int v11 = v15 - *(_DWORD *)(a1 + 296);
            }
            if (v10 >= 0) {
              char v12 = v11;
            }
            else {
              char v12 = 0;
            }
            *(unsigned char *)(*(void *)(a1 + 408) + v17++) = v12;
          }
          while (*(_DWORD *)(a1 + 192) >= (int)v17);
        }
        unint64_t v13 = *(unsigned int *)(a1 + 160);
        if ((int)v13 >= 1)
        {
          uint64_t result = (uint64_t)sub_1000C328C(v13);
          *(void *)(a1 + 416) = result;
          if (!result) {
            return result;
          }
          if (*(int *)(a1 + 160) >= 1)
          {
            uint64_t v14 = 0;
            uint64_t result = 1;
            do
              *(unsigned char *)(*(void *)(a1 + 416) + v14++) = -1;
            while (v14 < *(int *)(a1 + 160));
            return result;
          }
        }
        return 1;
      }
    }
  }
  return result;
}

void *sub_100077298(const void *a1)
{
  uint64_t v2 = (void *)sub_1000C33A0(424);
  int v3 = v2;
  if (v2) {
    memcpy(v2, a1, 0x1A8uLL);
  }
  return v3;
}

uint64_t sub_1000772DC(uint64_t *a1)
{
  sub_1000C321C(a1[52]);
  sub_1000C321C(a1[51]);
  sub_1000C321C(a1[50]);
  sub_1000C321C(a1[48]);
  sub_1000C321C(a1[47]);
  sub_1000C321C(a1[46]);
  sub_1000C321C(a1[43]);
  sub_1000C321C(a1[40]);
  sub_1000C321C(a1[35]);
  sub_1000C321C(a1[34]);
  sub_10007BF44(a1[32]);
  sub_10007BF44(a1[30]);
  sub_10007BF44(a1[28]);
  sub_10007BDDC(a1[26]);
  return sub_100076D5C((uint64_t)a1);
}

uint64_t sub_100077380(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v36 = 0;
  uint64_t v5 = (_WORD *)(a2 + 2 * a4);
  if (*v5)
  {
    uint64_t v9 = *(int *)(a1 + 152);
    int v10 = *(_DWORD *)(a1 + 124) & a5;
    if (sub_10007BF98(*(void *)(a1 + 216), (unsigned __int16 *)(a2 + 2 * a4), &v36))
    {
      if (v10)
      {
        uint64_t v11 = *(void *)(a1 + 400);
        v36 += *(__int16 *)(a1 + 288);
        int v12 = *(_DWORD *)(a1 + 292) + *(__int16 *)(a1 + 290) + *(unsigned __int8 *)(v11 + (unsigned __int16)*v5);
        if (!a4) {
          goto LABEL_5;
        }
LABEL_18:
        uint64_t v20 = a4;
        uint64_t v21 = *(void *)(a1 + 200);
        uint64_t v22 = *(void *)(a1 + 384);
        uint64_t v23 = *(void *)(a1 + 232);
        uint64_t v24 = *(void *)(a1 + 248);
        int v33 = 0;
        uint64_t v25 = *(unsigned __int16 *)(a2 + 2 * v20 - 2);
        if (v25 <= v9)
        {
          unsigned __int16 v34 = sub_10007BE20(v21, v25);
          uint64_t v26 = (unsigned __int16)*v5;
          if (v26 <= v9) {
            goto LABEL_20;
          }
        }
        else
        {
          unsigned __int16 v34 = *(_WORD *)(v22 + 2 * ((int)v25 + ~v9));
          uint64_t v26 = (unsigned __int16)*v5;
          if (v26 <= v9)
          {
LABEL_20:
            unsigned __int16 v27 = sub_10007BE20(v21, v26);
            goto LABEL_23;
          }
        }
        unsigned __int16 v27 = *(_WORD *)(v22 + 2 * ((int)v26 + ~v9));
LABEL_23:
        unsigned __int16 v35 = v27;
        sub_10007BF98(v23, &v35, &v33);
        int v28 = v36 - v33;
        v36 -= v33;
        if (v10)
        {
          int v29 = v12 - *(_DWORD *)(a1 + 296) - *(unsigned __int8 *)(*(void *)(a1 + 408) + v35);
          int v30 = v28 - v29;
          if (v28 < v29)
          {
            int v30 = v29 - v28;
            if (v29 - v28 >= *(_DWORD *)(a1 + 308)) {
              goto LABEL_29;
            }
            goto LABEL_28;
          }
          int v36 = v12 - *(_DWORD *)(a1 + 296) - *(unsigned __int8 *)(*(void *)(a1 + 408) + v35);
          int v28 = v29;
          if (v30 < *(_DWORD *)(a1 + 308)) {
LABEL_28:
          }
            int v36 = v28 - *(unsigned __int8 *)(*(void *)(a1 + 312) + v30);
        }
LABEL_29:
        sub_10007BF98(v24, &v34, &v33);
        int v13 = v36 + v33;
        goto LABEL_30;
      }
    }
    else
    {
      int v17 = (unsigned __int16)*v5 + ~v9;
      int v18 = *(__int16 *)(*(void *)(a1 + 376) + 2 * v17);
      int v36 = v18;
      if (v10)
      {
        uint64_t v19 = *(void *)(a1 + 416);
        int v36 = *(__int16 *)(a1 + 288) + v18;
        int v12 = *(_DWORD *)(a1 + 292) + *(__int16 *)(a1 + 290) + *(unsigned __int8 *)(v19 + v17);
        if (a4) {
          goto LABEL_18;
        }
        goto LABEL_5;
      }
    }
    int v12 = 0;
    if (a4) {
      goto LABEL_18;
    }
LABEL_5:
    int v13 = v36;
    if (v10)
    {
      int v14 = *(_DWORD *)(a1 + 396) + v12;
      int v15 = v36 - v14;
      if (v36 >= v14)
      {
        int v36 = *(_DWORD *)(a1 + 396) + v12;
        int v13 = v14;
        if (v15 < *(_DWORD *)(a1 + 308)) {
LABEL_39:
        }
          v13 -= *(unsigned __int8 *)(*(void *)(a1 + 312) + v15);
      }
      else
      {
        int v15 = v14 - v36;
        if (v14 - v36 < *(_DWORD *)(a1 + 308)) {
          goto LABEL_39;
        }
      }
    }
LABEL_30:
    if (v13 >= 0x7FFF) {
      __int16 v31 = 0x7FFF;
    }
    else {
      __int16 v31 = v13;
    }
    if (v13 >= 0) {
      LOWORD(v16) = v31;
    }
    else {
      LOWORD(v16) = 0;
    }
    return (__int16)v16;
  }
  LOWORD(v16) = qword_100101CC0;
  if (qword_100101CC0)
  {
    uint64_t v16 = *(void *)(qword_100101CC0 + 3624);
    if ((v16 & 0x80000000) != 0)
    {
      LOWORD(v16) = 0;
    }
    else if (v16 >> 15)
    {
      LOWORD(v16) = 0x7FFF;
    }
  }
  return (__int16)v16;
}

uint64_t sub_100077648(uint64_t a1, int a2, unsigned __int16 *a3, int a4, unsigned __int16 *a5, _WORD *a6)
{
  uint64_t v6 = 0;
  int v40 = 0;
  if (a2 == 1)
  {
    int v8 = a5;
    int v9 = a4;
    uint64_t v34 = *(void *)(a1 + 200);
    uint64_t v35 = *(void *)(a1 + 384);
    uint64_t v10 = *(void *)(a1 + 248);
    uint64_t v11 = *(__int16 **)(a1 + 272);
    int v12 = *(unsigned __int16 **)(a1 + 280);
    uint64_t v13 = *(int *)(a1 + 152);
    if (a5)
    {
      __int16 v31 = a3;
      uint64_t v36 = *(void *)(a1 + 216);
      uint64_t v14 = *(void *)(a1 + 232);
      uint64_t v33 = *(void *)(a1 + 376);
      unsigned __int16 v38 = 0;
      int v37 = 0;
      if (a4 >= 1)
      {
        int v15 = v12;
        uint64_t v16 = v11;
        for (uint64_t i = a4; i; --i)
        {
          int v22 = sub_10007BF98(v36, v8, &v40);
          unsigned int v24 = *v8++;
          uint64_t v23 = v24;
          if (v22)
          {
            if (v23 <= v13) {
              goto LABEL_17;
            }
          }
          else
          {
            int v40 = *(__int16 *)(v33 + 2 * ((int)v23 + ~v13));
            if (v23 <= v13)
            {
LABEL_17:
              unsigned __int16 v18 = sub_10007BE20(v34, v23);
              goto LABEL_6;
            }
          }
          unsigned __int16 v18 = *(_WORD *)(v35 + 2 * ((int)v23 + ~v13));
LABEL_6:
          unsigned __int16 v38 = v18;
          *v15++ = v18;
          sub_10007BF98(v14, &v38, &v37);
          int v19 = v40 - v37;
          int v40 = v19;
          if (v19 >= 0x7FFF) {
            __int16 v20 = 0x7FFF;
          }
          else {
            __int16 v20 = v19;
          }
          if (v19 >= 0) {
            __int16 v21 = v20;
          }
          else {
            __int16 v21 = 0;
          }
          *v16++ = v21;
        }
      }
      a3 = v31;
      int v9 = a4;
    }
    uint64_t v25 = *a3;
    if (v25 <= v13)
    {
      v39[0] = sub_10007BE20(v34, v25);
      if (v9 < 1) {
        return 1;
      }
    }
    else
    {
      v39[0] = *(_WORD *)(v35 + 2 * ((int)v25 + ~v13));
      if (v9 < 1) {
        return 1;
      }
    }
    uint64_t v26 = v9;
    do
    {
      unsigned __int16 v27 = *v12++;
      v39[1] = v27;
      sub_10007BF98(v10, v39, &v40);
      int v28 = *v11++;
      int v29 = v40 + v28;
      int v40 = v29;
      if (v29 >= 0x7FFF) {
        LOWORD(v29) = 0x7FFF;
      }
      *a6++ = v29;
      --v26;
    }
    while (v26);
    return 1;
  }
  return v6;
}

uint64_t sub_100077854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!*(_DWORD *)(a1 + 124)) {
    return 0;
  }
  int v8 = a4;
  uint64_t v10 = *(void *)(a1 + 200);
  uint64_t v11 = *(void *)(a1 + 384);
  uint64_t v12 = *(int *)(a1 + 152);
  uint64_t v193 = *(unsigned int *)(a1 + 152);
  uint64_t v13 = (a3 - a4);
  uint64_t v14 = (void *)sub_1000CD3E8(2 * ((int)v13 + 1), a2, a3, a4, a5, a6, a7, a8);
  uint64_t v194 = 2 * ((int)v13 + 1);
  unint64_t v22 = sub_1000CD3E8(v194, v15, v16, v17, v18, v19, v20, v21);
  int v30 = (void *)v22;
  if ((int)v13 >= 1)
  {
    uint64_t v31 = v13;
    uint64_t v32 = v14;
    uint64_t v33 = a2;
    uint64_t v34 = (_WORD *)v22;
    uint64_t v35 = (unsigned __int16 *)(v33 + 2 * v8);
    do
    {
      while (1)
      {
        uint64_t v36 = *v35;
        *uint64_t v32 = v36;
        if (v36 <= v12) {
          break;
        }
        *v34++ = *(_WORD *)(v11 + 2 * ((int)v36 + ~v12));
        ++v35;
        ++v32;
        if (!--v31) {
          goto LABEL_7;
        }
      }
      unsigned int v37 = *v35++;
      *v34++ = sub_10007BE20(v10, v37);
      ++v32;
      --v31;
    }
    while (v31);
  }
LABEL_7:
  uint64_t v38 = 2 * (int)v13;
  *(_WORD *)((char *)v14 + v38) = -1;
  *(_WORD *)((char *)v30 + v38) = -1;
  uint64_t v39 = (void *)sub_1000CD3E8(4 * (int)v13, v23, v24, v25, v26, v27, v28, v29);
  LODWORD(v40) = 0;
  int v41 = 0;
  int v42 = 0;
  *(_DWORD *)uint64_t v39 = v13;
  for (LODWORD(v43) = v13; ; LODWORD(v43) = *((_DWORD *)v39 + v40))
  {
    uint64_t v44 = v41;
    int v45 = v41 + 1;
    while ((int)v43 - (int)v44 > 1)
    {
      uint64_t v46 = (int)v40;
      int v47 = v44 + v43;
      if ((int)v44 + (int)v43 < 0 != __OFADD__(v44, v43)) {
        ++v47;
      }
      int v48 = v47 >> 1;
      uint64_t v49 = 2 * v44;
      __int16 v50 = *((_WORD *)v14 + v44);
      uint64_t v43 = 2 * v48;
      *(_WORD *)((char *)v14 + v49) = *(_WORD *)((char *)v14 + v43);
      *(_WORD *)((char *)v14 + v43) = v50;
      __int16 v51 = *((_WORD *)v30 + v44);
      *(_WORD *)((char *)v30 + v49) = *(_WORD *)((char *)v30 + v43);
      *(_WORD *)((char *)v30 + v43) = v51;
      LODWORD(v43) = *((_DWORD *)v39 + (int)v40) - 1;
      LODWORD(v52) = v45;
      do
      {
        uint64_t v52 = (int)v52;
        uint64_t v53 = (int)v43;
        if ((int)v43 + 1 > (int)v52) {
          uint64_t v54 = (int)v43 + 1;
        }
        else {
          uint64_t v54 = (int)v52;
        }
        while (v54 != v52)
        {
          int v55 = *((unsigned __int16 *)v30 + v44) - *((unsigned __int16 *)v30 + v52);
          if (!v55) {
            int v55 = *((unsigned __int16 *)v14 + v44) - *((unsigned __int16 *)v14 + v52);
          }
          BOOL v56 = (v55 | v42) == 0;
          if (!(v55 | v42)) {
            int v42 = 1;
          }
          ++v52;
          if (v55 < 0 || v56)
          {
            LODWORD(v54) = v52 - 1;
            break;
          }
        }
        LODWORD(v52) = v54;
        uint64_t v57 = (int)v54;
        uint64_t v43 = (int)v54 - 1;
        if (v43 >= v53) {
          LODWORD(v43) = v53;
        }
        while (v53 >= v57)
        {
          int v58 = *((unsigned __int16 *)v30 + v44) - *((unsigned __int16 *)v30 + v53);
          if (!v58) {
            int v58 = *((unsigned __int16 *)v14 + v44) - *((unsigned __int16 *)v14 + v53);
          }
          if (!(v58 | v42)) {
            int v42 = 1;
          }
          --v53;
          if (v58 >= 1)
          {
            LODWORD(v43) = v53 + 1;
            break;
          }
        }
        if ((int)v52 < (int)v43)
        {
          uint64_t v59 = 2 * v57;
          __int16 v60 = *((_WORD *)v14 + v57);
          uint64_t v61 = 2 * (int)v43;
          *(_WORD *)((char *)v14 + v59) = *(_WORD *)((char *)v14 + v61);
          *(_WORD *)((char *)v14 + v61) = v60;
          __int16 v62 = *(_WORD *)((char *)v30 + v59);
          *(_WORD *)((char *)v30 + v59) = *(_WORD *)((char *)v30 + v61);
          *(_WORD *)((char *)v30 + v61) = v62;
          LODWORD(v52) = v52 + 1;
          LODWORD(v43) = v43 - 1;
        }
      }
      while ((int)v52 <= (int)v43);
      if (v44 != v43)
      {
        __int16 v63 = *((_WORD *)v14 + v44);
        uint64_t v64 = 2 * (int)v43;
        *((_WORD *)v14 + v44) = *(_WORD *)((char *)v14 + v64);
        *(_WORD *)((char *)v14 + v64) = v63;
        __int16 v65 = *((_WORD *)v30 + v44);
        *((_WORD *)v30 + v44) = *(_WORD *)((char *)v30 + v64);
        *(_WORD *)((char *)v30 + v64) = v65;
      }
      LODWORD(v40) = v46 + 1;
      *((_DWORD *)v39 + v46 + 1) = v43;
    }
    if (!v40) {
      break;
    }
    int v41 = v43 + 1;
    uint64_t v40 = (int)v40 - 1;
  }
  sub_1000CD4D0(v39, 4 * (int)v13);
  uint64_t v66 = *(void *)(a1 + 336);
  int v67 = *(_DWORD *)(a1 + 328);
  uint64_t v68 = *(void *)(a1 + 360);
  uint64_t v69 = *(int *)(a1 + 352);
  uint64_t v70 = *(uint8x16_t **)(a1 + 400);
  int v71 = *(uint8x16_t **)(a1 + 416);
  if ((int)v13 > 0)
  {
    uint64_t v72 = *(void *)(a1 + 312);
    int v73 = *(_DWORD *)(a1 + 308);
    unsigned int v74 = v67 - 1;
    uint64_t v75 = v69 - 1;
    uint64_t v76 = (v13 + 1);
    unsigned int v77 = *(unsigned __int16 *)v14;
    uint64_t v78 = 1;
    unsigned int v79 = 1;
    while (1)
    {
      while (*((unsigned __int16 *)v14 + v78) == v77)
      {
        ++v79;
        if (++v78 == v76) {
          goto LABEL_67;
        }
      }
      if (v79 < v74) {
        goto LABEL_52;
      }
      unsigned int v80 = 0;
      unsigned int v81 = v79;
      do
      {
        ++v80;
        v81 >>= 1;
      }
      while (v81 >= v74);
      if (v80)
      {
        int v82 = *(unsigned __int8 *)(v66 + (((1 << (v80 - 1)) + v79) >> v80));
        if (v80 < v69) {
          goto LABEL_54;
        }
      }
      else
      {
LABEL_52:
        unsigned int v80 = 0;
        int v82 = *(unsigned __int8 *)(v66 + v79);
        if (v69) {
          goto LABEL_54;
        }
      }
      do
      {
        v82 -= *(unsigned __int8 *)(v68 + v75);
        v80 -= v75;
      }
      while (v80 >= v69);
LABEL_54:
      int v83 = v82 - *(unsigned __int8 *)(v68 + v80);
      if (v77 <= v12) {
        int v84 = &v70->i8[v77];
      }
      else {
        int v84 = &v71->i8[v77 + ~v12];
      }
      int v85 = *(_DWORD *)(a1 + 292);
      int v86 = v85 + *v84;
      int v88 = v83 - v86;
      BOOL v87 = v83 - v86 < 0;
      if (v83 >= v86) {
        int v83 = v85 + *v84;
      }
      if (v87) {
        int v89 = -v88;
      }
      else {
        int v89 = v88;
      }
      if (v89 < v73) {
        v83 -= *(unsigned __int8 *)(v72 + v89);
      }
      int v90 = v83 - v85;
      if (v90 >= 255) {
        int v90 = 255;
      }
      __int8 *v84 = v90 & ~(v90 >> 31);
      unsigned int v77 = *((unsigned __int16 *)v14 + v78);
      unsigned int v79 = 1;
      if (++v78 == v76)
      {
LABEL_67:
        int v91 = *(uint8x16_t **)(a1 + 408);
        int v92 = *(unsigned __int16 *)v30;
        uint64_t v93 = 1;
        unsigned int v94 = 1;
        while (1)
        {
          while (*((unsigned __int16 *)v30 + v93) == v92)
          {
            ++v94;
            if (++v93 == v76) {
              goto LABEL_91;
            }
          }
          if (v94 < v74) {
            goto LABEL_80;
          }
          unsigned int v96 = 0;
          unsigned int v97 = v94;
          do
          {
            ++v96;
            v97 >>= 1;
          }
          while (v97 >= v74);
          if (v96)
          {
            int v98 = *(unsigned __int8 *)(v66 + (((1 << (v96 - 1)) + v94) >> v96));
            if (v96 >= v69) {
              goto LABEL_81;
            }
          }
          else
          {
LABEL_80:
            unsigned int v96 = 0;
            int v98 = *(unsigned __int8 *)(v66 + v94);
            if (!v69)
            {
              do
              {
LABEL_81:
                v98 -= *(unsigned __int8 *)(v68 + v75);
                v96 -= v75;
              }
              while (v96 >= v69);
            }
          }
          int v99 = v98 - *(unsigned __int8 *)(v68 + v96);
          int v100 = *(_DWORD *)(a1 + 296);
          int v101 = v100 + v91->u8[v92];
          int v103 = v99 - v101;
          BOOL v102 = v99 - v101 < 0;
          if (v99 >= v101) {
            int v99 = v100 + v91->u8[v92];
          }
          if (v102) {
            int v104 = -v103;
          }
          else {
            int v104 = v103;
          }
          if (v104 < v73) {
            v99 -= *(unsigned __int8 *)(v72 + v104);
          }
          int v95 = v99 - v100;
          if (v95 >= 255) {
            int v95 = 255;
          }
          v91->i8[v92] = v95 & ~(v95 >> 31);
          int v92 = *((unsigned __int16 *)v30 + v93);
          unsigned int v94 = 1;
          if (++v93 == v76) {
            goto LABEL_91;
          }
        }
      }
    }
  }
  int v91 = *(uint8x16_t **)(a1 + 408);
  unsigned int v74 = v67 - 1;
LABEL_91:
  int v106 = *(_DWORD *)(a1 + 300);
  unsigned int v107 = (1 << v106) + v13;
  if (v107 < v74) {
    goto LABEL_97;
  }
  unsigned int v108 = 0;
  unsigned int v109 = (1 << v106) + v13;
  do
  {
    ++v108;
    v109 >>= 1;
  }
  while (v109 >= v74);
  if (v108)
  {
    int v110 = *(_DWORD *)(a1 + 392);
    int v111 = *(unsigned __int8 *)(v66 + (((1 << (v108 - 1)) + v107) >> v108));
    if (v108 < v69) {
      goto LABEL_99;
    }
  }
  else
  {
LABEL_97:
    unsigned int v108 = 0;
    int v110 = *(_DWORD *)(a1 + 392);
    int v111 = *(unsigned __int8 *)(v66 + v107);
    if (v69) {
      goto LABEL_99;
    }
  }
  do
  {
    v111 -= *(unsigned __int8 *)(v68 + v69 - 1);
    v108 -= v69 - 1;
  }
  while (v108 >= v69);
LABEL_99:
  int v112 = *(unsigned __int8 *)(v68 + v108);
  int v113 = *(_DWORD *)(a1 + 104);
  int v114 = 1 << (v106 - 1);
  unsigned int v115 = (v114 + v113 * v110) >> v106;
  int v116 = v110 + v13;
  unsigned int v117 = *(_DWORD *)(a1 + 396)
       + v112
       - v115
       - (v111
        + ((v114 + v113 * v13) >> v106))
       + ((v114 + v113 * v116) >> v106);
  *(_DWORD *)(a1 + 396) = v117;
  *(_DWORD *)(a1 + 392) = v116;
  if (v116 > *(_DWORD *)(a1 + 304))
  {
    uint64_t v118 = *(unsigned int *)(a1 + 192);
    uint64_t v119 = *(unsigned int *)(a1 + 160);
    if ((v193 & 0x80000000) != 0) {
      goto LABEL_120;
    }
    uint64_t v120 = v193 + 1;
    if (v193 < 7)
    {
      uint64_t v121 = 0;
      goto LABEL_112;
    }
    uint32x4_t v122 = (uint32x4_t)vdupq_n_s32(v117);
    if (v12 >= 0xF)
    {
      uint64_t v121 = v120 & 0xFFFFFFF0;
      v123.i64[0] = 0xFF000000FFLL;
      v123.i64[1] = 0xFF000000FFLL;
      uint64_t v124 = v121;
      uint64_t v125 = v70;
      do
      {
        uint16x8_t v126 = vmovl_high_u8(*v125);
        uint16x8_t v127 = vmovl_u8(*(uint8x8_t *)v125->i8);
        int32x4_t v128 = (int32x4_t)vaddw_u16(v122, *(uint16x4_t *)v127.i8);
        int32x4_t v129 = (int32x4_t)vaddw_high_u16(v122, v127);
        int32x4_t v130 = (int32x4_t)vaddw_u16(v122, *(uint16x4_t *)v126.i8);
        int32x4_t v131 = (int32x4_t)vaddw_high_u16(v122, v126);
        v199.val[3] = (int8x16_t)vminq_u32((uint32x4_t)v131, v123);
        v199.val[2] = (int8x16_t)vminq_u32((uint32x4_t)v130, v123);
        v199.val[1] = (int8x16_t)vminq_u32((uint32x4_t)v129, v123);
        v199.val[0] = (int8x16_t)vminq_u32((uint32x4_t)v128, v123);
        *(int8x16_t *)v125++ = vbicq_s8(vqtbl4q_s8(v199, (int8x16_t)xmmword_1000F4820), vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vcltzq_s32(v128), (int16x8_t)vcltzq_s32(v129)), (int8x16_t)vuzp1q_s16((int16x8_t)vcltzq_s32(v130), (int16x8_t)vcltzq_s32(v131))));
        v124 -= 16;
      }
      while (v124);
      if (v121 == v120) {
        goto LABEL_120;
      }
      if ((v120 & 8) == 0)
      {
LABEL_112:
        uint64_t v139 = &v70->i8[v121];
        uint64_t v140 = v120 - v121;
        do
        {
          int v141 = v117 + *v139;
          if (v141 >= 0xFF) {
            char v142 = -1;
          }
          else {
            char v142 = v117 + *v139;
          }
          if (v141 >= 0) {
            char v143 = v142;
          }
          else {
            char v143 = 0;
          }
          *v139++ = v143;
          --v140;
        }
        while (v140);
LABEL_120:
        if ((v118 & 0x80000000) != 0) {
          goto LABEL_140;
        }
        uint64_t v144 = v118 + 1;
        if (v118 < 7)
        {
          uint64_t v145 = 0;
          goto LABEL_132;
        }
        if (v118 >= 0xF)
        {
          uint32x4_t v146 = (uint32x4_t)vdupq_n_s32(v117);
          uint64_t v145 = v144 & 0xFFFFFFF0;
          v147.i64[0] = 0xFF000000FFLL;
          v147.i64[1] = 0xFF000000FFLL;
          uint64_t v148 = v145;
          int v149 = v91;
          do
          {
            uint16x8_t v150 = vmovl_high_u8(*v149);
            uint16x8_t v151 = vmovl_u8(*(uint8x8_t *)v149->i8);
            int32x4_t v152 = (int32x4_t)vaddw_u16(v146, *(uint16x4_t *)v151.i8);
            int32x4_t v153 = (int32x4_t)vaddw_high_u16(v146, v151);
            int32x4_t v154 = (int32x4_t)vaddw_u16(v146, *(uint16x4_t *)v150.i8);
            int32x4_t v155 = (int32x4_t)vaddw_high_u16(v146, v150);
            v200.val[3] = (int8x16_t)vminq_u32((uint32x4_t)v155, v147);
            v200.val[2] = (int8x16_t)vminq_u32((uint32x4_t)v154, v147);
            v200.val[1] = (int8x16_t)vminq_u32((uint32x4_t)v153, v147);
            v200.val[0] = (int8x16_t)vminq_u32((uint32x4_t)v152, v147);
            *(int8x16_t *)v149++ = vbicq_s8(vqtbl4q_s8(v200, (int8x16_t)xmmword_1000F4820), vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vcltzq_s32(v152), (int16x8_t)vcltzq_s32(v153)), (int8x16_t)vuzp1q_s16((int16x8_t)vcltzq_s32(v154), (int16x8_t)vcltzq_s32(v155))));
            v148 -= 16;
          }
          while (v148);
          if (v145 == v144) {
            goto LABEL_140;
          }
          if ((v144 & 8) == 0)
          {
LABEL_132:
            v164 = &v91->i8[v145];
            uint64_t v165 = v144 - v145;
            do
            {
              int v166 = v117 + *v164;
              if (v166 >= 0xFF) {
                char v167 = -1;
              }
              else {
                char v167 = v117 + *v164;
              }
              if (v166 >= 0) {
                char v168 = v167;
              }
              else {
                char v168 = 0;
              }
              *v164++ = v168;
              --v165;
            }
            while (v165);
LABEL_140:
            if ((int)v119 >= 1)
            {
              if (v119 < 8)
              {
                uint64_t v169 = 0;
                goto LABEL_152;
              }
              if (v119 >= 0x10)
              {
                uint32x4_t v170 = (uint32x4_t)vdupq_n_s32(v117);
                uint64_t v169 = v119 & 0xFFFFFFF0;
                v171.i64[0] = 0xFF000000FFLL;
                v171.i64[1] = 0xFF000000FFLL;
                uint64_t v172 = v169;
                int v173 = v71;
                do
                {
                  uint16x8_t v174 = vmovl_high_u8(*v173);
                  uint16x8_t v175 = vmovl_u8(*(uint8x8_t *)v173->i8);
                  int32x4_t v176 = (int32x4_t)vaddw_u16(v170, *(uint16x4_t *)v175.i8);
                  int32x4_t v177 = (int32x4_t)vaddw_high_u16(v170, v175);
                  int32x4_t v178 = (int32x4_t)vaddw_u16(v170, *(uint16x4_t *)v174.i8);
                  int32x4_t v179 = (int32x4_t)vaddw_high_u16(v170, v174);
                  v201.val[3] = (int8x16_t)vminq_u32((uint32x4_t)v179, v171);
                  v201.val[2] = (int8x16_t)vminq_u32((uint32x4_t)v178, v171);
                  v201.val[1] = (int8x16_t)vminq_u32((uint32x4_t)v177, v171);
                  v201.val[0] = (int8x16_t)vminq_u32((uint32x4_t)v176, v171);
                  *(int8x16_t *)v173++ = vbicq_s8(vqtbl4q_s8(v201, (int8x16_t)xmmword_1000F4820), vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vcltzq_s32(v176), (int16x8_t)vcltzq_s32(v177)), (int8x16_t)vuzp1q_s16((int16x8_t)vcltzq_s32(v178), (int16x8_t)vcltzq_s32(v179))));
                  v172 -= 16;
                }
                while (v172);
                if (v169 == v119) {
                  goto LABEL_160;
                }
                if ((v119 & 8) == 0) {
                  goto LABEL_152;
                }
              }
              else
              {
                uint64_t v169 = 0;
              }
              uint64_t v180 = v169;
              uint32x4_t v181 = (uint32x4_t)vdupq_n_s32(v117);
              uint64_t v169 = v119 & 0xFFFFFFF8;
              uint64_t v182 = (uint8x8_t *)&v71->i8[v180];
              uint64_t v183 = v180 - v169;
              v184.i64[0] = 0xFF000000FFLL;
              v184.i64[1] = 0xFF000000FFLL;
              do
              {
                uint16x8_t v185 = vmovl_u8(*v182);
                int32x4_t v186 = (int32x4_t)vaddw_u16(v181, *(uint16x4_t *)v185.i8);
                int32x4_t v187 = (int32x4_t)vaddw_high_u16(v181, v185);
                v198.val[1] = (int8x16_t)vminq_u32((uint32x4_t)v187, v184);
                v198.val[0] = (int8x16_t)vminq_u32((uint32x4_t)v186, v184);
                *v182++ = (uint8x8_t)vbic_s8((int8x8_t)*(_OWORD *)&vqtbl2q_s8(v198, (int8x16_t)xmmword_1000F4830), vmovn_s16(vuzp1q_s16((int16x8_t)vcltzq_s32(v186), (int16x8_t)vcltzq_s32(v187))));
                v183 += 8;
              }
              while (v183);
              if (v169 != v119)
              {
LABEL_152:
                __int16 v188 = &v71->i8[v169];
                uint64_t v189 = v119 - v169;
                do
                {
                  int v190 = v117 + *v188;
                  if (v190 >= 0xFF) {
                    char v191 = -1;
                  }
                  else {
                    char v191 = v117 + *v188;
                  }
                  if (v190 >= 0) {
                    char v192 = v191;
                  }
                  else {
                    char v192 = 0;
                  }
                  *v188++ = v192;
                  --v189;
                }
                while (v189);
              }
            }
LABEL_160:
            *(void *)(a1 + 392) = 0;
            goto LABEL_161;
          }
        }
        else
        {
          uint64_t v145 = 0;
        }
        uint64_t v156 = v145;
        uint32x4_t v157 = (uint32x4_t)vdupq_n_s32(v117);
        uint64_t v145 = v144 & 0xFFFFFFF8;
        v158 = (uint8x8_t *)&v91->i8[v156];
        uint64_t v159 = v156 - v145;
        v160.i64[0] = 0xFF000000FFLL;
        v160.i64[1] = 0xFF000000FFLL;
        do
        {
          uint16x8_t v161 = vmovl_u8(*v158);
          int32x4_t v162 = (int32x4_t)vaddw_u16(v157, *(uint16x4_t *)v161.i8);
          int32x4_t v163 = (int32x4_t)vaddw_high_u16(v157, v161);
          v197.val[1] = (int8x16_t)vminq_u32((uint32x4_t)v163, v160);
          v197.val[0] = (int8x16_t)vminq_u32((uint32x4_t)v162, v160);
          *v158++ = (uint8x8_t)vbic_s8((int8x8_t)*(_OWORD *)&vqtbl2q_s8(v197, (int8x16_t)xmmword_1000F4830), vmovn_s16(vuzp1q_s16((int16x8_t)vcltzq_s32(v162), (int16x8_t)vcltzq_s32(v163))));
          v159 += 8;
        }
        while (v159);
        if (v145 == v144) {
          goto LABEL_140;
        }
        goto LABEL_132;
      }
    }
    else
    {
      uint64_t v121 = 0;
    }
    uint64_t v132 = v121;
    uint64_t v121 = v120 & 0xFFFFFFF8;
    v133 = (uint8x8_t *)&v70->i8[v132];
    uint64_t v134 = v132 - v121;
    v135.i64[0] = 0xFF000000FFLL;
    v135.i64[1] = 0xFF000000FFLL;
    do
    {
      uint16x8_t v136 = vmovl_u8(*v133);
      int32x4_t v137 = (int32x4_t)vaddw_u16(v122, *(uint16x4_t *)v136.i8);
      int32x4_t v138 = (int32x4_t)vaddw_high_u16(v122, v136);
      v196.val[1] = (int8x16_t)vminq_u32((uint32x4_t)v138, v135);
      v196.val[0] = (int8x16_t)vminq_u32((uint32x4_t)v137, v135);
      *v133++ = (uint8x8_t)vbic_s8((int8x8_t)*(_OWORD *)&vqtbl2q_s8(v196, (int8x16_t)xmmword_1000F4830), vmovn_s16(vuzp1q_s16((int16x8_t)vcltzq_s32(v137), (int16x8_t)vcltzq_s32(v138))));
      v134 += 8;
    }
    while (v134);
    if (v121 == v120) {
      goto LABEL_120;
    }
    goto LABEL_112;
  }
LABEL_161:
  sub_1000CD4D0(v30, v194);
  sub_1000CD4D0(v14, v194);
  return 1;
}

BOOL sub_100078278(uint64_t a1, uint64_t a2, unsigned int a3, int a4)
{
  __int16 v4 = a4;
  int v6 = a2;
  if (a4 == 0xFFFF) {
    __int16 v4 = *(_WORD *)(a1 + 266);
  }
  BOOL result = sub_100076FA0(a1, a2);
  if (result)
  {
    int v9 = ~*(_DWORD *)(a1 + 152) + v6;
    __int16 v10 = a3;
    if (a3 >= 0x7FFF) {
      __int16 v10 = *(_WORD *)(a1 + 264);
    }
    uint64_t v11 = 2 * v9;
    *(_WORD *)(*(void *)(a1 + 376) + v11) = v10;
    *(_WORD *)(*(void *)(a1 + 384) + v11) = v4;
    if (*(_DWORD *)(a1 + 124))
    {
      int v12 = a3 - *(_DWORD *)(a1 + 292);
      if (v12 >= 0xFF) {
        LOBYTE(v13) = -1;
      }
      else {
        unsigned int v13 = a3 - *(_DWORD *)(a1 + 292);
      }
      if (v12 >= 0) {
        char v14 = v13;
      }
      else {
        char v14 = 0;
      }
      *(unsigned char *)(*(void *)(a1 + 416) + v9) = v14;
    }
    return 1;
  }
  return result;
}

BOOL sub_100078334(uint64_t a1, uint64_t a2)
{
  int v2 = a2;
  BOOL result = sub_100076FA0(a1, a2);
  if (result)
  {
    uint64_t v5 = 2 * (~*(_DWORD *)(a1 + 152) + v2);
    *(_WORD *)(*(void *)(a1 + 376) + v5) = 0x7FFF;
    *(_WORD *)(*(void *)(a1 + 384) + v5) = -1;
    return 1;
  }
  return result;
}

BOOL sub_10007838C(uint64_t a1, uint64_t a2)
{
  BOOL result = sub_100076F2C(a1, a2);
  if (result)
  {
    BOOL result = sub_1000BEFCC(a2, *(void **)(a1 + 376), *(_DWORD *)(a1 + 160), 2);
    if (result)
    {
      BOOL result = sub_1000BEFCC(a2, *(void **)(a1 + 384), *(_DWORD *)(a1 + 160), 2);
      if (result)
      {
        BOOL result = sub_1000BEECC(a2, (void *)(a1 + 392));
        if (result)
        {
          BOOL result = sub_1000BEECC(a2, (void *)(a1 + 396));
          if (result)
          {
            BOOL result = sub_1000BEFCC(a2, *(void **)(a1 + 400), *(_DWORD *)(a1 + 152) + 1, 1);
            if (result)
            {
              BOOL result = sub_1000BEFCC(a2, *(void **)(a1 + 408), *(_DWORD *)(a1 + 192) + 1, 1);
              if (result) {
                return sub_1000BEFCC(a2, *(void **)(a1 + 416), *(_DWORD *)(a1 + 160), 1);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

int8x8_t *sub_10007845C(uint64_t a1, uint64_t a2, uint8x8_t a3)
{
  BOOL result = (int8x8_t *)sub_100076F60(a1, a2, a3);
  if (result)
  {
    int v7 = *(void **)(a1 + 376);
    if (v7)
    {
      BOOL result = sub_1000BFDB0(a2, v7, *(_DWORD *)(a1 + 160), 2, v6);
      if (!result) {
        return result;
      }
    }
    else
    {
      BOOL result = sub_1000BFDB0(a2, 0, 0, 2, v6);
      if (!result) {
        return result;
      }
    }
    int v9 = *(void **)(a1 + 384);
    if (v9)
    {
      BOOL result = sub_1000BFDB0(a2, v9, *(_DWORD *)(a1 + 160), 2, v8);
      if (!result) {
        return result;
      }
    }
    else
    {
      BOOL result = sub_1000BFDB0(a2, 0, 0, 2, v8);
      if (!result) {
        return result;
      }
    }
    BOOL result = (int8x8_t *)sub_1000BFD58(a2, *(_DWORD *)(a1 + 392), v10);
    if (result)
    {
      BOOL result = (int8x8_t *)sub_1000BFD58(a2, *(_DWORD *)(a1 + 396), v11);
      if (result)
      {
        unsigned int v13 = *(void **)(a1 + 400);
        if (v13)
        {
          BOOL result = sub_1000BFDB0(a2, v13, *(_DWORD *)(a1 + 152) + 1, 1, v12);
          if (!result) {
            return result;
          }
        }
        else
        {
          BOOL result = sub_1000BFDB0(a2, 0, 0, 1, v12);
          if (!result) {
            return result;
          }
        }
        uint64_t v15 = *(void **)(a1 + 408);
        if (v15)
        {
          BOOL result = sub_1000BFDB0(a2, v15, *(_DWORD *)(a1 + 192) + 1, 1, v14);
          if (!result) {
            return result;
          }
        }
        else
        {
          BOOL result = sub_1000BFDB0(a2, 0, 0, 1, v14);
          if (!result) {
            return result;
          }
        }
        uint64_t v17 = *(void **)(a1 + 416);
        if (v17) {
          unsigned int v18 = *(_DWORD *)(a1 + 160);
        }
        else {
          unsigned int v18 = 0;
        }
        return (int8x8_t *)(sub_1000BFDB0(a2, v17, v18, 1, v16) != 0);
      }
    }
  }
  return result;
}

_DWORD *sub_1000785B0(uint64_t a1)
{
  uint64_t v2 = sub_1000C33A0(424);
  int v3 = (_DWORD *)v2;
  if (!v2) {
    return v3;
  }
  if (!sub_100076D98(v2, a1))
  {
LABEL_33:
    sub_1000C321C((uint64_t)v3);
    return 0;
  }
  if (!sub_1000BEECC(a1, v3 + 48)) {
    goto LABEL_32;
  }
  if (!sub_1000BEF74(a1, (_WORD *)v3 + 132)) {
    goto LABEL_32;
  }
  if (!sub_1000BEF74(a1, (_WORD *)v3 + 133)) {
    goto LABEL_32;
  }
  if (!sub_1000BEF74(a1, (_WORD *)v3 + 144)) {
    goto LABEL_32;
  }
  if (!sub_1000BEF74(a1, (_WORD *)v3 + 145)) {
    goto LABEL_32;
  }
  if (!sub_1000BEECC(a1, v3 + 73)) {
    goto LABEL_32;
  }
  if (!sub_1000BEECC(a1, v3 + 74)) {
    goto LABEL_32;
  }
  if (!sub_1000BEECC(a1, v3 + 75)) {
    goto LABEL_32;
  }
  if (!sub_1000BEECC(a1, v3 + 76)) {
    goto LABEL_32;
  }
  if (!sub_1000BEECC(a1, v3 + 77)) {
    goto LABEL_32;
  }
  if (!sub_1000BEECC(a1, v3 + 82)) {
    goto LABEL_32;
  }
  if (!sub_1000BEECC(a1, v3 + 88)) {
    goto LABEL_32;
  }
  int v14 = 0;
  __int16 v4 = v3 + 80;
  if (!sub_1000BF078(a1, 1, (uint64_t *)v3 + 40, &v14)) {
    goto LABEL_32;
  }
  if (*v4)
  {
    if (v14 != v3[77]) {
      goto LABEL_32;
    }
    *((void *)v3 + 39) = *v4;
  }
  int v13 = 0;
  uint64_t v5 = v3 + 86;
  if (!sub_1000BF078(a1, 1, (uint64_t *)v3 + 43, &v13)) {
    goto LABEL_32;
  }
  if (*v5)
  {
    if (v13 != v3[82]) {
      goto LABEL_32;
    }
    *((void *)v3 + 42) = *v5;
  }
  int v12 = 0;
  uint8x8_t v6 = v3 + 92;
  if (!sub_1000BF078(a1, 1, (uint64_t *)v3 + 46, &v12)) {
    goto LABEL_32;
  }
  if (*v6)
  {
    if (v12 == v3[88])
    {
      *((void *)v3 + 45) = *v6;
      goto LABEL_27;
    }
LABEL_32:
    sub_1000772DC((uint64_t *)v3);
    goto LABEL_33;
  }
LABEL_27:
  uint64_t v7 = sub_10007BE80(a1);
  *((void *)v3 + 26) = v7;
  if (!v7) {
    goto LABEL_32;
  }
  *((void *)v3 + 25) = v7;
  uint64_t v8 = sub_10007C12C(a1);
  *((void *)v3 + 28) = v8;
  if (!v8) {
    goto LABEL_32;
  }
  *((void *)v3 + 27) = v8;
  uint64_t v9 = sub_10007C12C(a1);
  *((void *)v3 + 30) = v9;
  if (!v9) {
    goto LABEL_32;
  }
  *((void *)v3 + 29) = v9;
  uint64_t v10 = sub_10007C12C(a1);
  *((void *)v3 + 32) = v10;
  if (!v10) {
    goto LABEL_32;
  }
  *((void *)v3 + 31) = v10;
  if (!sub_100076FD8((uint64_t)v3)) {
    goto LABEL_32;
  }
  return v3;
}

uint64_t sub_1000787FC(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_1000787FC;
  *(void *)(a1 + 24) = sub_100078ABC;
  *(void *)(a1 + 8) = sub_100078B00;
  *(void *)(a1 + 32) = sub_100078BB4;
  *(void *)(a1 + 40) = sub_100078F20;
  *(void *)(a1 + 48) = sub_10007912C;
  *(void *)(a1 + 56) = sub_100079B50;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 64) = sub_100079C0C;
  *(void *)(a1 + 88) = sub_100079C64;
  *(void *)(a1 + 96) = sub_100079D34;
  uint64_t v2 = *(unsigned int *)(a1 + 116);
  if ((int)v2 < 1
    || (uint64_t result = sub_1000C33A0(2 * v2), (*(void *)(a1 + 304) = result) != 0)
    && (uint64_t result = sub_1000C33A0(2 * *(int *)(a1 + 116)), (*(void *)(a1 + 312) = result) != 0))
  {
    uint64_t v4 = *(unsigned int *)(a1 + 160);
    if ((int)v4 >= 1)
    {
      uint64_t result = (uint64_t)sub_1000C328C(2 * v4);
      *(void *)(a1 + 408) = result;
      if (!result) {
        return result;
      }
      uint64_t result = (uint64_t)sub_1000C328C(2 * *(int *)(a1 + 160));
      *(void *)(a1 + 416) = result;
      if (!result) {
        return result;
      }
      if (*(int *)(a1 + 160) >= 1)
      {
        uint64_t v5 = 0;
        do
        {
          uint64_t v6 = 2 * v5;
          *(_WORD *)(*(void *)(a1 + 408) + v6) = 0x7FFF;
          *(_WORD *)(*(void *)(a1 + 416) + v6) = -1;
          ++v5;
        }
        while (v5 < *(int *)(a1 + 160));
      }
    }
    if (!*(_DWORD *)(a1 + 124)) {
      return 1;
    }
    *(void *)(a1 + 424) = 0;
    uint64_t result = (uint64_t)sub_1000C328C(*(int *)(a1 + 152) + 1);
    *(void *)(a1 + 432) = result;
    if (result)
    {
      unsigned __int16 v17 = 0;
      if ((*(_DWORD *)(a1 + 152) & 0x80000000) == 0)
      {
        do
        {
          int v16 = 0;
          sub_10007BF98(*(void *)(a1 + 216), &v17, &v16);
          int v7 = v16 - *(_DWORD *)(a1 + 324);
          if (v7 >= 0xFF) {
            LOBYTE(v8) = -1;
          }
          else {
            int v8 = v16 - *(_DWORD *)(a1 + 324);
          }
          if (v7 >= 0) {
            char v9 = v8;
          }
          else {
            char v9 = 0;
          }
          *(unsigned char *)(*(void *)(a1 + 432) + v17++) = v9;
        }
        while (*(_DWORD *)(a1 + 152) >= (int)v17);
      }
      uint64_t result = (uint64_t)sub_1000C328C(*(int *)(a1 + 192) + 1);
      *(void *)(a1 + 440) = result;
      if (result)
      {
        unsigned __int16 v17 = 0;
        if ((*(_DWORD *)(a1 + 192) & 0x80000000) == 0)
        {
          do
          {
            int v15 = 255;
            sub_10007BF98(*(void *)(a1 + 232), &v17, &v15);
            int v10 = v15 - *(_DWORD *)(a1 + 328);
            if (v10 >= 0xFF) {
              LOBYTE(v11) = -1;
            }
            else {
              int v11 = v15 - *(_DWORD *)(a1 + 328);
            }
            if (v10 >= 0) {
              char v12 = v11;
            }
            else {
              char v12 = 0;
            }
            *(unsigned char *)(*(void *)(a1 + 440) + v17++) = v12;
          }
          while (*(_DWORD *)(a1 + 192) >= (int)v17);
        }
        unint64_t v13 = *(unsigned int *)(a1 + 160);
        if ((int)v13 >= 1)
        {
          uint64_t result = (uint64_t)sub_1000C328C(v13);
          *(void *)(a1 + 448) = result;
          if (!result) {
            return result;
          }
          if (*(int *)(a1 + 160) >= 1)
          {
            uint64_t v14 = 0;
            uint64_t result = 1;
            do
              *(unsigned char *)(*(void *)(a1 + 448) + v14++) = -1;
            while (v14 < *(int *)(a1 + 160));
            return result;
          }
        }
        return 1;
      }
    }
  }
  return result;
}

void *sub_100078ABC(const void *a1)
{
  uint64_t v2 = (void *)sub_1000C33A0(456);
  int v3 = v2;
  if (v2) {
    memcpy(v2, a1, 0x1C8uLL);
  }
  return v3;
}

uint64_t sub_100078B00(uint64_t *a1)
{
  sub_1000C321C(a1[56]);
  sub_1000C321C(a1[55]);
  sub_1000C321C(a1[54]);
  sub_1000C321C(a1[52]);
  sub_1000C321C(a1[51]);
  sub_1000C321C(a1[50]);
  sub_1000C321C(a1[47]);
  sub_1000C321C(a1[44]);
  sub_1000C321C(a1[39]);
  sub_1000C321C(a1[38]);
  sub_10007BF44(a1[36]);
  sub_10007BF44(a1[34]);
  sub_10007BF44(a1[32]);
  sub_10007BF44(a1[30]);
  sub_10007BF44(a1[28]);
  sub_10007BDDC(a1[26]);
  return sub_100076D5C((uint64_t)a1);
}

uint64_t sub_100078BB4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v36 = 0;
  uint64_t v5 = (_WORD *)(a2 + 2 * a4);
  if (*v5)
  {
    uint64_t v9 = *(int *)(a1 + 152);
    int v10 = *(_DWORD *)(a1 + 124) & a5;
    if (sub_10007BF98(*(void *)(a1 + 216), (unsigned __int16 *)(a2 + 2 * a4), &v36))
    {
      if (v10)
      {
        uint64_t v11 = *(void *)(a1 + 432);
        v36 += *(__int16 *)(a1 + 320);
        int v12 = *(_DWORD *)(a1 + 324) + *(__int16 *)(a1 + 322) + *(unsigned __int8 *)(v11 + (unsigned __int16)*v5);
        if (!a4) {
          goto LABEL_5;
        }
LABEL_18:
        uint64_t v20 = *(void *)(a1 + 200);
        uint64_t v21 = *(void *)(a1 + 416);
        unsigned __int16 v33 = 1;
        int v32 = 0;
        if (a4 >= 2)
        {
          uint64_t v22 = *(unsigned __int16 *)(a2 + 2 * (a4 - 2));
          if (v22 <= v9)
          {
            unsigned __int16 v33 = sub_10007BE20(v20, v22);
            uint64_t v23 = *(unsigned __int16 *)(a2 + 2 * a4 - 2);
            if (v23 > v9)
            {
LABEL_22:
              unsigned __int16 v34 = *(_WORD *)(v21 + 2 * ((int)v23 + ~v9));
              uint64_t v24 = (unsigned __int16)*v5;
              if (v24 <= v9)
              {
LABEL_23:
                unsigned __int16 v25 = sub_10007BE20(v20, v24);
                goto LABEL_27;
              }
LABEL_26:
              unsigned __int16 v25 = *(_WORD *)(v21 + 2 * ((int)v24 + ~v9));
LABEL_27:
              unsigned __int16 v35 = v25;
              sub_10007BF98(*(void *)(a1 + 232), &v35, &v32);
              int v26 = v36 - v32;
              v36 -= v32;
              if (v10)
              {
                int v27 = v12 - *(_DWORD *)(a1 + 328) - *(unsigned __int8 *)(*(void *)(a1 + 440) + v35);
                int v28 = v26 - v27;
                if (v26 < v27)
                {
                  int v28 = v27 - v26;
                  if (v27 - v26 >= *(_DWORD *)(a1 + 340)) {
                    goto LABEL_33;
                  }
                  goto LABEL_32;
                }
                int v36 = v12 - *(_DWORD *)(a1 + 328) - *(unsigned __int8 *)(*(void *)(a1 + 440) + v35);
                int v26 = v27;
                if (v28 < *(_DWORD *)(a1 + 340)) {
LABEL_32:
                }
                  int v36 = v26 - *(unsigned __int8 *)(*(void *)(a1 + 344) + v28);
              }
LABEL_33:
              if (a4 >= 2)
              {
                if (!sub_10007BF98(*(void *)(a1 + 264), &v33, &v32))
                {
                  int v31 = 0;
                  sub_10007BF98(*(void *)(a1 + 248), &v34, &v32);
                  if (sub_10007BF98(*(void *)(a1 + 280), &v33, &v31)) {
                    v32 += v31;
                  }
                }
              }
              else
              {
                sub_10007BF98(*(void *)(a1 + 248), &v34, &v32);
              }
              int v13 = v36 + v32;
              goto LABEL_39;
            }
LABEL_25:
            unsigned __int16 v34 = sub_10007BE20(v20, v23);
            uint64_t v24 = (unsigned __int16)*v5;
            if (v24 <= v9) {
              goto LABEL_23;
            }
            goto LABEL_26;
          }
          unsigned __int16 v33 = *(_WORD *)(v21 + 2 * ((int)v22 + ~v9));
        }
        uint64_t v23 = *(unsigned __int16 *)(a2 + 2 * a4 - 2);
        if (v23 > v9) {
          goto LABEL_22;
        }
        goto LABEL_25;
      }
    }
    else
    {
      int v17 = (unsigned __int16)*v5 + ~v9;
      int v18 = *(__int16 *)(*(void *)(a1 + 408) + 2 * v17);
      int v36 = v18;
      if (v10)
      {
        uint64_t v19 = *(void *)(a1 + 448);
        int v36 = *(__int16 *)(a1 + 320) + v18;
        int v12 = *(_DWORD *)(a1 + 324) + *(__int16 *)(a1 + 322) + *(unsigned __int8 *)(v19 + v17);
        if (a4) {
          goto LABEL_18;
        }
        goto LABEL_5;
      }
    }
    int v12 = 0;
    if (a4) {
      goto LABEL_18;
    }
LABEL_5:
    int v13 = v36;
    if (v10)
    {
      int v14 = *(_DWORD *)(a1 + 428) + v12;
      int v15 = v36 - v14;
      if (v36 >= v14)
      {
        int v36 = *(_DWORD *)(a1 + 428) + v12;
        int v13 = v14;
        if (v15 < *(_DWORD *)(a1 + 340)) {
LABEL_48:
        }
          v13 -= *(unsigned __int8 *)(*(void *)(a1 + 344) + v15);
      }
      else
      {
        int v15 = v14 - v36;
        if (v14 - v36 < *(_DWORD *)(a1 + 340)) {
          goto LABEL_48;
        }
      }
    }
LABEL_39:
    if (v13 >= 0x7FFF) {
      __int16 v29 = 0x7FFF;
    }
    else {
      __int16 v29 = v13;
    }
    if (v13 >= 0) {
      LOWORD(v16) = v29;
    }
    else {
      LOWORD(v16) = 0;
    }
    return (__int16)v16;
  }
  LOWORD(v16) = qword_100101CC0;
  if (qword_100101CC0)
  {
    uint64_t v16 = *(void *)(qword_100101CC0 + 3624);
    if ((v16 & 0x80000000) != 0)
    {
      LOWORD(v16) = 0;
    }
    else if (v16 >> 15)
    {
      LOWORD(v16) = 0x7FFF;
    }
  }
  return (__int16)v16;
}

uint64_t sub_100078F20(uint64_t a1, int a2, unsigned __int16 *a3, int a4, unsigned __int16 *a5, _WORD *a6)
{
  uint64_t v6 = 0;
  int v40 = 0;
  if (a2 == 1)
  {
    int v8 = a5;
    int v9 = a4;
    uint64_t v34 = *(void *)(a1 + 200);
    uint64_t v35 = *(void *)(a1 + 416);
    uint64_t v10 = *(void *)(a1 + 248);
    uint64_t v11 = *(__int16 **)(a1 + 304);
    int v12 = *(unsigned __int16 **)(a1 + 312);
    uint64_t v13 = *(int *)(a1 + 152);
    if (a5)
    {
      int v31 = a3;
      uint64_t v36 = *(void *)(a1 + 216);
      uint64_t v14 = *(void *)(a1 + 232);
      uint64_t v33 = *(void *)(a1 + 408);
      unsigned __int16 v38 = 0;
      int v37 = 0;
      if (a4 >= 1)
      {
        int v15 = v12;
        uint64_t v16 = v11;
        for (uint64_t i = a4; i; --i)
        {
          int v22 = sub_10007BF98(v36, v8, &v40);
          unsigned int v24 = *v8++;
          uint64_t v23 = v24;
          if (v22)
          {
            if (v23 <= v13) {
              goto LABEL_17;
            }
          }
          else
          {
            int v40 = *(__int16 *)(v33 + 2 * ((int)v23 + ~v13));
            if (v23 <= v13)
            {
LABEL_17:
              unsigned __int16 v18 = sub_10007BE20(v34, v23);
              goto LABEL_6;
            }
          }
          unsigned __int16 v18 = *(_WORD *)(v35 + 2 * ((int)v23 + ~v13));
LABEL_6:
          unsigned __int16 v38 = v18;
          *v15++ = v18;
          sub_10007BF98(v14, &v38, &v37);
          int v19 = v40 - v37;
          int v40 = v19;
          if (v19 >= 0x7FFF) {
            __int16 v20 = 0x7FFF;
          }
          else {
            __int16 v20 = v19;
          }
          if (v19 >= 0) {
            __int16 v21 = v20;
          }
          else {
            __int16 v21 = 0;
          }
          *v16++ = v21;
        }
      }
      a3 = v31;
      int v9 = a4;
    }
    uint64_t v25 = *a3;
    if (v25 <= v13)
    {
      v39[0] = sub_10007BE20(v34, v25);
      if (v9 < 1) {
        return 1;
      }
    }
    else
    {
      v39[0] = *(_WORD *)(v35 + 2 * ((int)v25 + ~v13));
      if (v9 < 1) {
        return 1;
      }
    }
    uint64_t v26 = v9;
    do
    {
      unsigned __int16 v27 = *v12++;
      v39[1] = v27;
      sub_10007BF98(v10, v39, &v40);
      int v28 = *v11++;
      int v29 = v40 + v28;
      int v40 = v29;
      if (v29 >= 0x7FFF) {
        LOWORD(v29) = 0x7FFF;
      }
      *a6++ = v29;
      --v26;
    }
    while (v26);
    return 1;
  }
  return v6;
}

uint64_t sub_10007912C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!*(_DWORD *)(a1 + 124)) {
    return 0;
  }
  int v8 = a4;
  uint64_t v10 = *(void *)(a1 + 200);
  uint64_t v11 = *(void *)(a1 + 416);
  uint64_t v12 = *(int *)(a1 + 152);
  uint64_t v193 = *(unsigned int *)(a1 + 152);
  uint64_t v13 = (a3 - a4);
  uint64_t v14 = (void *)sub_1000CD3E8(2 * ((int)v13 + 1), a2, a3, a4, a5, a6, a7, a8);
  uint64_t v194 = 2 * ((int)v13 + 1);
  unint64_t v22 = sub_1000CD3E8(v194, v15, v16, v17, v18, v19, v20, v21);
  int v30 = (void *)v22;
  if ((int)v13 >= 1)
  {
    uint64_t v31 = v13;
    int v32 = v14;
    uint64_t v33 = a2;
    uint64_t v34 = (_WORD *)v22;
    uint64_t v35 = (unsigned __int16 *)(v33 + 2 * v8);
    do
    {
      while (1)
      {
        uint64_t v36 = *v35;
        *int v32 = v36;
        if (v36 <= v12) {
          break;
        }
        *v34++ = *(_WORD *)(v11 + 2 * ((int)v36 + ~v12));
        ++v35;
        ++v32;
        if (!--v31) {
          goto LABEL_7;
        }
      }
      unsigned int v37 = *v35++;
      *v34++ = sub_10007BE20(v10, v37);
      ++v32;
      --v31;
    }
    while (v31);
  }
LABEL_7:
  uint64_t v38 = 2 * (int)v13;
  *(_WORD *)((char *)v14 + v38) = -1;
  *(_WORD *)((char *)v30 + v38) = -1;
  uint64_t v39 = (void *)sub_1000CD3E8(4 * (int)v13, v23, v24, v25, v26, v27, v28, v29);
  LODWORD(v40) = 0;
  int v41 = 0;
  int v42 = 0;
  *(_DWORD *)uint64_t v39 = v13;
  for (LODWORD(v43) = v13; ; LODWORD(v43) = *((_DWORD *)v39 + v40))
  {
    uint64_t v44 = v41;
    int v45 = v41 + 1;
    while ((int)v43 - (int)v44 > 1)
    {
      uint64_t v46 = (int)v40;
      int v47 = v44 + v43;
      if ((int)v44 + (int)v43 < 0 != __OFADD__(v44, v43)) {
        ++v47;
      }
      int v48 = v47 >> 1;
      uint64_t v49 = 2 * v44;
      __int16 v50 = *((_WORD *)v14 + v44);
      uint64_t v43 = 2 * v48;
      *(_WORD *)((char *)v14 + v49) = *(_WORD *)((char *)v14 + v43);
      *(_WORD *)((char *)v14 + v43) = v50;
      __int16 v51 = *((_WORD *)v30 + v44);
      *(_WORD *)((char *)v30 + v49) = *(_WORD *)((char *)v30 + v43);
      *(_WORD *)((char *)v30 + v43) = v51;
      LODWORD(v43) = *((_DWORD *)v39 + (int)v40) - 1;
      LODWORD(v52) = v45;
      do
      {
        uint64_t v52 = (int)v52;
        uint64_t v53 = (int)v43;
        if ((int)v43 + 1 > (int)v52) {
          uint64_t v54 = (int)v43 + 1;
        }
        else {
          uint64_t v54 = (int)v52;
        }
        while (v54 != v52)
        {
          int v55 = *((unsigned __int16 *)v30 + v44) - *((unsigned __int16 *)v30 + v52);
          if (!v55) {
            int v55 = *((unsigned __int16 *)v14 + v44) - *((unsigned __int16 *)v14 + v52);
          }
          BOOL v56 = (v55 | v42) == 0;
          if (!(v55 | v42)) {
            int v42 = 1;
          }
          ++v52;
          if (v55 < 0 || v56)
          {
            LODWORD(v54) = v52 - 1;
            break;
          }
        }
        LODWORD(v52) = v54;
        uint64_t v57 = (int)v54;
        uint64_t v43 = (int)v54 - 1;
        if (v43 >= v53) {
          LODWORD(v43) = v53;
        }
        while (v53 >= v57)
        {
          int v58 = *((unsigned __int16 *)v30 + v44) - *((unsigned __int16 *)v30 + v53);
          if (!v58) {
            int v58 = *((unsigned __int16 *)v14 + v44) - *((unsigned __int16 *)v14 + v53);
          }
          if (!(v58 | v42)) {
            int v42 = 1;
          }
          --v53;
          if (v58 >= 1)
          {
            LODWORD(v43) = v53 + 1;
            break;
          }
        }
        if ((int)v52 < (int)v43)
        {
          uint64_t v59 = 2 * v57;
          __int16 v60 = *((_WORD *)v14 + v57);
          uint64_t v61 = 2 * (int)v43;
          *(_WORD *)((char *)v14 + v59) = *(_WORD *)((char *)v14 + v61);
          *(_WORD *)((char *)v14 + v61) = v60;
          __int16 v62 = *(_WORD *)((char *)v30 + v59);
          *(_WORD *)((char *)v30 + v59) = *(_WORD *)((char *)v30 + v61);
          *(_WORD *)((char *)v30 + v61) = v62;
          LODWORD(v52) = v52 + 1;
          LODWORD(v43) = v43 - 1;
        }
      }
      while ((int)v52 <= (int)v43);
      if (v44 != v43)
      {
        __int16 v63 = *((_WORD *)v14 + v44);
        uint64_t v64 = 2 * (int)v43;
        *((_WORD *)v14 + v44) = *(_WORD *)((char *)v14 + v64);
        *(_WORD *)((char *)v14 + v64) = v63;
        __int16 v65 = *((_WORD *)v30 + v44);
        *((_WORD *)v30 + v44) = *(_WORD *)((char *)v30 + v64);
        *(_WORD *)((char *)v30 + v64) = v65;
      }
      LODWORD(v40) = v46 + 1;
      *((_DWORD *)v39 + v46 + 1) = v43;
    }
    if (!v40) {
      break;
    }
    int v41 = v43 + 1;
    uint64_t v40 = (int)v40 - 1;
  }
  sub_1000CD4D0(v39, 4 * (int)v13);
  uint64_t v66 = *(void *)(a1 + 368);
  int v67 = *(_DWORD *)(a1 + 360);
  uint64_t v68 = *(void *)(a1 + 392);
  uint64_t v69 = *(int *)(a1 + 384);
  uint64_t v70 = *(uint8x16_t **)(a1 + 432);
  int v71 = *(uint8x16_t **)(a1 + 448);
  if ((int)v13 > 0)
  {
    uint64_t v72 = *(void *)(a1 + 344);
    int v73 = *(_DWORD *)(a1 + 340);
    unsigned int v74 = v67 - 1;
    uint64_t v75 = v69 - 1;
    uint64_t v76 = (v13 + 1);
    unsigned int v77 = *(unsigned __int16 *)v14;
    uint64_t v78 = 1;
    unsigned int v79 = 1;
    while (1)
    {
      while (*((unsigned __int16 *)v14 + v78) == v77)
      {
        ++v79;
        if (++v78 == v76) {
          goto LABEL_67;
        }
      }
      if (v79 < v74) {
        goto LABEL_52;
      }
      unsigned int v80 = 0;
      unsigned int v81 = v79;
      do
      {
        ++v80;
        v81 >>= 1;
      }
      while (v81 >= v74);
      if (v80)
      {
        int v82 = *(unsigned __int8 *)(v66 + (((1 << (v80 - 1)) + v79) >> v80));
        if (v80 < v69) {
          goto LABEL_54;
        }
      }
      else
      {
LABEL_52:
        unsigned int v80 = 0;
        int v82 = *(unsigned __int8 *)(v66 + v79);
        if (v69) {
          goto LABEL_54;
        }
      }
      do
      {
        v82 -= *(unsigned __int8 *)(v68 + v75);
        v80 -= v75;
      }
      while (v80 >= v69);
LABEL_54:
      int v83 = v82 - *(unsigned __int8 *)(v68 + v80);
      if (v77 <= v12) {
        int v84 = &v70->i8[v77];
      }
      else {
        int v84 = &v71->i8[v77 + ~v12];
      }
      int v85 = *(_DWORD *)(a1 + 324);
      int v86 = v85 + *v84;
      int v88 = v83 - v86;
      BOOL v87 = v83 - v86 < 0;
      if (v83 >= v86) {
        int v83 = v85 + *v84;
      }
      if (v87) {
        int v89 = -v88;
      }
      else {
        int v89 = v88;
      }
      if (v89 < v73) {
        v83 -= *(unsigned __int8 *)(v72 + v89);
      }
      int v90 = v83 - v85;
      if (v90 >= 255) {
        int v90 = 255;
      }
      __int8 *v84 = v90 & ~(v90 >> 31);
      unsigned int v77 = *((unsigned __int16 *)v14 + v78);
      unsigned int v79 = 1;
      if (++v78 == v76)
      {
LABEL_67:
        int v91 = *(uint8x16_t **)(a1 + 440);
        int v92 = *(unsigned __int16 *)v30;
        uint64_t v93 = 1;
        unsigned int v94 = 1;
        while (1)
        {
          while (*((unsigned __int16 *)v30 + v93) == v92)
          {
            ++v94;
            if (++v93 == v76) {
              goto LABEL_91;
            }
          }
          if (v94 < v74) {
            goto LABEL_80;
          }
          unsigned int v96 = 0;
          unsigned int v97 = v94;
          do
          {
            ++v96;
            v97 >>= 1;
          }
          while (v97 >= v74);
          if (v96)
          {
            int v98 = *(unsigned __int8 *)(v66 + (((1 << (v96 - 1)) + v94) >> v96));
            if (v96 >= v69) {
              goto LABEL_81;
            }
          }
          else
          {
LABEL_80:
            unsigned int v96 = 0;
            int v98 = *(unsigned __int8 *)(v66 + v94);
            if (!v69)
            {
              do
              {
LABEL_81:
                v98 -= *(unsigned __int8 *)(v68 + v75);
                v96 -= v75;
              }
              while (v96 >= v69);
            }
          }
          int v99 = v98 - *(unsigned __int8 *)(v68 + v96);
          int v100 = *(_DWORD *)(a1 + 328);
          int v101 = v100 + v91->u8[v92];
          int v103 = v99 - v101;
          BOOL v102 = v99 - v101 < 0;
          if (v99 >= v101) {
            int v99 = v100 + v91->u8[v92];
          }
          if (v102) {
            int v104 = -v103;
          }
          else {
            int v104 = v103;
          }
          if (v104 < v73) {
            v99 -= *(unsigned __int8 *)(v72 + v104);
          }
          int v95 = v99 - v100;
          if (v95 >= 255) {
            int v95 = 255;
          }
          v91->i8[v92] = v95 & ~(v95 >> 31);
          int v92 = *((unsigned __int16 *)v30 + v93);
          unsigned int v94 = 1;
          if (++v93 == v76) {
            goto LABEL_91;
          }
        }
      }
    }
  }
  int v91 = *(uint8x16_t **)(a1 + 440);
  unsigned int v74 = v67 - 1;
LABEL_91:
  int v106 = *(_DWORD *)(a1 + 332);
  unsigned int v107 = (1 << v106) + v13;
  if (v107 < v74) {
    goto LABEL_97;
  }
  unsigned int v108 = 0;
  unsigned int v109 = (1 << v106) + v13;
  do
  {
    ++v108;
    v109 >>= 1;
  }
  while (v109 >= v74);
  if (v108)
  {
    int v110 = *(_DWORD *)(a1 + 424);
    int v111 = *(unsigned __int8 *)(v66 + (((1 << (v108 - 1)) + v107) >> v108));
    if (v108 < v69) {
      goto LABEL_99;
    }
  }
  else
  {
LABEL_97:
    unsigned int v108 = 0;
    int v110 = *(_DWORD *)(a1 + 424);
    int v111 = *(unsigned __int8 *)(v66 + v107);
    if (v69) {
      goto LABEL_99;
    }
  }
  do
  {
    v111 -= *(unsigned __int8 *)(v68 + v69 - 1);
    v108 -= v69 - 1;
  }
  while (v108 >= v69);
LABEL_99:
  int v112 = *(unsigned __int8 *)(v68 + v108);
  int v113 = *(_DWORD *)(a1 + 104);
  int v114 = 1 << (v106 - 1);
  unsigned int v115 = (v114 + v113 * v110) >> v106;
  int v116 = v110 + v13;
  unsigned int v117 = *(_DWORD *)(a1 + 428)
       + v112
       - v115
       - (v111
        + ((v114 + v113 * v13) >> v106))
       + ((v114 + v113 * v116) >> v106);
  *(_DWORD *)(a1 + 428) = v117;
  *(_DWORD *)(a1 + 424) = v116;
  if (v116 > *(_DWORD *)(a1 + 336))
  {
    uint64_t v118 = *(unsigned int *)(a1 + 192);
    uint64_t v119 = *(unsigned int *)(a1 + 160);
    if ((v193 & 0x80000000) != 0) {
      goto LABEL_120;
    }
    uint64_t v120 = v193 + 1;
    if (v193 < 7)
    {
      uint64_t v121 = 0;
      goto LABEL_112;
    }
    uint32x4_t v122 = (uint32x4_t)vdupq_n_s32(v117);
    if (v12 >= 0xF)
    {
      uint64_t v121 = v120 & 0xFFFFFFF0;
      v123.i64[0] = 0xFF000000FFLL;
      v123.i64[1] = 0xFF000000FFLL;
      uint64_t v124 = v121;
      uint64_t v125 = v70;
      do
      {
        uint16x8_t v126 = vmovl_high_u8(*v125);
        uint16x8_t v127 = vmovl_u8(*(uint8x8_t *)v125->i8);
        int32x4_t v128 = (int32x4_t)vaddw_u16(v122, *(uint16x4_t *)v127.i8);
        int32x4_t v129 = (int32x4_t)vaddw_high_u16(v122, v127);
        int32x4_t v130 = (int32x4_t)vaddw_u16(v122, *(uint16x4_t *)v126.i8);
        int32x4_t v131 = (int32x4_t)vaddw_high_u16(v122, v126);
        v199.val[3] = (int8x16_t)vminq_u32((uint32x4_t)v131, v123);
        v199.val[2] = (int8x16_t)vminq_u32((uint32x4_t)v130, v123);
        v199.val[1] = (int8x16_t)vminq_u32((uint32x4_t)v129, v123);
        v199.val[0] = (int8x16_t)vminq_u32((uint32x4_t)v128, v123);
        *(int8x16_t *)v125++ = vbicq_s8(vqtbl4q_s8(v199, (int8x16_t)xmmword_1000F4820), vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vcltzq_s32(v128), (int16x8_t)vcltzq_s32(v129)), (int8x16_t)vuzp1q_s16((int16x8_t)vcltzq_s32(v130), (int16x8_t)vcltzq_s32(v131))));
        v124 -= 16;
      }
      while (v124);
      if (v121 == v120) {
        goto LABEL_120;
      }
      if ((v120 & 8) == 0)
      {
LABEL_112:
        uint64_t v139 = &v70->i8[v121];
        uint64_t v140 = v120 - v121;
        do
        {
          int v141 = v117 + *v139;
          if (v141 >= 0xFF) {
            char v142 = -1;
          }
          else {
            char v142 = v117 + *v139;
          }
          if (v141 >= 0) {
            char v143 = v142;
          }
          else {
            char v143 = 0;
          }
          *v139++ = v143;
          --v140;
        }
        while (v140);
LABEL_120:
        if ((v118 & 0x80000000) != 0) {
          goto LABEL_140;
        }
        uint64_t v144 = v118 + 1;
        if (v118 < 7)
        {
          uint64_t v145 = 0;
          goto LABEL_132;
        }
        if (v118 >= 0xF)
        {
          uint32x4_t v146 = (uint32x4_t)vdupq_n_s32(v117);
          uint64_t v145 = v144 & 0xFFFFFFF0;
          v147.i64[0] = 0xFF000000FFLL;
          v147.i64[1] = 0xFF000000FFLL;
          uint64_t v148 = v145;
          int v149 = v91;
          do
          {
            uint16x8_t v150 = vmovl_high_u8(*v149);
            uint16x8_t v151 = vmovl_u8(*(uint8x8_t *)v149->i8);
            int32x4_t v152 = (int32x4_t)vaddw_u16(v146, *(uint16x4_t *)v151.i8);
            int32x4_t v153 = (int32x4_t)vaddw_high_u16(v146, v151);
            int32x4_t v154 = (int32x4_t)vaddw_u16(v146, *(uint16x4_t *)v150.i8);
            int32x4_t v155 = (int32x4_t)vaddw_high_u16(v146, v150);
            v200.val[3] = (int8x16_t)vminq_u32((uint32x4_t)v155, v147);
            v200.val[2] = (int8x16_t)vminq_u32((uint32x4_t)v154, v147);
            v200.val[1] = (int8x16_t)vminq_u32((uint32x4_t)v153, v147);
            v200.val[0] = (int8x16_t)vminq_u32((uint32x4_t)v152, v147);
            *(int8x16_t *)v149++ = vbicq_s8(vqtbl4q_s8(v200, (int8x16_t)xmmword_1000F4820), vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vcltzq_s32(v152), (int16x8_t)vcltzq_s32(v153)), (int8x16_t)vuzp1q_s16((int16x8_t)vcltzq_s32(v154), (int16x8_t)vcltzq_s32(v155))));
            v148 -= 16;
          }
          while (v148);
          if (v145 == v144) {
            goto LABEL_140;
          }
          if ((v144 & 8) == 0)
          {
LABEL_132:
            v164 = &v91->i8[v145];
            uint64_t v165 = v144 - v145;
            do
            {
              int v166 = v117 + *v164;
              if (v166 >= 0xFF) {
                char v167 = -1;
              }
              else {
                char v167 = v117 + *v164;
              }
              if (v166 >= 0) {
                char v168 = v167;
              }
              else {
                char v168 = 0;
              }
              *v164++ = v168;
              --v165;
            }
            while (v165);
LABEL_140:
            if ((int)v119 >= 1)
            {
              if (v119 < 8)
              {
                uint64_t v169 = 0;
                goto LABEL_152;
              }
              if (v119 >= 0x10)
              {
                uint32x4_t v170 = (uint32x4_t)vdupq_n_s32(v117);
                uint64_t v169 = v119 & 0xFFFFFFF0;
                v171.i64[0] = 0xFF000000FFLL;
                v171.i64[1] = 0xFF000000FFLL;
                uint64_t v172 = v169;
                int v173 = v71;
                do
                {
                  uint16x8_t v174 = vmovl_high_u8(*v173);
                  uint16x8_t v175 = vmovl_u8(*(uint8x8_t *)v173->i8);
                  int32x4_t v176 = (int32x4_t)vaddw_u16(v170, *(uint16x4_t *)v175.i8);
                  int32x4_t v177 = (int32x4_t)vaddw_high_u16(v170, v175);
                  int32x4_t v178 = (int32x4_t)vaddw_u16(v170, *(uint16x4_t *)v174.i8);
                  int32x4_t v179 = (int32x4_t)vaddw_high_u16(v170, v174);
                  v201.val[3] = (int8x16_t)vminq_u32((uint32x4_t)v179, v171);
                  v201.val[2] = (int8x16_t)vminq_u32((uint32x4_t)v178, v171);
                  v201.val[1] = (int8x16_t)vminq_u32((uint32x4_t)v177, v171);
                  v201.val[0] = (int8x16_t)vminq_u32((uint32x4_t)v176, v171);
                  *(int8x16_t *)v173++ = vbicq_s8(vqtbl4q_s8(v201, (int8x16_t)xmmword_1000F4820), vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vcltzq_s32(v176), (int16x8_t)vcltzq_s32(v177)), (int8x16_t)vuzp1q_s16((int16x8_t)vcltzq_s32(v178), (int16x8_t)vcltzq_s32(v179))));
                  v172 -= 16;
                }
                while (v172);
                if (v169 == v119) {
                  goto LABEL_160;
                }
                if ((v119 & 8) == 0) {
                  goto LABEL_152;
                }
              }
              else
              {
                uint64_t v169 = 0;
              }
              uint64_t v180 = v169;
              uint32x4_t v181 = (uint32x4_t)vdupq_n_s32(v117);
              uint64_t v169 = v119 & 0xFFFFFFF8;
              uint64_t v182 = (uint8x8_t *)&v71->i8[v180];
              uint64_t v183 = v180 - v169;
              v184.i64[0] = 0xFF000000FFLL;
              v184.i64[1] = 0xFF000000FFLL;
              do
              {
                uint16x8_t v185 = vmovl_u8(*v182);
                int32x4_t v186 = (int32x4_t)vaddw_u16(v181, *(uint16x4_t *)v185.i8);
                int32x4_t v187 = (int32x4_t)vaddw_high_u16(v181, v185);
                v198.val[1] = (int8x16_t)vminq_u32((uint32x4_t)v187, v184);
                v198.val[0] = (int8x16_t)vminq_u32((uint32x4_t)v186, v184);
                *v182++ = (uint8x8_t)vbic_s8((int8x8_t)*(_OWORD *)&vqtbl2q_s8(v198, (int8x16_t)xmmword_1000F4830), vmovn_s16(vuzp1q_s16((int16x8_t)vcltzq_s32(v186), (int16x8_t)vcltzq_s32(v187))));
                v183 += 8;
              }
              while (v183);
              if (v169 != v119)
              {
LABEL_152:
                __int16 v188 = &v71->i8[v169];
                uint64_t v189 = v119 - v169;
                do
                {
                  int v190 = v117 + *v188;
                  if (v190 >= 0xFF) {
                    char v191 = -1;
                  }
                  else {
                    char v191 = v117 + *v188;
                  }
                  if (v190 >= 0) {
                    char v192 = v191;
                  }
                  else {
                    char v192 = 0;
                  }
                  *v188++ = v192;
                  --v189;
                }
                while (v189);
              }
            }
LABEL_160:
            *(void *)(a1 + 424) = 0;
            goto LABEL_161;
          }
        }
        else
        {
          uint64_t v145 = 0;
        }
        uint64_t v156 = v145;
        uint32x4_t v157 = (uint32x4_t)vdupq_n_s32(v117);
        uint64_t v145 = v144 & 0xFFFFFFF8;
        v158 = (uint8x8_t *)&v91->i8[v156];
        uint64_t v159 = v156 - v145;
        v160.i64[0] = 0xFF000000FFLL;
        v160.i64[1] = 0xFF000000FFLL;
        do
        {
          uint16x8_t v161 = vmovl_u8(*v158);
          int32x4_t v162 = (int32x4_t)vaddw_u16(v157, *(uint16x4_t *)v161.i8);
          int32x4_t v163 = (int32x4_t)vaddw_high_u16(v157, v161);
          v197.val[1] = (int8x16_t)vminq_u32((uint32x4_t)v163, v160);
          v197.val[0] = (int8x16_t)vminq_u32((uint32x4_t)v162, v160);
          *v158++ = (uint8x8_t)vbic_s8((int8x8_t)*(_OWORD *)&vqtbl2q_s8(v197, (int8x16_t)xmmword_1000F4830), vmovn_s16(vuzp1q_s16((int16x8_t)vcltzq_s32(v162), (int16x8_t)vcltzq_s32(v163))));
          v159 += 8;
        }
        while (v159);
        if (v145 == v144) {
          goto LABEL_140;
        }
        goto LABEL_132;
      }
    }
    else
    {
      uint64_t v121 = 0;
    }
    uint64_t v132 = v121;
    uint64_t v121 = v120 & 0xFFFFFFF8;
    v133 = (uint8x8_t *)&v70->i8[v132];
    uint64_t v134 = v132 - v121;
    v135.i64[0] = 0xFF000000FFLL;
    v135.i64[1] = 0xFF000000FFLL;
    do
    {
      uint16x8_t v136 = vmovl_u8(*v133);
      int32x4_t v137 = (int32x4_t)vaddw_u16(v122, *(uint16x4_t *)v136.i8);
      int32x4_t v138 = (int32x4_t)vaddw_high_u16(v122, v136);
      v196.val[1] = (int8x16_t)vminq_u32((uint32x4_t)v138, v135);
      v196.val[0] = (int8x16_t)vminq_u32((uint32x4_t)v137, v135);
      *v133++ = (uint8x8_t)vbic_s8((int8x8_t)*(_OWORD *)&vqtbl2q_s8(v196, (int8x16_t)xmmword_1000F4830), vmovn_s16(vuzp1q_s16((int16x8_t)vcltzq_s32(v137), (int16x8_t)vcltzq_s32(v138))));
      v134 += 8;
    }
    while (v134);
    if (v121 == v120) {
      goto LABEL_120;
    }
    goto LABEL_112;
  }
LABEL_161:
  sub_1000CD4D0(v30, v194);
  sub_1000CD4D0(v14, v194);
  return 1;
}

BOOL sub_100079B50(uint64_t a1, uint64_t a2, unsigned int a3, int a4)
{
  __int16 v4 = a4;
  int v6 = a2;
  if (a4 == 0xFFFF) {
    __int16 v4 = *(_WORD *)(a1 + 298);
  }
  BOOL result = sub_100076FA0(a1, a2);
  if (result)
  {
    int v9 = ~*(_DWORD *)(a1 + 152) + v6;
    __int16 v10 = a3;
    if (a3 >= 0x7FFF) {
      __int16 v10 = *(_WORD *)(a1 + 296);
    }
    uint64_t v11 = 2 * v9;
    *(_WORD *)(*(void *)(a1 + 408) + v11) = v10;
    *(_WORD *)(*(void *)(a1 + 416) + v11) = v4;
    if (*(_DWORD *)(a1 + 124))
    {
      int v12 = a3 - *(_DWORD *)(a1 + 324);
      if (v12 >= 0xFF) {
        LOBYTE(v13) = -1;
      }
      else {
        unsigned int v13 = a3 - *(_DWORD *)(a1 + 324);
      }
      if (v12 >= 0) {
        char v14 = v13;
      }
      else {
        char v14 = 0;
      }
      *(unsigned char *)(*(void *)(a1 + 448) + v9) = v14;
    }
    return 1;
  }
  return result;
}

BOOL sub_100079C0C(uint64_t a1, uint64_t a2)
{
  int v2 = a2;
  BOOL result = sub_100076FA0(a1, a2);
  if (result)
  {
    uint64_t v5 = 2 * (~*(_DWORD *)(a1 + 152) + v2);
    *(_WORD *)(*(void *)(a1 + 408) + v5) = 0x7FFF;
    *(_WORD *)(*(void *)(a1 + 416) + v5) = -1;
    return 1;
  }
  return result;
}

BOOL sub_100079C64(uint64_t a1, uint64_t a2)
{
  BOOL result = sub_100076F2C(a1, a2);
  if (result)
  {
    BOOL result = sub_1000BEFCC(a2, *(void **)(a1 + 408), *(_DWORD *)(a1 + 160), 2);
    if (result)
    {
      BOOL result = sub_1000BEFCC(a2, *(void **)(a1 + 416), *(_DWORD *)(a1 + 160), 2);
      if (result)
      {
        BOOL result = sub_1000BEECC(a2, (void *)(a1 + 424));
        if (result)
        {
          BOOL result = sub_1000BEECC(a2, (void *)(a1 + 428));
          if (result)
          {
            BOOL result = sub_1000BEFCC(a2, *(void **)(a1 + 432), *(_DWORD *)(a1 + 152) + 1, 1);
            if (result)
            {
              BOOL result = sub_1000BEFCC(a2, *(void **)(a1 + 440), *(_DWORD *)(a1 + 192) + 1, 1);
              if (result) {
                return sub_1000BEFCC(a2, *(void **)(a1 + 448), *(_DWORD *)(a1 + 160), 1);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

int8x8_t *sub_100079D34(uint64_t a1, uint64_t a2, uint8x8_t a3)
{
  BOOL result = (int8x8_t *)sub_100076F60(a1, a2, a3);
  if (result)
  {
    int v7 = *(void **)(a1 + 408);
    if (v7)
    {
      BOOL result = sub_1000BFDB0(a2, v7, *(_DWORD *)(a1 + 160), 2, v6);
      if (!result) {
        return result;
      }
    }
    else
    {
      BOOL result = sub_1000BFDB0(a2, 0, 0, 2, v6);
      if (!result) {
        return result;
      }
    }
    int v9 = *(void **)(a1 + 416);
    if (v9)
    {
      BOOL result = sub_1000BFDB0(a2, v9, *(_DWORD *)(a1 + 160), 2, v8);
      if (!result) {
        return result;
      }
    }
    else
    {
      BOOL result = sub_1000BFDB0(a2, 0, 0, 2, v8);
      if (!result) {
        return result;
      }
    }
    BOOL result = (int8x8_t *)sub_1000BFD58(a2, *(_DWORD *)(a1 + 424), v10);
    if (result)
    {
      BOOL result = (int8x8_t *)sub_1000BFD58(a2, *(_DWORD *)(a1 + 428), v11);
      if (result)
      {
        unsigned int v13 = *(void **)(a1 + 432);
        if (v13)
        {
          BOOL result = sub_1000BFDB0(a2, v13, *(_DWORD *)(a1 + 152) + 1, 1, v12);
          if (!result) {
            return result;
          }
        }
        else
        {
          BOOL result = sub_1000BFDB0(a2, 0, 0, 1, v12);
          if (!result) {
            return result;
          }
        }
        uint64_t v15 = *(void **)(a1 + 440);
        if (v15)
        {
          BOOL result = sub_1000BFDB0(a2, v15, *(_DWORD *)(a1 + 192) + 1, 1, v14);
          if (!result) {
            return result;
          }
        }
        else
        {
          BOOL result = sub_1000BFDB0(a2, 0, 0, 1, v14);
          if (!result) {
            return result;
          }
        }
        uint64_t v17 = *(void **)(a1 + 448);
        if (v17) {
          unsigned int v18 = *(_DWORD *)(a1 + 160);
        }
        else {
          unsigned int v18 = 0;
        }
        return (int8x8_t *)(sub_1000BFDB0(a2, v17, v18, 1, v16) != 0);
      }
    }
  }
  return result;
}

_DWORD *sub_100079E88(uint64_t a1)
{
  uint64_t v2 = sub_1000C33A0(456);
  int v3 = (_DWORD *)v2;
  if (!v2) {
    return v3;
  }
  if (!sub_100076D98(v2, a1))
  {
LABEL_35:
    sub_1000C321C((uint64_t)v3);
    return 0;
  }
  if (!sub_1000BEECC(a1, v3 + 48)) {
    goto LABEL_34;
  }
  if (!sub_1000BEF74(a1, (_WORD *)v3 + 148)) {
    goto LABEL_34;
  }
  if (!sub_1000BEF74(a1, (_WORD *)v3 + 149)) {
    goto LABEL_34;
  }
  if (!sub_1000BEF74(a1, (_WORD *)v3 + 160)) {
    goto LABEL_34;
  }
  if (!sub_1000BEF74(a1, (_WORD *)v3 + 161)) {
    goto LABEL_34;
  }
  if (!sub_1000BEECC(a1, v3 + 81)) {
    goto LABEL_34;
  }
  if (!sub_1000BEECC(a1, v3 + 82)) {
    goto LABEL_34;
  }
  if (!sub_1000BEECC(a1, v3 + 83)) {
    goto LABEL_34;
  }
  if (!sub_1000BEECC(a1, v3 + 84)) {
    goto LABEL_34;
  }
  if (!sub_1000BEECC(a1, v3 + 85)) {
    goto LABEL_34;
  }
  if (!sub_1000BEECC(a1, v3 + 90)) {
    goto LABEL_34;
  }
  if (!sub_1000BEECC(a1, v3 + 96)) {
    goto LABEL_34;
  }
  int v16 = 0;
  __int16 v4 = v3 + 88;
  if (!sub_1000BF078(a1, 1, (uint64_t *)v3 + 44, &v16)) {
    goto LABEL_34;
  }
  if (*v4)
  {
    if (v16 != v3[85]) {
      goto LABEL_34;
    }
    *((void *)v3 + 43) = *v4;
  }
  int v15 = 0;
  uint64_t v5 = v3 + 94;
  if (!sub_1000BF078(a1, 1, (uint64_t *)v3 + 47, &v15)) {
    goto LABEL_34;
  }
  if (*v5)
  {
    if (v15 != v3[90]) {
      goto LABEL_34;
    }
    *((void *)v3 + 46) = *v5;
  }
  int v14 = 0;
  uint8x8_t v6 = v3 + 100;
  if (!sub_1000BF078(a1, 1, (uint64_t *)v3 + 50, &v14)) {
    goto LABEL_34;
  }
  if (*v6)
  {
    if (v14 == v3[96])
    {
      *((void *)v3 + 49) = *v6;
      goto LABEL_27;
    }
LABEL_34:
    sub_100078B00((uint64_t *)v3);
    goto LABEL_35;
  }
LABEL_27:
  uint64_t v7 = sub_10007BE80(a1);
  *((void *)v3 + 26) = v7;
  if (!v7) {
    goto LABEL_34;
  }
  *((void *)v3 + 25) = v7;
  uint64_t v8 = sub_10007C12C(a1);
  *((void *)v3 + 28) = v8;
  if (!v8) {
    goto LABEL_34;
  }
  *((void *)v3 + 27) = v8;
  uint64_t v9 = sub_10007C12C(a1);
  *((void *)v3 + 30) = v9;
  if (!v9) {
    goto LABEL_34;
  }
  *((void *)v3 + 29) = v9;
  uint64_t v10 = sub_10007C12C(a1);
  *((void *)v3 + 32) = v10;
  if (!v10) {
    goto LABEL_34;
  }
  *((void *)v3 + 31) = v10;
  uint64_t v11 = sub_10007C12C(a1);
  *((void *)v3 + 34) = v11;
  if (!v11) {
    goto LABEL_34;
  }
  *((void *)v3 + 33) = v11;
  uint64_t v12 = sub_10007C12C(a1);
  *((void *)v3 + 36) = v12;
  if (!v12) {
    goto LABEL_34;
  }
  *((void *)v3 + 35) = v12;
  if (!sub_1000787FC((uint64_t)v3)) {
    goto LABEL_34;
  }
  return v3;
}

uint64_t sub_10007A0FC(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(void))(a1 + 16);
  if (v1) {
    return v1();
  }
  else {
    return 0xFFFFFFFFLL;
  }
}

uint64_t sub_10007A110(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 24))();
}

void *sub_10007A118(uint64_t a1)
{
  int v3 = 0;
  if (!sub_1000BEECC(a1, &v3)) {
    return 0;
  }
  if (v3 != 1)
  {
    if (!v3) {
      return sub_10007A450(a1);
    }
    return 0;
  }
  return (void *)sub_10007A888(a1);
}

uint64_t sub_10007A194(void *a1)
{
  sub_1000C321C(a1[18]);
  sub_1000C321C(a1[16]);
  sub_1000C321C(a1[13]);
  sub_1000C321C(a1[10]);
  uint64_t v2 = a1[7];
  return sub_10007C2D8(v2);
}

uint64_t sub_10007A1E8(uint64_t a1, uint64_t a2, _WORD *a3, unsigned char *a4, unsigned int a5)
{
  uint64_t v9 = *(__int16 **)(a1 + 72);
  unsigned int v10 = *v9;
  if ((v10 & 0x80000000) == 0)
  {
    unsigned int v12 = 0;
    v13.i64[0] = -1;
    v13.i64[1] = -1;
    v14.i64[0] = 0x100000001;
    v14.i64[1] = 0x100000001;
    while (1)
    {
      int v15 = *(_DWORD *)(a1 + 88);
      unsigned int v16 = *(unsigned __int16 *)(*(void *)(a1 + 96) + 2 * (int)(v12 >> v15));
      unsigned int v17 = v12 >> v15 << v15;
      if (v17 > v12) {
        goto LABEL_16;
      }
      unsigned int v18 = v12 + 1;
      if (v12 + 1 <= v17 + 1) {
        unsigned int v18 = v17 + 1;
      }
      unsigned int v19 = v18 - v17;
      unsigned int v20 = v18 - 1;
      if (v19 < 0x10 || v20 < v17) {
        break;
      }
      unsigned int v22 = v17 + (v19 & 0xFFFFFFF0);
      int32x4_t v23 = 0uLL;
      int32x4_t v24 = (int32x4_t)v16;
      unsigned int v25 = v19 & 0xFFFFFFF0;
      int32x4_t v26 = 0uLL;
      int32x4_t v27 = 0uLL;
      do
      {
        uint64_t v28 = (int16x8_t *)&v9[v17];
        uint16x8_t v29 = (uint16x8_t)vcgtq_s16(*v28, v13);
        uint16x8_t v30 = (uint16x8_t)vcgtq_s16(v28[1], v13);
        int32x4_t v23 = vaddq_s32(v23, (int32x4_t)vandq_s8((int8x16_t)vmovl_high_u16(v29), v14));
        int32x4_t v24 = vaddq_s32(v24, (int32x4_t)vandq_s8((int8x16_t)vmovl_u16(*(uint16x4_t *)v29.i8), v14));
        int32x4_t v27 = vaddq_s32(v27, (int32x4_t)vandq_s8((int8x16_t)vmovl_high_u16(v30), v14));
        int32x4_t v26 = vaddq_s32(v26, (int32x4_t)vandq_s8((int8x16_t)vmovl_u16(*(uint16x4_t *)v30.i8), v14));
        v17 += 16;
        v25 -= 16;
      }
      while (v25);
      unsigned int v16 = vaddvq_s32(vaddq_s32(vaddq_s32(v26, v24), vaddq_s32(v27, v23)));
      if (v19 != (v19 & 0xFFFFFFF0)) {
        goto LABEL_15;
      }
LABEL_16:
      int v31 = *(unsigned __int16 *)(a2 + 2 * ((v10 >> 8) & 0x7F));
      int v32 = v10;
      if ((_BYTE)v10)
      {
        if (*(_WORD *)(a2 + 2 * ((v10 >> 8) & 0x7F)))
        {
          uint64_t v33 = *(void *)(a1 + 48);
          uint64_t v46 = 0;
          int v45 = 0;
          sub_10007C324(v33, v10, &v46, &v45);
          v14.i64[0] = 0x100000001;
          v14.i64[1] = 0x100000001;
          v13.i64[0] = -1;
          v13.i64[1] = -1;
          uint64_t v34 = v45;
          if (v45 >= 1)
          {
            uint64_t v35 = v46;
            do
            {
              int v36 = *v35++;
              if (v36 == v31) {
                goto LABEL_24;
              }
            }
            while (--v34);
          }
        }
      }
      if (v32 || v31)
      {
        unsigned int v12 = 2 * v16;
        uint64_t v9 = *(__int16 **)(a1 + 72);
        unsigned int v10 = v9[2 * v16];
        if ((v10 & 0x80000000) != 0) {
          goto LABEL_25;
        }
      }
      else
      {
LABEL_24:
        unsigned int v12 = 2 * v16 - 1;
        uint64_t v9 = *(__int16 **)(a1 + 72);
        unsigned int v10 = v9[v12];
        if ((v10 & 0x80000000) != 0)
        {
LABEL_25:
          unsigned int v37 = &v9[v12];
          goto LABEL_27;
        }
      }
    }
    unsigned int v22 = v17;
    do
LABEL_15:
      v16 += ((unsigned __int16)v9[v22++] >> 15) ^ 1;
    while (v22 <= v12);
    goto LABEL_16;
  }
  unsigned int v37 = *(__int16 **)(a1 + 72);
LABEL_27:
  while (v37 > v9)
  {
    int v39 = *--v37;
    __int16 v38 = v39;
    if (v39 < 0)
    {
      uint64_t v40 = v38 & 0x7FFF;
      uint64_t v41 = (v10 & 0x7FFF) - v40;
      if (v41 >= (int)a5) {
        uint64_t result = a5;
      }
      else {
        uint64_t result = v41;
      }
      if ((int)result < 1) {
        return result;
      }
LABEL_38:
      uint64_t v44 = result;
      do
      {
        *a3++ = *(_WORD *)(*(void *)(a1 + 120) + 2 * v40);
        *a4++ = *(unsigned char *)(*(void *)(a1 + 136) + v40++);
        --v44;
      }
      while (v44);
      return result;
    }
  }
  uint64_t v40 = 0;
  uint64_t v43 = v10 & 0x7FFF;
  if (v43 >= (int)a5) {
    uint64_t result = a5;
  }
  else {
    uint64_t result = v43;
  }
  if ((int)result >= 1) {
    goto LABEL_38;
  }
  return result;
}

void *sub_10007A450(uint64_t a1)
{
  uint64_t v2 = (void *)sub_1000C33A0(152);
  int v3 = v2;
  if (v2)
  {
    v2[1] = sub_10007A194;
    v2[2] = 0;
    v2[3] = sub_10007A1E8;
    v2[4] = 0;
    if (!sub_1000BEECC(a1, v2 + 5)) {
      goto LABEL_25;
    }
    __int16 v4 = sub_10007C40C(a1);
    v3[7] = v4;
    if (!v4) {
      goto LABEL_25;
    }
    v3[6] = v4;
    uint64_t v5 = (int *)(v3 + 8);
    if (!sub_1000BEECC(a1, v3 + 8)) {
      goto LABEL_25;
    }
    if (!sub_1000BEECC(a1, v3 + 11)) {
      goto LABEL_25;
    }
    uint8x8_t v6 = v3 + 14;
    if (!sub_1000BEECC(a1, v3 + 14)) {
      goto LABEL_25;
    }
    int v16 = 0;
    uint64_t v7 = v3 + 10;
    if (!sub_1000BF078(a1, 2, v3 + 10, &v16)) {
      goto LABEL_25;
    }
    uint64_t v8 = *v7;
    if (*v7)
    {
      int v9 = v16;
      if (v16 != *v5) {
        goto LABEL_25;
      }
      v3[9] = v8;
    }
    else
    {
      int v9 = *v5;
    }
    int v10 = *((_DWORD *)v3 + 22);
    int v16 = 0;
    uint64_t v11 = v3 + 13;
    if (!sub_1000BF078(a1, 2, v3 + 13, &v16)) {
      goto LABEL_25;
    }
    uint64_t v12 = *v11;
    if (*v11)
    {
      if (v16 != (v9 + (1 << v10) - 1) >> v10) {
        goto LABEL_25;
      }
    }
    if (v12) {
      v3[12] = v12;
    }
    int v16 = 0;
    int16x8_t v13 = v3 + 16;
    if (!sub_1000BF078(a1, 2, v3 + 16, &v16)) {
      goto LABEL_25;
    }
    if (*v13)
    {
      if (v16 != *v6) {
        goto LABEL_25;
      }
      v3[15] = *v13;
    }
    int v16 = 0;
    int8x16_t v14 = v3 + 18;
    if (!sub_1000BF078(a1, 1, v3 + 18, &v16)) {
      goto LABEL_25;
    }
    if (*v14)
    {
      if (v16 == *v6)
      {
        v3[17] = *v14;
        return v3;
      }
LABEL_25:
      sub_1000760C8((uint64_t)v3);
      return 0;
    }
  }
  return v3;
}

uint64_t sub_10007A638(uint64_t a1)
{
  sub_1000C321C(*(void *)(a1 + 80));
  uint64_t v2 = *(void *)(a1 + 56);
  return sub_10007C2D8(v2);
}

uint64_t sub_10007A674(uint64_t a1, uint64_t a2, _WORD *a3, unsigned char *a4)
{
  uint8x8_t v6 = *(__int16 **)(a1 + 72);
  unsigned int v7 = *v6;
  if ((v7 & 0x80000000) == 0)
  {
    unsigned int v10 = 0;
    v11.i64[0] = -1;
    v11.i64[1] = -1;
    v12.i64[0] = 0x100000001;
    v12.i64[1] = 0x100000001;
    while (1)
    {
      unsigned int v13 = v10 & 0xFFFFFFFC;
      if ((v10 & 0xFFFFFFFC) != 0)
      {
        uint64_t v14 = 2 * (v13 - 4);
        unsigned int v15 = (*(unsigned __int16 *)((char *)v6 + (v14 | 4)) >> 7) & 0xF0 | ((((unsigned __int16)v6[(unint64_t)v14 / 2] >> 7) & 0xF0 | (*(unsigned __int16 *)((char *)v6 + (v14 | 2)) >> 11) & 0xF) << 8) | (*(unsigned __int16 *)((char *)v6 + (v14 | 6)) >> 11) & 0xF;
      }
      else
      {
        unsigned int v15 = 0;
      }
      int v16 = v10 + 1 > (v13 | 1) ? v10 + 1 : v13 | 1;
      unsigned int v17 = v16 - v13;
      unsigned int v18 = v16 - 1;
      if (v17 < 0x10 || v18 < v13) {
        break;
      }
      unsigned int v20 = v13 + (v17 & 0xFFFFFFF0);
      int32x4_t v21 = 0uLL;
      int32x4_t v22 = (int32x4_t)v15;
      unsigned int v23 = v17 & 0xFFFFFFF0;
      int32x4_t v24 = 0uLL;
      int32x4_t v25 = 0uLL;
      do
      {
        int32x4_t v26 = (int16x8_t *)&v6[v13];
        uint16x8_t v27 = (uint16x8_t)vcgtq_s16(*v26, v11);
        uint16x8_t v28 = (uint16x8_t)vcgtq_s16(v26[1], v11);
        int32x4_t v21 = vaddq_s32(v21, (int32x4_t)vandq_s8((int8x16_t)vmovl_high_u16(v27), v12));
        int32x4_t v22 = vaddq_s32(v22, (int32x4_t)vandq_s8((int8x16_t)vmovl_u16(*(uint16x4_t *)v27.i8), v12));
        int32x4_t v25 = vaddq_s32(v25, (int32x4_t)vandq_s8((int8x16_t)vmovl_high_u16(v28), v12));
        int32x4_t v24 = vaddq_s32(v24, (int32x4_t)vandq_s8((int8x16_t)vmovl_u16(*(uint16x4_t *)v28.i8), v12));
        v13 += 16;
        v23 -= 16;
      }
      while (v23);
      unsigned int v15 = vaddvq_s32(vaddq_s32(vaddq_s32(v24, v22), vaddq_s32(v25, v21)));
      if (v17 != (v17 & 0xFFFFFFF0)) {
        goto LABEL_19;
      }
LABEL_20:
      int v29 = *(unsigned __int16 *)(a2 + 2 * ((v7 >> 8) & 7));
      unsigned int v10 = 2 * v15;
      int v30 = v7;
      if (!(_BYTE)v7) {
        goto LABEL_26;
      }
      if (!*(_WORD *)(a2 + 2 * ((v7 >> 8) & 7))) {
        goto LABEL_26;
      }
      uint64_t v31 = *(void *)(a1 + 48);
      unsigned int v37 = 0;
      int v36 = 0;
      sub_10007C324(v31, v7, &v37, &v36);
      v12.i64[0] = 0x100000001;
      v12.i64[1] = 0x100000001;
      v11.i64[0] = -1;
      v11.i64[1] = -1;
      uint64_t v32 = v36;
      if (v36 >= 1)
      {
        uint64_t v33 = v37;
        while (1)
        {
          int v34 = *v33++;
          if (v34 == v29) {
            break;
          }
          if (!--v32) {
            goto LABEL_26;
          }
        }
      }
      else
      {
LABEL_26:
        if (v30 || v29) {
          goto LABEL_4;
        }
      }
      --v10;
LABEL_4:
      uint8x8_t v6 = *(__int16 **)(a1 + 72);
      unsigned int v7 = v6[v10];
      if ((v7 & 0x80000000) != 0) {
        goto LABEL_29;
      }
    }
    unsigned int v20 = v10 & 0xFFFFFFFC;
    do
LABEL_19:
      v15 += ((unsigned __int16)v6[v20++] >> 15) ^ 1;
    while (v20 <= v10);
    goto LABEL_20;
  }
LABEL_29:
  *a3 = v7 & 0x7FF;
  *a4 = 0;
  return 1;
}

uint64_t sub_10007A888(uint64_t a1)
{
  uint64_t v2 = (void *)sub_1000C33A0(88);
  uint64_t v3 = (uint64_t)v2;
  if (!v2) {
    return v3;
  }
  v2[1] = sub_10007A638;
  v2[2] = 0;
  v2[3] = sub_10007A674;
  v2[4] = 0;
  if (sub_1000BEECC(a1, v2 + 5))
  {
    __int16 v4 = sub_10007C40C(a1);
    *(void *)(v3 + 56) = v4;
    if (v4)
    {
      *(void *)(v3 + 48) = v4;
      if (sub_1000BEECC(a1, (void *)(v3 + 64)))
      {
        int v7 = 0;
        uint64_t v5 = (void *)(v3 + 80);
        if (sub_1000BF078(a1, 2, (uint64_t *)(v3 + 80), &v7))
        {
          if (!*v5) {
            return v3;
          }
          if (v7 == *(_DWORD *)(v3 + 64))
          {
            *(void *)(v3 + 72) = *v5;
            return v3;
          }
        }
      }
    }
  }
  sub_1000760C8(v3);
  return 0;
}

uint64_t sub_10007A984(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = (uint64_t *)result;
    sub_1000C321C(*(void *)(result + 112));
    sub_1000C321C(v1[11]);
    sub_1000C321C(v1[8]);
    sub_1000C321C(v1[5]);
    sub_1000C321C(v1[3]);
    return sub_1000C321C((uint64_t)v1);
  }
  return result;
}

uint64_t sub_10007A9E8(uint64_t a1, int a2)
{
  if (*(_DWORD *)(a1 + 120)) {
    int v2 = a2 + 2;
  }
  else {
    int v2 = a2;
  }
  int v3 = v2 * *(_DWORD *)(a1 + 128);
  if (v3 >= 1024) {
    return 1024;
  }
  else {
    return v3;
  }
}

uint64_t sub_10007AA10(uint64_t a1, uint64_t a2, char *__src, uint64_t a4, char *__dst, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v9 = a4;
  uint64_t v11 = a2;
  if (!a4 && __dst) {
    return 0;
  }
  if (!*(_DWORD *)(a1 + 8))
  {
    if (!__dst) {
      return v11;
    }
    if ((int)a4 < (int)a2) {
      return 0;
    }
    j__memmove(__dst, __src, 2 * (int)a2);
    return v11;
  }
  uint64_t v14 = 2 * ((int)a2 + 2);
  unsigned int v15 = (void *)sub_1000CD3E8(v14, a2, (uint64_t)__src, a4, (uint64_t)__dst, a6, a7, a8);
  LODWORD(v16) = *(_DWORD *)(a1 + 120);
  if (v16)
  {
    *(_WORD *)unsigned int v15 = v16;
    LODWORD(v16) = 1;
  }
  if ((int)v11 >= 1)
  {
    unint64_t v16 = v16;
    if (v11 >= 0x10
      && (unsigned int v17 = (char *)v15 + 2 * v16, (unint64_t)(v17 - __src) >= 0x20))
    {
      uint64_t v18 = v11 & 0x7FFFFFF0;
      unint64_t v16 = v11 & 0xFFFFFFF0 | (unint64_t)v16;
      uint64_t v49 = v17 + 16;
      __int16 v50 = (long long *)(__src + 16);
      uint64_t v51 = v11 & 0xFFFFFFF0;
      do
      {
        long long v52 = *v50;
        *(v49 - 1) = *(v50 - 1);
        *uint64_t v49 = v52;
        v49 += 2;
        v50 += 2;
        v51 -= 16;
      }
      while (v51);
      if (v18 == v11) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v18 = 0;
    }
    unsigned int v19 = &__src[2 * v18];
    uint64_t v20 = v11 - v18;
    unint64_t v21 = v16;
    do
    {
      __int16 v22 = *(_WORD *)v19;
      v19 += 2;
      LODWORD(v16) = v21 + 1;
      *((_WORD *)v15 + v21++) = v22;
      --v20;
    }
    while (v20);
  }
LABEL_14:
  int v23 = *(_DWORD *)(a1 + 120);
  if (v23)
  {
    *((_WORD *)v15 + v16) = v23;
    LODWORD(v16) = v16 + 1;
  }
  if ((int)v16 >= 1)
  {
    uint64_t v24 = 0;
    int32x4_t v25 = (unsigned __int16 *)v15 + (int)v16;
    int32x4_t v26 = (char *)v15;
    while (1)
    {
      uint64_t v27 = *(int *)(a1 + 124);
      uint64_t v28 = ((char *)v25 - v26) >> 1;
      if (v28 >= v27) {
        uint64_t v27 = v27;
      }
      else {
        uint64_t v27 = v28;
      }
      if ((int)v27 < 1) {
        goto LABEL_18;
      }
      int v29 = (int *)(*(void *)(a1 + 104) + 4 * *(unsigned __int16 *)v26);
      int v30 = *v29;
      int v31 = v29[1] - *v29;
      if (v31)
      {
LABEL_24:
        int v32 = v31;
        int v33 = v30;
LABEL_27:
        uint64_t v35 = 0;
        int v36 = v32 - 1;
        if (v32 < 1) {
          int v36 = v32;
        }
        int v34 = v36 >> 1;
        uint64_t v37 = (v36 >> 1) + v33;
        uint64_t v38 = *(void *)(a1 + 56) + 2 * *(int *)(*(void *)(a1 + 16) + 4 * v37);
        do
        {
          int v39 = *(unsigned __int16 *)&v26[2 * v35] - *(unsigned __int16 *)(v38 + 2 * v35);
          if (v39)
          {
            if (*(_WORD *)(v38 + 2 * v35) && (v39 & 0x80000000) == 0)
            {
LABEL_25:
              int v34 = v32 + ~v34;
              int v33 = v37 + 1;
            }
            int v32 = v34;
            if (v34) {
              goto LABEL_27;
            }
            if ((int)--v27 >= 1) {
              goto LABEL_24;
            }
            goto LABEL_18;
          }
          ++v35;
        }
        while (v27 != v35);
        if (*(_WORD *)(v38 + 2 * v27)) {
          goto LABEL_25;
        }
        uint64_t v40 = *(int *)(*(void *)(a1 + 32) + 4 * v37);
        uint64_t v41 = *(void *)(a1 + 80);
        __int16 v42 = *(_WORD *)(v41 + 2 * v40);
        if (!v42)
        {
          uint64_t v45 = v24;
          if (__dst) {
            goto LABEL_46;
          }
LABEL_53:
          uint64_t v24 = v45;
          v26 += 2 * (int)v27;
          if (v26 < (char *)v25) {
            continue;
          }
          goto LABEL_59;
        }
        uint64_t v43 = 0;
        while (*(unsigned __int16 *)(v41 + 2 * v40 + 2 + 2 * v43++))
          ;
        uint64_t v45 = (v43 + v24);
        if (!__dst) {
          goto LABEL_53;
        }
LABEL_46:
        if ((int)v45 > v9)
        {
          sub_1000CD4D0(v15, v14);
          return 0;
        }
        if (*(_WORD *)(v41 + 2 * v40))
        {
          uint64_t v46 = &__dst[2 * (int)v24];
          int v47 = (unsigned __int16 *)(v41 + 2 * v40 + 2);
          do
          {
            *(_WORD *)uint64_t v46 = v42;
            v46 += 2;
            int v48 = *v47++;
            __int16 v42 = v48;
            uint64_t v24 = (v24 + 1);
          }
          while (v48);
        }
        v26 += 2 * (int)v27;
        if (v26 >= (char *)v25) {
          goto LABEL_59;
        }
      }
      else
      {
        do
          LODWORD(v27) = v27 - 1;
        while ((int)v27 >= 1);
LABEL_18:
        v26 += 2;
        if (v26 >= (char *)v25) {
          goto LABEL_59;
        }
      }
    }
  }
  uint64_t v24 = 0;
LABEL_59:
  sub_1000CD4D0(v15, v14);
  return v24;
}

uint64_t sub_10007AD50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!a5)
  {
    unsigned int v13 = 0;
    uint64_t v14 = 2 * (int)a2;
    int32x4_t v25 = (char *)sub_1000CD3E8(v14, a2, a3, a4, 0, a6, a7, a8);
    if ((int)a2 < 1) {
      goto LABEL_13;
    }
LABEL_6:
    uint64_t v26 = 0;
    if (a2 < 0x10) {
      goto LABEL_11;
    }
    if ((unint64_t)&v25[-a3] < 0x20) {
      goto LABEL_11;
    }
    uint64_t v26 = a2 & 0xFFFFFFF0;
    uint64_t v27 = (long long *)(a3 + 16);
    uint64_t v28 = v25 + 16;
    uint64_t v29 = v26;
    do
    {
      long long v30 = *v27;
      *(v28 - 1) = *(v27 - 1);
      *uint64_t v28 = v30;
      v27 += 2;
      v28 += 2;
      v29 -= 16;
    }
    while (v29);
    if (v26 != a2)
    {
LABEL_11:
      int v31 = &v25[2 * v26];
      int v32 = (__int16 *)(a3 + 2 * v26);
      uint64_t v33 = a2 - v26;
      do
      {
        __int16 v34 = *v32++;
        *(_WORD *)int v31 = v34;
        v31 += 2;
        --v33;
      }
      while (v33);
    }
    goto LABEL_13;
  }
  if ((int)a4 < 1) {
    return 0;
  }
  unsigned int v13 = (char *)sub_1000CD3E8(2 * a4, a2, a3, a4, a5, a6, a7, a8);
  uint64_t v14 = 2 * (int)a2;
  int32x4_t v25 = (char *)sub_1000CD3E8(v14, v15, v16, v17, v18, v19, v20, v21);
  if ((int)a2 >= 1) {
    goto LABEL_6;
  }
LABEL_13:
  uint64_t v35 = sub_10007AA10(a1, a2, v25, a4, v13, v22, v23, v24);
  sub_1000CD4D0(v25, v14);
  if (a5)
  {
    if ((int)v35 >= 1)
    {
      uint64_t v36 = 0;
      if (v35 < 0x10) {
        goto LABEL_20;
      }
      if ((unint64_t)(a5 - (void)v13) < 0x20) {
        goto LABEL_20;
      }
      uint64_t v36 = v35 & 0x7FFFFFF0;
      uint64_t v37 = (long long *)(v13 + 16);
      uint64_t v38 = (_OWORD *)(a5 + 16);
      uint64_t v39 = v35 & 0xFFFFFFF0;
      do
      {
        long long v40 = *v37;
        *(v38 - 1) = *(v37 - 1);
        *uint64_t v38 = v40;
        v37 += 2;
        v38 += 2;
        v39 -= 16;
      }
      while (v39);
      if (v36 != v35)
      {
LABEL_20:
        uint64_t v41 = (_WORD *)(a5 + 2 * v36);
        __int16 v42 = &v13[2 * v36];
        uint64_t v43 = v35 - v36;
        do
        {
          __int16 v44 = *(_WORD *)v42;
          v42 += 2;
          *v41++ = v44;
          --v43;
        }
        while (v43);
      }
    }
    sub_1000CD4D0(v13, 2 * (int)a4);
  }
  return v35;
}

uint64_t sub_10007AF0C(uint64_t a1)
{
  unsigned int v2 = sub_1000C085C(*(_DWORD *)(a1 + 8), 4, 0xFFFFFFFF);
  unsigned int v3 = sub_1000C085C(*(_DWORD *)(a1 + 48), 4, v2);
  unsigned int v4 = sub_1000C085C(*(_DWORD *)(a1 + 72), 4, v3);
  unsigned int v5 = sub_1000C085C(*(_DWORD *)(a1 + 96), 4, v4);
  unsigned int v6 = sub_1000C085C(*(_DWORD *)(a1 + 120), 4, v5);
  unsigned int v7 = sub_1000C085C(*(_DWORD *)(a1 + 124), 4, v6);
  uint64_t result = sub_1000C085C(*(_DWORD *)(a1 + 128), 4, v7);
  unsigned int v9 = result;
  int v10 = *(_DWORD *)(a1 + 8);
  if (v10 >= 1)
  {
    unsigned int v11 = sub_1000C09B0(*(unint64_t **)(a1 + 16), 4, v10, 0xFFFFFFFFLL);
    unsigned int v12 = sub_1000C085C(v11, 4, v9);
    unsigned int v13 = sub_1000C09B0(*(unint64_t **)(a1 + 32), 4, *(_DWORD *)(a1 + 8), 0xFFFFFFFFLL);
    unsigned int v14 = sub_1000C085C(v13, 4, v12);
    unsigned int v15 = sub_1000C09B0(*(unint64_t **)(a1 + 56), 2, *(_DWORD *)(a1 + 48), 0xFFFFFFFFLL);
    unsigned int v16 = sub_1000C085C(v15, 4, v14);
    unsigned int v17 = sub_1000C09B0(*(unint64_t **)(a1 + 80), 2, *(_DWORD *)(a1 + 72), 0xFFFFFFFFLL);
    unsigned int v18 = sub_1000C085C(v17, 4, v16);
    unsigned int v19 = sub_1000C09B0(*(unint64_t **)(a1 + 104), 4, *(_DWORD *)(a1 + 96) + 3, 0xFFFFFFFFLL);
    return sub_1000C085C(v19, 4, v18);
  }
  return result;
}

void *sub_10007B078(uint64_t a1)
{
  uint64_t v2 = sub_1000C33A0(136);
  unsigned int v3 = (void *)v2;
  if (v2)
  {
    unsigned int v4 = (int *)(v2 + 8);
    if (!sub_1000BEECC(a1, (void *)(v2 + 8))
      || !sub_1000BEECC(a1, v3 + 6)
      || !sub_1000BEECC(a1, v3 + 9)
      || !sub_1000BEECC(a1, v3 + 12)
      || !sub_1000BEECC(a1, v3 + 15)
      || !sub_1000BEECC(a1, (char *)v3 + 124)
      || !sub_1000BEECC(a1, v3 + 16))
    {
      goto LABEL_30;
    }
    if (*v4 >= 1)
    {
      int v11 = 0;
      unsigned int v5 = v3 + 3;
      if (!sub_1000BF078(a1, 4, v3 + 3, &v11)) {
        goto LABEL_30;
      }
      if (*v5)
      {
        if (v11 != *v4) {
          goto LABEL_30;
        }
        v3[2] = *v5;
      }
      int v11 = 0;
      unsigned int v6 = v3 + 5;
      if (!sub_1000BF078(a1, 4, v3 + 5, &v11)) {
        goto LABEL_30;
      }
      if (*v6)
      {
        if (v11 != *v4) {
          goto LABEL_30;
        }
        v3[4] = *v6;
      }
      int v11 = 0;
      unsigned int v7 = v3 + 8;
      if (!sub_1000BF078(a1, 2, v3 + 8, &v11)) {
        goto LABEL_30;
      }
      if (*v7)
      {
        if (v11 != *((_DWORD *)v3 + 12)) {
          goto LABEL_30;
        }
        v3[7] = *v7;
      }
      int v11 = 0;
      uint64_t v8 = v3 + 11;
      if (!sub_1000BF078(a1, 2, v3 + 11, &v11)) {
        goto LABEL_30;
      }
      if (*v8)
      {
        if (v11 != *((_DWORD *)v3 + 18)) {
          goto LABEL_30;
        }
        v3[10] = *v8;
      }
      int v11 = 0;
      unsigned int v9 = v3 + 14;
      if (!sub_1000BF078(a1, 4, v3 + 14, &v11)) {
        goto LABEL_30;
      }
      if (*v9)
      {
        if (v11 == *((_DWORD *)v3 + 24) + 3)
        {
          v3[13] = *v9;
          return v3;
        }
LABEL_30:
        sub_1000C321C(v3[14]);
        sub_1000C321C(v3[11]);
        sub_1000C321C(v3[8]);
        sub_1000C321C(v3[5]);
        sub_1000C321C(v3[3]);
        sub_1000C321C((uint64_t)v3);
        return 0;
      }
    }
  }
  return v3;
}

uint64_t sub_10007B2C0(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_10007B2C0;
  *(void *)(a1 + 24) = sub_10007B488;
  *(void *)(a1 + 8) = sub_10007B4CC;
  *(void *)(a1 + 32) = sub_10007B5CC;
  *(void *)(a1 + 40) = sub_10007B7DC;
  *(void *)(a1 + 48) = sub_10007B7E4;
  *(void *)(a1 + 56) = sub_10007B880;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 64) = sub_10007B940;
  *(void *)(a1 + 88) = sub_10007B9DC;
  *(void *)(a1 + 96) = sub_10007BA80;
  uint64_t result = sub_1000C33A0(8 * *(int *)(a1 + 216));
  *(void *)(a1 + 224) = result;
  if (result)
  {
    unsigned int v3 = (uint64_t *)result;
    if (*(int *)(a1 + 216) < 1) {
      goto LABEL_12;
    }
    uint64_t v4 = 0;
    do
    {
      if (*(_DWORD *)(a1 + 248))
      {
        uint64_t v5 = sub_100004130();
        v3[v4] = v5;
        int v6 = *(_DWORD *)(a1 + 216);
        if (!v5) {
          break;
        }
      }
      else
      {
        uint64_t v7 = sub_100004130();
        v3[v4] = v7;
        int v6 = *(_DWORD *)(a1 + 216);
        if (!v7) {
          break;
        }
      }
      ++v4;
    }
    while (v4 < v6);
    if ((int)v4 >= v6)
    {
LABEL_12:
      *(_DWORD *)(a1 + 108) = sub_1000769AC(*v3);
      if (*(int *)(a1 + 216) >= 2)
      {
        uint64_t v8 = 1;
        do
        {
          if ((int)sub_1000769AC(v3[v8]) > *(_DWORD *)(a1 + 108)) {
            *(_DWORD *)(a1 + 108) = sub_1000769AC(v3[v8]);
          }
          ++v8;
        }
        while (v8 < *(int *)(a1 + 216));
      }
      return 1;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void *sub_10007B488(const void *a1)
{
  uint64_t v2 = (void *)sub_1000C33A0(296);
  unsigned int v3 = v2;
  if (v2) {
    memcpy(v2, a1, 0x128uLL);
  }
  return v3;
}

uint64_t sub_10007B4CC(uint64_t a1)
{
  if (!*(_DWORD *)(a1 + 248))
  {
    uint64_t v2 = *(void *)(a1 + 264);
    if (v2)
    {
      if (*(int *)(a1 + 216) >= 1)
      {
        uint64_t v3 = 0;
        do
          sub_10007BDDC(*(void *)(*(void *)(a1 + 264) + 8 * v3++));
        while (v3 < *(int *)(a1 + 216));
        uint64_t v2 = *(void *)(a1 + 264);
      }
      sub_1000C321C(v2);
    }
  }
  uint64_t v4 = *(void *)(a1 + 280);
  if (v4)
  {
    if (*(int *)(a1 + 216) >= 1)
    {
      uint64_t v5 = 0;
      do
        sub_1000C321C(*(void *)(*(void *)(a1 + 280) + 8 * v5++));
      while (v5 < *(int *)(a1 + 216));
      uint64_t v4 = *(void *)(a1 + 280);
    }
    sub_1000C321C(v4);
  }
  sub_1000C321C(*(void *)(a1 + 240));
  uint64_t v6 = *(void *)(a1 + 224);
  if (v6)
  {
    if (*(int *)(a1 + 216) >= 1)
    {
      uint64_t v7 = 0;
      do
        sub_1000760C8(*(void *)(*(void *)(a1 + 224) + 8 * v7++));
      while (v7 < *(int *)(a1 + 216));
      uint64_t v6 = *(void *)(a1 + 224);
    }
    sub_1000C321C(v6);
  }
  sub_1000C321C(*(void *)(a1 + 208));
  return sub_100076D5C(a1);
}

uint64_t sub_10007B5CC(uint64_t a1, unsigned __int16 *a2, int a3, int a4)
{
  if (a2[a4])
  {
    uint64_t v5 = *(unsigned int *)(a1 + 216);
    if ((int)v5 < 1)
    {
      int v9 = 0x7FFF;
    }
    else
    {
      uint64_t v6 = *(void *)(a1 + 224);
      uint64_t v7 = *(unsigned __int8 **)(a1 + 232);
      if (a3 <= 0)
      {
        int v9 = 0x7FFF;
        do
        {
          __int16 v22 = *v7;
          int v23 = (__int16)((*(uint64_t (**)(void))(*(void *)v6 + 32))() + v22);
          int v25 = v9 - v23;
          BOOL v24 = v9 - v23 < 0;
          if (v9 >= v23) {
            int v9 = v23;
          }
          if (v24) {
            int v26 = -v25;
          }
          else {
            int v26 = v25;
          }
          if (v26 < *(_DWORD *)(a1 + 192)) {
            v9 -= *(unsigned __int8 *)(*(void *)(a1 + 200) + v26);
          }
          ++v7;
          v6 += 8;
          --v5;
        }
        while (v5);
      }
      else
      {
        uint64_t v8 = 0;
        uint64_t v27 = a3;
        int v9 = 0x7FFF;
        do
        {
          if (*(_DWORD *)(a1 + 248))
          {
            LOWORD(v10) = v7[v8];
            int v11 = *(uint64_t (**)(void))(*(void *)(v6 + 8 * v8) + 32);
          }
          else
          {
            uint64_t v12 = v27;
            unsigned int v13 = (_WORD *)(*(void *)(v6 + 8 * v8) + 176);
            unsigned int v14 = a2;
            do
            {
              unsigned int v15 = *v14++;
              *v13++ = sub_10007BE20(*(void *)(*(void *)(a1 + 256) + 8 * v8), v15);
              --v12;
            }
            while (v12);
            uint64_t v10 = v7[v8];
            int v11 = *(uint64_t (**)(void))(*(void *)(v6 + 8 * v8) + 32);
          }
          int v16 = (__int16)(v11() + v10);
          int v18 = v9 - v16;
          BOOL v17 = v9 - v16 < 0;
          if (v9 >= v16) {
            int v9 = v16;
          }
          if (v17) {
            int v19 = -v18;
          }
          else {
            int v19 = v18;
          }
          if (v19 < *(_DWORD *)(a1 + 192)) {
            v9 -= *(unsigned __int8 *)(*(void *)(a1 + 200) + v19);
          }
          ++v8;
        }
        while (v8 != v5);
      }
    }
    LODWORD(v20) = v9 & ~(v9 >> 31);
  }
  else
  {
    LOWORD(v20) = qword_100101CC0;
    if (qword_100101CC0)
    {
      uint64_t v20 = *(void *)(qword_100101CC0 + 3624);
      if ((v20 & 0x80000000) != 0)
      {
        LOWORD(v20) = 0;
      }
      else if (v20 >> 15)
      {
        LOWORD(v20) = 0x7FFF;
      }
    }
  }
  return (__int16)v20;
}

uint64_t sub_10007B7DC()
{
  return 0;
}

uint64_t sub_10007B7E4(uint64_t a1)
{
  if (!*(_DWORD *)(a1 + 124) || *(int *)(a1 + 216) < 1) {
    return 0;
  }
  uint64_t v2 = 0;
  LODWORD(v3) = 0;
  uint64_t v4 = *(void *)(a1 + 224);
  do
    uint64_t v3 = (*(unsigned int (**)(void))(*(void *)(v4 + 8 * v2++) + 48))() | v3;
  while (v2 < *(int *)(a1 + 216));
  return v3;
}

uint64_t sub_10007B880(uint64_t a1, uint64_t a2)
{
  if (!sub_100076FA0(a1, a2)) {
    return 0;
  }
  uint64_t v3 = (*(uint64_t (**)(void))(**(void **)(a1 + 224) + 56))();
  if (*(int *)(a1 + 216) >= 2)
  {
    uint64_t v4 = 1;
    do
      (*(void (**)(void))(*(void *)(*(void *)(a1 + 224) + 8 * v4++) + 56))();
    while (v4 < *(int *)(a1 + 216));
  }
  return v3;
}

uint64_t sub_10007B940(uint64_t a1, uint64_t a2)
{
  if (!sub_100076FA0(a1, a2)) {
    return 0;
  }
  uint64_t v3 = (*(uint64_t (**)(void))(**(void **)(a1 + 224) + 64))();
  if (*(int *)(a1 + 216) >= 2)
  {
    uint64_t v4 = 1;
    do
      (*(void (**)(void))(*(void *)(*(void *)(a1 + 224) + 8 * v4++) + 64))();
    while (v4 < *(int *)(a1 + 216));
  }
  return v3;
}

uint64_t sub_10007B9DC(uint64_t a1, uint64_t a2)
{
  if (!sub_100076F2C(a1, a2)) {
    return 0;
  }
  if (*(int *)(a1 + 216) < 1) {
    return 1;
  }
  uint64_t v3 = 0;
  LODWORD(v4) = 1;
  do
    uint64_t v4 = (*(unsigned int (**)(void))(*(void *)(*(void *)(a1 + 224) + 8 * v3++) + 88))() & v4;
  while (v3 < *(int *)(a1 + 216));
  return v4;
}

uint64_t sub_10007BA80(uint64_t a1, uint64_t a2, uint8x8_t a3)
{
  if (!sub_100076F60(a1, a2, a3)) {
    return 0;
  }
  if (*(int *)(a1 + 216) < 1) {
    return 1;
  }
  uint64_t v4 = 0;
  LODWORD(v5) = 1;
  do
    uint64_t v5 = (*(unsigned int (**)(void))(*(void *)(*(void *)(a1 + 224) + 8 * v4++) + 96))() & v5;
  while (v4 < *(int *)(a1 + 216));
  return v5;
}

uint64_t sub_10007BB24(uint64_t a1)
{
  uint64_t v2 = sub_1000C33A0(296);
  uint64_t v3 = v2;
  if (v2)
  {
    if (!sub_100076D98(v2, a1))
    {
LABEL_35:
      sub_1000C321C(v3);
      return 0;
    }
    if (sub_1000BEECC(a1, (void *)(v3 + 192)))
    {
      uint64_t v4 = (int *)(v3 + 216);
      if (sub_1000BEECC(a1, (void *)(v3 + 216)) && sub_1000BEE7C(a1, (_DWORD *)(v3 + 248)))
      {
        int v17 = 0;
        uint64_t v5 = (void *)(v3 + 208);
        if (sub_1000BF078(a1, 1, (uint64_t *)(v3 + 208), &v17))
        {
          if (*v5)
          {
            if (v17 != *(_DWORD *)(v3 + 192)) {
              goto LABEL_34;
            }
            *(void *)(v3 + 200) = *v5;
          }
          int v16 = 0;
          uint64_t v6 = (void *)(v3 + 240);
          if (sub_1000BF078(a1, 1, (uint64_t *)(v3 + 240), &v16))
          {
            if (*v6)
            {
              int v7 = v16;
              if (v16 != *v4) {
                goto LABEL_34;
              }
              *(void *)(v3 + 232) = *v6;
            }
            else
            {
              int v7 = *v4;
            }
            if (*(_DWORD *)(v3 + 248))
            {
              uint64_t v8 = sub_1000C328C(8 * v7);
              *(void *)(v3 + 224) = v8;
              if (v8) {
                goto LABEL_17;
              }
            }
            else
            {
              int v11 = sub_1000C328C(8 * v7);
              *(void *)(v3 + 264) = v11;
              if (v11)
              {
                int v12 = *v4;
                if (*v4 < 1)
                {
                  LODWORD(v13) = 0;
                }
                else
                {
                  uint64_t v13 = 0;
                  do
                  {
                    *(void *)(*(void *)(v3 + 264) + 8 * v13) = sub_10007BE80(a1);
                    int v11 = *(_DWORD **)(v3 + 264);
                    int v12 = *(_DWORD *)(v3 + 216);
                    if (!*(void *)&v11[2 * v13]) {
                      break;
                    }
                    ++v13;
                  }
                  while (v13 < v12);
                }
                if ((int)v13 >= v12)
                {
                  *(void *)(v3 + 256) = v11;
                  unsigned int v14 = sub_1000C328C(8 * v12);
                  *(void *)(v3 + 224) = v14;
                  if (v14)
                  {
LABEL_17:
                    int v9 = *v4;
                    if (*v4 < 1)
                    {
                      LODWORD(v10) = 0;
                    }
                    else
                    {
                      uint64_t v10 = 0;
                      do
                      {
                        *(void *)(*(void *)(v3 + 224) + 8 * v10) = sub_100076AB0(a1);
                        int v9 = *(_DWORD *)(v3 + 216);
                        if (!*(void *)(*(void *)(v3 + 224) + 8 * v10)) {
                          break;
                        }
                        ++v10;
                      }
                      while (v10 < v9);
                    }
                    if ((int)v10 >= v9)
                    {
                      *(void *)(v3 + 16) = sub_10007B2C0;
                      *(void *)(v3 + 24) = sub_10007B488;
                      *(void *)(v3 + 8) = sub_10007B4CC;
                      *(void *)(v3 + 32) = sub_10007B5CC;
                      *(void *)(v3 + 40) = sub_10007B7DC;
                      *(void *)(v3 + 48) = sub_10007B7E4;
                      *(void *)(v3 + 56) = sub_10007B880;
                      *(void *)(v3 + 72) = 0;
                      *(void *)(v3 + 80) = 0;
                      *(void *)(v3 + 64) = sub_10007B940;
                      *(void *)(v3 + 88) = sub_10007B9DC;
                      *(void *)(v3 + 96) = sub_10007BA80;
                      return v3;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
LABEL_34:
    sub_10007B4CC(v3);
    goto LABEL_35;
  }
  return v3;
}

uint64_t sub_10007BDDC(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    sub_1000C321C(*(void *)(result + 24));
    return sub_1000C321C(v1);
  }
  return result;
}

uint64_t sub_10007BE20(uint64_t a1, unsigned int a2)
{
  return *(unsigned __int16 *)(*(void *)(a1 + 16) + 2 * a2);
}

uint64_t sub_10007BE2C(uint64_t a1)
{
  uint64_t v2 = sub_1000C085C(*(_DWORD *)(a1 + 8), 4, 0xFFFFFFFF);
  uint64_t v3 = *(unint64_t **)(a1 + 16);
  int v4 = *(_DWORD *)(a1 + 8) + 1;
  return sub_1000C09B0(v3, 2, v4, v2);
}

uint64_t sub_10007BE80(uint64_t a1)
{
  uint64_t v2 = sub_1000C33A0(32);
  if (!v2) {
    return v2;
  }
  if (sub_1000BEECC(a1, (void *)(v2 + 8)))
  {
    int v5 = 0;
    uint64_t v3 = (void *)(v2 + 24);
    if (sub_1000BF078(a1, 2, (uint64_t *)(v2 + 24), &v5))
    {
      if (!*v3) {
        return v2;
      }
      if (v5 == *(_DWORD *)(v2 + 8) + 1)
      {
        *(void *)(v2 + 16) = *v3;
        return v2;
      }
    }
  }
  sub_1000C321C(*(void *)(v2 + 24));
  sub_1000C321C(v2);
  return 0;
}

uint64_t sub_10007BF44(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    sub_1000C321C(*(void *)(result + 88));
    sub_1000C321C(*(void *)(v1 + 72));
    sub_1000C321C(*(void *)(v1 + 56));
    return sub_1000C321C(v1);
  }
  return result;
}

uint64_t sub_10007BF98(uint64_t a1, unsigned __int16 *a2, _DWORD *a3)
{
  uint64_t v3 = *(unsigned int *)(a1 + 8);
  int v4 = *(_DWORD *)(a1 + 100);
  if ((int)v3 >= 1)
  {
    int v5 = (int *)(a1 + 16);
    uint64_t v6 = *(unsigned int *)(a1 + 8);
    int v7 = a2;
    if (v4 == 1)
    {
      while (1)
      {
        unsigned int v9 = *v7++;
        uint64_t v8 = v9;
        uint64_t v10 = *v5++;
        if (v8 > v10 || v8 == 0) {
          break;
        }
        if (!--v6) {
          goto LABEL_11;
        }
      }
    }
    else
    {
      while (1)
      {
        unsigned int v13 = *v7++;
        uint64_t v12 = v13;
        uint64_t v14 = *v5++;
        if (v12 > v14) {
          break;
        }
        if (!--v6)
        {
LABEL_11:
          if (v3 != 1) {
            goto LABEL_13;
          }
          uint64_t v15 = *a2 - (uint64_t)v4;
          goto LABEL_18;
        }
      }
    }
    return 0;
  }
LABEL_13:
  uint64_t v16 = (int)v3;
  if (*(_DWORD *)(a1 + 104))
  {
    uint64_t v17 = a2[1] - (uint64_t)v4;
    if ((int)v3 >= 3)
    {
      int v18 = a2 + 2;
      int v19 = (int *)(a1 + 24);
      uint64_t v20 = v3 - 2;
      do
      {
        int v21 = *v19++;
        uint64_t v22 = v17 * (v21 - v4 + 1);
        unsigned int v23 = *v18++;
        uint64_t v17 = v22 - v4 + v23;
        --v20;
      }
      while (v20);
    }
    uint64_t v15 = v17 + *(int *)(*(void *)(a1 + 48) + 4 * *a2);
    goto LABEL_18;
  }
  int v26 = (int *)(*(void *)(a1 + 48) + 4 * *a2);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  uint64_t v29 = v27 - v28;
  if (v27 != v28)
  {
    if ((int)v16 >= 2)
    {
      long long v30 = a2 + 1;
      uint64_t v31 = v16 - 1;
      do
      {
        uint64_t v32 = v29 - 1;
        if (v29 < 1) {
          uint64_t v32 = v29;
        }
        uint64_t v33 = v32 >> 1;
        uint64_t v15 = (v32 >> 1) + v28;
        __int16 v34 = (unsigned __int16 *)(*(void *)(a1 + 64) + 2 * v15 * v31);
        uint64_t v35 = v30;
        uint64_t v36 = v31;
        while (1)
        {
          unsigned int v38 = *v35++;
          unsigned int v37 = v38;
          unsigned int v39 = *v34++;
          BOOL v40 = v37 > v39;
          if (v37 < v39) {
            break;
          }
          if (v40)
          {
            uint64_t v33 = v29 + ~v33;
            uint64_t v28 = v15 + 1;
            break;
          }
          if (!--v36) {
            goto LABEL_18;
          }
        }
        uint64_t v24 = 0;
        uint64_t v29 = v33;
      }
      while (v33);
      return v24;
    }
    uint64_t v41 = v29 - 1;
    if (v29 < 1) {
      uint64_t v41 = v29;
    }
    uint64_t v15 = v28 + (v41 >> 1);
LABEL_18:
    *a3 = *(_DWORD *)(a1 + 96) + *(char *)(*(void *)(a1 + 80) + v15);
    return 1;
  }
  return 0;
}

uint64_t sub_10007C12C(uint64_t a1)
{
  uint64_t v2 = sub_1000C33A0(112);
  if (v2)
  {
    if (!sub_1000BEECC(a1, (void *)(v2 + 8))) {
      goto LABEL_20;
    }
    uint64_t v3 = (_DWORD *)(v2 + 12);
    if (!sub_1000BEECC(a1, (void *)(v2 + 12))) {
      goto LABEL_20;
    }
    if (!sub_1000BEECC(a1, (void *)(v2 + 96))) {
      goto LABEL_20;
    }
    if (!sub_1000BEECC(a1, (void *)(v2 + 100))) {
      goto LABEL_20;
    }
    if (!sub_1000BEE7C(a1, (_DWORD *)(v2 + 104))) {
      goto LABEL_20;
    }
    if (!sub_1000BEFCC(a1, (void *)(v2 + 16), 8, 4)) {
      goto LABEL_20;
    }
    int v10 = 0;
    int v4 = (void *)(v2 + 56);
    if (!sub_1000BF078(a1, 4, (uint64_t *)(v2 + 56), &v10)) {
      goto LABEL_20;
    }
    if (*v4)
    {
      if (v10 != *(_DWORD *)(v2 + 16) + 2) {
        goto LABEL_20;
      }
      *(void *)(v2 + 48) = *v4;
    }
    int v9 = 0;
    int v5 = (void *)(v2 + 72);
    if (!sub_1000BF078(a1, 2, (uint64_t *)(v2 + 72), &v9)) {
      goto LABEL_20;
    }
    if (*v5)
    {
      if (v9 != (*(_DWORD *)(v2 + 8) - 1) * *v3) {
        goto LABEL_20;
      }
      *(void *)(v2 + 64) = *v5;
    }
    int v8 = 0;
    uint64_t v6 = (void *)(v2 + 88);
    if (!sub_1000BF078(a1, 1, (uint64_t *)(v2 + 88), &v8)) {
      goto LABEL_20;
    }
    if (*v6)
    {
      if (v8 == *v3)
      {
        *(void *)(v2 + 80) = *v6;
        return v2;
      }
LABEL_20:
      sub_1000C321C(*(void *)(v2 + 88));
      sub_1000C321C(*(void *)(v2 + 72));
      sub_1000C321C(*(void *)(v2 + 56));
      sub_1000C321C(v2);
      return 0;
    }
  }
  return v2;
}

uint64_t sub_10007C2D8(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    sub_1000C321C(*(void *)(result + 48));
    sub_1000C321C(*(void *)(v1 + 24));
    return sub_1000C321C(v1);
  }
  return result;
}

uint64_t sub_10007C324(uint64_t result, unsigned int a2, void *a3, _DWORD *a4)
{
  if (a3) {
    *a3 = 0;
  }
  *a4 = 0;
  int v4 = (unsigned __int16 *)(*(void *)(result + 40) + 2 * *(int *)(*(void *)(result + 16) + 4 * a2));
  int v5 = *v4;
  if (v5 != 65534)
  {
    if (v5 == 0xFFFF) {
      return result;
    }
    uint64_t v6 = 1;
    do
    {
      *a4 = v6;
      unsigned int v7 = v4[v6++];
    }
    while (v7 < 0xFFFE);
  }
  if (a3) {
    *a3 = v4;
  }
  return result;
}

uint64_t sub_10007C388(uint64_t a1)
{
  unsigned int v2 = sub_1000C085C(*(_DWORD *)(a1 + 8), 4, 0xFFFFFFFF);
  unsigned int v3 = sub_1000C085C(*(_DWORD *)(a1 + 32), 4, v2);
  uint64_t v4 = sub_1000C085C(*(_DWORD *)(a1 + 60), 4, v3);
  uint64_t v5 = sub_1000C09B0(*(unint64_t **)(a1 + 16), 4, *(_DWORD *)(a1 + 8), v4);
  uint64_t v6 = *(unint64_t **)(a1 + 40);
  int v7 = *(_DWORD *)(a1 + 32);
  return sub_1000C09B0(v6, 2, v7, v5);
}

void *sub_10007C40C(uint64_t a1)
{
  unsigned int v2 = (void *)sub_1000C33A0(64);
  if (v2)
  {
    if (!sub_1000BEECC(a1, v2 + 1)) {
      goto LABEL_14;
    }
    if (!sub_1000BEECC(a1, v2 + 4)) {
      goto LABEL_14;
    }
    if (!sub_1000BEECC(a1, v2 + 7)) {
      goto LABEL_14;
    }
    if (!sub_1000BEECC(a1, (char *)v2 + 60)) {
      goto LABEL_14;
    }
    int v7 = 0;
    unsigned int v3 = v2 + 3;
    if (!sub_1000BF078(a1, 4, v2 + 3, &v7)) {
      goto LABEL_14;
    }
    if (*v3)
    {
      if (v7 != *((_DWORD *)v2 + 2)) {
        goto LABEL_14;
      }
      v2[2] = *v3;
    }
    int v6 = 0;
    uint64_t v4 = v2 + 6;
    if (!sub_1000BF078(a1, 2, v2 + 6, &v6)) {
      goto LABEL_14;
    }
    if (*v4)
    {
      if (v6 == *((_DWORD *)v2 + 8))
      {
        v2[5] = *v4;
        return v2;
      }
LABEL_14:
      sub_1000C321C(v2[6]);
      sub_1000C321C(v2[3]);
      sub_1000C321C((uint64_t)v2);
      return 0;
    }
  }
  return v2;
}

uint64_t sub_10007C538(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = (uint64_t *)result;
    sub_1000C321C(*(void *)(result + 72));
    sub_1000C321C(v1[7]);
    sub_1000C321C(v1[5]);
    sub_1000C321C(v1[3]);
    return sub_1000C321C((uint64_t)v1);
  }
  return result;
}

uint64_t sub_10007C594(uint64_t a1)
{
  unsigned int v2 = sub_1000C085C(*(_DWORD *)(a1 + 8), 4, 0xFFFFFFFF);
  uint64_t v3 = sub_1000C085C(*(_DWORD *)(a1 + 64), 4, v2);
  LODWORD(v4) = *(_DWORD *)(a1 + 8);
  if ((int)v4 >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      int v6 = *(unint64_t **)(*(void *)(a1 + 16) + 8 * v5 + 8);
      int v7 = sub_1000CAD00((unint64_t)v6);
      uint64_t v3 = sub_1000C09B0(v6, 1, v7 + 1, v3);
      uint64_t v4 = *(int *)(a1 + 8);
      ++v5;
    }
    while (v5 < v4);
  }
  int v8 = *(unint64_t **)(a1 + 32);
  if (v8) {
    uint64_t v3 = sub_1000C09B0(v8, 4, (int)v4 + 1, v3);
  }
  int v9 = *(unint64_t **)(a1 + 48);
  if (!v9) {
    return v3;
  }
  int v10 = *(_DWORD *)(a1 + 8) + 1;
  return sub_1000C09B0(v9, 4, v10, v3);
}

uint64_t sub_10007C684(uint64_t a1)
{
  uint64_t v2 = sub_1000C33A0(80);
  uint64_t v3 = v2;
  if (!v2) {
    return v3;
  }
  uint64_t v4 = (int *)(v2 + 8);
  if (!sub_1000BEECC(a1, (void *)(v2 + 8))) {
    goto LABEL_21;
  }
  if (!sub_1000BEE7C(a1, (_DWORD *)(v3 + 64))) {
    goto LABEL_21;
  }
  int v15 = 0;
  uint64_t v5 = (void *)(v3 + 40);
  if (!sub_1000BF078(a1, 4, (uint64_t *)(v3 + 40), &v15)) {
    goto LABEL_21;
  }
  if (*v5)
  {
    if (v15 != *v4 + 1) {
      goto LABEL_21;
    }
    *(void *)(v3 + 32) = *v5;
  }
  int v14 = 0;
  int v6 = (void *)(v3 + 56);
  if (!sub_1000BF078(a1, 4, (uint64_t *)(v3 + 56), &v14)) {
    goto LABEL_21;
  }
  if (!*v6) {
    goto LABEL_12;
  }
  if (v14 != *v4 + 1)
  {
LABEL_21:
    sub_1000C321C(*(void *)(v3 + 72));
    sub_1000C321C(*(void *)(v3 + 56));
    sub_1000C321C(*(void *)(v3 + 40));
    sub_1000C321C(*(void *)(v3 + 24));
    sub_1000C321C(v3);
    return 0;
  }
  *(void *)(v3 + 48) = *v6;
LABEL_12:
  if (!sub_1000BEECC(a1, (void *)(v3 + 68))) {
    goto LABEL_21;
  }
  int v13 = 0;
  int v7 = (unint64_t *)(v3 + 72);
  if (!sub_1000BF078(a1, 1, (uint64_t *)(v3 + 72), &v13) || *v7 && v13 != *(_DWORD *)(v3 + 68)) {
    goto LABEL_21;
  }
  int v8 = (void *)sub_1000C33A0(8 * *v4 + 8);
  if (!v8) {
    goto LABEL_21;
  }
  int v9 = v8;
  *int v8 = 0;
  if (*v4 >= 1)
  {
    uint64_t v10 = 0;
    unint64_t v11 = *v7;
    do
    {
      v9[v10 + 1] = v11;
      v11 += (int)(sub_1000CAD00(v11) + 1);
      ++v10;
    }
    while (v10 < *v4);
  }
  *(void *)(v3 + 16) = v9;
  *(void *)(v3 + 24) = v9;
  return v3;
}

uint64_t sub_10007C84C(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = (uint64_t *)result;
    sub_1000C321C(*(void *)(result + 80));
    sub_1000C321C(v1[7]);
    sub_1000C321C(v1[5]);
    sub_1000C321C(v1[3]);
    return sub_1000C321C((uint64_t)v1);
  }
  return result;
}

uint64_t sub_10007C8A8(uint64_t a1)
{
  return *(int *)(a1 + 8);
}

uint64_t sub_10007C8B0(uint64_t a1, _WORD *a2)
{
  int v4 = sub_1000CAD00((unint64_t)"_UNKNOWN_") + 1;
  uint64_t v5 = 2 * v4;
  int v13 = (void *)sub_1000CD3E8(v5, v6, v7, v8, v9, v10, v11, v12);
  sub_1000D0D30("_UNKNOWN_", v4, (uint64_t)v13);
  uint64_t v14 = *(int *)(a1 + 8);
  if (v14)
  {
    uint64_t v15 = 1;
    while (1)
    {
      while (1)
      {
        uint64_t v16 = v14 - 1;
        if (v14 < 1) {
          uint64_t v16 = v14;
        }
        uint64_t v17 = v16 >> 1;
        uint64_t v18 = (v16 >> 1) + v15;
        int v19 = sub_1000CF684(a2, *(_WORD **)(*(void *)(a1 + 16) + 8 * v18));
        if ((v19 & 0x80000000) == 0) {
          break;
        }
        uint64_t v14 = v17;
        if (!v17) {
          goto LABEL_9;
        }
      }
      if (!v19) {
        break;
      }
      v14 += ~v17;
      uint64_t v15 = v18 + 1;
      if (!v14) {
        goto LABEL_9;
      }
    }
    sub_1000CD4D0(v13, v5);
    if (!*(_DWORD *)(a1 + 64)) {
      LODWORD(v18) = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v18);
    }
  }
  else
  {
LABEL_9:
    int v20 = sub_1000CF684(a2, v13);
    sub_1000CD4D0(v13, v5);
    if (v20) {
      LOWORD(v18) = -1;
    }
    else {
      LOWORD(v18) = 0;
    }
  }
  return (unsigned __int16)v18;
}

const __int16 *sub_10007C9B8(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return L"_UNKNOWN_";
  }
  if (*(_DWORD *)(a1 + 8) < (signed int)a2) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 16);
  if (*(_DWORD *)(a1 + 64)) {
    return *(const __int16 **)(v3 + 8 * a2);
  }
  else {
    return *(const __int16 **)(v3 + 8 * *(int *)(*(void *)(a1 + 48) + 4 * a2));
  }
}

uint64_t sub_10007CA04(uint64_t a1)
{
  unsigned int v2 = sub_1000C085C(*(_DWORD *)(a1 + 8), 4, 0xFFFFFFFF);
  uint64_t v3 = sub_1000C085C(*(_DWORD *)(a1 + 64), 4, v2);
  LODWORD(v4) = *(_DWORD *)(a1 + 8);
  if ((int)v4 >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = *(unint64_t **)(*(void *)(a1 + 16) + 8 * v5 + 8);
      int v7 = sub_1000CED6C((unint64_t)v6);
      uint64_t v3 = sub_1000C09B0(v6, 2, v7 + 1, v3);
      uint64_t v4 = *(int *)(a1 + 8);
      ++v5;
    }
    while (v5 < v4);
  }
  uint64_t v8 = *(unint64_t **)(a1 + 32);
  if (v8) {
    uint64_t v3 = sub_1000C09B0(v8, 4, (int)v4 + 1, v3);
  }
  uint64_t v9 = *(unint64_t **)(a1 + 48);
  if (!v9) {
    return v3;
  }
  int v10 = *(_DWORD *)(a1 + 8) + 1;
  return sub_1000C09B0(v9, 4, v10, v3);
}

uint64_t sub_10007CAF4(uint64_t a1)
{
  uint64_t v2 = sub_1000C33A0(88);
  uint64_t v3 = v2;
  if (!v2) {
    return v3;
  }
  uint64_t v4 = (int *)(v2 + 8);
  if (!sub_1000BEECC(a1, (void *)(v2 + 8))) {
    goto LABEL_22;
  }
  if (!sub_1000BEE7C(a1, (_DWORD *)(v3 + 64))) {
    goto LABEL_22;
  }
  int v15 = 0;
  uint64_t v5 = (void *)(v3 + 40);
  if (!sub_1000BF078(a1, 4, (uint64_t *)(v3 + 40), &v15)) {
    goto LABEL_22;
  }
  if (*v5)
  {
    if (v15 != *v4 + 1) {
      goto LABEL_22;
    }
    *(void *)(v3 + 32) = *v5;
  }
  int v14 = 0;
  uint64_t v6 = (void *)(v3 + 56);
  if (!sub_1000BF078(a1, 4, (uint64_t *)(v3 + 56), &v14)) {
    goto LABEL_22;
  }
  if (*v6)
  {
    if (v14 != *v4 + 1) {
      goto LABEL_22;
    }
    *(void *)(v3 + 48) = *v6;
  }
  if (!sub_1000BEECC(a1, (void *)(v3 + 68))) {
    goto LABEL_22;
  }
  int v13 = 0;
  int v7 = (void *)(v3 + 80);
  if (!sub_1000BF078(a1, 2, (uint64_t *)(v3 + 80), &v13)) {
    goto LABEL_22;
  }
  if (*v7)
  {
    if (v13 == *(_DWORD *)(v3 + 68))
    {
      *(void *)(v3 + 72) = *v7;
      goto LABEL_17;
    }
LABEL_22:
    sub_1000C321C(*(void *)(v3 + 80));
    sub_1000C321C(*(void *)(v3 + 56));
    sub_1000C321C(*(void *)(v3 + 40));
    sub_1000C321C(*(void *)(v3 + 24));
    sub_1000C321C(v3);
    return 0;
  }
LABEL_17:
  uint64_t v8 = (void *)sub_1000C33A0(8 * *v4 + 8);
  if (!v8) {
    goto LABEL_22;
  }
  uint64_t v9 = v8;
  *uint64_t v8 = 0;
  if (*v4 >= 1)
  {
    uint64_t v10 = 0;
    unint64_t v11 = *(void *)(v3 + 72);
    do
    {
      v9[v10 + 1] = v11;
      v11 += 2 * (int)(sub_1000CED6C(v11) + 1);
      ++v10;
    }
    while (v10 < *v4);
  }
  *(void *)(v3 + 16) = v9;
  *(void *)(v3 + 24) = v9;
  return v3;
}

uint64_t sub_10007CCC0(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_10007CCC0;
  *(void *)(a1 + 24) = sub_10007CDD0;
  *(void *)(a1 + 8) = sub_10007CE34;
  *(void *)(a1 + 32) = sub_10007CE78;
  *(void *)(a1 + 40) = sub_10007CF50;
  *(void *)(a1 + 48) = sub_10007CF58;
  *(void *)(a1 + 56) = sub_10007CF68;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 64) = sub_10007CFC8;
  *(void *)(a1 + 88) = sub_10007D010;
  *(void *)(a1 + 96) = sub_10007D058;
  uint64_t v1 = *(unsigned int *)(a1 + 160);
  if ((int)v1 >= 1)
  {
    uint64_t result = (uint64_t)sub_1000C328C(2 * v1);
    *(void *)(a1 + 216) = result;
    if (!result) {
      return result;
    }
    if (*(int *)(a1 + 160) >= 1)
    {
      uint64_t v4 = 0;
      do
        *(_WORD *)(*(void *)(a1 + 216) + 2 * v4++) = 0x7FFF;
      while (v4 < *(int *)(a1 + 160));
    }
  }
  return 1;
}

__n128 sub_10007CDD0(uint64_t a1)
{
  uint64_t v2 = sub_1000C33A0(224);
  if (v2)
  {
    long long v4 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)uint64_t v2 = *(_OWORD *)a1;
    *(_OWORD *)(v2 + 16) = v4;
    long long v5 = *(_OWORD *)(a1 + 32);
    long long v6 = *(_OWORD *)(a1 + 48);
    long long v7 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v2 + 64) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v2 + 80) = v7;
    *(_OWORD *)(v2 + 32) = v5;
    *(_OWORD *)(v2 + 48) = v6;
    long long v8 = *(_OWORD *)(a1 + 96);
    long long v9 = *(_OWORD *)(a1 + 112);
    long long v10 = *(_OWORD *)(a1 + 144);
    *(_OWORD *)(v2 + 128) = *(_OWORD *)(a1 + 128);
    *(_OWORD *)(v2 + 144) = v10;
    *(_OWORD *)(v2 + 96) = v8;
    *(_OWORD *)(v2 + 112) = v9;
    __n128 result = *(__n128 *)(a1 + 160);
    long long v11 = *(_OWORD *)(a1 + 176);
    long long v12 = *(_OWORD *)(a1 + 208);
    *(_OWORD *)(v2 + 192) = *(_OWORD *)(a1 + 192);
    *(_OWORD *)(v2 + 208) = v12;
    *(__n128 *)(v2 + 160) = result;
    *(_OWORD *)(v2 + 176) = v11;
  }
  return result;
}

uint64_t sub_10007CE34(uint64_t a1)
{
  sub_1000C321C(*(void *)(a1 + 216));
  sub_10007BF44(*(void *)(a1 + 200));
  return sub_100076D5C(a1);
}

uint64_t sub_10007CE78(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v11 = 0;
  long long v4 = (_WORD *)(a2 + 2 * a4);
  if (!*v4)
  {
    LOWORD(v7) = qword_100101CC0;
    if (qword_100101CC0)
    {
      uint64_t v7 = *(void *)(qword_100101CC0 + 3624);
      if ((v7 & 0x80000000) != 0) {
        return 0;
      }
      if (v7 >> 15) {
        LOWORD(v7) = 0x7FFF;
      }
    }
    return (__int16)v7;
  }
  if (sub_10007BF98(*(void *)(a1 + 192), (unsigned __int16 *)(a2 + 2 * a4), &v11)) {
    int v6 = v11;
  }
  else {
    int v6 = *(__int16 *)(*(void *)(a1 + 216) + 2 * (~*(_DWORD *)(a1 + 152) + (unsigned __int16)*v4));
  }
  if (v6 >= 0x7FFF) {
    __int16 v9 = 0x7FFF;
  }
  else {
    __int16 v9 = v6;
  }
  if (v6 >= 0) {
    return v9;
  }
  else {
    return 0;
  }
}

uint64_t sub_10007CF50()
{
  return 0;
}

BOOL sub_10007CF58(uint64_t a1)
{
  return *(_DWORD *)(a1 + 124) != 0;
}

BOOL sub_10007CF68(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v4 = a2;
  BOOL result = sub_100076FA0(a1, a2);
  if (result)
  {
    if (a3 >= 0x7FFF) {
      LOWORD(a3) = *(_WORD *)(a1 + 208);
    }
    *(_WORD *)(*(void *)(a1 + 216) + 2 * (~*(_DWORD *)(a1 + 152) + v4)) = a3;
    return 1;
  }
  return result;
}

BOOL sub_10007CFC8(uint64_t a1, uint64_t a2)
{
  int v2 = a2;
  BOOL result = sub_100076FA0(a1, a2);
  if (result)
  {
    *(_WORD *)(*(void *)(a1 + 216) + 2 * (~*(_DWORD *)(a1 + 152) + v2)) = 0x7FFF;
    return 1;
  }
  return result;
}

BOOL sub_10007D010(uint64_t a1, uint64_t a2)
{
  BOOL result = sub_100076F2C(a1, a2);
  if (result) {
    return sub_1000BEFCC(a2, *(void **)(a1 + 216), *(_DWORD *)(a1 + 160), 2);
  }
  return result;
}

BOOL sub_10007D058(uint64_t a1, uint64_t a2, uint8x8_t a3)
{
  BOOL result = sub_100076F60(a1, a2, a3);
  if (result)
  {
    uint64_t v7 = *(void **)(a1 + 216);
    if (v7) {
      unsigned int v8 = *(_DWORD *)(a1 + 160);
    }
    else {
      unsigned int v8 = 0;
    }
    return sub_1000BFDB0(a2, v7, v8, 2, v6) != 0;
  }
  return result;
}

uint64_t sub_10007D0AC(uint64_t a1)
{
  uint64_t v2 = sub_1000C33A0(224);
  uint64_t v3 = v2;
  if (!v2) {
    return v3;
  }
  if (sub_100076D98(v2, a1))
  {
    if (!sub_1000BEF74(a1, (_WORD *)(v3 + 208))
      || (uint64_t v4 = sub_10007C12C(a1), (*(void *)(v3 + 200) = v4) == 0))
    {
LABEL_11:
      sub_1000C321C(*(void *)(v3 + 216));
      sub_10007BF44(*(void *)(v3 + 200));
      sub_100076D5C(v3);
      goto LABEL_12;
    }
    *(void *)(v3 + 192) = v4;
    *(void *)(v3 + 16) = sub_10007CCC0;
    *(void *)(v3 + 24) = sub_10007CDD0;
    *(void *)(v3 + 8) = sub_10007CE34;
    *(void *)(v3 + 32) = sub_10007CE78;
    *(void *)(v3 + 40) = sub_10007CF50;
    *(void *)(v3 + 48) = sub_10007CF58;
    *(void *)(v3 + 56) = sub_10007CF68;
    *(void *)(v3 + 72) = 0;
    *(void *)(v3 + 80) = 0;
    *(void *)(v3 + 64) = sub_10007CFC8;
    *(void *)(v3 + 88) = sub_10007D010;
    *(void *)(v3 + 96) = sub_10007D058;
    uint64_t v5 = *(unsigned int *)(v3 + 160);
    if ((int)v5 >= 1)
    {
      uint8x8_t v6 = sub_1000C328C(2 * v5);
      *(void *)(v3 + 216) = v6;
      if (v6)
      {
        if (*(int *)(v3 + 160) >= 1)
        {
          uint64_t v7 = 0;
          do
            *(_WORD *)(*(void *)(v3 + 216) + 2 * v7++) = 0x7FFF;
          while (v7 < *(int *)(v3 + 160));
        }
        return v3;
      }
      goto LABEL_11;
    }
    return v3;
  }
LABEL_12:
  sub_1000C321C(v3);
  return 0;
}

_DWORD *sub_10007D234(int a1)
{
  BOOL result = (_DWORD *)sub_1000C33A0(12);
  if (result)
  {
    *BOOL result = a1;
    result[1] = 4;
    uint64_t v3 = qword_100101CC0;
    if (qword_100101CC0)
    {
      if (*(_DWORD *)(qword_100101CC0 + 2864))
      {
        result[1] = 2;
        uint64_t v3 = qword_100101CC0;
        if (!qword_100101CC0) {
          return result;
        }
        if (*(_DWORD *)(qword_100101CC0 + 2860)) {
          result[2] = 1;
        }
      }
      else if (*(_DWORD *)(qword_100101CC0 + 2884))
      {
        result[1] = 1;
        uint64_t v3 = qword_100101CC0;
        if (!qword_100101CC0) {
          return result;
        }
      }
      if (!*(_DWORD *)(v3 + 2888) || (result[1] = 0, (uint64_t v3 = qword_100101CC0) != 0))
      {
        if (*(_DWORD *)(v3 + 2868)) {
          result[1] = 3;
        }
      }
    }
  }
  return result;
}

_DWORD *sub_10007D2E0(_DWORD *result, const __int16 *a2, unint64_t a3, int32x4_t a4)
{
  uint64_t v4 = (int8x16_t *)a3;
  uint64_t v5 = a2;
  uint8x8_t v6 = result;
  int v7 = *result;
  if ((int)*result >= 0) {
    int v8 = *result;
  }
  else {
    int v8 = v7 + 1;
  }
  unsigned int v9 = v8 >> 1;
  switch(result[1])
  {
    case 0:
    case 3:
      if (v7 < -1) {
        return result;
      }
      uint64_t v10 = v9 + 1;
      if (v10 < 0x10
        || ((uint64_t v11 = 4 * v9 + 4, (unint64_t)a2 + v11 > a3) ? (v12 = a3 + v11 > (unint64_t)a2) : (v12 = 0),
            v12))
      {
        LODWORD(v13) = 0;
        int v14 = (_DWORD *)a3;
        int v15 = (__int16 *)a2;
      }
      else
      {
        uint64_t v13 = v10 & 0xFFFFFFF0;
        int v14 = (_DWORD *)(a3 + 4 * v13);
        int v15 = (__int16 *)&a2[2 * v13];
        uint64_t v16 = a2 + 16;
        uint64_t v17 = (int32x4_t *)(a3 + 32);
        uint64_t v18 = v13;
        do
        {
          int v19 = v16 - 16;
          int16x8x2_t v91 = vld2q_s16(v19);
          int16x8x2_t v94 = vld2q_s16(v16);
          v17[-2] = vmlal_s16(vmull_s16(*(int16x4_t *)v91.val[1].i8, *(int16x4_t *)v91.val[1].i8), *(int16x4_t *)v91.val[0].i8, *(int16x4_t *)v91.val[0].i8);
          v17[-1] = vmlal_high_s16(vmull_high_s16(v91.val[1], v91.val[1]), v91.val[0], v91.val[0]);
          *uint64_t v17 = vmlal_s16(vmull_s16(*(int16x4_t *)v94.val[1].i8, *(int16x4_t *)v94.val[1].i8), *(int16x4_t *)v94.val[0].i8, *(int16x4_t *)v94.val[0].i8);
          v17[1] = vmlal_high_s16(vmull_high_s16(v94.val[1], v94.val[1]), v94.val[0], v94.val[0]);
          v17 += 4;
          v16 += 32;
          v18 -= 16;
        }
        while (v18);
        if (v13 == v10) {
          return result;
        }
      }
      int v47 = v9 - v13 + 1;
      do
      {
        *v14++ = *v15 * *v15 + v15[1] * v15[1];
        v15 += 2;
        --v47;
      }
      while (v47);
      return result;
    case 1:
      if (v7 < 2) {
        return result;
      }
      uint64_t v20 = v9 - 1;
      if (v20 < 7
        || ((v21 = 4 * v20 + 4, (unint64_t)a2 + v21 > a3) ? (BOOL v22 = a3 + v21 > (unint64_t)a2) : (BOOL v22 = 0),
            v22))
      {
        LODWORD(v24) = 0;
        int v25 = (int *)a3;
        int v26 = (__int16 *)a2;
      }
      else
      {
        uint64_t v23 = v20 + 1;
        uint64_t v24 = (v20 + 1) & 0x1FFFFFFF8;
        int v25 = (int *)(a3 + 4 * v24);
        int v26 = (__int16 *)&a2[2 * v24];
        v27.i64[0] = 0x100000001;
        v27.i64[1] = 0x100000001;
        uint64_t v28 = v24;
        do
        {
          int16x8x2_t v92 = vld2q_s16(v5);
          v5 += 16;
          uint16x8_t v29 = (uint16x8_t)vabsq_s16(v92.val[0]);
          int32x4_t v30 = (int32x4_t)vmovl_high_u16(v29);
          int32x4_t v31 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v29.i8);
          v92.val[0] = vabsq_s16(v92.val[1]);
          v92.val[1] = (int16x8_t)vmovl_u16(*(uint16x4_t *)v92.val[0].i8);
          int32x4_t v32 = (int32x4_t)vmovl_high_u16((uint16x8_t)v92.val[0]);
          int16x8_t v33 = (int16x8_t)vcgeq_u16((uint16x8_t)v92.val[0], v29);
          int16x8_t v34 = (int16x8_t)vcgtq_u16(v29, (uint16x8_t)v92.val[0]);
          int8x16_t v35 = (int8x16_t)vmovl_high_s16(v34);
          int8x16_t v36 = (int8x16_t)vmovl_s16(*(int16x4_t *)v34.i8);
          int32x4_t v37 = vsubq_s32(v31, (int32x4_t)vshrq_n_u32((uint32x4_t)v92.val[1], 2uLL));
          int32x4_t v38 = vsubq_s32(v30, (int32x4_t)vshrq_n_u32((uint32x4_t)v32, 2uLL));
          int8x16_t v39 = (int8x16_t)vcgtq_s32(v27, v38);
          int8x16_t v40 = (int8x16_t)vcgtq_s32(v27, v37);
          int32x4_t v41 = vsubq_s32((int32x4_t)v92.val[1], (int32x4_t)vshrq_n_u32((uint32x4_t)v31, 2uLL));
          int32x4_t v42 = vsubq_s32(v32, (int32x4_t)vshrq_n_u32((uint32x4_t)v30, 2uLL));
          int8x16_t *v4 = vbslq_s8(vandq_s8((int8x16_t)vmovl_s16(*(int16x4_t *)v33.i8), v40), (int8x16_t)v92.val[1], vbslq_s8(vorrq_s8(v36, v40), (int8x16_t)vaddw_u16((uint32x4_t)vbicq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)v41, 1uLL), vandq_s8(v36, (int8x16_t)vcgtq_s32(v27, v41))), *(uint16x4_t *)v29.i8), (int8x16_t)vsraq_n_u32((uint32x4_t)v92.val[1], (uint32x4_t)v37, 1uLL)));
          v4[1] = vbslq_s8(vandq_s8((int8x16_t)vmovl_high_s16(v33), v39), (int8x16_t)v32, vbslq_s8(vorrq_s8(v35, v39), (int8x16_t)vaddw_high_u16((uint32x4_t)vbicq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)v42, 1uLL), vandq_s8(v35, (int8x16_t)vcgtq_s32(v27, v42))), v29), (int8x16_t)vaddw_high_u16(vshrq_n_u32((uint32x4_t)v38, 1uLL), (uint16x8_t)v92.val[0])));
          v4 += 2;
          v28 -= 8;
        }
        while (v28);
        if (v23 == v24) {
          return result;
        }
      }
      int v48 = v9 - v24;
      do
      {
        int v49 = *v26;
        int v50 = v26[1];
        if (v49 < 0) {
          int v49 = -v49;
        }
        if (v50 < 0) {
          int v50 = -v50;
        }
        int v51 = (unsigned __int16)v49 - ((unsigned __int16)v50 >> 2);
        BOOL v12 = v51 < 1;
        int v52 = (unsigned __int16)v50 + (v51 >> 1);
        if (v12) {
          int v52 = (unsigned __int16)v50;
        }
        int v53 = (unsigned __int16)v50 - ((unsigned __int16)v49 >> 2);
        BOOL v12 = v53 < 1;
        int v54 = (unsigned __int16)v49 + (v53 >> 1);
        if (v12) {
          int v54 = (unsigned __int16)v49;
        }
        if ((unsigned __int16)v49 > (unsigned __int16)v50) {
          int v55 = v54;
        }
        else {
          int v55 = v52;
        }
        *v25++ = v55;
        v26 += 2;
        --v48;
      }
      while (v48);
      return result;
    case 2:
      if (v7 < 2) {
        return result;
      }
      uint64_t v43 = result + 2;
      uint64_t v44 = v9 - 1;
      if (v44 < 7)
      {
        LODWORD(v45) = 0;
LABEL_66:
        __int16 v63 = (int *)a3;
        uint64_t v64 = (__int16 *)a2;
        goto LABEL_67;
      }
      LODWORD(v45) = 0;
      uint64_t v56 = 4 * v44 + 4;
      unint64_t v57 = a3 + v56;
      unint64_t v58 = (unint64_t)a2 + v56;
      BOOL v60 = (unint64_t)(result + 3) > a3 && (unint64_t)v43 < v57;
      BOOL v61 = v57 > (unint64_t)a2 && v58 > a3;
      if (v61 || v60) {
        goto LABEL_66;
      }
      uint64_t v62 = v44 + 1;
      uint64_t v45 = (v44 + 1) & 0x1FFFFFFF8;
      __int16 v63 = (int *)(a3 + 4 * v45);
      uint64_t v64 = (__int16 *)&a2[2 * v45];
      a4.i32[0] = *v43;
      int16x8_t v65 = (int16x8_t)vceqzq_s32(a4);
      *(int16x4_t *)v65.i8 = vmovn_s32((int32x4_t)v65);
      int8x8_t v66 = vdup_lane_s8(vmovn_s16(v65), 0);
      uint64_t v67 = v45;
      do
      {
        int16x8x2_t v93 = vld2q_s16(v5);
        v5 += 16;
        uint16x8_t v68 = (uint16x8_t)vabsq_s16(v93.val[0]);
        v93.val[0] = vabsq_s16(v93.val[1]);
        v93.val[1] = (int16x8_t)vmaxq_u16((uint16x8_t)v93.val[0], v68);
        int8x16_t v69 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v93.val[1].i8);
        int8x16_t v70 = (int8x16_t)vmovl_high_u16((uint16x8_t)v93.val[1]);
        v93.val[0] = (int16x8_t)vminq_u16((uint16x8_t)v93.val[0], v68);
        int8x16_t v71 = (int8x16_t)vmovl_high_u16((uint16x8_t)v93.val[0]);
        v93.val[0] = (int16x8_t)vmovl_u16(*(uint16x4_t *)v93.val[0].i8);
        int8x16_t v72 = (int8x16_t)vcgtq_u32(vshrq_n_u32((uint32x4_t)v69, 2uLL), (uint32x4_t)v93.val[0]);
        int8x16_t v73 = (int8x16_t)vcgtq_u32(vshrq_n_u32((uint32x4_t)v70, 2uLL), (uint32x4_t)v71);
        int32x4_t v74 = (int32x4_t)vsraq_n_u32((uint32x4_t)v69, (uint32x4_t)v93.val[0], 1uLL);
        v93.val[1] = (int16x8_t)vaddw_high_u16(vshrq_n_u32((uint32x4_t)v71, 1uLL), (uint16x8_t)v93.val[1]);
        int32x4_t v75 = (int32x4_t)vabdq_u32(vshrq_n_u32((uint32x4_t)v69, 1uLL), (uint32x4_t)v93.val[0]);
        int32x4_t v76 = (int32x4_t)vabdq_u32(vshrq_n_u32((uint32x4_t)v70, 1uLL), (uint32x4_t)v71);
        v93.val[1] = (int16x8_t)vbslq_s8(v73, v70, (int8x16_t)vsubq_s32((int32x4_t)v93.val[1], (int32x4_t)vsraq_n_u32(vshrq_n_u32((uint32x4_t)v93.val[1], 5uLL), (uint32x4_t)v93.val[1], 4uLL)));
        int32x4_t v77 = (int32x4_t)vbslq_s8(v72, v69, (int8x16_t)vsubq_s32(v74, (int32x4_t)vsraq_n_u32(vshrq_n_u32((uint32x4_t)v74, 5uLL), (uint32x4_t)v74, 4uLL)));
        v93.val[0] = (int16x8_t)vbslq_s8(v72, (int8x16_t)v93.val[0], (int8x16_t)vsubq_s32(v75, (int32x4_t)vsraq_n_u32(vshrq_n_u32((uint32x4_t)v75, 5uLL), (uint32x4_t)v75, 4uLL)));
        int32x4_t v78 = (int32x4_t)vbslq_s8(v73, v71, (int8x16_t)vsubq_s32(v76, (int32x4_t)vsraq_n_u32(vshrq_n_u32((uint32x4_t)v76, 5uLL), (uint32x4_t)v76, 4uLL)));
        *(int8x8_t *)v70.i8 = vorr_s8(v66, vmovn_s16(vuzp1q_s16((int16x8_t)vcgtq_s32(vshrq_n_s32(v77, 4uLL), (int32x4_t)v93.val[0]), (int16x8_t)vcgtq_s32(vshrq_n_s32((int32x4_t)v93.val[1], 4uLL), v78))));
        int32x4_t v79 = vsraq_n_s32((int32x4_t)v93.val[1], v78, 2uLL);
        int32x4_t v80 = vsraq_n_s32(v77, (int32x4_t)v93.val[0], 2uLL);
        int8x16_t *v4 = vbslq_s8((int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vzip1_s8(*(int8x8_t *)v70.i8, v66)), 0x1FuLL)), (int8x16_t)v77, (int8x16_t)vsubq_s32(v80, vshrq_n_s32(v80, 5uLL)));
        v4[1] = vbslq_s8((int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vzip2_s8(*(int8x8_t *)v70.i8, v66)), 0x1FuLL)), (int8x16_t)v93.val[1], (int8x16_t)vsubq_s32(v79, vshrq_n_s32(v79, 5uLL)));
        v4 += 2;
        v67 -= 8;
      }
      while (v67);
      if (v62 == v45) {
        return result;
      }
LABEL_67:
      int v81 = v9 - v45;
      do
      {
        int v84 = *v64;
        int v85 = v64[1];
        if (v84 < 0) {
          int v84 = -v84;
        }
        unsigned int v86 = (unsigned __int16)v84;
        if (v85 >= 0) {
          LOWORD(v83) = v64[1];
        }
        else {
          int v83 = -v85;
        }
        int v87 = (unsigned __int16)v83;
        if ((unsigned __int16)v83 <= v86) {
          int v83 = v86;
        }
        else {
          int v83 = (unsigned __int16)v83;
        }
        if (v87 >= v86) {
          int v87 = v86;
        }
        if (v87 >= v83 >> 2)
        {
          unsigned int v88 = v83 + (v87 >> 1);
          int v89 = v87 - (v83 >> 1);
          if (v89 >= 0) {
            unsigned int v90 = v89;
          }
          else {
            unsigned int v90 = -v89;
          }
          int v83 = v88 - ((v88 >> 5) + (v88 >> 4));
          int v87 = v90 - ((v90 >> 5) + (v90 >> 4));
        }
        if (v87 >= v83 >> 4 && *v43 != 0) {
          int v83 = v83 + (v87 >> 2) - ((v83 + (v87 >> 2)) >> 5);
        }
        *v63++ = v83;
        v64 += 2;
        --v81;
      }
      while (v81);
      return result;
    default:
      if (v7 >= 2)
      {
        uint64_t v46 = 0;
        do
        {
          BOOL result = (_DWORD *)sub_10007D818(*v5 * *v5 + v5[1] * v5[1]);
          v4->i32[v46++] = (int)result;
          v5 += 2;
        }
        while ((int)v46 < *v6 / 2);
      }
      return result;
  }
}

uint64_t sub_10007D818(unsigned int a1)
{
  __int16 v1 = 0x7FFF;
  if (!(a1 >> 30))
  {
    int v2 = (((a1 & 0xF0000000) != 0) << 14) | 0x2000;
    if (v2 * v2 <= a1) {
      unsigned int v3 = (((a1 & 0xF0000000) != 0) << 14) | 0x2000;
    }
    else {
      unsigned int v3 = ((a1 & 0xF0000000) != 0) << 14;
    }
    if ((v3 | 0x1000) * (v3 | 0x1000) <= a1) {
      v3 |= 0x1000u;
    }
    if ((v3 | 0x800) * (v3 | 0x800) <= a1) {
      v3 |= 0x800u;
    }
    if ((v3 + 1024) * (v3 + 1024) <= a1) {
      v3 += 1024;
    }
    if ((v3 + 512) * (v3 + 512) <= a1) {
      v3 += 512;
    }
    if ((v3 + 256) * (v3 + 256) <= a1) {
      v3 += 256;
    }
    if ((v3 + 128) * (v3 + 128) <= a1) {
      v3 += 128;
    }
    if ((v3 + 64) * (v3 + 64) <= a1) {
      v3 += 64;
    }
    if ((v3 + 32) * (v3 + 32) <= a1) {
      v3 += 32;
    }
    if ((v3 + 16) * (v3 + 16) <= a1) {
      v3 += 16;
    }
    if ((v3 + 8) * (v3 + 8) <= a1) {
      v3 += 8;
    }
    if ((v3 + 4) * (v3 + 4) <= a1) {
      v3 += 4;
    }
    if ((v3 + 2) * (v3 + 2) <= a1) {
      v3 += 2;
    }
    if ((v3 + 1) * (v3 + 1) <= a1) {
      ++v3;
    }
    unsigned int v4 = a1 - v3 * v3;
    unsigned int v5 = (v3 + 1) * (v3 + 1) - a1;
    if (v3 < 0x7FFF)
    {
      BOOL v6 = v4 >= v5;
      BOOL v7 = v4 == v5;
    }
    else
    {
      BOOL v6 = 0;
      BOOL v7 = 0;
    }
    if (!v7 && v6) {
      return (__int16)(v3 + 1);
    }
    else {
      return (__int16)v3;
    }
  }
  return v1;
}

uint64_t sub_10007D938(uint64_t result)
{
  if (result)
  {
    __int16 v1 = (void *)result;
    if (*(_DWORD *)(result + 44))
    {
      int v2 = *(uint64_t **)(result + 48);
      if (v2) {
        sub_1000A64C8(v2);
      }
    }
    sub_1000C321C(v1[8]);
    v1[7] = 0;
    v1[8] = 0;
    sub_1000C321C(v1[10]);
    v1[9] = 0;
    v1[10] = 0;
    return sub_1000C321C((uint64_t)v1);
  }
  return result;
}

void sub_10007D9A0(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 44)) {
    sub_1000A4CC8(*(int **)(a1 + 48));
  }
}

void sub_10007D9B4(int *a1, uint64_t a2, uint64_t a3, int16x4_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v10 = a2;
  if (!a1[4] && !a1[10])
  {
    int v87 = *a1;
    if (!*a1) {
      goto LABEL_53;
    }
    int v88 = 0;
    int v89 = (int *)*((void *)a1 + 9);
    unsigned int v90 = (int16x8_t *)*((void *)a1 + 7);
    int16x8x2_t v91 = a4;
    while (1)
    {
      int v94 = *v89;
      int v95 = v89[2];
      if (*v89 >= v95)
      {
        LOWORD(v92) = 0;
        int16x8x2_t v93 = v90;
        goto LABEL_62;
      }
      uint64_t v96 = v94;
      unsigned int v97 = (int *)(a3 + 4 * v94);
      uint64_t v98 = (v95 + ~v94);
      if (v98 >= 0xF)
      {
        uint64_t v100 = v98 + 1;
        uint64_t v101 = (v98 + 1) & 0x1FFFFFFF0;
        int16x8x2_t v93 = (int16x8_t *)((char *)v90 + 2 * v101);
        v97 += v101;
        v94 += v101;
        BOOL v102 = (int32x4_t *)(a3 + 32 + 4 * v96);
        int v103 = v90 + 1;
        int32x4_t v104 = 0uLL;
        uint64_t v105 = v101;
        int32x4_t v106 = 0uLL;
        int32x4_t v107 = 0uLL;
        int32x4_t v108 = 0uLL;
        do
        {
          int32x4_t v110 = v102[-2];
          int32x4_t v109 = v102[-1];
          int32x4_t v112 = *v102;
          int32x4_t v111 = v102[1];
          v102 += 4;
          int16x8_t v113 = v103[-1];
          int32x4_t v106 = vmlaq_s32(v106, v109, vmovl_high_s16(v113));
          int32x4_t v104 = vmlaq_s32(v104, v110, vmovl_s16(*(int16x4_t *)v113.i8));
          int32x4_t v108 = vmlaq_s32(v108, v111, vmovl_high_s16(*v103));
          int32x4_t v107 = vmlaq_s32(v107, v112, vmovl_s16(*(int16x4_t *)v103->i8));
          v103 += 2;
          v105 -= 16;
        }
        while (v105);
        int v99 = vaddvq_s32(vaddq_s32(vaddq_s32(v107, v104), vaddq_s32(v108, v106)));
        if (v100 == v101) {
          goto LABEL_71;
        }
      }
      else
      {
        int v99 = 0;
        int16x8x2_t v93 = v90;
      }
      int v114 = v95 - v94;
      do
      {
        int v116 = *v97++;
        int v115 = v116;
        int v117 = v93->i16[0];
        int16x8x2_t v93 = (int16x8_t *)((char *)v93 + 2);
        v99 += v115 * v117;
        --v114;
      }
      while (v114);
LABEL_71:
      if (v99 >= 0x4000)
      {
        int v118 = v99 + 0x4000;
        unsigned int v119 = v118 >> 15;
        if (v118 >= 0x40008000)
        {
          int v120 = 0;
          do
          {
            --v120;
            int v121 = v119 >> 1;
            BOOL v81 = v119 > 0x10001;
            v119 >>= 1;
          }
          while (v81);
          goto LABEL_80;
        }
        int v120 = 0;
        if (v118 >> 29)
        {
          int v122 = v119 - 0x4000;
          if (a1[9]) {
            goto LABEL_81;
          }
        }
        else
        {
          int v121 = v118 >> 15;
          do
          {
            ++v120;
            v121 *= 2;
          }
          while (v121 < 0x4000);
LABEL_80:
          int v122 = v121 - 0x4000;
          if (a1[9])
          {
LABEL_81:
            int v123 = ((999309312 - 7783 * v122) >> 15) * v122 + 0x4000;
LABEL_84:
            int v92 = ((1 << (13 - a1[8])) + 158998 - 11357 * (v120 + (int)a2) + (v123 >> 15)) >> (14 - a1[8]);
            goto LABEL_62;
          }
        }
        unsigned int v124 = (v122 * v122 + 0x2000) >> 14;
        int v123 = 32739 * v122
             - 16055 * v124
             + 9361 * ((int)(v124 * v122 + 0x2000) >> 14)
             - 4360 * ((((int)(v124 * v122 + 0x2000) >> 14) * v122 + 0x2000) >> 14)
             + 1028 * ((((((int)(v124 * v122 + 0x2000) >> 14) * v122 + 0x2000) >> 14) * v122 + 0x2000) >> 14);
        goto LABEL_84;
      }
      LOWORD(v92) = 0;
LABEL_62:
      v91->i16[0] = v92;
      int16x8x2_t v91 = (int16x4_t *)((char *)v91 + 2);
      ++v89;
      ++v88;
      unsigned int v90 = v93;
      if (v88 == v87) {
        goto LABEL_53;
      }
    }
  }
  BOOL v12 = sub_1000CD454(4 * *a1 + 4, a2, a3, (uint64_t)a4, a5, a6, a7, a8);
  uint64_t v13 = (*a1 + 1);
  if (*a1 == -1)
  {
    unsigned int v14 = -1;
    goto LABEL_19;
  }
  uint64_t v15 = 0;
  uint64_t v16 = (int8x16_t *)(a3 + 4 * **((int **)a1 + 9));
  do
  {
    uint64_t v19 = *((void *)a1 + 9);
    uint64_t v20 = v15 + 1;
    int v21 = *(_DWORD *)(v19 + 4 * (v15 + 1));
    int v22 = *(_DWORD *)(v19 + 4 * v15);
    if (v21 - v22 < 1)
    {
      __int32 v17 = 0;
      uint64_t v18 = v16;
      goto LABEL_7;
    }
    uint64_t v23 = (v21 + ~v22);
    if (v23 < 7)
    {
      __int32 v17 = 0;
      LODWORD(v24) = 0;
      uint64_t v18 = v16;
LABEL_14:
      int v31 = v24 + v22 - v21;
      do
      {
        __int32 v32 = v18->i32[0];
        uint64_t v18 = (int8x16_t *)((char *)v18 + 4);
        v17 |= v32;
        BOOL v33 = __CFADD__(v31++, 1);
      }
      while (!v33);
      goto LABEL_7;
    }
    uint64_t v25 = v23 + 1;
    uint64_t v24 = (v23 + 1) & 0x1FFFFFFF8;
    uint64_t v18 = (int8x16_t *)((char *)v16 + 4 * v24);
    int v26 = v16 + 1;
    int8x16_t v27 = 0uLL;
    uint64_t v28 = v24;
    int8x16_t v29 = 0uLL;
    do
    {
      int8x16_t v27 = vorrq_s8(v26[-1], v27);
      int8x16_t v29 = vorrq_s8(*v26, v29);
      v26 += 2;
      v28 -= 8;
    }
    while (v28);
    int8x16_t v30 = vorrq_s8(v29, v27);
    *(int8x8_t *)v30.i8 = vorr_s8(*(int8x8_t *)v30.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v30, v30, 8uLL));
    __int32 v17 = v30.i32[0] | v30.i32[1];
    if (v25 != v24) {
      goto LABEL_14;
    }
LABEL_7:
    *((_DWORD *)v12 + v15++) = v17;
    uint64_t v16 = v18;
  }
  while (v20 != v13);
  unsigned int v14 = *a1;
  if (*a1)
  {
LABEL_19:
    uint64_t v34 = 0;
    int8x16_t v35 = (int16x8_t *)*((void *)a1 + 7);
    int8x16_t v36 = a4;
    uint64_t v37 = v14;
    while (1)
    {
      uint64_t v38 = v34 + 1;
      int v39 = *((_DWORD *)v12 + v34 + 1) | *((_DWORD *)v12 + v34);
      if ((v39 - 1) > 0x3FFFFFFE)
      {
        int v41 = 15;
        unsigned int v44 = 0x4000;
      }
      else
      {
        int v40 = 16;
        do
        {
          v39 *= 2;
          --v40;
        }
        while (v39 < 0x40000000);
        int v41 = v40 - 1;
        BOOL v42 = __OFSUB__(v40, 2);
        int v43 = v40 - 2;
        if (v43 < 0 != v42) {
          unsigned int v44 = 0;
        }
        else {
          unsigned int v44 = 1 << v43;
        }
      }
      uint64_t v45 = *((void *)a1 + 9);
      uint64_t v46 = *(int *)(v45 + 4 * v34);
      unsigned int v47 = v41 & ~(v41 >> 31);
      int v48 = *(_DWORD *)(v45 + 4 * (v34 + 2));
      if (v48 - (int)v46 < 1)
      {
        int v51 = 0;
      }
      else
      {
        int v49 = (int *)(a3 + 4 * v46);
        uint64_t v50 = (v48 + ~v46);
        if (v50 >= 0xF)
        {
          uint64_t v54 = v50 + 1;
          uint64_t v52 = (v50 + 1) & 0x1FFFFFFF0;
          int v53 = &v35->i16[v52];
          v49 += v52;
          int32x4_t v55 = vdupq_n_s32(v44);
          int32x4_t v56 = vdupq_n_s32(v47);
          unint64_t v57 = (int32x4_t *)(a3 + 32 + 4 * v46);
          unint64_t v58 = v35 + 1;
          int32x4_t v59 = 0uLL;
          uint64_t v60 = v52;
          int32x4_t v61 = 0uLL;
          int32x4_t v62 = 0uLL;
          int32x4_t v63 = 0uLL;
          do
          {
            int32x4_t v65 = v57[-2];
            int32x4_t v64 = v57[-1];
            int32x4_t v67 = *v57;
            int32x4_t v66 = v57[1];
            v57 += 4;
            int32x4_t v68 = vnegq_s32(v56);
            int32x4_t v69 = vshlq_s32(vaddq_s32(v64, v55), v68);
            int32x4_t v70 = vshlq_s32(vaddq_s32(v65, v55), v68);
            int32x4_t v71 = vshlq_s32(vaddq_s32(v66, v55), v68);
            int32x4_t v72 = vshlq_s32(vaddq_s32(v67, v55), v68);
            int16x8_t v73 = v58[-1];
            int32x4_t v61 = vmlaq_s32(v61, v69, vmovl_high_s16(v73));
            int32x4_t v59 = vmlaq_s32(v59, v70, vmovl_s16(*(int16x4_t *)v73.i8));
            int32x4_t v63 = vmlaq_s32(v63, v71, vmovl_high_s16(*v58));
            int32x4_t v62 = vmlaq_s32(v62, v72, vmovl_s16(*(int16x4_t *)v58->i8));
            v58 += 2;
            v60 -= 16;
          }
          while (v60);
          int v51 = vaddvq_s32(vaddq_s32(vaddq_s32(v62, v59), vaddq_s32(v63, v61)));
          int8x16_t v35 = (int16x8_t *)v53;
          if (v54 == v52) {
            goto LABEL_38;
          }
        }
        else
        {
          int v51 = 0;
          LODWORD(v52) = 0;
          int v53 = (__int16 *)v35;
        }
        int v74 = v52 + v46 - v48;
        int8x16_t v35 = (int16x8_t *)v53;
        do
        {
          int v75 = *v49++;
          int v76 = (int)(v75 + v44) >> v47;
          int v77 = v35->i16[0];
          int8x16_t v35 = (int16x8_t *)((char *)v35 + 2);
          v51 += v76 * v77;
          BOOL v33 = __CFADD__(v74++, 1);
        }
        while (!v33);
      }
LABEL_38:
      unsigned int v78 = (v51 + (1 << (14 - v47))) >> (15 - v47);
      if ((int)v78 < 1)
      {
        v36->i16[0] = 0;
        int8x16_t v36 = (int16x4_t *)((char *)v36 + 2);
        uint64_t v34 = v38;
        if (v38 == v37) {
          goto LABEL_51;
        }
      }
      else
      {
        if (v78 > 0x8000)
        {
          unsigned int v79 = 0;
          do
          {
            --v79;
            int v80 = v78 >> 1;
            BOOL v81 = v78 > 0x10001;
            v78 >>= 1;
          }
          while (v81);
          goto LABEL_46;
        }
        unsigned int v79 = v78 >> 14;
        if (!(v78 >> 14))
        {
          int v80 = (v51 + (1 << (14 - v47))) >> (15 - v47);
          do
          {
            ++v79;
            v80 *= 2;
          }
          while (v80 < 0x4000);
LABEL_46:
          int v82 = v80 - 0x4000;
          if (!a1[9]) {
            goto LABEL_49;
          }
          goto LABEL_47;
        }
        unsigned int v79 = 0;
        int v82 = v78 - 0x4000;
        if (!a1[9])
        {
LABEL_49:
          unsigned int v84 = (v82 * v82 + 0x2000) >> 14;
          int v83 = 32739 * v82
              - 16055 * v84
              + 9361 * ((int)(v84 * v82 + 0x2000) >> 14)
              - 4360 * ((((int)(v84 * v82 + 0x2000) >> 14) * v82 + 0x2000) >> 14)
              + 1028 * ((((((int)(v84 * v82 + 0x2000) >> 14) * v82 + 0x2000) >> 14) * v82 + 0x2000) >> 14);
          goto LABEL_50;
        }
LABEL_47:
        int v83 = ((-7783 * v82 + 999309312) >> 15) * v82 + 0x4000;
LABEL_50:
        v36->i16[0] = (int)((1 << (13 - a1[8])) + 158998 - 11357 * (v79 + v10) + (v83 >> 15)) >> (14 - a1[8]);
        int8x16_t v36 = (int16x4_t *)((char *)v36 + 2);
        uint64_t v34 = v38;
        if (v38 == v37)
        {
LABEL_51:
          uint64_t v85 = 4 * *a1 + 4;
          goto LABEL_52;
        }
      }
    }
  }
  uint64_t v85 = 4;
LABEL_52:
  sub_1000CD4D0(v12, v85);
LABEL_53:
  if (a1[11])
  {
    unsigned int v86 = (int *)*((void *)a1 + 6);
    sub_1000A4D40(v86, a4);
  }
}

_DWORD *sub_10007E0AC(_DWORD *result, _DWORD *a2, _DWORD *a3, _DWORD *a4)
{
  if (result)
  {
    *a2 = result[3];
    *a3 = result[5];
    *a4 = result[6];
  }
  else
  {
    *a2 = 0;
    *a3 = 0;
    *a4 = 0;
  }
  return result;
}

_DWORD *sub_10007E0DC(_DWORD *result, int a2, int a3, int a4)
{
  if (result)
  {
    result[3] = a2;
    result[5] = a3;
    result[6] = a4;
  }
  return result;
}

_DWORD *sub_10007E0EC(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = sub_1000BEC58(a1, "bmt0", a2, a4, a5, a6, a7, a8);
  if (v8)
  {
    uint64_t v9 = (uint64_t)v8;
    int v10 = (_DWORD *)sub_1000C33A0(88);
    if (v10)
    {
      if (!sub_1000BEECC(v9, v10)) {
        goto LABEL_22;
      }
      if (!sub_1000BEECC(v9, v10 + 1)) {
        goto LABEL_22;
      }
      if (!sub_1000BEECC(v9, v10 + 2)) {
        goto LABEL_22;
      }
      if (!sub_1000BEE7C(v9, v10 + 3)) {
        goto LABEL_22;
      }
      if (!sub_1000BEE7C(v9, v10 + 4)) {
        goto LABEL_22;
      }
      if (!sub_1000BEECC(v9, v10 + 5)) {
        goto LABEL_22;
      }
      if (!sub_1000BEECC(v9, v10 + 6)) {
        goto LABEL_22;
      }
      if (!sub_1000BEECC(v9, v10 + 7)) {
        goto LABEL_22;
      }
      if (!sub_1000BEECC(v9, v10 + 8)) {
        goto LABEL_22;
      }
      if (!sub_1000BEE7C(v9, v10 + 9)) {
        goto LABEL_22;
      }
      if (!sub_1000BEE7C(v9, v10 + 10)) {
        goto LABEL_22;
      }
      int v16 = 0;
      uint64_t v11 = v10 + 16;
      if (!sub_1000BF078(v9, 2, (uint64_t *)v10 + 8, &v16)) {
        goto LABEL_22;
      }
      if (*v11)
      {
        if (v16 != v10[7]) {
          goto LABEL_22;
        }
        *((void *)v10 + 7) = *v11;
      }
      int v15 = 0;
      BOOL v12 = v10 + 20;
      if (!sub_1000BF078(v9, 4, (uint64_t *)v10 + 10, &v15)) {
        goto LABEL_22;
      }
      if (*v12)
      {
        if (v15 == *v10 + 2)
        {
          *((void *)v10 + 9) = *v12;
          goto LABEL_26;
        }
LABEL_22:
        if (v10[11])
        {
          uint64_t v13 = (uint64_t *)*((void *)v10 + 6);
          if (v13) {
            sub_1000A64C8(v13);
          }
        }
        sub_1000C321C(*((void *)v10 + 8));
        *((void *)v10 + 7) = 0;
        *((void *)v10 + 8) = 0;
        sub_1000C321C(*((void *)v10 + 10));
        *((void *)v10 + 9) = 0;
        *((void *)v10 + 10) = 0;
        sub_1000C321C((uint64_t)v10);
        int v10 = 0;
      }
    }
LABEL_26:
    sub_1000BED3C(v9);
    return v10;
  }
  return 0;
}

uint64_t sub_10007E2D4(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = *(int *)(a1 + 1100);
  uint64_t v12 = 8 * v11;
  uint64_t v13 = (float64x2_t *)sub_1000CD454(8 * v11, (uint64_t)a2, a3, a4, a5, a6, a7, a8);
  unsigned int v14 = *(int **)(a1 + 384);
  uint64_t v15 = sub_1000C2B84(a2, (uint64_t)v13, v14);
  if (v15)
  {
    uint64_t v16 = v11;
    __int32 v17 = *(int **)(a1 + 368);
    uint64_t v18 = *(void *)(a1 + 376);
    uint64_t v19 = *(void *)(a1 + 336);
    if (qword_100101CC0)
    {
      double v20 = *(double *)(qword_100101CC0 + 3816);
      if ((int)v16 < 1) {
        goto LABEL_16;
      }
    }
    else
    {
      double v20 = 0.0;
      if ((int)v16 < 1)
      {
LABEL_16:
        sub_1000C15D4(v17, (uint64_t)v13);
        sub_1000C1C88((uint64_t)v14, v18);
        sub_1000C1E84((uint64_t)v17, v18, v19);
        sub_1000C1E84((uint64_t)v14, v19, a3);
        goto LABEL_17;
      }
    }
    double v21 = v13->f64[0] * v20;
    if (v16 >= 4)
    {
      uint64_t v22 = v16 & 0x7FFFFFFC;
      float64x2_t v23 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v21, 0);
      uint64_t v24 = v13 + 1;
      __asm { FMOV            V2.2D, #1.0 }
      uint64_t v30 = v16 & 0xFFFFFFFC;
      do
      {
        int8x16_t v31 = vbicq_s8((int8x16_t)vdivq_f64(_Q2, *v24), (int8x16_t)vcgtq_f64(v23, *v24));
        v24[-1] = (float64x2_t)vbicq_s8((int8x16_t)vdivq_f64(_Q2, v24[-1]), (int8x16_t)vcgtq_f64(v23, v24[-1]));
        *uint64_t v24 = (float64x2_t)v31;
        v24 += 2;
        v30 -= 4;
      }
      while (v30);
      if (v22 == v16) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v22 = 0;
    }
    __int32 v32 = &v13->f64[v22];
    uint64_t v33 = v16 - v22;
    do
    {
      if (*v32 >= v21) {
        double v34 = 1.0 / *v32;
      }
      else {
        double v34 = 0.0;
      }
      *v32++ = v34;
      --v33;
    }
    while (v33);
    goto LABEL_16;
  }
LABEL_17:
  sub_1000CD4D0(v13, v12);
  return v15;
}

uint64_t sub_10007E450(uint64_t a1)
{
  if (*(void *)(a1 + 1432)) {
    return sub_10007E464((_DWORD *)a1);
  }
  else {
    return 1;
  }
}

uint64_t sub_10007E464(_DWORD *a1)
{
  uint64_t v1 = (uint64_t)a1;
  uint64_t v2 = (int)a1[64];
  uint64_t v3 = qword_100101CC0;
  if (qword_100101CC0)
  {
    if (*(_DWORD *)(qword_100101CC0 + 3888)) {
      a1[74] = 1;
    }
    unsigned int v4 = a1 + 275;
    uint64_t v5 = a1[275];
    BOOL v6 = a1 + 68;
    a1[68] = *(_DWORD *)(v3 + 3872);
    a1[69] = *(_DWORD *)(v3 + 3868);
    uint64_t v7 = 8 * v2;
    uint64_t v8 = sub_1000C33A0(8 * v2);
    *(void *)(v1 + 392) = v8;
    if (!v8) {
      goto LABEL_39;
    }
  }
  else
  {
    unsigned int v4 = a1 + 275;
    uint64_t v5 = a1[275];
    BOOL v6 = a1 + 68;
    a1[68] = 0;
    a1[69] = 0;
    uint64_t v7 = 8 * v2;
    uint64_t v9 = sub_1000C33A0(8 * v2);
    *(void *)(v1 + 392) = v9;
    if (!v9) {
      goto LABEL_39;
    }
  }
  uint64_t v10 = sub_1000C33A0(v7);
  *(void *)(v1 + 400) = v10;
  if (!v10) {
    goto LABEL_39;
  }
  uint64_t v11 = sub_1000C33A0(4 * v2);
  *(void *)(v1 + 360) = v11;
  if (!v11) {
    goto LABEL_39;
  }
  if (*(_DWORD *)(v1 + 276))
  {
    uint64_t v12 = sub_1000C33A0(v7);
    *(void *)(v1 + 416) = v12;
    if (!v12) {
      goto LABEL_39;
    }
    uint64_t v13 = sub_1000C33A0(v7);
    *(void *)(v1 + 424) = v13;
    if (!v13) {
      goto LABEL_39;
    }
  }
  if (*v6)
  {
    uint64_t v14 = sub_1000C34E8(4, v5, v5);
    *(void *)(v1 + 432) = v14;
    if (!v14) {
      goto LABEL_39;
    }
    uint64_t v15 = sub_1000C34E8(4, v5, v5);
    *(void *)(v1 + 440) = v15;
    if (!v15) {
      goto LABEL_39;
    }
  }
  if ((int)v2 >= 1)
  {
    uint64_t v16 = 0;
    do
    {
      *(void *)(*(void *)(v1 + 392) + v16) = sub_1000C13B8(v5, v5);
      *(void *)(*(void *)(v1 + 400) + v16) = sub_1000C33A0(8 * (int)v5);
      if (!*(void *)(*(void *)(v1 + 392) + v16)) {
        goto LABEL_39;
      }
      if (!*(void *)(*(void *)(v1 + 400) + v16)) {
        goto LABEL_39;
      }
      if (*(_DWORD *)(v1 + 276))
      {
        *(void *)(*(void *)(v1 + 416) + v16) = sub_1000C34E8(4, v5, v5);
        *(void *)(*(void *)(v1 + 424) + v16) = sub_1000C33A0(4 * (int)v5);
        if (!*(void *)(*(void *)(v1 + 416) + v16) || !*(void *)(*(void *)(v1 + 424) + v16)) {
          goto LABEL_39;
        }
      }
      v16 += 8;
    }
    while (8 * v2 != v16);
  }
  uint64_t v17 = sub_1000C13B8(v5, v5);
  *(void *)(v1 + 304) = v17;
  if (!v17) {
    goto LABEL_39;
  }
  uint64_t v18 = sub_1000C13B8(v5, v5);
  *(void *)(v1 + 312) = v18;
  if (!v18) {
    goto LABEL_39;
  }
  uint64_t v19 = sub_1000C13B8(v5, v5);
  *(void *)(v1 + 320) = v19;
  if (!v19) {
    goto LABEL_39;
  }
  uint64_t v20 = sub_1000C13B8(v5, v5);
  *(void *)(v1 + 336) = v20;
  if (!v20) {
    goto LABEL_39;
  }
  if (*(_DWORD *)(v1 + 260))
  {
    uint64_t v21 = sub_1000C13B8(v5, v5);
    *(void *)(v1 + 328) = v21;
    if (!v21) {
      goto LABEL_39;
    }
  }
  if (qword_100101CC0)
  {
    if (*(_DWORD *)(qword_100101CC0 + 3880))
    {
      uint64_t v22 = sub_1000C13B8(v5, v5);
      *(void *)(v1 + 368) = v22;
      if (!v22) {
        goto LABEL_39;
      }
      uint64_t v23 = sub_1000C13B8(v5, v5);
      *(void *)(v1 + 376) = v23;
      if (!v23) {
        goto LABEL_39;
      }
      uint64_t v24 = sub_1000C13B8(v5, v5);
      *(void *)(v1 + 384) = v24;
      if (!v24) {
        goto LABEL_39;
      }
    }
  }
  uint64_t v25 = 8 * (int)v5;
  uint64_t v26 = sub_1000C33A0(v25);
  *(void *)(v1 + 344) = v26;
  if (!v26 || (uint64_t v27 = sub_1000C33A0(v25), (*(void *)(v1 + 352) = v27) == 0))
  {
LABEL_39:
    sub_1000815A8(v1);
    return 0;
  }
  uint64_t v930 = v1;
  if ((int)v2 >= 1)
  {
    char v35 = 0;
    __asm
    {
      FMOV            V1.2D, #0.5
      FMOV            V0.2D, #-0.5
    }
    float64x2_t v874 = _Q0;
    float64x2_t v875 = _Q1;
    int v40 = 1;
    while (1)
    {
      uint64_t v43 = v35;
      uint64_t v44 = 8 * v35;
      v903 = *(int **)(*(void *)(v1 + 392) + v44);
      unint64_t v45 = *(void *)(*(void *)(v1 + 400) + v44);
      unint64_t v46 = *(void *)(v1 + 344);
      unint64_t v927 = *(void *)(v1 + 352);
      uint64_t v920 = v43;
      if (*(_DWORD *)(v1 + 296))
      {
        unint64_t v923 = *(void *)(v1 + 344);
        uint64_t v901 = *(void *)(*(void *)(v1 + 400) + v44);
        uint64_t v47 = *(int *)(v1 + 1100);
        int v48 = (int *)sub_1000C13B8(*(_DWORD *)(v1 + 1100), *(_DWORD *)(v1 + 1100));
        uint64_t v885 = 8 * v47;
        v915 = (float64x2_t *)sub_1000CD3E8(8 * v47, v49, v50, v51, v52, v53, v54, v55);
        if (qword_100101CC0)
        {
          BOOL v912 = *(void *)(qword_100101CC0 + 3752) == 3;
          double v56 = (double)*(int *)(qword_100101CC0 + 3800);
        }
        else
        {
          BOOL v912 = 0;
          double v56 = 0.0;
        }
        v936 = *(int **)(v1 + 312);
        v941 = *(int **)(v1 + 304);
        unsigned int v898 = *(_DWORD *)(v1 + 280);
        double v58 = sub_100081850(v1, v43, 0, 1);
        int v59 = *(_DWORD *)(v1 + 1100);
        if (!qword_100101CC0 || !*(_DWORD *)(qword_100101CC0 + 3864))
        {
LABEL_69:
          if (v59 >= (int)v58 || sub_100081850(v1, v43, 1, 1) < v56)
          {
LABEL_40:
            int v42 = 0;
            goto LABEL_41;
          }
          int v882 = v40;
          uint64_t v87 = v47;
          uint64_t v88 = v898;
          if (v898)
          {
            sub_1000C2F04(v885, v28, v29, v30, v31, v32, v33, v34);
            if (v912) {
              uint64_t v97 = v89;
            }
            else {
              uint64_t v97 = 0;
            }
            uint64_t v888 = v89;
            uint64_t v891 = v97;
            if (v912) {
              uint64_t v98 = 0;
            }
            else {
              uint64_t v98 = v89;
            }
            sub_1000C2F04(v885, v90, v91, v92, v93, v94, v95, v96);
            uint64_t v908 = v99;
            sub_1000C2F04(v885, v100, v101, v102, v103, v104, v105, v106);
            uint64_t v904 = v107;
            sub_1000C2F04(v885, v108, v109, v110, v111, v112, v113, v114);
            if ((int)v87 < 1) {
              goto LABEL_135;
            }
            uint64_t v879 = v98;
            uint64_t v895 = v115;
            uint64_t v116 = 0;
            if (v912)
            {
              uint64_t v117 = v115;
              do
              {
                *(void *)(v891 + v116) = sub_1000C13B8(v87, v87);
                *(void *)(v908 + v116) = sub_1000C13B8(v87, v87);
                sub_1000C2F04(v885, v118, v119, v120, v121, v122, v123, v124);
                *(void *)(v904 + v116) = v125;
                sub_1000C2F04(v885, v126, v127, v128, v129, v130, v131, v132);
                *(void *)(v117 + v116) = v133;
                v116 += 8;
              }
              while (8 * v87 != v116);
              uint64_t v134 = v888;
              uint64_t v888 = v98;
              uint64_t v1 = v930;
              uint64_t v88 = v898;
              uint64_t v135 = v908;
              uint64_t v136 = v904;
            }
            else
            {
              uint64_t v190 = v115;
              do
              {
                *(void *)(v879 + v116) = sub_1000C13B8(v87, v87);
                *(void *)(v908 + v116) = sub_1000C13B8(v87, v87);
                sub_1000C2F04(v885, v191, v192, v193, v194, v195, v196, v197);
                *(void *)(v904 + v116) = v198;
                sub_1000C2F04(v885, v199, v200, v201, v202, v203, v204, v205);
                *(void *)(v190 + v116) = v206;
                v116 += 8;
              }
              while (8 * v87 != v116);
              uint64_t v1 = v930;
              uint64_t v88 = v898;
              uint64_t v134 = v891;
              uint64_t v136 = v904;
              uint64_t v135 = v908;
            }
          }
          else
          {
            uint64_t v134 = 0;
            uint64_t v888 = 0;
            uint64_t v135 = 0;
            uint64_t v136 = 0;
            uint64_t v895 = 0;
          }
          if ((int)v87 >= 1)
          {
            uint64_t v905 = v136;
            uint64_t v910 = v135;
            uint64_t v892 = v134;
            uint64_t v207 = 0;
            while (1)
            {
              if (v88)
              {
                v936 = *(int **)(v910 + 8 * v207);
                unint64_t v923 = *(void *)(v905 + 8 * v207);
                unint64_t v927 = *(void *)(v895 + 8 * v207);
                sub_100081BD4(v1, v920, 1, 1, v88, v207, v923, v34);
                sub_1000828A8(v1, v920, 1, v88, v207, v927, v208, v209);
                if (v912) {
                  v941 = *(int **)(v892 + 8 * v207);
                }
                sub_1000834C0(v1, v927, v920, v207, v941, v210, v211, v212);
                sub_100083BC0(v1, v923, v927, v920, v207, v936, v213, v214);
                if (!v912)
                {
                  if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 3880)) {
                    sub_10007E2D4(v1, (unsigned int *)v941, *(void *)(v888 + 8 * v207), v215, v216, v217, v218, v219);
                  }
                  else {
                    sub_1000C1AAC(v941, *(int **)(v888 + 8 * v207));
                  }
                }
              }
              else
              {
                sub_100081BD4(v1, v920, 1, 1, 0, v207, v923, v34);
                sub_1000828A8(v1, v920, 1, 0, v207, v927, v220, v221);
                sub_100084070(v1, v923, v920, 1, v207, v941, v222, v223);
                sub_100083BC0(v1, v923, v927, v920, v207, v936, v224, v225);
              }
              uint64_t v226 = v1;
              int v227 = *(int **)(v1 + 320);
              uint64_t v228 = *(unsigned int *)(v226 + 1100);
              if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 3880))
              {
                uint64_t v229 = (uint64_t)v903;
                if (sub_10007E2D4(v930, (unsigned int *)v941, (uint64_t)v227, v215, v216, v217, v218, v219))goto LABEL_117; {
              }
                }
              else
              {
                uint64_t v229 = (uint64_t)v903;
                if (!sub_1000C1AAC(v941, v227))
                {
LABEL_117:
                  sub_1000C1E84((uint64_t)v936, (uint64_t)v227, (uint64_t)v48);
                  sub_1000C1E10(v48, v923, (uint64_t)v915);
                  if ((int)v228 >= 1)
                  {
                    if (v228 < 6
                      || (unint64_t)v915 < v927 + 8 * v228 && v927 < (unint64_t)&v915->f64[v228])
                    {
                      uint64_t v230 = 0;
                      goto LABEL_122;
                    }
                    uint64_t v230 = v228 & 0x7FFFFFFC;
                    v238 = (float64x2_t *)(v927 + 16);
                    uint64_t v239 = v228 & 0xFFFFFFFC;
                    v240 = v915 + 1;
                    do
                    {
                      float64x2_t v241 = vsubq_f64(*v238, *v240);
                      v240[-1] = vsubq_f64(v238[-1], v240[-1]);
                      float64x2_t *v240 = v241;
                      v238 += 2;
                      v240 += 2;
                      v239 -= 4;
                    }
                    while (v239);
                    if (v230 != v228)
                    {
LABEL_122:
                      uint64_t v231 = v228 - v230;
                      uint64_t v232 = 8 * v230;
                      int v233 = &v915->f64[v230];
                      v234 = (double *)(v927 + v232);
                      do
                      {
                        double v235 = *v234++;
                        *int v233 = v235 - *v233;
                        ++v233;
                        --v231;
                      }
                      while (v231);
                    }
                  }
                  int v42 = 1;
                  goto LABEL_127;
                }
              }
              int v42 = 0;
LABEL_127:
              int v236 = 0;
              *(float64_t *)(v901 + 8 * v207) = v915->f64[v207];
              do
              {
                double v237 = sub_1000C15B4((uint64_t)v48, v207, v236);
                sub_1000C15C4(v229, v207, v236++, v237);
              }
              while (v87 != v236);
              ++v207;
              uint64_t v1 = v930;
              uint64_t v88 = v898;
              if (v207 == v87) {
                goto LABEL_136;
              }
            }
          }
LABEL_135:
          int v42 = 0;
LABEL_136:
          sub_1000CD4D0(v915, v885);
          sub_1000C147C((uint64_t)v48);
          int v40 = v882;
          goto LABEL_41;
        }
        uint64_t v60 = *(unsigned int *)(v1 + 576);
        if ((int)v60 < 1)
        {
          int v64 = 0;
        }
        else
        {
          int32x4_t v61 = *(unsigned int **)(v1 + 600);
          unsigned int v62 = *v61;
          if (v60 >= 8)
          {
            uint64_t v63 = v60 & 0x7FFFFFF8;
            int8x16_t v72 = (int8x16_t)vdupq_n_s32(v62);
            int16x8_t v73 = (int32x4_t *)(v61 + 5);
            int32x4_t v74 = 0uLL;
            uint64_t v75 = v60 & 0xFFFFFFF8;
            int32x4_t v76 = 0uLL;
            do
            {
              int32x4_t v77 = v73[-1];
              int8x16_t v78 = vextq_s8(v72, (int8x16_t)v77, 0xCuLL);
              int32x4_t v79 = *v73;
              v73 += 2;
              int8x16_t v72 = (int8x16_t)v79;
              int32x4_t v80 = (int32x4_t)vmvnq_s8(vextq_s8((int8x16_t)v77, (int8x16_t)v79, 0xCuLL));
              int32x4_t v81 = vaddq_s32(v77, (int32x4_t)vmvnq_s8(v78));
              int32x4_t v82 = vaddq_s32(v79, v80);
              int32x4_t v74 = vmlaq_s32(v74, v81, v81);
              int32x4_t v76 = vmlaq_s32(v76, v82, v82);
              v75 -= 8;
            }
            while (v75);
            int v64 = vaddvq_s32(vaddq_s32(v76, v74));
            if (v63 == v60) {
              goto LABEL_68;
            }
            unsigned int v62 = v72.u32[3];
          }
          else
          {
            uint64_t v63 = 0;
            int v64 = 0;
          }
          uint64_t v83 = v60 - v63;
          unsigned int v84 = &v61[v63 + 1];
          do
          {
            int v85 = ~v62;
            unsigned int v86 = *v84++;
            unsigned int v62 = v86;
            v64 += (v86 + v85) * (v86 + v85);
            --v83;
          }
          while (v83);
        }
LABEL_68:
        int v59 = v64 / v59 + 1;
        goto LABEL_69;
      }
      double v57 = qword_100101CC0 ? (double)*(int *)(qword_100101CC0 + 3800) : 0.0;
      v937 = *(int **)(v1 + 312);
      v942 = *(int **)(v1 + 304);
      double v65 = sub_100081850(v1, v43, 0, 1);
      int v66 = *(_DWORD *)(v1 + 1100);
      if (qword_100101CC0)
      {
        if (*(_DWORD *)(qword_100101CC0 + 3864)) {
          break;
        }
      }
LABEL_92:
      if (v66 >= (int)v65 || sub_100081850(v1, v43, 1, 1) < v57) {
        goto LABEL_40;
      }
      unint64_t v902 = v45;
      sub_100081BD4(v1, v43, 1, 0, *(unsigned int *)(v1 + 280), 0xFFFFFFFFLL, v46, v34);
      sub_1000828A8(v1, v43, 0, *(unsigned int *)(v1 + 280), 0xFFFFFFFFLL, v927, v152, v153);
      int v883 = v40;
      unint64_t v924 = v46;
      if (*(_DWORD *)(v1 + 280))
      {
        sub_1000834C0(v1, v927, v43, 0xFFFFFFFFLL, v942, v158, v159, v160);
        uint64_t v163 = v1;
        uint64_t v164 = v46;
        uint64_t v165 = v927;
LABEL_96:
        sub_100083BC0(v163, v164, v165, v43, 0xFFFFFFFFLL, v937, v161, v162);
        goto LABEL_384;
      }
      if (!*(_DWORD *)(v1 + 272))
      {
        sub_100084070(v1, v46, v43, 1, 0xFFFFFFFFLL, v942, v159, v160);
        uint64_t v163 = v1;
        uint64_t v164 = v46;
        uint64_t v165 = v927;
        goto LABEL_96;
      }
      int v873 = *(_DWORD *)(v1 + 1404);
      uint64_t v909 = *(unsigned int *)(v1 + 1100);
      size_t v173 = 4 * (int)v909;
      v899 = (int32x4_t *)sub_1000CD454(v173, v154, v155, v156, v157, v158, v159, v160);
      __int16 v188 = (int32x4_t *)sub_1000CD454(v173, v174, v175, v176, v177, v178, v179, v180);
      if (qword_100101CC0) {
        signed int v189 = *(_DWORD *)(qword_100101CC0 + 3792);
      }
      else {
        signed int v189 = 0;
      }
      v945[0] = 0;
      uint64_t v876 = 4 * (int)v909;
      v906 = (int32x4_t *)sub_1000CD454(v173, v181, v182, v183, v184, v185, v186, v187);
      uint64_t v243 = *(void *)(v1 + 432);
      uint64_t v242 = *(void *)(v1 + 440);
      v877 = *(void **)(v1 + 1432);
      int v244 = v909;
      if ((int)v909 >= 1)
      {
        uint64_t v245 = 0;
        uint64_t v246 = 4 * v909;
        do
        {
          uint64_t v247 = 0;
          do
          {
            *(_DWORD *)(*(void *)(v243 + 8 * v245) + v247) = 0;
            v247 += 4;
          }
          while (v246 != v247);
          ++v245;
        }
        while (v245 != v909);
        for (uint64_t i = 0; i != v909; ++i)
        {
          uint64_t v249 = 0;
          do
          {
            *(_DWORD *)(*(void *)(v242 + 8 * i) + v249) = 0;
            v249 += 4;
          }
          while (v246 != v249);
        }
        double v250 = (double)v189;
        if (v909 >= 4
          && ((unint64_t)v906 >= v46 + 8 * v909 || v46 >= (unint64_t)v906 + 4 * v909))
        {
          uint64_t v251 = v909 & 0xFFFFFFFC;
          float64x2_t v536 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v250, 0);
          v537 = (float64x2_t *)(v46 + 16);
          v538 = &v906->i64[1];
          uint64_t v539 = v251;
          do
          {
            float64x2_t v540 = v537[-1];
            int8x16_t v541 = (int8x16_t)vcgtzq_f64(vmulq_n_f64(v540, v250));
            int8x16_t v542 = (int8x16_t)vmlaq_f64(v875, v540, v536);
            int8x16_t v543 = (int8x16_t)vmlaq_f64(v874, v540, v536);
            *(int32x2_t *)&v540.f64[0] = vmovn_s64(vcvtq_s64_f64((float64x2_t)vbslq_s8((int8x16_t)vcgtzq_f64(vmulq_n_f64(*v537, v250)), (int8x16_t)vmlaq_f64(v875, *v537, v536), (int8x16_t)vmlaq_f64(v874, *v537, v536))));
            *(v538 - 1) = (uint64_t)vmovn_s64(vcvtq_s64_f64((float64x2_t)vbslq_s8(v541, v542, v543)));
            uint64_t *v538 = *(void *)&v540.f64[0];
            v537 += 2;
            v538 += 2;
            v539 -= 4;
          }
          while (v539);
          if (v251 == v909) {
            goto LABEL_156;
          }
        }
        else
        {
          uint64_t v251 = 0;
        }
        uint64_t v252 = v909 - v251;
        v253 = &v906->i32[v251];
        v254 = (double *)(v46 + 8 * v251);
        do
        {
          double v255 = *v254++;
          double v256 = v250 * v255 + 0.5;
          double v257 = v250 * v255 + -0.5;
          if (v255 * v250 > 0.0) {
            double v257 = v256;
          }
          *v253++ = (int)v257;
          --v252;
        }
        while (v252);
      }
LABEL_156:
      int v258 = *(_DWORD *)(v1 + 1072);
      if (v258 >= 1)
      {
        int v259 = 0;
        unsigned __int16 v260 = 0;
        uint64_t v261 = 4 * v909;
        v262 = (int32x4_t *)((char *)v899 + v261);
        v263 = (int32x4_t *)((char *)v188 + v261);
        v264 = &v906->i8[v261];
        BOOL v266 = v899 < v263 && v188 < v262;
        BOOL v889 = v266;
        unint64_t v896 = (unint64_t)v262;
        BOOL v268 = v899 < (int32x4_t *)v264 && v906 < v262;
        BOOL v886 = v268;
        unint64_t v893 = (unint64_t)v263;
        BOOL v270 = v188 < (int32x4_t *)v264 && v906 < v263;
        BOOL v880 = v270;
        int32x4_t v878 = vdupq_n_s32(v189);
        while (2)
        {
          if (*(_DWORD *)(v1 + 268)) {
            _ZF = v260 == 0;
          }
          else {
            _ZF = 1;
          }
          uint64_t v271 = v260;
          if (_ZF) {
            uint64_t v273 = v260;
          }
          else {
            uint64_t v273 = 1;
          }
          if (*(unsigned __int8 *)(*(void *)(v1 + 496) + v273) != v920) {
            goto LABEL_177;
          }
          uint64_t v931 = *(void *)(*v877 + 8 * v260);
          uint64_t v913 = v260;
          if (*(_DWORD *)(*(void *)(v1 + 1432) + 28))
          {
            int v274 = sub_1000041DC(v1);
            uint64_t v271 = v913;
            if (v913 == v274)
            {
              int v258 = *(_DWORD *)(v1 + 1072);
              int v244 = v909;
              goto LABEL_188;
            }
            int v278 = 1;
            int v244 = v909;
          }
          else
          {
LABEL_188:
            if (v258 <= v259)
            {
              int v278 = 1;
            }
            else
            {
              if (*(_DWORD *)(v1 + 1176))
              {
                v275 = (int *)(*(void *)(v1 + 1160) + 4 * v271);
                int v277 = *v275;
                int v276 = v275[1];
              }
              else
              {
                v279 = (unsigned __int16 *)(*(void *)(v1 + 1144) + 2 * v271);
                int v277 = *v279;
                int v276 = v279[1];
              }
              int v278 = v276 - v277;
            }
          }
          if (v931) {
            BOOL v280 = v278 == 0;
          }
          else {
            BOOL v280 = 1;
          }
          if (!v280)
          {
            if (v278 >= 1)
            {
              uint64_t v916 = v278;
              if (v244 > 0)
              {
                uint64_t v281 = 0;
                while (1)
                {
                  uint64_t v282 = *(void *)(v931 + 8);
                  unsigned int v283 = *(__int16 *)(v282 + 2 * v281);
                  if (*(_WORD *)(v282 + 2 * v281)) {
                    break;
                  }
LABEL_202:
                  if (++v281 == v916) {
                    goto LABEL_176;
                  }
                }
                sub_1000043BC(v930, v913, v281, v945);
                unint64_t v285 = v945[0];
                if (v909 < 8)
                {
                  uint64_t v286 = 0;
                  v287 = v899;
                  goto LABEL_229;
                }
                v287 = v899;
                BOOL v288 = (unint64_t)v899 >= v945[0] + v909 || v945[0] >= v896;
                int v289 = v889;
                if (!v288) {
                  int v289 = 1;
                }
                int v290 = v289 | v886;
                if ((unint64_t)v188 >= v945[0] + v909 || v945[0] >= v893) {
                  int v292 = v290;
                }
                else {
                  int v292 = 1;
                }
                if ((v292 | v880))
                {
                  uint64_t v286 = 0;
                  goto LABEL_229;
                }
                int32x4_t v293 = vdupq_n_s32(v283);
                if (v909 >= 0x10)
                {
                  uint64_t v305 = v909 & 0xFFFFFFF0;
                  v306 = v188;
                  v307 = v899;
                  v308 = v906;
                  v309 = (int8x16_t *)v945[0];
                  do
                  {
                    int8x16_t v310 = *v309++;
                    int32x4_t v311 = vmlaq_s32(vnegq_s32(v308[3]), v878, (int32x4_t)vqtbl1q_s8(v310, (int8x16_t)xmmword_1000F47E0));
                    int32x4_t v312 = vmlaq_s32(vnegq_s32(*v308), v878, (int32x4_t)vqtbl1q_s8(v310, (int8x16_t)xmmword_1000F4810));
                    int32x4_t v313 = vmlaq_s32(vnegq_s32(v308[1]), v878, (int32x4_t)vqtbl1q_s8(v310, (int8x16_t)xmmword_1000F4800));
                    int32x4_t v314 = vmlaq_s32(vnegq_s32(v308[2]), v878, (int32x4_t)vqtbl1q_s8(v310, (int8x16_t)xmmword_1000F47F0));
                    int32x4_t *v307 = v312;
                    v307[1] = v313;
                    v307[2] = v314;
                    v307[3] = v311;
                    int8x16_t v284 = (int8x16_t)vmulq_s32(v311, v293);
                    int32x4_t *v306 = vmulq_s32(v312, v293);
                    v306[1] = vmulq_s32(v313, v293);
                    v306[2] = vmulq_s32(v314, v293);
                    v306[3] = (int32x4_t)v284;
                    v308 += 4;
                    v307 += 4;
                    v306 += 4;
                    v305 -= 16;
                  }
                  while (v305);
                  if ((v909 & 0xFFFFFFF0) != v909)
                  {
                    uint64_t v286 = v909 & 0xFFFFFFF0;
                    uint64_t v294 = v286;
                    if ((v909 & 8) == 0) {
                      goto LABEL_229;
                    }
                    goto LABEL_221;
                  }
                }
                else
                {
                  uint64_t v294 = 0;
LABEL_221:
                  v295 = (uint64_t *)(v285 + v294);
                  v296 = (int32x4_t *)((char *)v906 + 4 * v294);
                  v297 = (int32x4_t *)((char *)v899 + 4 * v294);
                  v298 = (int32x4_t *)((char *)v188 + 4 * v294);
                  uint64_t v299 = v294 - (v909 & 0xFFFFFFF8);
                  do
                  {
                    uint64_t v300 = *v295++;
                    v284.i64[0] = v300;
                    int32x4_t v302 = *v296;
                    int32x4_t v301 = v296[1];
                    v296 += 2;
                    int32x4_t v303 = vmlaq_s32(vnegq_s32(v302), v878, (int32x4_t)vqtbl1q_s8(v284, (int8x16_t)xmmword_1000F4810));
                    int32x4_t v304 = vmlaq_s32(vnegq_s32(v301), v878, (int32x4_t)vqtbl1q_s8(v284, (int8x16_t)xmmword_1000F4800));
                    int32x4_t *v297 = v303;
                    v297[1] = v304;
                    v297 += 2;
                    int8x16_t v284 = (int8x16_t)vmulq_s32(v303, v293);
                    int32x4_t *v298 = (int32x4_t)v284;
                    v298[1] = vmulq_s32(v304, v293);
                    v298 += 2;
                    v299 += 8;
                  }
                  while (v299);
                  uint64_t v286 = v909 & 0xFFFFFFF8;
                  if (v286 != v909)
                  {
LABEL_229:
                    uint64_t v315 = v909 - v286;
                    v316 = &v188->i32[v286];
                    v317 = &v287->i32[v286];
                    v318 = &v906->i32[v286];
                    v319 = (unsigned __int8 *)(v285 + v286);
                    do
                    {
                      int v321 = *v319++;
                      int v320 = v321;
                      int v322 = *v318++;
                      int v323 = v189 * v320 - v322;
                      *v317++ = v323;
                      *v316++ = v323 * v283;
                      --v315;
                    }
                    while (v315);
                  }
                }
                uint64_t v324 = 0;
                int v325 = 1;
                while (2)
                {
                  v326 = *(_DWORD **)(v242 + 8 * v324);
                  v327 = *(int **)(v243 + 8 * v324);
                  int v328 = v325;
                  v329 = v287;
LABEL_242:
                  int v335 = *v327;
                  int v336 = v329->i32[0] * v188->i32[v324];
                  if (v336 > 0x3FFFFFFF)
                  {
                    int v337 = v336 - 0x3FFFFFFF;
                    BOOL v338 = v336 == 0x7FFFFFFF;
                    if (v336 == 0x7FFFFFFF) {
                      int v339 = 2;
                    }
                    else {
                      int v339 = 1;
                    }
                    int v340 = *v326 + v339;
                    if (v338) {
                      int v336 = 1;
                    }
                    else {
                      int v336 = v337;
                    }
                    goto LABEL_256;
                  }
                  if (v336 < -1073741822)
                  {
                    if (v336 <= -2147483645) {
                      int v341 = -2147483645;
                    }
                    else {
                      int v341 = v329->i32[0] * v188->i32[v324];
                    }
                    unsigned int v342 = (v341 - v336 - (v336 < 0x80000003)) / 0x3FFFFFFF;
                    if (v336 < 0x80000003) {
                      ++v342;
                    }
                    int v336 = v336 - v342 + (v342 << 30) + 0x3FFFFFFF;
                    int v340 = *v326 + ~v342;
LABEL_256:
                    _DWORD *v326 = v340;
                  }
                  int v334 = v336 + v335;
                  if (v334 <= 0x3FFFFFFF)
                  {
                    if (v334 < -1073741822)
                    {
                      if (v334 <= -2147483645) {
                        int v343 = -2147483645;
                      }
                      else {
                        int v343 = v334;
                      }
                      unsigned int v344 = (v343 - v334 - (v334 < 0x80000003)) / 0x3FFFFFFF;
                      if (v334 < 0x80000003) {
                        ++v344;
                      }
                      int v334 = v334 - v344 + (v344 << 30) + 0x3FFFFFFF;
                      int v333 = *v326 + ~v344;
LABEL_240:
                      _DWORD *v326 = v333;
                    }
                    *v327++ = v334;
                    ++v326;
                    v329 = (int32x4_t *)((char *)v329 + 4);
                    _VF = __OFSUB__(v328--, 1);
                    if ((v328 < 0) ^ _VF | (v328 == 0))
                    {
                      ++v324;
                      ++v325;
                      if (v324 == v909) {
                        goto LABEL_202;
                      }
                      continue;
                    }
                    goto LABEL_242;
                  }
                  break;
                }
                int v330 = v334 - 0x3FFFFFFF;
                BOOL v331 = v334 == 0x7FFFFFFF;
                if (v334 == 0x7FFFFFFF) {
                  int v332 = 2;
                }
                else {
                  int v332 = 1;
                }
                int v333 = *v326 + v332;
                if (v331) {
                  int v334 = 1;
                }
                else {
                  int v334 = v330;
                }
                goto LABEL_240;
              }
              for (uint64_t j = 0; j != v916; ++j)
              {
                if (*(_WORD *)(*(void *)(v931 + 8) + 2 * j)) {
                  sub_1000043BC(v930, v913, j, v945);
                }
              }
            }
LABEL_176:
            sub_1000D2974();
            int v244 = v909;
            uint64_t v1 = v930;
            LOWORD(v271) = v913;
          }
LABEL_177:
          unsigned __int16 v260 = v271 + 1;
          int v259 = (unsigned __int16)(v271 + 1);
          int v258 = *(_DWORD *)(v1 + 1072);
          if (v258 <= v259) {
            break;
          }
          continue;
        }
      }
      if (v244 >= 1)
      {
        unint64_t v346 = 0;
        double v347 = 1.0 / (double)(v189 * v873 * v189);
        uint64_t v348 = 1;
        do
        {
          unint64_t v349 = 0;
          do
          {
            int v350 = *(_DWORD *)(*(void *)(v242 + 8 * v346) + 4 * v349);
            double v351 = (double)v350 * 1073741820.0;
            if (!v350) {
              double v351 = -0.0;
            }
            double v352 = v347 * (v351 + (double)*(int *)(*(void *)(v243 + 8 * v346) + 4 * v349));
            sub_1000C15C4((uint64_t)v942, v346, v349, v352);
            if (v349 < v346) {
              sub_1000C15C4((uint64_t)v942, v349, v346, v352);
            }
            ++v349;
          }
          while (v348 != v349);
          ++v346;
          ++v348;
        }
        while (v346 != v909);
      }
      sub_1000CD4D0(v906, v876);
      sub_1000CD4D0(v188, v876);
      sub_1000CD4D0(v899, v876);
      int v881 = *(_DWORD *)(v930 + 1404);
      uint64_t v932 = *(unsigned int *)(v930 + 1100);
      size_t v353 = 4 * (int)v932;
      v894 = sub_1000CD454(v353, v354, v355, v356, v357, v358, v359, v360);
      v368 = sub_1000CD454(v353, v361, v362, v363, v364, v365, v366, v367);
      v900 = (int32x2_t *)sub_1000CD454(v353, v369, v370, v371, v372, v373, v374, v375);
      uint64_t v887 = v353;
      v897 = (int32x2_t *)sub_1000CD454(v353, v376, v377, v378, v379, v380, v381, v382);
      uint64_t v384 = *(void *)(v930 + 432);
      uint64_t v383 = *(void *)(v930 + 440);
      if (qword_100101CC0) {
        int v385 = *(_DWORD *)(qword_100101CC0 + 3792);
      }
      else {
        int v385 = 0;
      }
      v945[0] = 0;
      v890 = *(void **)(v930 + 1432);
      int v386 = v932;
      if ((int)v932 >= 1)
      {
        uint64_t v387 = 0;
        uint64_t v388 = 4 * v932;
        do
        {
          uint64_t v389 = 0;
          do
          {
            *(_DWORD *)(*(void *)(v384 + 8 * v387) + v389) = 0;
            v389 += 4;
          }
          while (v388 != v389);
          ++v387;
        }
        while (v387 != v932);
        for (uint64_t k = 0; k != v932; ++k)
        {
          uint64_t v391 = 0;
          do
          {
            *(_DWORD *)(*(void *)(v383 + 8 * k) + v391) = 0;
            v391 += 4;
          }
          while (v388 != v391);
        }
        double v392 = (double)v385;
        if (v932 >= 0xA)
        {
          uint64_t v393 = 0;
          v506 = (int32x2_t *)((char *)v900 + 4 * v932);
          v507 = (int32x2_t *)((char *)v897 + 4 * v932);
          unint64_t v508 = v924 + 8 * v932;
          unint64_t v509 = v927 + 8 * v932;
          BOOL v511 = (unint64_t)v900 < v508 && v924 < (unint64_t)v506;
          BOOL v513 = (unint64_t)v900 < v509 && v927 < (unint64_t)v506;
          BOOL v515 = (unint64_t)v897 < v508 && v924 < (unint64_t)v507;
          BOOL v517 = (unint64_t)v897 < v509 && v927 < (unint64_t)v507;
          if ((v897 >= v506 || v900 >= v507) && !v511 && !v513 && !v515 && !v517)
          {
            uint64_t v393 = v932 & 0xFFFFFFFE;
            uint64_t v519 = v393;
            float64x2_t v520 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v392, 0);
            v521 = v897;
            v522 = v900;
            v523 = (float64x2_t *)v927;
            v524 = (float64x2_t *)v924;
            do
            {
              float64x2_t v525 = *v524++;
              *v522++ = vmovn_s64(vcvtq_s64_f64((float64x2_t)vbslq_s8((int8x16_t)vcgtzq_f64(vmulq_n_f64(v525, v392)), (int8x16_t)vmlaq_f64(v875, v525, v520), (int8x16_t)vmlaq_f64(v874, v525, v520))));
              float64x2_t v526 = *v523++;
              *v521++ = vmovn_s64(vcvtq_s64_f64((float64x2_t)vbslq_s8((int8x16_t)vcgtzq_f64(vmulq_n_f64(v526, v392)), (int8x16_t)vmlaq_f64(v875, v526, v520), (int8x16_t)vmlaq_f64(v874, v526, v520))));
              v519 -= 2;
            }
            while (v519);
            if (v393 == v932) {
              goto LABEL_299;
            }
          }
        }
        else
        {
          uint64_t v393 = 0;
        }
        uint64_t v394 = v932 - v393;
        uint64_t v395 = 4 * v393;
        v396 = (_DWORD *)v897 + v393;
        uint64_t v397 = 8 * v393;
        v398 = (double *)(v927 + 8 * v393);
        v399 = (int32x2_t *)((char *)v900 + v395);
        v400 = (double *)(v924 + v397);
        do
        {
          double v401 = *v400++;
          double v402 = v392 * v401 + 0.5;
          double v403 = v392 * v401 + -0.5;
          if (v401 * v392 <= 0.0) {
            double v404 = v403;
          }
          else {
            double v404 = v402;
          }
          v399->i32[0] = (int)v404;
          v399 = (int32x2_t *)((char *)v399 + 4);
          double v405 = *v398++;
          double v406 = v392 * v405 + 0.5;
          double v407 = v392 * v405 + -0.5;
          if (v405 * v392 > 0.0) {
            double v407 = v406;
          }
          *v396++ = (int)v407;
          --v394;
        }
        while (v394);
      }
LABEL_299:
      uint64_t v408 = v930;
      int v409 = *(_DWORD *)(v930 + 1072);
      if (v409 < 1) {
        goto LABEL_373;
      }
      int v410 = 0;
      unsigned __int16 v411 = 0;
      while (2)
      {
        if (*(_DWORD *)(v408 + 268)) {
          BOOL v413 = v411 == 0;
        }
        else {
          BOOL v413 = 1;
        }
        uint64_t v412 = v411;
        if (v413) {
          uint64_t v414 = v411;
        }
        else {
          uint64_t v414 = 1;
        }
        if (*(unsigned __int8 *)(*(void *)(v408 + 496) + v414) != v920) {
          goto LABEL_302;
        }
        uint64_t v415 = *(void *)(*v890 + 8 * v411);
        uint64_t v911 = v415;
        uint64_t v914 = v411;
        if (!*(_DWORD *)(*(void *)(v408 + 1432) + 28)) {
          goto LABEL_313;
        }
        int v917 = v410;
        int v416 = sub_1000041DC(v408);
        uint64_t v412 = v914;
        if (v914 == v416)
        {
          int v409 = *(_DWORD *)(v408 + 1072);
          int v386 = v932;
          uint64_t v415 = v911;
          int v410 = v917;
LABEL_313:
          if (v409 <= v410)
          {
            int v420 = 1;
          }
          else
          {
            if (*(_DWORD *)(v930 + 1176))
            {
              v417 = (int *)(*(void *)(v930 + 1160) + 4 * v412);
              int v419 = *v417;
              int v418 = v417[1];
            }
            else
            {
              v421 = (unsigned __int16 *)(*(void *)(v930 + 1144) + 2 * v412);
              int v419 = *v421;
              int v418 = v421[1];
            }
            int v420 = v418 - v419;
          }
          goto LABEL_320;
        }
        int v420 = 1;
        int v386 = v932;
        uint64_t v415 = v911;
LABEL_320:
        if (v415) {
          BOOL v422 = v420 == 0;
        }
        else {
          BOOL v422 = 1;
        }
        uint64_t v408 = v930;
        if (v422) {
          goto LABEL_302;
        }
        if (v420 < 1) {
          goto LABEL_301;
        }
        uint64_t v918 = v420;
        if (v386 <= 0)
        {
          for (uint64_t m = 0; m != v918; ++m)
          {
            if (*(_WORD *)(*(void *)(v415 + 8) + 2 * m))
            {
              sub_1000043BC(v930, v914, m, v945);
              uint64_t v415 = v911;
            }
          }
          goto LABEL_301;
        }
        uint64_t v423 = 0;
        while (2)
        {
          uint64_t v424 = *(void *)(v415 + 8);
          int v425 = *(__int16 *)(v424 + 2 * v423);
          if (!*(_WORD *)(v424 + 2 * v423)) {
            goto LABEL_327;
          }
          uint64_t v907 = v423;
          sub_1000043BC(v930, v914, v423, v945);
          uint64_t v423 = v907;
          uint64_t v415 = v911;
          v426 = *(__int16 **)(*(void *)(v911 + 24) + 8 * v907);
          v428 = v897;
          v427 = v900;
          v429 = (unsigned __int8 *)v945[0];
          v430 = v894;
          v431 = v368;
          uint64_t v432 = v932;
          do
          {
            __int32 v435 = v427->i32[0];
            v427 = (int32x2_t *)((char *)v427 + 4);
            _DWORD *v430 = v385 * *v429 - v435;
            int v436 = *v426++;
            int v433 = v436;
            if (!qword_100101CC0 || !*(_DWORD *)(qword_100101CC0 + 3740)) {
              v433 += *v429 * v425;
            }
            __int32 v434 = v428->i32[0];
            v428 = (int32x2_t *)((char *)v428 + 4);
            *v431++ = v433 * v385 - v434 * v425;
            ++v430;
            ++v429;
            --v432;
          }
          while (v432);
          uint64_t v437 = 0;
          while (2)
          {
            v438 = *(int **)(v384 + 8 * v437);
            v439 = *(_DWORD **)(v383 + 8 * v437);
            int v440 = v932 + 1;
            v441 = v894;
            do
            {
              int v447 = *v438;
              int v448 = *v441 * *((_DWORD *)v368 + v437);
              if (v448 <= 0x3FFFFFFF)
              {
                if (v448 >= -1073741822) {
                  goto LABEL_361;
                }
                if (v448 <= -2147483645) {
                  int v453 = -2147483645;
                }
                else {
                  int v453 = *v441 * *((_DWORD *)v368 + v437);
                }
                unsigned int v454 = (v453 - v448 - (v448 < 0x80000003)) / 0x3FFFFFFF;
                if (v448 < 0x80000003) {
                  ++v454;
                }
                int v448 = v448 - v454 + (v454 << 30) + 0x3FFFFFFF;
                int v452 = *v439 + ~v454;
              }
              else
              {
                int v449 = v448 - 0x3FFFFFFF;
                BOOL v450 = v448 == 0x7FFFFFFF;
                if (v448 == 0x7FFFFFFF) {
                  int v451 = 2;
                }
                else {
                  int v451 = 1;
                }
                int v452 = *v439 + v451;
                if (v450) {
                  int v448 = 1;
                }
                else {
                  int v448 = v449;
                }
              }
              _DWORD *v439 = v452;
LABEL_361:
              int v446 = v448 + v447;
              if (v446 > 0x3FFFFFFF)
              {
                int v442 = v446 - 0x3FFFFFFF;
                BOOL v443 = v446 == 0x7FFFFFFF;
                if (v446 == 0x7FFFFFFF) {
                  int v444 = 2;
                }
                else {
                  int v444 = 1;
                }
                int v445 = *v439 + v444;
                if (v443) {
                  int v446 = 1;
                }
                else {
                  int v446 = v442;
                }
LABEL_344:
                _DWORD *v439 = v445;
                goto LABEL_345;
              }
              if (v446 < -1073741822)
              {
                if (v446 <= -2147483645) {
                  int v455 = -2147483645;
                }
                else {
                  int v455 = v446;
                }
                unsigned int v456 = (v455 - v446 - (v446 < 0x80000003)) / 0x3FFFFFFF;
                if (v446 < 0x80000003) {
                  ++v456;
                }
                int v446 = v446 - v456 + (v456 << 30) + 0x3FFFFFFF;
                int v445 = *v439 + ~v456;
                goto LABEL_344;
              }
LABEL_345:
              *v438++ = v446;
              ++v439;
              ++v441;
              --v440;
            }
            while (v440 > 1);
            if (++v437 != v932) {
              continue;
            }
            break;
          }
LABEL_327:
          if (++v423 != v918) {
            continue;
          }
          break;
        }
LABEL_301:
        sub_1000D2974();
        uint64_t v408 = v930;
        int v386 = v932;
        LOWORD(v412) = v914;
LABEL_302:
        unsigned __int16 v411 = v412 + 1;
        int v410 = (unsigned __int16)(v412 + 1);
        int v409 = *(_DWORD *)(v408 + 1072);
        if (v409 > v410) {
          continue;
        }
        break;
      }
LABEL_373:
      if (v386 >= 1)
      {
        uint64_t v458 = 0;
        do
        {
          uint64_t v459 = 0;
          do
          {
            while (1)
            {
              int v461 = *(_DWORD *)(*(void *)(v383 + 8 * v458) + 4 * v459);
              double v462 = (double)v461 * 1073741820.0;
              if (!v461) {
                double v462 = -0.0;
              }
              double v463 = 1.0
                   / (double)(v385 * v881 * v385)
                   * (v462 + (double)*(int *)(*(void *)(v384 + 8 * v458) + 4 * v459));
              if (*(_DWORD *)(v930 + 280)) {
                break;
              }
              sub_1000C15C4((uint64_t)v937, v458, v459++, v463);
              uint64_t v460 = v932;
              if (v932 == v459) {
                goto LABEL_375;
              }
            }
            sub_1000C15C4((uint64_t)v937, v459++, v458, v463);
            uint64_t v460 = v932;
          }
          while (v932 != v459);
LABEL_375:
          ++v458;
        }
        while (v458 != v460);
      }
      sub_1000CD4D0(v897, v887);
      sub_1000CD4D0(v900, v887);
      sub_1000CD4D0(v368, v887);
      sub_1000CD4D0(v894, v887);
      uint64_t v1 = v930;
      uint64_t v43 = v920;
LABEL_384:
      unint64_t v464 = v902;
      if (!*(_DWORD *)(v1 + 260)) {
        goto LABEL_415;
      }
      uint64_t v465 = *(void *)(v1 + 328);
      if (*(_DWORD *)(v1 + 264))
      {
        sub_1000C14C8(*(int **)(v1 + 328), 1.0);
        double v466 = (double)*(int *)(v1 + 248) / (double)*(int *)(v1 + 252);
        goto LABEL_414;
      }
      v933 = *(int **)(v1 + 328);
      uint64_t v467 = *(int *)(v1 + 1100);
      int v468 = *(_DWORD *)(v1 + 1072);
      if (v468 < 1)
      {
        double v482 = -1.0;
        goto LABEL_413;
      }
      uint64_t v919 = *(int *)(v1 + 1100);
      int v469 = 0;
      int v470 = 0;
      unsigned __int16 v471 = 0;
      uint64_t v472 = v1;
      int v473 = 1;
      while (2)
      {
        if (*(_DWORD *)(v472 + 268)) {
          BOOL v475 = v471 == 0;
        }
        else {
          BOOL v475 = 1;
        }
        uint64_t v476 = v471;
        if (v475) {
          uint64_t v477 = v471;
        }
        else {
          uint64_t v477 = 1;
        }
        if (*(unsigned __int8 *)(*(void *)(v472 + 496) + v477) == v920)
        {
          if (!*(_DWORD *)(*(void *)(v472 + 1432) + 28)) {
            goto LABEL_402;
          }
          if (v471 != sub_1000041DC(v472)) {
            goto LABEL_389;
          }
          int v468 = *(_DWORD *)(v930 + 1072);
LABEL_402:
          if (v468 <= v469)
          {
LABEL_389:
            int v474 = 1;
            goto LABEL_390;
          }
          if (*(_DWORD *)(v930 + 1176))
          {
            v478 = (int *)(*(void *)(v930 + 1160) + 4 * v476);
            int v480 = *v478;
            int v479 = v478[1];
          }
          else
          {
            v481 = (unsigned __int16 *)(*(void *)(v930 + 1144) + 2 * v476);
            int v480 = *v481;
            int v479 = v481[1];
          }
          int v474 = v479 - v480;
          if (v474)
          {
            if (v474 < 1)
            {
              int v473 = 0;
              goto LABEL_391;
            }
LABEL_390:
            int v473 = 0;
            v470 += v474;
          }
        }
LABEL_391:
        unsigned __int16 v471 = v476 + 1;
        int v469 = (unsigned __int16)(v476 + 1);
        uint64_t v472 = v930;
        int v468 = *(_DWORD *)(v930 + 1072);
        if (v468 > v469) {
          continue;
        }
        break;
      }
      double v482 = (double)v470;
      if (v473) {
        double v482 = -1.0;
      }
      uint64_t v1 = v930;
      uint64_t v467 = v919;
      uint64_t v43 = v920;
LABEL_413:
      double v466 = (double)*(int *)(v1 + 248) / (v482 * (double)*(int *)(v1 + 252));
      uint64_t v483 = 8 * v467;
      v484 = sub_1000CD454(8 * v467, v166, v167, v168, v169, v170, v171, v172);
      sub_100081BD4(v1, v43, 0, 0, 0, 0xFFFFFFFFLL, (unint64_t)v484, v485);
      uint64_t v465 = (uint64_t)v933;
      sub_100084070(v1, (unint64_t)v484, v43, 0, 0xFFFFFFFFLL, v933, v486, v487);
      sub_1000CD4D0(v484, v483);
      unint64_t v464 = v902;
LABEL_414:
      sub_1000C1D8C((uint64_t)v942, v465, (uint64_t)v942, v466);
      sub_1000C1D8C((uint64_t)v937, v465, (uint64_t)v937, v466);
LABEL_415:
      if (qword_100101CC0)
      {
        int v488 = *v4;
        if (*(_DWORD *)(qword_100101CC0 + 3864))
        {
          int v489 = *(_DWORD *)(v1 + 576);
          if (v488 >= 1 && v489 >= 1)
          {
            uint64_t v490 = 0;
            do
            {
              uint64_t v491 = *(void *)(v930 + 600);
              int v492 = *(_DWORD *)(v491 + 4 * v490++);
              int v493 = *(_DWORD *)(v491 + 4 * v490);
              int v494 = v492;
              if (v492 < v493)
              {
                do
                {
                  for (int n = 0; n != v488; ++n)
                  {
                    if (n < v492 || n >= v493) {
                      sub_1000C15C4((uint64_t)v942, v494, n, 0.0);
                    }
                  }
                  ++v494;
                }
                while (v494 != v493);
                int v489 = *(_DWORD *)(v930 + 576);
              }
            }
            while (v490 < v489);
            int v488 = *v4;
            uint64_t v1 = v930;
            unint64_t v464 = v902;
          }
          if (v489 >= 1 && v488 >= 1)
          {
            uint64_t v497 = 0;
            do
            {
              uint64_t v498 = *(void *)(v930 + 600);
              int v499 = *(_DWORD *)(v498 + 4 * v497++);
              int v500 = *(_DWORD *)(v498 + 4 * v497);
              int v501 = v499;
              if (v499 < v500)
              {
                do
                {
                  for (iuint64_t i = 0; ii != v488; ++ii)
                  {
                    if (ii < v499 || ii >= v500) {
                      sub_1000C15C4((uint64_t)v937, v501, ii, 0.0);
                    }
                  }
                  ++v501;
                }
                while (v501 != v500);
                int v489 = *(_DWORD *)(v930 + 576);
              }
            }
            while (v497 < v489);
            int v488 = *v4;
            uint64_t v1 = v930;
            unint64_t v464 = v902;
          }
        }
        v496 = *(int **)(v1 + 320);
        if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 3880))
        {
          if (sub_10007E2D4(v1, (unsigned int *)v942, *(void *)(v1 + 320), v168, v169, v170, v171, v172))goto LABEL_451; {
LABEL_455:
          }
          int v42 = 0;
          int v40 = v883;
          goto LABEL_41;
        }
      }
      else
      {
        v496 = *(int **)(v1 + 320);
        int v488 = *(_DWORD *)(v1 + 1100);
      }
      if (sub_1000C1AAC(v942, v496)) {
        goto LABEL_455;
      }
LABEL_451:
      sub_1000C1E84((uint64_t)v937, (uint64_t)v496, (uint64_t)v903);
      sub_1000C1E10(v903, v924, v464);
      if (v488 < 1)
      {
        int v42 = 1;
        int v40 = v883;
        goto LABEL_41;
      }
      uint64_t v503 = v488;
      if (v488 >= 6)
      {
        unint64_t v505 = v927 + 8 * v488;
        int v40 = v883;
        if (v464 >= v505 || v927 >= v464 + 8 * v503)
        {
          uint64_t v504 = v503 & 0x7FFFFFFC;
          v527 = (float64x2_t *)(v927 + 16);
          v528 = (float64x2_t *)(v464 + 16);
          uint64_t v529 = v503 & 0xFFFFFFFC;
          do
          {
            float64x2_t v530 = vsubq_f64(*v527, *v528);
            v528[-1] = vsubq_f64(v527[-1], v528[-1]);
            float64x2_t *v528 = v530;
            v527 += 2;
            v528 += 2;
            v529 -= 4;
          }
          while (v529);
          if (v504 == v503)
          {
            int v42 = 1;
            goto LABEL_41;
          }
        }
        else
        {
          uint64_t v504 = 0;
        }
      }
      else
      {
        uint64_t v504 = 0;
        int v40 = v883;
      }
      uint64_t v531 = v503 - v504;
      uint64_t v532 = 8 * v504;
      v533 = (double *)(v464 + 8 * v504);
      v534 = (double *)(v927 + v532);
      do
      {
        double v535 = *v534++;
        double *v533 = v535 - *v533;
        ++v533;
        int v42 = 1;
        --v531;
      }
      while (v531);
LABEL_41:
      *(_DWORD *)(*(void *)(v1 + 360) + 4 * v920) = v42;
      if (!*(_DWORD *)(*(void *)(v1 + 360) + 4 * v920)) {
        int v40 = 0;
      }
      char v35 = v920 + 1;
      if ((int)v2 <= (char)(v920 + 1)) {
        goto LABEL_509;
      }
    }
    uint64_t v67 = *(unsigned int *)(v1 + 576);
    if ((int)v67 < 1)
    {
      int v71 = 0;
    }
    else
    {
      int32x4_t v68 = *(unsigned int **)(v1 + 600);
      unsigned int v69 = *v68;
      if (v67 >= 8)
      {
        uint64_t v70 = v67 & 0x7FFFFFF8;
        int8x16_t v137 = (int8x16_t)vdupq_n_s32(v69);
        int32x4_t v138 = (int32x4_t *)(v68 + 5);
        int32x4_t v139 = 0uLL;
        uint64_t v140 = v67 & 0xFFFFFFF8;
        int32x4_t v141 = 0uLL;
        do
        {
          int32x4_t v142 = v138[-1];
          int8x16_t v143 = vextq_s8(v137, (int8x16_t)v142, 0xCuLL);
          int32x4_t v144 = *v138;
          v138 += 2;
          int8x16_t v137 = (int8x16_t)v144;
          int32x4_t v145 = (int32x4_t)vmvnq_s8(vextq_s8((int8x16_t)v142, (int8x16_t)v144, 0xCuLL));
          int32x4_t v146 = vaddq_s32(v142, (int32x4_t)vmvnq_s8(v143));
          int32x4_t v147 = vaddq_s32(v144, v145);
          int32x4_t v139 = vmlaq_s32(v139, v146, v146);
          int32x4_t v141 = vmlaq_s32(v141, v147, v147);
          v140 -= 8;
        }
        while (v140);
        int v71 = vaddvq_s32(vaddq_s32(v141, v139));
        if (v70 == v67) {
          goto LABEL_91;
        }
        unsigned int v69 = v137.u32[3];
      }
      else
      {
        uint64_t v70 = 0;
        int v71 = 0;
      }
      uint64_t v148 = v67 - v70;
      int v149 = &v68[v70 + 1];
      do
      {
        int v150 = ~v69;
        unsigned int v151 = *v149++;
        unsigned int v69 = v151;
        v71 += (v151 + v150) * (v151 + v150);
        --v148;
      }
      while (v148);
    }
LABEL_91:
    int v66 = v71 / v66 + 1;
    goto LABEL_92;
  }
  LOBYTE(v40) = 1;
LABEL_509:
  uint64_t v544 = *(void *)(v1 + 392);
  uint64_t v545 = *(void *)(v1 + 400);
  if (*(_DWORD *)(v1 + 276))
  {
    uint64_t v546 = *(void *)(v1 + 416);
    uint64_t v938 = *(unsigned int *)(v1 + 256);
    uint64_t v943 = *(void *)(v1 + 424);
    uint64_t v547 = v1;
    if ((int)v938 < 1) {
      goto LABEL_575;
    }
    uint64_t v548 = *(unsigned int *)(v1 + 1100);
    if ((int)v548 < 1) {
      goto LABEL_575;
    }
    uint64_t v549 = 0;
    int v550 = 0;
    do
    {
      if (*(_DWORD *)(*(void *)(v930 + 360) + 4 * v549))
      {
        for (juint64_t j = 0; jj != v548; ++jj)
        {
          for (kuint64_t k = 0; kk != v548; ++kk)
          {
            double v554 = sub_1000C15B4(*(void *)(v544 + 8 * v549), jj, kk) * 1048576.0 + 0.5;
            if (v554 > 1073741820.0)
            {
              int v550 = 1;
              double v554 = 1073741820.0;
            }
            else if (v554 < -1073741820.0)
            {
              int v550 = 1;
              double v554 = -1073741820.0;
            }
            *(_DWORD *)(*(void *)(*(void *)(v546 + 8 * v549) + 8 * jj) + 4 * kk) = (int)v554;
          }
          double v552 = *(double *)(*(void *)(v545 + 8 * v549) + 8 * jj) * 1048576.0 + 0.5;
          if (v552 > 1073741820.0)
          {
            int v550 = 1;
            double v552 = 1073741820.0;
          }
          else if (v552 < -1073741820.0)
          {
            int v550 = 1;
            double v552 = -1073741820.0;
          }
          *(_DWORD *)(*(void *)(v943 + 8 * v549) + 4 * jj) = (int)v552;
        }
      }
      ++v549;
    }
    while (v549 != v938);
    uint64_t v547 = v930;
    if (!v550)
    {
LABEL_575:
      if (*(int *)(v547 + 1072) >= 1)
      {
        int v621 = 0;
        unsigned __int16 v622 = 0;
        do
        {
          if (*(_DWORD *)(v547 + 268)) {
            BOOL v623 = v622 == 0;
          }
          else {
            BOOL v623 = 1;
          }
          uint64_t v624 = v622;
          if (v623) {
            uint64_t v625 = v622;
          }
          else {
            uint64_t v625 = 1;
          }
          uint64_t v626 = *(char *)(*(void *)(v547 + 496) + v625);
          uint64_t v627 = v547;
          if (v626 == -2) {
            goto LABEL_578;
          }
          if ((~v626 & 0xFFFFFFFD) != 0)
          {
            if (*(_DWORD *)(*(void *)(v547 + 360) + 4 * v626))
            {
              uint64_t v628 = 8 * v626;
              v629 = *(void **)(v546 + v628);
              v926 = *(_DWORD **)(v943 + v628);
              v945[0] = 0;
              int v630 = *(_DWORD *)(*(void *)(v547 + 1432) + 24);
              uint64_t v631 = *(int *)(v547 + 1100);
              v632 = (int32x4_t *)sub_1000CD3E8(4 * v631, v28, v29, v30, v31, v32, v33, v34);
              v940 = (void *)sub_1000CD3E8(v631, v633, v634, v635, v636, v637, v638, v639);
              uint64_t v929 = v624;
              if (*(_DWORD *)(v627 + 1072) > v621)
              {
                if (*(_DWORD *)(v627 + 1176))
                {
                  v640 = (int *)(*(void *)(v627 + 1160) + 4 * v624);
                  int v642 = *v640;
                  int v641 = v640[1];
                }
                else
                {
                  v644 = (unsigned __int16 *)(*(void *)(v627 + 1144) + 2 * v624);
                  int v642 = *v644;
                  int v641 = v644[1];
                }
                int v643 = v641 - v642;
                uint64_t v627 = v930;
                if (v643 >= 1)
                {
LABEL_594:
                  int v935 = v643;
                  if ((int)v631 >= 1)
                  {
                    uint64_t v645 = v631 & 0xFFFFFFE0;
                    uint64_t v646 = v631 & 0xFFFFFFF8;
                    v922 = v629;
                    if (v630)
                    {
                      uint64_t v647 = 0;
                      uint64_t v627 = v930;
                      while (1)
                      {
                        uint64_t v676 = v647;
                        sub_1000043BC(v627, v624, v647, v945);
                        v678 = (unsigned __int8 *)v945[0];
                        if (v631 >= 8) {
                          break;
                        }
                        uint64_t v679 = 0;
                        int v680 = 0;
                        int v681 = v631 + 1;
                        do
                        {
                          v680 += *(_DWORD *)(*v629 + 4 * v679) * *(unsigned __int8 *)(v945[0] + v679);
                          ++v679;
                          --v681;
                        }
                        while (v681 > 1);
                        int v682 = *v926 + v680;
                        if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 3740)) {
                          v682 += *(unsigned __int8 *)v945[0] << 20;
                        }
                        if (v682 <= -524288) {
                          int v682 = -524288;
                        }
                        v632->i32[0] = (v682 + 0x80000) >> 20;
                        if (v631 != 1)
                        {
                          int v683 = 0;
                          v684 = (int *)v629[1];
                          int v685 = v631 + 1;
                          v686 = v678;
                          do
                          {
                            int v688 = *v684++;
                            int v687 = v688;
                            int v689 = *v686++;
                            v683 += v687 * v689;
                            --v685;
                          }
                          while (v685 > 1);
                          int v690 = v926[1] + v683;
                          if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 3740)) {
                            v690 += v678[1] << 20;
                          }
                          if (v690 <= -524288) {
                            int v690 = -524288;
                          }
                          v632->i32[1] = (v690 + 0x80000) >> 20;
                          if (v631 != 2)
                          {
                            int v691 = 0;
                            v692 = (int *)v629[2];
                            int v693 = v631 + 1;
                            v694 = v678;
                            do
                            {
                              int v696 = *v692++;
                              int v695 = v696;
                              int v697 = *v694++;
                              v691 += v695 * v697;
                              --v693;
                            }
                            while (v693 > 1);
                            int v698 = v926[2] + v691;
                            if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 3740)) {
                              v698 += v678[2] << 20;
                            }
                            if (v698 <= -524288) {
                              int v698 = -524288;
                            }
                            v632->i32[2] = (v698 + 0x80000) >> 20;
                            if (v631 != 3)
                            {
                              int v699 = 0;
                              v700 = (int *)v629[3];
                              int v701 = v631 + 1;
                              v702 = v678;
                              do
                              {
                                int v704 = *v700++;
                                int v703 = v704;
                                int v705 = *v702++;
                                v699 += v703 * v705;
                                --v701;
                              }
                              while (v701 > 1);
                              int v706 = v926[3] + v699;
                              if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 3740)) {
                                v706 += v678[3] << 20;
                              }
                              if (v706 <= -524288) {
                                int v706 = -524288;
                              }
                              v632->i32[3] = (v706 + 0x80000) >> 20;
                              if (v631 != 4)
                              {
                                int v707 = 0;
                                v708 = (int *)v629[4];
                                int v709 = v631 + 1;
                                v710 = v678;
                                do
                                {
                                  int v712 = *v708++;
                                  int v711 = v712;
                                  int v713 = *v710++;
                                  v707 += v711 * v713;
                                  --v709;
                                }
                                while (v709 > 1);
                                int v714 = v926[4] + v707;
                                if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 3740)) {
                                  v714 += v678[4] << 20;
                                }
                                if (v714 <= -524288) {
                                  int v714 = -524288;
                                }
                                v632[1].i32[0] = (v714 + 0x80000) >> 20;
                                if (v631 != 5)
                                {
                                  int v715 = 0;
                                  v716 = (int *)v629[5];
                                  int v717 = v631 + 1;
                                  v718 = v678;
                                  do
                                  {
                                    int v720 = *v716++;
                                    int v719 = v720;
                                    int v721 = *v718++;
                                    v715 += v719 * v721;
                                    --v717;
                                  }
                                  while (v717 > 1);
                                  int v722 = v926[5] + v715;
                                  if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 3740)) {
                                    v722 += v678[5] << 20;
                                  }
                                  if (v722 <= -524288) {
                                    int v722 = -524288;
                                  }
                                  v632[1].i32[1] = (v722 + 0x80000) >> 20;
                                  if (v631 != 6)
                                  {
                                    int v723 = 0;
                                    v724 = (int *)v629[6];
                                    int v725 = v631 + 1;
                                    v726 = v678;
                                    do
                                    {
                                      int v728 = *v724++;
                                      int v727 = v728;
                                      int v729 = *v726++;
                                      v723 += v727 * v729;
                                      --v725;
                                    }
                                    while (v725 > 1);
                                    int v730 = v926[6] + v723;
                                    if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 3740)) {
                                      v730 += v678[6] << 20;
                                    }
                                    if (v730 <= -524288) {
                                      int v665 = -524288;
                                    }
                                    else {
                                      int v665 = v730;
                                    }
                                    v632[1].i32[2] = (v665 + 0x80000) >> 20;
                                  }
                                }
                              }
                            }
                          }
                        }
LABEL_609:
                        uint64_t v627 = v930;
                        sub_1000067B4(v930, v632, (unint64_t)v940);
                        LODWORD(v624) = v929;
                        sub_10000D24C((void *)v930, (unint64_t)v940, v929, v676, v666, v667, v668, v669);
                        v629 = v922;
                        sub_10000D7C8(v930, v929, v676, (uint64_t)v940, v670, v671, v672, v673, v674, v675);
                        uint64_t v647 = (v676 + 1);
                        if (v647 == v935) {
                          goto LABEL_604;
                        }
                      }
                      uint64_t v731 = 0;
                      while (2)
                      {
                        v733 = (int32x4_t *)v629[v731];
                        if (v631 >= 0x20)
                        {
                          int32x4_t v736 = 0uLL;
                          v737 = v733 + 4;
                          int32x4_t v738 = 0uLL;
                          uint64_t v739 = v631 & 0xFFFFFFE0;
                          v740 = (int8x16_t *)(v678 + 16);
                          int32x4_t v741 = 0uLL;
                          int32x4_t v742 = 0uLL;
                          int32x4_t v677 = 0uLL;
                          int32x4_t v743 = 0uLL;
                          int32x4_t v744 = 0uLL;
                          int32x4_t v745 = 0uLL;
                          do
                          {
                            int32x4_t v747 = v737[-2];
                            int32x4_t v746 = v737[-1];
                            int32x4_t v749 = v737[-4];
                            int32x4_t v748 = v737[-3];
                            int32x4_t v751 = v737[2];
                            int32x4_t v750 = v737[3];
                            int32x4_t v753 = *v737;
                            int32x4_t v752 = v737[1];
                            v737 += 8;
                            int8x16_t v754 = v740[-1];
                            int32x4_t v742 = vmlaq_s32(v742, v746, (int32x4_t)vqtbl1q_s8(v754, (int8x16_t)xmmword_1000F47E0));
                            int32x4_t v741 = vmlaq_s32(v741, v747, (int32x4_t)vqtbl1q_s8(v754, (int8x16_t)xmmword_1000F47F0));
                            int32x4_t v738 = vmlaq_s32(v738, v748, (int32x4_t)vqtbl1q_s8(v754, (int8x16_t)xmmword_1000F4800));
                            int32x4_t v736 = vmlaq_s32(v736, v749, (int32x4_t)vqtbl1q_s8(v754, (int8x16_t)xmmword_1000F4810));
                            int32x4_t v745 = vmlaq_s32(v745, v750, (int32x4_t)vqtbl1q_s8(*v740, (int8x16_t)xmmword_1000F47E0));
                            int32x4_t v744 = vmlaq_s32(v744, v751, (int32x4_t)vqtbl1q_s8(*v740, (int8x16_t)xmmword_1000F47F0));
                            int32x4_t v743 = vmlaq_s32(v743, v752, (int32x4_t)vqtbl1q_s8(*v740, (int8x16_t)xmmword_1000F4800));
                            int32x4_t v677 = vmlaq_s32(v677, v753, (int32x4_t)vqtbl1q_s8(*v740, (int8x16_t)xmmword_1000F4810));
                            v740 += 2;
                            v739 -= 32;
                          }
                          while (v739);
                          unsigned int v734 = vaddvq_s32(vaddq_s32(vaddq_s32(vaddq_s32(v677, v736), vaddq_s32(v744, v741)), vaddq_s32(vaddq_s32(v743, v738), vaddq_s32(v745, v742))));
                          if (v645 != v631)
                          {
                            uint64_t v735 = v631 & 0x7FFFFFE0;
                            uint64_t v755 = v631 & 0xFFFFFFE0;
                            if ((v631 & 0x18) != 0) {
                              goto LABEL_674;
                            }
                            goto LABEL_677;
                          }
                        }
                        else
                        {
                          unsigned int v734 = 0;
                          uint64_t v735 = 0;
LABEL_674:
                          int32x4_t v756 = 0uLL;
                          int32x4_t v757 = (int32x4_t)v734;
                          v758 = &v678[v735];
                          v759 = (int32x4_t *)((char *)v733 + 4 * v735);
                          uint64_t v760 = v735 - (v631 & 0xFFFFFFF8);
                          do
                          {
                            int32x4_t v762 = *v759;
                            int32x4_t v761 = v759[1];
                            v759 += 2;
                            uint64_t v763 = *(void *)v758;
                            v758 += 8;
                            v677.i64[0] = v763;
                            int32x4_t v764 = (int32x4_t)vqtbl1q_s8((int8x16_t)v677, (int8x16_t)xmmword_1000F4800);
                            int32x4_t v677 = (int32x4_t)vqtbl1q_s8((int8x16_t)v677, (int8x16_t)xmmword_1000F4810);
                            int32x4_t v756 = vmlaq_s32(v756, v761, v764);
                            int32x4_t v757 = vmlaq_s32(v757, v762, v677);
                            v760 += 8;
                          }
                          while (v760);
                          unsigned int v734 = vaddvq_s32(vaddq_s32(v757, v756));
                          uint64_t v755 = v631 & 0xFFFFFFF8;
                          if (v646 != v631)
                          {
LABEL_677:
                            v765 = &v678[v755];
                            v766 = &v733->i32[v755];
                            int v767 = v631 + 1 - v755;
                            do
                            {
                              int v769 = *v766++;
                              int v768 = v769;
                              int v770 = *v765++;
                              v734 += v768 * v770;
                              --v767;
                            }
                            while (v767 > 1);
                          }
                        }
                        int v732 = v926[v731] + v734;
                        if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 3740)) {
                          v732 += v678[v731] << 20;
                        }
                        if (v732 <= -524288) {
                          int v732 = -524288;
                        }
                        v632->i32[v731++] = (v732 + 0x80000) >> 20;
                        if (v731 == v631) {
                          goto LABEL_609;
                        }
                        continue;
                      }
                    }
                    uint64_t v627 = v930;
                    while (1)
                    {
                      sub_1000043BC(v627, v624, v630, v945);
                      v779 = (unsigned __int8 *)v945[0];
                      if (v631 >= 8) {
                        break;
                      }
                      uint64_t v780 = 0;
                      int v781 = 0;
                      int v782 = v631 + 1;
                      do
                      {
                        v781 += *(_DWORD *)(*v629 + 4 * v780) * *(unsigned __int8 *)(v945[0] + v780);
                        ++v780;
                        --v782;
                      }
                      while (v782 > 1);
                      int v783 = *v926 + v781;
                      if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 3740)) {
                        v783 += *(unsigned __int8 *)v945[0] << 20;
                      }
                      if (v783 <= -524288) {
                        int v783 = -524288;
                      }
                      v632->i32[0] = (v783 + 0x80000) >> 20;
                      if (v631 != 1)
                      {
                        int v784 = 0;
                        v785 = (int *)v629[1];
                        int v786 = v631 + 1;
                        v787 = v779;
                        do
                        {
                          int v789 = *v785++;
                          int v788 = v789;
                          int v790 = *v787++;
                          v784 += v788 * v790;
                          --v786;
                        }
                        while (v786 > 1);
                        int v791 = v926[1] + v784;
                        if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 3740)) {
                          v791 += v779[1] << 20;
                        }
                        if (v791 <= -524288) {
                          int v791 = -524288;
                        }
                        v632->i32[1] = (v791 + 0x80000) >> 20;
                        if (v631 != 2)
                        {
                          int v792 = 0;
                          v793 = (int *)v629[2];
                          int v794 = v631 + 1;
                          v795 = v779;
                          do
                          {
                            int v797 = *v793++;
                            int v796 = v797;
                            int v798 = *v795++;
                            v792 += v796 * v798;
                            --v794;
                          }
                          while (v794 > 1);
                          int v799 = v926[2] + v792;
                          if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 3740)) {
                            v799 += v779[2] << 20;
                          }
                          if (v799 <= -524288) {
                            int v799 = -524288;
                          }
                          v632->i32[2] = (v799 + 0x80000) >> 20;
                          if (v631 != 3)
                          {
                            int v800 = 0;
                            v801 = (int *)v629[3];
                            int v802 = v631 + 1;
                            v803 = v779;
                            do
                            {
                              int v805 = *v801++;
                              int v804 = v805;
                              int v806 = *v803++;
                              v800 += v804 * v806;
                              --v802;
                            }
                            while (v802 > 1);
                            int v807 = v926[3] + v800;
                            if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 3740)) {
                              v807 += v779[3] << 20;
                            }
                            if (v807 <= -524288) {
                              int v807 = -524288;
                            }
                            v632->i32[3] = (v807 + 0x80000) >> 20;
                            if (v631 != 4)
                            {
                              int v808 = 0;
                              v809 = (int *)v629[4];
                              int v810 = v631 + 1;
                              v811 = v779;
                              do
                              {
                                int v813 = *v809++;
                                int v812 = v813;
                                int v814 = *v811++;
                                v808 += v812 * v814;
                                --v810;
                              }
                              while (v810 > 1);
                              int v815 = v926[4] + v808;
                              if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 3740)) {
                                v815 += v779[4] << 20;
                              }
                              if (v815 <= -524288) {
                                int v815 = -524288;
                              }
                              v632[1].i32[0] = (v815 + 0x80000) >> 20;
                              if (v631 != 5)
                              {
                                int v816 = 0;
                                v817 = (int *)v629[5];
                                int v818 = v631 + 1;
                                v819 = v779;
                                do
                                {
                                  int v821 = *v817++;
                                  int v820 = v821;
                                  int v822 = *v819++;
                                  v816 += v820 * v822;
                                  --v818;
                                }
                                while (v818 > 1);
                                int v823 = v926[5] + v816;
                                if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 3740)) {
                                  v823 += v779[5] << 20;
                                }
                                if (v823 <= -524288) {
                                  int v823 = -524288;
                                }
                                v632[1].i32[1] = (v823 + 0x80000) >> 20;
                                if (v631 != 6)
                                {
                                  int v824 = 0;
                                  v825 = (int *)v629[6];
                                  int v826 = v631 + 1;
                                  v827 = v779;
                                  do
                                  {
                                    int v829 = *v825++;
                                    int v828 = v829;
                                    int v830 = *v827++;
                                    v824 += v828 * v830;
                                    --v826;
                                  }
                                  while (v826 > 1);
                                  int v831 = v926[6] + v824;
                                  if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 3740)) {
                                    v831 += v779[6] << 20;
                                  }
                                  if (v831 <= -524288) {
                                    int v771 = -524288;
                                  }
                                  else {
                                    int v771 = v831;
                                  }
                                  v632[1].i32[2] = (v771 + 0x80000) >> 20;
                                }
                              }
                            }
                          }
                        }
                      }
LABEL_686:
                      uint64_t v627 = v930;
                      sub_1000067B4(v930, v632, (unint64_t)v940);
                      LODWORD(v624) = v929;
                      v629 = v922;
                      sub_10000D7C8(v930, v929, v630++, (uint64_t)v940, v772, v773, v774, v775, v776, v777);
                      if (v630 == v935) {
                        goto LABEL_604;
                      }
                    }
                    uint64_t v832 = 0;
                    while (2)
                    {
                      v834 = (int32x4_t *)v629[v832];
                      if (v631 >= 0x20)
                      {
                        int32x4_t v837 = 0uLL;
                        v838 = v834 + 4;
                        int32x4_t v839 = 0uLL;
                        uint64_t v840 = v631 & 0xFFFFFFE0;
                        v841 = (int8x16_t *)(v779 + 16);
                        int32x4_t v842 = 0uLL;
                        int32x4_t v843 = 0uLL;
                        int32x4_t v778 = 0uLL;
                        int32x4_t v844 = 0uLL;
                        int32x4_t v845 = 0uLL;
                        int32x4_t v846 = 0uLL;
                        do
                        {
                          int32x4_t v848 = v838[-2];
                          int32x4_t v847 = v838[-1];
                          int32x4_t v850 = v838[-4];
                          int32x4_t v849 = v838[-3];
                          int32x4_t v852 = v838[2];
                          int32x4_t v851 = v838[3];
                          int32x4_t v854 = *v838;
                          int32x4_t v853 = v838[1];
                          v838 += 8;
                          int8x16_t v855 = v841[-1];
                          int32x4_t v843 = vmlaq_s32(v843, v847, (int32x4_t)vqtbl1q_s8(v855, (int8x16_t)xmmword_1000F47E0));
                          int32x4_t v842 = vmlaq_s32(v842, v848, (int32x4_t)vqtbl1q_s8(v855, (int8x16_t)xmmword_1000F47F0));
                          int32x4_t v839 = vmlaq_s32(v839, v849, (int32x4_t)vqtbl1q_s8(v855, (int8x16_t)xmmword_1000F4800));
                          int32x4_t v837 = vmlaq_s32(v837, v850, (int32x4_t)vqtbl1q_s8(v855, (int8x16_t)xmmword_1000F4810));
                          int32x4_t v846 = vmlaq_s32(v846, v851, (int32x4_t)vqtbl1q_s8(*v841, (int8x16_t)xmmword_1000F47E0));
                          int32x4_t v845 = vmlaq_s32(v845, v852, (int32x4_t)vqtbl1q_s8(*v841, (int8x16_t)xmmword_1000F47F0));
                          int32x4_t v844 = vmlaq_s32(v844, v853, (int32x4_t)vqtbl1q_s8(*v841, (int8x16_t)xmmword_1000F4800));
                          int32x4_t v778 = vmlaq_s32(v778, v854, (int32x4_t)vqtbl1q_s8(*v841, (int8x16_t)xmmword_1000F4810));
                          v841 += 2;
                          v840 -= 32;
                        }
                        while (v840);
                        unsigned int v835 = vaddvq_s32(vaddq_s32(vaddq_s32(vaddq_s32(v778, v837), vaddq_s32(v845, v842)), vaddq_s32(vaddq_s32(v844, v839), vaddq_s32(v846, v843))));
                        if (v645 != v631)
                        {
                          uint64_t v836 = v631 & 0x7FFFFFE0;
                          uint64_t v856 = v631 & 0xFFFFFFE0;
                          if ((v631 & 0x18) != 0) {
                            goto LABEL_751;
                          }
                          goto LABEL_754;
                        }
                      }
                      else
                      {
                        unsigned int v835 = 0;
                        uint64_t v836 = 0;
LABEL_751:
                        int32x4_t v857 = 0uLL;
                        int32x4_t v858 = (int32x4_t)v835;
                        v859 = &v779[v836];
                        v860 = (int32x4_t *)((char *)v834 + 4 * v836);
                        uint64_t v861 = v836 - (v631 & 0xFFFFFFF8);
                        do
                        {
                          int32x4_t v863 = *v860;
                          int32x4_t v862 = v860[1];
                          v860 += 2;
                          uint64_t v864 = *(void *)v859;
                          v859 += 8;
                          v778.i64[0] = v864;
                          int32x4_t v865 = (int32x4_t)vqtbl1q_s8((int8x16_t)v778, (int8x16_t)xmmword_1000F4800);
                          int32x4_t v778 = (int32x4_t)vqtbl1q_s8((int8x16_t)v778, (int8x16_t)xmmword_1000F4810);
                          int32x4_t v857 = vmlaq_s32(v857, v862, v865);
                          int32x4_t v858 = vmlaq_s32(v858, v863, v778);
                          v861 += 8;
                        }
                        while (v861);
                        unsigned int v835 = vaddvq_s32(vaddq_s32(v858, v857));
                        uint64_t v856 = v631 & 0xFFFFFFF8;
                        if (v646 != v631)
                        {
LABEL_754:
                          v866 = &v779[v856];
                          v867 = &v834->i32[v856];
                          int v868 = v631 + 1 - v856;
                          do
                          {
                            int v870 = *v867++;
                            int v869 = v870;
                            int v871 = *v866++;
                            v835 += v869 * v871;
                            --v868;
                          }
                          while (v868 > 1);
                        }
                      }
                      int v833 = v926[v832] + v835;
                      if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 3740)) {
                        v833 += v779[v832] << 20;
                      }
                      if (v833 <= -524288) {
                        int v833 = -524288;
                      }
                      v632->i32[v832++] = (v833 + 0x80000) >> 20;
                      if (v832 == v631) {
                        goto LABEL_686;
                      }
                      continue;
                    }
                  }
                  uint64_t v648 = 0;
                  if (v630)
                  {
                    uint64_t v627 = v930;
                    do
                    {
                      sub_1000043BC(v930, v624, v648, v945);
                      sub_1000067B4(v930, v632, (unint64_t)v940);
                      sub_10000D24C((void *)v930, (unint64_t)v940, v624, v648, v649, v650, v651, v652);
                      sub_10000D7C8(v930, v624, v648, (uint64_t)v940, v653, v654, v655, v656, v657, v658);
                      uint64_t v648 = (v648 + 1);
                    }
                    while (v935 != v648);
                  }
                  else
                  {
                    uint64_t v627 = v930;
                    do
                    {
                      sub_1000043BC(v930, v624, v648, v945);
                      sub_1000067B4(v930, v632, (unint64_t)v940);
                      sub_10000D7C8(v930, v624, v648, (uint64_t)v940, v659, v660, v661, v662, v663, v664);
                      LODWORD(v648) = v648 + 1;
                    }
                    while (v935 != v648);
                  }
                }
LABEL_604:
                sub_1000CD4D0(v940, v631);
                sub_1000CD4D0(v632, 4 * v631);
                goto LABEL_578;
              }
              int v643 = 1;
              goto LABEL_594;
            }
          }
          else
          {
            sub_10000A738((void *)v547, v624, v29, v30, v31, v32, v33, v34);
          }
LABEL_578:
          unsigned __int16 v622 = v624 + 1;
          int v621 = (unsigned __int16)(v624 + 1);
          uint64_t v547 = v627;
        }
        while (*(_DWORD *)(v627 + 1072) > v621);
      }
    }
    *(unsigned char *)(v547 + 292) = 0;
    uint64_t v1 = v547;
LABEL_760:
    uint64_t v620 = qword_100101CC0;
    if (qword_100101CC0) {
      goto LABEL_761;
    }
    goto LABEL_764;
  }
  if (*(int *)(v1 + 1072) >= 1)
  {
    int v555 = 0;
    unsigned __int16 v556 = 0;
    char v884 = v40;
    do
    {
      if (*(_DWORD *)(v1 + 268)) {
        BOOL v557 = v556 == 0;
      }
      else {
        BOOL v557 = 1;
      }
      uint64_t v558 = v556;
      if (v557) {
        uint64_t v559 = v556;
      }
      else {
        uint64_t v559 = 1;
      }
      uint64_t v560 = *(char *)(*(void *)(v1 + 496) + v559);
      if (v560 == -2) {
        goto LABEL_530;
      }
      if ((~v560 & 0xFFFFFFFD) != 0)
      {
        if (*(_DWORD *)(*(void *)(v1 + 360) + 4 * v560))
        {
          uint64_t v561 = 8 * v560;
          uint64_t v562 = *(void *)(v545 + v561);
          v944 = *(int **)(v544 + v561);
          v945[0] = 0;
          uint64_t v563 = *(void *)(v1 + 1432);
          if (v563) {
            int v928 = *(_DWORD *)(v563 + 24);
          }
          else {
            int v928 = 0;
          }
          if (v944)
          {
            uint64_t v564 = *(int *)(v1 + 1100);
            v565 = (void *)sub_1000CD3E8(8 * v564, v28, v29, v30, v31, v32, v33, v34);
            v573 = (float64x2_t *)sub_1000CD3E8(8 * v564, v566, v567, v568, v569, v570, v571, v572);
            uint64_t v925 = v564;
            v939 = (void *)sub_1000CD3E8(v564, v574, v575, v576, v577, v578, v579, v580);
            uint64_t v921 = 8 * v564;
            if (*(_DWORD *)(v1 + 1072) <= v555)
            {
              int v584 = 1;
LABEL_550:
              int v934 = v584;
              if ((int)v564 < 1)
              {
                if (v928)
                {
                  uint64_t v602 = 0;
                  uint64_t v1 = v930;
                  do
                  {
                    sub_1000043BC(v930, v558, v602, v945);
                    sub_1000C1E10(v944, (uint64_t)v565, (uint64_t)v573);
                    sub_1000065FC(v930, v573, (unint64_t)v939);
                    sub_10000D24C((void *)v930, (unint64_t)v939, v558, v602, v603, v604, v605, v606);
                    sub_10000D7C8(v930, v558, v602, (uint64_t)v939, v607, v608, v609, v610, v611, v612);
                    uint64_t v602 = (v602 + 1);
                  }
                  while (v934 != v602);
                }
                else
                {
                  int v613 = 0;
                  uint64_t v1 = v930;
                  do
                  {
                    sub_1000043BC(v930, v558, v613, v945);
                    sub_1000C1E10(v944, (uint64_t)v565, (uint64_t)v573);
                    sub_1000065FC(v930, v573, (unint64_t)v939);
                    sub_10000D7C8(v930, v558, v613++, (uint64_t)v939, v614, v615, v616, v617, v618, v619);
                  }
                  while (v934 != v613);
                }
              }
              else
              {
                uint64_t v586 = 0;
                uint64_t v1 = v930;
                do
                {
                  sub_1000043BC(v1, v558, v586, v945);
                  uint64_t v588 = 0;
                  do
                  {
                    LOBYTE(v587) = *(unsigned char *)(v945[0] + v588);
                    double v587 = (double)*(unint64_t *)&v587;
                    *(double *)&v565[v588++] = v587;
                  }
                  while (v925 != v588);
                  sub_1000C1E10(v944, (uint64_t)v565, (uint64_t)v573);
                  uint64_t v589 = 0;
                  do
                  {
                    double v590 = v573->f64[v589];
                    double v591 = *(double *)(v562 + 8 * v589) + v590;
                    v573->f64[v589] = v591;
                    if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 3740))
                    {
                      LOBYTE(v590) = *(unsigned char *)(v945[0] + v589);
                      v573->f64[v589] = v591 + (double)*(unint64_t *)&v590;
                    }
                    ++v589;
                  }
                  while (v925 != v589);
                  uint64_t v1 = v930;
                  sub_1000065FC(v930, v573, (unint64_t)v939);
                  if (v928) {
                    sub_10000D24C((void *)v930, (unint64_t)v939, v558, v586, v592, v593, v594, v595);
                  }
                  sub_10000D7C8(v930, v558, v586, (uint64_t)v939, v596, v597, v598, v599, v600, v601);
                  uint64_t v586 = (v586 + 1);
                }
                while (v586 != v934);
              }
            }
            else
            {
              if (*(_DWORD *)(v1 + 1176))
              {
                v581 = (int *)(*(void *)(v1 + 1160) + 4 * v558);
                int v583 = *v581;
                int v582 = v581[1];
              }
              else
              {
                v585 = (unsigned __int16 *)(*(void *)(v1 + 1144) + 2 * v558);
                int v583 = *v585;
                int v582 = v585[1];
              }
              int v584 = v582 - v583;
              uint64_t v1 = v930;
              if (v584 >= 1) {
                goto LABEL_550;
              }
            }
            sub_1000CD4D0(v939, v925);
            sub_1000CD4D0(v573, v921);
            sub_1000CD4D0(v565, v921);
          }
          LOBYTE(v40) = v884;
        }
      }
      else
      {
        sub_10000A738((void *)v1, v558, v29, v30, v31, v32, v33, v34);
      }
LABEL_530:
      unsigned __int16 v556 = v558 + 1;
      int v555 = (unsigned __int16)(v558 + 1);
    }
    while (*(_DWORD *)(v1 + 1072) > v555);
  }
  *(unsigned char *)(v1 + 292) = v40;
  if (!(_BYTE)v40) {
    goto LABEL_760;
  }
  if (*(_DWORD *)(v1 + 1032))
  {
    *(void *)(v1 + 136) = *(void *)(v1 + 152);
    uint64_t v620 = qword_100101CC0;
    if (qword_100101CC0) {
      goto LABEL_761;
    }
  }
  else
  {
    *(void *)(v1 + 16) = *(void *)(v1 + 24);
    uint64_t v620 = qword_100101CC0;
    if (qword_100101CC0)
    {
LABEL_761:
      if (*(_DWORD *)(v620 + 1064))
      {
        v872 = *(void (**)(uint64_t, void))(v1 + 1736);
        if (v872) {
          v872(v1, 0);
        }
      }
    }
  }
LABEL_764:
  sub_1000815A8(v1);
  return 1;
}

uint64_t sub_1000815A8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 256);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = 0;
    uint64_t v4 = 8 * v2;
    do
    {
      uint64_t v5 = *(void *)(a1 + 392);
      if (v5)
      {
        sub_1000C147C(*(void *)(v5 + v3));
        *(void *)(*(void *)(a1 + 392) + v3) = 0;
      }
      uint64_t v6 = *(void *)(a1 + 400);
      if (v6)
      {
        sub_1000C321C(*(void *)(v6 + v3));
        *(void *)(*(void *)(a1 + 400) + v3) = 0;
      }
      uint64_t v7 = *(void *)(a1 + 416);
      if (v7)
      {
        sub_1000C3670(*(void *)(v7 + v3));
        *(void *)(*(void *)(a1 + 416) + v3) = 0;
      }
      uint64_t v8 = *(void *)(a1 + 424);
      if (v8)
      {
        sub_1000C321C(*(void *)(v8 + v3));
        *(void *)(*(void *)(a1 + 424) + v3) = 0;
      }
      v3 += 8;
    }
    while (v4 != v3);
  }
  sub_1000C321C(*(void *)(a1 + 392));
  *(void *)(a1 + 392) = 0;
  sub_1000C321C(*(void *)(a1 + 400));
  *(void *)(a1 + 400) = 0;
  sub_1000C321C(*(void *)(a1 + 360));
  *(void *)(a1 + 360) = 0;
  sub_1000C321C(*(void *)(a1 + 416));
  *(void *)(a1 + 416) = 0;
  sub_1000C321C(*(void *)(a1 + 424));
  *(void *)(a1 + 424) = 0;
  sub_1000C3670(*(void *)(a1 + 432));
  *(void *)(a1 + 432) = 0;
  sub_1000C3670(*(void *)(a1 + 440));
  *(void *)(a1 + 440) = 0;
  sub_1000C147C(*(void *)(a1 + 304));
  sub_1000C147C(*(void *)(a1 + 312));
  sub_1000C147C(*(void *)(a1 + 320));
  sub_1000C147C(*(void *)(a1 + 336));
  sub_1000C147C(*(void *)(a1 + 328));
  sub_1000C147C(*(void *)(a1 + 368));
  sub_1000C147C(*(void *)(a1 + 376));
  sub_1000C147C(*(void *)(a1 + 384));
  *(void *)(a1 + 336) = 0;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(void *)(a1 + 376) = 0;
  *(void *)(a1 + 384) = 0;
  *(void *)(a1 + 368) = 0;
  sub_1000C321C(*(void *)(a1 + 344));
  *(void *)(a1 + 344) = 0;
  sub_1000C321C(*(void *)(a1 + 352));
  *(void *)(a1 + 352) = 0;
  uint64_t result = sub_1000C321C(*(void *)(a1 + 408));
  *(void *)(a1 + 408) = 0;
  return result;
}

uint64_t sub_100081724(uint64_t a1)
{
  unsigned int v2 = sub_1000C0758(*(_DWORD *)(a1 + 256), 0xFFFFFFFF);
  unsigned int v3 = sub_1000C0758(*(_DWORD *)(a1 + 248), v2);
  unsigned int v4 = sub_1000C0758(*(_DWORD *)(a1 + 252), v3);
  unsigned int v5 = sub_1000C0758(*(_DWORD *)(a1 + 260), v4);
  unsigned int v6 = sub_1000C0758(*(_DWORD *)(a1 + 264), v5);
  uint64_t v7 = sub_1000C0758(*(_DWORD *)(a1 + 288), v6);
  if (*(void *)(a1 + 496) && *(int *)(a1 + 1072) >= 1)
  {
    uint64_t v8 = 0;
    do
    {
      if (*(_DWORD *)(a1 + 268)) {
        BOOL v9 = v8 == 0;
      }
      else {
        BOOL v9 = 1;
      }
      if (v9) {
        uint64_t v10 = v8;
      }
      else {
        uint64_t v10 = 1;
      }
      uint64_t v7 = sub_1000C0758(*(char *)(*(void *)(a1 + 496) + v10), v7);
      ++v8;
    }
    while (v8 < *(int *)(a1 + 1072));
  }
  if (*(void *)(a1 + 488) && *(int *)(a1 + 288) >= 1)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    do
    {
      uint64_t v13 = (unsigned int *)(*(void *)(a1 + 488) + v11);
      uint64_t v7 = sub_1000C0758(v13[2], v7);
      if (v13[2])
      {
        unsigned int v14 = sub_1000C0758(*v13, v7);
        uint64_t v7 = sub_1000C0758(v13[1], v14);
      }
      ++v12;
      v11 += 12;
    }
    while (v12 < *(int *)(a1 + 288));
  }
  return v7;
}

double sub_100081850(uint64_t a1, unsigned __int8 a2, int a3, int a4)
{
  int v6 = *(_DWORD *)(a1 + 1072);
  if (v6 >= 1)
  {
    int v7 = 0;
    unsigned int v8 = 0;
    unsigned __int16 v9 = 0;
    int v10 = a2;
    uint64_t v11 = *(void **)(a1 + 1432);
    int v12 = a4 | a3;
    v13.i64[0] = 0x100000001;
    v13.i64[1] = 0x100000001;
    int v14 = 1;
    while (1)
    {
      if (*(_DWORD *)(a1 + 268)) {
        BOOL v15 = v9 == 0;
      }
      else {
        BOOL v15 = 1;
      }
      uint64_t v16 = v9;
      if (v15) {
        uint64_t v17 = v9;
      }
      else {
        uint64_t v17 = 1;
      }
      if (*(unsigned __int8 *)(*(void *)(a1 + 496) + v17) != v10) {
        goto LABEL_4;
      }
      uint64_t v18 = *(void *)(*v11 + 8 * v9);
      if (*(_DWORD *)(*(void *)(a1 + 1432) + 28))
      {
        if (v9 != sub_1000041DC(a1))
        {
          unsigned int v22 = 1;
          v13.i64[0] = 0x100000001;
          v13.i64[1] = 0x100000001;
          if (v18) {
            BOOL v25 = 1;
          }
          else {
            BOOL v25 = v12 == 0;
          }
          if (!v25) {
            goto LABEL_4;
          }
          goto LABEL_42;
        }
        int v6 = *(_DWORD *)(a1 + 1072);
        v13.i64[0] = 0x100000001;
        v13.i64[1] = 0x100000001;
      }
      if (v6 <= v7)
      {
        unsigned int v22 = 1;
        if (v18) {
          BOOL v23 = 1;
        }
        else {
          BOOL v23 = v12 == 0;
        }
        if (!v23) {
          goto LABEL_4;
        }
      }
      else
      {
        if (*(_DWORD *)(a1 + 1176))
        {
          uint64_t v19 = (int *)(*(void *)(a1 + 1160) + 4 * v16);
          int v21 = *v19;
          int v20 = v19[1];
        }
        else
        {
          uint64_t v27 = (unsigned __int16 *)(*(void *)(a1 + 1144) + 2 * v16);
          int v21 = *v27;
          int v20 = v27[1];
        }
        unsigned int v22 = v20 - v21;
        if (v18) {
          BOOL v28 = 1;
        }
        else {
          BOOL v28 = v12 == 0;
        }
        if (!v28 || v20 == v21) {
          goto LABEL_4;
        }
      }
LABEL_42:
      if ((int)v22 >= 1)
      {
        if (!v18) {
          goto LABEL_51;
        }
        uint64_t v30 = *(int16x8_t **)(v18 + 8);
        if (a3)
        {
          uint64_t v31 = v22;
          if (v12)
          {
            if (v22 < 0x10)
            {
              uint64_t v32 = 0;
LABEL_57:
              uint64_t v43 = &v30->i16[v32];
              uint64_t v44 = v31 - v32;
              do
              {
                int v14 = 0;
                int v45 = *v43++;
                v8 += v45;
                --v44;
              }
              while (v44);
              goto LABEL_4;
            }
            uint64_t v32 = v22 & 0x7FFFFFF0;
            int32x4_t v36 = 0uLL;
            int32x4_t v37 = (int32x4_t)v8;
            uint64_t v38 = v30 + 1;
            uint64_t v39 = v31 & 0xFFFFFFF0;
            int32x4_t v40 = 0uLL;
            int32x4_t v41 = 0uLL;
            do
            {
              int16x8_t v42 = v38[-1];
              int32x4_t v36 = vaddw_high_s16(v36, v42);
              int32x4_t v37 = vaddw_s16(v37, *(int16x4_t *)v42.i8);
              int32x4_t v41 = vaddw_high_s16(v41, *v38);
              int32x4_t v40 = vaddw_s16(v40, *(int16x4_t *)v38->i8);
              v38 += 2;
              v39 -= 16;
            }
            while (v39);
            unsigned int v8 = vaddvq_s32(vaddq_s32(vaddq_s32(v40, v37), vaddq_s32(v41, v36)));
            if (v32 != v31) {
              goto LABEL_57;
            }
          }
          else
          {
            if (v22 < 0x10)
            {
              uint64_t v35 = 0;
LABEL_71:
              int v64 = &v30->i16[v35];
              uint64_t v65 = v31 - v35;
              do
              {
                int v14 = 0;
                int v66 = *v64++;
                v8 += v66;
                --v65;
              }
              while (v65);
              goto LABEL_4;
            }
            uint64_t v35 = v22 & 0x7FFFFFF0;
            int32x4_t v57 = 0uLL;
            int32x4_t v58 = (int32x4_t)v8;
            int v59 = v30 + 1;
            uint64_t v60 = v31 & 0xFFFFFFF0;
            int32x4_t v61 = 0uLL;
            int32x4_t v62 = 0uLL;
            do
            {
              int16x8_t v63 = v59[-1];
              int32x4_t v57 = vaddw_high_s16(v57, v63);
              int32x4_t v58 = vaddw_s16(v58, *(int16x4_t *)v63.i8);
              int32x4_t v62 = vaddw_high_s16(v62, *v59);
              int32x4_t v61 = vaddw_s16(v61, *(int16x4_t *)v59->i8);
              v59 += 2;
              v60 -= 16;
            }
            while (v60);
            unsigned int v8 = vaddvq_s32(vaddq_s32(vaddq_s32(v61, v58), vaddq_s32(v62, v57)));
            if (v35 != v31) {
              goto LABEL_71;
            }
          }
        }
        else
        {
          if (!v12)
          {
LABEL_51:
            int v14 = 0;
            v8 += v22;
            goto LABEL_4;
          }
          uint64_t v33 = v22;
          if (v22 < 0x10)
          {
            uint64_t v34 = 0;
LABEL_63:
            uint64_t v54 = (unsigned __int16 *)v30 + v34;
            uint64_t v55 = v33 - v34;
            do
            {
              int v14 = 0;
              if (*v54++) {
                ++v8;
              }
              --v55;
            }
            while (v55);
            goto LABEL_4;
          }
          uint64_t v34 = v22 & 0x7FFFFFF0;
          int32x4_t v46 = 0uLL;
          int32x4_t v47 = (int32x4_t)v8;
          int v48 = v30 + 1;
          uint64_t v49 = v33 & 0xFFFFFFF0;
          int32x4_t v50 = 0uLL;
          int32x4_t v51 = 0uLL;
          do
          {
            uint16x8_t v52 = (uint16x8_t)vtstq_s16(v48[-1], v48[-1]);
            uint16x8_t v53 = (uint16x8_t)vtstq_s16(*v48, *v48);
            int32x4_t v46 = vaddq_s32(v46, (int32x4_t)vandq_s8((int8x16_t)vmovl_high_u16(v52), v13));
            int32x4_t v47 = vaddq_s32(v47, (int32x4_t)vandq_s8((int8x16_t)vmovl_u16(*(uint16x4_t *)v52.i8), v13));
            int32x4_t v51 = vaddq_s32(v51, (int32x4_t)vandq_s8((int8x16_t)vmovl_high_u16(v53), v13));
            int32x4_t v50 = vaddq_s32(v50, (int32x4_t)vandq_s8((int8x16_t)vmovl_u16(*(uint16x4_t *)v53.i8), v13));
            v48 += 2;
            v49 -= 16;
          }
          while (v49);
          unsigned int v8 = vaddvq_s32(vaddq_s32(vaddq_s32(v50, v47), vaddq_s32(v51, v46)));
          if (v34 != v33) {
            goto LABEL_63;
          }
        }
      }
      int v14 = 0;
LABEL_4:
      unsigned __int16 v9 = v16 + 1;
      int v7 = (unsigned __int16)(v16 + 1);
      int v6 = *(_DWORD *)(a1 + 1072);
      if (v6 <= v7) {
        goto LABEL_75;
      }
    }
  }
  unsigned int v8 = 0;
  int v14 = 1;
LABEL_75:
  double result = (double)(int)v8;
  if (a3) {
    double result = result / (double)*(int *)(a1 + 1404);
  }
  if (v14) {
    BOOL v68 = a3 == 0;
  }
  else {
    BOOL v68 = 0;
  }
  if (v68) {
    return -1.0;
  }
  return result;
}

void *sub_100081BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8)
{
  int v8 = a6;
  int v279 = a5;
  int v9 = a4;
  int v10 = a3;
  unsigned __int8 v11 = a2;
  uint64_t v13 = *(int *)(a1 + 1100);
  uint64_t v271 = *(void **)(a1 + 1432);
  uint64_t v14 = 4 * v13;
  uint64_t v282 = (int32x4_t *)sub_1000CD454(4 * v13, a2, a3, a4, a5, a6, a7, a8);
  unsigned int v280 = v13;
  uint64_t v22 = 2 * v13;
  if (v9)
  {
    uint64_t v281 = (int32x4_t *)sub_1000CD454(v14, v15, v16, v17, v18, v19, v20, v21);
    unsigned int v283 = (int32x4_t *)sub_1000CD454(v22, v23, v24, v25, v26, v27, v28, v29);
    v285[0] = 0;
    int v30 = *(_DWORD *)(a1 + 1072);
    if (v30 < 1) {
      goto LABEL_201;
    }
  }
  else
  {
    unsigned int v283 = 0;
    uint64_t v281 = 0;
    v285[0] = 0;
    int v30 = *(_DWORD *)(a1 + 1072);
    if (v30 < 1) {
      goto LABEL_201;
    }
  }
  uint64_t v267 = v14;
  int v31 = 0;
  int v32 = 0;
  unsigned __int16 v33 = 0;
  int v277 = v11;
  uint64_t v274 = v8;
  uint64_t v34 = (int32x4_t *)((char *)v282 + 4 * v280);
  uint64_t v35 = (int32x4_t *)((char *)v283 + 2 * v280);
  int32x4_t v36 = (int32x4_t *)((char *)v281 + 4 * v280);
  uint64_t v269 = 2 * v8 + 2;
  BOOL v38 = v281 < v34 && v282 < v36;
  unint64_t v273 = (unint64_t)v281 + 4 * v280;
  if (v281 < v35 && v283 < v36) {
    BOOL v38 = 1;
  }
  BOOL v272 = v38;
  unint64_t v278 = (unint64_t)v282 + 4 * v280;
  BOOL v41 = v282 < v35 && v283 < v34;
  BOOL v276 = v41;
  uint64_t v275 = v280 & 0xFFFFFFF0;
  uint64_t v270 = v280 & 0xFFFFFFF8;
  do
  {
    if (*(_DWORD *)(a1 + 268)) {
      BOOL v42 = v33 == 0;
    }
    else {
      BOOL v42 = 1;
    }
    uint64_t v43 = v33;
    if (v42) {
      uint64_t v44 = v33;
    }
    else {
      uint64_t v44 = 1;
    }
    if (*(unsigned __int8 *)(*(void *)(a1 + 496) + v44) != v277) {
      goto LABEL_23;
    }
    uint64_t v284 = *(void *)(*v271 + 8 * v33);
    int v45 = (uint64_t *)v283;
    if (*(_DWORD *)(*(void *)(a1 + 1432) + 28))
    {
      if (v33 != sub_1000041DC(a1)) {
        goto LABEL_37;
      }
      int v30 = *(_DWORD *)(a1 + 1072);
    }
    if (v30 <= v31)
    {
LABEL_37:
      int v49 = 1;
      if (v284) {
        BOOL v50 = 1;
      }
      else {
        BOOL v50 = v10 == 0;
      }
      BOOL v52 = !v50;
      if (v52) {
        goto LABEL_23;
      }
LABEL_60:
      unint64_t v57 = v49;
      if (v283)
      {
        uint64_t v58 = 0;
        while (1)
        {
          if (v10)
          {
            int v59 = *(__int16 *)(*(void *)(v284 + 8) + 2 * v58);
            if (!v9) {
              goto LABEL_83;
            }
          }
          else
          {
            int v59 = 1;
            if (!v9) {
              goto LABEL_83;
            }
          }
          uint64_t v60 = *(unsigned int *)(a1 + 1100);
          uint64_t v61 = sub_10000507C(a1, v43, v58);
          if ((int)v60 < 1) {
            goto LABEL_83;
          }
          if (v279)
          {
            uint64_t v62 = 0;
            if (v60 < 0x10) {
              goto LABEL_74;
            }
            if ((unint64_t)v283 - v61 < 0x20) {
              goto LABEL_74;
            }
            uint64_t v62 = v60 & 0x7FFFFFF0;
            int16x8_t v63 = (long long *)(v61 + 16);
            uint64_t v64 = v60 & 0xFFFFFFF0;
            uint64_t v65 = v283 + 1;
            do
            {
              long long v66 = *v63;
              v65[-1] = (int32x4_t)*(v63 - 1);
              *uint64_t v65 = (int32x4_t)v66;
              v63 += 2;
              v65 += 2;
              v64 -= 16;
            }
            while (v64);
            if (v62 != v60)
            {
LABEL_74:
              uint64_t v67 = v60 - v62;
              uint64_t v68 = 2 * v62;
              unsigned int v69 = &v283->i16[v62];
              uint64_t v70 = (__int16 *)(v61 + v68);
              do
              {
                __int16 v71 = *v70++;
                *v69++ = v71;
                --v67;
              }
              while (v67);
            }
          }
          else
          {
            int8x16_t v72 = (const __int16 *)(v61 + 2 * v274);
            if (v60 < 0x10 || (unint64_t)v283 < v61 + v269 && v72 < &v283->i16[v60])
            {
              uint64_t v73 = 0;
LABEL_81:
              uint64_t v74 = v60 - v73;
              uint64_t v75 = &v283->i16[v73];
              do
              {
                *v75++ = *v72;
                --v74;
              }
              while (v74);
              goto LABEL_83;
            }
            uint64_t v73 = v60 & 0x7FFFFFF0;
            int16x8_t v114 = vld1q_dup_s16(v72);
            uint64_t v115 = v60 & 0xFFFFFFF0;
            uint64_t v116 = (int16x8_t *)&v283[1];
            do
            {
              v116[-1] = v114;
              *uint64_t v116 = v114;
              v116 += 2;
              v115 -= 16;
            }
            while (v115);
            if (v73 != v60) {
              goto LABEL_81;
            }
          }
LABEL_83:
          if (!v59) {
            goto LABEL_62;
          }
          v32 += v59;
          sub_1000043BC(a1, v43, v58, v285);
          if ((int)v280 < 1) {
            goto LABEL_62;
          }
          unint64_t v77 = v285[0];
          unsigned int v78 = 2 * v59;
          v79.i64[0] = 0x1000000010;
          v79.i64[1] = 0x1000000010;
          if (v281)
          {
            if (v280 < 8) {
              goto LABEL_99;
            }
            BOOL v80 = (unint64_t)v281 >= v285[0] + v280 || v285[0] >= v273;
            int v81 = v272;
            if (!v80) {
              int v81 = 1;
            }
            BOOL v82 = (unint64_t)v282 >= v285[0] + v280 || v285[0] >= v278;
            int v83 = v82 ? v81 : 1;
            if ((v83 | v276))
            {
LABEL_99:
              uint64_t v84 = 0;
LABEL_100:
              uint64_t v85 = v280 - v84;
              unsigned int v86 = &v282->i32[v84];
              uint64_t v87 = (unsigned __int8 *)(v77 + v84);
              uint64_t v88 = &v281->i32[v84];
              uint64_t v89 = (unsigned __int16 *)v283 + v84;
              do
              {
                int v90 = v78 * *v89;
                int v91 = v90 + 16;
                BOOL v52 = v90 < -16;
                int v92 = v90 + 47;
                if (!v52) {
                  int v92 = v91;
                }
                *v88++ += v92 >> 5;
                int v94 = *v89++;
                int v93 = v94;
                int v95 = *v87++;
                int v96 = v78 * v93 * v95;
                int v97 = v96 + 16;
                BOOL v52 = v96 < -16;
                int v98 = v96 + 47;
                if (!v52) {
                  int v98 = v97;
                }
                *v86++ += v98 >> 5;
                --v85;
              }
              while (v85);
              goto LABEL_62;
            }
            int32x4_t v112 = vdupq_n_s32(v78);
            if (v280 >= 0x10)
            {
              uint64_t v130 = v280 & 0xFFFFFFF0;
              uint64_t v132 = v281;
              uint64_t v131 = v282;
              uint64_t v133 = (int8x16_t *)v285[0];
              uint64_t v134 = (uint16x8_t *)v283;
              do
              {
                uint16x8_t v136 = *v134;
                uint16x8_t v135 = v134[1];
                v134 += 2;
                int32x4_t v137 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v136.i8);
                int32x4_t v138 = (int32x4_t)vmovl_high_u16(v135);
                int32x4_t v139 = vmulq_s32(v112, (int32x4_t)vmovl_high_u16(v136));
                int32x4_t v140 = vmulq_s32(v112, (int32x4_t)vmovl_u16(*(uint16x4_t *)v135.i8));
                int32x4_t v141 = vmulq_s32(v112, v138);
                int32x4_t v142 = vmulq_s32(v112, v137);
                int32x4_t v143 = vaddq_s32(v142, v79);
                int32x4_t v144 = vaddq_s32(v141, v79);
                int32x4_t v145 = vaddq_s32(v140, v79);
                int32x4_t v146 = vaddq_s32(v139, v79);
                int32x4_t v147 = vsraq_n_s32(*v132, (int32x4_t)vsraq_n_u32((uint32x4_t)v143, (uint32x4_t)vcltzq_s32(v143), 0x1BuLL), 5uLL);
                int32x4_t v148 = vsraq_n_s32(v132[3], (int32x4_t)vsraq_n_u32((uint32x4_t)v144, (uint32x4_t)vcltzq_s32(v144), 0x1BuLL), 5uLL);
                int32x4_t v149 = vsraq_n_s32(v132[1], (int32x4_t)vsraq_n_u32((uint32x4_t)v146, (uint32x4_t)vcltzq_s32(v146), 0x1BuLL), 5uLL);
                v132[2] = vsraq_n_s32(v132[2], (int32x4_t)vsraq_n_u32((uint32x4_t)v145, (uint32x4_t)vcltzq_s32(v145), 0x1BuLL), 5uLL);
                v132[3] = v148;
                *uint64_t v132 = v147;
                v132[1] = v149;
                v132 += 4;
                int8x16_t v150 = *v133++;
                v151.i64[0] = 0x1000000010;
                v151.i64[1] = 0x1000000010;
                int32x4_t v152 = vmlaq_s32(v151, v142, (int32x4_t)vqtbl1q_s8(v150, (int8x16_t)xmmword_1000F4810));
                v142.i64[0] = 0x1000000010;
                v142.i64[1] = 0x1000000010;
                int32x4_t v153 = vmlaq_s32(v142, v141, (int32x4_t)vqtbl1q_s8(v150, (int8x16_t)xmmword_1000F47E0));
                v141.i64[0] = 0x1000000010;
                v141.i64[1] = 0x1000000010;
                int32x4_t v154 = vmlaq_s32(v141, v140, (int32x4_t)vqtbl1q_s8(v150, (int8x16_t)xmmword_1000F47F0));
                v140.i64[0] = 0x1000000010;
                v140.i64[1] = 0x1000000010;
                int32x4_t v155 = vmlaq_s32(v140, v139, (int32x4_t)vqtbl1q_s8(v150, (int8x16_t)xmmword_1000F4800));
                int32x4_t v156 = vsraq_n_s32(*v131, (int32x4_t)vsraq_n_u32((uint32x4_t)v152, (uint32x4_t)vcltzq_s32(v152), 0x1BuLL), 5uLL);
                int32x4_t v157 = vsraq_n_s32(v131[3], (int32x4_t)vsraq_n_u32((uint32x4_t)v153, (uint32x4_t)vcltzq_s32(v153), 0x1BuLL), 5uLL);
                int32x4_t v158 = vsraq_n_s32(v131[1], (int32x4_t)vsraq_n_u32((uint32x4_t)v155, (uint32x4_t)vcltzq_s32(v155), 0x1BuLL), 5uLL);
                v131[2] = vsraq_n_s32(v131[2], (int32x4_t)vsraq_n_u32((uint32x4_t)v154, (uint32x4_t)vcltzq_s32(v154), 0x1BuLL), 5uLL);
                v131[3] = v157;
                *uint64_t v131 = v156;
                v131[1] = v158;
                v131 += 4;
                v130 -= 16;
              }
              while (v130);
              uint64_t v84 = v280 & 0xFFFFFFF0;
              if (v275 == v280) {
                goto LABEL_62;
              }
              uint64_t v113 = v280 & 0xFFFFFFF0;
              if ((v280 & 8) == 0) {
                goto LABEL_100;
              }
            }
            else
            {
              uint64_t v113 = 0;
            }
            uint64_t v159 = (uint16x8_t *)((char *)v283 + 2 * v113);
            uint64_t v160 = (int32x4_t *)((char *)v281 + 4 * v113);
            uint64_t v161 = (uint64_t *)(v77 + v113);
            uint64_t v162 = (int32x4_t *)((char *)v282 + 4 * v113);
            uint64_t v163 = v113 - (v280 & 0xFFFFFFF8);
            do
            {
              uint16x8_t v164 = *v159++;
              int32x4_t v165 = vmulq_s32(v112, (int32x4_t)vmovl_high_u16(v164));
              int32x4_t v166 = vmulq_s32(v112, (int32x4_t)vmovl_u16(*(uint16x4_t *)v164.i8));
              int32x4_t v167 = vaddq_s32(v166, v79);
              int32x4_t v168 = vaddq_s32(v165, v79);
              int32x4_t v169 = (int32x4_t)vsraq_n_u32((uint32x4_t)v167, (uint32x4_t)vcltzq_s32(v167), 0x1BuLL);
              int32x4_t v170 = vsraq_n_s32(v160[1], (int32x4_t)vsraq_n_u32((uint32x4_t)v168, (uint32x4_t)vcltzq_s32(v168), 0x1BuLL), 5uLL);
              *uint64_t v160 = vsraq_n_s32(*v160, v169, 5uLL);
              v160[1] = v170;
              v160 += 2;
              v164.i64[0] = *v161++;
              v169.i64[0] = v164.i64[0];
              v170.i64[0] = 0x1000000010;
              v170.i64[1] = 0x1000000010;
              int32x4_t v171 = vmlaq_s32(v170, v166, (int32x4_t)vqtbl1q_s8((int8x16_t)v169, (int8x16_t)xmmword_1000F4810));
              v166.i64[0] = 0x1000000010;
              v166.i64[1] = 0x1000000010;
              int32x4_t v172 = vmlaq_s32(v166, v165, (int32x4_t)vqtbl1q_s8((int8x16_t)v169, (int8x16_t)xmmword_1000F4800));
              int32x4_t v173 = vsraq_n_s32(v162[1], (int32x4_t)vsraq_n_u32((uint32x4_t)v172, (uint32x4_t)vcltzq_s32(v172), 0x1BuLL), 5uLL);
              *uint64_t v162 = vsraq_n_s32(*v162, (int32x4_t)vsraq_n_u32((uint32x4_t)v171, (uint32x4_t)vcltzq_s32(v171), 0x1BuLL), 5uLL);
              v162[1] = v173;
              v162 += 2;
              v163 += 8;
            }
            while (v163);
            uint64_t v84 = v280 & 0xFFFFFFF8;
            if (v270 != v280) {
              goto LABEL_100;
            }
          }
          else
          {
            if (v280 < 8) {
              goto LABEL_114;
            }
            BOOL v99 = (unint64_t)v282 >= v285[0] + v280 || v285[0] >= v278;
            char v100 = v276;
            if (!v99) {
              char v100 = 1;
            }
            if (v100)
            {
LABEL_114:
              uint64_t v101 = 0;
LABEL_115:
              uint64_t v102 = v280 - v101;
              uint64_t v103 = &v282->i32[v101];
              uint64_t v104 = (unsigned __int8 *)(v77 + v101);
              uint64_t v105 = (unsigned __int16 *)v283 + v101;
              do
              {
                int v107 = *v105++;
                int v106 = v107;
                int v108 = *v104++;
                int v109 = v78 * v106 * v108;
                int v110 = v109 + 16;
                BOOL v52 = v109 < -16;
                int v111 = v109 + 47;
                if (!v52) {
                  int v111 = v110;
                }
                *v103++ += v111 >> 5;
                --v102;
              }
              while (v102);
              goto LABEL_62;
            }
            if (v280 >= 0x10)
            {
              int32x4_t v174 = vdupq_n_s32(v78);
              uint64_t v175 = v280 & 0xFFFFFFF0;
              uint64_t v176 = v282;
              uint64_t v177 = v283;
              uint64_t v178 = (int8x16_t *)v285[0];
              do
              {
                int32x4_t v180 = *v177;
                int32x4_t v179 = v177[1];
                v177 += 2;
                int32x4_t v181 = (int32x4_t)vmovl_high_u16((uint16x8_t)v180);
                int32x4_t v182 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v179.i8);
                int8x16_t v183 = *v178++;
                v184.i64[0] = 0x1000000010;
                v184.i64[1] = 0x1000000010;
                int32x4_t v185 = vmlaq_s32(v184, vmulq_s32(v174, (int32x4_t)vmovl_u16(*(uint16x4_t *)v180.i8)), (int32x4_t)vqtbl1q_s8(v183, (int8x16_t)xmmword_1000F4810));
                v180.i64[0] = 0x1000000010;
                v180.i64[1] = 0x1000000010;
                int32x4_t v186 = vmlaq_s32(v180, vmulq_s32(v174, (int32x4_t)vmovl_high_u16((uint16x8_t)v179)), (int32x4_t)vqtbl1q_s8(v183, (int8x16_t)xmmword_1000F47E0));
                v179.i64[0] = 0x1000000010;
                v179.i64[1] = 0x1000000010;
                int32x4_t v187 = vmlaq_s32(v179, vmulq_s32(v174, v182), (int32x4_t)vqtbl1q_s8(v183, (int8x16_t)xmmword_1000F47F0));
                v182.i64[0] = 0x1000000010;
                v182.i64[1] = 0x1000000010;
                int32x4_t v188 = vmlaq_s32(v182, vmulq_s32(v174, v181), (int32x4_t)vqtbl1q_s8(v183, (int8x16_t)xmmword_1000F4800));
                int32x4_t v189 = v176[1];
                int32x4_t v190 = vsraq_n_s32(*v176, (int32x4_t)vsraq_n_u32((uint32x4_t)v185, (uint32x4_t)vcltzq_s32(v185), 0x1BuLL), 5uLL);
                int32x4_t v191 = vsraq_n_s32(v176[3], (int32x4_t)vsraq_n_u32((uint32x4_t)v186, (uint32x4_t)vcltzq_s32(v186), 0x1BuLL), 5uLL);
                int8x16_t v76 = (int8x16_t)vsraq_n_s32(v176[2], (int32x4_t)vsraq_n_u32((uint32x4_t)v187, (uint32x4_t)vcltzq_s32(v187), 0x1BuLL), 5uLL);
                v176[2] = (int32x4_t)v76;
                v176[3] = v191;
                *uint64_t v176 = v190;
                v176[1] = vsraq_n_s32(v189, (int32x4_t)vsraq_n_u32((uint32x4_t)v188, (uint32x4_t)vcltzq_s32(v188), 0x1BuLL), 5uLL);
                v176 += 4;
                v175 -= 16;
              }
              while (v175);
              uint64_t v101 = v280 & 0xFFFFFFF0;
              if (v275 == v280) {
                goto LABEL_62;
              }
              uint64_t v117 = v280 & 0xFFFFFFF0;
              if ((v280 & 8) == 0) {
                goto LABEL_115;
              }
            }
            else
            {
              uint64_t v117 = 0;
            }
            int32x4_t v118 = vdupq_n_s32(v78);
            uint64_t v119 = (uint16x8_t *)((char *)v283 + 2 * v117);
            uint64_t v120 = (uint64_t *)(v77 + v117);
            uint64_t v121 = v117 - (v280 & 0xFFFFFFF8);
            uint64_t v122 = (int32x4_t *)((char *)v282 + 4 * v117);
            do
            {
              uint16x8_t v123 = *v119++;
              int32x4_t v124 = (int32x4_t)vmovl_high_u16(v123);
              int32x4_t v125 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v123.i8);
              v123.i64[0] = *v120++;
              v76.i64[0] = v123.i64[0];
              v126.i64[0] = 0x1000000010;
              v126.i64[1] = 0x1000000010;
              int32x4_t v127 = vmlaq_s32(v126, vmulq_s32(v118, v125), (int32x4_t)vqtbl1q_s8(v76, (int8x16_t)xmmword_1000F4810));
              v125.i64[0] = 0x1000000010;
              v125.i64[1] = 0x1000000010;
              int32x4_t v128 = vmlaq_s32(v125, vmulq_s32(v118, v124), (int32x4_t)vqtbl1q_s8(v76, (int8x16_t)xmmword_1000F4800));
              int8x16_t v76 = (int8x16_t)vsraq_n_s32(*v122, (int32x4_t)vsraq_n_u32((uint32x4_t)v127, (uint32x4_t)vcltzq_s32(v127), 0x1BuLL), 5uLL);
              int32x4_t v129 = vsraq_n_s32(v122[1], (int32x4_t)vsraq_n_u32((uint32x4_t)v128, (uint32x4_t)vcltzq_s32(v128), 0x1BuLL), 5uLL);
              int32x4_t *v122 = (int32x4_t)v76;
              v122[1] = v129;
              v122 += 2;
              v121 += 8;
            }
            while (v121);
            uint64_t v101 = v280 & 0xFFFFFFF8;
            if (v270 != v280) {
              goto LABEL_115;
            }
          }
LABEL_62:
          if (++v58 == v57) {
            goto LABEL_23;
          }
        }
      }
      while (1)
      {
        if (v10)
        {
          unsigned int v192 = *(__int16 *)(*(void *)(v284 + 8) + 2 * (void)v45);
          if (!v9) {
            goto LABEL_167;
          }
        }
        else
        {
          unsigned int v192 = 1;
          if (!v9) {
            goto LABEL_167;
          }
        }
        uint64_t v193 = *(unsigned int *)(a1 + 1100);
        sub_10000507C(a1, v43, (int)v45);
        if ((int)v193 < 1) {
          goto LABEL_167;
        }
        if (v279)
        {
          if (v193 < 0x10)
          {
            uint64_t v194 = 0;
LABEL_159:
            uint64_t v198 = v193 - v194;
            uint64_t v199 = 2 * v194;
            do
            {
              v199 += 2;
              --v198;
            }
            while (v198);
            goto LABEL_167;
          }
          uint64_t v196 = 0;
          uint64_t v194 = v193 & 0xFFFFFFF0;
          uint64_t v197 = v194;
          do
          {
            v196 += 32;
            v197 -= 16;
          }
          while (v197);
          if (v194 != v193) {
            goto LABEL_159;
          }
        }
        else
        {
          if (v193 < 0x10)
          {
            uint64_t v195 = 0;
LABEL_165:
            uint64_t v202 = v193 - v195;
            uint64_t v203 = 2 * v195;
            do
            {
              v203 += 2;
              --v202;
            }
            while (v202);
            goto LABEL_167;
          }
          uint64_t v200 = 0;
          uint64_t v195 = v193 & 0xFFFFFFF0;
          uint64_t v201 = v195;
          do
          {
            v200 += 32;
            v201 -= 16;
          }
          while (v201);
          if (v195 != v193) {
            goto LABEL_165;
          }
        }
LABEL_167:
        if (!v192) {
          goto LABEL_145;
        }
        v32 += v192;
        sub_1000043BC(a1, v43, (int)v45, v285);
        if ((int)v280 < 1) {
          goto LABEL_145;
        }
        unint64_t v205 = v285[0];
        if (v280 >= 8 && ((unint64_t)v282 >= v285[0] + v280 || v285[0] >= v278))
        {
          int32x4_t v211 = vdupq_n_s32(v192);
          if (v280 < 0x10)
          {
            uint64_t v212 = 0;
LABEL_178:
            uint64_t v213 = (uint64_t *)(v205 + v212);
            uint64_t v214 = (int32x4_t *)((char *)v282 + 4 * v212);
            uint64_t v215 = v212 - (v280 & 0xFFFFFFF8);
            do
            {
              uint64_t v216 = *v213++;
              v204.i64[0] = v216;
              int32x4_t v217 = (int32x4_t)vqtbl1q_s8((int8x16_t)v204, (int8x16_t)xmmword_1000F4800);
              int32x4_t v204 = (int32x4_t)vqtbl1q_s8((int8x16_t)v204, (int8x16_t)xmmword_1000F4810);
              int32x4_t v218 = vmlaq_s32(v214[1], v211, v217);
              *uint64_t v214 = vmlaq_s32(*v214, v211, v204);
              v214[1] = v218;
              v214 += 2;
              v215 += 8;
            }
            while (v215);
            uint64_t v206 = v280 & 0xFFFFFFF8;
            if (v270 == v280) {
              goto LABEL_145;
            }
            goto LABEL_173;
          }
          uint64_t v219 = v280 & 0xFFFFFFF0;
          uint64_t v220 = v282;
          uint64_t v221 = (int8x16_t *)v285[0];
          do
          {
            int8x16_t v222 = *v221++;
            int32x4_t v204 = (int32x4_t)vqtbl1q_s8(v222, (int8x16_t)xmmword_1000F47F0);
            int32x4_t v223 = vmlaq_s32(v220[3], v211, (int32x4_t)vqtbl1q_s8(v222, (int8x16_t)xmmword_1000F47E0));
            int32x4_t v224 = vmlaq_s32(v220[1], v211, (int32x4_t)vqtbl1q_s8(v222, (int8x16_t)xmmword_1000F4800));
            int32x4_t v225 = vmlaq_s32(v220[2], v211, v204);
            int32x4_t *v220 = vmlaq_s32(*v220, v211, (int32x4_t)vqtbl1q_s8(v222, (int8x16_t)xmmword_1000F4810));
            v220[1] = v224;
            v220[2] = v225;
            v220[3] = v223;
            v220 += 4;
            v219 -= 16;
          }
          while (v219);
          uint64_t v206 = v280 & 0xFFFFFFF0;
          if (v275 == v280) {
            goto LABEL_145;
          }
          uint64_t v212 = v280 & 0xFFFFFFF0;
          if ((v280 & 8) != 0) {
            goto LABEL_178;
          }
        }
        else
        {
          uint64_t v206 = 0;
        }
LABEL_173:
        uint64_t v207 = v280 - v206;
        uint64_t v208 = &v282->i32[v206];
        uint64_t v209 = (unsigned __int8 *)(v205 + v206);
        do
        {
          int v210 = *v209++;
          *v208++ += v192 * v210;
          --v207;
        }
        while (v207);
LABEL_145:
        int v45 = (uint64_t *)((char *)v45 + 1);
        if (v45 == (uint64_t *)v57) {
          goto LABEL_23;
        }
      }
    }
    if (*(_DWORD *)(a1 + 1176))
    {
      int32x4_t v46 = (int *)(*(void *)(a1 + 1160) + 4 * v43);
      int v48 = *v46;
      int v47 = v46[1];
    }
    else
    {
      uint16x8_t v53 = (unsigned __int16 *)(*(void *)(a1 + 1144) + 2 * v43);
      int v48 = *v53;
      int v47 = v53[1];
    }
    int v49 = v47 - v48;
    if (v284) {
      BOOL v54 = 1;
    }
    else {
      BOOL v54 = v10 == 0;
    }
    if (v54 && v49 != 0 && v49 >= 1) {
      goto LABEL_60;
    }
LABEL_23:
    unsigned __int16 v33 = v43 + 1;
    int v31 = (unsigned __int16)(v43 + 1);
    int v30 = *(_DWORD *)(a1 + 1072);
  }
  while (v30 > v31);
  uint64_t v14 = v267;
  if (v32 >= 1 && (int)v280 >= 1)
  {
    if (!v9)
    {
      double v234 = (double)v32;
      if (v280 >= 8 && (v278 <= a7 || (unint64_t)v282 >= a7 + 8 * v280))
      {
        float64x2_t v258 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v234, 0);
        int v259 = v282 + 1;
        unsigned __int16 v260 = (float64x2_t *)(a7 + 32);
        uint64_t v261 = v280 & 0xFFFFFFF8;
        do
        {
          int32x4_t v262 = v259[-1];
          v263.i64[0] = v262.i32[2];
          v263.i64[1] = v262.i32[3];
          float64x2_t v264 = vcvtq_f64_s64(v263);
          v263.i64[0] = v262.i32[0];
          v263.i64[1] = v262.i32[1];
          float64x2_t v265 = vcvtq_f64_s64(v263);
          v263.i64[0] = (int)v259->i64[1];
          v263.i64[1] = (int)HIDWORD(*(unsigned long long *)v259);
          float64x2_t v266 = vcvtq_f64_s64(v263);
          v263.i64[0] = v259->i32[0];
          v263.i64[1] = (int)HIDWORD(v259->i64[0]);
          v260[-2] = vdivq_f64(v265, v258);
          v260[-1] = vdivq_f64(v264, v258);
          *unsigned __int16 v260 = vdivq_f64(vcvtq_f64_s64(v263), v258);
          v260[1] = vdivq_f64(v266, v258);
          v260 += 4;
          v259 += 2;
          v261 -= 8;
        }
        while (v261);
        if (v270 == v280) {
          goto LABEL_201;
        }
      }
      else
      {
        uint64_t v270 = 0;
      }
      double v235 = &v282->i32[v270];
      uint64_t v236 = v280 - v270;
      double v237 = (double *)(a7 + 8 * v270);
      do
      {
        int v238 = *v235++;
        *v237++ = (double)v238 / v234;
        --v236;
      }
      while (v236);
      goto LABEL_201;
    }
    if (v280 < 8)
    {
      uint64_t v226 = 0;
LABEL_192:
      int v227 = (double *)(a7 + 8 * v226);
      uint64_t v228 = &v282->i32[v226];
      uint64_t v229 = &v281->i32[v226];
      uint64_t v230 = v280 - v226;
      do
      {
        int v232 = *v229++;
        int v231 = v232;
        int v233 = *v228++;
        *v227++ = (double)v233 / (double)v231;
        --v230;
      }
      while (v230);
      goto LABEL_201;
    }
    uint64_t v226 = 0;
    unint64_t v240 = a7 + 8 * v280;
    BOOL v242 = v278 > a7 && (unint64_t)v282 < v240;
    if ((unint64_t)v281 < v240 && v273 > a7) {
      goto LABEL_192;
    }
    if (v242) {
      goto LABEL_192;
    }
    int v244 = v281 + 1;
    uint64_t v245 = v282 + 1;
    uint64_t v246 = (float64x2_t *)(a7 + 32);
    uint64_t v247 = v280 & 0xFFFFFFF8;
    do
    {
      int32x4_t v248 = v244[-1];
      int32x4_t v249 = v245[-1];
      v250.i64[0] = v249.i32[2];
      v250.i64[1] = v249.i32[3];
      float64x2_t v251 = vcvtq_f64_s64(v250);
      v250.i64[0] = v249.i32[0];
      v250.i64[1] = v249.i32[1];
      float64x2_t v252 = vcvtq_f64_s64(v250);
      v250.i64[0] = (int)v245->i64[1];
      v250.i64[1] = (int)HIDWORD(*(unsigned long long *)v245);
      float64x2_t v253 = vcvtq_f64_s64(v250);
      v250.i64[0] = v245->i32[0];
      v250.i64[1] = (int)HIDWORD(v245->i64[0]);
      float64x2_t v254 = vcvtq_f64_s64(v250);
      v250.i64[0] = v248.i32[2];
      v250.i64[1] = v248.i32[3];
      float64x2_t v255 = vcvtq_f64_s64(v250);
      v250.i64[0] = v248.i32[0];
      v250.i64[1] = v248.i32[1];
      float64x2_t v256 = vcvtq_f64_s64(v250);
      v250.i64[0] = (int)v244->i64[1];
      v250.i64[1] = (int)HIDWORD(*(unsigned long long *)v244);
      float64x2_t v257 = vcvtq_f64_s64(v250);
      v250.i64[0] = v244->i32[0];
      v250.i64[1] = (int)HIDWORD(v244->i64[0]);
      v246[-2] = vdivq_f64(v252, v256);
      v246[-1] = vdivq_f64(v251, v255);
      *uint64_t v246 = vdivq_f64(v254, vcvtq_f64_s64(v250));
      v246[1] = vdivq_f64(v253, v257);
      v246 += 4;
      v244 += 2;
      v245 += 2;
      v247 -= 8;
    }
    while (v247);
    uint64_t v226 = v280 & 0xFFFFFFF8;
    if (v270 != v280) {
      goto LABEL_192;
    }
  }
LABEL_201:
  sub_1000CD4D0(v283, v22);
  sub_1000CD4D0(v281, v14);
  return sub_1000CD4D0(v282, v14);
}

void *sub_1000828A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a5;
  int v259 = a4;
  int v9 = a3;
  unsigned __int8 v10 = a2;
  uint64_t v12 = *(int *)(a1 + 1100);
  int32x4_t v248 = *(void **)(a1 + 1432);
  uint64_t v13 = 4 * v12;
  uint64_t v21 = (int32x4_t *)sub_1000CD454(4 * v12, a2, a3, a4, a5, a6, a7, a8);
  unsigned int v262 = v12;
  size_t v22 = 2 * v12;
  uint64_t v246 = v22;
  if (v9)
  {
    uint64_t v261 = (int32x4_t *)sub_1000CD454(v13, v14, v15, v16, v17, v18, v19, v20);
    int v30 = (int32x4_t *)sub_1000CD454(v22, v23, v24, v25, v26, v27, v28, v29);
    float64x2_t v265 = 0;
    int v31 = *(_DWORD *)(a1 + 1072);
    if (v31 < 1) {
      goto LABEL_191;
    }
  }
  else
  {
    int v30 = 0;
    uint64_t v261 = 0;
    float64x2_t v265 = 0;
    int v31 = *(_DWORD *)(a1 + 1072);
    if (v31 < 1) {
      goto LABEL_191;
    }
  }
  uint64_t v244 = v13;
  int v32 = 0;
  int v33 = 0;
  unsigned __int16 v34 = 0;
  int v252 = v10;
  uint64_t v255 = v8;
  uint64_t v35 = &v21->i8[4 * v262];
  uint64_t v257 = 2 * v262;
  int32x4_t v36 = (int32x4_t *)((char *)v30 + v257);
  int32x4_t v37 = (int32x4_t *)((char *)v261 + 4 * v262);
  uint64_t v249 = 2 * v8 + 2;
  BOOL v39 = v261 < (int32x4_t *)v35 && v21 < v37;
  float64x2_t v254 = &v261->i8[4 * v262];
  if (v261 < v36 && v30 < v37) {
    BOOL v39 = 1;
  }
  BOOL v253 = v39;
  unint64_t v260 = (unint64_t)v21 + 4 * v262;
  BOOL v42 = v21 < v36 && v30 < (int32x4_t *)v35;
  BOOL v258 = v42;
  uint64_t v251 = v262 & 0xFFFFFFF0;
  int64x2_t v250 = (int16x8_t *)&v30[1];
  uint64_t v256 = v262 & 0xFFFFFFF8;
  uint64_t v247 = v21 + 2;
  v43.i64[0] = 0x1000000010;
  v43.i64[1] = 0x1000000010;
  int64x2_t v263 = v21;
  float64x2_t v264 = v30;
  do
  {
    if (*(_DWORD *)(a1 + 268)) {
      BOOL v44 = v34 == 0;
    }
    else {
      BOOL v44 = 1;
    }
    uint64_t v45 = v34;
    if (v44) {
      uint64_t v46 = v34;
    }
    else {
      uint64_t v46 = 1;
    }
    if (*(unsigned __int8 *)(*(void *)(a1 + 496) + v46) != v252) {
      goto LABEL_23;
    }
    uint64_t v47 = *(void *)(*v248 + 8 * v34);
    if (*(_DWORD *)(*(void *)(a1 + 1432) + 28))
    {
      if (v34 != sub_1000041DC(a1))
      {
        int v48 = 1;
        int v30 = v264;
        v43.i64[0] = 0x1000000010;
        v43.i64[1] = 0x1000000010;
        if (v47) {
          goto LABEL_55;
        }
        goto LABEL_23;
      }
      int v31 = *(_DWORD *)(a1 + 1072);
      int v30 = v264;
      v43.i64[0] = 0x1000000010;
      v43.i64[1] = 0x1000000010;
    }
    if (v31 <= v32)
    {
      int v48 = 1;
      if (v47) {
        goto LABEL_55;
      }
    }
    else
    {
      if (!*(_DWORD *)(a1 + 1176))
      {
        int v48 = *(unsigned __int16 *)(*(void *)(a1 + 1144) + 2 * v45 + 2)
            - *(unsigned __int16 *)(*(void *)(a1 + 1144) + 2 * v45);
        if (v47) {
          BOOL v51 = *(unsigned __int16 *)(*(void *)(a1 + 1144) + 2 * v45 + 2) == *(unsigned __int16 *)(*(void *)(a1 + 1144) + 2 * v45);
        }
        else {
          BOOL v51 = 1;
        }
        if (v51 || v48 < 1) {
          goto LABEL_23;
        }
LABEL_55:
        uint64_t v53 = 0;
        uint64_t v54 = v48;
        while (2)
        {
          uint64_t v58 = *(void *)(v47 + 8);
          unsigned int v59 = *(__int16 *)(v58 + 2 * v53);
          if (!*(_WORD *)(v58 + 2 * v53)) {
            goto LABEL_59;
          }
          if (v9)
          {
            uint64_t v60 = *(unsigned int *)(a1 + 1100);
            uint64_t v61 = sub_10000507C(a1, v45, v53);
            v43.i64[0] = 0x1000000010;
            v43.i64[1] = 0x1000000010;
            int v30 = v264;
            if ((int)v60 >= 1)
            {
              if (v259)
              {
                uint64_t v62 = (const __int16 *)(v61 + 2 * v255);
                if (v60 < 0x10 || (unint64_t)v264 < v61 + v249 && v62 < &v264->i16[v60])
                {
                  uint64_t v63 = 0;
                  goto LABEL_68;
                }
                uint64_t v63 = v60 & 0x7FFFFFF0;
                int16x8_t v93 = vld1q_dup_s16(v62);
                uint64_t v94 = v60 & 0xFFFFFFF0;
                int v95 = v250;
                do
                {
                  v95[-1] = v93;
                  *int v95 = v93;
                  v95 += 2;
                  v94 -= 16;
                }
                while (v94);
                if (v63 != v60)
                {
LABEL_68:
                  uint64_t v64 = v60 - v63;
                  uint64_t v65 = &v264->i16[v63];
                  do
                  {
                    *v65++ = *v62;
                    --v64;
                  }
                  while (v64);
                }
              }
              else
              {
                uint64_t v79 = 0;
                if (v60 < 0x10) {
                  goto LABEL_91;
                }
                if ((unint64_t)v264 - v61 < 0x20) {
                  goto LABEL_91;
                }
                uint64_t v79 = v60 & 0x7FFFFFF0;
                BOOL v80 = (int16x8_t *)(v61 + 16);
                uint64_t v81 = v60 & 0xFFFFFFF0;
                BOOL v82 = v250;
                do
                {
                  int16x8_t v83 = *v80;
                  v82[-1] = v80[-1];
                  int16x8_t *v82 = v83;
                  v80 += 2;
                  v82 += 2;
                  v81 -= 16;
                }
                while (v81);
                if (v79 != v60)
                {
LABEL_91:
                  uint64_t v84 = v60 - v79;
                  uint64_t v85 = 2 * v79;
                  unsigned int v86 = &v264->i16[v79];
                  uint64_t v87 = (__int16 *)(v61 + v85);
                  do
                  {
                    __int16 v88 = *v87++;
                    *v86++ = v88;
                    --v84;
                  }
                  while (v84);
                }
              }
              v33 += v59;
              if ((int)v262 > 0)
              {
                unint64_t v66 = *(void *)(*(void *)(v47 + 24) + 8 * v53);
                uint64_t v67 = v261;
                unsigned int v68 = 2 * v59;
                if (v262 >= 8) {
                  goto LABEL_106;
                }
                goto LABEL_118;
              }
LABEL_56:
              int v55 = 0;
              char v56 = 0;
              uint64_t v57 = qword_100101CC0;
              if (qword_100101CC0)
              {
LABEL_57:
                if (*(_DWORD *)(v57 + 3740))
                {
                  uint64_t v21 = v263;
                  goto LABEL_59;
                }
              }
LABEL_126:
              sub_1000043BC(a1, v45, v53, (unint64_t *)&v265);
              unint64_t v118 = (unint64_t)v265;
              if (v56)
              {
                int v30 = v264;
                if (v55)
                {
                  uint64_t v21 = v263;
                  if (v262 < 8 || v263 < (int32x4_t *)&v265->i8[v262] && (unint64_t)v265 < v260)
                  {
                    uint64_t v119 = 0;
                    v43.i64[0] = 0x1000000010;
                    v43.i64[1] = 0x1000000010;
                    goto LABEL_132;
                  }
                  int32x4_t v158 = vdupq_n_s32(v59);
                  if (v262 < 0x10)
                  {
                    uint64_t v159 = 0;
                    v43.i64[0] = 0x1000000010;
                    v43.i64[1] = 0x1000000010;
LABEL_157:
                    uint64_t v160 = (uint64_t *)(v118 + v159);
                    uint64_t v161 = (int32x4_t *)((char *)v263 + 4 * v159);
                    uint64_t v162 = v159 - (v262 & 0xFFFFFFF8);
                    do
                    {
                      uint64_t v163 = *v160++;
                      v116.i64[0] = v163;
                      int32x4_t v164 = (int32x4_t)vqtbl1q_s8((int8x16_t)v116, (int8x16_t)xmmword_1000F4800);
                      int32x4_t v116 = (int32x4_t)vqtbl1q_s8((int8x16_t)v116, (int8x16_t)xmmword_1000F4810);
                      int32x4_t v165 = vmlaq_s32(v161[1], v158, v164);
                      *uint64_t v161 = vmlaq_s32(*v161, v158, v116);
                      v161[1] = v165;
                      v161 += 2;
                      v162 += 8;
                    }
                    while (v162);
                    uint64_t v119 = v262 & 0xFFFFFFF8;
                    if (v256 != v262)
                    {
LABEL_132:
                      uint64_t v120 = v262 - v119;
                      uint64_t v121 = &v263->i32[v119];
                      uint64_t v122 = (unsigned __int8 *)(v118 + v119);
                      do
                      {
                        int v123 = *v122++;
                        *v121++ += v123 * v59;
                        --v120;
                      }
                      while (v120);
                    }
LABEL_59:
                    if (++v53 == v54) {
                      goto LABEL_23;
                    }
                    continue;
                  }
                  uint64_t v179 = v262 & 0xFFFFFFF0;
                  int32x4_t v180 = v263;
                  int32x4_t v181 = v265;
                  do
                  {
                    int8x16_t v182 = *v181++;
                    int32x4_t v116 = (int32x4_t)vqtbl1q_s8(v182, (int8x16_t)xmmword_1000F47F0);
                    int32x4_t v183 = vmlaq_s32(v180[3], v158, (int32x4_t)vqtbl1q_s8(v182, (int8x16_t)xmmword_1000F47E0));
                    int32x4_t v184 = vmlaq_s32(v180[1], v158, (int32x4_t)vqtbl1q_s8(v182, (int8x16_t)xmmword_1000F4800));
                    int32x4_t v185 = vmlaq_s32(v180[2], v158, v116);
                    int32x4_t *v180 = vmlaq_s32(*v180, v158, (int32x4_t)vqtbl1q_s8(v182, (int8x16_t)xmmword_1000F4810));
                    v180[1] = v184;
                    v180[2] = v185;
                    v180[3] = v183;
                    v180 += 4;
                    v179 -= 16;
                  }
                  while (v179);
                  uint64_t v119 = v262 & 0xFFFFFFF0;
                  if (v251 != v262)
                  {
                    uint64_t v159 = v262 & 0xFFFFFFF0;
                    v43.i64[0] = 0x1000000010;
                    v43.i64[1] = 0x1000000010;
                    if ((v262 & 8) == 0) {
                      goto LABEL_132;
                    }
                    goto LABEL_157;
                  }
LABEL_150:
                  v43.i64[0] = 0x1000000010;
                  v43.i64[1] = 0x1000000010;
                  goto LABEL_59;
                }
LABEL_149:
                uint64_t v21 = v263;
                goto LABEL_150;
              }
              int v30 = v264;
              if (!v55) {
                goto LABEL_149;
              }
              unsigned int v124 = 2 * v59;
              uint64_t v21 = v263;
              if (v262 < 8) {
                goto LABEL_143;
              }
              BOOL v125 = v263 >= (int32x4_t *)&v265->i8[v262] || (unint64_t)v265 >= v260;
              char v126 = v258;
              if (!v125) {
                char v126 = 1;
              }
              if (v126)
              {
LABEL_143:
                uint64_t v127 = 0;
                goto LABEL_144;
              }
              int32x4_t v166 = vdupq_n_s32(v124);
              if (v262 >= 0x10)
              {
                uint64_t v186 = v262 & 0xFFFFFFF0;
                int32x4_t v187 = v263;
                int32x4_t v188 = v265;
                int32x4_t v189 = v264;
                do
                {
                  int32x4_t v191 = *v189;
                  int32x4_t v190 = v189[1];
                  v189 += 2;
                  int32x4_t v192 = (int32x4_t)vmovl_high_u16((uint16x8_t)v191);
                  int32x4_t v193 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v190.i8);
                  int8x16_t v194 = *v188++;
                  v195.i64[0] = 0x1000000010;
                  v195.i64[1] = 0x1000000010;
                  int32x4_t v196 = vmlaq_s32(v195, vmulq_s32(v166, (int32x4_t)vmovl_u16(*(uint16x4_t *)v191.i8)), (int32x4_t)vqtbl1q_s8(v194, (int8x16_t)xmmword_1000F4810));
                  v191.i64[0] = 0x1000000010;
                  v191.i64[1] = 0x1000000010;
                  int32x4_t v197 = vmlaq_s32(v191, vmulq_s32(v166, (int32x4_t)vmovl_high_u16((uint16x8_t)v190)), (int32x4_t)vqtbl1q_s8(v194, (int8x16_t)xmmword_1000F47E0));
                  v190.i64[0] = 0x1000000010;
                  v190.i64[1] = 0x1000000010;
                  int32x4_t v198 = vmlaq_s32(v190, vmulq_s32(v166, v193), (int32x4_t)vqtbl1q_s8(v194, (int8x16_t)xmmword_1000F47F0));
                  v193.i64[0] = 0x1000000010;
                  v193.i64[1] = 0x1000000010;
                  int32x4_t v199 = vmlaq_s32(v193, vmulq_s32(v166, v192), (int32x4_t)vqtbl1q_s8(v194, (int8x16_t)xmmword_1000F4800));
                  int32x4_t v200 = v187[1];
                  int32x4_t v201 = vsraq_n_s32(*v187, (int32x4_t)vsraq_n_u32((uint32x4_t)v196, (uint32x4_t)vcltzq_s32(v196), 0x1BuLL), 5uLL);
                  int32x4_t v202 = vsraq_n_s32(v187[3], (int32x4_t)vsraq_n_u32((uint32x4_t)v197, (uint32x4_t)vcltzq_s32(v197), 0x1BuLL), 5uLL);
                  int8x16_t v117 = (int8x16_t)vsraq_n_s32(v187[2], (int32x4_t)vsraq_n_u32((uint32x4_t)v198, (uint32x4_t)vcltzq_s32(v198), 0x1BuLL), 5uLL);
                  v187[2] = (int32x4_t)v117;
                  v187[3] = v202;
                  *int32x4_t v187 = v201;
                  v187[1] = vsraq_n_s32(v200, (int32x4_t)vsraq_n_u32((uint32x4_t)v199, (uint32x4_t)vcltzq_s32(v199), 0x1BuLL), 5uLL);
                  v187 += 4;
                  v186 -= 16;
                }
                while (v186);
                uint64_t v127 = v262 & 0xFFFFFFF0;
                if (v251 == v262) {
                  goto LABEL_150;
                }
                uint64_t v167 = v262 & 0xFFFFFFF0;
                if ((v262 & 8) != 0) {
                  goto LABEL_163;
                }
              }
              else
              {
                uint64_t v167 = 0;
LABEL_163:
                int32x4_t v168 = (uint16x8_t *)((char *)v264 + 2 * v167);
                int32x4_t v169 = (uint64_t *)(v118 + v167);
                uint64_t v170 = v167 - (v262 & 0xFFFFFFF8);
                int32x4_t v171 = (int32x4_t *)((char *)v263 + 4 * v167);
                do
                {
                  uint16x8_t v172 = *v168++;
                  int32x4_t v173 = (int32x4_t)vmovl_high_u16(v172);
                  int32x4_t v174 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v172.i8);
                  v172.i64[0] = *v169++;
                  v117.i64[0] = v172.i64[0];
                  v175.i64[0] = 0x1000000010;
                  v175.i64[1] = 0x1000000010;
                  int32x4_t v176 = vmlaq_s32(v175, vmulq_s32(v166, v174), (int32x4_t)vqtbl1q_s8(v117, (int8x16_t)xmmword_1000F4810));
                  v174.i64[0] = 0x1000000010;
                  v174.i64[1] = 0x1000000010;
                  int32x4_t v177 = vmlaq_s32(v174, vmulq_s32(v166, v173), (int32x4_t)vqtbl1q_s8(v117, (int8x16_t)xmmword_1000F4800));
                  int8x16_t v117 = (int8x16_t)vsraq_n_s32(*v171, (int32x4_t)vsraq_n_u32((uint32x4_t)v176, (uint32x4_t)vcltzq_s32(v176), 0x1BuLL), 5uLL);
                  int32x4_t v178 = vsraq_n_s32(v171[1], (int32x4_t)vsraq_n_u32((uint32x4_t)v177, (uint32x4_t)vcltzq_s32(v177), 0x1BuLL), 5uLL);
                  *int32x4_t v171 = (int32x4_t)v117;
                  v171[1] = v178;
                  v171 += 2;
                  v170 += 8;
                }
                while (v170);
                uint64_t v127 = v262 & 0xFFFFFFF8;
                if (v256 == v262) {
                  goto LABEL_150;
                }
              }
LABEL_144:
              uint64_t v128 = v262 - v127;
              int32x4_t v129 = &v263->i32[v127];
              uint64_t v130 = (unsigned __int8 *)(v118 + v127);
              uint64_t v131 = (unsigned __int16 *)v264 + v127;
              do
              {
                int v133 = *v131++;
                int v132 = v133;
                int v134 = *v130++;
                int v135 = v124 * v132 * v134;
                int v136 = v135 + 16;
                BOOL v50 = v135 < -16;
                int v137 = v135 + 47;
                if (!v50) {
                  int v137 = v136;
                }
                *v129++ += v137 >> 5;
                --v128;
              }
              while (v128);
              goto LABEL_150;
            }
          }
          break;
        }
        v33 += v59;
        unint64_t v66 = *(void *)(*(void *)(v47 + 24) + 8 * v53);
        if (v30)
        {
          uint64_t v67 = v261;
          if ((int)v262 < 1) {
            goto LABEL_56;
          }
          unsigned int v68 = 2 * v59;
          if (v262 < 8) {
            goto LABEL_118;
          }
LABEL_106:
          BOOL v96 = (unint64_t)v67 >= v66 + v257 || v66 >= (unint64_t)v254;
          int v97 = v253;
          if (!v96) {
            int v97 = 1;
          }
          if ((unint64_t)v21 >= v66 + v257 || v66 >= v260) {
            int v99 = v97;
          }
          else {
            int v99 = 1;
          }
          if ((v99 | v258))
          {
LABEL_118:
            uint64_t v100 = 0;
LABEL_119:
            uint64_t v101 = v262 - v100;
            uint64_t v102 = &v21->i32[v100];
            uint64_t v103 = v100;
            uint64_t v104 = (__int16 *)(v66 + 2 * v100);
            uint64_t v105 = &v67->i32[v100];
            int v106 = &v30->u16[v103];
            do
            {
              int v107 = v68 * *v106;
              int v108 = v107 + 16;
              BOOL v50 = v107 < -16;
              int v109 = v107 + 47;
              if (!v50) {
                int v109 = v108;
              }
              *v105++ += v109 >> 5;
              int v111 = *v106++;
              int v110 = v111;
              int v112 = *v104++;
              int v113 = 2 * v110 * v112;
              int v114 = v113 + 16;
              BOOL v50 = v113 < -16;
              int v115 = v113 + 47;
              if (!v50) {
                int v115 = v114;
              }
              *v102++ += v115 >> 5;
              --v101;
            }
            while (v101);
          }
          else
          {
            uint64_t v138 = v262 & 0xFFFFFFF8;
            int32x4_t v139 = vdupq_n_s32(v68);
            int32x4_t v140 = v21;
            int32x4_t v141 = (int16x8_t *)v66;
            int32x4_t v142 = v67;
            int32x4_t v143 = (uint16x8_t *)v30;
            do
            {
              uint16x8_t v144 = *v143++;
              int32x4_t v145 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v144.i8);
              int32x4_t v146 = (int32x4_t)vmovl_high_u16(v144);
              v147.i64[0] = 0x1000000010;
              v147.i64[1] = 0x1000000010;
              int32x4_t v148 = vmlaq_s32(v147, v139, v145);
              v149.i64[0] = 0x1000000010;
              v149.i64[1] = 0x1000000010;
              int32x4_t v150 = vmlaq_s32(v149, v139, v146);
              int32x4_t v151 = vsraq_n_s32(v142[1], (int32x4_t)vsraq_n_u32((uint32x4_t)v150, (uint32x4_t)vcltzq_s32(v150), 0x1BuLL), 5uLL);
              *int32x4_t v142 = vsraq_n_s32(*v142, (int32x4_t)vsraq_n_u32((uint32x4_t)v148, (uint32x4_t)vcltzq_s32(v148), 0x1BuLL), 5uLL);
              v142[1] = v151;
              v142 += 2;
              int16x8_t v152 = *v141++;
              int32x4_t v153 = vmulq_s32(v146, vmovl_high_s16(v152));
              int32x4_t v154 = vmulq_s32(v145, vmovl_s16(*(int16x4_t *)v152.i8));
              int32x4_t v155 = vaddq_s32(vaddq_s32(v154, v154), v43);
              int32x4_t v156 = vaddq_s32(vaddq_s32(v153, v153), v43);
              int32x4_t v157 = vsraq_n_s32(v140[1], (int32x4_t)vsraq_n_u32((uint32x4_t)v156, (uint32x4_t)vcltzq_s32(v156), 0x1BuLL), 5uLL);
              *int32x4_t v140 = vsraq_n_s32(*v140, (int32x4_t)vsraq_n_u32((uint32x4_t)v155, (uint32x4_t)vcltzq_s32(v155), 0x1BuLL), 5uLL);
              v140[1] = v157;
              v140 += 2;
              v138 -= 8;
            }
            while (v138);
            uint64_t v100 = v262 & 0xFFFFFFF8;
            if (v256 != v262) {
              goto LABEL_119;
            }
          }
          char v56 = 0;
          int v55 = 1;
          uint64_t v57 = qword_100101CC0;
          if (qword_100101CC0) {
            goto LABEL_57;
          }
          goto LABEL_126;
        }
        if ((int)v262 < 1)
        {
          int v55 = 0;
          char v56 = 1;
          uint64_t v57 = qword_100101CC0;
          if (qword_100101CC0) {
            goto LABEL_57;
          }
          goto LABEL_126;
        }
        if (v262 < 0x10 || ((unint64_t)v21 < v66 + v257 ? (BOOL v69 = v66 >= v260) : (BOOL v69 = 1), !v69))
        {
          uint64_t v78 = 0;
          goto LABEL_95;
        }
        uint64_t v70 = (int16x4_t *)(v66 + 16);
        uint64_t v71 = v262 & 0xFFFFFFF0;
        int8x16_t v72 = v247;
        do
        {
          int16x8_t v73 = *(int16x8_t *)v70[-2].i8;
          int32x4_t v74 = vaddw_s16(v72[-2], *(int16x4_t *)v73.i8);
          int32x4_t v75 = vaddw_high_s16(v72[-1], v73);
          int32x4_t v76 = vaddw_s16(*v72, *v70);
          int32x4_t v77 = vaddw_high_s16(v72[1], *(int16x8_t *)v70->i8);
          v72[-2] = v74;
          v72[-1] = v75;
          *int8x16_t v72 = v76;
          v72[1] = v77;
          v72 += 4;
          v70 += 4;
          v71 -= 16;
        }
        while (v71);
        uint64_t v78 = v262 & 0xFFFFFFF0;
        if (v251 != v262)
        {
LABEL_95:
          uint64_t v89 = v262 - v78;
          int v90 = &v21->i32[v78];
          int v91 = (__int16 *)(v66 + 2 * v78);
          do
          {
            int v92 = *v91++;
            *v90++ += v92;
            --v89;
          }
          while (v89);
        }
        int v55 = 1;
        char v56 = 1;
        uint64_t v57 = qword_100101CC0;
        if (qword_100101CC0) {
          goto LABEL_57;
        }
        goto LABEL_126;
      }
      int v48 = *(_DWORD *)(*(void *)(a1 + 1160) + 4 * v45 + 4) - *(_DWORD *)(*(void *)(a1 + 1160) + 4 * v45);
      if (v47) {
        BOOL v49 = *(_DWORD *)(*(void *)(a1 + 1160) + 4 * v45 + 4) == *(_DWORD *)(*(void *)(a1 + 1160) + 4 * v45);
      }
      else {
        BOOL v49 = 1;
      }
      BOOL v50 = v49 || v48 < 1;
      if (!v50) {
        goto LABEL_55;
      }
    }
LABEL_23:
    unsigned __int16 v34 = v45 + 1;
    int v32 = (unsigned __int16)(v45 + 1);
    int v31 = *(_DWORD *)(a1 + 1072);
  }
  while (v31 > v32);
  uint64_t v13 = v244;
  if (v33 >= 1 && (int)v262 >= 1)
  {
    if (!v9)
    {
      double v211 = (double)v33;
      if (v262 >= 8 && (v260 <= a6 || (unint64_t)v21 >= a6 + 8 * v262))
      {
        float64x2_t v235 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v211, 0);
        uint64_t v236 = v21 + 1;
        double v237 = (float64x2_t *)(a6 + 32);
        uint64_t v238 = v262 & 0xFFFFFFF8;
        do
        {
          int32x4_t v239 = v236[-1];
          v240.i64[0] = v239.i32[2];
          v240.i64[1] = v239.i32[3];
          float64x2_t v241 = vcvtq_f64_s64(v240);
          v240.i64[0] = v239.i32[0];
          v240.i64[1] = v239.i32[1];
          float64x2_t v242 = vcvtq_f64_s64(v240);
          v240.i64[0] = (int)v236->i64[1];
          v240.i64[1] = (int)HIDWORD(*(unsigned long long *)v236);
          float64x2_t v243 = vcvtq_f64_s64(v240);
          v240.i64[0] = v236->i32[0];
          v240.i64[1] = (int)HIDWORD(v236->i64[0]);
          v237[-2] = vdivq_f64(v242, v235);
          v237[-1] = vdivq_f64(v241, v235);
          *double v237 = vdivq_f64(vcvtq_f64_s64(v240), v235);
          v237[1] = vdivq_f64(v243, v235);
          v237 += 4;
          v236 += 2;
          v238 -= 8;
        }
        while (v238);
        if (v256 == v262) {
          goto LABEL_191;
        }
      }
      else
      {
        uint64_t v256 = 0;
      }
      uint64_t v212 = &v21->i32[v256];
      uint64_t v213 = v262 - v256;
      uint64_t v214 = (double *)(a6 + 8 * v256);
      do
      {
        int v215 = *v212++;
        *v214++ = (double)v215 / v211;
        --v213;
      }
      while (v213);
      goto LABEL_191;
    }
    if (v262 < 8)
    {
      uint64_t v203 = 0;
LABEL_182:
      int32x4_t v204 = (double *)(a6 + 8 * v203);
      unint64_t v205 = &v21->i32[v203];
      uint64_t v206 = &v261->i32[v203];
      uint64_t v207 = v262 - v203;
      do
      {
        int v209 = *v206++;
        int v208 = v209;
        int v210 = *v205++;
        *v204++ = (double)v210 / (double)v208;
        --v207;
      }
      while (v207);
      goto LABEL_191;
    }
    uint64_t v203 = 0;
    unint64_t v217 = a6 + 8 * v262;
    BOOL v219 = v260 > a6 && (unint64_t)v21 < v217;
    if ((unint64_t)v261 < v217 && (unint64_t)v254 > a6) {
      goto LABEL_182;
    }
    if (v219) {
      goto LABEL_182;
    }
    uint64_t v221 = v261 + 1;
    int8x16_t v222 = v21 + 1;
    int32x4_t v223 = (float64x2_t *)(a6 + 32);
    uint64_t v224 = v262 & 0xFFFFFFF8;
    do
    {
      int32x4_t v225 = v221[-1];
      int32x4_t v226 = v222[-1];
      v227.i64[0] = v226.i32[2];
      v227.i64[1] = v226.i32[3];
      float64x2_t v228 = vcvtq_f64_s64(v227);
      v227.i64[0] = v226.i32[0];
      v227.i64[1] = v226.i32[1];
      float64x2_t v229 = vcvtq_f64_s64(v227);
      v227.i64[0] = (int)v222->i64[1];
      v227.i64[1] = (int)HIDWORD(*(unsigned long long *)v222);
      float64x2_t v230 = vcvtq_f64_s64(v227);
      v227.i64[0] = v222->i32[0];
      v227.i64[1] = (int)HIDWORD(v222->i64[0]);
      float64x2_t v231 = vcvtq_f64_s64(v227);
      v227.i64[0] = v225.i32[2];
      v227.i64[1] = v225.i32[3];
      float64x2_t v232 = vcvtq_f64_s64(v227);
      v227.i64[0] = v225.i32[0];
      v227.i64[1] = v225.i32[1];
      float64x2_t v233 = vcvtq_f64_s64(v227);
      v227.i64[0] = (int)v221->i64[1];
      v227.i64[1] = (int)HIDWORD(*(unsigned long long *)v221);
      float64x2_t v234 = vcvtq_f64_s64(v227);
      v227.i64[0] = v221->i32[0];
      v227.i64[1] = (int)HIDWORD(v221->i64[0]);
      v223[-2] = vdivq_f64(v229, v233);
      v223[-1] = vdivq_f64(v228, v232);
      float64x2_t *v223 = vdivq_f64(v231, vcvtq_f64_s64(v227));
      v223[1] = vdivq_f64(v230, v234);
      v223 += 4;
      v221 += 2;
      v222 += 2;
      v224 -= 8;
    }
    while (v224);
    uint64_t v203 = v262 & 0xFFFFFFF8;
    if (v256 != v262) {
      goto LABEL_182;
    }
  }
LABEL_191:
  sub_1000CD4D0(v30, v246);
  sub_1000CD4D0(v261, v13);
  return sub_1000CD4D0(v21, v13);
}

void *sub_1000834C0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, int *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v151 = a4;
  v152[0] = 0;
  unsigned __int8 v9 = a3;
  uint64_t v11 = *(unsigned int *)(a1 + 1100);
  int v136 = *(_DWORD *)(a1 + 1404);
  uint64_t v12 = (float64x2_t *)sub_1000CD454(8 * (int)v11, a2, a3, a4, (uint64_t)a5, a6, a7, a8);
  uint64_t v137 = 8 * (int)v11;
  uint64_t v20 = (float64x2_t *)sub_1000CD454(v137, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v21 = *(void *)(a1 + 336);
  size_t v22 = *(void **)(a1 + 1432);
  uint64_t v150 = (uint64_t)a5;
  sub_1000C14C8(a5, 0.0);
  int v23 = *(_DWORD *)(a1 + 1072);
  if (v23 >= 1)
  {
    int v24 = 0;
    unsigned __int16 v25 = 0;
    int v26 = v9;
    uint64_t v27 = 8 * v11;
    uint64_t v28 = (float64x2_t *)((char *)v20 + v27);
    uint64_t v29 = (float64x2_t *)((char *)v12 + v27);
    uint64_t v145 = 2 * v11;
    unint64_t v30 = a2 + v27;
    BOOL v32 = v20 < v29 && v12 < v28;
    unint64_t v146 = (unint64_t)v29;
    unint64_t v147 = (unint64_t)v28;
    BOOL v34 = (unint64_t)v20 < v30 && (unint64_t)v28 > a2;
    BOOL v143 = v34;
    BOOL v144 = v32;
    BOOL v36 = (unint64_t)v12 < v30 && (unint64_t)v29 > a2;
    BOOL v142 = v36;
    uint64_t v141 = v11 & 0xFFFFFFF0;
    uint64_t v140 = v11 & 0xFFFFFFF8;
    uint64_t v148 = v11;
    int32x4_t v139 = v22;
    int v138 = v9;
    do
    {
      if (*(_DWORD *)(a1 + 268)) {
        BOOL v37 = v25 == 0;
      }
      else {
        BOOL v37 = 1;
      }
      uint64_t v38 = v25;
      if (v37) {
        uint64_t v39 = v25;
      }
      else {
        uint64_t v39 = 1;
      }
      if (*(unsigned __int8 *)(*(void *)(a1 + 496) + v39) != v26) {
        goto LABEL_22;
      }
      uint64_t v40 = *(void *)(*v22 + 8 * v25);
      if (*(_DWORD *)(*(void *)(a1 + 1432) + 28))
      {
        if (v25 != sub_1000041DC(a1)) {
          goto LABEL_40;
        }
        int v23 = *(_DWORD *)(a1 + 1072);
      }
      if (v23 <= v24)
      {
LABEL_40:
        int v41 = 1;
        if (!v40) {
          goto LABEL_22;
        }
        goto LABEL_41;
      }
      if (*(_DWORD *)(a1 + 1176))
      {
        int v41 = *(_DWORD *)(*(void *)(a1 + 1160) + 4 * v38 + 4) - *(_DWORD *)(*(void *)(a1 + 1160) + 4 * v38);
        if (v40) {
          BOOL v42 = *(_DWORD *)(*(void *)(a1 + 1160) + 4 * v38 + 4) == *(_DWORD *)(*(void *)(a1 + 1160) + 4 * v38);
        }
        else {
          BOOL v42 = 1;
        }
        if (v42) {
          goto LABEL_22;
        }
      }
      else
      {
        int v41 = *(unsigned __int16 *)(*(void *)(a1 + 1144) + 2 * v38 + 2)
            - *(unsigned __int16 *)(*(void *)(a1 + 1144) + 2 * v38);
        if (v40) {
          BOOL v131 = *(unsigned __int16 *)(*(void *)(a1 + 1144) + 2 * v38 + 2) == *(unsigned __int16 *)(*(void *)(a1 + 1144) + 2 * v38);
        }
        else {
          BOOL v131 = 1;
        }
        if (v131) {
          goto LABEL_22;
        }
      }
LABEL_41:
      if (v41 >= 1)
      {
        uint64_t v43 = v41;
        if ((int)v148 >= 1)
        {
          uint64_t v44 = 0;
          while (1)
          {
            signed int v45 = *(__int16 *)(*(void *)(v40 + 8) + 2 * v44);
            if (v151 == -1)
            {
              unsigned int v46 = 0;
              if (!*(_WORD *)(*(void *)(v40 + 8) + 2 * v44)) {
                goto LABEL_45;
              }
            }
            else
            {
              unsigned int v46 = *(unsigned __int16 *)(sub_10000507C(a1, v38, v44) + 2 * v151);
              if (!v45) {
                goto LABEL_45;
              }
            }
            sub_1000043BC(a1, v38, v44, v152);
            unint64_t v48 = *(void *)(*(void *)(v40 + 24) + 8 * v44);
            double v49 = (double)v45;
            double v50 = -(double)v45;
            double v51 = (double)v46;
            if (v151 == -1) {
              double v51 = 1.0;
            }
            unint64_t v52 = v152[0];
            if (v148 < 8) {
              goto LABEL_75;
            }
            unint64_t v53 = v152[0] + v148;
            BOOL v54 = (unint64_t)v20 >= v48 + v145 || v48 >= v147;
            int v55 = v144;
            if (!v54) {
              int v55 = 1;
            }
            if ((unint64_t)v20 < v53 && v152[0] < v147) {
              int v55 = 1;
            }
            int v57 = v55 | v143;
            BOOL v58 = (unint64_t)v12 >= v48 + v145 || v48 >= v146;
            int v59 = v58 ? v57 : 1;
            if ((unint64_t)v12 < v53 && v152[0] < v146) {
              int v59 = 1;
            }
            if ((v59 | v142))
            {
LABEL_75:
              uint64_t v61 = 0;
            }
            else
            {
              int32x4_t v74 = vdupq_n_s32(v45);
              if (v148 < 0x10)
              {
                uint64_t v75 = 0;
LABEL_85:
                float64x2_t v107 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v50, 0);
                int v108 = (uint64_t *)(v52 + v75);
                int v109 = (int16x8_t *)(v48 + 2 * v75);
                float64x2_t v110 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v49, 0);
                int v111 = (float64x2_t *)(a2 + 8 * v75);
                int v112 = (float64x2_t *)((char *)v20 + 8 * v75);
                int v113 = (int8x16_t *)&v12->f64[v75];
                uint64_t v114 = v75 - v140;
                do
                {
                  uint64_t v115 = *v108++;
                  v47.i64[0] = v115;
                  int16x8_t v116 = *v109++;
                  int32x4_t v117 = vaddw_s16(vmulq_s32(v74, (int32x4_t)vqtbl1q_s8(v47, (int8x16_t)xmmword_1000F4810)), *(int16x4_t *)v116.i8);
                  int32x4_t v118 = vaddw_high_s16(vmulq_s32(v74, (int32x4_t)vqtbl1q_s8(v47, (int8x16_t)xmmword_1000F4800)), v116);
                  v119.i64[0] = v118.i32[2];
                  v119.i64[1] = v118.i32[3];
                  float64x2_t v120 = vcvtq_f64_s64(v119);
                  v119.i64[0] = v117.i32[2];
                  v119.i64[1] = v117.i32[3];
                  float64x2_t v121 = vcvtq_f64_s64(v119);
                  v119.i64[0] = v118.i32[0];
                  v119.i64[1] = v118.i32[1];
                  float64x2_t v122 = vcvtq_f64_s64(v119);
                  v119.i64[0] = v117.i32[0];
                  v119.i64[1] = v117.i32[1];
                  float64x2_t v124 = v111[2];
                  float64x2_t v123 = v111[3];
                  float64x2_t v126 = *v111;
                  float64x2_t v125 = v111[1];
                  v111 += 4;
                  float64x2_t v127 = vmlaq_f64(vcvtq_f64_s64(v119), v126, v107);
                  float64x2_t v128 = vmlaq_f64(v122, v124, v107);
                  float64x2_t v129 = vmlaq_f64(v121, v125, v107);
                  float64x2_t v130 = vmlaq_f64(v120, v123, v107);
                  v112[2] = v128;
                  v112[3] = v130;
                  *int v112 = v127;
                  v112[1] = v129;
                  v112 += 4;
                  int8x16_t v47 = (int8x16_t)vmulq_n_f64(vdivq_f64(v128, v110), v51);
                  v113[2] = v47;
                  v113[3] = (int8x16_t)vmulq_n_f64(vdivq_f64(v130, v110), v51);
                  *(float64x2_t *)int v113 = vmulq_n_f64(vdivq_f64(v127, v110), v51);
                  v113[1] = (int8x16_t)vmulq_n_f64(vdivq_f64(v129, v110), v51);
                  v113 += 4;
                  v114 += 8;
                }
                while (v114);
                uint64_t v61 = v140;
                if (v140 == v148) {
                  goto LABEL_44;
                }
                goto LABEL_76;
              }
              float64x2_t v76 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v50, 0);
              uint64_t v77 = v141;
              uint64_t v78 = v12;
              float64x2_t v79 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v49, 0);
              BOOL v80 = v20;
              uint64_t v81 = (float64x2_t *)a2;
              BOOL v82 = (int8x16_t *)v152[0];
              int16x8_t v83 = *(int16x8_t **)(*(void *)(v40 + 24) + 8 * v44);
              do
              {
                int8x16_t v84 = *v82++;
                int16x8_t v85 = *v83;
                int16x8_t v86 = v83[1];
                v83 += 2;
                int32x4_t v87 = vaddw_high_s16(vmulq_s32(v74, (int32x4_t)vqtbl1q_s8(v84, (int8x16_t)xmmword_1000F47E0)), v86);
                int32x4_t v88 = vaddw_s16(vmulq_s32(v74, (int32x4_t)vqtbl1q_s8(v84, (int8x16_t)xmmword_1000F4810)), *(int16x4_t *)v85.i8);
                int32x4_t v89 = vaddw_high_s16(vmulq_s32(v74, (int32x4_t)vqtbl1q_s8(v84, (int8x16_t)xmmword_1000F4800)), v85);
                int32x4_t v90 = vaddw_s16(vmulq_s32(v74, (int32x4_t)vqtbl1q_s8(v84, (int8x16_t)xmmword_1000F47F0)), *(int16x4_t *)v86.i8);
                v91.i64[0] = v90.i32[2];
                v91.i64[1] = v90.i32[3];
                int64x2_t v92 = v91;
                v91.i64[0] = v89.i32[2];
                v91.i64[1] = v89.i32[3];
                float64x2_t v93 = vcvtq_f64_s64(v91);
                v91.i64[0] = v88.i32[2];
                v91.i64[1] = v88.i32[3];
                float64x2_t v94 = vcvtq_f64_s64(v91);
                v91.i64[0] = v87.i32[2];
                v91.i64[1] = v87.i32[3];
                int64x2_t v95 = v91;
                v91.i64[0] = v90.i32[0];
                v91.i64[1] = v90.i32[1];
                float64x2_t v96 = vcvtq_f64_s64(v91);
                v91.i64[0] = v89.i32[0];
                v91.i64[1] = v89.i32[1];
                float64x2_t v97 = vcvtq_f64_s64(v91);
                v91.i64[0] = v88.i32[0];
                v91.i64[1] = v88.i32[1];
                int64x2_t v98 = v91;
                v91.i64[0] = v87.i32[0];
                v91.i64[1] = v87.i32[1];
                float64x2_t v99 = vmlaq_f64(vcvtq_f64_s64(v91), v81[6], v76);
                float64x2_t v100 = vmlaq_f64(vcvtq_f64_s64(v98), *v81, v76);
                float64x2_t v101 = vmlaq_f64(v97, v81[2], v76);
                float64x2_t v102 = vmlaq_f64(v96, v81[4], v76);
                float64x2_t v103 = vmlaq_f64(vcvtq_f64_s64(v95), v81[7], v76);
                float64x2_t v104 = vmlaq_f64(v94, v81[1], v76);
                float64x2_t v105 = vmlaq_f64(v93, v81[3], v76);
                float64x2_t v106 = vmlaq_f64(vcvtq_f64_s64(v92), v81[5], v76);
                v80[4] = v102;
                v80[5] = v106;
                v80[2] = v101;
                v80[3] = v105;
                *BOOL v80 = v100;
                v80[1] = v104;
                v80[6] = v99;
                v80[7] = v103;
                v78[4] = vmulq_n_f64(vdivq_f64(v102, v79), v51);
                v78[5] = vmulq_n_f64(vdivq_f64(v106, v79), v51);
                v78[2] = vmulq_n_f64(vdivq_f64(v101, v79), v51);
                v78[3] = vmulq_n_f64(vdivq_f64(v105, v79), v51);
                int8x16_t v47 = (int8x16_t)vmulq_n_f64(vdivq_f64(v104, v79), v51);
                *uint64_t v78 = vmulq_n_f64(vdivq_f64(v100, v79), v51);
                v78[1] = (float64x2_t)v47;
                v78[6] = vmulq_n_f64(vdivq_f64(v99, v79), v51);
                v78[7] = vmulq_n_f64(vdivq_f64(v103, v79), v51);
                v81 += 8;
                v80 += 8;
                v78 += 8;
                v77 -= 16;
              }
              while (v77);
              if (v141 == v148) {
                goto LABEL_44;
              }
              uint64_t v61 = v141;
              uint64_t v75 = v141;
              if ((v148 & 8) != 0) {
                goto LABEL_85;
              }
            }
LABEL_76:
            uint64_t v62 = (__int16 *)(v48 + 2 * v61);
            uint64_t v63 = (unsigned __int8 *)(v52 + v61);
            uint64_t v64 = (double *)(a2 + 8 * v61);
            uint64_t v65 = &v20->f64[v61];
            unint64_t v66 = &v12->f64[v61];
            uint64_t v67 = v148 - v61;
            do
            {
              int v69 = *v62++;
              int v68 = v69;
              int v70 = *v63++;
              int v71 = v68 + v70 * v45;
              double v72 = *v64++;
              double v73 = (double)v71 + v50 * v72;
              *v65++ = v73;
              *v66++ = v51 * (v73 / v49);
              --v67;
            }
            while (v67);
LABEL_44:
            sub_1000C1540((uint64_t)v12, (uint64_t)v20, v21);
            sub_1000C1D08(v150, v21, v150);
LABEL_45:
            if (++v44 == v43) {
              goto LABEL_21;
            }
          }
        }
        if (v151 == -1)
        {
          for (uint64_t i = 0; i != v43; ++i)
          {
            if (*(_WORD *)(*(void *)(v40 + 8) + 2 * i))
            {
              sub_1000043BC(a1, v38, i, v152);
              sub_1000C1540((uint64_t)v12, (uint64_t)v20, v21);
              sub_1000C1D08(v150, v21, v150);
            }
          }
        }
        else
        {
          for (uint64_t j = 0; j != v43; ++j)
          {
            int v133 = *(unsigned __int16 *)(*(void *)(v40 + 8) + 2 * j);
            sub_10000507C(a1, v38, j);
            if (v133)
            {
              sub_1000043BC(a1, v38, j, v152);
              sub_1000C1540((uint64_t)v12, (uint64_t)v20, v21);
              sub_1000C1D08(v150, v21, v150);
            }
          }
        }
      }
LABEL_21:
      sub_1000D2974();
      size_t v22 = v139;
      int v26 = v138;
LABEL_22:
      unsigned __int16 v25 = v38 + 1;
      int v24 = (unsigned __int16)(v38 + 1);
      int v23 = *(_DWORD *)(a1 + 1072);
    }
    while (v23 > v24);
  }
  sub_1000C160C(v150, 1.0 / (double)v136);
  sub_1000CD4D0(v20, v137);
  return sub_1000CD4D0(v12, v137);
}

void *sub_100083BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int *a6, uint64_t a7, uint64_t a8)
{
  int v77 = a5;
  LOBYTE(v9) = a4;
  uint64_t v12 = a1;
  uint64_t v13 = *(unsigned int *)(a1 + 1100);
  unint64_t v82 = 0;
  int v72 = *(_DWORD *)(a1 + 1404);
  uint64_t v14 = sub_1000CD454(8 * (int)v13, a2, a3, a4, a5, (uint64_t)a6, a7, a8);
  uint64_t v73 = 8 * (int)v13;
  size_t v22 = sub_1000CD454(v73, v15, v16, v17, v18, v19, v20, v21);
  uint64_t v76 = *(void *)(v12 + 336);
  uint64_t v75 = *(void **)(v12 + 1432);
  uint64_t v78 = (uint64_t)a6;
  sub_1000C14C8(a6, 0.0);
  int v23 = *(_DWORD *)(v12 + 1072);
  if (v23 >= 1)
  {
    int v24 = 0;
    unsigned __int16 v25 = 0;
    int v9 = v9;
    int v74 = v9;
    uint64_t v81 = v12;
    do
    {
      if (*(_DWORD *)(v12 + 268)) {
        BOOL v26 = v25 == 0;
      }
      else {
        BOOL v26 = 1;
      }
      uint64_t v27 = v25;
      if (v26) {
        uint64_t v28 = v25;
      }
      else {
        uint64_t v28 = 1;
      }
      if (*(unsigned __int8 *)(*(void *)(v12 + 496) + v28) != v9) {
        goto LABEL_4;
      }
      uint64_t v29 = *(void *)(*v75 + 8 * v25);
      uint64_t v79 = v29;
      if (*(_DWORD *)(*(void *)(v12 + 1432) + 28))
      {
        if (v25 != sub_1000041DC(v12))
        {
          int v30 = 1;
          uint64_t v29 = v79;
          if (!v79) {
            goto LABEL_4;
          }
          goto LABEL_30;
        }
        int v23 = *(_DWORD *)(v12 + 1072);
        uint64_t v29 = v79;
      }
      if (v23 <= v24)
      {
        int v30 = 1;
        if (!v29) {
          goto LABEL_4;
        }
      }
      else if (*(_DWORD *)(v12 + 1176))
      {
        int v30 = *(_DWORD *)(*(void *)(v12 + 1160) + 4 * v27 + 4) - *(_DWORD *)(*(void *)(v12 + 1160) + 4 * v27);
        if (v29) {
          BOOL v31 = *(_DWORD *)(*(void *)(v12 + 1160) + 4 * v27 + 4) == *(_DWORD *)(*(void *)(v12 + 1160) + 4 * v27);
        }
        else {
          BOOL v31 = 1;
        }
        if (v31) {
          goto LABEL_4;
        }
      }
      else
      {
        int v30 = *(unsigned __int16 *)(*(void *)(v12 + 1144) + 2 * v27 + 2)
            - *(unsigned __int16 *)(*(void *)(v12 + 1144) + 2 * v27);
        if (v29) {
          BOOL v32 = *(unsigned __int16 *)(*(void *)(v12 + 1144) + 2 * v27 + 2) == *(unsigned __int16 *)(*(void *)(v12 + 1144) + 2 * v27);
        }
        else {
          BOOL v32 = 1;
        }
        if (v32) {
          goto LABEL_4;
        }
      }
LABEL_30:
      if (v30 >= 1)
      {
        uint64_t v80 = v30;
        if ((int)v13 > 0)
        {
          uint64_t v33 = 0;
          while (2)
          {
            uint64_t v34 = *(void *)(v29 + 8);
            int v35 = *(__int16 *)(v34 + 2 * v33);
            if (!*(_WORD *)(v34 + 2 * v33)) {
              goto LABEL_34;
            }
            uint64_t v36 = v12;
            uint64_t v37 = v29;
            sub_1000043BC(v36, v27, v33, &v82);
            uint64_t v39 = 0;
            uint64_t v40 = *(void *)(*(void *)(v37 + 24) + 8 * v33);
            unint64_t v41 = v82;
            do
            {
              LOBYTE(v38) = *(unsigned char *)(v41 + v39);
              *(double *)&v14[v39] = (double)*(unint64_t *)&v38 - *(double *)(a2 + 8 * v39);
              int v42 = *(__int16 *)(v40 + 2 * v39);
              if (!qword_100101CC0 || !*(_DWORD *)(qword_100101CC0 + 3740)) {
                v42 += *(unsigned __int8 *)(v41 + v39) * v35;
              }
              double v38 = (double)v42 + -(double)v35 * *(double *)(a3 + 8 * v39);
              *(double *)&v22[v39++] = v38;
            }
            while (v13 != v39);
            uint64_t v43 = v27;
            int v44 = *(_DWORD *)(v81 + 280);
            if (v44) {
              unint64_t v45 = (unint64_t)v14;
            }
            else {
              unint64_t v45 = (unint64_t)v22;
            }
            if (v44) {
              uint64_t v46 = (uint64_t)v22;
            }
            else {
              uint64_t v46 = (uint64_t)v14;
            }
            if (v77 != -1)
            {
              unint64_t v47 = sub_10000507C(v81, v43, v33);
              if (v13 < 8 || v45 < v47 + 2 * v13 && v47 < v45 + 8 * v13)
              {
                uint64_t v48 = 0;
                goto LABEL_53;
              }
              uint64_t v53 = v13 & 0xFFFFFFF8;
              BOOL v54 = (float64x2_t *)v45;
              int v55 = (uint16x8_t *)v47;
              do
              {
                uint16x8_t v56 = *v55++;
                uint32x4_t v57 = vmovl_high_u16(v56);
                v58.i64[0] = v57.u32[2];
                v58.i64[1] = v57.u32[3];
                float64x2_t v59 = vcvtq_f64_u64(v58);
                v58.i64[0] = v57.u32[0];
                v58.i64[1] = v57.u32[1];
                float64x2_t v60 = vcvtq_f64_u64(v58);
                uint32x4_t v61 = vmovl_u16(*(uint16x4_t *)v56.i8);
                v58.i64[0] = v61.u32[2];
                v58.i64[1] = v61.u32[3];
                float64x2_t v62 = vcvtq_f64_u64(v58);
                v58.i64[0] = v61.u32[0];
                v58.i64[1] = v61.u32[1];
                float64x2_t v63 = v54[1];
                float64x2_t v64 = vmulq_f64(*v54, vcvtq_f64_u64(v58));
                float64x2_t v65 = vmulq_f64(v54[3], v59);
                v54[2] = vmulq_f64(v54[2], v60);
                v54[3] = v65;
                *BOOL v54 = v64;
                v54[1] = vmulq_f64(v63, v62);
                v54 += 4;
                v53 -= 8;
              }
              while (v53);
              uint64_t v48 = v13 & 0xFFFFFFF8;
              if (v48 != v13)
              {
LABEL_53:
                double v49 = (unsigned __int16 *)(v47 + 2 * v48);
                uint64_t v50 = v13 - v48;
                double v51 = (double *)(v45 + 8 * v48);
                do
                {
                  unsigned int v52 = *v49++;
                  *double v51 = *v51 * (double)v52;
                  ++v51;
                  --v50;
                }
                while (v50);
              }
            }
            sub_1000C1540(v45, v46, v76);
            sub_1000C1D08(v78, v76, v78);
            uint64_t v27 = v43;
            uint64_t v12 = v81;
            uint64_t v29 = v79;
LABEL_34:
            if (++v33 == v80) {
              goto LABEL_3;
            }
            continue;
          }
        }
        for (uint64_t i = 0; i != v80; ++i)
        {
          if (*(_WORD *)(*(void *)(v29 + 8) + 2 * i))
          {
            sub_1000043BC(v12, v27, i, &v82);
            int v67 = *(_DWORD *)(v12 + 280);
            if (v67) {
              uint64_t v68 = (uint64_t)v14;
            }
            else {
              uint64_t v68 = (uint64_t)v22;
            }
            uint64_t v69 = v27;
            if (v67) {
              uint64_t v70 = (uint64_t)v22;
            }
            else {
              uint64_t v70 = (uint64_t)v14;
            }
            if (v77 != -1) {
              sub_10000507C(v81, v69, i);
            }
            sub_1000C1540(v68, v70, v76);
            sub_1000C1D08(v78, v76, v78);
            uint64_t v27 = v69;
            uint64_t v12 = v81;
            uint64_t v29 = v79;
          }
        }
      }
LABEL_3:
      sub_1000D2974();
      int v9 = v74;
LABEL_4:
      unsigned __int16 v25 = v27 + 1;
      int v24 = (unsigned __int16)(v27 + 1);
      int v23 = *(_DWORD *)(v12 + 1072);
    }
    while (v23 > v24);
  }
  sub_1000C160C(v78, 1.0 / (double)v72);
  sub_1000CD4D0(0, v73);
  sub_1000CD4D0(v22, v73);
  return sub_1000CD4D0(v14, v73);
}

void *sub_100084070(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int *a6, uint64_t a7, uint64_t a8)
{
  int v115 = a5;
  int v9 = a4;
  unsigned __int8 v10 = a3;
  uint64_t v12 = *(unsigned int *)(a1 + 1100);
  int32x4_t v117 = 0;
  int v116 = *(_DWORD *)(a1 + 1404);
  uint64_t v108 = 8 * (int)v12;
  uint64_t v13 = (float64x2_t *)sub_1000CD454(v108, a2, a3, a4, a5, (uint64_t)a6, a7, a8);
  uint64_t v14 = *(void *)(a1 + 336);
  uint64_t v15 = *(void **)(a1 + 1432);
  sub_1000C14C8(a6, 0.0);
  int v16 = *(_DWORD *)(a1 + 1072);
  if (v16 >= 1)
  {
    int v17 = 0;
    unsigned __int16 v18 = 0;
    int v19 = v10;
    uint64_t v20 = 8 * v12;
    unint64_t v112 = (unint64_t)v13 + v20;
    BOOL v22 = (unint64_t)v13 < a2 + v20 && (unint64_t)v13 + v20 > a2;
    char v111 = v22;
    float64x2_t v110 = v15;
    int v109 = v10;
    do
    {
      if (*(_DWORD *)(a1 + 268)) {
        BOOL v23 = v18 == 0;
      }
      else {
        BOOL v23 = 1;
      }
      uint64_t v24 = v18;
      if (v23) {
        uint64_t v25 = v18;
      }
      else {
        uint64_t v25 = 1;
      }
      if (*(unsigned __int8 *)(*(void *)(a1 + 496) + v25) != v19) {
        goto LABEL_10;
      }
      uint64_t v114 = *(void *)(*v15 + 8 * v18);
      if (*(_DWORD *)(*(void *)(a1 + 1432) + 28))
      {
        if (v18 != sub_1000041DC(a1)) {
          goto LABEL_31;
        }
        int v16 = *(_DWORD *)(a1 + 1072);
      }
      if (v16 <= v17)
      {
LABEL_31:
        int v26 = 1;
        if (v114) {
          BOOL v29 = 1;
        }
        else {
          BOOL v29 = v9 == 0;
        }
        if (!v29) {
          goto LABEL_10;
        }
        goto LABEL_38;
      }
      if (*(_DWORD *)(a1 + 1176))
      {
        int v26 = *(_DWORD *)(*(void *)(a1 + 1160) + 4 * v24 + 4) - *(_DWORD *)(*(void *)(a1 + 1160) + 4 * v24);
        if (v114) {
          BOOL v27 = 1;
        }
        else {
          BOOL v27 = v9 == 0;
        }
        if (!v27 || *(_DWORD *)(*(void *)(a1 + 1160) + 4 * v24 + 4) == *(_DWORD *)(*(void *)(a1 + 1160) + 4 * v24)) {
          goto LABEL_10;
        }
      }
      else
      {
        int v26 = *(unsigned __int16 *)(*(void *)(a1 + 1144) + 2 * v24 + 2)
            - *(unsigned __int16 *)(*(void *)(a1 + 1144) + 2 * v24);
        if (v114) {
          BOOL v103 = 1;
        }
        else {
          BOOL v103 = v9 == 0;
        }
        if (!v103
          || *(unsigned __int16 *)(*(void *)(a1 + 1144) + 2 * v24 + 2) == *(unsigned __int16 *)(*(void *)(a1 + 1144)
                                                                                                + 2 * v24))
        {
          goto LABEL_10;
        }
      }
LABEL_38:
      if (v26 >= 1)
      {
        uint64_t v31 = v26;
        if ((int)v12 > 0)
        {
          uint64_t v32 = 0;
          while (2)
          {
            int v33 = v116;
            if (v9) {
              int v33 = *(__int16 *)(*(void *)(v114 + 8) + 2 * v32);
            }
            if (v115 != -1) {
              v33 *= *(unsigned __int16 *)(sub_10000507C(a1, v24, v32) + 2 * v115);
            }
            if (!v33) {
              goto LABEL_42;
            }
            sub_1000043BC(a1, v24, v32, (unint64_t *)&v117);
            unint64_t v34 = (unint64_t)v117;
            if (v12 < 8) {
              goto LABEL_55;
            }
            BOOL v35 = v13 >= (float64x2_t *)&v117->i8[v12] || (unint64_t)v117 >= v112;
            char v36 = v111;
            if (!v35) {
              char v36 = 1;
            }
            if (v36)
            {
LABEL_55:
              uint64_t v37 = 0;
              goto LABEL_56;
            }
            if (v12 >= 0x10)
            {
              uint64_t v67 = v12 & 0xFFFFFFF0;
              uint64_t v68 = v13;
              uint64_t v69 = (float64x2_t *)a2;
              uint64_t v70 = v117;
              do
              {
                int8x16_t v71 = *v70++;
                unint64_t v72 = vextq_s8(v71, v71, 8uLL).u64[0];
                v73.i32[0] = BYTE6(v72);
                v73.i32[1] = HIBYTE(v72);
                int8x8_t v74 = vand_s8(v73, (int8x8_t)0xFF000000FFLL);
                v75.i64[0] = v74.u32[0];
                v75.i64[1] = v74.u32[1];
                float64x2_t v76 = vcvtq_f64_u64(v75);
                v77.i32[0] = BYTE4(v72);
                v77.i32[1] = BYTE5(v72);
                int8x8_t v78 = vand_s8(v77, (int8x8_t)0xFF000000FFLL);
                v75.i64[0] = v78.u32[0];
                v75.i64[1] = v78.u32[1];
                float64x2_t v79 = vcvtq_f64_u64(v75);
                v80.i32[0] = BYTE2(v72);
                v80.i32[1] = BYTE3(v72);
                int8x8_t v81 = vand_s8(v80, (int8x8_t)0xFF000000FFLL);
                v75.i64[0] = v81.u32[0];
                v75.i64[1] = v81.u32[1];
                float64x2_t v82 = vcvtq_f64_u64(v75);
                v83.i32[0] = v72;
                v83.i32[1] = BYTE1(v72);
                int8x8_t v84 = vand_s8(v83, (int8x8_t)0xFF000000FFLL);
                v75.i64[0] = v84.u32[0];
                v75.i64[1] = v84.u32[1];
                float64x2_t v85 = vcvtq_f64_u64(v75);
                v83.i32[0] = v71.u8[6];
                v83.i32[1] = v71.u8[7];
                int8x8_t v86 = vand_s8(v83, (int8x8_t)0xFF000000FFLL);
                v75.i64[0] = v86.u32[0];
                v75.i64[1] = v86.u32[1];
                float64x2_t v87 = vcvtq_f64_u64(v75);
                v88.i32[0] = v71.u8[4];
                v88.i32[1] = v71.u8[5];
                int8x8_t v89 = vand_s8(v88, (int8x8_t)0xFF000000FFLL);
                v75.i64[0] = v89.u32[0];
                v75.i64[1] = v89.u32[1];
                float64x2_t v90 = vcvtq_f64_u64(v75);
                v91.i32[0] = v71.u8[2];
                v91.i32[1] = v71.u8[3];
                int8x8_t v92 = vand_s8(v91, (int8x8_t)0xFF000000FFLL);
                v75.i64[0] = v92.u32[0];
                v75.i64[1] = v92.u32[1];
                float64x2_t v93 = vcvtq_f64_u64(v75);
                v94.i32[0] = v71.u8[0];
                v94.i32[1] = v71.u8[1];
                int8x8_t v95 = vand_s8(v94, (int8x8_t)0xFF000000FFLL);
                v75.i64[0] = v95.u32[0];
                v75.i64[1] = v95.u32[1];
                float64x2_t v96 = vsubq_f64(v85, v69[4]);
                float64x2_t v97 = vsubq_f64(v82, v69[5]);
                float64x2_t v98 = vsubq_f64(v79, v69[6]);
                float64x2_t v99 = vsubq_f64(v76, v69[7]);
                float64x2_t v100 = vsubq_f64(vcvtq_f64_u64(v75), *v69);
                float64x2_t v101 = vsubq_f64(v93, v69[1]);
                float64x2_t v102 = vsubq_f64(v87, v69[3]);
                v68[2] = vsubq_f64(v90, v69[2]);
                v68[3] = v102;
                *uint64_t v68 = v100;
                v68[1] = v101;
                v68[6] = v98;
                v68[7] = v99;
                v68[4] = v96;
                v68[5] = v97;
                v69 += 8;
                v68 += 8;
                v67 -= 16;
              }
              while (v67);
              if ((v12 & 0xFFFFFFF0) != v12)
              {
                uint64_t v37 = v12 & 0xFFFFFFF0;
                uint64_t v45 = v37;
                if ((v12 & 8) == 0) {
                  goto LABEL_56;
                }
                goto LABEL_61;
              }
            }
            else
            {
              uint64_t v45 = 0;
LABEL_61:
              uint64_t v46 = (uint64_t *)(v34 + v45);
              unint64_t v47 = (float64x2_t *)(a2 + 8 * v45);
              uint64_t v48 = (float64x2_t *)((char *)v13 + 8 * v45);
              uint64_t v49 = v45 - (v12 & 0xFFFFFFF8);
              do
              {
                uint64_t v50 = *v46++;
                v51.i32[0] = BYTE6(v50);
                v51.i32[1] = HIBYTE(v50);
                int8x8_t v52 = vand_s8(v51, (int8x8_t)0xFF000000FFLL);
                v53.i64[0] = v52.u32[0];
                v53.i64[1] = v52.u32[1];
                float64x2_t v54 = vcvtq_f64_u64(v53);
                v55.i32[0] = BYTE4(v50);
                v55.i32[1] = BYTE5(v50);
                int8x8_t v56 = vand_s8(v55, (int8x8_t)0xFF000000FFLL);
                v53.i64[0] = v56.u32[0];
                v53.i64[1] = v56.u32[1];
                float64x2_t v57 = vcvtq_f64_u64(v53);
                v58.i32[0] = BYTE2(v50);
                v58.i32[1] = BYTE3(v50);
                int8x8_t v59 = vand_s8(v58, (int8x8_t)0xFF000000FFLL);
                v53.i64[0] = v59.u32[0];
                v53.i64[1] = v59.u32[1];
                float64x2_t v60 = vcvtq_f64_u64(v53);
                v61.i32[0] = v50;
                v61.i32[1] = BYTE1(v50);
                int8x8_t v62 = vand_s8(v61, (int8x8_t)0xFF000000FFLL);
                v53.i64[0] = v62.u32[0];
                v53.i64[1] = v62.u32[1];
                float64x2_t v64 = v47[2];
                float64x2_t v63 = v47[3];
                float64x2_t v66 = *v47;
                float64x2_t v65 = v47[1];
                v47 += 4;
                v48[2] = vsubq_f64(v57, v64);
                v48[3] = vsubq_f64(v54, v63);
                *uint64_t v48 = vsubq_f64(vcvtq_f64_u64(v53), v66);
                v48[1] = vsubq_f64(v60, v65);
                v48 += 4;
                v49 += 8;
              }
              while (v49);
              uint64_t v37 = v12 & 0xFFFFFFF8;
              if (v37 != v12)
              {
LABEL_56:
                double v38 = (unsigned __int8 *)(v34 + v37);
                uint64_t v39 = (double *)(a2 + 8 * v37);
                uint64_t v40 = &v13->f64[v37];
                uint64_t v41 = v12 - v37;
                do
                {
                  unsigned int v42 = *v38++;
                  double v43 = (double)v42;
                  double v44 = *v39++;
                  *v40++ = v43 - v44;
                  --v41;
                }
                while (v41);
              }
            }
            sub_1000C1540((uint64_t)v13, (uint64_t)v13, v14);
            sub_1000C1D8C((uint64_t)a6, v14, (uint64_t)a6, (double)v33);
LABEL_42:
            if (++v32 == v31) {
              goto LABEL_9;
            }
            continue;
          }
        }
        for (uint64_t i = 0; i != v31; ++i)
        {
          int v106 = v116;
          if (v9) {
            int v106 = *(__int16 *)(*(void *)(v114 + 8) + 2 * i);
          }
          if (v115 != -1) {
            v106 *= *(unsigned __int16 *)(sub_10000507C(a1, v24, i) + 2 * v115);
          }
          if (v106)
          {
            sub_1000043BC(a1, v24, i, (unint64_t *)&v117);
            sub_1000C1540((uint64_t)v13, (uint64_t)v13, v14);
            sub_1000C1D8C((uint64_t)a6, v14, (uint64_t)a6, (double)v106);
          }
        }
      }
LABEL_9:
      sub_1000D2974();
      uint64_t v15 = v110;
      int v19 = v109;
LABEL_10:
      unsigned __int16 v18 = v24 + 1;
      int v17 = (unsigned __int16)(v24 + 1);
      int v16 = *(_DWORD *)(a1 + 1072);
    }
    while (v16 > v17);
  }
  sub_1000C160C((uint64_t)a6, 1.0 / (double)v116);
  sub_1000CD4D0(0, v108);
  return sub_1000CD4D0(v13, v108);
}

uint64_t sub_100084664(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 24))();
}

uint64_t sub_10008466C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_100084674(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 56))();
}

uint64_t sub_10008467C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 72))();
}

uint64_t sub_100084684(uint64_t a1, uint64_t a2, int a3, char *a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v14 = *(uint64_t (**)(void))(a1 + 104);
  if (v14)
  {
    return v14();
  }
  else
  {
    int v16 = sub_1000CED6C((unint64_t)a4);
    uint64_t v24 = (char *)sub_1000CD3E8(2 * (v16 + 1), v17, v18, v19, v20, v21, v22, v23);
    memcpy(v24, a4, 2 * (v16 + 1));
    int v26 = v16 - a3;
    BOOL v25 = v16 < a3;
    uint64_t v30 = 2 * (v16 + 1);
    uint64_t v27 = 0;
    if (!v25)
    {
      uint64_t v28 = 2 * a3;
      int v29 = v26 + 1;
      do
      {
        *(_WORD *)&v24[v28] = 0;
        uint64_t v27 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t, char *, uint64_t, void, uint64_t))(a1 + 96))(a1, a2, 1, v24, a5 + 4 * (int)v27, (a6 - v27), a7)+ v27;
        if ((int)v27 >= a6) {
          break;
        }
        *(_WORD *)&v24[v28] = *(_WORD *)&a4[v28];
        v28 += 2;
        --v29;
      }
      while (v29);
    }
    sub_1000CD4D0(v24, v30);
    return v27;
  }
}

uint64_t sub_1000847D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 96))();
}

uint64_t sub_1000847DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 112))();
}

uint64_t sub_1000847E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 120))();
}

uint64_t sub_1000847EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 152))();
}

uint64_t sub_1000847F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 168))();
}

uint64_t sub_1000847FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 176))();
}

uint64_t sub_100084804(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 184))();
}

uint64_t sub_10008480C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 192))();
}

uint64_t sub_100084814(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 200))();
}

uint64_t sub_10008481C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 248))();
}

uint64_t sub_100084824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _DWORD *a8)
{
  int v9 = (*(uint64_t (**)(void))(a1 + 264))();
  *a8 = v9;
  return 2 * (v9 == 0xFFFFFF);
}

uint64_t sub_100084864(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 272))();
}

uint64_t sub_10008486C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 280))();
}

uint64_t sub_100084874(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 288))();
}

uint64_t sub_10008487C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 296))();
}

uint64_t sub_100084884(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 312))();
}

uint64_t sub_10008488C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 328))();
}

uint64_t sub_100084894(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 344))();
}

uint64_t sub_10008489C(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(void))(a1 + 360);
  if (v1) {
    return v1();
  }
  else {
    return 0xFFFFFFFFLL;
  }
}

uint64_t sub_1000848B0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 368))();
}

uint64_t sub_1000848B8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 376))();
}

uint64_t sub_1000848C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 400))();
}

uint64_t sub_1000848C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 440))();
}

uint64_t sub_1000848D0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 448))();
}

void *sub_1000848D8(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!qword_100101CC0) {
    return 0;
  }
  int v8 = *(_DWORD *)(qword_100101CC0 + 3980);
  if (v8 != 2)
  {
    if (v8 == 1) {
      return sub_100088CB8(a1, a2, a3, a4, a5, a6, a7, a8);
    }
    return 0;
  }
  return (void *)sub_100084C60(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_10008490C(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = sub_1000CB004(a2, (unint64_t)"x");
  if (qword_100101CC0)
  {
    int v12 = *(_DWORD *)(qword_100101CC0 + 3980);
    if (v12 == 2)
    {
      uint64_t v13 = sub_100084C60(a1, v11, a3, a4, v7, v8, v9, v10);
      goto LABEL_7;
    }
    if (v12 == 1)
    {
      uint64_t v13 = (uint64_t)sub_100088CB8(a1, v11, a3, a4, v7, v8, v9, v10);
LABEL_7:
      uint64_t v14 = v13;
      goto LABEL_8;
    }
  }
  uint64_t v14 = 0;
LABEL_8:
  sub_100006A98((uint64_t)v11);
  return v14;
}

uint64_t sub_1000849BC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 652);
  uint64_t v3 = sub_1000C09B0(*(unint64_t **)(a1 + 496), 1, v2, 0xFFFFFFFFLL);
  uint64_t v4 = sub_1000C09B0(*(unint64_t **)(a1 + 512), 2, v2, v3);
  unsigned int v5 = *(unint64_t **)(a1 + 528);
  if (v5) {
    uint64_t v4 = sub_1000C09B0(v5, 1, v2, v4);
  }
  int v6 = *(_DWORD *)(a1 + 560);
  if (v6 >= 1)
  {
    LODWORD(v4) = sub_1000C09B0(*(unint64_t **)(a1 + 544), 2, v6, v4);
    int v6 = *(_DWORD *)(a1 + 560);
  }
  uint64_t v7 = sub_1000C085C(v6, 4, v4);
  uint64_t v8 = sub_1000C09B0(*(unint64_t **)(a1 + 568), 2, v2, v7);
  unsigned int v9 = sub_1000C09B0(*(unint64_t **)(a1 + 584), 1, *(_DWORD *)(a1 + 600), v8);
  uint64_t v10 = *(void *)(a1 + 624);
  if (v10)
  {
    unsigned int v11 = sub_10007AF0C(v10);
    unsigned int v9 = sub_1000C085C(v11, 4, v9);
  }
  unsigned int v12 = sub_1000C085C(*(unsigned __int16 *)(a1 + 640), 2, v9);
  unsigned int v13 = sub_1000C085C(*(unsigned __int16 *)(a1 + 642), 2, v12);
  unsigned int v14 = sub_1000C085C(*(unsigned __int16 *)(a1 + 644), 2, v13);
  unsigned int v15 = sub_1000C085C(*(unsigned __int16 *)(a1 + 646), 2, v14);
  unsigned int v16 = sub_1000C085C(*(_DWORD *)(a1 + 648), 4, v15);
  unsigned int v17 = sub_1000C085C(*(_DWORD *)(a1 + 652), 4, v16);
  unsigned int v18 = sub_1000C085C(*(_DWORD *)(a1 + 656), 4, v17);
  unsigned int v19 = sub_1000C085C(*(_DWORD *)(a1 + 660), 4, v18);
  unsigned int v20 = sub_1000C085C(*(_DWORD *)(a1 + 664), 4, v19);
  unsigned int v21 = sub_1000C085C(*(_DWORD *)(a1 + 668), 4, v20);
  unsigned int v22 = sub_1000C085C(*(_DWORD *)(a1 + 672), 4, v21);
  uint64_t v23 = sub_1000C085C(*(_DWORD *)(a1 + 676), 4, v22);
  unsigned int v24 = sub_1000C06B4(a1 + 724, v23);
  unsigned int v25 = sub_1000C085C(*(_DWORD *)(a1 + 732), 4, v24);
  unsigned int v26 = sub_1000C085C(*(_DWORD *)(a1 + 736), 4, v25);
  unsigned int v27 = sub_1000C085C(*(unsigned __int16 *)(a1 + 740), 2, v26);
  unsigned int v28 = sub_1000C085C(*(_DWORD *)(a1 + 744), 4, v27);
  unsigned int v29 = sub_1000C085C(*(_DWORD *)(a1 + 748), 4, v28);
  unsigned int v30 = sub_1000C085C(*(_DWORD *)(a1 + 752), 4, v29);
  unsigned int v31 = sub_1000C085C(*(_DWORD *)(a1 + 756), 4, v30);
  unsigned int v32 = sub_1000C085C(*(_DWORD *)(a1 + 784), 4, v31);
  unsigned int v33 = sub_1000C085C(*(_DWORD *)(a1 + 788), 4, v32);
  unsigned int v34 = sub_1000C085C(*(_DWORD *)(a1 + 792), 4, v33);
  unsigned int v35 = sub_1000C085C(*(_DWORD *)(a1 + 796), 4, v34);
  uint64_t v36 = sub_1000C085C(*(_DWORD *)(a1 + 800), 4, v35);
  uint64_t v37 = *(unint64_t **)(a1 + 808);
  if (v37) {
    LODWORD(v36) = sub_1000C09B0(v37, 1, *(_DWORD *)(a1 + 824), v36);
  }
  unsigned int v38 = *(_DWORD *)(a1 + 824);
  return sub_1000C085C(v38, 4, v36);
}

uint64_t sub_100084C60(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = sub_1000BEC58(a1, "mwl", a2, a4, a5, a6, a7, a8);
  if (!v10) {
    return 0;
  }
  uint64_t v11 = (uint64_t)v10;
  unsigned int v12 = (void *)sub_1000C33A0(864);
  uint64_t v13 = (uint64_t)v12;
  if (v12)
  {
    uint64_t v31 = 0;
    int v30 = 0;
    memcpy(v12, off_1000FD920, 0x1E0uLL);
    *(void *)(v13 + 480) = a3;
    *(void *)(v13 + 488) = a4;
    *(_DWORD *)(v13 + 856) = 1;
    unsigned int v14 = (int *)(v13 + 560);
    if (!sub_1000BEECC(v11, (void *)(v13 + 560))) {
      goto LABEL_79;
    }
    if (!sub_1000BEECC(v11, (void *)(v13 + 600))) {
      goto LABEL_79;
    }
    if (!sub_1000BEECC(v11, (void *)(v13 + 604))) {
      goto LABEL_79;
    }
    if (!sub_1000BEF74(v11, (_WORD *)(v13 + 640))) {
      goto LABEL_79;
    }
    if (!sub_1000BEF74(v11, (_WORD *)(v13 + 642))) {
      goto LABEL_79;
    }
    if (!sub_1000BEF74(v11, (_WORD *)(v13 + 644))) {
      goto LABEL_79;
    }
    if (!sub_1000BEF74(v11, (_WORD *)(v13 + 646))) {
      goto LABEL_79;
    }
    if (!sub_1000BEECC(v11, (void *)(v13 + 648))) {
      goto LABEL_79;
    }
    unsigned int v15 = (int *)(v13 + 652);
    if (!sub_1000BEECC(v11, (void *)(v13 + 652))) {
      goto LABEL_79;
    }
    if (!sub_1000BEECC(v11, (void *)(v13 + 656))) {
      goto LABEL_79;
    }
    if (!sub_1000BEECC(v11, (void *)(v13 + 660))) {
      goto LABEL_79;
    }
    if (!sub_1000BEECC(v11, (void *)(v13 + 664))) {
      goto LABEL_79;
    }
    if (!sub_1000BEECC(v11, (void *)(v13 + 668))) {
      goto LABEL_79;
    }
    if (!sub_1000BEECC(v11, (void *)(v13 + 672))) {
      goto LABEL_79;
    }
    if (!sub_1000BEECC(v11, (char *)&v31 + 4)) {
      goto LABEL_79;
    }
    *(_DWORD *)(v13 + 676) = HIDWORD(v31);
    if (!sub_1000BEECC(v11, (char *)&v31 + 4)) {
      goto LABEL_79;
    }
    *(_DWORD *)(v13 + 680) = HIDWORD(v31);
    *(void *)(v13 + 724) = 0;
    if (!sub_1000BEFCC(v11, (void *)(v13 + 724), 8, 1)) {
      goto LABEL_79;
    }
    *(_DWORD *)(v13 + 732) = sub_100023604((unsigned __int8 *)(v13 + 724));
    if (!sub_1000BEECC(v11, (char *)&v31 + 4)) {
      goto LABEL_79;
    }
    *(_DWORD *)(v13 + 736) = HIDWORD(v31);
    if (!sub_1000BEF74(v11, (_WORD *)(v13 + 740))) {
      goto LABEL_79;
    }
    if (!sub_1000BEECC(v11, (void *)(v13 + 744))) {
      goto LABEL_79;
    }
    if (!sub_1000BEECC(v11, (void *)(v13 + 748))) {
      goto LABEL_79;
    }
    if (!sub_1000BEECC(v11, (void *)(v13 + 752))) {
      goto LABEL_79;
    }
    if (!sub_1000BEECC(v11, (void *)(v13 + 756))) {
      goto LABEL_79;
    }
    if (!sub_1000BEECC(v11, (void *)(v13 + 760))) {
      goto LABEL_79;
    }
    int v29 = 0;
    if (!sub_1000BF3F8(v11, (uint64_t *)(v13 + 776), &v29)) {
      goto LABEL_79;
    }
    *(void *)(v13 + 768) = *(void *)(v13 + 776);
    if (!sub_1000BEECC(v11, (void *)(v13 + 824)) || !sub_1000BEF74(v11, (_WORD *)(v13 + 828))) {
      goto LABEL_79;
    }
    if (*(__int16 *)(v13 + 828) != -1)
    {
      int v29 = 0;
      unsigned int v16 = (void *)(v13 + 840);
      if (!sub_1000BF078(v11, 1, (uint64_t *)(v13 + 840), &v29)) {
        goto LABEL_79;
      }
      if (*v16)
      {
        if (v29 != *v15) {
          goto LABEL_79;
        }
        *(void *)(v13 + 832) = *v16;
      }
    }
    int v29 = 0;
    unsigned int v17 = (void *)(v13 + 504);
    if (sub_1000BF078(v11, 1, (uint64_t *)(v13 + 504), &v29))
    {
      if (*v17)
      {
        if (v29 != *v15) {
          goto LABEL_79;
        }
        *(void *)(v13 + 496) = *v17;
      }
      int v29 = 0;
      unsigned int v18 = (void *)(v13 + 520);
      if (sub_1000BF078(v11, 2, (uint64_t *)(v13 + 520), &v29))
      {
        if (*v18)
        {
          int v19 = v29;
          if (v29 != *v15) {
            goto LABEL_79;
          }
          *(void *)(v13 + 512) = *v18;
        }
        else
        {
          int v19 = *v15;
        }
        if (v19 >= 1 && *(_DWORD *)(v13 + 732))
        {
          int v29 = 0;
          unsigned int v20 = (void *)(v13 + 536);
          if (!sub_1000BF078(v11, 1, (uint64_t *)(v13 + 536), &v29)) {
            goto LABEL_79;
          }
          if (*v20)
          {
            if (v29 != *v15) {
              goto LABEL_79;
            }
            *(void *)(v13 + 528) = *v20;
          }
        }
        if (*v14 >= 1)
        {
          int v29 = 0;
          unsigned int v21 = (void *)(v13 + 552);
          if (!sub_1000BF078(v11, 2, (uint64_t *)(v13 + 552), &v29)) {
            goto LABEL_79;
          }
          if (*v21)
          {
            if (v29 != *v14) {
              goto LABEL_79;
            }
            *(void *)(v13 + 544) = *v21;
          }
        }
        int v29 = 0;
        unsigned int v22 = (void *)(v13 + 576);
        if (sub_1000BF078(v11, 2, (uint64_t *)(v13 + 576), &v29))
        {
          if (*v22)
          {
            if (v29 != *v15) {
              goto LABEL_79;
            }
            *(void *)(v13 + 568) = *v22;
          }
          int v29 = 0;
          uint64_t v23 = (void *)(v13 + 592);
          if (sub_1000BF078(v11, 1, (uint64_t *)(v13 + 592), &v29))
          {
            if (*v23)
            {
              if (v29 != *(_DWORD *)(v13 + 600)) {
                goto LABEL_79;
              }
              *(void *)(v13 + 584) = *v23;
            }
            if (sub_1000BEECC(v11, &v31))
            {
              if (v31)
              {
                int v29 = 0;
                unsigned int v24 = (void *)(v13 + 616);
                if (!sub_1000BF078(v11, 4, (uint64_t *)(v13 + 616), &v29)) {
                  goto LABEL_79;
                }
                if (*v24)
                {
                  if (v29 != *(_DWORD *)(v13 + 604) + 1) {
                    goto LABEL_79;
                  }
                  *(void *)(v13 + 608) = *v24;
                }
              }
              if (sub_1000BEECC(v11, &v30))
              {
                if (!v30) {
                  goto LABEL_74;
                }
                unsigned int v25 = sub_10007B078(v11);
                *(void *)(v13 + 632) = v25;
                if (v25)
                {
                  *(void *)(v13 + 624) = v25;
LABEL_74:
                  int v29 = 0;
                  unsigned int v26 = (void *)(v13 + 816);
                  if (sub_1000BF078(v11, 1, (uint64_t *)(v13 + 816), &v29))
                  {
                    if (!*v26)
                    {
LABEL_78:
                      sub_1000BED3C(v11);
                      *(_OWORD *)(v13 + 784) = *(_OWORD *)(v13 + 656);
                      int v27 = *(_DWORD *)(v13 + 652);
                      *(_DWORD *)(v13 + 800) = v27;
                      *(void *)(v13 + 848) = sub_10008EAA0(v27, *(_DWORD *)(v13 + 672), *(unsigned __int16 *)(v13 + 642), *(unsigned __int16 *)(v13 + 640), *(void *)(v13 + 624), *(_DWORD *)(v13 + 732), *(_DWORD *)(v13 + 676), (unsigned __int8 *)(v13 + 724), a3, *(_WORD *)(v13 + 828), *(_DWORD *)(v13 + 760));
                      return v13;
                    }
                    if (v29 == *(_DWORD *)(v13 + 824))
                    {
                      *(void *)(v13 + 808) = *v26;
                      goto LABEL_78;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
LABEL_79:
    sub_1000BED3C(v11);
    sub_100085214(v13);
    return 0;
  }
  sub_1000BED3C(v11);
  return v13;
}

uint64_t sub_100085214(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 856))
  {
    sub_1000C321C(*(void *)(a1 + 504));
    sub_1000C321C(*(void *)(a1 + 520));
    sub_1000C321C(*(void *)(a1 + 552));
    sub_1000C321C(*(void *)(a1 + 576));
    sub_1000C321C(*(void *)(a1 + 592));
    sub_1000C321C(*(void *)(a1 + 616));
    sub_1000C321C(*(void *)(a1 + 536));
    sub_10007A984(*(void *)(a1 + 632));
    sub_1000C321C(*(void *)(a1 + 816));
    sub_1000C321C(*(void *)(a1 + 832));
    if (*(void *)(a1 + 776))
    {
      uint64_t v2 = 8 * *(unsigned __int16 *)(a1 + 640);
      do
      {
        sub_1000C321C(*(void *)(*(void *)(a1 + 776) + v2));
        v2 -= 8;
      }
      while (v2 != -8);
      sub_1000C321C(*(void *)(a1 + 776));
    }
  }
  sub_10008EFD4(*(void *)(a1 + 848));
  return sub_1000C321C(a1);
}

uint64_t sub_1000852D8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 676);
}

uint64_t sub_1000852E0(uint64_t a1)
{
  return a1 + 724;
}

uint64_t sub_1000852E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 736);
}

uint64_t sub_1000852F0(uint64_t a1, __int16 *a2, unsigned __int16 *a3, int a4)
{
  if (a3) {
    uint64_t v7 = a3;
  }
  else {
    uint64_t v7 = (unsigned __int16 *)&unk_1000F653E;
  }
  int v8 = *(_DWORD *)(a1 + 676);
  uint64_t v9 = (int)(4 * sub_1000CED6C((unint64_t)a2) + 4);
  unsigned int v17 = (unsigned __int8 *)sub_1000CD3E8(v9, v10, v11, v12, v13, v14, v15, v16);
  unsigned int v25 = (unsigned __int8 *)sub_1000CD3E8(v9, v18, v19, v20, v21, v22, v23, v24);
  if (v8 == 4)
  {
    sub_1000C0270(3, a2, v9, (uint64_t)v25);
    goto LABEL_9;
  }
  if (sub_1000C0270(v8, a2, v9, (uint64_t)v25) != 2)
  {
LABEL_9:
    int v59 = a4;
    sub_10008814C(v17, (unsigned __int16 *)a2, *(_DWORD *)(a1 + 732), v8, 0, 0);
    int v31 = sub_1000CAD00((unint64_t)v17);
    if (*(_DWORD *)(a1 + 732)) {
      int v58 = sub_100088008((uint64_t)a2);
    }
    else {
      int v58 = 128;
    }
    uint64_t v32 = (int)((4 * sub_1000CED6C((unint64_t)v7)) | 1);
    uint64_t v40 = (unsigned __int8 *)sub_1000CD3E8(v32, v33, v34, v35, v36, v37, v38, v39);
    if (sub_10008814C(v40, v7, 0, *(_DWORD *)(a1 + 680), a1 + 684, 0) == 1)
    {
      sub_1000CD4D0(v40, v32);
      sub_1000CD4D0(v25, v9);
      sub_1000CD4D0(v17, v9);
      if (v59) {
        return 0xFFFFFFLL;
      }
    }
    else
    {
      int8x8_t v56 = v7;
      uint64_t v57 = v32;
      int v43 = v31 + 1;
      int v44 = *(_DWORD *)(a1 + 652);
      int v45 = v44 - 1;
      int v46 = 0;
      if (v44 >= 1)
      {
        do
        {
          int v47 = v46 + v45;
          if (v46 + v45 < 0 != __OFADD__(v46, v45)) {
            ++v47;
          }
          int v48 = v47 >> 1;
          uint64_t v49 = *(unsigned __int16 *)(*(void *)(a1 + 568) + 2 * (v47 >> 1));
          if ((int)sub_1000CAD44((unsigned __int8 *)(*(void *)(a1 + 584) + v49), v17, v43, v49) >= 0) {
            int v45 = v48 - 1;
          }
          else {
            int v46 = v48 + 1;
          }
        }
        while (v46 <= v45);
        int v44 = *(_DWORD *)(a1 + 652);
      }
      if (v46 >= v44)
      {
        uint64_t v41 = 0xFFFFFFLL;
        uint64_t v7 = v56;
      }
      else
      {
        uint64_t v50 = v43;
        uint64_t v41 = v46;
        if (v58 == 16)
        {
          uint64_t v7 = v56;
          do
          {
            int8x8_t v51 = (unsigned char *)(*(void *)(a1 + 584) + *(unsigned __int16 *)(*(void *)(a1 + 568) + 2 * v41));
            if ((int)sub_1000CAED0(v51, v17) > 0) {
              break;
            }
            int8x8_t v52 = &v51[v50];
            if (!sub_1000CAED0(v52, v40))
            {
              if (!*(_DWORD *)(a1 + 732)) {
                goto LABEL_43;
              }
              if (*(unsigned char *)(*(void *)(a1 + 528) + v41) == 16)
              {
                int v53 = sub_1000CAD00((unint64_t)v52);
                if (!sub_1000CAED0(&v52[v53 + 1], v25)) {
                  goto LABEL_43;
                }
              }
            }
            ++v41;
          }
          while (v41 < *(int *)(a1 + 652));
        }
        else
        {
          uint64_t v7 = v56;
          do
          {
            float64x2_t v54 = (unsigned char *)(*(void *)(a1 + 584) + *(unsigned __int16 *)(*(void *)(a1 + 568) + 2 * v41));
            if ((int)sub_1000CAED0(v54, v17) > 0) {
              break;
            }
            if (!sub_1000CAED0(&v54[v50], v40)
              && (!*(_DWORD *)(a1 + 732) || v58 == *(unsigned __int8 *)(*(void *)(a1 + 528) + v41)))
            {
              goto LABEL_43;
            }
            ++v41;
          }
          while (v41 < *(int *)(a1 + 652));
        }
        uint64_t v41 = 0xFFFFFFLL;
      }
LABEL_43:
      sub_1000CD4D0(v40, v57);
      sub_1000CD4D0(v25, v9);
      sub_1000CD4D0(v17, v9);
      if (v59 || v41 != 0xFFFFFF) {
        return v41;
      }
    }
    goto LABEL_45;
  }
  sub_1000CD4D0(v25, v9);
  sub_1000CD4D0(v17, v9);
  if (a4) {
    return 0xFFFFFFLL;
  }
LABEL_45:
  uint64_t v55 = *(void *)(a1 + 848);
  return sub_10008F0B0(v55, a2, v7, v26, v27, v28, v29, v30);
}

uint64_t sub_100085690(uint64_t a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, int a5)
{
  if (!(a5 | a4)) {
    return 0;
  }
  uint64_t v6 = a4;
  uint64_t v10 = a1 + 684;
  uint64_t v11 = (int)((4 * sub_1000CED6C((unint64_t)a2)) | 1);
  uint64_t v19 = (unsigned __int8 *)sub_1000CD3E8(v11, v12, v13, v14, v15, v16, v17, v18);
  if (sub_10008814C(v19, a2, 0, *(_DWORD *)(a1 + 680), v10, 0) == 1)
  {
    sub_1000CD4D0(v19, v11);
    uint64_t v20 = *(void *)(a1 + 848);
    return sub_10008F63C(v20, a2, a3, v6, a5);
  }
  int v22 = sub_1000CAD00((unint64_t)v19) + 1;
  uint64_t v40 = a2;
  uint64_t v42 = v11;
  if (!*(void *)(a1 + 608))
  {
    if (*(int *)(a1 + 652) >= 1)
    {
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      while (1)
      {
        unint64_t v32 = *(void *)(a1 + 584) + *(unsigned __int16 *)(*(void *)(a1 + 568) + 2 * v30);
        int v33 = sub_1000CAD00(v32);
        if (!sub_1000CAD44((unsigned __int8 *)(v32 + v33 + 1), v19, v22, v32 + v33))
        {
          if ((int)v31 >= (int)v6)
          {
            uint64_t v31 = (v31 + 1);
          }
          else
          {
            *(_DWORD *)(a3 + 4 * (int)v31) = v30;
            uint64_t v31 = (v31 + 1);
            if (!a5 && v31 == v6)
            {
LABEL_45:
              sub_1000CD4D0(v19, v42);
              return v6;
            }
          }
        }
        if (++v30 >= *(int *)(a1 + 652)) {
          goto LABEL_34;
        }
      }
    }
    goto LABEL_32;
  }
  int v23 = *(_DWORD *)(a1 + 604);
  int v24 = v23 - 1;
  if (v23 < 1) {
    goto LABEL_32;
  }
  uint64_t v25 = a3;
  LODWORD(i) = 0;
  do
  {
    unsigned int v27 = (v24 + i) >> 1;
    unint64_t v28 = *(void *)(a1 + 584)
        + *(unsigned __int16 *)(*(void *)(a1 + 568) + 2 * *(int *)(*(void *)(a1 + 608) + 4 * v27));
    int v29 = sub_1000CAD00(v28);
    if ((int)sub_1000CAD44((unsigned __int8 *)(v28 + v29 + 1), v19, v22, v28 + v29) >= 0) {
      int v24 = v27 - 1;
    }
    else {
      LODWORD(i) = v27 + 1;
    }
  }
  while ((int)i <= v24);
  a3 = v25;
  if ((int)i >= *(_DWORD *)(a1 + 604))
  {
LABEL_32:
    uint64_t v31 = 0;
    goto LABEL_34;
  }
  if (a5)
  {
    uint64_t v41 = v25;
    uint64_t v31 = 0;
    uint64_t i = (int)i;
    do
    {
      uint64_t v34 = *(int *)(*(void *)(a1 + 608) + 4 * i);
      unint64_t v35 = *(void *)(a1 + 584) + *(unsigned __int16 *)(*(void *)(a1 + 568) + 2 * v34);
      int v36 = sub_1000CAD00(v35);
      if (sub_1000CAD44((unsigned __int8 *)(v35 + v36 + 1), v19, v22, v35 + v36)) {
        break;
      }
      if (v31 < (int)v6) {
        *(_DWORD *)(v41 + 4 * v31) = v34;
      }
      ++v31;
      ++i;
    }
    while (i < *(int *)(a1 + 604));
    a3 = v41;
  }
  else
  {
    uint64_t v31 = 0;
    for (uint64_t i = (int)i; i < *(int *)(a1 + 604); ++i)
    {
      uint64_t v37 = *(int *)(*(void *)(a1 + 608) + 4 * i);
      unint64_t v38 = *(void *)(a1 + 584) + *(unsigned __int16 *)(*(void *)(a1 + 568) + 2 * v37);
      int v39 = sub_1000CAD00(v38);
      if (sub_1000CAD44((unsigned __int8 *)(v38 + v39 + 1), v19, v22, v38 + v39)) {
        break;
      }
      if ((int)v31 >= (int)v6)
      {
        uint64_t v31 = (v31 + 1);
      }
      else
      {
        *(_DWORD *)(a3 + 4 * (int)v31) = v37;
        uint64_t v31 = (v31 + 1);
        if (v31 == v6) {
          goto LABEL_45;
        }
      }
    }
  }
LABEL_34:
  sub_1000CD4D0(v19, v42);
  if (a5 || (int)v6 > (int)v31) {
    return sub_10008F63C(*(void *)(a1 + 848), v40, a3, (v6 - v31) & ~(((int)v6 - (int)v31) >> 31), a5)+ v31;
  }
  else {
    return v31;
  }
}

uint64_t sub_1000859F4(uint64_t a1, unsigned int *a2)
{
  return sub_100093EF4(*(void *)(a1 + 848), a2);
}

uint64_t sub_1000859FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 784);
}

uint64_t sub_100085A04(uint64_t a1)
{
  return *(unsigned int *)(a1 + 788);
}

void *sub_100085A0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = *(int *)(a1 + 784) + 1;
  if (*(_DWORD *)(a1 + 652) > (int)a2)
  {
    uint64_t v12 = (char *)(*(void *)(a1 + 584) + *(unsigned __int16 *)(*(void *)(a1 + 568) + 2 * (int)a2));
    uint64_t v13 = *(void *)(a1 + 528);
    if (!v13) {
      goto LABEL_5;
    }
    uint64_t v14 = *(unsigned __int8 *)(v13 + (int)a2);
    if (v14 == 16)
    {
      uint64_t v18 = (char *)sub_1000CD3E8(*(int *)(a1 + 784) + 1, a2, a3, v14, a5, a6, a7, a8);
      unint64_t v19 = (unint64_t)&v12[(int)sub_1000CAD00((unint64_t)v12) + 1];
      int v20 = sub_1000CAD00(v19);
      sub_1000CAD88(v18, (char *)(v19 + v20 + 1), v11);
      sub_1000C031C(*(_DWORD *)(a1 + 676), v18, v11, a3);
      double result = sub_1000CD4D0(v18, v11);
      if (!a4) {
        return result;
      }
    }
    else
    {
      if (v14 == 128)
      {
LABEL_5:
        double result = (void *)sub_1000C031C(*(_DWORD *)(a1 + 676), v12, v11, a3);
        if (!a4) {
          return result;
        }
        goto LABEL_11;
      }
      double result = (void *)sub_1000887DC(a3, v12, v11, v14, *(_DWORD *)(a1 + 676), 0);
      if (!a4) {
        return result;
      }
    }
LABEL_11:
    uint64_t v21 = &v12[(int)(sub_1000CAD00((unint64_t)v12) + 1)];
    int v22 = sub_1000CAD00((unint64_t)v21) + 1;
    int v23 = *(_DWORD *)(a1 + 680);
    return (void *)sub_1000887DC(a4, v21, v22, 1, v23, a1 + 684);
  }
  uint64_t v16 = (*(_DWORD *)(a1 + 788) + 1);
  uint64_t v17 = *(void *)(a1 + 848);
  return sub_10008F88C(v17, a2, a3, v11, a4, v16, a7, a8);
}

void *sub_100085BC0(void *result, unsigned int *a2, int a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a3 >= 1)
  {
    int v8 = (uint64_t *)a5;
    uint64_t v11 = (uint64_t)result;
    uint64_t v12 = a3;
    do
    {
      unsigned int v14 = *a2++;
      uint64_t v13 = v14;
      uint64_t v16 = *a4++;
      uint64_t v15 = v16;
      uint64_t v17 = *v8++;
      double result = sub_100085A0C(v11, v13, v15, v17, a5, a6, a7, a8);
      --v12;
    }
    while (v12);
  }
  return result;
}

uint64_t sub_100085C28(uint64_t a1, int a2, int a3, __int16 *a4)
{
  return sub_100087088(a1, a2, a3, a4, 0, 0, 0, 0);
}

uint64_t sub_100085C3C(uint64_t a1, int a2, int a3, __int16 *a4, uint64_t a5, int a6, int a7)
{
  return sub_100087088(a1, a2, a3, a4, a5, a6, 1u, a7);
}

uint64_t sub_100085C48(uint64_t a1, int a2, int a3, __int16 *a4, uint64_t a5, int a6, int a7)
{
  int v12 = *(_DWORD *)(a1 + 676);
  int v13 = sub_1000CED6C((unint64_t)a4);
  uint64_t v14 = (4 * v13) | 1;
  int v22 = (char *)sub_1000CD3E8(v14, v15, v16, v17, v18, v19, v20, v21);
  if (v12 == 4)
  {
    int v23 = 3;
    sub_1000C02C0(3, a4, a3, v14, (uint64_t)v22);
    goto LABEL_7;
  }
  int v23 = v12;
  if (sub_1000C02C0(v12, a4, a3, v14, (uint64_t)v22) != 2)
  {
LABEL_7:
    int v77 = a7;
    sub_1000CAD00((unint64_t)v22);
    int v80 = a3;
    uint64_t v76 = (4 * v13) | 1;
    sub_1000C0270(v23, a4, v14, (uint64_t)v22);
    int v81 = 0;
    int v33 = (unsigned __int8 *)sub_1000CD3E8(4 * v13 + 4, v26, v27, v28, v29, v30, v31, v32);
    sub_10008814C(v33, (unsigned __int16 *)a4, *(_DWORD *)(a1 + 732), v12, 0, &v80);
    sub_1000CAD00((unint64_t)v33);
    int8x8_t v73 = a4;
    int v72 = a3;
    if (*(_DWORD *)(a1 + 732))
    {
      int v74 = a2;
      int v34 = sub_100088008((uint64_t)a4);
      if (v34 == 16)
      {
        unint64_t v35 = sub_1000CAF9C(v22);
        int v36 = *(_DWORD *)(a1 + 652);
        int v37 = v36 - 1;
        uint64_t v75 = 4 * v13 + 4;
        LODWORD(v38) = 0;
        if (v36 < 1) {
          goto LABEL_12;
        }
        goto LABEL_18;
      }
      unint64_t v35 = 0;
      int v41 = *(_DWORD *)(a1 + 652);
      int v37 = v41 - 1;
      uint64_t v75 = 4 * v13 + 4;
      LODWORD(v38) = 0;
      if (v41 >= 1)
      {
LABEL_18:
        int v42 = v80;
        do
        {
          int v43 = v38 + v37;
          if ((int)v38 + v37 < 0 != __OFADD__(v38, v37)) {
            ++v43;
          }
          int v44 = v43 >> 1;
          uint64_t v45 = *(unsigned __int16 *)(*(void *)(a1 + 568) + 2 * (v43 >> 1));
          if ((int)sub_1000CAD44((unsigned __int8 *)(*(void *)(a1 + 584) + v45), v33, v42, v45) >= 0) {
            int v37 = v44 - 1;
          }
          else {
            LODWORD(v38) = v44 + 1;
          }
        }
        while ((int)v38 <= v37);
        if ((int)v38 >= *(_DWORD *)(a1 + 652) || a6 < 1) {
          goto LABEL_12;
        }
        if (!v74)
        {
          uint64_t v40 = 0;
          uint64_t v38 = (int)v38;
          do
          {
            int v59 = (unsigned __int8 *)(*(void *)(a1 + 584) + *(unsigned __int16 *)(*(void *)(a1 + 568) + 2 * v38));
            int v60 = sub_1000CAD00((unint64_t)v59);
            int v62 = sub_1000CAD44(v59, v33, v60, v61);
            if (v62 > 0) {
              break;
            }
            if (!v62)
            {
              *(_DWORD *)(a5 + 4 * (int)v40) = v38;
              uint64_t v40 = (v40 + 1);
            }
          }
          while (++v38 < *(int *)(a1 + 652) && (int)v40 < a6);
          goto LABEL_13;
        }
        if (v34 != 16)
        {
          uint64_t v40 = 0;
LABEL_58:
          uint64_t v63 = (int)v38;
          while (1)
          {
            float64x2_t v64 = (unsigned __int8 *)(*(void *)(a1 + 584) + *(unsigned __int16 *)(*(void *)(a1 + 568) + 2 * v63));
            int v65 = sub_1000CAD00((unint64_t)v64);
            int v67 = sub_1000CAD44(v64, v33, v65, v66);
            if (v67 > 0) {
              goto LABEL_13;
            }
            if (v67) {
              goto LABEL_66;
            }
            int v68 = *(unsigned __int8 *)(*(void *)(a1 + 528) + v63);
            if ((v68 & v34) != 0)
            {
              if (v68 != 16
                || (unint64_t v69 = (unint64_t)&v64[(int)sub_1000CAD00((unint64_t)v64) + 1],
                    int v70 = sub_1000CAD00(v69),
                    !sub_1000CAD44((unsigned __int8 *)(v69 + v70 + 1), (unsigned __int8 *)v22, v65, v69 + v70)))
              {
                *(_DWORD *)(a5 + 4 * (int)v40) = v63;
                uint64_t v40 = (v40 + 1);
LABEL_66:
                LODWORD(v38) = v63 + 1;
                if ((int)v63 + 1 < *(_DWORD *)(a1 + 652) && (int)v40 < a6) {
                  goto LABEL_58;
                }
                goto LABEL_13;
              }
            }
            if (++v63 >= *(int *)(a1 + 652)) {
              goto LABEL_13;
            }
          }
        }
        uint64_t v40 = 0;
LABEL_32:
        uint64_t v38 = (int)v38;
        while (1)
        {
          int v47 = (unsigned __int8 *)(*(void *)(a1 + 584) + *(unsigned __int16 *)(*(void *)(a1 + 568) + 2 * v38));
          int v48 = sub_1000CAD00((unint64_t)v47);
          int v50 = sub_1000CAD44(v47, v33, v48, v49);
          if (v50 > 0) {
            goto LABEL_13;
          }
          if (v50) {
            goto LABEL_43;
          }
          char v51 = v35[v48];
          v35[v48] = 0;
          int v52 = *(_DWORD *)(a1 + 676);
          if (v52 == 3)
          {
            if (!sub_1000D2130(v35, &v81)) {
              goto LABEL_33;
            }
            int v52 = *(_DWORD *)(a1 + 676);
          }
          int v53 = sub_100087DDC((uint64_t)v35, v52);
          v35[v48] = v51;
          int v54 = *(unsigned __int8 *)(*(void *)(a1 + 528) + v38);
          if ((v54 & v53) != 0)
          {
            if (v54 != 16
              || (unint64_t v55 = (unint64_t)&v47[(int)sub_1000CAD00((unint64_t)v47) + 1],
                  int v56 = sub_1000CAD00(v55),
                  !sub_1000CAD44((unsigned __int8 *)(v55 + v56 + 1), (unsigned __int8 *)v22, v48, v55 + v56)))
            {
              *(_DWORD *)(a5 + 4 * (int)v40) = v38;
              uint64_t v40 = (v40 + 1);
LABEL_43:
              LODWORD(v38) = v38 + 1;
              if ((int)v38 < *(_DWORD *)(a1 + 652) && (int)v40 < a6) {
                goto LABEL_32;
              }
              goto LABEL_13;
            }
          }
LABEL_33:
          if (++v38 >= *(int *)(a1 + 652)) {
            goto LABEL_13;
          }
        }
      }
    }
    else
    {
      int v74 = 0;
      unint64_t v35 = 0;
      int v34 = 128;
      int v39 = *(_DWORD *)(a1 + 652);
      int v37 = v39 - 1;
      uint64_t v75 = 4 * v13 + 4;
      LODWORD(v38) = 0;
      if (v39 >= 1) {
        goto LABEL_18;
      }
    }
LABEL_12:
    uint64_t v40 = 0;
LABEL_13:
    sub_1000C321C((uint64_t)v35);
    sub_1000CD4D0(v33, v75);
    sub_1000CD4D0(v22, v76);
    if (!v77 && a6 > (int)v40) {
      return sub_10009321C(*(void *)(a1 + 848), v74, v72, v73, a5 + 4 * (int)v40, a6 - (int)v40)
    }
           + v40;
    return v40;
  }
  sub_1000CD4D0(v22, v14);
  uint64_t v24 = *(void *)(a1 + 848);
  return sub_10009321C(v24, a2, a3, a4, a5, a6);
}

uint64_t sub_100086154(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 644);
}

uint64_t sub_10008615C(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 646);
}

uint64_t sub_100086164(uint64_t a1)
{
  return *(unsigned int *)(a1 + 648);
}

uint64_t sub_10008616C()
{
  return 0;
}

uint64_t sub_100086174()
{
  return 0;
}

uint64_t sub_10008617C(uint64_t a1, int a2)
{
  if (*(_DWORD *)(a1 + 652) <= a2) {
    return sub_100090648(*(void *)(a1 + 848), a2);
  }
  else {
    return 0;
  }
}

uint64_t sub_100086198(uint64_t a1)
{
  return sub_100093C08(*(void *)(a1 + 848));
}

uint64_t sub_1000861A0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 796);
}

uint64_t sub_1000861A8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 792);
}

uint64_t sub_1000861B0(uint64_t a1)
{
  return sub_100093F78(*(void *)(a1 + 848));
}

uint64_t sub_1000861B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = *(int *)(a1 + 796);
  uint64_t v37 = 0;
  uint64_t v38 = 0;
  uint64_t v16 = sub_1000CD550();
  if ((int)a3 < 1)
  {
    uint64_t v21 = 0;
  }
  else
  {
    uint64_t v17 = 2 * v8;
    uint64_t v21 = (char **)sub_1000CD3E8(8 * a3, v9, v10, v11, v12, v13, v14, v15);
    uint64_t v22 = 0;
    uint64_t v23 = v17 + 2;
    do
      v21[v22++] = (char *)sub_1000CD3E8(v23, v18, v19, v20, v12, v13, v14, v15);
    while (a3 != v22);
  }
  int v24 = sub_100087724(a1, a2, a3, v21, v12, v13, v14, v15);
  if (v24 >= (int)a3) {
    int v28 = a3;
  }
  else {
    int v28 = v24;
  }
  uint64_t v29 = (a3 - v28);
  uint64_t v30 = &v21[v28];
  if (v21) {
    uint64_t v31 = (uint64_t)v30;
  }
  else {
    uint64_t v31 = 0;
  }
  uint64_t v32 = sub_10008FE28(*(void *)(a1 + 848), a2, v31, v29, (*(_DWORD *)(a1 + 796) + 1), v25, v26, v27)+ v24;
  if ((int)v32 >= (int)a3) {
    a3 = a3;
  }
  else {
    a3 = v32;
  }
  sub_100094C5C(*(void *)(a1 + 848), &v38, &v37);
  if ((int)a3 >= 1)
  {
    do
    {
      int v34 = *v21++;
      int v33 = (unsigned __int16 *)v34;
      uint64_t v35 = *a4++;
      sub_1000950EC(*(void *)(a1 + 624), *(unsigned __int16 *)(a1 + 640), v38, v37, v33, v35);
      --a3;
    }
    while (a3);
  }
  sub_1000CD534(v16);
  return v32;
}

uint64_t sub_1000862F4(uint64_t a1, uint64_t a2, uint64_t a3, char **a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v10 = a3;
  int v13 = sub_100087724(a1, a2, a3, a4, (uint64_t)a5, a6, a7, a8);
  if (v13 >= v10) {
    int v17 = v10;
  }
  else {
    int v17 = v13;
  }
  uint64_t v18 = (v10 - v17);
  uint64_t v19 = &a4[v17];
  if (a4) {
    uint64_t v20 = (uint64_t)v19;
  }
  else {
    uint64_t v20 = 0;
  }
  uint64_t v21 = sub_10008FE28(*(void *)(a1 + 848), a2, v20, v18, (*(_DWORD *)(a1 + 796) + 1), v14, v15, v16)+ v13;
  if (a5 && (int)v21 >= 1) {
    memset(a5, 255, 4 * (v21 - 1) + 4);
  }
  return v21;
}

uint64_t sub_100086390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int32x4_t *a5, int *a6)
{
  uint64_t v12 = *(int *)(a1 + 796) + 1;
  uint64_t v13 = sub_1000CD550();
  uint64_t v21 = v13;
  uint64_t v48 = v12;
  if ((int)a3 < 1)
  {
    uint64_t v26 = 0;
  }
  else
  {
    uint64_t v47 = v13;
    uint64_t v22 = a6;
    uint64_t v26 = (char **)sub_1000CD3E8(8 * a3, v14, v15, v16, v17, v18, v19, v20);
    uint64_t v27 = 0;
    uint64_t v28 = 2 * v12;
    do
      v26[v27++] = (char *)sub_1000CD3E8(v28, v23, v24, v25, v17, v18, v19, v20);
    while (a3 != v27);
    a6 = v22;
    uint64_t v21 = v47;
  }
  int v29 = sub_100087724(a1, a2, a3, v26, v17, v18, v19, v20);
  int v33 = v29;
  if (v29 >= (int)a3) {
    uint64_t v34 = a3;
  }
  else {
    uint64_t v34 = v29;
  }
  if (!v29)
  {
    int v37 = sub_10008FE28(*(void *)(a1 + 848), a2, (uint64_t)v26, 1, v48, v30, v31, v32);
    int v33 = v37 >= 1 ? 1 : v37;
    if ((int)a3 >= 1 && v37 >= 1)
    {
      a5->i32[0] = 0;
      int v33 = 1;
      uint64_t v35 = 0;
      uint64_t v36 = 1;
      do
      {
LABEL_23:
        uint64_t v45 = v35;
        *(_DWORD *)(a4 + v45 * 4) = -1;
        a5->i32[v45] = v35++;
      }
      while (v36 != v35);
LABEL_24:
      uint64_t v34 = v36;
      goto LABEL_25;
    }
  }
  if ((int)v34 >= 1)
  {
    uint64_t v35 = 0;
    uint64_t v36 = v34;
    if (v34 >= 8 && (unint64_t)a5 - a4 >= 0x20)
    {
      uint64_t v35 = v34 & 0x7FFFFFF8;
      uint64_t v38 = (_OWORD *)(a4 + 16);
      int32x4_t v39 = (int32x4_t)xmmword_1000F4C90;
      uint64_t v40 = a5 + 1;
      v41.i64[0] = 0x400000004;
      v41.i64[1] = 0x400000004;
      *(void *)&long long v42 = -1;
      *((void *)&v42 + 1) = -1;
      v43.i64[0] = 0x800000008;
      v43.i64[1] = 0x800000008;
      uint64_t v44 = v34 & 0xFFFFFFF8;
      do
      {
        *(v38 - 1) = v42;
        *uint64_t v38 = v42;
        v40[-1] = v39;
        *uint64_t v40 = vaddq_s32(v39, v41);
        int32x4_t v39 = vaddq_s32(v39, v43);
        v38 += 2;
        v40 += 2;
        v44 -= 8;
      }
      while (v44);
      if (v35 == v34) {
        goto LABEL_24;
      }
    }
    goto LABEL_23;
  }
LABEL_25:
  sub_1000CD534(v21);
  *a6 = v33;
  return v34;
}

void sub_100086564(uint64_t a1, uint64_t a2, uint64_t a3, _DWORD *a4)
{
  *a4 = -1;
}

uint64_t sub_100086570(uint64_t a1, int a2, uint64_t a3)
{
  return sub_1000906C4(*(void *)(a1 + 848), a2, a3);
}

uint64_t sub_100086578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1000907E0(*(void *)(a1 + 848), a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_100086580(uint64_t a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  sub_100094C5C(*(void *)(a1 + 848), &v8, &v7);
  return sub_1000950EC(*(void *)(a1 + 624), *(unsigned __int16 *)(a1 + 640), v8, v7, a2, a3);
}

unint64_t sub_1000865E4(uint64_t a1, unsigned __int16 *a2)
{
  unint64_t result = sub_100091E08(*(void *)(a1 + 848), a2);
  if (result)
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    sub_100094C5C(*(void *)(a1 + 848), &v6, &v5);
    unint64_t result = sub_10009BF2C((unint64_t)a2);
    if (result) {
      return sub_100086CEC(a1, a2) != 255
    }
          && sub_100095428(*(void *)(a1 + 624), *(unsigned __int16 *)(a1 + 640), v6, v5, a2) != 0;
  }
  return result;
}

uint64_t sub_100086680(uint64_t a1, unsigned __int16 *a2, unsigned __int16 *a3, unint64_t *a4, uint64_t a5, int a6)
{
  uint64_t v37 = 0;
  uint64_t v38 = 0;
  uint64_t v35 = sub_1000CD550();
  uint64_t v9 = sub_100094C5C(*(void *)(a1 + 848), &v38, &v37);
  uint64_t v36 = (unsigned __int16 **)sub_1000CD3E8(8 * (int)a5, v10, v11, v12, v13, v14, v15, v16);
  if ((int)a5 >= 1)
  {
    uint64_t v17 = a5;
    uint64_t v18 = v36;
    do
    {
      uint64_t v19 = (void *)*a4;
      int v20 = sub_10009BF2C(*a4) + 1;
      uint64_t v28 = (unsigned __int16 *)sub_1000CD3E8(2 * v20, v21, v22, v23, v24, v25, v26, v27);
      *uint64_t v18 = v28;
      if (!sub_1000954E4(*(unsigned __int16 *)(a1 + 640), *(unsigned __int16 *)(a1 + 642), v38, v37, v9, (unsigned __int16 *)v19, v28))
      {
        int v29 = sub_100093C74(*(void *)(a1 + 848), v20, v19);
        *uint64_t v28 = v29;
        if (v29 == 0xFFFF)
        {
          uint64_t v30 = 0xFFFFFFLL;
          goto LABEL_8;
        }
        v28[1] = -1;
      }
      ++v18;
      ++a4;
      --v17;
    }
    while (v17);
  }
  uint64_t v30 = sub_1000867C4(a1, a2, a3, a5, v36, a6, 0);
LABEL_8:
  sub_1000CD534(v35);
  return v30;
}

uint64_t sub_1000867C4(uint64_t a1, unsigned __int16 *a2, unsigned __int16 *a3, uint64_t a4, unsigned __int16 **a5, int a6, int a7)
{
  unsigned int v92 = 0;
  uint64_t v90 = 0;
  int8x8_t v91 = 0;
  uint64_t v89 = 0;
  uint64_t v14 = sub_1000CD550();
  if (!a3 || !*a3) {
    goto LABEL_47;
  }
  uint64_t v15 = *(int *)(a1 + 796) + 1;
  if (a4 == 1 && *(unsigned __int16 *)(a1 + 828) != 0xFFFF && qword_100101CC0)
  {
    if (*(_DWORD *)(qword_100101CC0 + 3920))
    {
      if (sub_100085690(a1, a3, (uint64_t)&v92, 1, 0))
      {
        int8x8_t v91 = (char *)sub_1000CD3E8(2 * v15, v16, v17, v18, v19, v20, v21, v22);
        uint64_t v23 = a2;
        uint64_t v24 = v92;
        int v29 = sub_100087724(a1, v92, 1, &v91, v25, v26, v27, v28);
        if (v29 >= 1) {
          int v33 = 1;
        }
        else {
          int v33 = v29;
        }
        uint64_t v34 = v24;
        a2 = v23;
        sub_10008FE28(*(void *)(a1 + 848), v34, (uint64_t)&(&v91)[v33], (1 - v33), (*(_DWORD *)(a1 + 796) + 1), v30, v31, v32);
        sub_100094C5C(*(void *)(a1 + 848), &v90, &v89);
        if (sub_1000951D0((unsigned __int16 *)v91, *a5, *(void *)(a1 + 624), *(unsigned __int16 *)(a1 + 640), v90, v89))
        {
          a7 = 0;
          a5 = (unsigned __int16 **)&v91;
        }
      }
      goto LABEL_47;
    }
  }
  else if (!qword_100101CC0)
  {
    goto LABEL_47;
  }
  if (*(_DWORD *)(qword_100101CC0 + 3908))
  {
    float64x2_t v87 = a2;
    unsigned int v92 = sub_10008466C(a1);
    if (v92 != 0xFFFFFF)
    {
      int v84 = a7;
      int v85 = a6;
      uint64_t v86 = a4;
      sub_100094C5C(*(void *)(a1 + 848), &v90, &v89);
      int v35 = sub_100084814(a1);
      unint64_t v50 = sub_1000CD3E8(8 * v35, v36, v37, v38, v39, v40, v41, v42);
      if (v35 < 1)
      {
        sub_100084814(a1);
      }
      else
      {
        uint64_t v82 = v14;
        int8x8_t v83 = a3;
        uint64_t v51 = 0;
        uint64_t v52 = v35;
        do
        {
          *(void *)(v50 + v51) = sub_1000CD3E8(2 * (int)v15, v43, v44, v45, v46, v47, v48, v49);
          v51 += 8;
        }
        while (8 * v35 != v51);
        sub_100084814(a1);
        if ((int)a4 > 0)
        {
          unint64_t v53 = 0;
          uint64_t v88 = 8 * a4;
          int v54 = a5;
          do
          {
            unint64_t v55 = &a5[v53];
            if (v53)
            {
              for (uint64_t i = 0; i != v52; ++i)
              {
                uint64_t v57 = (unsigned __int16 **)(v50 + 8 * i);
                if (sub_10009536C(*v57, *v55, *(void *)(a1 + 624), *(unsigned __int16 *)(a1 + 640), v90, v89))
                {
                  if (v54 == a5)
                  {
                    unint64_t v65 = sub_1000CD3E8(v88, v58, v59, v60, v61, v62, v63, v64);
                    int v54 = (unsigned __int16 **)v65;
                    uint64_t v66 = 0;
                    if (v53 < 4) {
                      goto LABEL_50;
                    }
                    if (v65 - (unint64_t)a5 < 0x20) {
                      goto LABEL_50;
                    }
                    uint64_t v67 = 0;
                    unint64_t v68 = v53 & 0xFFFFFFFFFFFFFFFCLL;
                    do
                    {
                      long long v69 = *(_OWORD *)&a5[v67 + 2];
                      int v70 = (_OWORD *)(v65 + v67 * 8);
                      *int v70 = *(_OWORD *)&a5[v67];
                      v70[1] = v69;
                      v67 += 4;
                      v68 -= 4;
                    }
                    while (v68);
                    uint64_t v66 = v53 & 0x7FFFFFFFFFFFFFFCLL;
                    if (v53 != (v53 & 0x7FFFFFFFFFFFFFFCLL))
                    {
LABEL_50:
                      do
                      {
                        *(void *)(v65 + 8 * v66) = a5[v66];
                        ++v66;
                      }
                      while (v53 != v66);
                    }
                  }
                }
                else
                {
                  uint64_t v57 = &a5[v53];
                }
                v54[v53] = *v57;
              }
            }
            else
            {
              uint64_t v71 = v52;
              int v72 = (unsigned __int16 **)v50;
              do
              {
                if (sub_10009536C(*v72, *v55, *(void *)(a1 + 624), *(unsigned __int16 *)(a1 + 640), v90, v89))
                {
                  int8x8_t v73 = v72;
                  if (v54 == a5)
                  {
                    int v54 = (unsigned __int16 **)sub_1000CD3E8(v88, v74, v75, v76, v77, v78, v79, v80);
                    int8x8_t v73 = v72;
                  }
                }
                else
                {
                  int8x8_t v73 = a5;
                }
                *int v54 = *v73;
                ++v72;
                --v71;
              }
              while (v71);
            }
            ++v53;
          }
          while (v53 != v86);
          a5 = v54;
          a4 = v86;
        }
        uint64_t v14 = v82;
        a3 = v83;
      }
      a7 = v84;
      a6 = v85;
    }
    a2 = v87;
  }
LABEL_47:
  unsigned int v92 = sub_100090994(*(void *)(a1 + 848), a2, a3, (unint64_t *)a5, a4, (_DWORD *)(a1 + 784), (_DWORD *)(a1 + 788), (_DWORD *)(a1 + 796), (_DWORD *)(a1 + 792), a6, a7);
  sub_1000CD534(v14);
  return v92;
}

uint64_t sub_100086BCC(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_100091650(*(void *)(a1 + 848), a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_100086BD4(uint64_t a1)
{
  return sub_100091D6C(*(void *)(a1 + 848));
}

BOOL sub_100086BDC(uint64_t a1, int a2)
{
  return *(_DWORD *)(a1 + 652) <= a2 && sub_100091D74(*(void *)(a1 + 848), a2);
}

BOOL sub_100086BF8(uint64_t a1, int a2)
{
  return *(_DWORD *)(a1 + 652) > a2 || sub_100091D74(*(void *)(a1 + 848), a2);
}

uint64_t sub_100086C14(uint64_t a1, uint64_t a2, unsigned __int16 *a3)
{
  if (*(_DWORD *)(a1 + 652) <= (int)a2)
  {
    int v3 = 0;
    uint64_t v4 = (int *)(a1 + 796);
    uint64_t v5 = (_DWORD *)(a1 + 792);
    uint64_t v6 = *(void *)(a1 + 848);
  }
  else
  {
    if (*(unsigned __int8 *)(*(void *)(a1 + 496) + (int)a2) <= 1u) {
      int v3 = 1;
    }
    else {
      int v3 = *(unsigned __int8 *)(*(void *)(a1 + 496) + (int)a2);
    }
    uint64_t v4 = (int *)(a1 + 796);
    uint64_t v5 = (_DWORD *)(a1 + 792);
    uint64_t v6 = *(void *)(a1 + 848);
  }
  return sub_100091EBC(v6, a2, a3, v3, v4, v5);
}

uint64_t sub_100086C5C(uint64_t a1, uint64_t a2, int a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (*(_DWORD *)(a1 + 652) <= (int)a2)
  {
    uint64_t v9 = 0;
    if (a3 >= 0) {
      return sub_100092B08(*(void *)(a1 + 848), a2, a3, v9, a4, a6, a7, a8);
    }
  }
  else
  {
    if (*(unsigned __int8 *)(*(void *)(a1 + 496) + (int)a2) <= 1u) {
      uint64_t v9 = 1;
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(*(void *)(a1 + 496) + (int)a2);
    }
    if ((int)v9 <= a3) {
      return sub_100092B08(*(void *)(a1 + 848), a2, a3, v9, a4, a6, a7, a8);
    }
  }
  return 0;
}

uint64_t sub_100086CA0(uint64_t a1, int a2)
{
  int v2 = *(_DWORD *)(a1 + 652);
  if (a2 == 0xFFFFFF)
  {
    if (v2 > 0) {
      return 0;
    }
  }
  else if (v2 - 1 > a2)
  {
    return (a2 + 1);
  }
  return sub_100093DEC(*(void *)(a1 + 848), a2);
}

BOOL sub_100086CDC(uint64_t a1)
{
  return *(void *)(a1 + 808) != 0;
}

uint64_t sub_100086CEC(uint64_t a1, unsigned __int16 *a2)
{
  if (!*(void *)(a1 + 808)) {
    return 2;
  }
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  sub_100094C5C(*(void *)(a1 + 848), &v24, &v23);
  uint64_t v4 = 2 * (int)(sub_100095428(*(void *)(a1 + 624), *(unsigned __int16 *)(a1 + 640), v24, v23, a2) + 1);
  uint64_t v12 = (void *)sub_1000CD3E8(v4, v5, v6, v7, v8, v9, v10, v11);
  sub_1000950EC(*(void *)(a1 + 624), *(unsigned __int16 *)(a1 + 640), v24, v23, a2, (uint64_t)v12);
  unsigned int v13 = *(unsigned __int16 *)v12;
  if (v13 == 0xFFFF)
  {
LABEL_3:
    uint64_t v14 = 2;
  }
  else
  {
    int v16 = *(_DWORD *)(a1 + 824);
    uint64_t v17 = v12;
    while (1)
    {
      if (v16 > (int)v13)
      {
        uint64_t v19 = *(void *)(a1 + 808);
        uint64_t v14 = *(unsigned __int8 *)(v19 + v13);
        if (v14 != 2) {
          break;
        }
      }
      unsigned int v18 = *((unsigned __int16 *)v17 + 1);
      uint64_t v17 = (void *)((char *)v17 + 2);
      unsigned int v13 = v18;
      if (v18 == 0xFFFF) {
        goto LABEL_3;
      }
    }
    uint64_t v20 = 2;
    while (1)
    {
      if (v16 > (int)v13)
      {
        int v21 = *(unsigned __int8 *)(v19 + v13);
        if (v21 != v14 && v21 != 2) {
          break;
        }
      }
      unsigned int v13 = *(unsigned __int16 *)((char *)v17 + v20);
      v20 += 2;
      if (v13 == 0xFFFF) {
        goto LABEL_4;
      }
    }
    uint64_t v14 = 255;
  }
LABEL_4:
  sub_1000CD4D0(v12, v4);
  return v14;
}

uint64_t sub_100086E28(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6 = sub_1000CD550();
  unint64_t v14 = sub_1000CD3E8(8 * (a3 + 1), v7, v8, v9, v10, v11, v12, v13);
  uint64_t v22 = (uint64_t *)v14;
  if ((a3 & 0x80000000) == 0)
  {
    uint64_t v23 = 2 * *(int *)(a1 + 792) + 2;
    uint64_t v24 = (a3 + 1);
    uint64_t v25 = (unint64_t *)v14;
    do
    {
      *v25++ = sub_1000CD3E8(v23, v15, v16, v17, v18, v19, v20, v21);
      --v24;
    }
    while (v24);
  }
  sub_1000861B8(a1, a2, (a3 + 1), v22);
  uint64_t v26 = (unsigned __int16 *)v22[a3];
  unsigned int v27 = *v26;
  if (v27 == 0xFFFF)
  {
LABEL_5:
    uint64_t v28 = 2;
  }
  else
  {
    int v30 = *(_DWORD *)(a1 + 824);
    while (1)
    {
      if (v30 > (int)v27)
      {
        uint64_t v32 = *(void *)(a1 + 808);
        uint64_t v28 = *(unsigned __int8 *)(v32 + v27);
        if (v28 != 2) {
          break;
        }
      }
      unsigned int v31 = v26[1];
      ++v26;
      unsigned int v27 = v31;
      if (v31 == 0xFFFF) {
        goto LABEL_5;
      }
    }
    uint64_t v33 = 1;
    while (1)
    {
      if (v30 > (int)v27)
      {
        int v34 = *(unsigned __int8 *)(v32 + v27);
        if (v34 != v28 && v34 != 2) {
          break;
        }
      }
      unsigned int v27 = v26[v33++];
      if (v27 == 0xFFFF) {
        goto LABEL_6;
      }
    }
    uint64_t v28 = 255;
  }
LABEL_6:
  sub_1000CD534(v6);
  return v28;
}

uint64_t sub_100086F54(uint64_t a1)
{
  unsigned int v2 = sub_1000849BC(a1);
  unsigned int v3 = sub_100094C74(*(void *)(a1 + 848));
  return sub_1000C085C(v3, 4, v2);
}

uint64_t sub_100086F9C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 744);
}

uint64_t sub_100086FA4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 748);
}

uint64_t sub_100086FAC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 752);
}

uint64_t sub_100086FB4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 756);
}

uint64_t sub_100086FBC(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 740);
}

uint64_t sub_100086FC4(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int16 *)(a1 + 640);
  uint64_t v2 = *(void *)(a1 + 848);
  if (v2)
  {
    unsigned int v3 = sub_100093DE4(v2);
    if (v1 <= v3) {
      return v3;
    }
    else {
      return v1;
    }
  }
  return v1;
}

uint64_t sub_100086FFC(uint64_t a1, unsigned int a2)
{
  if (*(unsigned __int16 *)(a1 + 640) >= a2) {
    return *(void *)(*(void *)(a1 + 768) + 8 * a2);
  }
  else {
    return 0;
  }
}

BOOL sub_100087020(uint64_t a1, uint64_t a2, char *a3)
{
  return sub_10009404C(*(void *)(a1 + 848), a2, a3);
}

BOOL sub_100087028(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  BOOL v9 = sub_1000945D4(*(_DWORD **)(a1 + 848), a2, a3, a4, a5, a6, a7, a8);
  if (v9)
  {
    *(_OWORD *)(a1 + 784) = *(_OWORD *)(a1 + 656);
    sub_100093F80(*(void *)(a1 + 848), a1, (_DWORD *)(a1 + 784), (_DWORD *)(a1 + 788), (_DWORD *)(a1 + 796), (_DWORD *)(a1 + 792));
  }
  return v9;
}

uint64_t sub_100087080(uint64_t a1)
{
  return nullsub_1(*(void *)(a1 + 848));
}

uint64_t sub_100087088(uint64_t a1, int a2, int a3, __int16 *a4, uint64_t a5, int a6, unsigned int a7, int a8)
{
  int v13 = *(_DWORD *)(a1 + 676);
  int v76 = sub_1000CED6C((unint64_t)a4);
  int v14 = 4 * v76 + 4;
  uint64_t v15 = v14;
  uint64_t v23 = (unsigned __int8 *)sub_1000CD3E8(v14, v16, v17, v18, v19, v20, v21, v22);
  unsigned int v31 = (unsigned __int8 *)sub_1000CD3E8(v14, v24, v25, v26, v27, v28, v29, v30);
  if (v13 == 4) {
    int v32 = 3;
  }
  else {
    int v32 = v13;
  }
  if (sub_1000C0270(v32, a4, v14, (uint64_t)v31) == 2)
  {
    sub_1000CD4D0(v31, v14);
    sub_1000CD4D0(v23, v14);
    uint64_t v33 = *(void *)(a1 + 848);
    return sub_1000937B4(v33, a2, a3, a4, a5, a6, a7);
  }
  uint64_t v35 = a7;
  int v75 = a2;
  uint64_t v78 = a5;
  sub_10008814C(v23, (unsigned __int16 *)a4, *(_DWORD *)(a1 + 732), v13, 0, 0);
  uint64_t v79 = v15;
  if (*(_DWORD *)(a1 + 732))
  {
    int v36 = sub_100088008((uint64_t)a4);
  }
  else
  {
    int v75 = 0;
    int v36 = 128;
  }
  uint64_t v37 = v31;
  int v82 = a3;
  int v38 = sub_1000CAD00((unint64_t)v23);
  int v39 = *(_DWORD *)(a1 + 652);
  LODWORD(v40) = 0;
  int v41 = v39 - 1;
  if (v39 >= 1)
  {
    do
    {
      int v42 = v40 + v41;
      if ((int)v40 + v41 < 0 != __OFADD__(v40, v41)) {
        ++v42;
      }
      int v43 = v42 >> 1;
      uint64_t v44 = *(unsigned __int16 *)(*(void *)(a1 + 568) + 2 * (v42 >> 1));
      if ((int)sub_1000CAD44((unsigned __int8 *)(*(void *)(a1 + 584) + v44), v23, v38, v44) >= 0) {
        int v41 = v43 - 1;
      }
      else {
        LODWORD(v40) = v43 + 1;
      }
    }
    while ((int)v40 <= v41);
    int v39 = *(_DWORD *)(a1 + 652);
    uint64_t v37 = v31;
  }
  uint64_t v74 = (unsigned __int16 *)a4;
  if ((int)v40 >= v39)
  {
    uint64_t v53 = 0;
    goto LABEL_69;
  }
  if (!v75)
  {
    uint64_t v54 = 0;
    if (!a7)
    {
      do
      {
        uint64_t v67 = *(unsigned __int16 *)(*(void *)(a1 + 568) + 2 * (int)v40 + 2 * v54);
        unint64_t v68 = (unsigned __int8 *)(*(void *)(a1 + 584) + v67);
        if (sub_1000CAD44(v68, v23, v38, v67)
          || v82 && sub_1000CAD00((unint64_t)v68) != v38)
        {
          break;
        }
        if (v54 < a6) {
          *(_DWORD *)(v78 + 4 * v54) = v40 + v54;
        }
        ++v54;
      }
      while ((int)v40 + v54 < *(int *)(a1 + 652));
LABEL_50:
      uint64_t v53 = v54;
      LODWORD(v35) = a7;
      uint64_t v37 = v31;
      goto LABEL_69;
    }
    if (a6 <= 1) {
      int v55 = 1;
    }
    else {
      int v55 = a6;
    }
    uint64_t v56 = (v55 - 1);
    while (1)
    {
      uint64_t v57 = *(unsigned __int16 *)(*(void *)(a1 + 568) + 2 * (int)v40 + 2 * v54);
      uint64_t v58 = (unsigned __int8 *)(*(void *)(a1 + 584) + v57);
      if (sub_1000CAD44(v58, v23, v38, v57)
        || v82 && sub_1000CAD00((unint64_t)v58) != v38)
      {
        goto LABEL_50;
      }
      if (v54 < a6) {
        *(_DWORD *)(v78 + 4 * v54) = v40 + v54;
      }
      if (v56 == v54) {
        break;
      }
      ++v54;
      if ((int)v40 + v54 >= *(int *)(a1 + 652)) {
        goto LABEL_50;
      }
    }
    uint64_t v53 = (v54 + 1);
    uint64_t v37 = v31;
LABEL_100:
    sub_1000CD4D0(v37, v79);
    sub_1000CD4D0(v23, v79);
    return v53;
  }
  if (v36 != 16)
  {
    uint64_t v59 = 0;
    while (1)
    {
      uint64_t v40 = (int)v40;
      while (1)
      {
        uint64_t v62 = *(unsigned __int16 *)(*(void *)(a1 + 568) + 2 * v40);
        uint64_t v63 = (unsigned __int8 *)(*(void *)(a1 + 584) + v62);
        if (sub_1000CAD44(v63, v23, v38, v62)
          || v82 && sub_1000CAD00((unint64_t)v63) != v38)
        {
LABEL_66:
          uint64_t v53 = v59;
          goto LABEL_69;
        }
        int v64 = *(unsigned __int8 *)(*(void *)(a1 + 528) + v40);
        if (v64 == 16)
        {
          unint64_t v60 = (unint64_t)&v63[(int)sub_1000CAD00((unint64_t)v63) + 1];
          int v61 = sub_1000CAD00(v60);
          if (!sub_1000CAD44((unsigned __int8 *)(v60 + v61 + 1), v37, v79, v60 + v61)) {
            break;
          }
          goto LABEL_54;
        }
        if ((v36 & v64) != 0) {
          break;
        }
LABEL_54:
        if (++v40 >= *(int *)(a1 + 652)) {
          goto LABEL_66;
        }
      }
      if (v59 < a6) {
        *(_DWORD *)(v78 + 4 * v59) = v40;
      }
      uint64_t v53 = ++v59;
      if (a7 && (int)v59 >= a6) {
        goto LABEL_100;
      }
      LODWORD(v40) = v40 + 1;
      if ((int)v40 >= *(_DWORD *)(a1 + 652)) {
        goto LABEL_69;
      }
    }
  }
  if (!v82)
  {
    uint64_t v53 = 0;
    while (1)
    {
      uint64_t v46 = v35;
      uint64_t v40 = (int)v40;
      while (1)
      {
        uint64_t v71 = *(unsigned __int16 *)(*(void *)(a1 + 568) + 2 * v40);
        int v72 = (unsigned __int8 *)(*(void *)(a1 + 584) + v71);
        if (sub_1000CAD44(v72, v23, v38, v71))
        {
LABEL_68:
          LODWORD(v35) = v46;
          goto LABEL_69;
        }
        int v73 = *(unsigned __int8 *)(*(void *)(a1 + 528) + v40);
        if (v73 == 16)
        {
          unint64_t v69 = (unint64_t)&v72[(int)sub_1000CAD00((unint64_t)v72) + 1];
          int v70 = sub_1000CAD00(v69);
          if (!sub_1000CAD44((unsigned __int8 *)(v69 + v70 + 1), v37, v79, v69 + v70)) {
            break;
          }
          goto LABEL_89;
        }
        if (!sub_1000878C8(v74, (char *)v72, v73, v76, *(_DWORD *)(a1 + 676), 0)) {
          break;
        }
LABEL_89:
        if (++v40 >= *(int *)(a1 + 652)) {
          goto LABEL_68;
        }
      }
      if (v53 < a6) {
        *(_DWORD *)(v78 + 4 * v53) = v40;
      }
      ++v53;
      uint64_t v35 = v46;
      if (v46 && (int)v53 >= a6) {
        goto LABEL_100;
      }
      LODWORD(v40) = v40 + 1;
      if ((int)v40 >= *(_DWORD *)(a1 + 652)) {
        goto LABEL_69;
      }
    }
  }
  uint64_t v45 = 0;
  while (2)
  {
    uint64_t v46 = v35;
    uint64_t v47 = (int)v40;
    while (1)
    {
      uint64_t v50 = *(unsigned __int16 *)(*(void *)(a1 + 568) + 2 * v47);
      uint64_t v51 = (unsigned __int8 *)(*(void *)(a1 + 584) + v50);
      if (sub_1000CAD44(v51, v23, v38, v50) || sub_1000CAD00((unint64_t)v51) != v38)
      {
LABEL_67:
        uint64_t v53 = v45;
        goto LABEL_68;
      }
      int v52 = *(unsigned __int8 *)(*(void *)(a1 + 528) + v47);
      if (v52 == 16)
      {
        unint64_t v48 = (unint64_t)&v51[(int)sub_1000CAD00((unint64_t)v51) + 1];
        int v49 = sub_1000CAD00(v48);
        if (!sub_1000CAD44((unsigned __int8 *)(v48 + v49 + 1), v37, v79, v48 + v49)) {
          break;
        }
        goto LABEL_26;
      }
      if (!sub_1000878C8(v74, (char *)v51, v52, v76, *(_DWORD *)(a1 + 676), 0)) {
        break;
      }
LABEL_26:
      if (++v47 >= *(int *)(a1 + 652)) {
        goto LABEL_67;
      }
    }
    if (v45 < a6) {
      *(_DWORD *)(v78 + 4 * v45) = v47;
    }
    ++v45;
    if (v46 && (int)v45 >= a6)
    {
      uint64_t v53 = v45;
      goto LABEL_100;
    }
    LODWORD(v40) = v47 + 1;
    uint64_t v53 = v45;
    uint64_t v35 = v46;
    if ((int)v40 < *(_DWORD *)(a1 + 652)) {
      continue;
    }
    break;
  }
LABEL_69:
  sub_1000CD4D0(v37, v79);
  sub_1000CD4D0(v23, v79);
  if (v35) {
    BOOL v65 = a6 <= (int)v53;
  }
  else {
    BOOL v65 = 0;
  }
  char v66 = v65;
  if (!a8 && (v66 & 1) == 0) {
    return sub_1000937B4(*(void *)(a1 + 848), v75, v82, (__int16 *)v74, v78 + 4 * (int)v53, a6 - (int)v53, v35)+ v53;
  }
  return v53;
}

uint64_t sub_100087724(uint64_t a1, uint64_t a2, uint64_t a3, char **a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v9 = a3;
  uint64_t v12 = 0;
  int v36 = 0;
  uint64_t v35 = 0;
  if (*(_DWORD *)(a1 + 652) <= (int)a2) {
    goto LABEL_6;
  }
  uint64_t v13 = *(void *)(a1 + 496);
  uint64_t v12 = *(unsigned __int8 *)(v13 + (int)a2);
  if (*(unsigned char *)(v13 + (int)a2))
  {
    int v14 = (unsigned __int16 *)(*(void *)(a1 + 544) + 2
                                                     * *(unsigned __int16 *)(*(void *)(a1 + 512) + 2 * (int)a2));
    if ((int)v12 < (int)a3) {
      LODWORD(a3) = v12;
    }
    sub_100095628((_WORD **)a4, v14, a3);
LABEL_6:
    if (v9 < 1) {
      return v12;
    }
    int v15 = *(unsigned __int16 *)(a1 + 828);
    if (v15 == 0xFFFF || v12 != 1) {
      return v12;
    }
    goto LABEL_12;
  }
  if ((int)a3 < 1) {
    return 1;
  }
  uint64_t v18 = (void *)sub_1000CD3E8(2 * *(int *)(a1 + 784) + 2, a2, a3, (uint64_t)a4, a5, a6, a7, a8);
  uint64_t v26 = (void *)sub_1000CD3E8(2 * *(int *)(a1 + 788) + 2, v19, v20, v21, v22, v23, v24, v25);
  sub_100085A0C(a1, a2, (uint64_t)v18, (uint64_t)v26, v27, v28, v29, v30);
  if (*(_WORD *)v26) {
    unint64_t v31 = (unint64_t)v26;
  }
  else {
    unint64_t v31 = (unint64_t)v18;
  }
  int v32 = *a4;
  BOOL v33 = sub_1000CAD44((unsigned __int8 *)(a1 + 724), "z", 1, *(unsigned __int16 *)v26) == 0;
  uint64_t v12 = sub_100096158(*(void *)(a1 + 480), v31, v33, v32, (*(_DWORD *)(a1 + 796) + 1), (uint64_t)&v35, 1, (uint64_t)&v36);
  sub_1000CD4D0(v26, 2 * *(int *)(a1 + 788) + 2);
  sub_1000CD4D0(v18, 2 * *(int *)(a1 + 784) + 2);
  int v15 = *(unsigned __int16 *)(a1 + 828);
  if (v15 != 0xFFFF && v12 == 1)
  {
LABEL_12:
    sub_10009593C(*a4, *(unsigned __int8 *)(*(void *)(a1 + 832) + (int)a2), v15);
    return 1;
  }
  return v12;
}

uint64_t sub_1000878C8(unsigned __int16 *a1, char *a2, char a3, int a4, int a5, uint64_t a6)
{
  uint64_t v8 = a2;
  int v9 = a1;
  uint64_t v10 = a4;
  if ((a5 - 1) < 2)
  {
    if (a3)
    {
      if (a4 >= 1)
      {
        while (1)
        {
          unsigned int v17 = *v8++;
          int v18 = nullsub_1(v17);
          int v19 = *v9++;
          if (v19 != v18) {
            break;
          }
          if (!--v10) {
            return 0;
          }
        }
        return 1;
      }
    }
    else if ((a3 & 4) != 0)
    {
      if (a4 >= 1)
      {
        while (1)
        {
          int v23 = *v8++;
          uint64_t v24 = sub_1000C1330(v23);
          int v25 = nullsub_1(v24);
          int v26 = *v9++;
          if (v26 != v25) {
            break;
          }
          if (!--v10) {
            return 0;
          }
        }
        return 1;
      }
    }
    else
    {
      if (a4 < 1)
      {
        LODWORD(v12) = 0;
        int v32 = *a1;
        if (v32 != sub_1000C1330(*a2)) {
          return 1;
        }
      }
      else
      {
        uint64_t v12 = 0;
        while (a1[v12] == 32)
        {
          if (a2[v12] != 32) {
            return 1;
          }
          if (a4 == ++v12)
          {
            LODWORD(v12) = a4;
            break;
          }
        }
        int v13 = a1[v12];
        if (v13 != sub_1000C1330(a2[v12])) {
          return 1;
        }
      }
      int v33 = v12 + 1;
      if ((a3 & 2) == 0)
      {
        if (v33 < a4)
        {
          int v34 = &v8[v33];
          uint64_t v35 = &v9[v33];
          while (1)
          {
            int v38 = *v35++;
            int v37 = v38;
            unsigned int v40 = *v34++;
            uint64_t v39 = v40;
            if (*(v9 - 1) == 32)
            {
              if (v37 != sub_1000C1330(v39)) {
                return 1;
              }
            }
            else if (v37 != nullsub_1(v39))
            {
              return 1;
            }
            uint64_t result = 0;
            if (++v33 >= a4) {
              return result;
            }
          }
        }
        return 0;
      }
      if (v33 < a4)
      {
        int v41 = &v8[v33];
        int v42 = &v9[v33];
        while (1)
        {
          int v44 = *v42++;
          int v43 = v44;
          unsigned int v45 = *v41++;
          if (v43 != nullsub_1(v45)) {
            break;
          }
          uint64_t result = 0;
          if (++v33 >= a4) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  else if (a5 == 4)
  {
    unsigned __int16 v71 = 0;
    if (a3)
    {
      if (a4 >= 1)
      {
        while (1)
        {
          int v27 = *v9++;
          int v28 = sub_1000CABBC(v8, a6, &v71);
          if (v27 != v71) {
            break;
          }
          v8 += v28;
          if (!--v10) {
            return 0;
          }
        }
        return 1;
      }
    }
    else if ((a3 & 4) != 0)
    {
      if (a4 >= 1)
      {
        while (1)
        {
          int v30 = *v9++;
          int v31 = sub_1000CABBC(v8, a6, &v71);
          if (v30 != sub_1000CDBE4(v71)) {
            break;
          }
          v8 += v31;
          if (!--v10) {
            return 0;
          }
        }
        return 1;
      }
    }
    else
    {
      if (a4 < 1)
      {
        LODWORD(v15) = 0;
      }
      else
      {
        uint64_t v15 = 0;
        while (v9[v15] == 32)
        {
          int v16 = sub_1000CABBC(v8, a6, &v71);
          if (v71 != 32) {
            return 1;
          }
          v8 += v16;
          if (v10 == ++v15)
          {
            LODWORD(v15) = v10;
            break;
          }
        }
      }
      int v54 = v9[v15];
      int v55 = sub_1000CABBC(v8, a6, &v71);
      if (v54 != sub_1000CDBE4(v71)) {
        return 1;
      }
      uint64_t v56 = &v8[v55];
      int v57 = v15 + 1;
      if ((a3 & 2) == 0)
      {
        if (v57 < a4)
        {
          uint64_t v58 = v57;
          int v59 = ~v15 + a4;
          while (1)
          {
            int v60 = v9[v58];
            int v61 = sub_1000CABBC(v56, a6, &v71);
            if (v9[v58 - 1] == 32)
            {
              if (v60 != sub_1000CDBE4(v71)) {
                return 1;
              }
            }
            else if (v60 != v71)
            {
              return 1;
            }
            uint64_t result = 0;
            v56 += v61;
            ++v58;
            if (!--v59) {
              return result;
            }
          }
        }
        return 0;
      }
      if (v57 < a4)
      {
        char v66 = &v9[v57];
        while (1)
        {
          int v67 = *v66++;
          int v68 = sub_1000CABBC(v56, a6, &v71);
          if (v67 != v71) {
            break;
          }
          int v69 = v68;
          uint64_t result = 0;
          v56 += v69;
          if (++v57 >= a4) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  else if (a5 == 3)
  {
    unsigned __int16 v70 = 0;
    if (a3)
    {
      if (a4 >= 1)
      {
        int v20 = 0;
        while (1)
        {
          int v21 = *v9++;
          int v22 = sub_1000D2284(&v8[v20], &v70);
          if (v21 != v70) {
            break;
          }
          v20 += v22;
          if (!--v10) {
            return 0;
          }
        }
        return 1;
      }
    }
    else if ((a3 & 4) != 0)
    {
      if (a4 >= 1)
      {
        while (1)
        {
          int v29 = *v9++;
          sub_1000D2284(v8, &v70);
          if (v29 != sub_1000CDBE4(v70)) {
            break;
          }
          if (!--v10) {
            return 0;
          }
        }
        return 1;
      }
    }
    else
    {
      if (a4 < 1)
      {
        LODWORD(v11) = 0;
      }
      else
      {
        uint64_t v11 = 0;
        while (a1[v11] == 32)
        {
          if (a2[v11] != 32) {
            return 1;
          }
          if (a4 == ++v11)
          {
            LODWORD(v11) = a4;
            break;
          }
        }
      }
      int v46 = a1[v11];
      int v47 = sub_1000D2284(&a2[v11], &v70);
      if (v46 != sub_1000CDBE4(v70)) {
        return 1;
      }
      int v48 = v11 + 1;
      int v49 = v47 + v11;
      if ((a3 & 2) == 0)
      {
        if (v48 < a4)
        {
          uint64_t v50 = v48;
          int v51 = ~v11 + a4;
          while (1)
          {
            int v52 = v9[v50];
            int v53 = sub_1000D2284(&v8[v49], &v70);
            if (v9[v50 - 1] == 32)
            {
              if (v52 != sub_1000CDBE4(v70)) {
                return 1;
              }
            }
            else if (v52 != v70)
            {
              return 1;
            }
            uint64_t result = 0;
            ++v50;
            v49 += v53;
            if (!--v51) {
              return result;
            }
          }
        }
        return 0;
      }
      if (v48 < a4)
      {
        uint64_t v62 = &v9[v48];
        while (1)
        {
          int v63 = *v62++;
          int v64 = sub_1000D2284(&v8[v49], &v70);
          if (v63 != v70) {
            break;
          }
          int v65 = v64;
          uint64_t result = 0;
          v49 += v65;
          if (++v48 >= a4) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_100087DDC(uint64_t a1, int a2)
{
  if ((a2 - 3) < 2)
  {
    uint64_t v12 = (char *)(a1 - 1);
    do
      int v13 = *++v12;
    while (v13 == 32);
    unsigned __int16 v28 = 0;
    int v14 = sub_1000D2284(v12, &v28);
    int v6 = sub_1000CD950(v28);
    if (v6)
    {
      int v15 = v28;
      uint64_t v16 = sub_1000CDA88(v28);
      if (v15 != sub_1000CDBE4(v16)) {
        return 16;
      }
    }
    BOOL v17 = v6 == 0;
    int v18 = &v12[v14];
    if (*v18)
    {
      int v9 = v6;
      int v19 = v6;
      while (1)
      {
        int v20 = sub_1000D2284(v18, &v28);
        int v21 = sub_1000CD950(v28);
        int v22 = v28;
        if (v21)
        {
          uint64_t v23 = sub_1000CDA88(v28);
          if (v22 != sub_1000CDBE4(v23)) {
            return 16;
          }
          int v19 = 0;
          BOOL v17 = 0;
          if (*(v18 - 1) != 32) {
            int v6 = 0;
          }
        }
        else if (sub_1000CD818(v28))
        {
          int v9 = 0;
          if (*(v18 - 1) == 32) {
            int v6 = 0;
          }
        }
        v18 += v20;
        if (!*v18) {
          goto LABEL_35;
        }
      }
    }
    int v19 = v6;
    int v9 = v6;
LABEL_35:
    unsigned __int8 v24 = v17;
    unsigned __int8 v25 = v17 | 2;
    BOOL v26 = v19 == 0;
  }
  else
  {
    if ((a2 - 1) > 1) {
      return 0;
    }
    uint64_t v2 = (unsigned char *)(a1 - 1);
    do
    {
      int v4 = *++v2;
      int v3 = v4;
    }
    while (v4 == 32);
    int v5 = sub_1000C12D4(v3);
    int v6 = v5;
    BOOL v7 = v5 == 0;
    LOBYTE(v8) = v2[1];
    if ((_BYTE)v8)
    {
      int v9 = v5;
      int v10 = v5;
      do
      {
        unsigned int v11 = v8;
        if (sub_1000C12D4(v8))
        {
          int v10 = 0;
          BOOL v7 = 0;
          if (*v2 != 32) {
            int v6 = 0;
          }
        }
        else if (sub_1000C12B0(v11))
        {
          int v9 = 0;
          if (*v2 == 32) {
            int v6 = 0;
          }
        }
        int v8 = v2[2];
        ++v2;
      }
      while (v8);
    }
    else
    {
      int v10 = v5;
      int v9 = v5;
    }
    unsigned __int8 v24 = v7;
    unsigned __int8 v25 = v7 | 2;
    BOOL v26 = v10 == 0;
  }
  if (!v26) {
    unsigned __int8 v24 = v25;
  }
  if (v9) {
    v24 |= 4u;
  }
  if (v6) {
    v24 |= 8u;
  }
  if (!v24) {
    return 16;
  }
  return v24;
}

uint64_t sub_100088008(uint64_t a1)
{
  uint64_t v1 = (_WORD *)(a1 - 2);
  do
  {
    unsigned int v3 = (unsigned __int16)v1[1];
    ++v1;
    uint64_t v2 = v3;
  }
  while (v3 == 32);
  int v4 = sub_1000CD950(v2);
  if (v4)
  {
    uint64_t v5 = sub_1000CDA88(v2);
    if (v2 != sub_1000CDBE4(v5)) {
      return 16;
    }
  }
  BOOL v6 = v4 == 0;
  LOWORD(v7) = v1[1];
  if ((_WORD)v7)
  {
    int v8 = v4;
    int v9 = v4;
    while (1)
    {
      uint64_t v10 = (unsigned __int16)v7;
      if (sub_1000CD950((unsigned __int16)v7))
      {
        uint64_t v11 = sub_1000CDA88(v10);
        if (v10 != sub_1000CDBE4(v11)) {
          return 16;
        }
        int v9 = 0;
        BOOL v6 = 0;
        if (*v1 != 32) {
          int v4 = 0;
        }
      }
      else if (sub_1000CD818(v10))
      {
        int v8 = 0;
        if (*v1 == 32) {
          int v4 = 0;
        }
      }
      int v7 = (unsigned __int16)v1[2];
      ++v1;
      if (!v7) {
        goto LABEL_18;
      }
    }
  }
  int v9 = v4;
  int v8 = v4;
LABEL_18:
  unsigned __int8 v13 = v6;
  if (v9) {
    v13 |= 2u;
  }
  if (v8) {
    v13 |= 4u;
  }
  if (v4) {
    v13 |= 8u;
  }
  if (!v13) {
    return 16;
  }
  return v13;
}

uint64_t sub_10008814C(unsigned char *a1, unsigned __int16 *a2, int a3, int a4, uint64_t a5, int *a6)
{
  int v7 = a1;
  if ((a4 - 1) >= 2)
  {
    if (a4 != 4)
    {
      if (a4 != 3) {
        return 2;
      }
      if (a6)
      {
        uint64_t v9 = *a6;
        LOWORD(v10) = *a2;
        if (*a2) {
          goto LABEL_6;
        }
      }
      else
      {
        uint64_t v9 = -1;
        LOWORD(v10) = *a2;
        if (*a2)
        {
LABEL_6:
          int v11 = 0;
          uint64_t v12 = 1;
          if (a3)
          {
            do
            {
              uint64_t v13 = sub_1000CDA88((unsigned __int16)v10);
              int v14 = sub_1000D25BC(v13, v7);
              v7 += v14;
              int v15 = v14 - 1;
              if (v9 < (v12 * 2) >> 1) {
                int v15 = 0;
              }
              v11 += v15;
              int v10 = a2[v12++];
            }
            while (v10);
          }
          else
          {
            do
            {
              int v16 = sub_1000D25BC((unsigned __int16)v10, v7);
              v7 += v16;
              int v17 = v16 - 1;
              if (v9 < (v12 * 2) >> 1) {
                int v17 = 0;
              }
              v11 += v17;
              int v10 = a2[v12++];
            }
            while (v10);
          }
          *int v7 = 0;
          uint64_t result = 0;
          if (!a6) {
            return result;
          }
          goto LABEL_38;
        }
      }
      int v11 = 0;
      *a1 = 0;
      uint64_t result = 0;
      if (!a6) {
        return result;
      }
LABEL_38:
      int v36 = *a6 + v11;
      goto LABEL_43;
    }
    if (a6)
    {
      uint64_t v27 = *a6;
      LOWORD(v28) = *a2;
      if (*a2) {
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v27 = -1;
      LOWORD(v28) = *a2;
      if (*a2)
      {
LABEL_26:
        int v29 = 0;
        uint64_t v30 = 1;
        if (a3)
        {
          do
          {
            uint64_t v31 = sub_1000CDA88((unsigned __int16)v28);
            int v32 = sub_1000CAC1C(v31, a5, v7);
            v7 += v32;
            int v33 = v32 - 1;
            if (v27 < (v30 * 2) >> 1) {
              int v33 = 0;
            }
            v29 += v33;
            int v28 = a2[v30++];
          }
          while (v28);
        }
        else
        {
          do
          {
            int v34 = sub_1000CAC1C((unsigned __int16)v28, a5, v7);
            v7 += v34;
            int v35 = v34 - 1;
            if (v27 < (v30 * 2) >> 1) {
              int v35 = 0;
            }
            v29 += v35;
            int v28 = a2[v30++];
          }
          while (v28);
        }
        goto LABEL_41;
      }
    }
    int v29 = 0;
LABEL_41:
    *int v7 = 0;
    uint64_t result = 0;
    if (!a6) {
      return result;
    }
    int v36 = *a6 + v29;
LABEL_43:
    *a6 = v36;
    return result;
  }
  unsigned __int16 v19 = *a2;
  if (*a2)
  {
    int v20 = a2 + 1;
    if (a3)
    {
      while (1)
      {
        unsigned int v21 = sub_1000CDA88(v19);
        int v22 = sub_1000D0D1C(v21);
        if (!v22) {
          break;
        }
        *v7++ = v22;
        int v23 = *v20++;
        unsigned __int16 v19 = v23;
        if (!v23) {
          goto LABEL_20;
        }
      }
    }
    else
    {
      while (1)
      {
        int v25 = sub_1000D0D1C(v19);
        if (!v25) {
          break;
        }
        *v7++ = v25;
        int v24 = *v20++;
        unsigned __int16 v19 = v24;
        if (!v24) {
          goto LABEL_20;
        }
      }
    }
    uint64_t result = 1;
    *int v7 = 0;
  }
  else
  {
LABEL_20:
    uint64_t result = 0;
    *int v7 = 0;
  }
  return result;
}

uint64_t sub_1000883C4(unsigned char *a1, char *a2, int a3, char a4, int a5, uint64_t a6)
{
  int v7 = a3;
  int v8 = a2;
  uint64_t v9 = a1;
  if ((a5 - 1) < 2)
  {
    sub_1000CAD88(a1, a2, a3);
    if (a4) {
      return 0;
    }
    do
    {
      unsigned int v16 = *v9++;
      uint64_t result = v16;
    }
    while (v16 == 32);
    if ((a4 & 2) != 0)
    {
      char v26 = sub_1000C1330(result);
      uint64_t result = 0;
      *(v9 - 1) = v26;
    }
    else if ((a4 & 4) != 0)
    {
      if (result)
      {
        do
        {
          *(v9 - 1) = sub_1000C1330(result);
          unsigned int v30 = *v9++;
          uint64_t result = v30;
        }
        while (v30);
      }
    }
    else
    {
      int v17 = 1;
      if (result != 32) {
        goto LABEL_25;
      }
      do
      {
LABEL_24:
        int v17 = 1;
        unsigned int v21 = *v9++;
        uint64_t result = v21;
      }
      while (v21 == 32);
LABEL_25:
      while (result)
      {
        if (v17)
        {
          char v19 = sub_1000C1330(result);
          int v17 = 0;
          *(v9 - 1) = v19;
          unsigned int v20 = *v9++;
          uint64_t result = v20;
          if (v20 == 32) {
            goto LABEL_24;
          }
        }
        else
        {
          unsigned int v18 = *v9++;
          uint64_t result = v18;
          if (v18 == 32) {
            goto LABEL_24;
          }
        }
      }
    }
  }
  else
  {
    if (a5 != 4)
    {
      if (a5 != 3) {
        return 2;
      }
      if ((a4 & 1) == 0)
      {
        int v10 = *a2;
        if (v10 == 32)
        {
          do
          {
            *v9++ = 32;
            int v11 = *++v8;
            int v10 = v11;
          }
          while (v11 == 32);
        }
        unsigned __int16 v36 = 0;
        if ((a4 & 2) == 0)
        {
          if ((a4 & 4) != 0)
          {
            if (v10)
            {
              do
              {
                v8 += (int)sub_1000D2284(v8, &v36);
                uint64_t v34 = sub_1000CDBE4(v36);
                unsigned __int16 v36 = v34;
                v9 += (int)sub_1000D25BC(v34, v9);
              }
              while (*v8);
            }
          }
          else if (v10)
          {
            BOOL v12 = 1;
            do
            {
              int v13 = sub_1000D2284(v8, &v36);
              uint64_t v14 = v36;
              if (v12)
              {
                uint64_t v14 = sub_1000CDBE4(v36);
                unsigned __int16 v36 = v14;
              }
              v8 += v13;
              v9 += (int)sub_1000D25BC(v14, v9);
              BOOL v12 = v36 == 32;
            }
            while (*v8);
          }
          *uint64_t v9 = 0;
          return 0;
        }
        uint64_t v27 = &v8[(int)sub_1000D2284(v8, &v36)];
        uint64_t v28 = sub_1000CDBE4(v36);
        unsigned __int16 v36 = v28;
        int v29 = sub_1000D25BC(v28, v9);
        a3 = v7 - v29;
        a1 = &v9[v29];
        a2 = v27;
      }
      sub_1000CAD88(a1, a2, a3);
      return 0;
    }
    unsigned __int16 v37 = 0;
    if (a4)
    {
      while (*v8)
      {
        v8 += (int)sub_1000CABBC(v8, a6, &v37);
        v9 += (int)sub_1000D25BC(v37, v9);
      }
    }
    else if ((a4 & 2) != 0)
    {
      for (int i = sub_1000CABBC(a2, a6, &v37); v37 == 32; int i = sub_1000CABBC(v8, a6, &v37))
      {
        v8 += i;
        *v9++ = 32;
      }
      int v32 = &v8[(int)sub_1000CABBC(v8, a6, &v37)];
      uint64_t v33 = sub_1000CDBE4(v37);
      unsigned __int16 v37 = v33;
      for (v9 += (int)sub_1000D25BC(v33, v9); *v32; v9 += (int)sub_1000D25BC(v37, v9))
        v32 += (int)sub_1000CABBC(v32, a6, &v37);
    }
    else if ((a4 & 4) != 0)
    {
      if (*a2)
      {
        do
        {
          v8 += (int)sub_1000CABBC(v8, a6, &v37);
          uint64_t v35 = sub_1000CDBE4(v37);
          unsigned __int16 v37 = v35;
          v9 += (int)sub_1000D25BC(v35, v9);
        }
        while (*v8);
      }
    }
    else if (*a2)
    {
      int v23 = 1;
      do
      {
        while (1)
        {
          int v24 = sub_1000CABBC(v8, a6, &v37);
          uint64_t v25 = v37;
          if (v37 != 32) {
            break;
          }
          *v9++ = 32;
          int v23 = 1;
          v8 += v24;
          if (!*v8) {
            goto LABEL_59;
          }
        }
        if (v23)
        {
          uint64_t v25 = sub_1000CDBE4(v37);
          unsigned __int16 v37 = v25;
        }
        int v23 = 0;
        v9 += (int)sub_1000D25BC(v25, v9);
        v8 += v24;
      }
      while (*v8);
    }
LABEL_59:
    uint64_t result = 0;
    *uint64_t v9 = 0;
  }
  return result;
}

uint64_t sub_1000887DC(uint64_t a1, char *a2, int a3, char a4, int a5, uint64_t a6)
{
  int v8 = a2;
  uint64_t v9 = (unsigned __int16 *)a1;
  if ((a5 - 1) < 2)
  {
    sub_1000D0D30(a2, a3, a1);
    if (a4) {
      return 0;
    }
    do
    {
      unsigned int v16 = *v9++;
      uint64_t result = v16;
    }
    while (v16 == 32);
    if ((a4 & 2) != 0)
    {
      unsigned __int16 v28 = sub_1000CDBE4(result);
      uint64_t result = 0;
      *(v9 - 1) = v28;
    }
    else if ((a4 & 4) != 0)
    {
      if (result)
      {
        do
        {
          *(v9 - 1) = sub_1000CDBE4((unsigned __int16)result);
          unsigned int v30 = *v9++;
          uint64_t result = v30;
        }
        while (v30);
      }
    }
    else
    {
      int v17 = 1;
      if (result != 32) {
        goto LABEL_25;
      }
      do
      {
LABEL_24:
        int v17 = 1;
        unsigned int v21 = *v9++;
        uint64_t result = v21;
      }
      while (v21 == 32);
LABEL_25:
      while (result)
      {
        if (v17)
        {
          unsigned __int16 v19 = sub_1000CDBE4((unsigned __int16)result);
          int v17 = 0;
          *(v9 - 1) = v19;
          unsigned int v20 = *v9++;
          uint64_t result = v20;
          if (v20 == 32) {
            goto LABEL_24;
          }
        }
        else
        {
          unsigned int v18 = *v9++;
          uint64_t result = v18;
          if (v18 == 32) {
            goto LABEL_24;
          }
        }
      }
    }
  }
  else
  {
    if (a5 != 4)
    {
      if (a5 != 3) {
        return 2;
      }
      if (a4)
      {
        char v26 = a2;
        int v27 = a3;
      }
      else
      {
        int v10 = *a2;
        if (v10 == 32)
        {
          do
          {
            sub_1000D2284(v8, v9++);
            int v11 = *++v8;
            int v10 = v11;
          }
          while (v11 == 32);
        }
        unsigned __int16 v33 = 0;
        if ((a4 & 2) == 0)
        {
          if ((a4 & 4) != 0)
          {
            if (v10)
            {
              do
              {
                v8 += (int)sub_1000D2284(v8, &v33);
                unsigned __int16 v33 = sub_1000CDBE4(v33);
                *v9++ = v33;
              }
              while (*v8);
            }
          }
          else if (v10)
          {
            BOOL v12 = 1;
            do
            {
              int v13 = sub_1000D2284(v8, &v33);
              int v14 = v33;
              if (v12)
              {
                int v14 = sub_1000CDBE4(v33);
                unsigned __int16 v33 = v14;
              }
              v8 += v13;
              *v9++ = v14;
              BOOL v12 = v14 == 32;
            }
            while (*v8);
          }
          *uint64_t v9 = 0;
          return 0;
        }
        int v29 = &v8[(int)sub_1000D2284(v8, &v33)];
        unsigned __int16 v33 = sub_1000CDBE4(v33);
        *v9++ = v33;
        int v27 = a3 - 1;
        char v26 = v29;
      }
      sub_1000D244C(v26, v27, (uint64_t)v9);
      return 0;
    }
    unsigned __int16 v34 = 0;
    if (a4)
    {
      while (*v8)
      {
        v8 += (int)sub_1000CABBC(v8, a6, &v34);
        *v9++ = v34;
      }
    }
    else if ((a4 & 2) != 0)
    {
      for (int i = sub_1000CABBC(a2, a6, &v34); v34 == 32; int i = sub_1000CABBC(v8, a6, &v34))
      {
        v8 += i;
        *v9++ = 32;
      }
      int v32 = &v8[(int)sub_1000CABBC(v8, a6, &v34)];
      unsigned __int16 v34 = sub_1000CDBE4(v34);
      *uint64_t v9 = v34;
      for (++v9; *v32; ++v9)
      {
        v32 += (int)sub_1000CABBC(v32, a6, &v34);
        *uint64_t v9 = v34;
      }
    }
    else if ((a4 & 4) != 0)
    {
      if (*a2)
      {
        do
        {
          v8 += (int)sub_1000CABBC(v8, a6, &v34);
          unsigned __int16 v34 = sub_1000CDBE4(v34);
          *v9++ = v34;
        }
        while (*v8);
      }
    }
    else if (*a2)
    {
      int v23 = 1;
      do
      {
        int v24 = sub_1000CABBC(v8, a6, &v34);
        unsigned __int16 v25 = v34;
        if (v34 == 32)
        {
          int v23 = 1;
        }
        else if (v23)
        {
          unsigned __int16 v25 = sub_1000CDBE4(v34);
          int v23 = 0;
          unsigned __int16 v34 = v25;
        }
        v8 += v24;
        *v9++ = v25;
      }
      while (*v8);
    }
    uint64_t result = 0;
    *uint64_t v9 = 0;
  }
  return result;
}

unint64_t sub_100088BA0(char *a1, int a2, uint64_t a3)
{
  unsigned int v3 = a1;
  if ((a2 - 1) >= 3)
  {
    if (a2 != 4) {
      return 0;
    }
    if (!*a1) {
      return 0;
    }
    LODWORD(v6) = 0;
    unsigned __int16 v7 = 0;
    do
    {
      v3 += (int)sub_1000CABBC(v3, a3, &v7);
      uint64_t v6 = sub_1000D25BC(v7, v8) + v6;
    }
    while (*v3);
    return v6;
  }
  else
  {
    return sub_1000CAD00((unint64_t)a1);
  }
}

void *sub_100088CB8(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v10 = sub_1000BEC58(a1, "mwl", a2, a4, a5, a6, a7, a8);
  if (!v10) {
    return 0;
  }
  uint64_t v11 = (uint64_t)v10;
  uint64_t v12 = sub_1000C33A0(888);
  if (!v12) {
    return 0;
  }
  int v13 = (_DWORD *)v12;
  uint64_t v40 = 0;
  if (!sub_1000BEECC(v11, (void *)(v12 + 32))) {
    goto LABEL_95;
  }
  if (!sub_1000BEECC(v11, v13 + 9)) {
    goto LABEL_95;
  }
  if (!sub_1000BEECC(v11, v13 + 10)) {
    goto LABEL_95;
  }
  if (!sub_1000BEECC(v11, v13 + 11)) {
    goto LABEL_95;
  }
  if (!sub_1000BEECC(v11, v13 + 12)) {
    goto LABEL_95;
  }
  if (!sub_1000BEFCC(v11, v13 + 30, 256, 1)) {
    goto LABEL_95;
  }
  if (!sub_1000BEFCC(v11, v13 + 94, 256, 1)) {
    goto LABEL_95;
  }
  if (!sub_1000BEECC(v11, v13 + 158)) {
    goto LABEL_95;
  }
  if (!sub_1000BEECC(v11, v13 + 159)) {
    goto LABEL_95;
  }
  if (!sub_1000BEECC(v11, v13 + 160)) {
    goto LABEL_95;
  }
  if (!sub_1000BEECC(v11, v13 + 161)) {
    goto LABEL_95;
  }
  if (!sub_1000BEECC(v11, v13 + 162)) {
    goto LABEL_95;
  }
  if (!sub_1000BEECC(v11, v13 + 163)) {
    goto LABEL_95;
  }
  if (!sub_1000BEECC(v11, v13 + 164)) {
    goto LABEL_95;
  }
  if (!sub_1000BEECC(v11, v13 + 165)) {
    goto LABEL_95;
  }
  if (!sub_1000BEECC(v11, v13 + 166)) {
    goto LABEL_95;
  }
  if (!sub_1000BEECC(v11, v13 + 167)) {
    goto LABEL_95;
  }
  if (!sub_1000BEECC(v11, v13 + 168)) {
    goto LABEL_95;
  }
  if (!sub_1000BEECC(v11, v13 + 170)) {
    goto LABEL_95;
  }
  if (!sub_1000BEECC(v11, v13 + 172)) {
    goto LABEL_95;
  }
  if (!sub_1000BEECC(v11, v13 + 173)) {
    goto LABEL_95;
  }
  if (!sub_1000BEECC(v11, v13 + 174)) {
    goto LABEL_95;
  }
  if (!sub_1000BEF74(v11, (_WORD *)v13 + 350)) {
    goto LABEL_95;
  }
  if (!sub_1000BEECC(v11, v13 + 176)) {
    goto LABEL_95;
  }
  if (!sub_1000BEF74(v11, (_WORD *)v13 + 354)) {
    goto LABEL_95;
  }
  if (!sub_1000BEF74(v11, (_WORD *)v13 + 364)) {
    goto LABEL_95;
  }
  if (!sub_1000BEF74(v11, (_WORD *)v13 + 376)) {
    goto LABEL_95;
  }
  if (!sub_1000BEECC(v11, v13 + 183)) {
    goto LABEL_95;
  }
  if (!sub_1000BEECC(v11, v13 + 189)) {
    goto LABEL_95;
  }
  if (!sub_1000BEECC(v11, v13 + 190)) {
    goto LABEL_95;
  }
  if (!sub_1000BEECC(v11, v13 + 191)) {
    goto LABEL_95;
  }
  if (!sub_1000BEECC(v11, v13 + 192)) {
    goto LABEL_95;
  }
  if (!sub_1000BEECC(v11, v13 + 193)) {
    goto LABEL_95;
  }
  int v39 = 0;
  if (!sub_1000BEECC(v11, &v39)) {
    goto LABEL_95;
  }
  v13[194] = v39;
  if (!sub_1000BEECC(v11, &v39)) {
    goto LABEL_95;
  }
  v13[195] = v39;
  if (!sub_1000BEECC(v11, v13 + 196) || !sub_1000BEECC(v11, v13 + 197)) {
    goto LABEL_95;
  }
  if (sub_1000BEECC(v11, v13 + 198)
    && sub_1000BEECC(v11, v13 + 199)
    && sub_1000BEECC(v11, v13 + 200)
    && sub_1000BEECC(v11, v13 + 201)
    && sub_1000BEECC(v11, v13 + 202)
    && sub_1000BEECC(v11, v13 + 203)
    && sub_1000BEECC(v11, v13 + 204))
  {
    sub_1000BEECC(v11, v13 + 205);
  }
  if (!sub_1000BEFCC(v11, v13 + 206, 8, 1)) {
    goto LABEL_95;
  }
  v13[208] = sub_100023604((unsigned __int8 *)v13 + 824);
  if (!sub_1000BEECC(v11, &v39)) {
    goto LABEL_95;
  }
  v13[209] = v39;
  if (!sub_1000BEECC(v11, v13 + 220)) {
    goto LABEL_95;
  }
  int v39 = 0;
  int v14 = (uint64_t *)(v13 + 6);
  if (!sub_1000BF078(v11, 4, (uint64_t *)v13 + 3, &v39)) {
    goto LABEL_95;
  }
  uint64_t v15 = *v14;
  if (*v14)
  {
    int v16 = v39;
    if (v39 != v13[158]) {
      goto LABEL_95;
    }
    *((void *)v13 + 2) = v15;
  }
  else
  {
    int v16 = v13[158];
    uint64_t v15 = *((void *)v13 + 2);
  }
  int v17 = *(_DWORD *)(v15 + 4 * (v16 - 1));
  int v39 = 0;
  unsigned int v18 = (uint64_t *)(v13 + 2);
  if (!sub_1000BF078(v11, 1, (uint64_t *)v13 + 1, &v39)) {
    goto LABEL_95;
  }
  uint64_t v19 = *v18;
  if (*v18)
  {
    if (v39 != v17) {
      goto LABEL_95;
    }
  }
  if (v19) {
    *(void *)int v13 = v19;
  }
  int v39 = 0;
  unsigned int v20 = (uint64_t *)(v13 + 20);
  if (!sub_1000BF078(v11, 2, (uint64_t *)v13 + 10, &v39)) {
    goto LABEL_95;
  }
  uint64_t v21 = *v20;
  if (*v20)
  {
    if (v39 != 257) {
      goto LABEL_95;
    }
  }
  if (v21) {
    *((void *)v13 + 9) = v21;
  }
  int v39 = 0;
  int v22 = v13 + 16;
  if (!sub_1000BF078(v11, 1, (uint64_t *)v13 + 8, &v39)) {
    goto LABEL_95;
  }
  if (*v22)
  {
    if (v39 != *(unsigned __int16 *)(*((void *)v13 + 9) + 512)) {
      goto LABEL_95;
    }
    *((void *)v13 + 7) = *v22;
  }
  int v39 = 0;
  int v23 = (uint64_t *)(v13 + 28);
  if (!sub_1000BF078(v11, 2, (uint64_t *)v13 + 14, &v39)) {
    goto LABEL_95;
  }
  uint64_t v24 = *v23;
  if (*v23)
  {
    if (v39 != 257) {
      goto LABEL_95;
    }
  }
  if (v24) {
    *((void *)v13 + 13) = v24;
  }
  int v39 = 0;
  unsigned __int16 v25 = v13 + 24;
  if (!sub_1000BF078(v11, 1, (uint64_t *)v13 + 12, &v39)) {
    goto LABEL_95;
  }
  if (*v25)
  {
    if (v39 != *(unsigned __int16 *)(*((void *)v13 + 13) + 512)) {
      goto LABEL_95;
    }
    *((void *)v13 + 11) = *v25;
  }
  if (!sub_1000BEECC(v11, &v40)) {
    goto LABEL_95;
  }
  if (v40)
  {
    char v26 = sub_10007B078(v11);
    *((void *)v13 + 90) = v26;
    if (!v26) {
      goto LABEL_95;
    }
    *((void *)v13 + 89) = v26;
  }
  int v39 = 0;
  int v27 = v13 + 218;
  if (!sub_1000BF078(v11, 1, (uint64_t *)v13 + 109, &v39)) {
    goto LABEL_95;
  }
  if (*v27)
  {
    if (v39 != v13[220]) {
      goto LABEL_95;
    }
    *((void *)v13 + 108) = *v27;
  }
  int v39 = 0;
  if (!sub_1000BF3F8(v11, (uint64_t *)v13 + 107, &v39)) {
    goto LABEL_95;
  }
  *((void *)v13 + 106) = *((void *)v13 + 107);
  if (!sub_1000BEECC(v11, (char *)&v40 + 4)) {
    goto LABEL_95;
  }
  if (!HIDWORD(v40)) {
    goto LABEL_94;
  }
  int v39 = 0;
  unsigned __int16 v28 = v13 + 186;
  if (!sub_1000BF078(v11, 4, (uint64_t *)v13 + 93, &v39))
  {
LABEL_95:
    sub_1000BED3C(v11);
    sub_1000C321C((uint64_t)v13);
    return 0;
  }
  if (*v28)
  {
    if (v39 == v13[183] + 1)
    {
      *((void *)v13 + 92) = *v28;
      goto LABEL_94;
    }
    goto LABEL_95;
  }
LABEL_94:
  v13[210] = 1;
  sub_1000BED3C(v11);
  sub_1000C2F04(0x220uLL, v29, v30, v31, v32, v33, v34, v35);
  unsigned __int16 v37 = v36;
  memcpy(v36, off_1000FDB00, 0x1E0uLL);
  v37[60] = v13;
  v37[61] = v13;
  *((_DWORD *)v37 + 128) = v13[159];
  *((_DWORD *)v37 + 129) = v13[160];
  *((_DWORD *)v37 + 130) = v13[162];
  *((_DWORD *)v37 + 131) = v13[161];
  v37[62] = a3;
  v37[63] = a4;
  v37[66] = sub_10008EAA0(v13[8], v13[172], *((unsigned __int16 *)v13 + 350), *((unsigned __int16 *)v13 + 364), *((void *)v13 + 89), v13[208], v13[194], (unsigned __int8 *)v13 + 824, a3, *((_WORD *)v13 + 376), v13[193]);
  return v37;
}

uint64_t sub_10008938C(void *a1)
{
  uint64_t v2 = a1[61];
  if (*(_DWORD *)(v2 + 840))
  {
    if (*(void *)(v2 + 856))
    {
      uint64_t v3 = 8 * *(unsigned __int16 *)(a1[60] + 728);
      do
      {
        sub_1000C321C(*(void *)(*(void *)(v2 + 856) + v3));
        v3 -= 8;
      }
      while (v3 != -8);
      sub_1000C321C(*(void *)(v2 + 856));
    }
    *(_OWORD *)(v2 + 848) = 0u;
    sub_1000C321C(*(void *)(v2 + 8));
    sub_1000C321C(*(void *)(v2 + 24));
    sub_10008CF6C(v2);
    sub_10007A984(*(void *)(v2 + 720));
    sub_1000C321C(*(void *)(v2 + 872));
    sub_1000C321C(*(void *)(v2 + 744));
    sub_1000C321C(v2);
  }
  sub_10008EFD4(a1[66]);
  return sub_1000C321C((uint64_t)a1);
}

uint64_t sub_100089450(uint64_t a1)
{
  return *(unsigned int *)(*(void *)(a1 + 480) + 776);
}

uint64_t sub_10008945C(uint64_t a1)
{
  return *(void *)(a1 + 480) + 824;
}

uint64_t sub_100089468(uint64_t a1)
{
  return *(unsigned int *)(*(void *)(a1 + 480) + 836);
}

uint64_t sub_100089474(void *a1, unsigned __int16 *a2, unsigned __int16 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a4;
  uint64_t v11 = (int *)a1[60];
  if (a3) {
    uint64_t v12 = a3;
  }
  else {
    uint64_t v12 = (unsigned __int16 *)&unk_1000F653E;
  }
  if (v11[8] >= 1)
  {
    int v13 = v11[194];
    int v14 = (4 * sub_1000CED6C((unint64_t)a2)) | 1;
    uint64_t v15 = v14;
    int v23 = (unsigned __int8 *)sub_1000CD3E8(v14, v16, v17, v18, v19, v20, v21, v22);
    if (v13 == 4) {
      int v24 = 3;
    }
    else {
      int v24 = v13;
    }
    if (sub_1000C0270(v24, (__int16 *)a2, v14, (uint64_t)v23) == 2)
    {
      sub_1000CD4D0(v23, v14);
    }
    else
    {
      uint64_t v32 = (unsigned __int8 *)sub_1000CD3E8(v14, v25, v26, v27, v28, v29, v30, v31);
      sub_10008814C(v32, a2, v11[208], v11[194], 0, 0);
      int v50 = v8;
      if (v11[208]) {
        int v33 = sub_100088008((uint64_t)a2);
      }
      else {
        int v33 = 128;
      }
      uint64_t v34 = (int)((4 * sub_1000CED6C((unint64_t)v12)) | 1);
      int v42 = (void *)sub_1000CD3E8(v34, v35, v36, v37, v38, v39, v40, v41);
      if (sub_10008814C(v42, v12, 0, v11[195], a1[61] + 784, 0) == 1)
      {
        int v43 = v42;
        uint64_t v44 = v34;
      }
      else
      {
        uint64_t v49 = v34;
        memset(v51, 0, sizeof(v51));
        long long v52 = xmmword_1000F4CA0;
        uint64_t v45 = sub_10008E058((uint64_t)a1, (int *)&v52, v51, v23, v32, v33);
        if (v45 != 0xFFFFFF)
        {
          uint64_t v46 = v45;
          if (!sub_10008D8D0((uint64_t)v11, (uint64_t)v51, v42))
          {
LABEL_25:
            sub_1000CD4D0(v42, v49);
            sub_1000CD4D0(v32, v15);
            sub_1000CD4D0(v23, v15);
            int v8 = v50;
            if (v46 != 0xFFFFFF) {
              return v46;
            }
            goto LABEL_18;
          }
          while (1)
          {
            sub_10008DA18((uint64_t)v11, (uint64_t)v51, 1u);
            int v48 = sub_10008E7DC((uint64_t)a1, (int *)&v52, (uint64_t)v51, v23, (uint64_t)v32, v33);
            if (!v48) {
              break;
            }
            uint64_t v46 = (v48 + v46);
            if (!sub_10008D8D0((uint64_t)v11, (uint64_t)v51, v42)) {
              goto LABEL_25;
            }
          }
        }
        int v43 = v42;
        uint64_t v44 = v49;
      }
      sub_1000CD4D0(v43, v44);
      sub_1000CD4D0(v32, v15);
      sub_1000CD4D0(v23, v15);
      int v8 = v50;
    }
  }
LABEL_18:
  if (v8) {
    return 0xFFFFFFLL;
  }
  else {
    return sub_10008F0B0(a1[66], (__int16 *)a2, v12, a4, a5, a6, a7, a8);
  }
}

uint64_t sub_1000896F4(void *a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, int a5)
{
  if (!(a5 | a4)) {
    return 0;
  }
  uint64_t v6 = a4;
  uint64_t v10 = a1[60];
  uint64_t v11 = a1[61] + 784;
  uint64_t v12 = (int)((4 * sub_1000CED6C((unint64_t)a2)) | 1);
  uint64_t v20 = (void *)sub_1000CD3E8(v12, v13, v14, v15, v16, v17, v18, v19);
  if (sub_10008814C(v20, a2, 0, *(_DWORD *)(v10 + 780), v11, 0) == 1)
  {
    sub_1000CD4D0(v20, v12);
    uint64_t v21 = a1[66];
    return sub_10008F63C(v21, a2, a3, v6, a5);
  }
  v33[1] = 0;
  v33[2] = 0;
  v33[0] = *(unsigned __int8 **)v10;
  uint64_t v31 = v12;
  if (!*(void *)(v10 + 736))
  {
    if (*(int *)(v10 + 32) >= 1)
    {
      uint64_t v27 = 0;
      int v29 = 0;
      while (1)
      {
        sub_10008D374(v10, v33);
        if (!sub_10008D8D0(v10, (uint64_t)v33, v20))
        {
          if ((int)v27 >= (int)v6)
          {
            uint64_t v27 = (v27 + 1);
          }
          else
          {
            *(_DWORD *)(a3 + 4 * (int)v27) = v29;
            uint64_t v27 = (v27 + 1);
            if (!a5 && v27 == v6)
            {
              sub_1000CD4D0(v20, v31);
              return v6;
            }
          }
        }
        sub_10008DA18(v10, (uint64_t)v33, 1u);
        if (++v29 >= *(_DWORD *)(v10 + 32)) {
          goto LABEL_32;
        }
      }
    }
    goto LABEL_30;
  }
  uint64_t v32 = a3;
  int v23 = *(_DWORD *)(v10 + 732);
  LODWORD(i) = 0;
  int v25 = v23 - 1;
  if (v23 >= 1)
  {
    do
    {
      unsigned int v26 = (v25 + i) >> 1;
      sub_10008DFE8(v10, *(_DWORD *)(*(void *)(v10 + 736) + 4 * v26), v33);
      sub_10008D374(v10, v33);
      if ((int)sub_10008D8D0(v10, (uint64_t)v33, v20) >= 0) {
        int v25 = v26 - 1;
      }
      else {
        LODWORD(i) = v26 + 1;
      }
    }
    while ((int)i <= v25);
    int v23 = *(_DWORD *)(v10 + 732);
  }
  a3 = v32;
  if ((int)i >= v23)
  {
LABEL_30:
    uint64_t v27 = 0;
    goto LABEL_32;
  }
  if (a5)
  {
    uint64_t v27 = 0;
    uint64_t i = (int)i;
    do
    {
      unsigned int v28 = *(_DWORD *)(*(void *)(v10 + 736) + 4 * i);
      sub_10008DFE8(v10, v28, v33);
      sub_10008D374(v10, v33);
      if (sub_10008D8D0(v10, (uint64_t)v33, v20)) {
        break;
      }
      if (v27 < (int)v6) {
        *(_DWORD *)(v32 + 4 * v27) = v28;
      }
      ++v27;
      ++i;
    }
    while (i < *(int *)(v10 + 732));
    a3 = v32;
  }
  else
  {
    uint64_t v27 = 0;
    for (uint64_t i = (int)i; i < *(int *)(v10 + 732); ++i)
    {
      unsigned int v30 = *(_DWORD *)(*(void *)(v10 + 736) + 4 * i);
      sub_10008DFE8(v10, v30, v33);
      sub_10008D374(v10, v33);
      if (sub_10008D8D0(v10, (uint64_t)v33, v20)) {
        break;
      }
      if ((int)v27 >= (int)v6)
      {
        uint64_t v27 = (v27 + 1);
      }
      else
      {
        *(_DWORD *)(v32 + 4 * (int)v27) = v30;
        uint64_t v27 = (v27 + 1);
        if (v27 == v6) {
          return v6;
        }
      }
    }
  }
LABEL_32:
  sub_1000CD4D0(v20, v31);
  if (a5 || (int)v6 > (int)v27) {
    return sub_10008F63C(a1[66], a2, a3, (v6 - v27) & ~(((int)v6 - (int)v27) >> 31), a5)+ v27;
  }
  else {
    return v27;
  }
}

uint64_t sub_100089A44(uint64_t a1, unsigned int *a2)
{
  return sub_100093EF4(*(void *)(a1 + 528), a2);
}

uint64_t sub_100089A4C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 512);
}

uint64_t sub_100089A54(uint64_t a1)
{
  return *(unsigned int *)(a1 + 516);
}

void *sub_100089A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = *(int *)(a1 + 512) + 1;
  uint64_t v12 = *(int *)(a1 + 516) + 1;
  uint64_t v13 = *(void *)(a1 + 480);
  if (*(_DWORD *)(v13 + 32) > (int)a2)
  {
    v43[1] = 0;
    v43[2] = 0;
    char v42 = 0;
    char v14 = *(_DWORD *)(v13 + 696);
    int v15 = a2 & ~(-1 << v14);
    v43[0] = (unsigned __int8 *)(*(void *)v13 + *(int *)(*(void *)(v13 + 16) + 4 * (int)(a2 >> v14)));
    int v16 = *(_DWORD *)(v13 + 776);
    if (v16 == 4) {
      int v16 = 3;
    }
    int v41 = v16;
    uint64_t v17 = (char *)sub_1000CD3E8((4 * v11) | 1, a2, a3, a4, a5, a6, a7, a8);
    for (uint64_t i = (char *)sub_1000CD3E8((4 * v11) | 1, v18, v19, v20, v21, v22, v23, v24); v15; --v15)
    {
      sub_10008D5C0(v13, v43, (uint64_t)v17, i, &v42);
      sub_10008DA18(v13, (uint64_t)v43, 0);
    }
    sub_10008D5C0(v13, v43, (uint64_t)v17, i, &v42);
    if (*(_DWORD *)(v13 + 832))
    {
      if (v42 != 16)
      {
        int v37 = sub_1000CAD00((unint64_t)v17);
        sub_1000887DC(a3, v17, v37 + 1, v42, *(_DWORD *)(v13 + 776), 0);
        goto LABEL_15;
      }
      int v26 = v41;
      uint64_t v27 = i;
    }
    else
    {
      int v26 = v41;
      uint64_t v27 = v17;
    }
    sub_1000C031C(v26, v27, v11, a3);
LABEL_15:
    uint64_t v38 = 4 * v12;
    uint64_t v39 = (char *)sub_1000CD3E8(v38, v30, v31, v32, v33, v34, v35, v36);
    sub_10008D984(v13, (uint64_t)v43, v39);
    int v40 = sub_1000CAD00((unint64_t)v39);
    sub_1000887DC(a4, v39, v40 + 1, 1, *(_DWORD *)(*(void *)(a1 + 480) + 780), *(void *)(a1 + 488) + 784);
    sub_1000CD4D0(v39, v38);
    sub_1000CD4D0(i, (4 * v11) | 1);
    return sub_1000CD4D0(v17, (4 * v11) | 1);
  }
  uint64_t v28 = *(void *)(a1 + 528);
  return sub_10008F88C(v28, a2, a3, v11, a4, v12, a7, a8);
}

void *sub_100089C88(void *result, unsigned int *a2, int a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a3 >= 1)
  {
    int v8 = (uint64_t *)a5;
    uint64_t v11 = (uint64_t)result;
    uint64_t v12 = a3;
    do
    {
      unsigned int v14 = *a2++;
      uint64_t v13 = v14;
      uint64_t v16 = *a4++;
      uint64_t v15 = v16;
      uint64_t v17 = *v8++;
      uint64_t result = sub_100089A5C(v11, v13, v15, v17, a5, a6, a7, a8);
      --v12;
    }
    while (v12);
  }
  return result;
}

uint64_t sub_100089CF0(uint64_t a1, int a2, int a3, unsigned __int16 *a4)
{
  return sub_10008BA78(a1, a2, a3, a4, 0, 0, 0, 0);
}

uint64_t sub_100089D04(uint64_t a1, int a2, int a3, unsigned __int16 *a4, uint64_t a5, int a6, int a7)
{
  return sub_10008BA78(a1, a2, a3, a4, a5, a6, 1, a7);
}

uint64_t sub_100089D10(uint64_t a1, int a2, int a3, unint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v10 = (__int16 *)a4;
  uint64_t v12 = *(void *)(a1 + 480);
  int v13 = *(_DWORD *)(v12 + 776);
  int __n = a3;
  uint64_t v14 = (int)((4 * sub_1000CED6C(a4)) | 1);
  uint64_t v22 = (unsigned __int8 *)sub_1000CD3E8(v14, v15, v16, v17, v18, v19, v20, v21);
  int v23 = (4 * __n) | 1;
  if (v13 == 4)
  {
    int v13 = 3;
    sub_1000C02C0(3, v10, a3, v23, (uint64_t)v22);
  }
  else if (sub_1000C02C0(v13, v10, a3, v23, (uint64_t)v22) == 2)
  {
    sub_1000CD4D0(v22, v14);
    uint64_t v24 = *(void *)(a1 + 528);
    return sub_10009321C(v24, a2, a3, v10, a5, a6);
  }
  int v83 = a7;
  sub_1000CAD00((unint64_t)v22);
  uint64_t v26 = v14;
  sub_1000C0270(v13, v10, v14, (uint64_t)v22);
  uint64_t v90 = 0;
  uint64_t v91 = 0;
  memset(v89, 0, sizeof(v89));
  unsigned __int8 __n_7 = 0;
  uint64_t v34 = (unsigned char *)sub_1000CD3E8(v14, v27, v28, v29, v30, v31, v32, v33);
  sub_10008814C(v34, (unsigned __int16 *)v10, *(_DWORD *)(v12 + 832), *(_DWORD *)(v12 + 776), 0, &__n);
  int v80 = a3;
  uint64_t v81 = a5;
  int v82 = a6;
  int v84 = v22;
  if (*(_DWORD *)(v12 + 832))
  {
    int v42 = sub_100088008((uint64_t)v10);
  }
  else
  {
    a2 = 0;
    int v42 = 128;
  }
  int v43 = (void *)sub_1000CD3E8(v14, v35, v36, v37, v38, v39, v40, v41);
  memcpy(v43, v34, __n);
  *((unsigned char *)v43 + __n) = 0;
  uint64_t v91 = 0;
  HIDWORD(v90) = 0;
  int v79 = v42;
  unsigned int v44 = sub_10008E058(a1, (int *)&v90, v89, (unsigned __int8 *)v43, (unsigned __int8 *)v43, v42);
  sub_1000CD4D0(v43, v14);
  uint64_t v45 = (int)(sub_100084674(a1) + 1);
  int v53 = (unsigned __int8 *)sub_1000CD3E8(v45, v46, v47, v48, v49, v50, v51, v52);
  int v61 = (unsigned __int8 *)sub_1000CD3E8(v45, v54, v55, v56, v57, v58, v59, v60);
  uint64_t v62 = 0;
  if (v44 != 0xFFFFFF)
  {
    char v63 = *(_DWORD *)(v12 + 696);
    int v64 = -1 << v63;
    uint64_t v65 = *(void *)(v12 + 16);
    uint64_t v66 = *(void *)v12;
    int v67 = (unsigned __int8 *)(*(void *)v12 + *(int *)(v65 + 4 * (int)(v44 >> v63)));
    v89[0] = v67;
    int v68 = (unsigned __int8 *)(v66 + *(int *)(v65 + 4 * *(int *)(v12 + 632) - 4));
    int v69 = v44 & ~v64;
    if (v69)
    {
      do
      {
        sub_10008D5C0(v12, v89, (uint64_t)v53, v61, &__n_7);
        sub_10008DA18(v12, (uint64_t)v89, 0);
        --v69;
      }
      while (v69);
      int v67 = v89[0];
    }
    if (v67 >= v68)
    {
      uint64_t v62 = 0;
    }
    else
    {
      uint64_t v78 = v10;
      uint64_t v62 = 0;
      if (a2)
      {
        while (1)
        {
          while (1)
          {
            sub_10008D5C0(v12, v89, (uint64_t)v53, v61, &__n_7);
            int v70 = sub_1000CAD00((unint64_t)v53);
            int v72 = sub_1000CAD44(v53, v34, v70, v71);
            if (v72 > 0) {
              goto LABEL_41;
            }
            uint64_t v73 = __n;
            if (v70 >= __n) {
              break;
            }
            ++v44;
            sub_10008DA18(v12, (uint64_t)v89, 0);
            if (v89[0] >= v68) {
              goto LABEL_41;
            }
          }
          if (v72)
          {
            uint64_t v10 = v78;
            goto LABEL_29;
          }
          if (__n_7 == 16) {
            goto LABEL_25;
          }
          if (v79 == 16) {
            break;
          }
          uint64_t v10 = v78;
          if ((__n_7 & v79) != 0)
          {
LABEL_28:
            *(_DWORD *)(v81 + 4 * (int)v62) = v44;
            uint64_t v62 = (v62 + 1);
            if ((int)v62 >= v82) {
              goto LABEL_40;
            }
          }
LABEL_29:
          ++v44;
          sub_10008DA18(v12, (uint64_t)v89, 0);
          if (v89[0] >= v68) {
            goto LABEL_42;
          }
        }
        sub_1000883C4(v61, (char *)v53, v45, __n_7, *(_DWORD *)(v12 + 776), 0);
LABEL_25:
        int v74 = sub_1000CAD44(v61, v84, v70, v73);
        uint64_t v10 = v78;
        if (!v74) {
          goto LABEL_28;
        }
        goto LABEL_29;
      }
      while (1)
      {
        sub_10008D5C0(v12, v89, (uint64_t)v53, v61, &__n_7);
        int v75 = sub_1000CAD00((unint64_t)v53);
        int v77 = sub_1000CAD44(v53, v34, v75, v76);
        if (v77 > 0) {
          break;
        }
        if (v75 >= __n)
        {
          if (v77)
          {
            uint64_t v10 = v78;
          }
          else
          {
            *(_DWORD *)(v81 + 4 * (int)v62) = v44;
            uint64_t v62 = (v62 + 1);
            uint64_t v10 = v78;
            if ((int)v62 >= v82)
            {
LABEL_40:
              sub_1000CD4D0(v61, v45);
              sub_1000CD4D0(v53, v45);
              sub_1000CD4D0(v34, v26);
              sub_1000CD4D0(v84, v26);
              return v62;
            }
          }
          ++v44;
          sub_10008DA18(v12, (uint64_t)v89, 0);
          if (v89[0] >= v68) {
            goto LABEL_42;
          }
        }
        else
        {
          ++v44;
          sub_10008DA18(v12, (uint64_t)v89, 0);
          if (v89[0] >= v68) {
            break;
          }
        }
      }
LABEL_41:
      uint64_t v10 = v78;
    }
  }
LABEL_42:
  sub_1000CD4D0(v61, v45);
  sub_1000CD4D0(v53, v45);
  sub_1000CD4D0(v34, v26);
  sub_1000CD4D0(v84, v26);
  if (!v83 && v82 > (int)v62) {
    return sub_10009321C(*(void *)(a1 + 528), a2, v80, v10, v81 + 4 * (int)v62, v82 - (int)v62)
  }
         + v62;
  return v62;
}

uint64_t sub_10008A244(uint64_t a1, signed int a2)
{
  uint64_t v2 = *(void *)(a1 + 480);
  if (*(_DWORD *)(v2 + 32) <= a2) {
    return 0x7FFFLL;
  }
  else {
    return (unsigned __int16)sub_10008E7FC(v2, a2, 2);
  }
}

uint64_t sub_10008A284(uint64_t a1, signed int a2)
{
  uint64_t v2 = *(void *)(a1 + 480);
  if (*(_DWORD *)(v2 + 32) <= a2) {
    return 0xFFFFLL;
  }
  else {
    return (unsigned __int16)sub_10008E7FC(v2, a2, 3);
  }
}

uint64_t sub_10008A2C4(uint64_t a1, signed int a2)
{
  uint64_t v2 = *(void *)(a1 + 480);
  if (*(_DWORD *)(v2 + 32) <= a2) {
    return 0xFFFFFFFFLL;
  }
  else {
    return sub_10008E7FC(v2, a2, 4);
  }
}

uint64_t sub_10008A2E4(uint64_t a1, signed int a2)
{
  uint64_t v2 = *(void *)(a1 + 480);
  if (*(_DWORD *)(v2 + 44) && *(_DWORD *)(v2 + 32) > a2) {
    return sub_10008E7FC(v2, a2, 5);
  }
  else {
    return 0xFFFFFFFFLL;
  }
}

uint64_t sub_10008A30C(uint64_t a1, signed int a2)
{
  uint64_t v2 = *(void *)(a1 + 480);
  if (*(_DWORD *)(v2 + 48) && *(_DWORD *)(v2 + 32) > a2) {
    return sub_10008E7FC(v2, a2, 6);
  }
  else {
    return 0xFFFFFFFFLL;
  }
}

uint64_t sub_10008A334(uint64_t a1, int a2)
{
  if (*(_DWORD *)(*(void *)(a1 + 480) + 32) <= a2) {
    return sub_100090648(*(void *)(a1 + 528), a2);
  }
  else {
    return 0;
  }
}

uint64_t sub_10008A354(uint64_t a1)
{
  return sub_100093C08(*(void *)(a1 + 528));
}

uint64_t sub_10008A35C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 524);
}

uint64_t sub_10008A364(uint64_t a1)
{
  return *(unsigned int *)(a1 + 520);
}

uint64_t sub_10008A36C(uint64_t a1)
{
  return sub_100093F78(*(void *)(a1 + 528));
}

uint64_t sub_10008A374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = *(int *)(a1 + 524);
  uint64_t v35 = 0;
  uint64_t v36 = 0;
  uint64_t v16 = sub_1000CD550();
  if ((int)a3 < 1)
  {
    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v17 = 2 * v8;
    uint64_t v22 = (uint64_t *)sub_1000CD3E8(8 * a3, v9, v10, v11, v12, v13, v14, v15);
    uint64_t v23 = 0;
    uint64_t v24 = v17 + 2;
    do
      v22[v23++] = sub_1000CD3E8(v24, v18, v19, v20, v21, v13, v14, v15);
    while (a3 != v23);
  }
  int v25 = sub_10008BD78(a1, a2, v22, a3, 0, v13, v14, v15);
  if (v25 >= (int)a3) {
    int v29 = a3;
  }
  else {
    int v29 = v25;
  }
  uint64_t v30 = sub_10008FE28(*(void *)(a1 + 528), a2, (uint64_t)&v22[v29], (a3 - v29), (*(_DWORD *)(a1 + 524) + 1), v26, v27, v28)+ v25;
  if ((int)v30 >= (int)a3) {
    a3 = a3;
  }
  else {
    a3 = v30;
  }
  sub_100094C5C(*(void *)(a1 + 528), &v36, &v35);
  if ((int)a3 >= 1)
  {
    do
    {
      uint64_t v32 = *v22++;
      uint64_t v31 = (unsigned __int16 *)v32;
      uint64_t v33 = *a4++;
      sub_1000950EC(*(void *)(*(void *)(a1 + 480) + 712), *(unsigned __int16 *)(*(void *)(a1 + 480) + 728), v36, v35, v31, v33);
      --a3;
    }
    while (a3);
  }
  sub_1000CD534(v16);
  return v30;
}

uint64_t sub_10008A4B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, int *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  signed int v10 = a3;
  unsigned int v13 = sub_10008BD78(a1, a2, a4, a3, a5, a6, a7, a8);
  unsigned int v17 = v13;
  if (a5 && qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 3892) && (int)v13 >= 1)
  {
    uint64_t v19 = *(void *)(a1 + 480);
    uint64_t v20 = (const __int16 *)(v19 + 728);
    if (v13 >= 8 && (v19 + 730 <= (unint64_t)a5 || v20 >= (const __int16 *)&a5[v13]))
    {
      uint16x4_t v29 = (uint16x4_t)vld1_dup_s16(v20);
      uint64_t v21 = v13 & 0xFFFFFFF8;
      v30.i64[0] = 0x100000001;
      v30.i64[1] = 0x100000001;
      int32x4_t v31 = (int32x4_t)vaddw_u16(v30, v29);
      v32.i64[0] = 0xFF000000FFLL;
      v32.i64[1] = 0xFF000000FFLL;
      uint64_t v33 = v21;
      uint64_t v34 = (int8x16_t *)a5;
      do
      {
        int32x4_t v35 = vmlaq_s32((int32x4_t)vandq_s8(v34[1], v32), v31, (int32x4_t)vshrq_n_u32((uint32x4_t)v34[1], 8uLL));
        *(int32x4_t *)uint64_t v34 = vmlaq_s32((int32x4_t)vandq_s8(*v34, v32), v31, (int32x4_t)vshrq_n_u32(*(uint32x4_t *)v34, 8uLL));
        v34[1] = (int8x16_t)v35;
        v34 += 2;
        v33 -= 8;
      }
      while (v33);
      if (v21 == v13) {
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v21 = 0;
    }
    uint64_t v22 = &a5[v21];
    uint64_t v23 = v13 - v21;
    do
    {
      *uint64_t v22 = (*v22 >> 8) + (*v22 >> 8) * *(unsigned __int16 *)v20 + *v22;
      ++v22;
      --v23;
    }
    while (v23);
  }
LABEL_13:
  if ((int)v13 >= v10) {
    unsigned int v24 = v10;
  }
  else {
    unsigned int v24 = v13;
  }
  int v25 = sub_10008FE28(*(void *)(a1 + 528), a2, (uint64_t)&a4[v24], v10 - v24, (*(_DWORD *)(a1 + 524) + 1), v14, v15, v16);
  uint64_t v26 = v25 + v17;
  if (a5 && v25 >= 1)
  {
    if ((int)v26 <= (int)(v17 + 1)) {
      unsigned int v27 = v17 + 1;
    }
    else {
      unsigned int v27 = v25 + v17;
    }
    memset(&a5[v17], 255, 4 * (v27 + ~v17) + 4);
  }
  return v26;
}

uint64_t sub_10008A62C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int *a4, _DWORD *a5, int *a6, uint64_t a7, uint64_t a8)
{
  int v11 = a3;
  int v67 = 0;
  int v68 = 0;
  uint64_t v69 = 0;
  uint64_t v13 = *(void *)(a1 + 480);
  if (*(_DWORD *)(v13 + 32) <= (int)a2)
  {
    uint64_t v20 = *(int *)(a1 + 524) + 1;
    uint64_t v65 = (void *)sub_1000CD3E8(2 * v20, a2, a3, (uint64_t)a4, (uint64_t)a5, (uint64_t)a6, a7, a8);
    int v24 = sub_10008FE28(*(void *)(a1 + 528), a2, (uint64_t)&v65, 1, v20, v21, v22, v23);
    if (v24 < 1)
    {
      int v34 = v24;
      uint64_t v25 = 0;
    }
    else
    {
      if (v11 < 1)
      {
        uint64_t v25 = 0;
      }
      else
      {
        *a4 = -1;
        *a5 = 0;
        uint64_t v25 = 1;
      }
      int v34 = 1;
    }
    sub_1000CD4D0(v65, 2 * v20);
    goto LABEL_69;
  }
  uint64_t v65 = 0;
  uint64_t v66 = 0;
  sub_10008DFE8(v13, a2, &v67);
  sub_10008DD10(v13, (uint64_t)&v67, 1);
  if ((v69 & 0x200000000) == 0)
  {
    int v14 = *(_DWORD *)(v13 + 40);
    if (v14 < 1) {
      goto LABEL_68;
    }
    int v15 = v69;
    uint64_t v16 = v67;
    unint64_t v17 = (unint64_t)v68;
    uint64_t v18 = v13 + 376;
    if (*(__int16 *)(v13 + 752) != -1)
    {
      if (v69)
      {
        int v15 = v69 - 1;
      }
      else
      {
        uint64_t v16 = v67 + 1;
        uint64_t v41 = *v67;
        if (*(unsigned char *)(v18 + v41) != 2)
        {
LABEL_33:
          unsigned int v47 = *v16++;
          uint64_t v46 = v47;
          if (*(unsigned char *)(v18 + v47) == 2)
          {
            uint64_t v48 = (unsigned __int16 *)(*(void *)(v13 + 104) + 2 * v46);
            uint64_t v49 = *v48;
            int v44 = v48[1] + ~v49;
            unint64_t v17 = *(void *)(v13 + 88) + v49;
            uint64_t v45 = (unsigned __int8 *)(v17 + 1);
            if (*(unsigned char *)v17) {
              goto LABEL_35;
            }
          }
          else if (v46)
          {
            goto LABEL_39;
          }
LABEL_68:
          uint64_t v25 = 0;
          int v34 = 0;
          goto LABEL_69;
        }
        int v42 = (unsigned __int16 *)(*(void *)(v13 + 104) + 2 * v41);
        uint64_t v43 = *v42;
        int v15 = v42[1] + ~v43;
        unint64_t v17 = *(void *)(v13 + 88) + v43;
      }
      ++v17;
    }
    if (v15)
    {
      int v44 = v15 - 1;
      uint64_t v45 = (unsigned __int8 *)(v17 + 1);
      if (!*(unsigned char *)v17) {
        goto LABEL_68;
      }
LABEL_35:
      if (v44)
      {
        int v50 = v44 - 1;
        uint64_t v51 = (unsigned __int8 *)(v17 + 2);
        LODWORD(v17) = *v45;
        if (v14 == 1)
        {
LABEL_48:
          if (v11 < 1)
          {
            uint64_t v25 = 0;
            int v34 = 1;
          }
          else
          {
            unsigned int v57 = *(_DWORD *)(v13 + 668) + v17;
            *a4 = v57;
            if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 3892)) {
              *a4 = (v57 >> 8) + (v57 >> 8) * *(unsigned __int16 *)(v13 + 728) + v57;
            }
            *a5 = 0;
            uint64_t v25 = 1;
            int v34 = 1;
          }
          goto LABEL_69;
        }
        goto LABEL_41;
      }
LABEL_39:
      unsigned int v52 = *v16++;
      unint64_t v17 = v52;
      if (*(unsigned char *)(v18 + v52) != 2)
      {
        if (v14 == 1) {
          goto LABEL_48;
        }
LABEL_44:
        uint64_t v56 = *v16;
        if (*(unsigned char *)(v18 + v56) != 2)
        {
LABEL_47:
          LODWORD(v17) = v17 | (v56 << 8);
          goto LABEL_48;
        }
        uint64_t v51 = (unsigned __int8 *)(*(void *)(v13 + 88) + *(unsigned __int16 *)(*(void *)(v13 + 104) + 2 * v56));
LABEL_46:
        LODWORD(v56) = *v51;
        goto LABEL_47;
      }
      uint64_t v53 = *(void *)(v13 + 104);
      uint64_t v54 = *(unsigned __int16 *)(v53 + 2 * v17);
      int v50 = *(unsigned __int16 *)(v53 + 2 * v17 + 2) + ~v54;
      uint64_t v55 = (unsigned __int8 *)(*(void *)(v13 + 88) + v54);
      uint64_t v51 = v55 + 1;
      LODWORD(v17) = *v55;
      if (v14 == 1) {
        goto LABEL_48;
      }
LABEL_41:
      if (v50) {
        goto LABEL_46;
      }
      goto LABEL_44;
    }
    goto LABEL_33;
  }
  uint64_t v26 = v13 + 376;
  unsigned int v27 = v67 + 1;
  uint64_t v28 = *v67;
  if (*(unsigned char *)(v13 + 376 + v28) != 2)
  {
    int v31 = v69;
    if (v28 != 255) {
      goto LABEL_12;
    }
LABEL_17:
    if (v31)
    {
      int v35 = v31 - 1;
      uint64_t v36 = v68;
      uint64_t v37 = ++v68;
      LODWORD(v33) = *v36;
      if (*(__int16 *)(v13 + 752) == -1)
      {
LABEL_58:
        int v67 = v27;
        LODWORD(v69) = v35;
        if (!v33) {
          goto LABEL_68;
        }
        goto LABEL_59;
      }
    }
    else
    {
      unsigned int v27 = v67 + 2;
      uint64_t v33 = v67[1];
      if (*(unsigned char *)(v26 + v33) != 2)
      {
        if (*(__int16 *)(v13 + 752) == -1) {
          goto LABEL_67;
        }
        goto LABEL_55;
      }
      uint64_t v38 = *(void *)(v13 + 104);
      uint64_t v39 = *(unsigned __int16 *)(v38 + 2 * v33);
      int v35 = *(unsigned __int16 *)(v38 + 2 * v33 + 2) + ~v39;
      uint64_t v40 = (unsigned __int8 *)(*(void *)(v13 + 88) + v39);
      uint64_t v37 = v40 + 1;
      int v68 = v40 + 1;
      LODWORD(v33) = *v40;
      if (*(__int16 *)(v13 + 752) == -1) {
        goto LABEL_58;
      }
    }
    if (v35)
    {
      --v35;
LABEL_57:
      int v68 = v37 + 1;
      goto LABEL_58;
    }
LABEL_55:
    unsigned int v59 = *v27++;
    uint64_t v58 = v59;
    if (*(unsigned char *)(v26 + v59) == 2)
    {
      uint64_t v60 = (unsigned __int16 *)(*(void *)(v13 + 104) + 2 * v58);
      uint64_t v61 = *v60;
      int v35 = v60[1] + ~v61;
      uint64_t v37 = (unsigned __int8 *)(*(void *)(v13 + 88) + v61);
      goto LABEL_57;
    }
LABEL_67:
    int v67 = v27;
    LODWORD(v69) = 0;
    if (!v33) {
      goto LABEL_68;
    }
    goto LABEL_59;
  }
  uint64_t v29 = *(void *)(v13 + 104);
  uint64_t v30 = *(unsigned __int16 *)(v29 + 2 * v28);
  int v31 = *(unsigned __int16 *)(v29 + 2 * v28 + 2) + ~v30;
  int8x16_t v32 = (unsigned __int8 *)(*(void *)(v13 + 88) + v30);
  int v68 = v32 + 1;
  if (*v32 == 255) {
    goto LABEL_17;
  }
LABEL_12:
  if (*(__int16 *)(v13 + 752) != -1)
  {
    ++v67;
    LODWORD(v69) = v31;
  }
  LODWORD(v33) = 1;
LABEL_59:
  int v62 = 0;
  int v34 = 0;
  uint64_t v25 = 0;
  do
  {
    sub_10008CD04(v13, &v65, &v67);
    if (v66)
    {
      ++v34;
      if ((int)v25 < v11)
      {
        unsigned int v63 = HIDWORD(v66);
        a4[(int)v25] = HIDWORD(v66);
        if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 3892)) {
          a4[(int)v25] = (v63 >> 8) + (v63 >> 8) * *(unsigned __int16 *)(v13 + 728) + v63;
        }
        a5[(int)v25] = v62;
        uint64_t v25 = (v25 + 1);
      }
    }
    ++v62;
  }
  while (v33 != v62);
LABEL_69:
  *a6 = v34;
  return v25;
}

uint64_t sub_10008AADC(uint64_t result, signed int a2, unsigned int a3, _DWORD *a4)
{
  uint64_t v4 = *(void *)(result + 480);
  *a4 = -1;
  if ((a3 & 0x80000000) != 0 || *(_DWORD *)(v4 + 32) <= a2) {
    return result;
  }
  uint64_t v46 = 0;
  unsigned int v47 = 0;
  uint64_t v48 = 0;
  uint64_t v44 = 0;
  uint64_t v45 = 0;
  sub_10008DFE8(v4, a2, &v46);
  uint64_t result = sub_10008DD10(v4, (uint64_t)&v46, 1);
  if ((v48 & 0x200000000) != 0)
  {
    uint64_t v12 = v4 + 376;
    uint64_t v13 = v46 + 1;
    uint64_t v14 = *v46;
    if (*(unsigned char *)(v4 + 376 + v14) == 2)
    {
      uint64_t v15 = *(void *)(v4 + 104);
      uint64_t v16 = *(unsigned __int16 *)(v15 + 2 * v14);
      int v17 = *(unsigned __int16 *)(v15 + 2 * v14 + 2) + ~v16;
      uint64_t v18 = (unsigned __int8 *)(*(void *)(v4 + 88) + v16);
      unsigned int v47 = v18 + 1;
      if (*v18 != 255) {
        goto LABEL_11;
      }
    }
    else
    {
      int v17 = v48;
      if (v14 != 255)
      {
LABEL_11:
        LODWORD(v19) = 1;
        if (*(__int16 *)(v4 + 752) == -1)
        {
          if (a3) {
            return result;
          }
LABEL_27:
          HIDWORD(v45) = -1;
          unsigned int v27 = a3 + 1;
          do
          {
            uint64_t result = sub_10008CD04(v4, &v44, &v46);
            --v27;
          }
          while (v27);
          unsigned int v28 = HIDWORD(v45);
          *a4 = HIDWORD(v45);
          if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 3892)) {
            *a4 = (v28 >> 8) + (v28 >> 8) * *(unsigned __int16 *)(v4 + 728) + v28;
          }
          return result;
        }
LABEL_26:
        uint64_t v46 = v13;
        LODWORD(v48) = v17;
        if (v19 <= a3) {
          return result;
        }
        goto LABEL_27;
      }
    }
    if (v17)
    {
      --v17;
      unint64_t v19 = (unint64_t)v47;
      uint64_t v20 = ++v47;
      LODWORD(v19) = *(unsigned __int8 *)v19;
      if (*(__int16 *)(v4 + 752) == -1) {
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v13 = v46 + 2;
      unint64_t v19 = v46[1];
      if (*(unsigned char *)(v12 + v19) != 2)
      {
        if (*(__int16 *)(v4 + 752) == -1) {
          goto LABEL_32;
        }
        goto LABEL_23;
      }
      uint64_t v21 = *(void *)(v4 + 104);
      uint64_t v22 = *(unsigned __int16 *)(v21 + 2 * v19);
      int v17 = *(unsigned __int16 *)(v21 + 2 * v19 + 2) + ~v22;
      unint64_t v19 = *(void *)(v4 + 88) + v22;
      uint64_t v20 = (unsigned __int8 *)(v19 + 1);
      unsigned int v47 = (unsigned __int8 *)(v19 + 1);
      LODWORD(v19) = *(unsigned __int8 *)v19;
      if (*(__int16 *)(v4 + 752) == -1) {
        goto LABEL_26;
      }
    }
    if (v17)
    {
      --v17;
LABEL_25:
      unsigned int v47 = v20 + 1;
      goto LABEL_26;
    }
LABEL_23:
    unsigned int v24 = *v13++;
    uint64_t v23 = v24;
    if (*(unsigned char *)(v12 + v24) == 2)
    {
      uint64_t v25 = (unsigned __int16 *)(*(void *)(v4 + 104) + 2 * v23);
      uint64_t v26 = *v25;
      int v17 = v25[1] + ~v26;
      uint64_t v20 = (unsigned __int8 *)(*(void *)(v4 + 88) + v26);
      goto LABEL_25;
    }
LABEL_32:
    uint64_t v46 = v13;
    LODWORD(v48) = 0;
    if (v19 <= a3) {
      return result;
    }
    goto LABEL_27;
  }
  if (!a3)
  {
    int v7 = *(_DWORD *)(v4 + 40);
    if (v7 >= 1)
    {
      int v8 = v48;
      uint64_t v9 = v46;
      signed int v10 = v47;
      uint64_t v11 = v4 + 376;
      if (*(__int16 *)(v4 + 752) != -1)
      {
        if (v48)
        {
          int v8 = v48 - 1;
        }
        else
        {
          uint64_t v9 = v46 + 1;
          uint64_t v29 = *v46;
          if (*(unsigned char *)(v11 + v29) != 2) {
            goto LABEL_40;
          }
          uint64_t v30 = (unsigned __int16 *)(*(void *)(v4 + 104) + 2 * v29);
          uint64_t v31 = *v30;
          int v8 = v30[1] + ~v31;
          signed int v10 = (unsigned __int8 *)(*(void *)(v4 + 88) + v31);
        }
        ++v10;
      }
      if (v8)
      {
        int v32 = v8 - 1;
        if (!v32) {
          goto LABEL_44;
        }
        goto LABEL_42;
      }
LABEL_40:
      unsigned int v34 = *v9++;
      uint64_t v33 = v34;
      if (*(unsigned char *)(v11 + v34) != 2
        || (int v35 = (unsigned __int16 *)(*(void *)(v4 + 104) + 2 * v33),
            uint64_t v36 = *v35,
            int v32 = v35[1] + ~v36,
            signed int v10 = (unsigned __int8 *)(*(void *)(v4 + 88) + v36),
            !v32))
      {
LABEL_44:
        unsigned int v39 = *v9++;
        signed int v10 = (unsigned __int8 *)v39;
        if (*(unsigned char *)(v11 + v39) == 2)
        {
          uint64_t v40 = *(void *)(v4 + 104);
          uint64_t v41 = *(unsigned __int16 *)(v40 + 2 * (void)v10);
          int v37 = *(unsigned __int16 *)(v40 + 2 * (void)v10 + 2) + ~v41;
          int v42 = (unsigned __int8 *)(*(void *)(v4 + 88) + v41);
          uint64_t v38 = v42 + 1;
          LODWORD(v10) = *v42;
          if (v7 != 1) {
            goto LABEL_46;
          }
        }
        else if (v7 != 1)
        {
LABEL_49:
          uint64_t v43 = *v9;
          if (*(unsigned char *)(v11 + v43) != 2)
          {
LABEL_52:
            LODWORD(v10) = v10 | (v43 << 8);
            goto LABEL_53;
          }
          uint64_t v38 = (unsigned __int8 *)(*(void *)(v4 + 88) + *(unsigned __int16 *)(*(void *)(v4 + 104) + 2 * v43));
LABEL_51:
          LODWORD(v43) = *v38;
          goto LABEL_52;
        }
        goto LABEL_53;
      }
LABEL_42:
      int v37 = v32 - 1;
      uint64_t v38 = v10 + 2;
      LODWORD(v10) = v10[1];
      if (v7 != 1)
      {
LABEL_46:
        if (v37) {
          goto LABEL_51;
        }
        goto LABEL_49;
      }
LABEL_53:
      *a4 = *(_DWORD *)(v4 + 668) + v10;
    }
  }
  return result;
}

uint64_t sub_10008AE88(uint64_t a1, int a2, uint64_t a3)
{
  return sub_1000906C4(*(void *)(a1 + 528), a2, a3);
}

uint64_t sub_10008AE90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1000907E0(*(void *)(a1 + 528), a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_10008AE98(uint64_t a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  sub_100094C5C(*(void *)(a1 + 528), &v8, &v7);
  return sub_1000950EC(*(void *)(*(void *)(a1 + 480) + 712), *(unsigned __int16 *)(*(void *)(a1 + 480) + 728), v8, v7, a2, a3);
}

unint64_t sub_10008AF00(uint64_t a1, unsigned __int16 *a2)
{
  unint64_t result = sub_100091E08(*(void *)(a1 + 528), a2);
  if (result)
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    sub_100094C5C(*(void *)(a1 + 528), &v6, &v5);
    unint64_t result = sub_10009BF2C((unint64_t)a2);
    if (result) {
      return sub_10008B6D8(a1, a2) != 255
    }
          && sub_100095428(*(void *)(*(void *)(a1 + 480) + 712), *(unsigned __int16 *)(*(void *)(a1 + 480) + 728), v6, v5, a2) != 0;
  }
  return result;
}

uint64_t sub_10008AFA0(uint64_t a1, unsigned __int16 *a2, unsigned __int16 *a3, unint64_t *a4, uint64_t a5, int a6)
{
  uint64_t v37 = 0;
  uint64_t v38 = 0;
  uint64_t v35 = sub_1000CD550();
  uint64_t v9 = sub_100094C5C(*(void *)(a1 + 528), &v38, &v37);
  uint64_t v36 = (unsigned __int16 **)sub_1000CD3E8(8 * (int)a5, v10, v11, v12, v13, v14, v15, v16);
  if ((int)a5 >= 1)
  {
    uint64_t v17 = a5;
    uint64_t v18 = v36;
    do
    {
      unint64_t v19 = (void *)*a4;
      int v20 = sub_10009BF2C(*a4) + 1;
      unsigned int v28 = (unsigned __int16 *)sub_1000CD3E8(2 * v20, v21, v22, v23, v24, v25, v26, v27);
      *uint64_t v18 = v28;
      if (!sub_1000954E4(*(unsigned __int16 *)(*(void *)(a1 + 480) + 728), *(unsigned __int16 *)(*(void *)(a1 + 480) + 700), v38, v37, v9, (unsigned __int16 *)v19, v28))
      {
        int v29 = sub_100093C74(*(void *)(a1 + 528), v20, v19);
        *unsigned int v28 = v29;
        if (v29 == 0xFFFF)
        {
          uint64_t v30 = 0xFFFFFFLL;
          goto LABEL_8;
        }
        v28[1] = -1;
      }
      ++v18;
      ++a4;
      --v17;
    }
    while (v17);
  }
  uint64_t v30 = sub_10008B0E8(a1, a2, a3, a5, v36, a6, 0);
LABEL_8:
  sub_1000CD534(v35);
  return v30;
}

uint64_t sub_10008B0E8(uint64_t a1, unsigned __int16 *a2, unsigned __int16 *a3, uint64_t a4, unsigned __int16 **a5, int a6, int a7)
{
  unsigned int v92 = 0;
  uint64_t v90 = 0;
  uint64_t v91 = 0;
  uint64_t v89 = 0;
  uint64_t v14 = sub_1000CD550();
  if (!a3 || !*a3) {
    goto LABEL_49;
  }
  uint64_t v15 = *(int *)(a1 + 524) + 1;
  if (a4 != 1
    || (*(unsigned __int16 *)(*(void *)(a1 + 480) + 752) != 0xFFFF ? (BOOL v16 = qword_100101CC0 == 0) : (BOOL v16 = 1), v16))
  {
    if (!qword_100101CC0) {
      goto LABEL_49;
    }
  }
  else if (*(_DWORD *)(qword_100101CC0 + 3920))
  {
    if (sub_1000896F4((void *)a1, a3, (uint64_t)&v92, 1, 0))
    {
      uint64_t v91 = (unsigned __int16 *)sub_1000CD3E8(2 * v15, v17, v18, v19, v20, v21, v22, v23);
      uint64_t v24 = a2;
      uint64_t v25 = v92;
      int v29 = sub_10008BD78(a1, v92, (uint64_t *)&v91, 1, 0, v26, v27, v28);
      if (v29 >= 1) {
        int v33 = 1;
      }
      else {
        int v33 = v29;
      }
      uint64_t v34 = v25;
      a2 = v24;
      sub_10008FE28(*(void *)(a1 + 528), v34, (uint64_t)&(&v91)[v33], (1 - v33), (*(_DWORD *)(a1 + 524) + 1), v30, v31, v32);
      sub_100094C5C(*(void *)(a1 + 528), &v90, &v89);
      if (sub_1000951D0(v91, *a5, *(void *)(*(void *)(a1 + 480) + 712), *(unsigned __int16 *)(*(void *)(a1 + 480) + 728), v90, v89))
      {
        a7 = 0;
        a5 = &v91;
      }
    }
    goto LABEL_49;
  }
  if (*(_DWORD *)(qword_100101CC0 + 3908))
  {
    float64x2_t v87 = a2;
    unsigned int v92 = sub_10008466C(a1);
    if (v92 != 0xFFFFFF)
    {
      int v84 = a7;
      int v85 = a6;
      uint64_t v86 = a4;
      sub_100094C5C(*(void *)(a1 + 528), &v90, &v89);
      int v35 = sub_100084814(a1);
      unint64_t v50 = sub_1000CD3E8(8 * v35, v36, v37, v38, v39, v40, v41, v42);
      if (v35 < 1)
      {
        sub_100084814(a1);
      }
      else
      {
        uint64_t v82 = v14;
        int v83 = a3;
        uint64_t v51 = 0;
        uint64_t v52 = v35;
        do
        {
          *(void *)(v50 + v51) = sub_1000CD3E8(2 * (int)v15, v43, v44, v45, v46, v47, v48, v49);
          v51 += 8;
        }
        while (8 * v35 != v51);
        sub_100084814(a1);
        if ((int)a4 > 0)
        {
          unint64_t v53 = 0;
          uint64_t v88 = 8 * a4;
          uint64_t v54 = a5;
          do
          {
            uint64_t v55 = &a5[v53];
            if (v53)
            {
              for (uint64_t i = 0; i != v52; ++i)
              {
                unsigned int v57 = (unsigned __int16 **)(v50 + 8 * i);
                if (sub_10009536C(*v57, *v55, *(void *)(*(void *)(a1 + 480) + 712), *(unsigned __int16 *)(*(void *)(a1 + 480) + 728), v90, v89))
                {
                  if (v54 == a5)
                  {
                    unint64_t v65 = sub_1000CD3E8(v88, v58, v59, v60, v61, v62, v63, v64);
                    uint64_t v54 = (unsigned __int16 **)v65;
                    uint64_t v66 = 0;
                    if (v53 < 4) {
                      goto LABEL_52;
                    }
                    if (v65 - (unint64_t)a5 < 0x20) {
                      goto LABEL_52;
                    }
                    uint64_t v67 = 0;
                    unint64_t v68 = v53 & 0xFFFFFFFFFFFFFFFCLL;
                    do
                    {
                      long long v69 = *(_OWORD *)&a5[v67 + 2];
                      int v70 = (_OWORD *)(v65 + v67 * 8);
                      *int v70 = *(_OWORD *)&a5[v67];
                      v70[1] = v69;
                      v67 += 4;
                      v68 -= 4;
                    }
                    while (v68);
                    uint64_t v66 = v53 & 0x7FFFFFFFFFFFFFFCLL;
                    if (v53 != (v53 & 0x7FFFFFFFFFFFFFFCLL))
                    {
LABEL_52:
                      do
                      {
                        *(void *)(v65 + 8 * v66) = a5[v66];
                        ++v66;
                      }
                      while (v53 != v66);
                    }
                  }
                }
                else
                {
                  unsigned int v57 = &a5[v53];
                }
                v54[v53] = *v57;
              }
            }
            else
            {
              uint64_t v71 = v52;
              int v72 = (unsigned __int16 **)v50;
              do
              {
                if (sub_10009536C(*v72, *v55, *(void *)(*(void *)(a1 + 480) + 712), *(unsigned __int16 *)(*(void *)(a1 + 480) + 728), v90, v89))
                {
                  uint64_t v73 = v72;
                  if (v54 == a5)
                  {
                    uint64_t v54 = (unsigned __int16 **)sub_1000CD3E8(v88, v74, v75, v76, v77, v78, v79, v80);
                    uint64_t v73 = v72;
                  }
                }
                else
                {
                  uint64_t v73 = a5;
                }
                *uint64_t v54 = *v73;
                ++v72;
                --v71;
              }
              while (v71);
            }
            ++v53;
          }
          while (v53 != v86);
          a5 = v54;
          a4 = v86;
        }
        uint64_t v14 = v82;
        a3 = v83;
      }
      a7 = v84;
      a6 = v85;
    }
    a2 = v87;
  }
LABEL_49:
  unsigned int v92 = sub_100090994(*(void *)(a1 + 528), a2, a3, (unint64_t *)a5, a4, (_DWORD *)(a1 + 512), (_DWORD *)(a1 + 516), (_DWORD *)(a1 + 524), (_DWORD *)(a1 + 520), a6, a7);
  sub_1000CD534(v14);
  return v92;
}

uint64_t sub_10008B504(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_100091650(*(void *)(a1 + 528), a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_10008B50C(uint64_t a1)
{
  return sub_100091D6C(*(void *)(a1 + 528));
}

BOOL sub_10008B514(uint64_t a1, int a2)
{
  return *(_DWORD *)(*(void *)(a1 + 480) + 32) <= a2 && sub_100091D74(*(void *)(a1 + 528), a2);
}

BOOL sub_10008B534(uint64_t a1, int a2)
{
  return *(_DWORD *)(*(void *)(a1 + 480) + 32) > a2 || sub_100091D74(*(void *)(a1 + 528), a2);
}

uint64_t sub_10008B554(uint64_t a1, uint64_t a2, unsigned __int16 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (*(_DWORD *)(*(void *)(a1 + 480) + 32) <= (int)a2) {
    int v11 = 0;
  }
  else {
    int v11 = sub_10008BD78(a1, a2, 0, 0, 0, a6, a7, a8);
  }
  uint64_t v12 = *(void *)(a1 + 528);
  return sub_100091EBC(v12, a2, a3, v11, (int *)(a1 + 524), (_DWORD *)(a1 + 520));
}

uint64_t sub_10008B5DC(uint64_t a1, uint64_t a2, int a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (*(_DWORD *)(*(void *)(a1 + 480) + 32) <= (int)a2)
  {
    uint64_t v12 = 0;
    if (a3 >= 0) {
      goto LABEL_3;
    }
    return 0;
  }
  uint64_t v12 = sub_10008BD78(a1, a2, 0, 0, 0, a6, a7, a8);
  if ((int)v12 > a3) {
    return 0;
  }
LABEL_3:
  uint64_t v13 = *(void *)(a1 + 528);
  return sub_100092B08(v13, a2, a3, v12, a4, a6, a7, a8);
}

uint64_t sub_10008B684(uint64_t a1, int a2)
{
  int v2 = *(_DWORD *)(*(void *)(a1 + 480) + 32);
  if (a2 == 0xFFFFFF)
  {
    if (v2 > 0) {
      return 0;
    }
  }
  else if (v2 - 1 > a2)
  {
    return (a2 + 1);
  }
  return sub_100093DEC(*(void *)(a1 + 528), a2);
}

BOOL sub_10008B6C4(uint64_t a1)
{
  return *(void *)(*(void *)(a1 + 480) + 864) != 0;
}

uint64_t sub_10008B6D8(uint64_t a1, unsigned __int16 *a2)
{
  if (!*(void *)(*(void *)(a1 + 480) + 864)) {
    return 2;
  }
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  sub_100094C5C(*(void *)(a1 + 528), &v25, &v24);
  uint64_t v4 = 2
     * (int)(sub_100095428(*(void *)(*(void *)(a1 + 480) + 712), *(unsigned __int16 *)(*(void *)(a1 + 480) + 728), v25, v24, a2)+ 1);
  uint64_t v12 = (void *)sub_1000CD3E8(v4, v5, v6, v7, v8, v9, v10, v11);
  sub_1000950EC(*(void *)(*(void *)(a1 + 480) + 712), *(unsigned __int16 *)(*(void *)(a1 + 480) + 728), v25, v24, a2, (uint64_t)v12);
  unsigned int v13 = *(unsigned __int16 *)v12;
  if (v13 == 0xFFFF)
  {
LABEL_3:
    uint64_t v14 = 2;
  }
  else
  {
    uint64_t v16 = *(void *)(a1 + 480);
    int v17 = *(_DWORD *)(v16 + 880);
    uint64_t v18 = v12;
    while (1)
    {
      if (v17 > (int)v13)
      {
        uint64_t v20 = *(void *)(v16 + 864);
        uint64_t v14 = *(unsigned __int8 *)(v20 + v13);
        if (v14 != 2) {
          break;
        }
      }
      unsigned int v19 = *((unsigned __int16 *)v18 + 1);
      uint64_t v18 = (void *)((char *)v18 + 2);
      unsigned int v13 = v19;
      if (v19 == 0xFFFF) {
        goto LABEL_3;
      }
    }
    uint64_t v21 = 2;
    while (1)
    {
      if (v17 > (int)v13)
      {
        int v22 = *(unsigned __int8 *)(v20 + v13);
        if (v22 != v14 && v22 != 2) {
          break;
        }
      }
      unsigned int v13 = *(unsigned __int16 *)((char *)v18 + v21);
      v21 += 2;
      if (v13 == 0xFFFF) {
        goto LABEL_4;
      }
    }
    uint64_t v14 = 255;
  }
LABEL_4:
  sub_1000CD4D0(v12, v4);
  return v14;
}

uint64_t sub_10008B824(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6 = sub_1000CD550();
  unint64_t v14 = sub_1000CD3E8(8 * (a3 + 1), v7, v8, v9, v10, v11, v12, v13);
  int v22 = (uint64_t *)v14;
  if ((a3 & 0x80000000) == 0)
  {
    uint64_t v23 = 2 * *(int *)(a1 + 520) + 2;
    uint64_t v24 = (a3 + 1);
    uint64_t v25 = (unint64_t *)v14;
    do
    {
      *v25++ = sub_1000CD3E8(v23, v15, v16, v17, v18, v19, v20, v21);
      --v24;
    }
    while (v24);
  }
  sub_10008A374(a1, a2, (a3 + 1), v22);
  uint64_t v26 = (unsigned __int16 *)v22[a3];
  unsigned int v27 = *v26;
  if (v27 == 0xFFFF)
  {
LABEL_5:
    uint64_t v28 = 2;
  }
  else
  {
    uint64_t v30 = *(void *)(a1 + 480);
    int v31 = *(_DWORD *)(v30 + 880);
    while (1)
    {
      if (v31 > (int)v27)
      {
        uint64_t v33 = *(void *)(v30 + 864);
        uint64_t v28 = *(unsigned __int8 *)(v33 + v27);
        if (v28 != 2) {
          break;
        }
      }
      unsigned int v32 = v26[1];
      ++v26;
      unsigned int v27 = v32;
      if (v32 == 0xFFFF) {
        goto LABEL_5;
      }
    }
    uint64_t v34 = 1;
    while (1)
    {
      if (v31 > (int)v27)
      {
        int v35 = *(unsigned __int8 *)(v33 + v27);
        if (v35 != v28 && v35 != 2) {
          break;
        }
      }
      unsigned int v27 = v26[v34++];
      if (v27 == 0xFFFF) {
        goto LABEL_6;
      }
    }
    uint64_t v28 = 255;
  }
LABEL_6:
  sub_1000CD534(v6);
  return v28;
}

uint64_t sub_10008B954(uint64_t a1)
{
  return *(unsigned int *)(*(void *)(a1 + 480) + 756);
}

uint64_t sub_10008B960(uint64_t a1)
{
  return *(unsigned int *)(*(void *)(a1 + 480) + 760);
}

uint64_t sub_10008B96C(uint64_t a1)
{
  return *(unsigned int *)(*(void *)(a1 + 480) + 764);
}

uint64_t sub_10008B978(uint64_t a1)
{
  return *(unsigned int *)(*(void *)(a1 + 480) + 768);
}

uint64_t sub_10008B984(uint64_t a1)
{
  return *(unsigned __int16 *)(*(void *)(a1 + 480) + 708);
}

uint64_t sub_10008B990(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int16 *)(*(void *)(a1 + 480) + 728);
  uint64_t v2 = *(void *)(a1 + 528);
  if (v2)
  {
    unsigned int v3 = sub_100093DE4(v2);
    if (v1 <= v3) {
      return v3;
    }
    else {
      return v1;
    }
  }
  return v1;
}

uint64_t sub_10008B9CC(uint64_t a1, unsigned int a2)
{
  uint64_t v2 = *(void *)(a1 + 480);
  if (*(unsigned __int16 *)(v2 + 728) >= a2) {
    return *(void *)(*(void *)(v2 + 848) + 8 * a2);
  }
  else {
    return 0;
  }
}

BOOL sub_10008B9F4(uint64_t a1, uint64_t a2, char *a3)
{
  return sub_10009404C(*(void *)(a1 + 528), a2, a3);
}

BOOL sub_10008B9FC(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  BOOL v9 = sub_1000945D4(*(_DWORD **)(a1 + 528), a2, a3, a4, a5, a6, a7, a8);
  if (v9)
  {
    uint64_t v10 = *(_DWORD **)(a1 + 480);
    *(_DWORD *)(a1 + 512) = v10[159];
    *(_DWORD *)(a1 + 516) = v10[160];
    *(_DWORD *)(a1 + 524) = v10[161];
    *(_DWORD *)(a1 + 520) = v10[162];
    sub_100093F80(*(void *)(a1 + 528), a1, (_DWORD *)(a1 + 512), (_DWORD *)(a1 + 516), (_DWORD *)(a1 + 524), (_DWORD *)(a1 + 520));
  }
  return v9;
}

uint64_t sub_10008BA70(uint64_t a1)
{
  return nullsub_1(*(void *)(a1 + 528));
}

uint64_t sub_10008BA78(uint64_t a1, int a2, int a3, unsigned __int16 *a4, uint64_t a5, int a6, int a7, int a8)
{
  uint64_t v12 = *(void *)(a1 + 480);
  int v13 = *(_DWORD *)(v12 + 776);
  int v14 = (4 * sub_1000CED6C((unint64_t)a4)) | 1;
  int v22 = (unsigned __int8 *)sub_1000CD3E8(v14, v15, v16, v17, v18, v19, v20, v21);
  uint64_t v30 = (unsigned __int8 *)sub_1000CD3E8(v14, v23, v24, v25, v26, v27, v28, v29);
  if (v13 == 4) {
    int v31 = 3;
  }
  else {
    int v31 = v13;
  }
  if (sub_1000C0270(v31, (__int16 *)a4, v14, (uint64_t)v22) != 2
    || (sub_1000CD4D0(v30, v14), sub_1000CD4D0(v22, v14), a8))
  {
    uint64_t v47 = v14;
    int v48 = a8;
    sub_10008814C(v30, a4, *(_DWORD *)(v12 + 832), v13, 0, 0);
    if (*(_DWORD *)(v12 + 832))
    {
      int v32 = sub_100088008((uint64_t)a4);
      int v33 = a2;
    }
    else
    {
      int v33 = 0;
      int v32 = 128;
    }
    memset(v54, 0, sizeof(v54));
    uint64_t v55 = 0;
    int v53 = v33;
    int v56 = v33;
    int v57 = a3;
    int v34 = sub_10008E058(a1, (int *)&v55, v54, v22, v30, v32);
    uint64_t v35 = 0;
    int v36 = v48;
    if (v34 != 0xFFFFFF)
    {
      int v37 = v34;
      if (a7)
      {
        uint64_t v35 = 0;
        if (a6 <= 1) {
          int v38 = 1;
        }
        else {
          int v38 = a6;
        }
        uint64_t v39 = (v38 - 1);
        while (1)
        {
          if (v35 < a6) {
            *(_DWORD *)(a5 + 4 * v35) = v37;
          }
          if (v39 == v35) {
            break;
          }
          sub_10008DA18(v12, (uint64_t)v54, 0);
          int v40 = sub_10008E7DC(a1, (int *)&v55, (uint64_t)v54, v22, (uint64_t)v30, v32);
          v37 += v40;
          ++v35;
          if (!v40)
          {
            int v36 = v48;
            goto LABEL_27;
          }
        }
        uint64_t v35 = (v35 + 1);
        sub_1000CD4D0(v30, v47);
        sub_1000CD4D0(v22, v47);
        return v35;
      }
      uint64_t v35 = 0;
      do
      {
        if (v35 < a6) {
          *(_DWORD *)(a5 + 4 * v35) = v37;
        }
        ++v35;
        sub_10008DA18(v12, (uint64_t)v54, 0);
        int v43 = sub_10008E7DC(a1, (int *)&v55, (uint64_t)v54, v22, (uint64_t)v30, v32);
        v37 += v43;
      }
      while (v43);
    }
LABEL_27:
    sub_1000CD4D0(v30, v47);
    sub_1000CD4D0(v22, v47);
    if (a7) {
      BOOL v44 = a6 <= (int)v35;
    }
    else {
      BOOL v44 = 0;
    }
    char v45 = v44;
    if (!v36 && (v45 & 1) == 0)
    {
      if (a5) {
        uint64_t v46 = a5 + 4 * (int)v35;
      }
      else {
        uint64_t v46 = 0;
      }
      return sub_1000937B4(*(void *)(a1 + 528), v53, a3, (__int16 *)a4, v46, a6 - (int)v35, a7)
           + v35;
    }
    return v35;
  }
  uint64_t v41 = *(void *)(a1 + 528);
  return sub_1000937B4(v41, a2, a3, (__int16 *)a4, a5, a6, a7);
}

uint64_t sub_10008BD78(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, int *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result = 0;
  int v167 = 0;
  uint64_t v10 = *(void *)(a1 + 480);
  if (*(_DWORD *)(v10 + 32) > (int)a2)
  {
    int v11 = a4;
    unsigned int v13 = a2;
    int v14 = *(_DWORD *)(v10 + 776);
    uint64_t v171 = 0;
    int v170 = 0;
    uint64_t v169 = 0;
    char v168 = 0;
    int32x4_t v165 = 0;
    uint64_t v166 = 0;
    int32x4_t v164 = 0;
    uint64_t v15 = (unsigned char *)sub_1000CD3E8(*(int *)(a1 + 512) + 1, a2, (uint64_t)a3, a4, (uint64_t)a5, a6, a7, a8);
    uint64_t v23 = (char *)sub_1000CD3E8(*(int *)(a1 + 516) + 1, v16, v17, v18, v19, v20, v21, v22);
    uint64_t v161 = (char *)sub_1000CD3E8((4 * *(int *)(a1 + 516)) | 1, v24, v25, v26, v27, v28, v29, v30);
    int v38 = (char *)sub_1000CD3E8(*(int *)(a1 + 512) + 1, v31, v32, v33, v34, v35, v36, v37);
    int v39 = v11;
    int v159 = v14;
    if (v11)
    {
      char v40 = *(_DWORD *)(v10 + 696);
      signed int v41 = v13 >> v40;
      int v42 = v13 & ~(-1 << v40);
      int32x4_t v164 = (unsigned __int8 *)(*(void *)v10 + *(int *)(*(void *)(v10 + 16) + 4 * v41));
    }
    else
    {
      sub_10008DFE8(v10, v13, &v164);
      int v42 = 0;
    }
    uint64_t v163 = a1;
    sub_10008D5C0(v10, &v164, (uint64_t)v15, v38, &v168);
    sub_10008D984(v10, (uint64_t)&v164, v23);
    if (v42)
    {
      if (v11 > 0)
      {
        int v43 = 0;
        uint64_t v44 = v10 + 376;
        while (1)
        {
          if ((v166 & 0x200000000) == 0)
          {
            unsigned int v52 = 1;
            goto LABEL_18;
          }
          sub_10008C808(v10, *a3, &v167, (_DWORD *)&v171 + 1, &v164);
          if (SHIDWORD(v171) < 2) {
            goto LABEL_63;
          }
          int v53 = 0;
          uint64_t v54 = v164;
          uint64_t v55 = v165;
          int v56 = v166;
          int v57 = *(_DWORD *)(v10 + 704);
          int v58 = *(_DWORD *)(v10 + 40);
          int v59 = *(_DWORD *)(v10 + 692);
          do
          {
            if (v58 < 1)
            {
LABEL_27:
              if (v57 == 1) {
                goto LABEL_56;
              }
              goto LABEL_28;
            }
            if (v56)
            {
              int v61 = v56 - 1;
              if (v61) {
                goto LABEL_26;
              }
LABEL_43:
              ++v55;
              goto LABEL_44;
            }
            unsigned int v81 = *v54++;
            uint64_t v80 = v81;
            if (*(unsigned char *)(v44 + v81) == 2)
            {
              uint64_t v82 = (unsigned __int16 *)(*(void *)(v10 + 104) + 2 * v80);
              uint64_t v83 = *v82;
              int v61 = v82[1] + ~v83;
              uint64_t v55 = (unsigned __int8 *)(*(void *)(v10 + 88) + v83);
              if (v61)
              {
LABEL_26:
                int v56 = v61 - 1;
                v55 += 2;
                if (v58 == 1) {
                  goto LABEL_27;
                }
                goto LABEL_46;
              }
              goto LABEL_43;
            }
LABEL_44:
            unsigned int v85 = *v54++;
            uint64_t v84 = v85;
            if (*(unsigned char *)(v44 + v85) != 2)
            {
              if (v58 == 1) {
                goto LABEL_53;
              }
              goto LABEL_50;
            }
            uint64_t v86 = (unsigned __int16 *)(*(void *)(v10 + 104) + 2 * v84);
            uint64_t v87 = *v86;
            int v56 = v86[1] + ~v87;
            uint64_t v55 = (unsigned __int8 *)(*(void *)(v10 + 88) + v87 + 1);
            if (v58 == 1) {
              goto LABEL_27;
            }
LABEL_46:
            if (v56)
            {
              --v56;
              ++v55;
              if (v57 == 1) {
                goto LABEL_56;
              }
              goto LABEL_28;
            }
LABEL_50:
            unsigned int v89 = *v54++;
            uint64_t v88 = v89;
            if (*(unsigned char *)(v44 + v89) == 2)
            {
              uint64_t v90 = (unsigned __int16 *)(*(void *)(v10 + 104) + 2 * v88);
              uint64_t v91 = *v90;
              int v56 = v90[1] + ~v91;
              uint64_t v55 = (unsigned __int8 *)(*(void *)(v10 + 88) + v91 + 1);
              if (v57 == 1) {
                goto LABEL_56;
              }
LABEL_28:
              uint64_t v62 = v55;
LABEL_30:
              if (v56)
              {
                int v64 = v56 - 1;
                uint64_t v55 = v62 + 1;
                LODWORD(v65) = *v62;
                if (v64) {
                  goto LABEL_32;
                }
                goto LABEL_36;
              }
              unsigned int v69 = *v54++;
              uint64_t v65 = v69;
              if (*(unsigned char *)(v44 + v69) == 2)
              {
                uint64_t v70 = *(void *)(v10 + 104);
                uint64_t v71 = *(unsigned __int16 *)(v70 + 2 * v65);
                int v64 = *(unsigned __int16 *)(v70 + 2 * v65 + 2) + ~v71;
                uint64_t v62 = (unsigned __int8 *)(*(void *)(v10 + 88) + v71);
                uint64_t v55 = v62 + 1;
                LODWORD(v65) = *v62;
                if (v64)
                {
LABEL_32:
                  int v56 = v64 - 1;
                  uint64_t v66 = v62 + 2;
                  int v67 = *v55;
                  uint64_t v55 = v66;
                  int v68 = v65 | (v67 << 8);
                  uint64_t v62 = v66;
                  if (v68 >= v59) {
                    continue;
                  }
                  goto LABEL_30;
                }
LABEL_36:
                unsigned int v73 = *v54++;
                uint64_t v72 = v73;
                if (*(unsigned char *)(v44 + v73) != 2) {
                  goto LABEL_29;
                }
              }
              else
              {
                uint64_t v55 = v62;
                unsigned int v74 = *v54++;
                uint64_t v72 = v74;
                if (*(unsigned char *)(v44 + v74) != 2)
                {
LABEL_29:
                  int v56 = 0;
                  int v63 = v65 | (v72 << 8);
                  uint64_t v62 = v55;
                  if (v63 >= v59) {
                    continue;
                  }
                  goto LABEL_30;
                }
              }
              uint64_t v75 = *(void *)(v10 + 104);
              uint64_t v76 = *(unsigned __int16 *)(v75 + 2 * v72);
              int v56 = *(unsigned __int16 *)(v75 + 2 * v72 + 2) + ~v76;
              uint64_t v77 = (unsigned __int8 *)(*(void *)(v10 + 88) + v76);
              int v78 = *v77;
              uint64_t v55 = v77 + 1;
              int v79 = v65 | (v78 << 8);
              uint64_t v62 = v55;
              if (v79 >= v59) {
                continue;
              }
              goto LABEL_30;
            }
LABEL_53:
            int v56 = 0;
            if (v57 != 1) {
              goto LABEL_28;
            }
            do
            {
              while (1)
              {
LABEL_56:
                while (v56)
                {
                  --v56;
                  int v92 = *v55++;
                  if (v92 >= v59) {
                    goto LABEL_22;
                  }
                }
                unsigned int v94 = *v54++;
                uint64_t v93 = v94;
                if (*(unsigned char *)(v44 + v94) != 2) {
                  break;
                }
                uint64_t v95 = *(void *)(v10 + 104);
                uint64_t v96 = *(unsigned __int16 *)(v95 + 2 * v93);
                int v56 = *(unsigned __int16 *)(v95 + 2 * v93 + 2) + ~v96;
                float64x2_t v97 = (unsigned __int8 *)(*(void *)(v10 + 88) + v96);
                int v98 = *v97;
                uint64_t v55 = v97 + 1;
                if (v98 >= v59) {
                  goto LABEL_22;
                }
              }
              int v56 = 0;
            }
            while ((int)v93 < v59);
LABEL_22:
            ;
          }
          while (v53++ != HIDWORD(v171) - 2);
          LODWORD(v166) = 0;
          int32x4_t v164 = v54;
LABEL_63:
          unsigned int v52 = 2;
LABEL_18:
          sub_10008DA18(v10, (uint64_t)&v164, v52);
          ++v43;
          sub_10008D5C0(v10, &v164, (uint64_t)v15, v38, &v168);
          sub_10008D984(v10, (uint64_t)&v164, v23);
          if (v43 == v42) {
            goto LABEL_9;
          }
        }
      }
      do
      {
        sub_10008DA18(v10, (uint64_t)&v164, 1u);
        sub_10008D5C0(v10, &v164, (uint64_t)v15, v38, &v168);
        sub_10008D984(v10, (uint64_t)&v164, v23);
        --v42;
      }
      while (v42);
    }
LABEL_9:
    uint64_t v162 = v15;
    if ((v166 & 0x200000000) == 0)
    {
      HIDWORD(v171) = 1;
      if (v39 < 1)
      {
LABEL_125:
        sub_1000CD4D0(v38, *(int *)(v163 + 512) + 1);
        sub_1000CD4D0(v161, (4 * *(int *)(v163 + 516)) | 1);
        sub_1000CD4D0(v23, *(int *)(v163 + 516) + 1);
        sub_1000CD4D0(v162, *(int *)(v163 + 512) + 1);
        return HIDWORD(v171);
      }
      int v45 = v166;
      uint64_t v46 = v164;
      unint64_t v47 = (unint64_t)v165;
      uint64_t v48 = v10 + 376;
      if (*(__int16 *)(v10 + 752) == -1)
      {
        LODWORD(v49) = 0;
        int v50 = *(_DWORD *)(v10 + 40);
        if (v50 <= 0) {
          goto LABEL_74;
        }
      }
      else
      {
        if (v166)
        {
          int v45 = v166 - 1;
          unint64_t v47 = (unint64_t)(v165 + 1);
          LODWORD(v49) = *v165;
          int v50 = *(_DWORD *)(v10 + 40);
          if (v50 > 0) {
            goto LABEL_14;
          }
LABEL_74:
          int v158 = v49;
          uint64_t v108 = a5;
          if (a5)
          {
            int v109 = -1;
LABEL_104:
            *uint64_t v108 = v109;
          }
LABEL_105:
          if (*v23)
          {
            uint64_t v130 = *(void *)(a1 + 488) + 784;
            int v131 = sub_1000CAD00((unint64_t)v23);
            sub_1000883C4(v161, v23, v131 + 1, 1, *(_DWORD *)(*(void *)(a1 + 480) + 780), v130);
            int v132 = v161;
            int v133 = v159;
          }
          else
          {
            int v132 = v15;
            int v133 = v159;
            if (*(_DWORD *)(v10 + 832))
            {
              int v132 = v38;
              if (v168 != 16)
              {
                int v148 = sub_1000CAD00((unint64_t)v15);
                sub_1000883C4(v15, v15, v148 + 1, v168, *(_DWORD *)(v10 + 776), 0);
                int v132 = v15;
              }
            }
          }
          uint64_t v134 = *(unsigned int *)(a1 + 524);
          uint64_t v135 = (v134 + 1);
          int v136 = (_WORD *)*a3;
          BOOL v137 = sub_1000CAD44((unsigned __int8 *)(v10 + 824), "z", 1, v134) == 0;
          HIDWORD(v171) = sub_10009628C(*(void *)(a1 + 496), v132, v133, v137, v136, v135, (uint64_t)&v169, 1u, (uint64_t)&v171);
          if ((int)v171 >= 1)
          {
            uint64_t v145 = (_WORD *)sub_1000CD3E8(2 * v171, v138, v139, v140, v141, v142, v143, v144);
            HIDWORD(v171) = sub_10009628C(*(void *)(a1 + 496), v132, v133, v137, v145, v171, (uint64_t)&v169, 1u, (uint64_t)&v170);
            int v146 = sub_10009BF2C((unint64_t)v145);
            memcpy(v136, v145, 2 * (v146 + 1));
            sub_1000CD4D0(v145, 2 * (int)v171);
          }
          int v147 = *(unsigned __int16 *)(v10 + 752);
          if (v147 != 0xFFFF) {
            sub_10009593C((char *)v136, v158, v147);
          }
          goto LABEL_125;
        }
        uint64_t v46 = v164 + 1;
        uint64_t v49 = *v164;
        if (*(unsigned char *)(v48 + v49) != 2)
        {
          int v50 = *(_DWORD *)(v10 + 40);
          if (v50 > 0) {
            goto LABEL_89;
          }
          goto LABEL_74;
        }
        unint64_t v112 = (unsigned __int16 *)(*(void *)(v10 + 104) + 2 * v49);
        uint64_t v113 = *v112;
        int v45 = v112[1] + ~v113;
        uint64_t v114 = (unsigned __int8 *)(*(void *)(v10 + 88) + v113);
        int v115 = *v114;
        unint64_t v47 = (unint64_t)(v114 + 1);
        LODWORD(v49) = v115;
        int v50 = *(_DWORD *)(v10 + 40);
        if (v50 <= 0) {
          goto LABEL_74;
        }
      }
LABEL_14:
      if (v45)
      {
        int v51 = v45 - 1;
        if (!v51) {
          goto LABEL_93;
        }
        goto LABEL_91;
      }
LABEL_89:
      unsigned int v120 = *v46++;
      uint64_t v119 = v120;
      if (*(unsigned char *)(v48 + v120) != 2
        || (float64x2_t v121 = (unsigned __int16 *)(*(void *)(v10 + 104) + 2 * v119),
            uint64_t v122 = *v121,
            int v51 = v121[1] + ~v122,
            unint64_t v47 = *(void *)(v10 + 88) + v122,
            !v51))
      {
LABEL_93:
        unsigned int v125 = *v46++;
        unint64_t v47 = v125;
        if (*(unsigned char *)(v48 + v125) != 2)
        {
          int v158 = v49;
          uint64_t v108 = a5;
          if (v50 == 1) {
            goto LABEL_102;
          }
LABEL_98:
          uint64_t v129 = *v46;
          if (*(unsigned char *)(v48 + v129) != 2)
          {
LABEL_101:
            LODWORD(v47) = v47 | (v129 << 8);
LABEL_102:
            if (v108)
            {
              int v109 = *(_DWORD *)(v10 + 668) + v47;
              goto LABEL_104;
            }
            goto LABEL_105;
          }
          float64x2_t v124 = (unsigned __int8 *)(*(void *)(v10 + 88) + *(unsigned __int16 *)(*(void *)(v10 + 104) + 2 * v129));
LABEL_100:
          LODWORD(v129) = *v124;
          goto LABEL_101;
        }
        uint64_t v126 = *(void *)(v10 + 104);
        uint64_t v127 = *(unsigned __int16 *)(v126 + 2 * v47);
        int v123 = *(unsigned __int16 *)(v126 + 2 * v47 + 2) + ~v127;
        float64x2_t v128 = (unsigned __int8 *)(*(void *)(v10 + 88) + v127);
        float64x2_t v124 = v128 + 1;
        LODWORD(v47) = *v128;
        int v158 = v49;
        if (v50 != 1)
        {
LABEL_95:
          uint64_t v108 = a5;
          if (v123) {
            goto LABEL_100;
          }
          goto LABEL_98;
        }
LABEL_92:
        uint64_t v108 = a5;
        goto LABEL_102;
      }
LABEL_91:
      int v123 = v51 - 1;
      float64x2_t v124 = (unsigned __int8 *)(v47 + 2);
      LODWORD(v47) = *(unsigned __int8 *)(v47 + 1);
      int v158 = v49;
      if (v50 != 1) {
        goto LABEL_95;
      }
      goto LABEL_92;
    }
    uint64_t v99 = v10 + 376;
    float64x2_t v100 = v164 + 1;
    uint64_t v101 = *v164;
    if (*(unsigned char *)(v10 + 376 + v101) == 2)
    {
      uint64_t v102 = *(void *)(v10 + 104);
      uint64_t v103 = *(unsigned __int16 *)(v102 + 2 * v101);
      int v104 = *(unsigned __int16 *)(v102 + 2 * v101 + 2) + ~v103;
      float64x2_t v105 = (unsigned __int8 *)(*(void *)(v10 + 88) + v103);
      int32x4_t v165 = v105 + 1;
      LODWORD(v101) = *v105;
      if (v101 != 255)
      {
LABEL_66:
        if (*(__int16 *)(v10 + 752) == -1)
        {
          LODWORD(v101) = 0;
          LODWORD(v106) = 1;
          goto LABEL_116;
        }
        LODWORD(v106) = 1;
LABEL_115:
        int32x4_t v164 = v100;
        LODWORD(v166) = v104;
LABEL_116:
        HIDWORD(v171) = v106;
        if ((int)v106 >= v39) {
          uint64_t v149 = v39;
        }
        else {
          uint64_t v149 = v106;
        }
        if ((int)v149 >= 1)
        {
          uint64_t v150 = (char *)*a3;
          sub_10008C808(v10, *a3, &v167, 0, &v164);
          int v151 = a5;
          if (a5)
          {
            *a5 = v167;
            int v151 = a5 + 1;
          }
          int v152 = *(unsigned __int16 *)(v10 + 752);
          if (v152 != 0xFFFF) {
            sub_10009593C(v150, v101, v152);
          }
          if (v149 != 1)
          {
            int32x4_t v153 = a3 + 1;
            uint64_t v154 = v149 - 1;
            do
            {
              int32x4_t v155 = (void *)*v153;
              int v156 = sub_10008C808(v10, *v153, &v167, 0, &v164);
              if (v151) {
                *v151++ = v167;
              }
              memcpy(v155, v150, 2 * v156);
              int v157 = *(unsigned __int16 *)(v10 + 752);
              if (v157 != 0xFFFF) {
                sub_10009593C((char *)v155, v101, v157);
              }
              ++v153;
              uint64_t v150 = (char *)v155;
              --v154;
            }
            while (v154);
          }
        }
        goto LABEL_125;
      }
    }
    else
    {
      int v104 = v166;
      if (v101 != 255) {
        goto LABEL_66;
      }
    }
    if (v104)
    {
      --v104;
      unint64_t v106 = (unint64_t)v165;
      float64x2_t v107 = ++v165;
      LODWORD(v106) = *(unsigned __int8 *)v106;
      if (*(__int16 *)(v10 + 752) != -1) {
        goto LABEL_71;
      }
    }
    else
    {
      float64x2_t v100 = v164 + 2;
      unint64_t v106 = v164[1];
      if (*(unsigned char *)(v99 + v106) != 2)
      {
        if (*(__int16 *)(v10 + 752) == -1)
        {
          LODWORD(v101) = 0;
          int v104 = 0;
          goto LABEL_115;
        }
        goto LABEL_84;
      }
      uint64_t v110 = *(void *)(v10 + 104);
      uint64_t v111 = *(unsigned __int16 *)(v110 + 2 * v106);
      int v104 = *(unsigned __int16 *)(v110 + 2 * v106 + 2) + ~v111;
      unint64_t v106 = *(void *)(v10 + 88) + v111;
      float64x2_t v107 = (unsigned __int8 *)(v106 + 1);
      int32x4_t v165 = (unsigned __int8 *)(v106 + 1);
      LODWORD(v106) = *(unsigned __int8 *)v106;
      if (*(__int16 *)(v10 + 752) != -1)
      {
LABEL_71:
        if (v104)
        {
          --v104;
LABEL_86:
          int32x4_t v165 = v107 + 1;
          LODWORD(v101) = *v107;
          goto LABEL_115;
        }
LABEL_84:
        unsigned int v116 = *v100++;
        uint64_t v101 = v116;
        if (*(unsigned char *)(v99 + v116) != 2)
        {
          int v104 = 0;
          goto LABEL_115;
        }
        int32x4_t v117 = (unsigned __int16 *)(*(void *)(v10 + 104) + 2 * v101);
        uint64_t v118 = *v117;
        int v104 = v117[1] + ~v118;
        float64x2_t v107 = (unsigned __int8 *)(*(void *)(v10 + 88) + v118);
        goto LABEL_86;
      }
    }
    LODWORD(v101) = 0;
    goto LABEL_115;
  }
  return result;
}

uint64_t sub_10008C808(uint64_t a1, uint64_t a2, int *a3, _DWORD *a4, unsigned __int8 **a5)
{
  uint64_t v5 = a1 + 376;
  uint64_t v6 = *a5;
  uint64_t v7 = (uint64_t)a5[1];
  if (!a4)
  {
    int v15 = *((_DWORD *)a5 + 4);
    int v17 = *(_DWORD *)(a1 + 40);
    if (v17 > 0) {
      goto LABEL_19;
    }
    goto LABEL_27;
  }
  uint64_t v8 = v6 + 1;
  uint64_t v9 = *v6;
  if (*(unsigned char *)(v5 + v9) != 2)
  {
    if (v9 == 255) {
      goto LABEL_11;
    }
LABEL_9:
    int v15 = 0;
    *a4 = 1;
    if (*(__int16 *)(a1 + 752) == -1) {
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  uint64_t v10 = (unsigned __int16 *)(*(void *)(a1 + 104) + 2 * v9);
  uint64_t v11 = *v10;
  uint64_t v12 = (unsigned __int8 *)(*(void *)(a1 + 88) + v11);
  int v13 = *v12;
  uint64_t v7 = (uint64_t)(v12 + 1);
  if (v13 != 255) {
    goto LABEL_9;
  }
  int v14 = v10[1] + ~v11;
  if (!v14)
  {
LABEL_11:
    uint64_t v8 = v6 + 2;
    uint64_t v18 = v6[1];
    if (*(unsigned char *)(v5 + v18) != 2)
    {
      int v15 = 0;
      v6 += 2;
      *a4 = v18;
      if (*(__int16 *)(a1 + 752) == -1) {
        goto LABEL_18;
      }
      goto LABEL_16;
    }
    uint64_t v19 = *(void *)(a1 + 104);
    uint64_t v20 = *(unsigned __int16 *)(v19 + 2 * v18);
    int v15 = *(unsigned __int16 *)(v19 + 2 * v18 + 2) + ~v20;
    uint64_t v7 = *(void *)(a1 + 88) + v20;
    uint64_t v16 = v7 + 1;
    goto LABEL_13;
  }
  int v15 = v14 - 1;
  uint64_t v16 = *(void *)(a1 + 88) + v11 + 2;
LABEL_13:
  int v21 = *(unsigned __int8 *)v7;
  uint64_t v6 = v8;
  uint64_t v7 = v16;
  *a4 = v21;
  if (*(__int16 *)(a1 + 752) == -1)
  {
LABEL_18:
    int v17 = *(_DWORD *)(a1 + 40);
    if (v17 > 0) {
      goto LABEL_19;
    }
    goto LABEL_27;
  }
LABEL_16:
  if (v15)
  {
    --v15;
    ++v7;
    goto LABEL_18;
  }
  unsigned int v30 = *v6++;
  uint64_t v29 = v30;
  if (*(unsigned char *)(v5 + v30) == 2)
  {
    uint64_t v31 = (unsigned __int16 *)(*(void *)(a1 + 104) + 2 * v29);
    uint64_t v32 = *v31;
    int v15 = v31[1] + ~v32;
    uint64_t v7 = *(void *)(a1 + 88) + v32 + 1;
    int v17 = *(_DWORD *)(a1 + 40);
    if (v17 > 0)
    {
LABEL_19:
      if (v15)
      {
        int v22 = v15 - 1;
        uint64_t v23 = (unsigned __int8 *)(v7 + 1);
        if (!v22) {
          goto LABEL_21;
        }
        goto LABEL_32;
      }
LABEL_30:
      unsigned int v35 = *v6++;
      uint64_t v34 = v35;
      if (*(unsigned char *)(v5 + v35) != 2)
      {
        uint64_t v23 = (unsigned __int8 *)v7;
        unsigned int v38 = *v6++;
        uint64_t v7 = v38;
        if (*(unsigned char *)(v5 + v38) == 2)
        {
LABEL_22:
          uint64_t v25 = *(void *)(a1 + 104);
          uint64_t v26 = *(unsigned __int16 *)(v25 + 2 * v7);
          int v15 = *(unsigned __int16 *)(v25 + 2 * v7 + 2) + ~v26;
          uint64_t v27 = (unsigned __int8 *)(*(void *)(a1 + 88) + v26);
          uint64_t v28 = v27 + 1;
          LODWORD(v7) = *v27;
          if (v17 != 1)
          {
LABEL_23:
            if (v15)
            {
              --v15;
              goto LABEL_39;
            }
            uint64_t v23 = v28;
LABEL_37:
            unsigned int v40 = *v6++;
            uint64_t v39 = v40;
            if (*(unsigned char *)(v5 + v40) != 2)
            {
              int v15 = 0;
              goto LABEL_41;
            }
            uint64_t v41 = *(void *)(a1 + 104);
            uint64_t v42 = *(unsigned __int16 *)(v41 + 2 * v39);
            int v15 = *(unsigned __int16 *)(v41 + 2 * v39 + 2) + ~v42;
            uint64_t v28 = (unsigned __int8 *)(*(void *)(a1 + 88) + v42);
LABEL_39:
            LODWORD(v39) = *v28;
            uint64_t v23 = v28 + 1;
LABEL_41:
            LODWORD(v7) = v7 | (v39 << 8);
            goto LABEL_42;
          }
          goto LABEL_33;
        }
LABEL_35:
        if (v17 != 1) {
          goto LABEL_37;
        }
        int v15 = 0;
LABEL_42:
        int v33 = *(_DWORD *)(a1 + 668) + v7;
        uint64_t v7 = (uint64_t)v23;
        goto LABEL_43;
      }
      uint64_t v36 = (unsigned __int16 *)(*(void *)(a1 + 104) + 2 * v34);
      uint64_t v37 = *v36;
      int v22 = v36[1] + ~v37;
      uint64_t v7 = *(void *)(a1 + 88) + v37;
      uint64_t v23 = (unsigned __int8 *)(v7 + 1);
      if (!v22)
      {
LABEL_21:
        unsigned int v24 = *v6++;
        uint64_t v7 = v24;
        if (*(unsigned char *)(v5 + v24) == 2) {
          goto LABEL_22;
        }
        goto LABEL_35;
      }
LABEL_32:
      int v15 = v22 - 1;
      uint64_t v28 = (unsigned __int8 *)(v7 + 2);
      LODWORD(v7) = *v23;
      if (v17 != 1) {
        goto LABEL_23;
      }
LABEL_33:
      uint64_t v23 = v28;
      goto LABEL_42;
    }
LABEL_27:
    int v33 = -1;
    goto LABEL_43;
  }
  int v17 = *(_DWORD *)(a1 + 40);
  if (v17 > 0) {
    goto LABEL_30;
  }
  int v15 = 0;
  int v33 = -1;
LABEL_43:
  *a3 = v33;
  int v43 = *(_DWORD *)(a1 + 704);
  int v44 = *(_DWORD *)(a1 + 692);
  int v45 = v6;
  uint64_t v46 = (unsigned __int8 *)v7;
  int v47 = v15;
  if (v43 != 1)
  {
    while (!v47)
    {
      unsigned int v57 = *v45++;
      uint64_t v48 = v57;
      if (*(unsigned char *)(v5 + v57) == 2)
      {
        uint64_t v58 = *(void *)(a1 + 104);
        uint64_t v59 = *(unsigned __int16 *)(v58 + 2 * v48);
        int v55 = *(unsigned __int16 *)(v58 + 2 * v48 + 2) + ~v59;
        uint64_t v46 = (unsigned __int8 *)(*(void *)(a1 + 88) + v59);
        int v56 = v46 + 1;
        LODWORD(v48) = *v46;
        if (!v55)
        {
LABEL_58:
          uint64_t v46 = v56;
          goto LABEL_59;
        }
LABEL_52:
        int v47 = v55 - 1;
        v46 += 2;
        LODWORD(v48) = v48 | (*v56 << 8);
        if ((int)v48 >= v44) {
          goto LABEL_63;
        }
      }
      else
      {
LABEL_59:
        unsigned int v61 = *v45++;
        uint64_t v60 = v61;
        if (*(unsigned char *)(v5 + v61) == 2)
        {
          uint64_t v62 = *(void *)(a1 + 104);
          uint64_t v63 = *(unsigned __int16 *)(v62 + 2 * v60);
          int v47 = *(unsigned __int16 *)(v62 + 2 * v60 + 2) + ~v63;
          int v64 = (unsigned __int8 *)(*(void *)(a1 + 88) + v63);
          uint64_t v46 = v64 + 1;
          LODWORD(v48) = v48 | (*v64 << 8);
          if ((int)v48 >= v44) {
            goto LABEL_63;
          }
        }
        else
        {
          int v47 = 0;
          LODWORD(v48) = v48 | (v60 << 8);
          if ((int)v48 >= v44) {
            goto LABEL_63;
          }
        }
      }
    }
    int v55 = v47 - 1;
    int v56 = v46 + 1;
    LODWORD(v48) = *v46;
    if (!v55) {
      goto LABEL_58;
    }
    goto LABEL_52;
  }
  do
  {
    while (1)
    {
      while (v47)
      {
        --v47;
        int v49 = *v46++;
        LODWORD(v48) = v49;
        if (v49 >= v44) {
          goto LABEL_63;
        }
      }
      unsigned int v50 = *v45++;
      uint64_t v48 = v50;
      if (*(unsigned char *)(v5 + v50) != 2) {
        break;
      }
      uint64_t v51 = *(void *)(a1 + 104);
      uint64_t v52 = *(unsigned __int16 *)(v51 + 2 * v48);
      int v47 = *(unsigned __int16 *)(v51 + 2 * v48 + 2) + ~v52;
      int v53 = (unsigned __int8 *)(*(void *)(a1 + 88) + v52);
      int v54 = *v53;
      uint64_t v46 = v53 + 1;
      LODWORD(v48) = v54;
      if (v54 >= v44) {
        goto LABEL_63;
      }
    }
    int v47 = 0;
  }
  while ((int)v48 < v44);
LABEL_63:
  uint64_t v65 = (v48 - v44);
  uint64_t v66 = (_WORD *)(a2 + 2 * (int)v65);
  if (!v15) {
    goto LABEL_66;
  }
LABEL_64:
  --v15;
  uint64_t v68 = v7 + 1;
  LODWORD(v67) = *(unsigned __int8 *)v7;
  if (v43 == 1) {
    goto LABEL_65;
  }
LABEL_68:
  if (v15)
  {
    --v15;
    v7 += 2;
  }
  else
  {
    uint64_t v7 = v68;
LABEL_73:
    unsigned int v72 = *v6++;
    uint64_t v68 = v72;
    if (*(unsigned char *)(v5 + v72) != 2)
    {
      int v15 = 0;
      goto LABEL_77;
    }
    uint64_t v73 = *(void *)(a1 + 104);
    uint64_t v74 = *(unsigned __int16 *)(v73 + 2 * v68);
    int v15 = *(unsigned __int16 *)(v73 + 2 * v68 + 2) + ~v74;
    uint64_t v68 = *(void *)(a1 + 88) + v74;
    uint64_t v7 = v68 + 1;
  }
  LODWORD(v68) = *(unsigned __int8 *)v68;
LABEL_77:
  LODWORD(v67) = v67 | (v68 << 8);
  while ((int)v67 < *(_DWORD *)(a1 + 692))
  {
    *v66++ = v67;
    if (v15) {
      goto LABEL_64;
    }
LABEL_66:
    unsigned int v69 = *v6++;
    uint64_t v67 = v69;
    if (*(unsigned char *)(v5 + v69) == 2)
    {
      uint64_t v70 = *(void *)(a1 + 104);
      uint64_t v71 = *(unsigned __int16 *)(v70 + 2 * v67);
      int v15 = *(unsigned __int16 *)(v70 + 2 * v67 + 2) + ~v71;
      uint64_t v7 = *(void *)(a1 + 88) + v71;
      uint64_t v68 = v7 + 1;
      LODWORD(v67) = *(unsigned __int8 *)v7;
      if (v43 != 1) {
        goto LABEL_68;
      }
LABEL_65:
      uint64_t v7 = v68;
      continue;
    }
    if (v43 != 1) {
      goto LABEL_73;
    }
    int v15 = 0;
  }
  *uint64_t v66 = -1;
  *((_DWORD *)a5 + 4) = v15;
  *a5 = v6;
  a5[1] = (unsigned __int8 *)v7;
  return v65;
}

uint64_t sub_10008CD04(uint64_t result, _DWORD *a2, unsigned __int8 **a3)
{
  int v3 = *((_DWORD *)a3 + 4);
  uint64_t v4 = *a3;
  uint64_t v5 = a3[1];
  uint64_t v6 = result + 376;
  if (*(int *)(result + 40) >= 1)
  {
    if (v3)
    {
      int v7 = v3 - 1;
      unint64_t v8 = (unint64_t)(v5 + 1);
      a2[2] = *v5;
      if (v7) {
        goto LABEL_4;
      }
    }
    else
    {
      unsigned int v11 = *v4++;
      uint64_t v10 = v11;
      if (*(unsigned char *)(v6 + v11) != 2)
      {
        a2[2] = v10;
        unsigned int v17 = *v4++;
        unint64_t v8 = v17;
        if (*(unsigned char *)(v6 + v17) == 2)
        {
LABEL_10:
          uint64_t v15 = *(void *)(result + 104);
          uint64_t v16 = *(unsigned __int16 *)(v15 + 2 * v8);
          int v3 = *(unsigned __int16 *)(v15 + 2 * v8 + 2) + ~v16;
          unint64_t v8 = *(void *)(result + 88) + v16;
          uint64_t v5 = (unsigned __int8 *)(v8 + 1);
          LODWORD(v8) = *(unsigned __int8 *)v8;
          if (*(_DWORD *)(result + 40) != 1) {
            goto LABEL_11;
          }
LABEL_21:
          int v9 = *(_DWORD *)(result + 668) + v8;
          goto LABEL_22;
        }
LABEL_14:
        if (*(_DWORD *)(result + 40) != 1) {
          goto LABEL_16;
        }
        int v3 = 0;
        goto LABEL_21;
      }
      uint64_t v12 = *(void *)(result + 104);
      uint64_t v13 = *(unsigned __int16 *)(v12 + 2 * v10);
      int v7 = *(unsigned __int16 *)(v12 + 2 * v10 + 2) + ~v13;
      uint64_t v5 = (unsigned __int8 *)(*(void *)(result + 88) + v13);
      unint64_t v8 = (unint64_t)(v5 + 1);
      a2[2] = *v5;
      if (v7)
      {
LABEL_4:
        int v3 = v7 - 1;
        v5 += 2;
        LODWORD(v8) = *(unsigned __int8 *)v8;
        if (*(_DWORD *)(result + 40) == 1) {
          goto LABEL_21;
        }
LABEL_11:
        if (v3)
        {
          --v3;
          goto LABEL_18;
        }
LABEL_16:
        unsigned int v19 = *v4++;
        uint64_t v18 = v19;
        if (*(unsigned char *)(v6 + v19) != 2)
        {
          int v3 = 0;
          goto LABEL_20;
        }
        uint64_t v20 = *(void *)(result + 104);
        uint64_t v21 = *(unsigned __int16 *)(v20 + 2 * v18);
        int v3 = *(unsigned __int16 *)(v20 + 2 * v18 + 2) + ~v21;
        uint64_t v5 = (unsigned __int8 *)(*(void *)(result + 88) + v21);
LABEL_18:
        int v22 = *v5++;
        LODWORD(v18) = v22;
LABEL_20:
        LODWORD(v8) = v8 | (v18 << 8);
        goto LABEL_21;
      }
    }
    uint64_t v5 = (unsigned __int8 *)v8;
    unsigned int v14 = *v4++;
    unint64_t v8 = v14;
    if (*(unsigned char *)(v6 + v14) == 2) {
      goto LABEL_10;
    }
    goto LABEL_14;
  }
  a2[2] = 1;
  int v9 = -1;
LABEL_22:
  int v23 = 0;
  a2[3] = v9;
  do
  {
    *a2 = v23;
    if (v3)
    {
      --v3;
      unint64_t v28 = (unint64_t)(v5 + 1);
      LODWORD(v27) = *v5;
      int v29 = *(_DWORD *)(result + 704);
      if (v29 == 1) {
        goto LABEL_23;
      }
    }
    else
    {
      unsigned int v30 = *v4++;
      uint64_t v27 = v30;
      if (*(unsigned char *)(v6 + v30) != 2)
      {
        int v29 = *(_DWORD *)(result + 704);
        if (v29 == 1)
        {
          int v3 = 0;
          goto LABEL_24;
        }
        goto LABEL_36;
      }
      uint64_t v31 = *(void *)(result + 104);
      uint64_t v32 = *(unsigned __int16 *)(v31 + 2 * v27);
      int v3 = *(unsigned __int16 *)(v31 + 2 * v27 + 2) + ~v32;
      uint64_t v5 = (unsigned __int8 *)(*(void *)(result + 88) + v32);
      unint64_t v28 = (unint64_t)(v5 + 1);
      LODWORD(v27) = *v5;
      int v29 = *(_DWORD *)(result + 704);
      if (v29 == 1)
      {
LABEL_23:
        uint64_t v5 = (unsigned __int8 *)v28;
        goto LABEL_24;
      }
    }
    if (v3)
    {
      --v3;
      v5 += 2;
      goto LABEL_38;
    }
    uint64_t v5 = (unsigned __int8 *)v28;
LABEL_36:
    unsigned int v33 = *v4++;
    unint64_t v28 = v33;
    if (*(unsigned char *)(v6 + v33) != 2)
    {
      int v3 = 0;
      goto LABEL_40;
    }
    uint64_t v34 = *(void *)(result + 104);
    uint64_t v35 = *(unsigned __int16 *)(v34 + 2 * v28);
    int v3 = *(unsigned __int16 *)(v34 + 2 * v28 + 2) + ~v35;
    unint64_t v28 = *(void *)(result + 88) + v35;
    uint64_t v5 = (unsigned __int8 *)(v28 + 1);
LABEL_38:
    LODWORD(v28) = *(unsigned __int8 *)v28;
LABEL_40:
    LODWORD(v27) = v27 | (v28 << 8);
LABEL_24:
    int v24 = *(_DWORD *)(result + 692);
    v23 += v29;
    BOOL v25 = __OFSUB__(v27, v24);
    int v26 = v27 - v24;
  }
  while (v26 < 0 != v25);
  a2[1] = v26;
  *((_DWORD *)a3 + 4) = v3;
  *a3 = v4;
  a3[1] = v5;
  return result;
}

double sub_10008CF6C(uint64_t a1)
{
  sub_1000C321C(*(void *)(a1 + 64));
  sub_1000C321C(*(void *)(a1 + 80));
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  sub_1000C321C(*(void *)(a1 + 96));
  sub_1000C321C(*(void *)(a1 + 112));
  double result = 0.0;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  return result;
}

uint64_t sub_10008CFC4(uint64_t a1, int a2, unsigned __int8 *a3)
{
  switch(a2)
  {
    case 1:
      uint64_t v4 = a1 + 376;
      uint64_t v5 = a3 + 1;
      uint64_t v6 = *a3;
      if (*(unsigned char *)(a1 + 376 + v6) == 2)
      {
        int v7 = (unsigned __int16 *)(*(void *)(a1 + 104) + 2 * v6);
        uint64_t v8 = *v7;
        int v9 = (unsigned __int8 *)(*(void *)(a1 + 88) + v8);
        int v11 = *v9;
        uint64_t v10 = v9 + 1;
        if (v11 == 255)
        {
          int v12 = v7[1] + ~v8;
          if (v12)
          {
            int v13 = v12 - 1;
            LODWORD(v14) = *v10;
            uint64_t v10 = (unsigned __int8 *)(*(void *)(a1 + 88) + v8 + 2);
            if (*(__int16 *)(a1 + 752) == -1) {
              goto LABEL_24;
            }
            goto LABEL_19;
          }
          goto LABEL_15;
        }
LABEL_13:
        int v13 = 0;
        LODWORD(v14) = 1;
        uint64_t v5 = a3;
        if (*(__int16 *)(a1 + 752) == -1) {
          goto LABEL_24;
        }
        goto LABEL_19;
      }
      uint64_t v10 = 0;
      if (v6 != 255) {
        goto LABEL_13;
      }
LABEL_15:
      uint64_t v5 = a3 + 2;
      uint64_t v14 = a3[1];
      if (*(unsigned char *)(v4 + v14) == 2)
      {
        uint64_t v15 = *(void *)(a1 + 104);
        uint64_t v16 = *(unsigned __int16 *)(v15 + 2 * v14);
        int v13 = *(unsigned __int16 *)(v15 + 2 * v14 + 2) + ~v16;
        unsigned int v17 = (unsigned __int8 *)(*(void *)(a1 + 88) + v16);
        LODWORD(v14) = *v17;
        uint64_t v10 = v17 + 1;
        if (*(__int16 *)(a1 + 752) == -1) {
          goto LABEL_24;
        }
      }
      else
      {
        int v13 = 0;
        if (*(__int16 *)(a1 + 752) == -1) {
          goto LABEL_24;
        }
      }
LABEL_19:
      if (v13)
      {
        --v13;
      }
      else
      {
        unsigned int v19 = *v5++;
        uint64_t v18 = v19;
        if (*(unsigned char *)(v4 + v19) != 2)
        {
          int v13 = 0;
          if (v14) {
            goto LABEL_25;
          }
          return (v5 - a3);
        }
        uint64_t v20 = (unsigned __int16 *)(*(void *)(a1 + 104) + 2 * v18);
        uint64_t v21 = *v20;
        int v13 = v20[1] + ~v21;
        uint64_t v10 = (unsigned __int8 *)(*(void *)(a1 + 88) + v21);
      }
      ++v10;
LABEL_24:
      if (v14)
      {
LABEL_25:
        int v22 = 0;
        int v23 = *(_DWORD *)(a1 + 40);
        do
        {
          if (v23 < 1) {
            goto LABEL_47;
          }
          if (v13)
          {
            int v24 = v13 - 1;
            if (v24) {
              goto LABEL_30;
            }
          }
          else
          {
            unsigned int v26 = *v5++;
            uint64_t v25 = v26;
            if (*(unsigned char *)(v4 + v26) != 2) {
              goto LABEL_35;
            }
            uint64_t v27 = (unsigned __int16 *)(*(void *)(a1 + 104) + 2 * v25);
            uint64_t v28 = *v27;
            int v24 = v27[1] + ~v28;
            uint64_t v10 = (unsigned __int8 *)(*(void *)(a1 + 88) + v28);
            if (v24)
            {
LABEL_30:
              int v13 = v24 - 1;
              v10 += 2;
              if (v23 == 1) {
                goto LABEL_47;
              }
              goto LABEL_37;
            }
          }
          ++v10;
LABEL_35:
          unsigned int v30 = *v5++;
          uint64_t v29 = v30;
          if (*(unsigned char *)(v4 + v30) == 2)
          {
            uint64_t v31 = (unsigned __int16 *)(*(void *)(a1 + 104) + 2 * v29);
            uint64_t v32 = *v31;
            int v13 = v31[1] + ~v32;
            uint64_t v10 = (unsigned __int8 *)(*(void *)(a1 + 88) + v32 + 1);
            if (v23 == 1) {
              goto LABEL_47;
            }
LABEL_37:
            if (v13)
            {
              --v13;
LABEL_43:
              ++v10;
              goto LABEL_47;
            }
            goto LABEL_41;
          }
          if (v23 == 1)
          {
            int v13 = 0;
            goto LABEL_47;
          }
LABEL_41:
          unsigned int v34 = *v5++;
          uint64_t v33 = v34;
          if (*(unsigned char *)(v4 + v34) == 2)
          {
            uint64_t v35 = (unsigned __int16 *)(*(void *)(a1 + 104) + 2 * v33);
            uint64_t v36 = *v35;
            int v13 = v35[1] + ~v36;
            uint64_t v10 = (unsigned __int8 *)(*(void *)(a1 + 88) + v36);
            goto LABEL_43;
          }
          int v13 = 0;
          do
          {
LABEL_47:
            if (v13)
            {
              --v13;
              unint64_t v38 = (unint64_t)(v10 + 1);
              LODWORD(v37) = *v10;
              if (*(_DWORD *)(a1 + 704) == 1) {
                goto LABEL_45;
              }
            }
            else
            {
              unsigned int v39 = *v5++;
              uint64_t v37 = v39;
              if (*(unsigned char *)(v4 + v39) != 2)
              {
                if (*(_DWORD *)(a1 + 704) == 1)
                {
                  int v13 = 0;
                  continue;
                }
                goto LABEL_57;
              }
              uint64_t v40 = *(void *)(a1 + 104);
              uint64_t v41 = *(unsigned __int16 *)(v40 + 2 * v37);
              int v13 = *(unsigned __int16 *)(v40 + 2 * v37 + 2) + ~v41;
              uint64_t v10 = (unsigned __int8 *)(*(void *)(a1 + 88) + v41);
              unint64_t v38 = (unint64_t)(v10 + 1);
              LODWORD(v37) = *v10;
              if (*(_DWORD *)(a1 + 704) == 1)
              {
LABEL_45:
                uint64_t v10 = (unsigned __int8 *)v38;
                continue;
              }
            }
            if (v13)
            {
              --v13;
              v10 += 2;
              goto LABEL_59;
            }
            uint64_t v10 = (unsigned __int8 *)v38;
LABEL_57:
            unsigned int v42 = *v5++;
            unint64_t v38 = v42;
            if (*(unsigned char *)(v4 + v42) != 2)
            {
              int v13 = 0;
              goto LABEL_61;
            }
            uint64_t v43 = *(void *)(a1 + 104);
            uint64_t v44 = *(unsigned __int16 *)(v43 + 2 * v38);
            int v13 = *(unsigned __int16 *)(v43 + 2 * v38 + 2) + ~v44;
            unint64_t v38 = *(void *)(a1 + 88) + v44;
            uint64_t v10 = (unsigned __int8 *)(v38 + 1);
LABEL_59:
            LODWORD(v38) = *(unsigned __int8 *)v38;
LABEL_61:
            LODWORD(v37) = v37 | (v38 << 8);
          }
          while ((int)v37 < *(_DWORD *)(a1 + 692));
          ++v22;
        }
        while (v22 != v14);
      }
      return (v5 - a3);
    case 2:
    case 4:
      return 1;
    case 3:
      return *(unsigned int *)(a1 + 36);
    case 5:
      return *(unsigned int *)(a1 + 44);
    case 6:
      return *(unsigned int *)(a1 + 48);
    default:
      return 0;
  }
}

uint64_t sub_10008D374(uint64_t result, unsigned __int8 **a2)
{
  uint64_t v2 = result + 120;
  int v3 = *a2;
  uint64_t v4 = *a2 + 1;
  *a2 = v4;
  uint64_t v5 = *v3;
  if (*(unsigned char *)(result + 120 + v5) == 2)
  {
    uint64_t v6 = *(void *)(result + 72);
    uint64_t v7 = *(unsigned __int16 *)(v6 + 2 * v5);
    int v8 = *(unsigned __int16 *)(v6 + 2 * v5 + 2) + ~v7;
    int v9 = (unsigned __int8 *)(*(void *)(result + 56) + v7);
    unsigned int v11 = *v9;
    uint64_t v10 = v9 + 1;
    if (v11 >= 0x20) {
      goto LABEL_11;
    }
    goto LABEL_5;
  }
  uint64_t v10 = 0;
  int v8 = 0;
  if (v5 < 0x20)
  {
LABEL_5:
    int v12 = v4;
    goto LABEL_6;
  }
  do
  {
    while (1)
    {
LABEL_11:
      while (v8)
      {
        --v8;
        int v12 = v4;
        unsigned int v15 = *v10++;
        if (v15 <= 0x1F) {
          goto LABEL_6;
        }
      }
      int v12 = v4 + 1;
      *a2 = v4 + 1;
      uint64_t v16 = *v4;
      if (*(unsigned char *)(v2 + v16) != 2) {
        break;
      }
      uint64_t v17 = *(void *)(result + 72);
      uint64_t v18 = *(unsigned __int16 *)(v17 + 2 * v16);
      int v8 = *(unsigned __int16 *)(v17 + 2 * v16 + 2) + ~v18;
      unsigned int v19 = (unsigned __int8 *)(*(void *)(result + 56) + v18);
      unsigned int v20 = *v19;
      uint64_t v10 = v19 + 1;
      uint64_t v4 = v12;
      if (v20 <= 0x1F) {
        goto LABEL_6;
      }
    }
    int v8 = 0;
    ++v4;
  }
  while (v16 > 0x1F);
LABEL_6:
  if (!*(_DWORD *)(result + 832)) {
    goto LABEL_22;
  }
  if (v8)
  {
    --v8;
    int v13 = v12;
    int v14 = *v10++;
    if (v14 == 16) {
      goto LABEL_25;
    }
    goto LABEL_21;
  }
  int v13 = v12 + 1;
  *a2 = v12 + 1;
  uint64_t v21 = *v12;
  if (*(unsigned char *)(v2 + v21) == 2)
  {
    uint64_t v22 = *(void *)(result + 72);
    uint64_t v23 = *(unsigned __int16 *)(v22 + 2 * v21);
    int v8 = *(unsigned __int16 *)(v22 + 2 * v21 + 2) + ~v23;
    int v24 = (unsigned __int8 *)(*(void *)(result + 56) + v23);
    int v25 = *v24;
    uint64_t v10 = v24 + 1;
    if (v25 == 16) {
      goto LABEL_25;
    }
    goto LABEL_21;
  }
  int v8 = 0;
  if (v21 != 16)
  {
LABEL_21:
    int v12 = v13;
    goto LABEL_22;
  }
  do
  {
    while (1)
    {
LABEL_25:
      while (v8)
      {
        --v8;
        int v12 = v13;
        unsigned int v26 = *v10++;
        if (v26 <= 0x1F) {
          goto LABEL_22;
        }
      }
      int v12 = v13 + 1;
      *a2 = v13 + 1;
      uint64_t v27 = *v13;
      if (*(unsigned char *)(v2 + v27) != 2) {
        break;
      }
      uint64_t v28 = *(void *)(result + 72);
      uint64_t v29 = *(unsigned __int16 *)(v28 + 2 * v27);
      int v8 = *(unsigned __int16 *)(v28 + 2 * v27 + 2) + ~v29;
      unsigned int v30 = (unsigned __int8 *)(*(void *)(result + 56) + v29);
      unsigned int v31 = *v30;
      uint64_t v10 = v30 + 1;
      int v13 = v12;
      if (v31 <= 0x1F) {
        goto LABEL_22;
      }
    }
    int v8 = 0;
    ++v13;
  }
  while (v27 > 0x1F);
LABEL_22:
  if (v8)
  {
    *((unsigned char *)a2 + 20) = *v10;
    a2[1] = v10 + 1;
    *((_DWORD *)a2 + 4) = v8 - 1;
  }
  else
  {
    *a2 = v12 + 1;
    uint64_t v32 = *v12;
    if (*(unsigned char *)(v2 + v32) == 2)
    {
      uint64_t v33 = (unsigned __int16 *)(*(void *)(result + 72) + 2 * v32);
      uint64_t v34 = *v33;
      LODWORD(v33) = v33[1] + ~v34;
      uint64_t v35 = (unsigned char *)(*(void *)(result + 56) + v34);
      *((unsigned char *)a2 + 20) = *v35;
      a2[1] = v35 + 1;
      *((_DWORD *)a2 + 4) = v33;
    }
    else
    {
      *((unsigned char *)a2 + 20) = v32;
      a2[1] = v10;
      *((_DWORD *)a2 + 4) = 0;
    }
  }
  return result;
}

uint64_t sub_10008D5C0(uint64_t result, unsigned __int8 **a2, uint64_t a3, unsigned char *a4, unsigned char *a5)
{
  uint64_t v5 = result + 120;
  uint64_t v6 = *a2;
  uint64_t v7 = **a2;
  if (*(unsigned char *)(result + 120 + v7) == 2)
  {
    uint64_t v8 = *(void *)(result + 72);
    uint64_t v9 = *(unsigned __int16 *)(v8 + 2 * v7);
    int v10 = *(unsigned __int16 *)(v8 + 2 * v7 + 2) + ~v9;
    unsigned int v11 = (unsigned __int8 *)(*(void *)(result + 56) + v9);
    unsigned int v13 = *v11;
    int v12 = v11 + 1;
    LODWORD(v7) = v13;
    if (v13 < 0x20) {
      goto LABEL_12;
    }
  }
  else
  {
    int v12 = 0;
    int v10 = 0;
    if (v7 < 0x20) {
      goto LABEL_12;
    }
  }
  int v14 = *a2 + 1;
  do
  {
    while (1)
    {
      while (v10)
      {
        --v10;
        unsigned int v15 = *v12++;
        LODWORD(v7) = v15;
        if (v15 <= 0x1F) {
          goto LABEL_12;
        }
      }
      unsigned int v16 = *v14++;
      uint64_t v7 = v16;
      if (*(unsigned char *)(v5 + v16) != 2) {
        break;
      }
      uint64_t v17 = *(void *)(result + 72);
      uint64_t v18 = *(unsigned __int16 *)(v17 + 2 * v7);
      int v10 = *(unsigned __int16 *)(v17 + 2 * v7 + 2) + ~v18;
      unsigned int v19 = (unsigned __int8 *)(*(void *)(result + 56) + v18);
      unsigned int v20 = *v19;
      int v12 = v19 + 1;
      LODWORD(v7) = v20;
      if (v20 <= 0x1F) {
        goto LABEL_12;
      }
    }
    int v10 = 0;
  }
  while (v7 > 0x1F);
LABEL_12:
  uint64_t v21 = (unsigned char *)(a3 + v7);
  ++*a2;
  uint64_t v22 = *v6;
  if (*(unsigned char *)(v5 + v22) == 2)
  {
    uint64_t v23 = *(void *)(result + 72);
    uint64_t v24 = *(unsigned __int16 *)(v23 + 2 * v22);
    int v25 = *(unsigned __int16 *)(v23 + 2 * v22 + 2) + ~v24;
    unsigned int v26 = (unsigned __int8 *)(*(void *)(result + 56) + v24);
    unsigned int v27 = *v26;
    int v12 = v26 + 1;
    LOBYTE(v22) = v27;
    if (v27 >= 0x20) {
      goto LABEL_18;
    }
  }
  else
  {
    int v25 = 0;
    if (v22 >= 0x20)
    {
      do
      {
        while (1)
        {
LABEL_18:
          while (1)
          {
            *v21++ = v22;
            if (!v25) {
              break;
            }
            --v25;
            unsigned int v28 = *v12++;
            LOBYTE(v22) = v28;
            if (v28 <= 0x1F) {
              goto LABEL_23;
            }
          }
          uint64_t v29 = (*a2)++;
          uint64_t v22 = *v29;
          if (*(unsigned char *)(v5 + v22) != 2) {
            break;
          }
          uint64_t v30 = *(void *)(result + 72);
          uint64_t v31 = *(unsigned __int16 *)(v30 + 2 * v22);
          int v25 = *(unsigned __int16 *)(v30 + 2 * v22 + 2) + ~v31;
          uint64_t v32 = (unsigned __int8 *)(*(void *)(result + 56) + v31);
          unsigned int v33 = *v32;
          int v12 = v32 + 1;
          LOBYTE(v22) = v33;
          if (v33 <= 0x1F) {
            goto LABEL_23;
          }
        }
        int v25 = 0;
      }
      while (v22 > 0x1F);
    }
  }
LABEL_23:
  unsigned char *v21 = 0;
  if (*(_DWORD *)(result + 832))
  {
    if (v25)
    {
      --v25;
      int v34 = *v12++;
      *a5 = v34;
      if (v34 == 16) {
        goto LABEL_33;
      }
    }
    else
    {
      uint64_t v35 = (*a2)++;
      uint64_t v36 = *v35;
      if (*(unsigned char *)(v5 + v36) == 2)
      {
        uint64_t v37 = (unsigned __int16 *)(*(void *)(result + 72) + 2 * v36);
        uint64_t v38 = *v37;
        int v25 = v37[1] + ~v38;
        unsigned int v39 = (unsigned __int8 *)(*(void *)(result + 56) + v38);
        int v40 = *v39;
        int v12 = v39 + 1;
        *a5 = v40;
        if (v40 == 16) {
          goto LABEL_33;
        }
      }
      else
      {
        int v25 = 0;
        *a5 = v36;
        if (v36 == 16)
        {
          do
          {
            while (1)
            {
LABEL_33:
              while (v25)
              {
                --v25;
                unsigned int v41 = *v12++;
                *a4++ = v41;
                if (v41 <= 0x1F) {
                  goto LABEL_38;
                }
              }
              unsigned int v42 = (*a2)++;
              uint64_t v43 = *v42;
              if (*(unsigned char *)(v5 + v43) != 2) {
                break;
              }
              uint64_t v44 = *(void *)(result + 72);
              uint64_t v45 = *(unsigned __int16 *)(v44 + 2 * v43);
              int v25 = *(unsigned __int16 *)(v44 + 2 * v43 + 2) + ~v45;
              uint64_t v46 = (unsigned __int8 *)(*(void *)(result + 56) + v45);
              unsigned int v47 = *v46;
              int v12 = v46 + 1;
              *a4++ = v47;
              if (v47 <= 0x1F) {
                goto LABEL_38;
              }
            }
            int v25 = 0;
            *a4++ = v43;
          }
          while (v43 > 0x1F);
        }
      }
    }
  }
LABEL_38:
  if (v25)
  {
    *((unsigned char *)a2 + 20) = *v12;
    a2[1] = v12 + 1;
    *((_DWORD *)a2 + 4) = v25 - 1;
  }
  else
  {
    uint64_t v48 = (*a2)++;
    uint64_t v49 = *v48;
    if (*(unsigned char *)(v5 + v49) == 2)
    {
      unsigned int v50 = (unsigned __int16 *)(*(void *)(result + 72) + 2 * v49);
      uint64_t v51 = *v50;
      LODWORD(v50) = v50[1] + ~v51;
      uint64_t v52 = (unsigned char *)(*(void *)(result + 56) + v51);
      *((unsigned char *)a2 + 20) = *v52;
      a2[1] = v52 + 1;
      *((_DWORD *)a2 + 4) = v50;
    }
    else
    {
      *((unsigned char *)a2 + 20) = v49;
      a2[1] = v12;
      *((_DWORD *)a2 + 4) = 0;
    }
  }
  return result;
}

uint64_t sub_10008D8D0(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  if (*(unsigned char *)(a2 + 20))
  {
    int v4 = *(_DWORD *)(a2 + 16);
    uint64_t v5 = *(unsigned __int8 **)(a2 + 8);
    uint64_t v6 = *a3 == 0;
    while (1)
    {
      if (v4)
      {
        --v4;
        int v8 = *v5++;
        LODWORD(v7) = v8;
        if (!v6) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v9 = (unsigned __int8 *)(*(void *)a2)++;
        uint64_t v7 = *v9;
        if (*(unsigned char *)(a1 + 120 + v7) == 2)
        {
          uint64_t v10 = *(void *)(a1 + 72);
          uint64_t v11 = *(unsigned __int16 *)(v10 + 2 * v7);
          int v4 = *(unsigned __int16 *)(v10 + 2 * v7 + 2) + ~v11;
          int v12 = (unsigned __int8 *)(*(void *)(a1 + 56) + v11);
          int v13 = *v12;
          uint64_t v5 = v12 + 1;
          LODWORD(v7) = v13;
          if (!v6) {
            goto LABEL_14;
          }
        }
        else
        {
          int v4 = 0;
          if (!v6)
          {
LABEL_14:
            int v14 = *a3++;
            uint64_t v6 = (v7 - v14);
          }
        }
      }
      if (!v7)
      {
        *(_DWORD *)(a2 + 16) = 0;
        return v6;
      }
    }
  }
  if (*a3) {
    return 0xFFFFFFFFLL;
  }
  else {
    return 0;
  }
}

uint64_t sub_10008D984(uint64_t result, uint64_t a2, unsigned char *a3)
{
  if (*(unsigned char *)(a2 + 20))
  {
    int v3 = *(_DWORD *)(a2 + 16);
    int v4 = *(unsigned __int8 **)(a2 + 8);
    do
    {
      while (1)
      {
        while (v3)
        {
          --v3;
          int v5 = *v4++;
          *a3++ = v5;
          if (!v5) {
            goto LABEL_10;
          }
        }
        uint64_t v6 = (unsigned __int8 *)(*(void *)a2)++;
        uint64_t v7 = *v6;
        if (*(unsigned char *)(result + 120 + v7) != 2) {
          break;
        }
        uint64_t v8 = *(void *)(result + 72);
        uint64_t v9 = *(unsigned __int16 *)(v8 + 2 * v7);
        int v3 = *(unsigned __int16 *)(v8 + 2 * v7 + 2) + ~v9;
        uint64_t v10 = (unsigned __int8 *)(*(void *)(result + 56) + v9);
        int v11 = *v10;
        int v4 = v10 + 1;
        *a3++ = v11;
        if (!v11) {
          goto LABEL_10;
        }
      }
      int v3 = 0;
      *a3++ = v7;
    }
    while (v7);
LABEL_10:
    *(_DWORD *)(a2 + 16) = 0;
  }
  else
  {
    *a3 = 0;
  }
  return result;
}

uint64_t sub_10008DA18(uint64_t result, uint64_t a2, unsigned int a3)
{
  uint64_t v4 = result;
  if ((a3 & 0x80000000) != 0)
  {
    double result = sub_10008D374(result, (unsigned __int8 **)a2);
LABEL_6:
    char v6 = *(unsigned char *)(a2 + 20);
    if (v6)
    {
      int v7 = *(_DWORD *)(a2 + 16);
      uint64_t v8 = *(unsigned __int8 **)(a2 + 8);
      do
      {
        while (1)
        {
          while (v7)
          {
            --v7;
            if (!*v8++) {
              goto LABEL_14;
            }
          }
          uint64_t v10 = (unsigned __int8 *)(*(void *)a2)++;
          uint64_t v11 = *v10;
          if (*(unsigned char *)(v4 + 120 + v11) != 2) {
            break;
          }
          uint64_t v12 = *(void *)(v4 + 72);
          uint64_t v13 = *(unsigned __int16 *)(v12 + 2 * v11);
          int v7 = *(unsigned __int16 *)(v12 + 2 * v11 + 2) + ~v13;
          int v14 = (unsigned __int8 *)(*(void *)(v4 + 56) + v13);
          int v15 = *v14;
          uint64_t v8 = v14 + 1;
          if (!v15) {
            goto LABEL_14;
          }
        }
        int v7 = 0;
      }
      while (v11);
LABEL_14:
      *(_DWORD *)(a2 + 16) = 0;
    }
    goto LABEL_15;
  }
  int v5 = a3;
  if (!a3) {
    goto LABEL_6;
  }
  if (a3 != 1)
  {
    if (a3 >= 7) {
      return result;
    }
    goto LABEL_39;
  }
  char v6 = *(unsigned char *)(a2 + 20);
LABEL_15:
  if ((v6 & 2) != 0)
  {
    int v5 = 1;
    goto LABEL_39;
  }
  uint64_t v16 = v4 + 376;
  if (*(__int16 *)(v4 + 752) != -1)
  {
    uint64_t v17 = (unsigned __int8 *)(*(void *)a2)++;
    uint64_t v18 = *v17;
    if (*(unsigned char *)(v16 + v18) == 2)
    {
      unsigned int v19 = (unsigned __int16 *)(*(void *)(v4 + 104) + 2 * v18);
      uint64_t v20 = *v19;
      *(_DWORD *)(a2 + 16) = v19[1] + ~v20;
      *(void *)(a2 + 8) = *(void *)(v4 + 88) + v20 + 1;
    }
  }
  if (*(int *)(v4 + 40) < 1) {
    goto LABEL_38;
  }
  int v21 = *(_DWORD *)(a2 + 16);
  if (!v21)
  {
    uint64_t v24 = (unsigned __int8 *)(*(void *)a2)++;
    uint64_t v25 = *v24;
    if (*(unsigned char *)(v16 + v25) != 2) {
      goto LABEL_30;
    }
    unsigned int v26 = (unsigned __int16 *)(*(void *)(v4 + 104) + 2 * v25);
    uint64_t v27 = *v26;
    int v22 = v26[1] + ~v27;
    *(_DWORD *)(a2 + 16) = v22;
    *(void *)(a2 + 8) = *(void *)(v4 + 88) + v27 + 1;
    if (!v22) {
      goto LABEL_30;
    }
LABEL_28:
    int v28 = v22 - 1;
    uint64_t v29 = *(void *)(a2 + 8);
    *(_DWORD *)(a2 + 16) = v28;
    *(void *)(a2 + 8) = v29 + 1;
    if (*(_DWORD *)(v4 + 40) == 1) {
      goto LABEL_38;
    }
    goto LABEL_32;
  }
  int v22 = v21 - 1;
  uint64_t v23 = *(void *)(a2 + 8);
  *(_DWORD *)(a2 + 16) = v22;
  *(void *)(a2 + 8) = v23 + 1;
  if (v22) {
    goto LABEL_28;
  }
LABEL_30:
  uint64_t v30 = (unsigned __int8 *)(*(void *)a2)++;
  uint64_t v31 = *v30;
  if (*(unsigned char *)(v16 + v31) != 2)
  {
    if (*(_DWORD *)(v4 + 40) == 1) {
      goto LABEL_38;
    }
    goto LABEL_35;
  }
  uint64_t v32 = (unsigned __int16 *)(*(void *)(v4 + 104) + 2 * v31);
  uint64_t v33 = *v32;
  int v28 = v32[1] + ~v33;
  *(_DWORD *)(a2 + 16) = v28;
  *(void *)(a2 + 8) = *(void *)(v4 + 88) + v33 + 1;
  if (*(_DWORD *)(v4 + 40) == 1) {
    goto LABEL_38;
  }
LABEL_32:
  if (v28)
  {
    int v34 = v28 - 1;
    uint64_t v36 = (void *)(a2 + 8);
    uint64_t v35 = *(void *)(a2 + 8);
    *(_DWORD *)(a2 + 16) = v34;
LABEL_37:
    void *v36 = v35 + 1;
    goto LABEL_38;
  }
LABEL_35:
  uint64_t v37 = (unsigned __int8 *)(*(void *)a2)++;
  uint64_t v38 = *v37;
  if (*(unsigned char *)(v16 + v38) == 2)
  {
    unsigned int v39 = (unsigned __int16 *)(*(void *)(v4 + 104) + 2 * v38);
    uint64_t v40 = *v39;
    *(_DWORD *)(a2 + 16) = v39[1] + ~v40;
    uint64_t v35 = *(void *)(v4 + 88) + v40;
    uint64_t v36 = (void *)(a2 + 8);
    goto LABEL_37;
  }
LABEL_38:
  int v5 = 2;
LABEL_39:
  unsigned int v41 = *(unsigned __int8 *)(a2 + 20);
  do
  {
    if ((v41 >> v5))
    {
      unsigned int v42 = *(unsigned __int8 **)a2;
      double result = sub_10008CFC4(v4, v5, *(unsigned __int8 **)a2);
      *(void *)a2 = &v42[(int)result];
    }
    ++v5;
  }
  while (v5 != 7);
  return result;
}

uint64_t sub_10008DD10(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t result = sub_10008D374(a1, (unsigned __int8 **)a2);
  if (!a3) {
    return result;
  }
  unsigned int v7 = *(unsigned __int8 *)(a2 + 20);
  if (v7)
  {
    int v8 = *(_DWORD *)(a2 + 16);
    uint64_t v9 = *(unsigned __int8 **)(a2 + 8);
    do
    {
      while (1)
      {
        while (v8)
        {
          --v8;
          if (!*v9++) {
            goto LABEL_10;
          }
        }
        uint64_t v11 = (unsigned __int8 *)(*(void *)a2)++;
        uint64_t v12 = *v11;
        if (*(unsigned char *)(a1 + 120 + v12) != 2) {
          break;
        }
        uint64_t v13 = *(void *)(a1 + 72);
        uint64_t v14 = *(unsigned __int16 *)(v13 + 2 * v12);
        int v8 = *(unsigned __int16 *)(v13 + 2 * v12 + 2) + ~v14;
        int v15 = (unsigned __int8 *)(*(void *)(a1 + 56) + v14);
        int v16 = *v15;
        uint64_t v9 = v15 + 1;
        if (!v16) {
          goto LABEL_10;
        }
      }
      int v8 = 0;
    }
    while (v12);
LABEL_10:
    *(_DWORD *)(a2 + 16) = 0;
  }
  int v17 = 1;
  if (a3 >= 2 && (v7 & 2) == 0)
  {
    uint64_t v18 = a1 + 376;
    if (*(__int16 *)(a1 + 752) != -1)
    {
      unsigned int v19 = (unsigned __int8 *)(*(void *)a2)++;
      uint64_t v20 = *v19;
      if (*(unsigned char *)(v18 + v20) == 2)
      {
        int v21 = (unsigned __int16 *)(*(void *)(a1 + 104) + 2 * v20);
        uint64_t v22 = *v21;
        *(_DWORD *)(a2 + 16) = v21[1] + ~v22;
        *(void *)(a2 + 8) = *(void *)(a1 + 88) + v22 + 1;
      }
    }
    if (*(int *)(a1 + 40) < 1) {
      goto LABEL_32;
    }
    int v23 = *(_DWORD *)(a2 + 16);
    if (v23)
    {
      int v24 = v23 - 1;
      uint64_t v25 = *(void *)(a2 + 8);
      *(_DWORD *)(a2 + 16) = v24;
      *(void *)(a2 + 8) = v25 + 1;
      if (!v24)
      {
LABEL_24:
        uint64_t v32 = (unsigned __int8 *)(*(void *)a2)++;
        uint64_t v33 = *v32;
        if (*(unsigned char *)(v18 + v33) != 2)
        {
          if (*(_DWORD *)(a1 + 40) == 1) {
            goto LABEL_32;
          }
          goto LABEL_29;
        }
        int v34 = (unsigned __int16 *)(*(void *)(a1 + 104) + 2 * v33);
        uint64_t v35 = *v34;
        int v30 = v34[1] + ~v35;
        *(_DWORD *)(a2 + 16) = v30;
        *(void *)(a2 + 8) = *(void *)(a1 + 88) + v35 + 1;
        if (*(_DWORD *)(a1 + 40) == 1) {
          goto LABEL_32;
        }
LABEL_26:
        if (v30)
        {
          int v36 = v30 - 1;
          uint64_t v38 = (void *)(a2 + 8);
          uint64_t v37 = *(void *)(a2 + 8);
          *(_DWORD *)(a2 + 16) = v36;
LABEL_31:
          *uint64_t v38 = v37 + 1;
          goto LABEL_32;
        }
LABEL_29:
        unsigned int v39 = (unsigned __int8 *)(*(void *)a2)++;
        uint64_t v40 = *v39;
        if (*(unsigned char *)(v18 + v40) == 2)
        {
          unsigned int v41 = (unsigned __int16 *)(*(void *)(a1 + 104) + 2 * v40);
          uint64_t v42 = *v41;
          *(_DWORD *)(a2 + 16) = v41[1] + ~v42;
          uint64_t v37 = *(void *)(a1 + 88) + v42;
          uint64_t v38 = (void *)(a2 + 8);
          goto LABEL_31;
        }
LABEL_32:
        int v17 = 2;
        goto LABEL_33;
      }
    }
    else
    {
      unsigned int v26 = (unsigned __int8 *)(*(void *)a2)++;
      uint64_t v27 = *v26;
      if (*(unsigned char *)(v18 + v27) != 2) {
        goto LABEL_24;
      }
      int v28 = (unsigned __int16 *)(*(void *)(a1 + 104) + 2 * v27);
      uint64_t v29 = *v28;
      int v24 = v28[1] + ~v29;
      *(_DWORD *)(a2 + 16) = v24;
      *(void *)(a2 + 8) = *(void *)(a1 + 88) + v29 + 1;
      if (!v24) {
        goto LABEL_24;
      }
    }
    int v30 = v24 - 1;
    uint64_t v31 = *(void *)(a2 + 8);
    *(_DWORD *)(a2 + 16) = v30;
    *(void *)(a2 + 8) = v31 + 1;
    if (*(_DWORD *)(a1 + 40) == 1) {
      goto LABEL_32;
    }
    goto LABEL_26;
  }
LABEL_33:
  if (v17 < a3)
  {
    do
    {
      if ((v7 >> v17))
      {
        uint64_t v43 = *(unsigned __int8 **)a2;
        uint64_t result = sub_10008CFC4(a1, v17, *(unsigned __int8 **)a2);
        *(void *)a2 = &v43[(int)result];
      }
      ++v17;
    }
    while (a3 != v17);
  }
  return result;
}

uint64_t sub_10008DFE8(uint64_t result, unsigned int a2, void *a3)
{
  char v3 = *(_DWORD *)(result + 696);
  *a3 = *(void *)result + *(int *)(*(void *)(result + 16) + 4 * (int)(a2 >> v3));
  int v4 = a2 & ~(-1 << v3);
  if (v4)
  {
    uint64_t v6 = result;
    do
    {
      uint64_t result = sub_10008DA18(v6, (uint64_t)a3, 0xFFFFFFFF);
      --v4;
    }
    while (v4);
  }
  return result;
}

uint64_t sub_10008E058(uint64_t a1, int *a2, void *a3, unsigned __int8 *a4, unsigned __int8 *a5, int a6)
{
  uint64_t v12 = *(uint64_t **)(a1 + 480);
  int v13 = sub_1000CAD00((unint64_t)a4);
  unsigned int v14 = *a5;
  if (*a5)
  {
    int v15 = a5 + 1;
    while (v14 >= 0x20)
    {
      unsigned int v16 = *v15++;
      unsigned int v14 = v16;
      if (!v16) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    int v17 = *((_DWORD *)v12 + 158);
    int v18 = v17 - 2;
    if (v17 <= 2)
    {
      int v20 = 0;
      uint64_t v19 = *v12;
    }
    else
    {
      uint64_t v19 = *v12;
      if (v13 < 1)
      {
        int v20 = 0;
      }
      else
      {
        int v20 = 0;
        do
        {
          int v22 = 0;
          int v23 = 0;
          if (v18 + v20 + 1 >= 0) {
            int v24 = v18 + v20 + 1;
          }
          else {
            int v24 = v18 + v20 + 2;
          }
          int v25 = v24 >> 1;
          unsigned int v26 = (unsigned __int8 *)(v19 + *(int *)(v12[2] + 4 * v25));
          int v27 = v13;
          int v28 = a5;
          do
          {
            if (v22)
            {
              --v22;
              int v30 = *v23++;
              LODWORD(v29) = v30;
              unsigned int v31 = *v28;
              if (v31 < 0x20) {
                goto LABEL_8;
              }
            }
            else
            {
              unsigned int v32 = *v26++;
              uint64_t v29 = v32;
              if (*((unsigned char *)v12 + v32 + 120) == 2)
              {
                uint64_t v33 = (unsigned __int16 *)(v12[9] + 2 * v29);
                uint64_t v29 = *v33;
                int v22 = v33[1] + ~v29;
                int v34 = (unsigned __int8 *)(v12[7] + v29);
                int v35 = *v34;
                int v23 = v34 + 1;
                LODWORD(v29) = v35;
                unsigned int v31 = *v28;
                if (v31 < 0x20) {
                  goto LABEL_8;
                }
              }
              else
              {
                int v22 = 0;
                unsigned int v31 = *v28;
                if (v31 < 0x20)
                {
LABEL_8:
                  int v21 = 1;
                  goto LABEL_9;
                }
              }
            }
            int v21 = v29 - v31;
            if (v21) {
              goto LABEL_9;
            }
            ++v28;
            --v27;
          }
          while (v27);
          int v21 = 0;
LABEL_9:
          if (v21 >= 0) {
            int v18 = v25 - 1;
          }
          else {
            int v20 = v25;
          }
        }
        while (v20 < v18);
      }
    }
    *a3 = v19 + *(int *)(v12[2] + 4 * v20);
    int v36 = sub_10008E234(*(void *)(a1 + 480), a2, (uint64_t)a3, a4, (uint64_t)a5, a6);
    if ((v36 & 0x80000000) == 0) {
      return ((v20 << *((_DWORD *)v12 + 174)) + v36);
    }
  }
  return 0xFFFFFFLL;
}

uint64_t sub_10008E234(uint64_t a1, int *a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5, int a6)
{
  unint64_t v6 = *(void *)a1 + *(int *)(*(void *)(a1 + 16) + 4 * *(int *)(a1 + 632) - 4);
  unsigned int v7 = *(unsigned __int8 **)a3;
  if (*(void *)a3 >= v6) {
    return 0xFFFFFFFFLL;
  }
  unsigned int v14 = 0;
  uint64_t v15 = a1 + 120;
  uint64_t v16 = a5 + 1;
  while (1)
  {
    int v18 = v7 + 1;
    uint64_t v19 = *v7;
    if (*(unsigned char *)(v15 + v19) == 2)
    {
      int v20 = (unsigned __int16 *)(*(void *)(a1 + 72) + 2 * v19);
      uint64_t v19 = *v20;
      int v21 = v20[1] + ~v19;
      int v22 = (unsigned __int8 *)(*(void *)(a1 + 56) + v19);
      unsigned int v24 = *v22;
      int v23 = v22 + 1;
      LODWORD(v19) = v24;
      int v25 = v7 + 1;
      if (v24 >= 0x20) {
        goto LABEL_13;
      }
    }
    else
    {
      int v21 = 0;
      int v23 = 0;
      int v25 = v7 + 1;
      if (v19 >= 0x20)
      {
        do
        {
          while (1)
          {
LABEL_13:
            while (v21)
            {
              --v21;
              unsigned int v26 = *v23++;
              LODWORD(v19) = v26;
              if (v26 <= 0x1F) {
                goto LABEL_18;
              }
            }
            unsigned int v27 = *v25++;
            uint64_t v19 = v27;
            if (*(unsigned char *)(v15 + v27) != 2) {
              break;
            }
            int v28 = (unsigned __int16 *)(*(void *)(a1 + 72) + 2 * v19);
            uint64_t v19 = *v28;
            int v21 = v28[1] + ~v19;
            uint64_t v29 = (unsigned __int8 *)(*(void *)(a1 + 56) + v19);
            unsigned int v30 = *v29;
            int v23 = v29 + 1;
            LODWORD(v19) = v30;
            if (v30 <= 0x1F) {
              goto LABEL_18;
            }
          }
          int v21 = 0;
        }
        while (v19 > 0x1F);
      }
    }
LABEL_18:
    if (a2[1] < (int)v19)
    {
      int v17 = *a2;
      *(void *)a3 = v25;
      goto LABEL_54;
    }
    *(void *)a3 = v18;
    uint64_t v31 = *v7;
    if (*(unsigned char *)(v15 + v31) == 2)
    {
      unsigned int v32 = (unsigned __int16 *)(*(void *)(a1 + 72) + 2 * v31);
      uint64_t v33 = *v32;
      int v21 = v32[1] + ~v33;
      int v34 = (unsigned __int8 *)(*(void *)(a1 + 56) + v33);
      int v35 = *v34;
      int v23 = v34 + 1;
      LODWORD(v31) = v35;
      uint64_t v36 = v19;
      int v37 = *(unsigned __int8 *)(a5 + v19);
      if (*(unsigned char *)(a5 + v19)) {
        goto LABEL_29;
      }
LABEL_36:
      if (a2[3]) {
        BOOL v50 = v31 > 0x1F;
      }
      else {
        BOOL v50 = 0;
      }
      int v17 = v50;
      *a2 = v17;
      a2[1] = v19;
      if (v31 >= 0x20)
      {
        do
        {
          while (1)
          {
LABEL_49:
            while (v21)
            {
              --v21;
              unsigned int v51 = *v23++;
              if (v51 <= 0x1F) {
                goto LABEL_54;
              }
            }
            uint64_t v52 = (unsigned __int8 *)(*(void *)a3)++;
            uint64_t v53 = *v52;
            if (*(unsigned char *)(v15 + v53) != 2) {
              break;
            }
            int v54 = (unsigned __int16 *)(*(void *)(a1 + 72) + 2 * v53);
            uint64_t v55 = *v54;
            int v21 = v54[1] + ~v55;
            int v56 = (unsigned __int8 *)(*(void *)(a1 + 56) + v55);
            unsigned int v57 = *v56;
            int v23 = v56 + 1;
            if (v57 <= 0x1F) {
              goto LABEL_54;
            }
          }
          int v21 = 0;
        }
        while (v53 > 0x1F);
      }
      goto LABEL_54;
    }
    int v21 = 0;
    uint64_t v36 = v19;
    int v37 = *(unsigned __int8 *)(a5 + v19);
    if (!*(unsigned char *)(a5 + v19)) {
      goto LABEL_36;
    }
LABEL_29:
    while (1)
    {
      int v17 = v31 - v37;
      if (v31 != v37) {
        break;
      }
      if (v21)
      {
        --v21;
        int v44 = *v23++;
        LODWORD(v31) = v44;
        int v37 = *(unsigned __int8 *)(v16 + v36++);
        if (!v37) {
          goto LABEL_35;
        }
      }
      else
      {
        uint64_t v45 = v18 + 1;
        *(void *)a3 = v18 + 1;
        uint64_t v31 = *v18;
        if (*(unsigned char *)(v15 + v31) == 2)
        {
          uint64_t v46 = (unsigned __int16 *)(*(void *)(a1 + 72) + 2 * v31);
          uint64_t v47 = *v46;
          int v21 = v46[1] + ~v47;
          uint64_t v48 = (unsigned __int8 *)(*(void *)(a1 + 56) + v47);
          int v49 = *v48;
          int v23 = v48 + 1;
          LODWORD(v31) = v49;
          int v37 = *(unsigned __int8 *)(v16 + v36++);
          int v18 = v45;
          if (!v37) {
            goto LABEL_35;
          }
        }
        else
        {
          int v21 = 0;
          int v37 = *(unsigned __int8 *)(v16 + v36++);
          ++v18;
          if (!v37)
          {
LABEL_35:
            LODWORD(v19) = v36;
            goto LABEL_36;
          }
        }
      }
    }
    *a2 = v17;
    a2[1] = v36;
    if (v31 >= 0x20) {
      goto LABEL_49;
    }
LABEL_54:
    if (!*(_DWORD *)(a1 + 832)) {
      goto LABEL_4;
    }
    if (v21)
    {
      --v21;
      int v59 = *v23++;
      LODWORD(v58) = v59;
      if (v17) {
        goto LABEL_80;
      }
    }
    else
    {
      uint64_t v60 = (unsigned __int8 *)(*(void *)a3)++;
      uint64_t v58 = *v60;
      if (*(unsigned char *)(v15 + v58) == 2)
      {
        unsigned int v61 = (unsigned __int16 *)(*(void *)(a1 + 72) + 2 * v58);
        uint64_t v58 = *v61;
        int v21 = v61[1] + ~v58;
        uint64_t v62 = (unsigned __int8 *)(*(void *)(a1 + 56) + v58);
        int v63 = *v62;
        int v23 = v62 + 1;
        LODWORD(v58) = v63;
        if (v17) {
          goto LABEL_80;
        }
      }
      else
      {
        int v21 = 0;
        if (v17) {
          goto LABEL_80;
        }
      }
    }
    if (!a2[2])
    {
LABEL_80:
      if (v58 == 16)
      {
        do
        {
          while (1)
          {
            while (v21)
            {
              --v21;
              unsigned int v79 = *v23++;
              if (v79 <= 0x1F) {
                goto LABEL_4;
              }
            }
            uint64_t v80 = (unsigned __int8 *)(*(void *)a3)++;
            uint64_t v81 = *v80;
            if (*(unsigned char *)(v15 + v81) != 2) {
              break;
            }
            uint64_t v82 = (unsigned __int16 *)(*(void *)(a1 + 72) + 2 * v81);
            uint64_t v83 = *v82;
            int v21 = v82[1] + ~v83;
            uint64_t v84 = (unsigned __int8 *)(*(void *)(a1 + 56) + v83);
            unsigned int v85 = *v84;
            int v23 = v84 + 1;
            if (v85 <= 0x1F) {
              goto LABEL_4;
            }
          }
          int v21 = 0;
        }
        while (v81 > 0x1F);
      }
      goto LABEL_4;
    }
    if (v58 == 16)
    {
      int v64 = a4;
      do
      {
        if (v21)
        {
          --v21;
          unsigned int v66 = *v23++;
          LODWORD(v65) = v66;
          if (v66 < 0x20) {
            goto LABEL_72;
          }
        }
        else
        {
          uint64_t v68 = (unsigned __int8 *)(*(void *)a3)++;
          uint64_t v65 = *v68;
          if (*(unsigned char *)(v15 + v65) == 2)
          {
            unsigned int v69 = (unsigned __int16 *)(*(void *)(a1 + 72) + 2 * v65);
            uint64_t v65 = *v69;
            int v21 = v69[1] + ~v65;
            uint64_t v70 = (unsigned __int8 *)(*(void *)(a1 + 56) + v65);
            unsigned int v71 = *v70;
            int v23 = v70 + 1;
            LODWORD(v65) = v71;
            if (v71 < 0x20) {
              goto LABEL_72;
            }
          }
          else
          {
            int v21 = 0;
            if (v65 < 0x20)
            {
LABEL_72:
              int v17 = 0;
              goto LABEL_4;
            }
          }
        }
        int v67 = *v64++;
      }
      while (v65 == v67);
      do
      {
        while (1)
        {
          while (v21)
          {
            --v21;
            unsigned int v72 = *v23++;
            if (v72 <= 0x1F) {
              goto LABEL_3;
            }
          }
          uint64_t v73 = (unsigned __int8 *)(*(void *)a3)++;
          uint64_t v74 = *v73;
          if (*(unsigned char *)(v15 + v74) != 2) {
            break;
          }
          uint64_t v75 = (unsigned __int16 *)(*(void *)(a1 + 72) + 2 * v74);
          uint64_t v76 = *v75;
          int v21 = v75[1] + ~v76;
          uint64_t v77 = (unsigned __int8 *)(*(void *)(a1 + 56) + v76);
          unsigned int v78 = *v77;
          int v23 = v77 + 1;
          if (v78 <= 0x1F) {
            goto LABEL_3;
          }
        }
        int v21 = 0;
      }
      while (v74 > 0x1F);
LABEL_3:
      int v17 = -1;
      goto LABEL_4;
    }
    if (a6 == 16) {
      goto LABEL_3;
    }
    int v17 = (v58 & a6) != 0 ? 0 : -1;
LABEL_4:
    if (v21)
    {
      *(unsigned char *)(a3 + 20) = *v23;
      *(_DWORD *)(a3 + 16) = v21 - 1;
      *(void *)(a3 + 8) = v23 + 1;
      if ((v17 & 0x80000000) == 0) {
        goto LABEL_94;
      }
      goto LABEL_6;
    }
    uint64_t v38 = (unsigned __int8 *)(*(void *)a3)++;
    uint64_t v39 = *v38;
    if (*(unsigned char *)(v15 + v39) != 2) {
      break;
    }
    uint64_t v40 = (unsigned __int16 *)(*(void *)(a1 + 72) + 2 * v39);
    uint64_t v41 = *v40;
    int v42 = v40[1] + ~v41;
    uint64_t v43 = (unsigned char *)(*(void *)(a1 + 56) + v41);
    *(unsigned char *)(a3 + 20) = *v43;
    *(_DWORD *)(a3 + 16) = v42;
    *(void *)(a3 + 8) = v43 + 1;
    if ((v17 & 0x80000000) == 0) {
      goto LABEL_94;
    }
LABEL_6:
    sub_10008DA18(a1, a3, 0);
    ++v14;
    unsigned int v7 = *(unsigned __int8 **)a3;
    if (*(void *)a3 >= v6) {
      return 0xFFFFFFFFLL;
    }
  }
  *(unsigned char *)(a3 + 20) = v39;
  *(_DWORD *)(a3 + 16) = 0;
  *(void *)(a3 + 8) = v23;
  if (v17 < 0) {
    goto LABEL_6;
  }
LABEL_94:
  if (v17) {
    return 0xFFFFFFFFLL;
  }
  else {
    return v14;
  }
}

uint64_t sub_10008E7DC(uint64_t a1, int *a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5, int a6)
{
  return sub_10008E234(*(void *)(a1 + 480), a2, a3, a4, a5, a6) + 1;
}

uint64_t sub_10008E7FC(uint64_t a1, unsigned int a2, int a3)
{
  v15[1] = 0;
  uint64_t v16 = 0;
  char v5 = *(_DWORD *)(a1 + 696);
  v15[0] = *(void *)a1 + *(int *)(*(void *)(a1 + 16) + 4 * (int)(a2 >> v5));
  for (int i = a2 & ~(-1 << v5); i; --i)
    sub_10008DA18(a1, (uint64_t)v15, 0xFFFFFFFF);
  sub_10008DD10(a1, (uint64_t)v15, a3);
  if ((BYTE4(v16) >> a3))
  {
    int v7 = 0;
    switch(a3)
    {
      case 2:
        int v7 = *(_DWORD *)(a1 + 660);
        goto LABEL_6;
      case 3:
        int v7 = *(_DWORD *)(a1 + 652);
        int v14 = *(_DWORD *)(a1 + 36);
        int v8 = (unsigned __int8 *)v15[0];
        if (v14 == 4) {
          goto LABEL_17;
        }
        goto LABEL_13;
      case 4:
LABEL_6:
        int v8 = (unsigned __int8 *)v15[0];
        goto LABEL_15;
      case 5:
        int v7 = *(_DWORD *)(a1 + 672);
        int v14 = *(_DWORD *)(a1 + 44);
        int v8 = (unsigned __int8 *)v15[0];
        if (v14 != 4) {
          goto LABEL_13;
        }
        goto LABEL_17;
      case 6:
        int v7 = *(_DWORD *)(a1 + 680);
        int v14 = *(_DWORD *)(a1 + 48);
        int v8 = (unsigned __int8 *)v15[0];
        if (v14 == 4)
        {
LABEL_17:
          int v11 = *v8;
          int v10 = v8[1];
          int v12 = v8[3] << 24;
          int v13 = v8[2] << 16;
        }
        else
        {
LABEL_13:
          if (v14 == 2)
          {
            int v12 = 0;
            int v13 = 0;
            int v11 = *v8;
            int v10 = v8[1];
          }
          else if (v14 == 1)
          {
LABEL_15:
            int v12 = 0;
            int v13 = 0;
            int v10 = 0;
            int v11 = *v8;
          }
          else
          {
            int v12 = 0;
            int v13 = 0;
            int v10 = 0;
            int v11 = 0;
          }
        }
        break;
      default:
        int v10 = 0;
        int v11 = 0;
        int v12 = 0;
        int v13 = 0;
        break;
    }
    return (v12 | v13) + v7 + (v10 << 8) + v11;
  }
  else
  {
    uint64_t result = 0xFFFFFFFFLL;
    switch(a3)
    {
      case 2:
        uint64_t result = (*(_DWORD *)(a1 + 660) + *(_DWORD *)(a1 + 664));
        break;
      case 3:
        uint64_t result = (*(_DWORD *)(a1 + 652) + *(_DWORD *)(a1 + 656));
        break;
      case 4:
        return result;
      case 5:
        uint64_t result = (*(_DWORD *)(a1 + 672) + *(_DWORD *)(a1 + 676));
        break;
      case 6:
        uint64_t result = (*(_DWORD *)(a1 + 680) + *(_DWORD *)(a1 + 684));
        break;
      default:
        uint64_t result = 0;
        break;
    }
  }
  return result;
}

uint64_t sub_10008EAA0(int a1, int a2, int a3, int a4, uint64_t a5, int a6, int a7, unsigned __int8 *a8, uint64_t a9, __int16 a10, int a11)
{
  uint64_t v19 = sub_1000C33A0(408);
  uint64_t v20 = v19;
  if (!v19) {
    return v20;
  }
  int v21 = qword_100101CC0;
  if (qword_100101CC0) {
    int v21 = *(_DWORD *)(qword_100101CC0 + 3976);
  }
  *(_DWORD *)uint64_t v19 = v21;
  *(_DWORD *)(v19 + 52) = a1 - 1;
  *(_DWORD *)(v19 + 280) = a1;
  *(_DWORD *)(v19 + 284) = a3;
  *(_DWORD *)(v19 + 288) = a4;
  *(void *)(v19 + 296) = a5;
  uint64_t v22 = qword_100101CC0;
  if (qword_100101CC0)
  {
    uint64_t v23 = *(void *)(qword_100101CC0 + 3944);
    if (v23 >= 1)
    {
      *(_DWORD *)(v19 + 104) = 0;
      *(_DWORD *)(v19 + 108) = (unint64_t)(v23 + 255) >> 8;
    }
    uint64_t v24 = *(void *)(v22 + 3936);
    if (v24 >= 1)
    {
      *(_DWORD *)(v19 + 128) = 0;
      *(_DWORD *)(v19 + 132) = (unint64_t)(v24 + 255) >> 8;
    }
    int v25 = *(_DWORD *)(v22 + 3960);
    *(void *)(v19 + 8) = a9;
    *(_DWORD *)(v19 + 160) = 0;
    *(_DWORD *)(v19 + 164) = a2;
    *(_DWORD *)(v19 + 112) = 0;
    *(_DWORD *)(v19 + 136) = 0;
    if (v25 >= 1)
    {
      uint64_t v26 = *(void *)(v22 + 3960);
      uint64_t v28 = v26 + 255;
      BOOL v27 = v26 < -255;
      unint64_t v29 = v26 + 510;
      if (!v27) {
        unint64_t v29 = v28;
      }
      unint64_t v30 = v29 >> 8;
      *(_DWORD *)(v19 + 40) = 0;
      *(_DWORD *)(v19 + 44) = v30;
      *(_DWORD *)(v19 + 176) = 0;
      *(_DWORD *)(v19 + 180) = v30;
      *(_DWORD *)(v19 + 192) = 0;
      *(_DWORD *)(v19 + 196) = v30;
      *(_DWORD *)(v19 + 88) = 0;
      *(_DWORD *)(v19 + 92) = v30;
      *(_DWORD *)(v19 + 216) = 0;
      *(_DWORD *)(v19 + 220) = v30;
      *(_DWORD *)(v19 + 200) = 0;
      uint64_t v31 = *(void *)(v22 + 3960);
      uint64_t v32 = v31 + 255;
      BOOL v27 = v31 < -255;
      unint64_t v33 = v31 + 510;
      if (!v27) {
        unint64_t v33 = v32;
      }
      *(_DWORD *)(v19 + 64) = 0;
      *(_DWORD *)(v19 + 68) = v33 >> 8;
      *(_WORD *)(v19 + 204) = a10;
    }
  }
  else
  {
    *(void *)(v19 + 8) = a9;
    *(_DWORD *)(v19 + 160) = 0;
    *(_DWORD *)(v19 + 164) = a2;
    *(_DWORD *)(v19 + 112) = 0;
    *(_DWORD *)(v19 + 136) = 0;
  }
  *(_DWORD *)(v19 + 48) = 0;
  *(_DWORD *)(v19 + 72) = 0;
  *(_DWORD *)(v19 + 20) = a6;
  sub_10008ED58(v19, a7, a8);
  *(void *)(v20 + 232) = 0;
  uint64_t v34 = qword_100101CC0;
  if (!qword_100101CC0) {
    goto LABEL_22;
  }
  uint64_t v35 = *(void *)(qword_100101CC0 + 3928);
  if (v35 < 1) {
    goto LABEL_20;
  }
  uint64_t v36 = sub_1000C33A0(2 * v35);
  *(void *)(v20 + 232) = v36;
  if (!v36) {
    goto LABEL_37;
  }
  uint64_t v34 = qword_100101CC0;
  if (qword_100101CC0)
  {
LABEL_20:
    *(_DWORD *)(v20 + 224) = *(void *)(v34 + 3992);
    int v37 = (int *)(v20 + 224);
    *(_DWORD *)(v20 + 228) = *(void *)(v34 + 4000);
    uint64_t v38 = (int *)(v20 + 228);
    uint64_t v39 = sub_1000C33A0(2 * *(void *)(v34 + 3992) + 4);
    *(void *)(v20 + 240) = v39;
    if (!v39) {
      goto LABEL_37;
    }
  }
  else
  {
LABEL_22:
    *(_DWORD *)(v20 + 224) = 0;
    int v37 = (int *)(v20 + 224);
    *(_DWORD *)(v20 + 228) = 0;
    uint64_t v38 = (int *)(v20 + 228);
    uint64_t v40 = sub_1000C33A0(4);
    *(void *)(v20 + 240) = v40;
    if (!v40) {
      goto LABEL_37;
    }
  }
  *(_DWORD *)(v20 + 248) = 0;
  int v41 = qword_100101CC0;
  if (qword_100101CC0) {
    int v41 = *(_DWORD *)(qword_100101CC0 + 3928);
  }
  *(_DWORD *)(v20 + 252) = v41;
  *(_WORD *)(v20 + 256) = 0;
  uint64_t v42 = *(unsigned int *)(v20 + 228);
  if ((int)v42 < 1) {
    goto LABEL_30;
  }
  uint64_t v43 = sub_1000C33A0(v42);
  *(void *)(v20 + 264) = v43;
  if (!v43)
  {
LABEL_37:
    sub_10008EFD4(v20);
    return 0;
  }
  if (*v38 >= 1)
  {
    uint64_t v44 = 0;
    do
      *(unsigned char *)(*(void *)(v20 + 264) + v44++) = -1;
    while (v44 < *(int *)(v20 + 228));
  }
LABEL_30:
  uint64_t v45 = *v37;
  if ((int)v45 >= 1)
  {
    uint64_t v46 = sub_1000C33A0(v45);
    *(void *)(v20 + 272) = v46;
    if (!v46) {
      goto LABEL_37;
    }
    if (*v37 >= 1)
    {
      uint64_t v47 = 0;
      do
        *(unsigned char *)(*(void *)(v20 + 272) + v47++) = -1;
      while (v47 < *(int *)(v20 + 224));
      if (!*(void *)(v20 + 272)) {
        goto LABEL_37;
      }
    }
  }
  *(_DWORD *)(v20 + 24) = a11;
  return v20;
}

double sub_10008ED58(uint64_t a1, int a2, unsigned __int8 *a3)
{
  if (a2 == 5 || a2 == 2) {
    a2 = 3;
  }
  uint64_t v5 = a1 + 312;
  *(_DWORD *)(a1 + 304) = a2;
  *(_DWORD *)(a1 + 308) = a2;
  *(_DWORD *)(a1 + 352) = a2;
  if (sub_1000CAF00(a3, "hiin"))
  {
    if (sub_1000CAF00(a3, "jajp")) {
      goto LABEL_6;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 304) = 4;
    *(void *)(a1 + 312) = 0x400000004;
    *(_OWORD *)(a1 + 320) = xmmword_1000F64E0;
    *(_OWORD *)(a1 + 336) = *(_OWORD *)dbl_1000F64F0;
    if (sub_1000CAF00(a3, "jajp"))
    {
LABEL_6:
      if (sub_1000CAF00(a3, "plpl")) {
        goto LABEL_7;
      }
      goto LABEL_14;
    }
  }
  uint64_t v5 = a1 + 356;
  *(void *)(a1 + 352) = 0x500000004;
  *(_DWORD *)(a1 + 360) = 5;
  *(_OWORD *)(a1 + 364) = xmmword_1000F64E0;
  *(_OWORD *)(a1 + 380) = *(_OWORD *)dbl_1000F64F0;
  if (sub_1000CAF00(a3, "plpl"))
  {
LABEL_7:
    if (sub_1000CAF00(a3, "ruru")) {
      goto LABEL_8;
    }
    goto LABEL_15;
  }
LABEL_14:
  *(_DWORD *)(a1 + 304) = 4;
  *(void *)uint64_t v5 = 0x700000007;
  *(_OWORD *)(v5 + 24) = *(_OWORD *)dbl_1000F64F0;
  *(_OWORD *)(v5 + 8) = xmmword_1000F64E0;
  *(_DWORD *)(v5 + 36) = 256;
  if (sub_1000CAF00(a3, "ruru"))
  {
LABEL_8:
    if (sub_1000CAF00(a3, "thth")) {
      goto LABEL_9;
    }
    goto LABEL_16;
  }
LABEL_15:
  *(_DWORD *)(a1 + 304) = 4;
  *(void *)uint64_t v5 = 0x200000002;
  *(_OWORD *)(v5 + 8) = xmmword_1000F64E0;
  *(_OWORD *)(v5 + 24) = *(_OWORD *)dbl_1000F64F0;
  if (sub_1000CAF00(a3, "thth"))
  {
LABEL_9:
    if (sub_1000CAF00(a3, "ukua")) {
      goto LABEL_10;
    }
    goto LABEL_17;
  }
LABEL_16:
  *(_DWORD *)(a1 + 304) = 4;
  *(void *)uint64_t v5 = 0x700000007;
  *(_OWORD *)(v5 + 24) = *(_OWORD *)dbl_1000F64F0;
  *(_OWORD *)(v5 + 8) = xmmword_1000F64E0;
  *(_DWORD *)(v5 + 36) = 3584;
  if (sub_1000CAF00(a3, "ukua"))
  {
LABEL_10:
    if (sub_1000CAF00(a3, "vivn")) {
      return result;
    }
LABEL_18:
    *(_DWORD *)(a1 + 304) = 4;
    *(void *)uint64_t v5 = 0x700000007;
    double result = dbl_1000F64F0[0];
    *(_OWORD *)(v5 + 24) = *(_OWORD *)dbl_1000F64F0;
    *(_OWORD *)(v5 + 8) = xmmword_1000F64E0;
    *(_DWORD *)(v5 + 36) = 7840;
    return result;
  }
LABEL_17:
  *(_DWORD *)(a1 + 304) = 4;
  *(void *)uint64_t v5 = 0x200000002;
  *(_OWORD *)(v5 + 8) = xmmword_1000F64E0;
  *(_OWORD *)(v5 + 24) = *(_OWORD *)dbl_1000F64F0;
  if (!sub_1000CAF00(a3, "vivn")) {
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_10008EFD4(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    sub_1000C3F24(*(void *)(result + 96), *(unsigned int *)(v1 + 104), *(_DWORD *)(v1 + 108));
    *(void *)(v1 + 96) = 0;
    *(void *)(v1 + 104) = 0;
    sub_1000C3F24(*(void *)(v1 + 120), *(unsigned int *)(v1 + 128), *(_DWORD *)(v1 + 132));
    *(void *)(v1 + 120) = 0;
    *(void *)(v1 + 128) = 0;
    sub_1000C3F24(*(void *)(v1 + 32), *(unsigned int *)(v1 + 40), *(_DWORD *)(v1 + 44));
    *(void *)(v1 + 32) = 0;
    *(void *)(v1 + 40) = 0;
    sub_1000C3F24(*(void *)(v1 + 56), *(unsigned int *)(v1 + 64), *(_DWORD *)(v1 + 68));
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
    sub_1000C3F24(*(void *)(v1 + 80), *(unsigned int *)(v1 + 88), *(_DWORD *)(v1 + 92));
    *(void *)(v1 + 80) = 0;
    *(void *)(v1 + 88) = 0;
    sub_1000C3F24(*(void *)(v1 + 168), *(unsigned int *)(v1 + 176), *(_DWORD *)(v1 + 180));
    *(void *)(v1 + 168) = 0;
    *(void *)(v1 + 176) = 0;
    sub_1000C3F24(*(void *)(v1 + 184), *(unsigned int *)(v1 + 192), *(_DWORD *)(v1 + 196));
    *(void *)(v1 + 184) = 0;
    *(void *)(v1 + 192) = 0;
    sub_1000C3F24(*(void *)(v1 + 208), *(unsigned int *)(v1 + 216), *(_DWORD *)(v1 + 220));
    *(void *)(v1 + 208) = 0;
    *(void *)(v1 + 216) = 0;
    sub_1000C321C(*(void *)(v1 + 272));
    sub_1000C321C(*(void *)(v1 + 264));
    sub_1000C321C(*(void *)(v1 + 232));
    sub_1000C321C(*(void *)(v1 + 240));
    return sub_1000C321C(v1);
  }
  return result;
}

uint64_t sub_10008F0B0(uint64_t a1, __int16 *a2, _WORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!*(_DWORD *)(a1 + 44)) {
    return 0xFFFFFFLL;
  }
  int v10 = *(_DWORD *)(a1 + 304);
  int v11 = *(_DWORD *)(a1 + 144);
  if (v11 < 1)
  {
    int v13 = 0;
    int v12 = 1;
  }
  else
  {
    if (v11 <= 4 * *(_DWORD *)(a1 + 148)) {
      int v11 = 4 * *(_DWORD *)(a1 + 148);
    }
    if (v11 <= *(_DWORD *)(a1 + 140)) {
      int v11 = *(_DWORD *)(a1 + 140);
    }
    int v12 = v11 + 1;
    int v13 = (char *)sub_1000CD3E8((v11 + 1), (uint64_t)a2, (uint64_t)a3, a4, a5, a6, a7, a8);
  }
  int v14 = 4 * sub_1000CED6C((unint64_t)a2) + 4;
  uint64_t v15 = v14;
  uint64_t v23 = (unsigned __int8 *)sub_1000CD3E8(v14, v16, v17, v18, v19, v20, v21, v22);
  uint64_t v31 = (unsigned __int8 *)sub_1000CD3E8(v14, v24, v25, v26, v27, v28, v29, v30);
  if (v10 == 4) {
    int v32 = 3;
  }
  else {
    int v32 = v10;
  }
  if (sub_1000C0270(v32, a2, v14, (uint64_t)v31) == 2)
  {
    sub_1000CD4D0(v31, v14);
    sub_1000CD4D0(v23, v14);
    if (*(int *)(a1 + 144) >= 1)
    {
      uint64_t v33 = v12;
      uint64_t v34 = 0xFFFFFFLL;
LABEL_44:
      sub_1000CD4D0(v13, v33);
      return v34;
    }
    return 0xFFFFFFLL;
  }
  int v35 = *(_DWORD *)(a1 + 20);
  sub_10008814C(v23, (unsigned __int16 *)a2, v35, v10, a1 + 312, 0);
  uint64_t v43 = sub_1000CAD00((unint64_t)v23) + 1;
  int v81 = v35;
  if (v35) {
    int v82 = sub_100088008((uint64_t)a2);
  }
  else {
    int v82 = 128;
  }
  uint64_t v44 = 2 * *(int *)(a1 + 148) + 2;
  uint64_t v83 = (_WORD *)sub_1000CD3E8(v44, v36, v37, v38, v39, v40, v41, v42);
  int v50 = sub_10008F4CC(a1, v23, v43, v45, v46, v47, v48, v49);
  if (v50 >= *(_DWORD *)(a1 + 72))
  {
    uint64_t v34 = 0xFFFFFFLL;
  }
  else
  {
    unsigned int v51 = v50;
    uint64_t v77 = v44;
    uint64_t v78 = v15;
    int v79 = v12;
    uint64_t v80 = v31;
    while (1)
    {
      unint64_t v52 = (unint64_t)*(unsigned __int16 *)(*(void *)(*(void *)(a1 + 56) + 8 * (v51 >> 8))
                                                  + 2 * v51) >> 8;
      uint64_t v53 = *(void *)(*(void *)(a1 + 32) + 8 * v52);
      uint64_t v54 = *(_WORD *)(*(void *)(*(void *)(a1 + 56) + 8 * (v51 >> 8)) + 2
                                                                                             * v51);
      unint64_t v55 = *(unsigned int *)(v53 + 12 * v54);
      uint64_t v56 = *(void *)(*(void *)(a1 + 96) + ((v55 >> 5) & 0x7FFFFF8));
      uint64_t v57 = *(_DWORD *)(v53 + 12 * v54);
      *int v13 = *(unsigned char *)(v56 + v57);
      if (*(unsigned char *)(v56 + v57))
      {
        unsigned int v58 = v55 + 1;
        int v59 = v13 + 1;
        do
        {
          uint64_t v60 = *(void *)(*(void *)(a1 + 96) + 8 * (v58 >> 8));
          *v59++ = *(unsigned char *)(v60 + v58);
          LODWORD(v60) = *(unsigned __int8 *)(v60 + v58++);
        }
        while (v60);
      }
      if ((int)sub_1000CAED0(v13, v23) > 0)
      {
LABEL_39:
        uint64_t v34 = 0xFFFFFFLL;
        goto LABEL_41;
      }
      int v61 = sub_1000CAD00((unint64_t)v13);
      int v62 = v61;
      unsigned int v63 = v55 + v61 + 1;
      uint64_t v64 = *(void *)(*(void *)(a1 + 96) + 8 * (v63 >> 8));
      uint64_t v65 = (v55 + v61 + 1);
      *int v13 = *(unsigned char *)(v64 + v65);
      if (*(unsigned char *)(v64 + v65))
      {
        unsigned int v66 = v61 + v55 + 2;
        int v67 = v13 + 1;
        do
        {
          uint64_t v68 = *(void *)(*(void *)(a1 + 96) + 8 * (v66 >> 8));
          *v67++ = *(unsigned char *)(v68 + v66);
          LODWORD(v68) = *(unsigned __int8 *)(v68 + v66++);
        }
        while (v68);
      }
      int v69 = sub_1000CAD00((unint64_t)v13);
      sub_1000887DC((uint64_t)v83, v13, v69 + 1, 1, *(_DWORD *)(a1 + 352), a1 + 356);
      if (!sub_1000CF684(v83, a3))
      {
        if (!v81) {
          break;
        }
        if (v82 == *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 80) + 8 * v52) + v54))
        {
          if (v82 != 16) {
            break;
          }
          int v70 = sub_1000CAD00((unint64_t)v13);
          uint64_t v71 = *(void *)(*(void *)(a1 + 96) + 8 * ((v63 + v70 + 1) >> 8));
          uint64_t v72 = (v63 + v70 + 1);
          *int v13 = *(unsigned char *)(v71 + v72);
          if (*(unsigned char *)(v71 + v72))
          {
            unsigned int v73 = v62 + v70 + v55 + 3;
            uint64_t v74 = v13 + 1;
            do
            {
              uint64_t v75 = *(void *)(*(void *)(a1 + 96) + 8 * (v73 >> 8));
              *v74++ = *(unsigned char *)(v75 + v73);
              LODWORD(v75) = *(unsigned __int8 *)(v75 + v73++);
            }
            while (v75);
          }
          if (!sub_1000CAED0(v13, v80)) {
            break;
          }
        }
      }
      if ((signed int)++v51 >= *(_DWORD *)(a1 + 72)) {
        goto LABEL_39;
      }
    }
    uint64_t v34 = *(unsigned int *)(v53 + 12 * v54 + 8);
LABEL_41:
    uint64_t v15 = v78;
    int v12 = v79;
    uint64_t v31 = v80;
    uint64_t v44 = v77;
  }
  sub_1000CD4D0(v83, v44);
  sub_1000CD4D0(v31, v15);
  sub_1000CD4D0(v23, v15);
  if (*(int *)(a1 + 144) >= 1)
  {
    uint64_t v33 = v12;
    goto LABEL_44;
  }
  return v34;
}

uint64_t sub_10008F4CC(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a3;
  uint64_t v11 = *(unsigned int *)(a1 + 144);
  if ((int)v11 < 1)
  {
    int v13 = 0;
    uint64_t v12 = 1;
    int v17 = *(_DWORD *)(a1 + 72);
    uint64_t v15 = 0;
    int v16 = v17 - 1;
    if (v17 < 1) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v12 = v11 + 1;
    int v13 = (unsigned __int8 *)sub_1000CD3E8(v11 + 1, (uint64_t)a2, a3, a4, a5, a6, a7, a8);
    int v14 = *(_DWORD *)(a1 + 72);
    uint64_t v15 = 0;
    int v16 = v14 - 1;
    if (v14 < 1) {
      goto LABEL_18;
    }
  }
  do
  {
    int v19 = v16 + v15;
    if (v16 + (int)v15 < 0 != __OFADD__(v16, v15)) {
      ++v19;
    }
    int v20 = v19 >> 1;
    unint64_t v21 = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 56) + 8 * ((v19 >> 1) >> 8))
                              + 2 * (v19 >> 1));
    unint64_t v22 = *(unsigned int *)(*(void *)(*(void *)(a1 + 32) + ((v21 >> 5) & 0x7F8)) + 12 * v21);
    uint64_t v23 = *(void *)(*(void *)(a1 + 96) + ((v22 >> 5) & 0x7FFFFF8));
    *int v13 = *(unsigned char *)(v23 + v22);
    if (*(unsigned char *)(v23 + v22))
    {
      LODWORD(v22) = v22 + 1;
      uint64_t v24 = v13 + 1;
      do
      {
        uint64_t v25 = *(void *)(*(void *)(a1 + 96) + 8 * (v22 >> 8));
        *v24++ = *(unsigned char *)(v25 + v22);
        LODWORD(v25) = *(unsigned __int8 *)(v25 + v22);
        unint64_t v22 = (v22 + 1);
      }
      while (v25);
    }
    int v18 = sub_1000CAD44(v13, a2, v8, v22);
    if (v18 < 0) {
      uint64_t v15 = (v20 + 1);
    }
    else {
      uint64_t v15 = v15;
    }
    if (v18 >= 0) {
      int v16 = v20 - 1;
    }
  }
  while ((int)v15 <= v16);
LABEL_18:
  if (*(int *)(a1 + 144) >= 1) {
    sub_1000CD4D0(v13, v12);
  }
  return v15;
}

uint64_t sub_10008F63C(uint64_t a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, int a5)
{
  if (!(a5 | a4)) {
    return 0;
  }
  uint64_t v6 = a4;
  uint64_t v10 = a1 + 356;
  uint64_t v11 = (int)((4 * sub_1000CED6C((unint64_t)a2)) | 1);
  int v19 = (unsigned __int8 *)sub_1000CD3E8(v11, v12, v13, v14, v15, v16, v17, v18);
  int v20 = sub_10008814C(v19, a2, 0, *(_DWORD *)(a1 + 352), v10, 0);
  uint64_t result = 0;
  if (v20 != 1)
  {
    int v22 = sub_1000CAD00((unint64_t)v19);
    uint64_t v45 = (4 * *(int *)(a1 + 148)) | 1;
    unint64_t v30 = sub_1000CD3E8(v45, v23, v24, v25, v26, v27, v28, v29);
    uint64_t v31 = (unsigned __int8 *)v30;
    if (*(int *)(a1 + 48) >= 1)
    {
      int v46 = a5;
      uint64_t v32 = 0;
      unsigned int v33 = 0;
      int v34 = v22 + 1;
      uint64_t v47 = (unsigned char *)(v30 + 1);
      while (1)
      {
        uint64_t v35 = *(void *)(*(void *)(a1 + 32) + 8 * (v33 >> 8));
        unint64_t v36 = *(unsigned int *)(v35 + 12 * v33);
        if (v36 != -1)
        {
          uint64_t v37 = *(void *)(a1 + 96);
          int v38 = *(unsigned __int8 *)(*(void *)(v37 + ((v36 >> 5) & 0x7FFFFF8)) + v36);
          if (*(unsigned char *)(*(void *)(v37 + ((v36 >> 5) & 0x7FFFFF8)) + v36))
          {
            int v39 = 0;
            do
            {
              int v38 = v39 + 1;
              int v40 = *(unsigned __int8 *)(*(void *)(v37 + 8 * ((v36 + 1 + v39) >> 8))
                                       + (v36 + 1 + v39));
              ++v39;
            }
            while (v40);
          }
          uint64_t v41 = *(void *)(v37 + 8 * ((v36 + v38 + 1) >> 8));
          uint64_t v42 = (v36 + v38 + 1);
          *uint64_t v31 = *(unsigned char *)(v41 + v42);
          if (*(unsigned char *)(v41 + v42))
          {
            LODWORD(v36) = v38 + v36 + 2;
            uint64_t v43 = v47;
            do
            {
              uint64_t v44 = *(void *)(*(void *)(a1 + 96) + 8 * (v36 >> 8));
              *v43++ = *(unsigned char *)(v44 + v36);
              LODWORD(v44) = *(unsigned __int8 *)(v44 + v36);
              unint64_t v36 = (v36 + 1);
            }
            while (v44);
          }
          if (!sub_1000CAD44(v31, v19, v34, v36))
          {
            if ((int)v32 >= (int)v6)
            {
              uint64_t v32 = (v32 + 1);
            }
            else
            {
              *(_DWORD *)(a3 + 4 * (int)v32) = *(_DWORD *)(v35 + 12 * v33 + 8);
              uint64_t v32 = (v32 + 1);
              if (!v46 && v32 == v6)
              {
                sub_1000CD4D0(v31, v45);
                goto LABEL_22;
              }
            }
          }
        }
        if ((signed int)++v33 >= *(_DWORD *)(a1 + 48)) {
          goto LABEL_21;
        }
      }
    }
    uint64_t v32 = 0;
LABEL_21:
    sub_1000CD4D0(v31, v45);
    uint64_t v6 = v32;
LABEL_22:
    sub_1000CD4D0(v19, v11);
    return v6;
  }
  return result;
}

void *sub_10008F88C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v9 = a4;
  int v11 = a2;
  int v13 = *(_DWORD *)(a1 + 144);
  if (v13 >= 1)
  {
    if (v13 <= 4 * *(_DWORD *)(a1 + 148)) {
      int v13 = 4 * *(_DWORD *)(a1 + 148);
    }
    if (v13 <= *(_DWORD *)(a1 + 140)) {
      int v13 = *(_DWORD *)(a1 + 140);
    }
    uint64_t v14 = (v13 + 1);
    uint64_t v15 = (char *)sub_1000CD3E8(v14, a2, a3, a4, a5, a6, a7, a8);
    uint64_t v23 = (char *)sub_1000CD3E8(v14, v16, v17, v18, v19, v20, v21, v22);
    uint64_t v24 = a1 + 356;
    int v25 = *(_DWORD *)(a1 + 48);
    if (v25 > 0) {
      goto LABEL_7;
    }
LABEL_16:
    unsigned int v26 = 0;
    uint64_t v28 = *(void *)(a1 + 32);
    goto LABEL_17;
  }
  uint64_t v15 = 0;
  uint64_t v23 = 0;
  uint64_t v14 = 1;
  uint64_t v24 = a1 + 356;
  int v25 = *(_DWORD *)(a1 + 48);
  if (v25 <= 0) {
    goto LABEL_16;
  }
LABEL_7:
  unsigned int v26 = 0;
  int v27 = v25 - 1;
  uint64_t v28 = *(void *)(a1 + 32);
  do
  {
    int v29 = v26 + v27;
    if ((int)(v26 + v27) < 0 != __OFADD__(v26, v27)) {
      ++v29;
    }
    unsigned int v30 = v29 >> 1;
    if (*(_DWORD *)(*(void *)(v28 + 8 * (v30 >> 8)) + 12 * v30 + 8) >= v11) {
      int v27 = v30 - 1;
    }
    else {
      unsigned int v26 = v30 + 1;
    }
  }
  while ((int)v26 <= v27);
LABEL_17:
  uint64_t v31 = v26 >> 8;
  unint64_t v32 = *(unsigned int *)(*(void *)(v28 + 8 * v31) + 12 * v26);
  uint64_t v33 = *(void *)(*(void *)(a1 + 96) + ((v32 >> 5) & 0x7FFFFF8));
  char v34 = *(unsigned char *)(v33 + v32);
  uint64_t v115 = v24;
  if (*(_DWORD *)(a1 + 20))
  {
    *uint64_t v15 = v34;
    if (*(unsigned char *)(v33 + v32))
    {
      unsigned int v35 = v32 + 1;
      unint64_t v36 = v15 + 1;
      do
      {
        uint64_t v37 = *(void *)(*(void *)(a1 + 96) + 8 * (v35 >> 8));
        *v36++ = *(unsigned char *)(v37 + v35);
        LODWORD(v37) = *(unsigned __int8 *)(v37 + v35++);
      }
      while (v37);
    }
    int v38 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 80) + 8 * v31) + v26);
    uint64_t v114 = v14;
    if (v38 == 16)
    {
      uint64_t v111 = a3;
      uint64_t v112 = a5;
      int v39 = sub_1000CAD00((unint64_t)v15);
      int v47 = v39;
      unsigned int v48 = v32 + v39 + 1;
      uint64_t v49 = *(void *)(a1 + 96);
      uint64_t v50 = v48 >> 8;
      uint64_t v51 = (v32 + v39 + 1);
      if (*(unsigned char *)(*(void *)(v49 + 8 * v50) + v51))
      {
        int v52 = 1;
        do
          ++v52;
        while (*(unsigned char *)(*(void *)(v49 + 8 * ((v52 + v39 + v32) >> 8))
                         + (v52 + v39 + v32)));
      }
      else
      {
        int v52 = 1;
      }
      uint64_t v92 = v52;
      uint64_t v93 = (char *)sub_1000CD3E8(v52, v40, v41, v42, v43, v44, v45, v46);
      unsigned int v94 = v93;
      uint64_t v95 = *(void *)(*(void *)(a1 + 96) + 8 * v50);
      *uint64_t v93 = *(unsigned char *)(v95 + v51);
      if (*(unsigned char *)(v95 + v51))
      {
        unsigned int v96 = v47 + v32 + 2;
        float64x2_t v97 = v93 + 1;
        do
        {
          uint64_t v98 = *(void *)(*(void *)(a1 + 96) + 8 * (v96 >> 8));
          *v97++ = *(unsigned char *)(v98 + v96);
          LODWORD(v98) = *(unsigned __int8 *)(v98 + v96++);
        }
        while (v98);
      }
      sub_1000887DC(v112, v93, v92, 1, *(_DWORD *)(a1 + 352), v115);
      int v99 = sub_1000CAD00((unint64_t)v94);
      sub_1000CD4D0(v94, v92);
      uint64_t v100 = *(void *)(*(void *)(a1 + 96) + 8 * ((v48 + v99 + 1) >> 8));
      *uint64_t v23 = *(unsigned char *)(v100 + (v48 + v99 + 1));
      if (*(unsigned char *)(v100 + (v48 + v99 + 1)))
      {
        unsigned int v101 = v99 + v47 + v32 + 3;
        uint64_t v102 = v23 + 1;
        do
        {
          uint64_t v103 = *(void *)(*(void *)(a1 + 96) + 8 * (v101 >> 8));
          *v102++ = *(unsigned char *)(v103 + v101);
          LODWORD(v103) = *(unsigned __int8 *)(v103 + v101++);
        }
        while (v103);
      }
      uint64_t result = (void *)sub_1000C031C(*(_DWORD *)(a1 + 308), v23, *(_DWORD *)(a1 + 140), v111);
      uint64_t v14 = v114;
      if (*(int *)(a1 + 144) < 1) {
        return result;
      }
LABEL_57:
      sub_1000CD4D0(v23, v14);
      return sub_1000CD4D0(v15, v14);
    }
    sub_1000887DC(a3, v15, v9, v38, *(_DWORD *)(a1 + 304), a1 + 312);
    int v70 = sub_1000CAD00((unint64_t)v15);
    int v78 = v70;
    uint64_t v79 = *(void *)(a1 + 96);
    uint64_t v80 = (v32 + v70 + 1) >> 8;
    uint64_t v81 = (v32 + v70 + 1);
    if (*(unsigned char *)(*(void *)(v79 + 8 * v80) + v81))
    {
      uint64_t v82 = a5;
      int v83 = 1;
      do
        ++v83;
      while (*(unsigned char *)(*(void *)(v79 + 8 * ((v83 + v70 + v32) >> 8))
                       + (v83 + v70 + v32)));
    }
    else
    {
      uint64_t v82 = a5;
      int v83 = 1;
    }
    uint64_t v104 = v83;
    float64x2_t v105 = (char *)sub_1000CD3E8(v83, v71, v72, v73, v74, v75, v76, v77);
    unint64_t v106 = v105;
    uint64_t v107 = *(void *)(*(void *)(a1 + 96) + 8 * v80);
    *float64x2_t v105 = *(unsigned char *)(v107 + v81);
    if (*(unsigned char *)(v107 + v81))
    {
      unsigned int v108 = v78 + v32 + 2;
      int v109 = v105 + 1;
      do
      {
        uint64_t v110 = *(void *)(*(void *)(a1 + 96) + 8 * (v108 >> 8));
        *v109++ = *(unsigned char *)(v110 + v108);
        LODWORD(v110) = *(unsigned __int8 *)(v110 + v108++);
      }
      while (v110);
    }
    sub_1000887DC(v82, v105, v104, 1, *(_DWORD *)(a1 + 352), v115);
    uint64_t result = sub_1000CD4D0(v106, v104);
    uint64_t v14 = v114;
    if (*(int *)(a1 + 144) >= 1) {
      goto LABEL_57;
    }
  }
  else
  {
    *uint64_t v23 = v34;
    if (*(unsigned char *)(v33 + v32))
    {
      unsigned int v53 = v32 + 1;
      uint64_t v54 = v23 + 1;
      do
      {
        uint64_t v55 = *(void *)(*(void *)(a1 + 96) + 8 * (v53 >> 8));
        *v54++ = *(unsigned char *)(v55 + v53);
        LODWORD(v55) = *(unsigned __int8 *)(v55 + v53++);
      }
      while (v55);
    }
    sub_1000C031C(*(_DWORD *)(a1 + 304), v23, *(_DWORD *)(a1 + 140), a3);
    int v56 = sub_1000CAD00((unint64_t)v23);
    int v64 = v56;
    uint64_t v65 = *(void *)(a1 + 96);
    uint64_t v66 = (v32 + v56 + 1) >> 8;
    uint64_t v67 = (v32 + v56 + 1);
    uint64_t v113 = v15;
    uint64_t v68 = a5;
    if (*(unsigned char *)(*(void *)(v65 + 8 * v66) + v67))
    {
      int v69 = 1;
      do
        ++v69;
      while (*(unsigned char *)(*(void *)(v65 + 8 * ((v69 + v56 + v32) >> 8))
                       + (v69 + v56 + v32)));
    }
    else
    {
      int v69 = 1;
    }
    uint64_t v84 = v69;
    unsigned int v85 = (char *)sub_1000CD3E8(v69, v57, v58, v59, v60, v61, v62, v63);
    uint64_t v86 = v85;
    uint64_t v87 = *(void *)(*(void *)(a1 + 96) + 8 * v66);
    *unsigned int v85 = *(unsigned char *)(v87 + v67);
    if (*(unsigned char *)(v87 + v67))
    {
      unsigned int v88 = v64 + v32 + 2;
      unsigned int v89 = v85 + 1;
      do
      {
        uint64_t v90 = *(void *)(*(void *)(a1 + 96) + 8 * (v88 >> 8));
        *v89++ = *(unsigned char *)(v90 + v88);
        LODWORD(v90) = *(unsigned __int8 *)(v90 + v88++);
      }
      while (v90);
    }
    sub_1000887DC(v68, v85, v84, 1, *(_DWORD *)(a1 + 352), v115);
    uint64_t result = sub_1000CD4D0(v86, v84);
    uint64_t v15 = v113;
    if (*(int *)(a1 + 144) >= 1) {
      goto LABEL_57;
    }
  }
  return result;
}

uint64_t sub_10008FE28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v70 = a5;
  int v8 = a4;
  int v9 = (void **)a3;
  uint64_t v71 = 0;
  uint64_t v72 = 0;
  int v12 = *(_DWORD *)(a1 + 48);
  int v13 = 0;
  int v14 = v12 - 1;
  if (v12 >= 1)
  {
    do
    {
      int v15 = v13 + v14;
      if (v13 + v14 < 0 != __OFADD__(v13, v14)) {
        ++v15;
      }
      unsigned int v16 = v15 >> 1;
      if (*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8 * (v16 >> 8)) + 12 * v16 + 8) >= (int)a2) {
        int v14 = v16 - 1;
      }
      else {
        int v13 = v16 + 1;
      }
    }
    while (v13 <= v14);
  }
  if (v13 >= v12) {
    return 0;
  }
  uint64_t v17 = v13 >> 8;
  uint64_t v18 = *(void *)(*(void *)(a1 + 32) + 8 * v17);
  uint64_t v19 = v13;
  if (*(_DWORD *)(v18 + 12 * v13 + 8) != a2) {
    return 0;
  }
  unint64_t v20 = *(unsigned int *)(v18 + 12 * v13 + 4);
  if (v20 == -1)
  {
    if (!a4) {
      return 1;
    }
    uint64_t v39 = sub_1000901EC(a1, a2, 0, 0, a5, a6, a7, a8) + 1;
    uint64_t v40 = (int)v39;
    unsigned int v48 = (char *)sub_1000CD3E8((int)v39, v41, v42, v43, v44, v45, v46, v47);
    sub_1000901EC(a1, a2, (uint64_t)v48, v39, v49, v50, v51, v52);
    BOOL v53 = *(unsigned char *)(*(void *)(*(void *)(a1 + 168) + 8 * v17) + v19) != 0;
    uint64_t v54 = sub_10009628C(*(void *)(a1 + 8), v48, *(_DWORD *)(a1 + 308), v53, *v9, v70, (uint64_t)&v71, 1u, (uint64_t)&v72 + 4);
    if (SHIDWORD(v72) < 1)
    {
      uint64_t v65 = v54;
      sub_1000CD4D0(v48, v40);
      uint64_t result = v65;
      if (v8 < 1) {
        return result;
      }
    }
    else
    {
      uint64_t v62 = (_WORD *)sub_1000CD3E8(2 * HIDWORD(v72), v55, v56, v57, v58, v59, v60, v61);
      uint64_t v63 = sub_10009628C(*(void *)(a1 + 8), v48, *(_DWORD *)(a1 + 308), v53, v62, HIDWORD(v72), (uint64_t)&v71, 1u, (uint64_t)&v72);
      int v64 = sub_10009BF2C((unint64_t)v62);
      memcpy(*v9, v62, 2 * (v64 + 1));
      sub_1000CD4D0(v62, 2 * SHIDWORD(v72));
      sub_1000CD4D0(v48, v40);
      uint64_t result = v63;
      if (v8 < 1) {
        return result;
      }
    }
LABEL_40:
    int v66 = *(unsigned __int16 *)(a1 + 204);
    if (v66 == 0xFFFF || result != 1) {
      return result;
    }
    sub_10009593C((char *)*v9, *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 208) + 8 * v17) + v19), v66);
    return 1;
  }
  uint64_t result = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 120) + ((v20 >> 5) & 0x7FFFFF8)) + v20);
  if ((int)result >= (int)a4) {
    uint64_t v22 = a4;
  }
  else {
    uint64_t v22 = result;
  }
  if ((int)v22 >= 1)
  {
    unsigned int v67 = result;
    uint64_t v68 = v17;
    int v69 = a4;
    uint64_t v23 = 0;
    unsigned int v24 = v20 + 1;
    do
    {
      int v25 = v9;
      uint64_t v26 = *(void *)(a1 + 120);
      uint64_t v27 = v24 >> 8;
      uint64_t v28 = v24;
      int v29 = *(unsigned __int8 *)(*(void *)(v26 + 8 * v27) + v24);
      unsigned int v30 = v24 + 1;
      unsigned int v31 = v24 + 1;
      if (*(unsigned char *)(*(void *)(v26 + 8 * v27) + v24))
      {
        unsigned int v31 = v24 + 1;
        do
        {
          if (*(char *)(*(void *)(v26 + 8 * (v31 >> 8)) + v31) >= 0) {
            int v32 = 1;
          }
          else {
            int v32 = 2;
          }
          v31 += v32;
          --v29;
        }
        while (v29);
      }
      uint64_t v33 = (int)(v31 - v24);
      char v34 = (char *)sub_1000CD3E8(v33, a2, a3, a4, a5, a6, a7, a8);
      unsigned int v35 = v34;
      int v36 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 120) + 8 * v27) + v28);
      *char v34 = v36;
      if (v36)
      {
        uint64_t v37 = v34 + 1;
        int v9 = v25;
        do
        {
          while (1)
          {
            uint64_t v38 = *(void *)(*(void *)(a1 + 120) + 8 * (v30 >> 8));
            *uint64_t v37 = *(unsigned char *)(v38 + v30);
            if ((*(char *)(v38 + v30) & 0x80000000) == 0) {
              break;
            }
            v37[1] = *(unsigned char *)(*(void *)(*(void *)(a1 + 120) + 8 * ((v30 + 1) >> 8)) + (v30 + 1));
            v37 += 2;
            v30 += 2;
            if (!--v36) {
              goto LABEL_17;
            }
          }
          ++v30;
          ++v37;
          --v36;
        }
        while (v36);
      }
      else
      {
        int v9 = v25;
      }
LABEL_17:
      sub_100095688((uint64_t)&v9[v23], v34, 1);
      sub_1000CD4D0(v35, v33);
      ++v23;
      unsigned int v24 = v30;
    }
    while (v23 != v22);
    int v8 = v69;
    uint64_t v17 = v68;
    uint64_t result = v67;
  }
  if (v8 >= 1) {
    goto LABEL_40;
  }
  return result;
}

unint64_t sub_1000901EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a4;
  int v10 = a2;
  int v12 = *(_DWORD *)(a1 + 144);
  if (v12 <= *(_DWORD *)(a1 + 140)) {
    int v12 = *(_DWORD *)(a1 + 140);
  }
  uint64_t v13 = v12 + 1;
  int v14 = (unsigned char *)sub_1000CD3E8(v13, a2, a3, a4, a5, a6, a7, a8);
  int v15 = v14;
  int v16 = *(_DWORD *)(a1 + 48);
  uint64_t v66 = v13;
  __dst = (unsigned char *)a3;
  int v64 = v8;
  unsigned int v17 = 0;
  if (v16 <= 0)
  {
    uint64_t v19 = *(void *)(a1 + 32);
  }
  else
  {
    int v18 = v16 - 1;
    uint64_t v19 = *(void *)(a1 + 32);
    do
    {
      int v20 = v17 + v18;
      if ((int)(v17 + v18) < 0 != __OFADD__(v17, v18)) {
        ++v20;
      }
      unsigned int v21 = v20 >> 1;
      if (*(_DWORD *)(*(void *)(v19 + 8 * (v21 >> 8)) + 12 * v21 + 8) >= v10) {
        int v18 = v21 - 1;
      }
      else {
        unsigned int v17 = v21 + 1;
      }
    }
    while ((int)v17 <= v18);
  }
  uint64_t v22 = v17 >> 8;
  uint64_t v23 = v17;
  unint64_t v24 = *(unsigned int *)(*(void *)(v19 + 8 * v22) + 12 * v17);
  uint64_t v25 = *(void *)(*(void *)(a1 + 96) + ((v24 >> 5) & 0x7FFFFF8));
  *int v14 = *(unsigned char *)(v25 + v24);
  if (*(unsigned char *)(v25 + v24))
  {
    unsigned int v26 = v24 + 1;
    uint64_t v27 = v14 + 1;
    do
    {
      uint64_t v28 = *(void *)(*(void *)(a1 + 96) + 8 * (v26 >> 8));
      *v27++ = *(unsigned char *)(v28 + v26);
      LODWORD(v28) = *(unsigned __int8 *)(v28 + v26++);
    }
    while (v28);
  }
  int v29 = sub_1000CAD00((unint64_t)v14);
  int v37 = v29;
  unsigned int v38 = v24 + v29 + 1;
  uint64_t v39 = *(void *)(a1 + 96);
  uint64_t v40 = v38 >> 8;
  uint64_t v41 = (v24 + v29 + 1);
  uint64_t v65 = v22;
  if (*(unsigned char *)(*(void *)(v39 + 8 * v40) + v41))
  {
    int v42 = 1;
    do
      ++v42;
    while (*(unsigned char *)(*(void *)(v39 + 8 * ((v42 + v29 + v24) >> 8))
                     + (v42 + v29 + v24)));
  }
  else
  {
    int v42 = 1;
  }
  uint64_t v43 = v42;
  uint64_t v44 = (char *)sub_1000CD3E8(v42, v30, v31, v32, v33, v34, v35, v36);
  uint64_t v45 = v44;
  uint64_t v46 = *(void *)(*(void *)(a1 + 96) + 8 * v40);
  int v47 = *(unsigned __int8 *)(v46 + v41);
  *uint64_t v44 = v47;
  if (*(unsigned char *)(v46 + v41))
  {
    int v48 = v37 + v24;
    uint64_t v49 = 1;
    do
    {
      uint64_t v50 = *(void *)(*(void *)(a1 + 96) + 8 * ((v49 + 1 + v48) >> 8));
      uint64_t v51 = (v49 + 1 + v48);
      v44[v49++] = *(unsigned char *)(v50 + v51);
    }
    while (*(unsigned char *)(v50 + v51));
    int v47 = *v44;
  }
  if (v47)
  {
    int v52 = *(_DWORD *)(a1 + 352);
    if (__dst)
    {
      sub_1000883C4(__dst, v44, v43, 1, v52, a1 + 356);
      unint64_t v53 = sub_1000CAD00((unint64_t)__dst);
    }
    else
    {
      unint64_t v53 = sub_100088BA0(v44, v52, a1 + 356);
    }
LABEL_38:
    uint64_t v57 = v66;
    goto LABEL_39;
  }
  if (!*(_DWORD *)(a1 + 20))
  {
    unint64_t v53 = sub_1000CAD00((unint64_t)v15);
    if (__dst) {
      j__memmove(__dst, v15, (int)v53 + 1);
    }
    goto LABEL_38;
  }
  int v54 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 80) + 8 * v65) + v23);
  if (v54 == 16)
  {
    uint64_t v55 = *(void *)(*(void *)(a1 + 96) + 8 * ((v43 + v38) >> 8));
    uint64_t v56 = (v43 + v38);
    *int v15 = *(unsigned char *)(v55 + v56);
    uint64_t v57 = v66;
    if (*(unsigned char *)(v55 + v56))
    {
      unsigned int v58 = v37 + v24 + v43 + 2;
      uint64_t v59 = v15 + 1;
      do
      {
        uint64_t v60 = *(void *)(*(void *)(a1 + 96) + 8 * (v58 >> 8));
        *v59++ = *(unsigned char *)(v60 + v58);
        LODWORD(v60) = *(unsigned __int8 *)(v60 + v58++);
      }
      while (v60);
    }
    unint64_t v61 = sub_1000CAD00((unint64_t)v15);
    unint64_t v53 = v61;
    if (__dst) {
      j__memmove(__dst, v15, (int)v61 + 1);
    }
  }
  else
  {
    int v63 = *(_DWORD *)(a1 + 304);
    uint64_t v57 = v66;
    if (__dst)
    {
      sub_1000883C4(__dst, v15, v64, v54, v63, a1 + 312);
      unint64_t v53 = sub_1000CAD00((unint64_t)__dst);
    }
    else
    {
      unint64_t v53 = sub_100088BA0(v15, v63, a1 + 312);
    }
  }
LABEL_39:
  sub_1000CD4D0(v45, v43);
  sub_1000CD4D0(v15, v57);
  return v53;
}

uint64_t sub_100090568(uint64_t a1, unsigned int a2)
{
  int v2 = *(unsigned __int8 *)(*(void *)(a1 + 8 * (a2 >> 8)) + a2);
  unsigned int v3 = a2 + 1;
  if (*(unsigned char *)(*(void *)(a1 + 8 * (a2 >> 8)) + a2))
  {
    do
    {
      if (*(char *)(*(void *)(a1 + 8 * (v3 >> 8)) + v3) >= 0) {
        int v4 = 1;
      }
      else {
        int v4 = 2;
      }
      v3 += v4;
      --v2;
    }
    while (v2);
  }
  return v3 - a2;
}

uint64_t sub_1000905B0(uint64_t result, unsigned char *a2, unsigned int *a3)
{
  unint64_t v3 = *a3;
  int v4 = *(unsigned __int8 *)(*(void *)(*(void *)(result + 120) + ((v3 >> 5) & 0x7FFFFF8)) + *a3);
  *a2 = v4;
  unsigned int v5 = v3 + 1;
  if (v4)
  {
    uint64_t v6 = a2 + 1;
    do
    {
      while (1)
      {
        uint64_t v7 = *(void *)(*(void *)(result + 120) + 8 * (v5 >> 8));
        *uint64_t v6 = *(unsigned char *)(v7 + v5);
        if ((*(char *)(v7 + v5) & 0x80000000) == 0) {
          break;
        }
        v6[1] = *(unsigned char *)(*(void *)(*(void *)(result + 120) + 8 * ((v5 + 1) >> 8)) + (v5 + 1));
        v6 += 2;
        v5 += 2;
        if (!--v4) {
          goto LABEL_6;
        }
      }
      ++v5;
      ++v6;
      --v4;
    }
    while (v4);
  }
LABEL_6:
  *a3 = v5;
  return result;
}

uint64_t sub_100090648(uint64_t a1, int a2)
{
  int v2 = *(_DWORD *)(a1 + 48);
  int v3 = v2 - 1;
  if (v2 < 1)
  {
    unsigned int v4 = 0;
  }
  else
  {
    unsigned int v4 = 0;
    do
    {
      int v5 = v4 + v3;
      if ((int)(v4 + v3) < 0 != __OFADD__(v4, v3)) {
        ++v5;
      }
      unsigned int v6 = v5 >> 1;
      if (*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8 * (v6 >> 8)) + 12 * v6 + 8) >= a2) {
        int v3 = v6 - 1;
      }
      else {
        unsigned int v4 = v6 + 1;
      }
    }
    while ((int)v4 <= v3);
  }
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 168) + 8 * (v4 >> 8)) + v4)) {
    return 2;
  }
  else {
    return 1;
  }
}

uint64_t sub_1000906C4(uint64_t result, int a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(result + 200);
  if (v3 == 255)
  {
    if (*(int *)(result + 48) >= 1)
    {
      unsigned int v4 = 0;
      do
      {
        uint64_t v5 = *(void *)(*(void *)(result + 184) + 8 * (v4 >> 8));
        *(unsigned char *)(v5 + v4) = (*(unsigned __int8 *)(v5 + v4) + 1) >> 1;
        ++v4;
      }
      while ((signed int)v4 < *(_DWORD *)(result + 48));
    }
    int v3 = 128;
  }
  unsigned int v6 = v3 + 1;
  *(_DWORD *)(result + 200) = v6;
  if (a2 >= 1)
  {
    for (uint64_t i = 0; i != a2; ++i)
    {
      int v8 = *(_DWORD *)(a3 + 4 * i);
      if (v8 >= *(_DWORD *)(result + 280))
      {
        int v9 = *(_DWORD *)(result + 48);
        int v10 = 0;
        int v11 = v9 - 1;
        if (v9 >= 1)
        {
          do
          {
            int v12 = v10 + v11;
            if (v10 + v11 < 0 != __OFADD__(v10, v11)) {
              ++v12;
            }
            unsigned int v13 = v12 >> 1;
            if (*(_DWORD *)(*(void *)(*(void *)(result + 32) + 8 * (v13 >> 8)) + 12 * v13 + 8) >= v8) {
              int v11 = v13 - 1;
            }
            else {
              int v10 = v13 + 1;
            }
          }
          while (v10 <= v11);
        }
        if (v10 < v9
          && *(_DWORD *)(*(void *)(*(void *)(result + 32) + 8 * (v10 >> 8))
                       + 12 * v10
                       + 8) == v8)
        {
          *(unsigned char *)(*(void *)(*(void *)(result + 184) + 8 * (v6 >> 8)) + v6) = v6;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000907E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a3;
  char v9 = a2;
  uint64_t v28 = (int)a3;
  int v11 = (void *)sub_1000CD3E8((int)a3, a2, a3, a4, a5, a6, a7, a8);
  int v12 = *(_DWORD *)(a1 + 48);
  if (v12 >= 1)
  {
    unsigned int v13 = 0;
    uint64_t v14 = 0;
    int v30 = v8;
    char v29 = v9;
    while (1)
    {
      uint64_t v20 = v13 >> 8;
      if (*(unsigned char *)(*(void *)(*(void *)(a1 + 168) + 8 * v20) + v13))
      {
        if ((v9 & 2) == 0) {
          goto LABEL_10;
        }
      }
      else if ((v9 & 1) == 0)
      {
        goto LABEL_10;
      }
      int v21 = *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8 * v20) + 12 * v13 + 8);
      if (v21 >= *(_DWORD *)(a1 + 280))
      {
        unsigned int v22 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 184) + 8 * v20) + v13);
        if ((int)v14 >= 1)
        {
          uint64_t v23 = 0;
          uint64_t v24 = 0;
          uint64_t v25 = v14;
          do
          {
            if (*((unsigned __int8 *)v11 + v24) > v22)
            {
              int v15 = (char *)v11 + v24;
              if (v14 == v8) {
                int v16 = -1;
              }
              else {
                int v16 = 0;
              }
              int v17 = v14 + v16;
              if (v14 != v8) {
                LODWORD(v14) = v14 + 1;
              }
              unsigned int v31 = v14;
              int v18 = v17 - v24;
              j__memmove(v15 + 1, (char *)v11 + v24, v17 - (int)v24);
              int v19 = 4 * v18;
              char v9 = v29;
              j__memmove((void *)(a4 - v23 + 4), (const void *)(a4 - v23), v19);
              uint64_t v14 = v31;
              *(_DWORD *)(a4 + 4 * v24) = v21;
              int v8 = v30;
              goto LABEL_9;
            }
            ++v24;
            v23 -= 4;
          }
          while (v14 != v24);
          if ((int)v14 >= v8) {
            goto LABEL_10;
          }
LABEL_23:
          uint64_t v14 = (v14 + 1);
          *(_DWORD *)(a4 + 4 * v25) = v21;
          int v15 = (char *)v11 + v25;
LABEL_9:
          *int v15 = v22;
          int v12 = *(_DWORD *)(a1 + 48);
          goto LABEL_10;
        }
        uint64_t v25 = 0;
        if ((int)v14 < v8) {
          goto LABEL_23;
        }
      }
LABEL_10:
      if ((int)++v13 >= v12) {
        goto LABEL_25;
      }
    }
  }
  uint64_t v14 = 0;
LABEL_25:
  uint64_t v26 = v14;
  sub_1000CD4D0(v11, v28);
  return v26;
}

uint64_t sub_100090994(uint64_t a1, unsigned __int16 *a2, unsigned __int16 *a3, unint64_t *a4, uint64_t a5, _DWORD *a6, _DWORD *a7, _DWORD *a8, _DWORD *a9, int a10, int a11)
{
  uint64_t v19 = sub_1000CD550();
  uint64_t v20 = 0xFFFFFFLL;
  if (!a5 || (int)a5 > 200) {
    return v20;
  }
  uint64_t v174 = v19;
  int32x4_t v175 = a8;
  int v172 = *(_DWORD *)(a1 + 304);
  int v178 = 0;
  int32x4_t v176 = 0;
  uint64_t v177 = 0;
  if ((int)a5 >= 1)
  {
    uint64_t v21 = 0;
    while (1)
    {
      unsigned int v22 = (unsigned __int16 *)a4[v21];
      int v23 = *v22;
      if (v23 != 0xFFFF) {
        break;
      }
LABEL_12:
      if ((int)sub_10009BF2C((unint64_t)v22) > 255) {
        return 0xFFFFFFLL;
      }
      if (++v21 == a5) {
        goto LABEL_14;
      }
    }
    int v24 = *(_DWORD *)(a1 + 288);
    uint64_t v25 = v22 + 1;
    while ((unsigned __int16)v23 <= (unsigned __int16)(*(_WORD *)(a1 + 256) + v24)
         && (v24 >= (unsigned __int16)v23
          || *(unsigned __int8 *)(*(void *)(a1 + 272) + (unsigned __int16)v23 + ~v24) != 255))
    {
      int v26 = *v25++;
      LOWORD(v23) = v26;
      if (v26 == 0xFFFF) {
        goto LABEL_12;
      }
    }
    return 0xFFFFFFLL;
  }
LABEL_14:
  int v27 = sub_1000CED6C((unint64_t)a2);
  int v35 = v27 + 1;
  if (v27 >= *a6) {
    *a6 = v35;
  }
  int v36 = 4 * v35;
  if (v27 >= *(_DWORD *)(a1 + 140)) {
    *(_DWORD *)(a1 + 140) = v35;
  }
  int v37 = (unsigned __int8 *)sub_1000CD3E8(v36, v28, v29, v30, v31, v32, v33, v34);
  int v171 = *(_DWORD *)(a1 + 20);
  if (sub_10008814C(v37, a2, v171, *(_DWORD *)(a1 + 304), a1 + 312, 0) == 1) {
    goto LABEL_50;
  }
  int v170 = v37;
  int v38 = sub_1000CAD00((unint64_t)v37);
  int v39 = v38;
  if (v38 > *(_DWORD *)(a1 + 144)) {
    *(_DWORD *)(a1 + 144) = v38;
  }
  if (v171)
  {
    int v40 = sub_100088008((uint64_t)a2);
    if (v40 == 16)
    {
      unint64_t v48 = sub_1000CD3E8(v36, v41, v42, v43, v44, v45, v46, v47);
      if (v172 == 4) {
        int v49 = 3;
      }
      else {
        int v49 = v172;
      }
      if (sub_1000C0270(v49, (__int16 *)a2, v36, v48) == 2) {
        goto LABEL_50;
      }
      int v173 = v39;
      int v50 = sub_1000CAD00(v48);
      int v51 = v50 + 1;
      uint64_t v169 = (unsigned __int8 *)v48;
      if (v50 > *(_DWORD *)(a1 + 144)) {
        *(_DWORD *)(a1 + 144) = v50;
      }
      int v52 = 16;
    }
    else
    {
      int v52 = v40;
      int v173 = v39;
      int v51 = 0;
      uint64_t v169 = 0;
    }
  }
  else
  {
    int v173 = v38;
    int v51 = 0;
    uint64_t v169 = 0;
    int v52 = 128;
  }
  if (a3) {
    unint64_t v53 = a3;
  }
  else {
    unint64_t v53 = (unsigned __int16 *)&unk_1000F653E;
  }
  int v54 = sub_1000CED6C((unint64_t)v53);
  if (v54 > *a7) {
    *a7 = v54;
  }
  if (v54 > *(_DWORD *)(a1 + 148)) {
    *(_DWORD *)(a1 + 148) = v54;
  }
  uint64_t v62 = (unsigned __int8 *)sub_1000CD3E8((4 * v54) | 1, v55, v56, v57, v58, v59, v60, v61);
  if (sub_10008814C(v62, v53, 0, *(_DWORD *)(a1 + 352), a1 + 356, 0) == 1) {
    goto LABEL_50;
  }
  int v63 = sub_1000CAD00((unint64_t)v62);
  if (!sub_100091544(a1, *(_DWORD *)(a1 + 48) + 1)) {
    goto LABEL_50;
  }
  uint64_t v166 = v62;
  int v164 = v63;
  int v64 = v63 + 1;
  unsigned int v167 = v173 + 1;
  int v65 = v51 + v173 + 1 + v64;
  uint64_t v66 = (void *)(a1 + 96);
  if (!sub_1000C3A90((const void **)(a1 + 96), (int *)(a1 + 108), (signed int *)(a1 + 104), 8, 1, *(_DWORD *)(a1 + 112) + v65))goto LABEL_50; {
  int v165 = v52;
  }
  int32x4_t v176 = 0;
  char v74 = -2;
  if (a5 == 1)
  {
    uint64_t v75 = (void **)a4;
    if (*(unsigned __int16 *)(a1 + 204) != 0xFFFF)
    {
      int v76 = sub_10009BF2C(*a4) + 1;
      int32x4_t v176 = (void *)sub_1000CD3E8(2 * v76, v77, v78, v79, v80, v81, v82, v83);
      j__memmove(v176, (const void *)*a4, 2 * v76);
      char v74 = sub_100095878((unsigned __int16 *)v176, *(unsigned __int16 *)(a1 + 204));
      uint64_t v75 = &v176;
    }
  }
  else
  {
    uint64_t v75 = (void **)a4;
  }
  char v168 = (unsigned __int16 **)v75;
  if (!*(_DWORD *)a1 && *(void *)(a1 + 8))
  {
    if (a11)
    {
      char v161 = v74;
      int v162 = v65;
      int v84 = 0;
      char v85 = 1;
      int v86 = *(_DWORD *)(a1 + 52);
      if (v86 > 16777209) {
        goto LABEL_56;
      }
LABEL_49:
      uint64_t v20 = (v86 + 1);
      *(_DWORD *)(a1 + 52) = v20;
      unint64_t v87 = *(unsigned int *)(a1 + 48);
      unsigned int v88 = (_DWORD *)(*(void *)(*(void *)(a1 + 32) + ((v87 >> 5) & 0x7FFFFF8))
                     + 12 * *(_DWORD *)(a1 + 48));
      goto LABEL_69;
    }
    if (a5 == 1)
    {
      char v161 = v74;
      int v159 = (unsigned __int16 *)sub_1000CD3E8(512, v67, v68, v69, v70, v71, v72, v73);
      if (*v53) {
        unint64_t v160 = (unint64_t)v53;
      }
      else {
        unint64_t v160 = (unint64_t)a2;
      }
      if (sub_100096158(*(void *)(a1 + 8), v160, a10 != 0, v159, 256, (uint64_t)&v177, 1, (uint64_t)&v178) == 1&& sub_100095830(v159, *v168))
      {
        int v162 = v65;
        sub_1000CD4D0(v159, 512);
        int v84 = 0;
        char v85 = 1;
        int v86 = *(_DWORD *)(a1 + 52);
        if (v86 > 16777209) {
          goto LABEL_56;
        }
        goto LABEL_49;
      }
      sub_1000CD4D0(v159, 512);
      char v74 = v161;
    }
  }
  int v84 = sub_1000957D0((uint64_t)v168, a5) + 1;
  if (!sub_1000C3A90((const void **)(a1 + 120), (int *)(a1 + 132), (signed int *)(a1 + 128), 8, 1, *(_DWORD *)(a1 + 136) + v84))
  {
LABEL_50:
    sub_1000CD534(v174);
    return 0xFFFFFFLL;
  }
  char v161 = v74;
  int v162 = v65;
  char v85 = 0;
  int v86 = *(_DWORD *)(a1 + 52);
  if (v86 <= 16777209) {
    goto LABEL_49;
  }
LABEL_56:
  int v90 = *(_DWORD *)(a1 + 280);
  int v91 = *(_DWORD *)(a1 + 48);
  if (v91 < 1)
  {
    LODWORD(v87) = 0;
    uint64_t v20 = *(unsigned int *)(a1 + 280);
  }
  else
  {
    LODWORD(v87) = 0;
    while (1)
    {
      uint64_t v20 = (v90 + v87);
      if (v20 != *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8 * (v87 >> 8))
                                    + 12 * v87
                                    + 8))
        break;
      LODWORD(v87) = v87 + 1;
      if (v91 == v87)
      {
        LODWORD(v87) = *(_DWORD *)(a1 + 48);
        uint64_t v20 = (v91 + v90);
        goto LABEL_64;
      }
    }
    if (v91 > (int)v87)
    {
      do
      {
        int v92 = v91 - 1;
        uint64_t v93 = *(void *)(a1 + 32);
        uint64_t v94 = *(void *)(v93 + 8 * ((v91 - 1) >> 8)) + 12 * (v91 - 1);
        uint64_t v95 = *(void *)(v93 + 8 * (v91 >> 8)) + 12 * v91;
        uint64_t v96 = *(void *)v94;
        *(_DWORD *)(v95 + 8) = *(_DWORD *)(v94 + 8);
        *(void *)uint64_t v95 = v96;
        int v91 = v92;
      }
      while (v92 > (int)v87);
    }
  }
LABEL_64:
  unsigned int v88 = (_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8 * (v87 >> 8)) + 12 * v87);
  int v97 = *(_DWORD *)(a1 + 72);
  if (v97 >= 1)
  {
    for (int i = 0; i < v97; ++i)
    {
      uint64_t v99 = *(void *)(*(void *)(a1 + 56) + 8 * (i >> 8));
      unsigned int v100 = *(unsigned __int16 *)(v99 + 2 * i);
      if (v87 <= v100)
      {
        *(_WORD *)(v99 + 2 * i) = v100 + 1;
        int v97 = *(_DWORD *)(a1 + 72);
      }
    }
  }
LABEL_69:
  *unsigned int v88 = *(_DWORD *)(a1 + 112);
  if (v85) {
    int v101 = -1;
  }
  else {
    int v101 = *(_DWORD *)(a1 + 136);
  }
  v88[1] = v101;
  v88[2] = v20;
  unsigned int v102 = sub_10008F4CC(a1, v170, v167, v69, v70, v71, v72, v73);
  for (unsigned int j = *(_DWORD *)(a1 + 72); (int)j > (int)v102; --j)
    *(_WORD *)(*(void *)(*(void *)(a1 + 56) + 8 * (j >> 8)) + 2 * j) = *(_WORD *)(*(void *)(*(void *)(a1 + 56) + 8 * ((j - 1) >> 8)) + 2 * (j - 1));
  *(_WORD *)(*(void *)(*(void *)(a1 + 56) + 8 * (v102 >> 8)) + 2 * v102) = v87;
  ++*(_DWORD *)(a1 + 72);
  uint64_t v163 = v87 >> 8;
  if (v171)
  {
    for (int k = *(_DWORD *)(a1 + 48); k > (int)v87; --k)
      *(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8 * (k >> 8)) + k) = *(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8 * ((k - 1) >> 8)) + (k - 1));
    *(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8 * v163) + v87) = v165;
  }
  unint64_t v105 = *(unsigned int *)(a1 + 112);
  int v106 = *v170;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 96) + ((v105 >> 5) & 0x7FFFFF8)) + *(_DWORD *)(a1 + 112)) = v106;
  if (v106)
  {
    unsigned int v107 = v105 + 1;
    unsigned int v108 = v170 + 1;
    do
    {
      int v109 = *v108++;
      *(unsigned char *)(*(void *)(*v66 + 8 * (v107 >> 8)) + v107) = v109;
      ++v107;
    }
    while (v109);
  }
  int v110 = *v166;
  *(unsigned char *)(*(void *)(*v66 + 8 * ((v105 + v167) >> 8)) + (v105 + v167)) = v110;
  if (v110)
  {
    unsigned int v111 = v173 + v105 + 2;
    uint64_t v112 = v166 + 1;
    do
    {
      int v113 = *v112++;
      *(unsigned char *)(*(void *)(*v66 + 8 * (v111 >> 8)) + v111) = v113;
      ++v111;
    }
    while (v113);
  }
  if (v171)
  {
    if (v165 == 16)
    {
      int v114 = *v169;
      *(unsigned char *)(*(void *)(*v66 + 8 * ((v105 + v167 + v64) >> 8))
               + (v105 + v167 + v64)) = v114;
      if (v114)
      {
        unsigned int v115 = v173 + v164 + v105 + 3;
        unsigned int v116 = v169 + 1;
        do
        {
          int v117 = *v116++;
          *(unsigned char *)(*(void *)(*v66 + 8 * (v115 >> 8)) + v115) = v117;
          ++v115;
        }
        while (v117);
      }
    }
  }
  if ((v85 & 1) == 0)
  {
    unint64_t v118 = *(unsigned int *)(a1 + 136);
    *(unsigned char *)(*(void *)(*(void *)(a1 + 120) + ((v118 >> 5) & 0x7FFFFF8)) + *(_DWORD *)(a1 + 136)) = a5;
    int v119 = sub_1000957D0((uint64_t)v168, a5);
    uint64_t v127 = (char *)sub_1000CD3E8(v119, v120, v121, v122, v123, v124, v125, v126);
    sub_100095704((unint64_t)v168, v127, a5);
    if (v119 >= 1)
    {
      unsigned int v128 = v118 + 1;
      do
      {
        char v129 = *v127++;
        *(unsigned char *)(*(void *)(*(void *)(a1 + 120) + 8 * (v128 >> 8)) + v128) = v129;
        ++v128;
        --v119;
      }
      while (v119);
    }
  }
  if ((int)a5 >= 1)
  {
    uint64_t v130 = a5;
    int v131 = v168;
    do
    {
      int v132 = sub_10009BF2C(*a4);
      if (v132 > *v175) {
        *int32x4_t v175 = v132;
      }
      if (v132 > *(_DWORD *)(a1 + 152)) {
        *(_DWORD *)(a1 + 152) = v132;
      }
      int v133 = sub_100095428(*(void *)(a1 + 296), *(_DWORD *)(a1 + 288), *(void *)(a1 + 232), *(void *)(a1 + 240), *v131);
      if (v133 <= *a9)
      {
        if (v133 > *(_DWORD *)(a1 + 156)) {
LABEL_104:
        }
          *(_DWORD *)(a1 + 156) = v133;
      }
      else
      {
        *a9 = v133;
        if (v133 > *(_DWORD *)(a1 + 156)) {
          goto LABEL_104;
        }
      }
      ++v131;
      ++a4;
      --v130;
    }
    while (v130);
  }
  if (*(_DWORD *)(a1 + 160) >= (int)a5)
  {
    uint64_t v134 = v174;
    int v135 = v162;
    int v136 = v168;
    if (*(_DWORD *)(a1 + 164) >= (int)a5)
    {
LABEL_107:
      int v137 = v84;
      if ((int)a5 < 1) {
        goto LABEL_124;
      }
LABEL_111:
      uint64_t v138 = 0;
      do
      {
        for (uint64_t m = v136[v138]; ; ++m)
        {
          int v140 = *m;
          if (v140 == 0xFFFF) {
            break;
          }
          int v141 = *(_DWORD *)(a1 + 288);
          BOOL v142 = __OFSUB__(v140, v141);
          int v143 = v140 - v141;
          if (!((v143 < 0) ^ v142 | (v143 == 0)))
          {
            uint64_t v144 = v143 - 1;
            uint64_t v145 = *(void *)(a1 + 272);
            unsigned int v146 = *(unsigned __int8 *)(v145 + v144);
            if (v146 <= 0xFD) {
              *(unsigned char *)(v145 + v144) = v146 + 1;
            }
            uint64_t v147 = *(void *)(a1 + 232);
            uint64_t v148 = *(unsigned __int16 *)(*(void *)(a1 + 240) + 2 * v143);
            int v149 = *(unsigned __int16 *)(v147 + 2 * v148);
            if (v149 != 0xFFFF)
            {
              uint64_t v150 = (unsigned __int16 *)(v147 + 2 * v148 + 2);
              do
              {
                int v152 = ~*(_DWORD *)(a1 + 284) + v149;
                uint64_t v153 = *(void *)(a1 + 264);
                unsigned int v154 = *(unsigned __int8 *)(v153 + v152);
                if (v154 <= 0xFD) {
                  *(unsigned char *)(v153 + v152) = v154 + 1;
                }
                int v151 = *v150++;
                int v149 = v151;
              }
              while (v151 != 0xFFFF);
            }
          }
        }
        ++v138;
      }
      while (v138 != a5);
      goto LABEL_124;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 160) = a5;
    uint64_t v134 = v174;
    int v135 = v162;
    int v136 = v168;
    if (*(_DWORD *)(a1 + 164) >= (int)a5) {
      goto LABEL_107;
    }
  }
  *(_DWORD *)(a1 + 164) = a5;
  int v137 = v84;
  if ((int)a5 >= 1) {
    goto LABEL_111;
  }
LABEL_124:
  int v155 = *(_DWORD *)(a1 + 48);
  if ((int)v87 < v155)
  {
    do
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 168) + 8 * (v155 >> 8)) + v155) = *(unsigned char *)(*(void *)(*(void *)(a1 + 168) + 8 * ((v155 - 1) >> 8)) + (v155 - 1));
      --v155;
    }
    while (v155 > (int)v87);
    for (int n = *(_DWORD *)(a1 + 48); n > (int)v87; --n)
      *(unsigned char *)(*(void *)(*(void *)(a1 + 184) + 8 * (n >> 8)) + n) = *(unsigned char *)(*(void *)(*(void *)(a1 + 184) + 8 * ((n - 1) >> 8)) + (n - 1));
    if (*(void *)(a1 + 208))
    {
      for (iint i = *(_DWORD *)(a1 + 48); ii > (int)v87; --ii)
        *(unsigned char *)(*(void *)(*(void *)(a1 + 208) + 8 * (ii >> 8)) + ii) = *(unsigned char *)(*(void *)(*(void *)(a1 + 208) + 8 * ((ii - 1) >> 8)) + (ii - 1));
    }
  }
  uint64_t v158 = 8 * (v87 >> 8);
  *(unsigned char *)(*(void *)(*(void *)(a1 + 168) + v158) + v87) = a10;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 184) + v158) + v87) = *(_DWORD *)(a1 + 200);
  if (*(__int16 *)(a1 + 204) != -1) {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 208) + 8 * v163) + v87) = v161;
  }
  ++*(_DWORD *)(a1 + 48);
  *(_DWORD *)(a1 + 112) += v135;
  *(_DWORD *)(a1 + 136) += v137;
  sub_1000CD534(v134);
  return v20;
}

uint64_t sub_100091544(uint64_t a1, int a2)
{
  uint64_t result = sub_1000C3A90((const void **)(a1 + 32), (int *)(a1 + 44), (signed int *)(a1 + 40), 8, 12, a2);
  if (result)
  {
    uint64_t result = sub_1000C3A90((const void **)(a1 + 56), (int *)(a1 + 68), (signed int *)(a1 + 64), 8, 2, a2);
    if (result)
    {
      uint64_t result = sub_1000C3A90((const void **)(a1 + 168), (int *)(a1 + 180), (signed int *)(a1 + 176), 8, 1, a2);
      if (result)
      {
        uint64_t result = sub_1000C3A90((const void **)(a1 + 184), (int *)(a1 + 196), (signed int *)(a1 + 192), 8, 1, a2);
        if (result)
        {
          if (!*(_DWORD *)(a1 + 20)
            || (uint64_t result = sub_1000C3A90((const void **)(a1 + 80), (int *)(a1 + 92), (signed int *)(a1 + 88), 8, 1, a2),
                result))
          {
            if (*(__int16 *)(a1 + 204) != -1)
            {
              return sub_1000C3A90((const void **)(a1 + 208), (int *)(a1 + 220), (signed int *)(a1 + 216), 8, 1, a2);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100091650(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (*(_DWORD *)(a1 + 280) > (int)a2) {
    return 0;
  }
  int v9 = a2;
  uint64_t v11 = *(unsigned int *)(a1 + 144);
  if ((int)v11 >= 1)
  {
    int v101 = v11 + 1;
    int v12 = (unsigned __int8 *)sub_1000CD3E8(v11 + 1, a2, (uint64_t)a3, a4, a5, a6, a7, a8);
    int v13 = *(_DWORD *)(a1 + 48);
    if (v13 > 0) {
      goto LABEL_5;
    }
LABEL_14:
    int v14 = 0;
    uint64_t v16 = *(void *)(a1 + 32);
    goto LABEL_15;
  }
  int v101 = 0;
  int v12 = 0;
  int v13 = *(_DWORD *)(a1 + 48);
  if (v13 <= 0) {
    goto LABEL_14;
  }
LABEL_5:
  int v14 = 0;
  int v15 = v13 - 1;
  uint64_t v16 = *(void *)(a1 + 32);
  do
  {
    int v17 = v14 + v15;
    if (v14 + v15 < 0 != __OFADD__(v14, v15)) {
      ++v17;
    }
    unsigned int v18 = v17 >> 1;
    if (*(_DWORD *)(*(void *)(v16 + 8 * (v18 >> 8)) + 12 * v18 + 8) >= v9) {
      int v15 = v18 - 1;
    }
    else {
      int v14 = v18 + 1;
    }
  }
  while (v14 <= v15);
LABEL_15:
  uint64_t v19 = v14 >> 8;
  uint64_t v20 = (unsigned int *)(*(void *)(v16 + 8 * v19) + 12 * v14);
  unint64_t v21 = *v20;
  unint64_t v22 = v20[1];
  uint64_t v23 = *(void *)(*(void *)(a1 + 96) + ((v21 >> 5) & 0x7FFFFF8));
  unsigned __int8 *v12 = *(unsigned char *)(v23 + v21);
  if (*(unsigned char *)(v23 + v21))
  {
    unsigned int v24 = v21 + 1;
    uint64_t v25 = v12 + 1;
    do
    {
      uint64_t v26 = *(void *)(*(void *)(a1 + 96) + 8 * (v24 >> 8));
      *v25++ = *(unsigned char *)(v26 + v24);
      LODWORD(v26) = *(unsigned __int8 *)(v26 + v24++);
    }
    while (v26);
  }
  int v27 = v12;
  int v28 = sub_1000CAD00((unint64_t)v12);
  uint64_t v29 = (v28 + 1);
  uint64_t v99 = v27;
  unsigned int v35 = sub_10008F4CC(a1, v27, v29, v30, v31, v32, v33, v34);
  uint64_t v36 = *(void *)(a1 + 96);
  if (*(unsigned char *)(*(void *)(v36 + 8 * ((v28 + 1 + v21) >> 8)) + (v28 + 1 + v21)))
  {
    int v37 = 0;
    int v38 = a3;
    int v39 = v101;
    do
    {
      int v40 = v37 + 1;
      int v41 = *(unsigned __int8 *)(*(void *)(v36 + 8 * ((v28 + v21 + 2 + v37) >> 8))
                               + (v28 + v21 + 2 + v37));
      ++v37;
    }
    while (v41);
    int v42 = v40 + 1;
    int v43 = v40 + 1 + v29;
    int v44 = *(_DWORD *)(a1 + 20);
    if (!v44) {
      goto LABEL_31;
    }
  }
  else
  {
    int v40 = 0;
    int v38 = a3;
    int v39 = v101;
    int v42 = 1;
    int v43 = v28 + 2;
    int v44 = *(_DWORD *)(a1 + 20);
    if (!v44) {
      goto LABEL_31;
    }
  }
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8 * v19) + v14) == 16)
  {
    if (*(unsigned char *)(*(void *)(v36 + 8 * ((v42 + v28 + 1 + v21) >> 8))
                  + (v42 + v28 + 1 + v21)))
    {
      int v45 = 0;
      int v46 = v28 + v40 + v21 + 3;
      do
      {
        int v47 = v45 + 1;
        int v48 = *(unsigned __int8 *)(*(void *)(v36 + 8 * ((v46 + v45) >> 8))
                                 + (v46 + v45));
        ++v45;
      }
      while (v48);
    }
    else
    {
      int v47 = 0;
    }
    v43 += v47 + 1;
  }
LABEL_31:
  int v49 = *(_DWORD *)(a1 + 72);
  if ((int)v35 < v49)
  {
    while (v14 != *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 56) + 8 * (v35 >> 8))
                                       + 2 * v35))
    {
      if (v49 == ++v35)
      {
        *(_DWORD *)(a1 + 72) = v49 - 1;
        goto LABEL_38;
      }
    }
  }
  int v50 = v49 - 1;
  *(_DWORD *)(a1 + 72) = v50;
  if ((int)v35 < v50)
  {
    do
    {
      *(_WORD *)(*(void *)(*(void *)(a1 + 56) + 8 * (v35 >> 8)) + 2 * v35) = *(_WORD *)(*(void *)(*(void *)(a1 + 56) + 8 * ((v35 + 1) >> 8)) + 2 * (v35 + 1));
      ++v35;
    }
    while ((signed int)v35 < *(_DWORD *)(a1 + 72));
    int v44 = *(_DWORD *)(a1 + 20);
  }
LABEL_38:
  int v51 = *(_DWORD *)(a1 + 48) - 1;
  *(_DWORD *)(a1 + 48) = v51;
  if (v44 && v14 < v51)
  {
    int v52 = v14;
    do
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8 * (v52 >> 8)) + v52) = *(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8 * ((v52 + 1) >> 8)) + (v52 + 1));
      ++v52;
    }
    while (v52 < *(_DWORD *)(a1 + 48));
  }
  int v53 = *(_DWORD *)(a1 + 112) - v43;
  *(_DWORD *)(a1 + 112) = v53;
  int v54 = v53 - v21;
  if (v54 >= 1)
  {
    for (int i = 0; i < v54; ++i)
      *(unsigned char *)(*(void *)(*(void *)(a1 + 96) + 8 * ((v21 + i) >> 8)) + (v21 + i)) = *(unsigned char *)(*(void *)(*(void *)(a1 + 96) + 8 * ((v43 + v21 + i) >> 8)) + (v43 + v21 + i));
  }
  *int v38 = 0;
  if (v22 == -1)
  {
    int v65 = 0;
  }
  else
  {
    int v102 = v39;
    unint64_t v56 = v22 >> 8;
    int v57 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 120) + 8 * (v22 >> 8)) + v22);
    unsigned int v58 = v22 + 1;
    unsigned int v103 = v22 + 1;
    int v98 = v43;
    for (int j = 0; v57; --v57)
    {
      if (sub_100092FC0(a1, &v103)) {
        int j = 1;
      }
    }
    *a3 = j;
    uint64_t v60 = *(void *)(a1 + 120);
    if (*(unsigned char *)(*(void *)(v60 + 8 * v56) + v22))
    {
      int v61 = 0;
      int v39 = v102;
      int v43 = v98;
      do
      {
        int v62 = *(unsigned __int8 *)(*(void *)(v60 + 8 * (v58 >> 8)) + v58);
        unsigned int v63 = v58 + 1;
        if (*(unsigned char *)(*(void *)(v60 + 8 * (v58 >> 8)) + v58))
        {
          do
          {
            if (*(char *)(*(void *)(v60 + 8 * (v63 >> 8)) + v63) >= 0) {
              int v64 = 1;
            }
            else {
              int v64 = 2;
            }
            v63 += v64;
            --v62;
          }
          while (v62);
        }
        ++v61;
        unsigned int v58 = v63;
      }
      while (v61 != *(unsigned __int8 *)(*(void *)(v60 + 8 * v56) + v22));
    }
    else
    {
      unsigned int v63 = v22 + 1;
      int v39 = v102;
      int v43 = v98;
    }
    int v65 = v63 - v22;
    int v66 = *(_DWORD *)(a1 + 136);
    *(_DWORD *)(a1 + 136) = v66 - (v63 - v22);
    if ((int)(v66 - v63) >= 1)
    {
      unsigned int v67 = v22;
      do
      {
        *(unsigned char *)(*(void *)(*(void *)(a1 + 120) + 8 * (v67 >> 8)) + v67) = *(unsigned char *)(*(void *)(*(void *)(a1 + 120) + 8 * (v63 >> 8)) + v63);
        ++v67;
        ++v63;
      }
      while (v66 != v63);
    }
  }
  int v68 = *(_DWORD *)(a1 + 48);
  if (*(__int16 *)(a1 + 204) != -1 && v14 < v68)
  {
    int v70 = v14;
    do
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 208) + 8 * (v70 >> 8)) + v70) = *(unsigned char *)(*(void *)(*(void *)(a1 + 208) + 8 * ((v70 + 1) >> 8)) + (v70 + 1));
      int v68 = *(_DWORD *)(a1 + 48);
      ++v70;
    }
    while (v70 < v68);
  }
  if (v14 < v68)
  {
    int v71 = v14;
    do
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 168) + 8 * (v71 >> 8)) + v71) = *(unsigned char *)(*(void *)(*(void *)(a1 + 168) + 8 * ((v71 + 1) >> 8)) + (v71 + 1));
      int v68 = *(_DWORD *)(a1 + 48);
      ++v71;
    }
    while (v71 < v68);
  }
  if (v14 < v68)
  {
    int v72 = v14;
    do
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 184) + 8 * (v72 >> 8)) + v72) = *(unsigned char *)(*(void *)(*(void *)(a1 + 184) + 8 * ((v72 + 1) >> 8)) + (v72 + 1));
      int v68 = *(_DWORD *)(a1 + 48);
      ++v72;
    }
    while (v72 < v68);
  }
  if (v14 < v68)
  {
    unsigned int v73 = v14;
    do
    {
      uint64_t v74 = *(void *)(a1 + 32);
      unsigned int v75 = v73 >> 8;
      unsigned int v76 = v73;
      int v77 = v73 + 1;
      uint64_t v78 = *(void *)(v74 + 8 * ((v73 + 1) >> 8)) + 12 * (v73 + 1);
      uint64_t v79 = *(void *)(v74 + 8 * v75) + 12 * v76;
      uint64_t v80 = *(void *)v78;
      *(_DWORD *)(v79 + 8) = *(_DWORD *)(v78 + 8);
      *(void *)uint64_t v79 = v80;
      int v68 = *(_DWORD *)(a1 + 48);
      unsigned int v73 = v77;
    }
    while (v77 < v68);
  }
  if (v68 >= 1)
  {
    for (int k = 0; k < v68; ++k)
    {
      uint64_t v82 = k >> 8;
      uint64_t v83 = *(void *)(*(void *)(a1 + 32) + 8 * v82);
      int v84 = (int *)(v83 + 12 * k);
      int v85 = *v84;
      if (*v84 <= (int)v21 || v85 == -1)
      {
        uint64_t v87 = v83 + 12 * k;
        int v90 = *(_DWORD *)(v87 + 4);
        unsigned int v88 = (_DWORD *)(v87 + 4);
        int v89 = v90;
        if (v90 <= (int)v22 || v89 == -1)
        {
LABEL_93:
          uint64_t v92 = *(void *)(*(void *)(a1 + 56) + 8 * v82);
          int v93 = *(unsigned __int16 *)(v92 + 2 * k);
          if (v14 < v93) {
            goto LABEL_100;
          }
          goto LABEL_82;
        }
      }
      else
      {
        int *v84 = v85 - v43;
        uint64_t v94 = v83 + 12 * k;
        int v95 = *(_DWORD *)(v94 + 4);
        unsigned int v88 = (_DWORD *)(v94 + 4);
        int v89 = v95;
        if (v95 <= (int)v22 || v89 == -1) {
          goto LABEL_93;
        }
      }
      *unsigned int v88 = v89 - v65;
      uint64_t v92 = *(void *)(*(void *)(a1 + 56) + 8 * v82);
      int v93 = *(unsigned __int16 *)(v92 + 2 * k);
      if (v14 < v93) {
LABEL_100:
      }
        *(_WORD *)(v92 + 2 * k) = v93 - 1;
LABEL_82:
      int v68 = *(_DWORD *)(a1 + 48);
    }
  }
  if (*(_DWORD *)(a1 + 52) == v9)
  {
    if (*(int *)(a1 + 72) < 1) {
      int v97 = *(_DWORD *)(a1 + 280) - 1;
    }
    else {
      int v97 = *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8 * ((v68 - 1) >> 8))
    }
                      + 12 * (v68 - 1)
                      + 8);
    *(_DWORD *)(a1 + 52) = v97;
  }
  if (*(int *)(a1 + 144) >= 1) {
    sub_1000CD4D0(v99, v39);
  }
  return 1;
}

uint64_t sub_100091D6C(uint64_t a1)
{
  return *(void *)(a1 + 264);
}

BOOL sub_100091D74(uint64_t a1, int a2)
{
  if (*(_DWORD *)(a1 + 52) < a2) {
    return 0;
  }
  int v2 = *(_DWORD *)(a1 + 48);
  int v3 = 0;
  int v4 = v2 - 1;
  if (v2 >= 1)
  {
    do
    {
      int v5 = v3 + v4;
      if (v3 + v4 < 0 != __OFADD__(v3, v4)) {
        ++v5;
      }
      unsigned int v6 = v5 >> 1;
      if (*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8 * (v6 >> 8)) + 12 * v6 + 8) >= a2) {
        int v4 = v6 - 1;
      }
      else {
        int v3 = v6 + 1;
      }
    }
    while (v3 <= v4);
  }
  return v3 < v2
      && *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8 * (v3 >> 8)) + 12 * v3 + 8) == a2;
}

uint64_t sub_100091E08(uint64_t a1, unsigned __int16 *a2)
{
  int v2 = *a2;
  if (v2 == 0xFFFF) {
    return 1;
  }
  int v3 = a2 + 1;
  int v4 = *(_DWORD *)(a1 + 288);
  int v5 = ~v4;
  if (qword_100101CC0)
  {
    while (1)
    {
      if (v4 < v2)
      {
        uint64_t v7 = v2 + v5;
        if (*(void *)(qword_100101CC0 + 3992) <= v7 || *(unsigned __int8 *)(*(void *)(a1 + 272) + v7) == 255) {
          break;
        }
      }
      int v6 = *v3++;
      int v2 = v6;
      if (v6 == 0xFFFF) {
        return 1;
      }
    }
  }
  else
  {
    while (1)
    {
      if (v4 < v2)
      {
        int v9 = v2 + v5;
        if (v9 >= 0 || *(unsigned __int8 *)(*(void *)(a1 + 272) + v9) == 255) {
          break;
        }
      }
      int v8 = *v3++;
      int v2 = v8;
      if (v8 == 0xFFFF) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_100091EBC(uint64_t a1, uint64_t a2, unsigned __int16 *a3, int a4, int *a5, _DWORD *a6)
{
  uint64_t v200 = 0;
  v201[0] = a3;
  uint64_t v199 = 0;
  int32x4_t v197 = 0;
  __src = 0;
  int v10 = sub_1000957D0((uint64_t)v201, 1);
  uint64_t v11 = sub_1000CD550();
  int v12 = (uint64_t *)(a1 + 120);
  if (!sub_1000C3A90((const void **)(a1 + 120), (int *)(a1 + 132), (signed int *)(a1 + 128), 8, 1, *(_DWORD *)(a1 + 136) + v10 + 1))return 0; {
  int v17 = *v201[0];
  }
  if (v17 != 0xFFFF)
  {
    int v18 = *(_DWORD *)(a1 + 288);
    uint64_t v19 = v201[0] + 1;
    while ((unsigned __int16)v17 <= (unsigned __int16)(*(_WORD *)(a1 + 256) + v18)
         && (v18 >= (unsigned __int16)v17
          || *(unsigned __int8 *)(*(void *)(a1 + 272) + (unsigned __int16)v17 + ~v18) != 255))
    {
      int v20 = *v19++;
      LOWORD(v17) = v20;
      if (v20 == 0xFFFF) {
        goto LABEL_9;
      }
    }
    return 0;
  }
LABEL_9:
  int v22 = *(_DWORD *)(a1 + 48);
  int v23 = v22 - 1;
  int8x16_t v194 = a6;
  int32x4_t v195 = a5;
  int v24 = 0;
  if (v22 >= 1)
  {
    do
    {
      int v25 = v24 + v23;
      if (v24 + v23 < 0 != __OFADD__(v24, v23)) {
        ++v25;
      }
      unsigned int v26 = v25 >> 1;
      if (*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8 * (v26 >> 8)) + 12 * v26 + 8) >= (int)a2) {
        int v23 = v26 - 1;
      }
      else {
        int v24 = v26 + 1;
      }
    }
    while (v24 <= v23);
  }
  if (v24 >= v22
    || (uint64_t v27 = v24 >> 8,
        uint64_t v28 = *(void *)(*(void *)(a1 + 32) + 8 * v27),
        *(_DWORD *)(v28 + 12 * v24 + 8) != a2))
  {
    if (!sub_100091544(a1, v22 + 1)) {
      goto LABEL_130;
    }
    int v37 = *(_DWORD *)(a1 + 48);
    if (v37 > v24)
    {
      do
      {
        int v38 = v37 - 1;
        uint64_t v39 = *(void *)(a1 + 32);
        uint64_t v40 = *(void *)(v39 + 8 * ((v37 - 1) >> 8)) + 12 * (v37 - 1);
        uint64_t v41 = *(void *)(v39 + 8 * (v37 >> 8)) + 12 * v37;
        uint64_t v42 = *(void *)v40;
        *(_DWORD *)(v41 + 8) = *(_DWORD *)(v40 + 8);
        *(void *)uint64_t v41 = v42;
        int v37 = v38;
      }
      while (v38 > v24);
    }
    int v43 = (_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8 * (v24 >> 8)) + 12 * v24);
    v43[2] = a2;
    int v44 = *(_DWORD *)(a1 + 136);
    *int v43 = -1;
    v43[1] = v44;
    int v45 = v43 + 1;
    int v46 = *(_DWORD *)(a1 + 48);
    if (*(_DWORD *)(a1 + 20) && v46 > v24)
    {
      do
      {
        *(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8 * (v46 >> 8)) + v46) = *(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8 * ((v46 - 1) >> 8)) + (v46 - 1));
        --v46;
      }
      while (v46 > v24);
      int v46 = *(_DWORD *)(a1 + 48);
      if (!*(void *)(a1 + 208)) {
        goto LABEL_34;
      }
    }
    else if (!*(void *)(a1 + 208))
    {
      goto LABEL_34;
    }
    if (v46 > v24)
    {
      do
      {
        *(unsigned char *)(*(void *)(*(void *)(a1 + 208) + 8 * (v46 >> 8)) + v46) = *(unsigned char *)(*(void *)(*(void *)(a1 + 208) + 8 * ((v46 - 1) >> 8)) + (v46 - 1));
        --v46;
      }
      while (v46 > v24);
      int v46 = *(_DWORD *)(a1 + 48);
      if (v46 > v24)
      {
        do
        {
LABEL_35:
          *(unsigned char *)(*(void *)(*(void *)(a1 + 168) + 8 * (v46 >> 8)) + v46) = *(unsigned char *)(*(void *)(*(void *)(a1 + 168) + 8 * ((v46 - 1) >> 8)) + (v46 - 1));
          --v46;
        }
        while (v46 > v24);
        int v46 = *(_DWORD *)(a1 + 48);
        if (v46 <= v24) {
          goto LABEL_40;
        }
        goto LABEL_39;
      }
LABEL_38:
      if (v46 <= v24)
      {
LABEL_40:
        int v47 = *(_DWORD *)(a1 + 72);
        if (v47 >= 1)
        {
          for (int i = 0; i < v47; ++i)
          {
            uint64_t v49 = *(void *)(*(void *)(a1 + 56) + 8 * (i >> 8));
            int v50 = *(unsigned __int16 *)(v49 + 2 * i);
            if (v24 <= v50)
            {
              *(_WORD *)(v49 + 2 * i) = v50 + 1;
              int v47 = *(_DWORD *)(a1 + 72);
            }
          }
        }
        uint64_t v193 = v11;
        int v183 = 0;
        signed int v186 = 0;
        BOOL v192 = 0;
        int32x4_t v189 = 0;
        ++*(_DWORD *)(a1 + 48);
        unint64_t v51 = *v45;
        int v52 = 1;
        *(unsigned char *)(*(void *)(*(void *)(a1 + 120) + ((v51 >> 5) & 0x7FFFFF8)) + v51) = 1;
        unsigned int v53 = v51 + 1;
        ++v10;
LABEL_46:
        int v54 = sub_1000957D0((uint64_t)v201, 1);
        uint64_t v55 = v54;
        unsigned int v63 = (char *)sub_1000CD3E8(v54, v56, v57, v58, v59, v60, v61, v62);
        sub_100095704((unint64_t)v201, v63, 1);
        if (v54 >= 1)
        {
          int v64 = v63;
          do
          {
            char v65 = *v64++;
            *(unsigned char *)(*(void *)(*v12 + 8 * (v53 >> 8)) + v53) = v65;
            ++v53;
            --v54;
          }
          while (v54);
        }
        sub_1000CD4D0(v63, v55);
        *(_DWORD *)(a1 + 136) += v10;
        if (*(__int16 *)(a1 + 204) != -1) {
          *(unsigned char *)(*(void *)(*(void *)(a1 + 208) + 8 * (v24 >> 8)) + v24) = -2;
        }
        if (v192)
        {
          sub_1000CD4D0(__src, 2 * v186);
          sub_1000CD4D0(v189, v183);
        }
        if (v52 <= *(_DWORD *)(a1 + 160))
        {
          int v66 = v52 + a4;
          if (v52 + a4 <= *(_DWORD *)(a1 + 164))
          {
LABEL_55:
            int v67 = sub_10009BF2C((unint64_t)v201[0]);
            uint64_t v11 = v193;
            if (v67 > *v195) {
              goto LABEL_56;
            }
            goto LABEL_60;
          }
        }
        else
        {
          *(_DWORD *)(a1 + 160) = v52;
          int v66 = v52 + a4;
          if (v52 + a4 <= *(_DWORD *)(a1 + 164)) {
            goto LABEL_55;
          }
        }
        *(_DWORD *)(a1 + 164) = v66;
        int v67 = sub_10009BF2C((unint64_t)v201[0]);
        uint64_t v11 = v193;
        if (v67 > *v195)
        {
LABEL_56:
          *int32x4_t v195 = v67;
          if (v67 <= *(_DWORD *)(a1 + 152)) {
            goto LABEL_62;
          }
          goto LABEL_61;
        }
LABEL_60:
        if (v67 <= *(_DWORD *)(a1 + 152))
        {
LABEL_62:
          int v68 = sub_100095428(*(void *)(a1 + 296), *(_DWORD *)(a1 + 288), *(void *)(a1 + 232), *(void *)(a1 + 240), v201[0]);
          if (v68 > *v194) {
            *int8x16_t v194 = v68;
          }
          if (v68 > *(_DWORD *)(a1 + 156)) {
            *(_DWORD *)(a1 + 156) = v68;
          }
          uint64_t v69 = v201[0];
          for (int j = *v201[0]; j != 0xFFFF; int j = v71)
          {
            int v72 = *(_DWORD *)(a1 + 288);
            BOOL v73 = __OFSUB__(j, v72);
            int v74 = j - v72;
            if (!((v74 < 0) ^ v73 | (v74 == 0)))
            {
              uint64_t v75 = v74 - 1;
              uint64_t v76 = *(void *)(a1 + 272);
              unsigned int v77 = *(unsigned __int8 *)(v76 + v75);
              if (v77 <= 0xFD) {
                *(unsigned char *)(v76 + v75) = v77 + 1;
              }
              uint64_t v78 = *(void *)(a1 + 232);
              uint64_t v79 = *(unsigned __int16 *)(*(void *)(a1 + 240) + 2 * v74);
              int v80 = *(unsigned __int16 *)(v78 + 2 * v79);
              if (v80 != 0xFFFF)
              {
                uint64_t v81 = (unsigned __int16 *)(v78 + 2 * v79 + 2);
                do
                {
                  int v83 = ~*(_DWORD *)(a1 + 284) + v80;
                  uint64_t v84 = *(void *)(a1 + 264);
                  unsigned int v85 = *(unsigned __int8 *)(v84 + v83);
                  if (v85 <= 0xFD) {
                    *(unsigned char *)(v84 + v83) = v85 + 1;
                  }
                  int v82 = *v81++;
                  int v80 = v82;
                }
                while (v82 != 0xFFFF);
              }
            }
            int v71 = v69[1];
            ++v69;
          }
          uint64_t v21 = 1;
          goto LABEL_131;
        }
LABEL_61:
        *(_DWORD *)(a1 + 152) = v67;
        goto LABEL_62;
      }
      do
      {
LABEL_39:
        *(unsigned char *)(*(void *)(*(void *)(a1 + 184) + 8 * (v46 >> 8)) + v46) = *(unsigned char *)(*(void *)(*(void *)(a1 + 184) + 8 * ((v46 - 1) >> 8)) + (v46 - 1));
        --v46;
      }
      while (v46 > v24);
      goto LABEL_40;
    }
LABEL_34:
    if (v46 > v24) {
      goto LABEL_35;
    }
    goto LABEL_38;
  }
  uint64_t v193 = v11;
  uint64_t v29 = v28 + 12 * v24;
  unsigned int v32 = *(_DWORD *)(v29 + 4);
  uint64_t v30 = (_DWORD *)(v29 + 4);
  unint64_t v31 = v32;
  BOOL v33 = v32 == 0xFFFFFFFFLL;
  LODWORD(v200) = v32;
  if (v32 != -1)
  {
    uint64_t v34 = *v12;
    unsigned int v35 = (unsigned __int8 *)(*(void *)(*v12 + ((v31 >> 5) & 0x7FFFFF8)) + v31);
    int v36 = *v35;
    if (v36 + a4 > 199)
    {
LABEL_20:
      uint64_t v21 = 0;
      uint64_t v11 = v193;
LABEL_131:
      sub_1000CD534(v11);
      return v21;
    }
    BOOL v192 = v33;
    unsigned int v115 = *(unsigned __int16 *)(a1 + 204);
    if (v115 == 0xFFFF
      || (uint64_t v116 = *(void *)(*(void *)(a1 + 208) + 8 * v27), !*(unsigned char *)(v116 + v24))
      || *(unsigned __int8 *)(v116 + v24) == 254)
    {
      unsigned int v117 = v31 + 1;
      if (*v35)
      {
        int v118 = 0;
        do
        {
          int v119 = *(unsigned __int8 *)(*(void *)(v34 + 8 * (v117 >> 8)) + v117);
          unsigned int v53 = v117 + 1;
          if (*(unsigned char *)(*(void *)(v34 + 8 * (v117 >> 8)) + v117))
          {
            do
            {
              if (*(char *)(*(void *)(v34 + 8 * (v53 >> 8)) + v53) >= 0) {
                int v120 = 1;
              }
              else {
                int v120 = 2;
              }
              v53 += v120;
              --v119;
            }
            while (v119);
          }
          ++v118;
          unsigned int v117 = v53;
        }
        while (v118 != v36);
      }
      else
      {
        unsigned int v53 = v31 + 1;
      }
      for (int k = *(_DWORD *)(a1 + 136); k > (int)v53; --k)
        *(unsigned char *)(*(void *)(*v12 + 8 * ((v10 - 1 + k) >> 8)) + (v10 - 1 + k)) = *(unsigned char *)(*(void *)(*v12 + 8 * ((k - 1) >> 8)) + (k - 1));
      int v122 = 0;
      int v183 = 0;
      signed int v186 = 0;
      uint64_t v123 = 0;
    }
    else
    {
      int v191 = *(unsigned __int8 *)(v116 + v24);
      if (v115 <= 0x7F) {
        int v122 = 1;
      }
      else {
        int v122 = 2;
      }
      if (!sub_1000C3A90((const void **)(a1 + 120), (int *)(a1 + 132), (signed int *)(a1 + 128), 8, 1, v122 + v10 + *(_DWORD *)(a1 + 136)))goto LABEL_20; {
      LODWORD(v200) = v31 + 1;
      }
      int v133 = sub_100090568(*(void *)(a1 + 120), (int)v31 + 1);
      int v141 = v133 + v31 + 1;
      int v142 = *(_DWORD *)(a1 + 136);
      uint64_t v182 = v116;
      if (v142 > v141)
      {
        do
        {
          *(unsigned char *)(*(void *)(*v12 + 8 * ((v122 + v10 - 1 + v142) >> 8))
                   + (v122 + v10 - 1 + v142)) = *(unsigned char *)(*(void *)(*v12
                                                                                      + 8
                                                                                      * ((v142 - 1) >> 8))
                                                                          + (v142 - 1));
          --v142;
        }
        while (v142 > v141);
        int v142 = *(_DWORD *)(a1 + 136);
      }
      unsigned int v53 = v141 + v122;
      *(_DWORD *)(a1 + 136) = v142 + v122;
      int v143 = v133 + v122;
      uint64_t v188 = v133 + v122;
      int32x4_t v180 = (char *)sub_1000CD3E8(v188, v134, v135, v136, v137, v138, v139, v140);
      uint64_t v184 = *(void *)(*(void *)(a1 + 120) + (((v31 + 1) >> 5) & 0xFFFFFF8));
      sub_1000905B0(a1, v180, (unsigned int *)&v200);
      uint64_t v185 = 2 * *(unsigned __int8 *)(v184 + (v31 + 1)) + 4;
      int32x4_t v197 = (char *)sub_1000CD3E8(v185, v144, v145, v146, v147, v148, v149, v150);
      sub_100095688((uint64_t)&v197, v180, 1);
      sub_10009593C(v197, v191, *(_WORD *)(a1 + 204));
      sub_100095704((unint64_t)&v197, v180, 1);
      if (v143 >= 1)
      {
        unsigned int v151 = v31 + 1;
        int v152 = v180;
        do
        {
          char v153 = *v152++;
          *(unsigned char *)(*(void *)(*v12 + 8 * (v151 >> 8)) + v151) = v153;
          ++v151;
          --v143;
        }
        while (v143);
      }
      sub_1000CD4D0(v197, v185);
      sub_1000CD4D0(v180, v188);
      int v183 = 0;
      signed int v186 = 0;
      uint64_t v123 = 0;
      *(unsigned char *)(v182 + v24) = -2;
    }
    goto LABEL_122;
  }
  if (a4 <= 198)
  {
    int32x4_t v181 = v30;
    BOOL v192 = v33;
    uint64_t v86 = sub_1000901EC(a1, a2, 0, 0, v13, v14, v15, v16) + 1;
    int32x4_t v190 = (char *)sub_1000CD3E8((int)v86, v87, v88, v89, v90, v91, v92, v93);
    int v183 = v86;
    sub_1000901EC(a1, a2, (uint64_t)v190, v86, v94, v95, v96, v97);
    uint64_t v98 = *v195 + 1;
    __src = (void *)sub_1000CD3E8(2 * v98, v99, v100, v101, v102, v103, v104, v105);
    BOOL v187 = *(unsigned char *)(*(void *)(*(void *)(a1 + 168) + 8 * v27) + v24) != 0;
    int v106 = sub_10009628C(*(void *)(a1 + 8), v190, *(_DWORD *)(a1 + 308), *(unsigned char *)(*(void *)(*(void *)(a1 + 168) + 8 * v27) + v24) != 0, __src, v98, (uint64_t)&v199, 1u, (uint64_t)&v200 + 4);
    if (SHIDWORD(v200) < 1)
    {
      signed int v186 = v98;
    }
    else
    {
      sub_1000CD4D0(__src, 2 * v98);
      uint64_t v107 = SHIDWORD(v200);
      __src = (void *)sub_1000CD3E8(2 * SHIDWORD(v200), v108, v109, v110, v111, v112, v113, v114);
      int v106 = sub_10009628C(*(void *)(a1 + 8), v190, *(_DWORD *)(a1 + 308), v187, __src, v107, (uint64_t)&v199, 1u, (uint64_t)&v200 + 4);
      signed int v186 = v107;
    }
    uint64_t v11 = v193;
    if (*(__int16 *)(a1 + 204) != -1)
    {
      uint64_t v124 = *(void *)(*(void *)(a1 + 208) + 8 * v27);
      if (*(unsigned char *)(v124 + v24))
      {
        if (*(unsigned __int8 *)(v124 + v24) != 254)
        {
          int v178 = *(unsigned __int8 *)(v124 + v24);
          int v179 = v106;
          if ((int)(sub_10009BF2C((unint64_t)__src) + 1) >= v186)
          {
            int v132 = (void *)sub_1000CD3E8(2 * (v186 + 1), v125, v126, v127, v128, v129, v130, v131);
            j__memmove(v132, __src, 2 * v186);
            __src = v132;
            ++v186;
            uint64_t v11 = v193;
          }
          else
          {
            int v132 = __src;
          }
          sub_10009593C((char *)v132, v178, *(_WORD *)(a1 + 204));
          *(unsigned char *)(v124 + v24) = -2;
          int v106 = v179;
        }
      }
    }
    if (v106)
    {
      int v154 = sub_1000957D0((uint64_t)&__src, 1);
      if (sub_1000C3A90((const void **)(a1 + 120), (int *)(a1 + 132), (signed int *)(a1 + 128), 8, 1, v10 + 1 + v154 + *(_DWORD *)(a1 + 136)))
      {
        unint64_t v162 = *(unsigned int *)(a1 + 136);
        LODWORD(v31) = v162;
        *int32x4_t v181 = v162;
        uint64_t v163 = (char *)sub_1000CD3E8(v154, v155, v156, v157, v158, v159, v160, v161);
        sub_100095704((unint64_t)&__src, v163, 1);
        unsigned int v35 = (unsigned __int8 *)(*(void *)(*(void *)(a1 + 120) + ((v162 >> 5) & 0x7FFFFF8)) + v162);
        *unsigned int v35 = 1;
        LODWORD(v200) = v31 + 1;
        if (v154 >= 1)
        {
          int v164 = v154;
          unsigned int v165 = v31 + 1;
          uint64_t v166 = v163;
          do
          {
            char v167 = *v166++;
            *(unsigned char *)(*(void *)(*v12 + 8 * (v165 >> 8)) + v165) = v167;
            ++v165;
            --v164;
          }
          while (v164);
        }
        unsigned int v53 = v31 + 1 + v154;
        sub_1000CD4D0(v163, v154);
        int v168 = v154;
        int v122 = 0;
        *(_DWORD *)(a1 + 136) += v168 + 1;
        uint64_t v123 = v190;
LABEL_122:
        int v169 = *(_DWORD *)(a1 + 48);
        if (v169 >= 1)
        {
          for (int m = 0; m < v169; ++m)
          {
            uint64_t v171 = *(void *)(*(void *)(a1 + 32) + 8 * (m >> 8)) + 12 * m;
            int v174 = *(_DWORD *)(v171 + 4);
            int v172 = (_DWORD *)(v171 + 4);
            int v173 = v174;
            if (v174 > (int)v31 && v173 != -1)
            {
              *int v172 = v122 + v10 + v173;
              int v169 = *(_DWORD *)(a1 + 48);
            }
          }
        }
        int32x4_t v189 = v123;
        unsigned __int8 v177 = *v35 + 1;
        *unsigned int v35 = v177;
        int v52 = v177;
        goto LABEL_46;
      }
    }
LABEL_130:
    uint64_t v21 = 0;
    goto LABEL_131;
  }
  return 0;
}

uint64_t sub_100092B08(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v9 = *(_DWORD *)(a1 + 48);
  if (v9 <= 0)
  {
    int v10 = 0;
    uint64_t v12 = *(void *)(a1 + 32);
  }
  else
  {
    int v10 = 0;
    int v11 = v9 - 1;
    uint64_t v12 = *(void *)(a1 + 32);
    do
    {
      int v13 = v10 + v11;
      if (v10 + v11 < 0 != __OFADD__(v10, v11)) {
        ++v13;
      }
      unsigned int v14 = v13 >> 1;
      if (*(_DWORD *)(*(void *)(v12 + 8 * (v14 >> 8)) + 12 * v14 + 8) >= (int)a2) {
        int v11 = v14 - 1;
      }
      else {
        int v10 = v14 + 1;
      }
    }
    while (v10 <= v11);
  }
  unint64_t v15 = *(unsigned int *)(*(void *)(v12 + 8 * (v10 >> 8)) + 12 * v10 + 4);
  uint64_t v16 = *(void *)(a1 + 120);
  uint64_t v17 = *(void *)(v16 + ((v15 >> 5) & 0x7FFFFF8));
  int v18 = *(unsigned __int8 *)(v17 + v15);
  unsigned int v59 = v15 + 1;
  int v19 = v18 - 1;
  if (v19)
  {
    *(unsigned char *)(v17 + v15) = v19;
    uint64_t v35 = *(void *)(a1 + 120);
    if (a3 - (int)a4 < 1)
    {
      LODWORD(v15) = v15 + 1;
    }
    else
    {
      int v36 = 0;
      unsigned int v37 = v15 + 1;
      do
      {
        int v38 = *(unsigned __int8 *)(*(void *)(v35 + 8 * (v37 >> 8)) + v37);
        LODWORD(v15) = v37 + 1;
        if (*(unsigned char *)(*(void *)(v35 + 8 * (v37 >> 8)) + v37))
        {
          do
          {
            if (*(char *)(*(void *)(v35 + 8 * (v15 >> 8)) + v15) >= 0) {
              int v39 = 1;
            }
            else {
              int v39 = 2;
            }
            LODWORD(v15) = v39 + v15;
            --v38;
          }
          while (v38);
        }
        ++v36;
        unsigned int v37 = v15;
      }
      while (v36 != a3 - a4);
    }
    uint64_t v45 = *(void *)(v35 + 8 * (v15 >> 8));
    unsigned int v59 = v15;
    int v46 = *(unsigned __int8 *)(v45 + v15);
    for (unsigned int i = v15 + 1; v46; --v46)
    {
      if (*(char *)(*(void *)(v35 + 8 * (i >> 8)) + i) >= 0) {
        int v48 = 1;
      }
      else {
        int v48 = 2;
      }
      i += v48;
    }
    int v42 = i - v15;
    *a5 = sub_100092FC0(a1, &v59);
    goto LABEL_59;
  }
  if (a4)
  {
    int v20 = *(unsigned __int8 *)(*(void *)(v16 + 8 * ((v15 + 1) >> 8)) + (v15 + 1));
    unsigned int v21 = v15 + 2;
    if (*(unsigned char *)(*(void *)(v16 + 8 * ((v15 + 1) >> 8)) + (v15 + 1)))
    {
      do
      {
        if (*(char *)(*(void *)(v16 + 8 * (v21 >> 8)) + v21) >= 0) {
          int v22 = 1;
        }
        else {
          int v22 = 2;
        }
        v21 += v22;
        --v20;
      }
      while (v20);
    }
    *a5 = sub_100092FC0(a1, &v59);
    int v23 = *(_DWORD *)(a1 + 48) - 1;
    *(_DWORD *)(a1 + 48) = v23;
    if (v10 < v23)
    {
      unsigned int v24 = v10;
      do
      {
        uint64_t v25 = *(void *)(a1 + 32);
        unsigned int v26 = v24 >> 8;
        unsigned int v27 = v24;
        int v28 = v24 + 1;
        uint64_t v29 = *(void *)(v25 + 8 * ((v24 + 1) >> 8)) + 12 * (v24 + 1);
        uint64_t v30 = *(void *)(v25 + 8 * v26) + 12 * v27;
        uint64_t v31 = *(void *)v29;
        *(_DWORD *)(v30 + 8) = *(_DWORD *)(v29 + 8);
        *(void *)uint64_t v30 = v31;
        int v23 = *(_DWORD *)(a1 + 48);
        unsigned int v24 = v28;
      }
      while (v28 < v23);
    }
    if (v23 >= 1)
    {
      for (int j = 0; j < v23; ++j)
      {
        uint64_t v33 = *(void *)(*(void *)(a1 + 56) + 8 * (j >> 8));
        int v34 = *(unsigned __int16 *)(v33 + 2 * j);
        if (v10 < v34)
        {
          *(_WORD *)(v33 + 2 * j) = v34 - 1;
          int v23 = *(_DWORD *)(a1 + 48);
        }
      }
    }
    if (*(_DWORD *)(a1 + 20) && v10 < v23)
    {
      int v40 = v10;
      do
      {
        *(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8 * (v40 >> 8)) + v40) = *(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8 * ((v40 + 1) >> 8)) + (v40 + 1));
        int v23 = *(_DWORD *)(a1 + 48);
        ++v40;
      }
      while (v40 < v23);
    }
    if (*(void *)(a1 + 208) && v10 < v23)
    {
      int v41 = v10;
      do
      {
        *(unsigned char *)(*(void *)(*(void *)(a1 + 208) + 8 * (v41 >> 8)) + v41) = *(unsigned char *)(*(void *)(*(void *)(a1 + 208) + 8 * ((v41 + 1) >> 8)) + (v41 + 1));
        int v23 = *(_DWORD *)(a1 + 48);
        ++v41;
      }
      while (v41 < v23);
    }
    int v42 = v21 - v15;
    if (v10 < v23)
    {
      int v43 = v10;
      do
      {
        *(unsigned char *)(*(void *)(*(void *)(a1 + 168) + 8 * (v43 >> 8)) + v43) = *(unsigned char *)(*(void *)(*(void *)(a1 + 168) + 8 * ((v43 + 1) >> 8)) + (v43 + 1));
        int v23 = *(_DWORD *)(a1 + 48);
        ++v43;
      }
      while (v43 < v23);
    }
    if (v10 < v23)
    {
      do
      {
        *(unsigned char *)(*(void *)(*(void *)(a1 + 184) + 8 * (v10 >> 8)) + v10) = *(unsigned char *)(*(void *)(*(void *)(a1 + 184) + 8 * ((v10 + 1) >> 8)) + (v10 + 1));
        ++v10;
      }
      while (v10 < *(_DWORD *)(a1 + 48));
    }
LABEL_59:
    int v49 = *(_DWORD *)(a1 + 136) - v42;
    *(_DWORD *)(a1 + 136) = v49;
    int v50 = v49 - v15;
    if (v50 >= 1)
    {
      for (int k = 0; k < v50; ++k)
        *(unsigned char *)(*(void *)(*(void *)(a1 + 120) + 8 * ((v15 + k) >> 8)) + (v15 + k)) = *(unsigned char *)(*(void *)(*(void *)(a1 + 120) + 8 * ((v15 + v42 + k) >> 8)) + (v15 + v42 + k));
    }
    int v52 = *(_DWORD *)(a1 + 48);
    if (v52 >= 1)
    {
      for (int m = 0; m < v52; ++m)
      {
        uint64_t v54 = *(void *)(*(void *)(a1 + 32) + 8 * (m >> 8)) + 12 * m;
        int v57 = *(_DWORD *)(v54 + 4);
        uint64_t v55 = (_DWORD *)(v54 + 4);
        int v56 = v57;
        if (v57 >= (int)v15 && v56 != -1)
        {
          *uint64_t v55 = v56 - v42;
          int v52 = *(_DWORD *)(a1 + 48);
        }
      }
    }
    return 1;
  }
  return sub_100091650(a1, a2, a5, a4, (uint64_t)a5, a6, a7, a8);
}

uint64_t sub_100092FC0(uint64_t a1, unsigned int *a2)
{
  unint64_t v2 = *a2;
  uint64_t v3 = *(void *)(*(void *)(a1 + 120) + ((v2 >> 5) & 0x7FFFFF8));
  uint64_t v4 = *a2;
  int v5 = *(unsigned __int8 *)(v3 + v4);
  unsigned int v6 = v2 + 1;
  if (*(unsigned char *)(v3 + v4))
  {
    int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *(void *)(a1 + 120);
      int v11 = *(unsigned __int8 *)(*(void *)(v10 + 8 * (v6 >> 8)) + v6);
      unsigned int v12 = v6 + 1;
      if (*(char *)(*(void *)(v10 + 8 * (v6 >> 8)) + v6) < 0)
      {
        v6 += 2;
        int v11 = v11 & 0x7F | (*(unsigned __int8 *)(*(void *)(v10 + 8 * (v12 >> 8)) + v12) << 7);
        int v15 = *(_DWORD *)(a1 + 288);
        int v14 = v11 - v15;
        if (v11 <= v15) {
          goto LABEL_3;
        }
      }
      else
      {
        ++v6;
        int v13 = *(_DWORD *)(a1 + 288);
        int v14 = v11 - v13;
        if (v11 <= v13) {
          goto LABEL_3;
        }
      }
      uint64_t v16 = *(unsigned __int16 *)(*(void *)(a1 + 240) + 2 * v14);
      uint64_t v17 = (unsigned __int16 *)(*(void *)(a1 + 232) + 2 * v16);
      int v20 = *v17;
      int v18 = (char *)(v17 + 1);
      int v19 = v20;
      if (v20 != 0xFFFF)
      {
        do
        {
          uint64_t v25 = *(void *)(a1 + 264);
          uint64_t v26 = ~*(_DWORD *)(a1 + 284) + v19;
          unsigned int v27 = *(unsigned __int8 *)(v25 + v26);
          if (v27 <= 0xFD)
          {
            *(unsigned char *)(v25 + v26) = v27 - 1;
            uint64_t v28 = *(void *)(a1 + 264);
            if (!*(unsigned char *)(v28 + v26))
            {
              *(unsigned char *)(v28 + v26) = -1;
              uint64_t v9 = 1;
            }
          }
          int v24 = *(unsigned __int16 *)v18;
          v18 += 2;
          int v19 = v24;
        }
        while (v24 != 0xFFFF);
        int v14 = v11 - *(_DWORD *)(a1 + 288);
        uint64_t v21 = v14 - 1;
        uint64_t v22 = *(void *)(a1 + 272);
        unsigned int v23 = *(unsigned __int8 *)(v22 + v21);
        if (v23 > 0xFD) {
          goto LABEL_3;
        }
LABEL_16:
        *(unsigned char *)(v22 + v21) = v23 - 1;
        uint64_t v29 = *(void *)(a1 + 272);
        if (!*(unsigned char *)(v29 + v21))
        {
          *(unsigned char *)(v29 + v21) = -1;
          uint64_t v30 = (unsigned char *)(*(void *)(a1 + 232) + 2 * v16);
          unsigned int v31 = v18 - v30;
          unint64_t v32 = (unint64_t)(v18 - v30) >> 1;
          int v33 = *(_DWORD *)(a1 + 248) - v32;
          *(_DWORD *)(a1 + 248) = v33;
          j__memmove(v30, &v30[2 * (int)v32], 2 * (v33 - (int)v16));
          unint64_t v34 = 0;
          do
          {
            uint64_t v37 = *(void *)(a1 + 240);
            unsigned int v38 = *(unsigned __int16 *)(v37 + 2 * v34);
            if (v38 > v16) {
              *(_WORD *)(v37 + 2 * v34) = v38 - (v31 >> 1);
            }
            unint64_t v35 = *(unsigned __int16 *)(a1 + 256);
          }
          while (v34++ <= v35);
          if (v14 == v35)
          {
            uint64_t v39 = v21;
            do
            {
              LODWORD(v35) = v35 - 1;
              *(_WORD *)(a1 + 256) = v35;
              if ((int)v39 < 1) {
                break;
              }
              uint64_t v40 = *(void *)(a1 + 272) + v39--;
            }
            while (*(unsigned __int8 *)(v40 - 1) == 255);
          }
        }
        goto LABEL_3;
      }
      uint64_t v21 = v14 - 1;
      uint64_t v22 = *(void *)(a1 + 272);
      unsigned int v23 = *(unsigned __int8 *)(v22 + v21);
      if (v23 <= 0xFD) {
        goto LABEL_16;
      }
LABEL_3:
      if (++v8 == v5) {
        goto LABEL_27;
      }
    }
  }
  uint64_t v9 = 0;
LABEL_27:
  *a2 = v6;
  return v9;
}

uint64_t sub_10009321C(uint64_t a1, int a2, int a3, __int16 *a4, uint64_t a5, int a6)
{
  int v10 = *(_DWORD *)(a1 + 304);
  unsigned int v100 = a3;
  int v11 = (4 * sub_1000CED6C((unint64_t)a4)) | 1;
  uint64_t v12 = v11;
  int v20 = (unsigned __int8 *)sub_1000CD3E8(v11, v13, v14, v15, v16, v17, v18, v19);
  if (v10 == 4) {
    int v21 = 3;
  }
  else {
    int v21 = v10;
  }
  sub_1000C02C0(v21, a4, a3, (4 * v100) | 1, (uint64_t)v20);
  sub_1000CAD00((unint64_t)v20);
  int v22 = v11;
  unsigned int v23 = v20;
  if (sub_1000C0270(v21, a4, v22, (uint64_t)v20) == 2)
  {
    sub_1000CD4D0(v20, v12);
    return 0;
  }
  int v25 = a2;
  uint64_t v91 = (int)(4 * sub_1000CAD00((unint64_t)v20) + 4);
  int v33 = (unsigned __int8 *)sub_1000CD3E8(v91, v26, v27, v28, v29, v30, v31, v32);
  int v34 = *(_DWORD *)(a1 + 20);
  sub_10008814C(v33, (unsigned __int16 *)a4, v34, *(_DWORD *)(a1 + 304), a1 + 312, (int *)&v100);
  uint64_t v98 = v33;
  sub_1000CAD00((unint64_t)v33);
  if (v34)
  {
    int v42 = sub_100088008((uint64_t)a4);
    int v43 = a6;
    if (v42 == 16)
    {
      uint64_t v97 = sub_1000CAF9C((char *)v20);
      uint64_t v92 = v12;
      int v44 = *(_DWORD *)(a1 + 144);
      if (v44 < 1) {
        goto LABEL_15;
      }
LABEL_11:
      if (v44 <= *(_DWORD *)(a1 + 140)) {
        int v44 = *(_DWORD *)(a1 + 140);
      }
      uint64_t v90 = (v44 + 1);
      uint64_t v45 = (unsigned __int8 *)sub_1000CD3E8(v90, v35, v36, v37, v38, v39, v40, v41);
      goto LABEL_16;
    }
    uint64_t v97 = 0;
    uint64_t v92 = v12;
    int v44 = *(_DWORD *)(a1 + 144);
    if (v44 >= 1) {
      goto LABEL_11;
    }
  }
  else
  {
    int v25 = 0;
    int v42 = 128;
    int v43 = a6;
    uint64_t v97 = 0;
    uint64_t v92 = v12;
    int v44 = *(_DWORD *)(a1 + 144);
    if (v44 >= 1) {
      goto LABEL_11;
    }
  }
LABEL_15:
  uint64_t v90 = 0;
  uint64_t v45 = 0;
LABEL_16:
  int v46 = v33;
  int v47 = sub_10008F4CC(a1, v33, v100, v37, v38, v39, v40, v41);
  if (v47 >= *(_DWORD *)(a1 + 72) || v43 < 1)
  {
    uint64_t v24 = 0;
    goto LABEL_53;
  }
  unsigned int v49 = v47;
  uint64_t v24 = 0;
  if (!v25)
  {
    do
    {
      uint64_t v79 = (unsigned int *)(*(void *)(*(void *)(a1 + 32)
                                       + (((unint64_t)*(unsigned __int16 *)(*(void *)(*(void *)(a1 + 56)
                                                                                             + 8 * (v49 >> 8))
                                                                                 + 2 * v49) >> 5) & 0x7F8))
                           + 12
                           * *(_WORD *)(*(void *)(*(void *)(a1 + 56) + 8 * (v49 >> 8))
                                                       + 2 * v49));
      unint64_t v80 = *v79;
      unsigned int v81 = v79[2];
      uint64_t v82 = *(void *)(*(void *)(a1 + 96) + ((v80 >> 5) & 0x7FFFFF8));
      *uint64_t v45 = *(unsigned char *)(v82 + v80);
      if (*(unsigned char *)(v82 + v80))
      {
        unsigned int v83 = v80 + 1;
        uint64_t v84 = v45 + 1;
        do
        {
          uint64_t v85 = *(void *)(*(void *)(a1 + 96) + 8 * (v83 >> 8));
          *v84++ = *(unsigned char *)(v85 + v83);
          LODWORD(v85) = *(unsigned __int8 *)(v85 + v83++);
        }
        while (v85);
      }
      int v86 = sub_1000CAD00((unint64_t)v45);
      int v88 = sub_1000CAD44(v45, v33, v86, v87);
      if (v88 > 0) {
        break;
      }
      if (!v88)
      {
        *(_DWORD *)(a5 + 4 * (int)v24) = v81;
        uint64_t v24 = (v24 + 1);
      }
      if ((signed int)++v49 >= *(_DWORD *)(a1 + 72)) {
        break;
      }
    }
    while ((int)v24 < v43);
    goto LABEL_53;
  }
  uint64_t v94 = v23;
  int v93 = v42;
  do
  {
    unsigned int v89 = v24;
    while (1)
    {
      unint64_t v50 = (unint64_t)*(unsigned __int16 *)(*(void *)(*(void *)(a1 + 56) + 8 * (v49 >> 8))
                                                  + 2 * v49) >> 8;
      uint64_t v51 = *(_WORD *)(*(void *)(*(void *)(a1 + 56) + 8 * (v49 >> 8)) + 2
                                                                                             * v49);
      int v52 = (unsigned int *)(*(void *)(*(void *)(a1 + 32) + 8 * v50) + 12 * v51);
      unint64_t v53 = *v52;
      unsigned int v99 = v52[2];
      uint64_t v54 = *(void *)(*(void *)(a1 + 96) + ((v53 >> 5) & 0x7FFFFF8));
      *uint64_t v45 = *(unsigned char *)(v54 + v53);
      if (*(unsigned char *)(v54 + v53))
      {
        unsigned int v55 = v53 + 1;
        int v56 = v45 + 1;
        do
        {
          uint64_t v57 = *(void *)(*(void *)(a1 + 96) + 8 * (v55 >> 8));
          *v56++ = *(unsigned char *)(v57 + v55);
          LODWORD(v57) = *(unsigned __int8 *)(v57 + v55++);
        }
        while (v57);
      }
      int v58 = sub_1000CAD00((unint64_t)v45);
      int v60 = sub_1000CAD44(v45, v46, v58, v59);
      if (v60 > 0)
      {
LABEL_52:
        uint64_t v24 = v89;
        goto LABEL_53;
      }
      if (v60)
      {
        uint64_t v24 = v89;
        goto LABEL_49;
      }
      int v61 = v42;
      if (v42 != 16) {
        break;
      }
      uint64_t v62 = (int)sub_100088BA0((char *)v45, *(_DWORD *)(a1 + 304), a1 + 312);
      char v63 = v97[v62];
      v97[v62] = 0;
      int v64 = *(_DWORD *)(a1 + 304);
      if ((v64 - 3) > 1) {
        goto LABEL_36;
      }
      if (sub_1000D2130(v97, 0))
      {
        int v64 = *(_DWORD *)(a1 + 304);
LABEL_36:
        int v61 = sub_100087DDC((uint64_t)v97, v64);
        v97[v62] = v63;
        unsigned int v23 = v94;
        int v46 = v98;
        int v42 = v93;
        break;
      }
      v97[v62] = v63;
      unsigned int v23 = v94;
      int v46 = v98;
      int v42 = v93;
LABEL_26:
      if ((signed int)++v49 >= *(_DWORD *)(a1 + 72)) {
        goto LABEL_52;
      }
    }
    int v65 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 80) + 8 * v50) + v51);
    if ((v65 & v61) == 0) {
      goto LABEL_26;
    }
    if (v65 == 16)
    {
      int v66 = sub_1000CAD00((unint64_t)v45);
      unsigned int v67 = v53 + v66 + 1;
      uint64_t v68 = *(void *)(a1 + 96);
      uint64_t v69 = (v53 + v66 + 1);
      int v70 = *(unsigned __int8 *)(*(void *)(v68 + 8 * (v67 >> 8)) + v69);
      if (*(unsigned char *)(*(void *)(v68 + 8 * (v67 >> 8)) + v69))
      {
        int v71 = 0;
        do
        {
          int v70 = v71 + 1;
          int v72 = *(unsigned __int8 *)(*(void *)(v68 + 8 * ((v66 + v53 + 2 + v71) >> 8))
                                   + (v66 + v53 + 2 + v71));
          ++v71;
        }
        while (v72);
      }
      unsigned int v73 = v67 + v70 + 1;
      uint64_t v74 = *(void *)(v68 + 8 * (v73 >> 8));
      *uint64_t v45 = *(unsigned char *)(v74 + v73);
      uint64_t v75 = *(unsigned __int8 *)(v74 + v73);
      if (v75)
      {
        LODWORD(v75) = v66 + v70 + v53 + 3;
        uint64_t v76 = v45 + 1;
        do
        {
          uint64_t v77 = *(void *)(*(void *)(a1 + 96) + 8 * (v75 >> 8));
          *v76++ = *(unsigned char *)(v77 + v75);
          LODWORD(v77) = *(unsigned __int8 *)(v77 + v75);
          uint64_t v75 = (v75 + 1);
        }
        while (v77);
      }
      if (sub_1000CAD44(v45, v23, v58, v75)) {
        goto LABEL_26;
      }
    }
    *(_DWORD *)(a5 + 4 * (int)v89) = v99;
    uint64_t v24 = v89 + 1;
LABEL_49:
    ++v49;
  }
  while ((signed int)v49 < *(_DWORD *)(a1 + 72) && (int)v24 < a6);
LABEL_53:
  if (*(int *)(a1 + 144) >= 1) {
    sub_1000CD4D0(v45, v90);
  }
  sub_1000CD4D0(v46, v91);
  sub_1000CD4D0(v23, v92);
  sub_1000C321C((uint64_t)v97);
  return v24;
}

uint64_t sub_1000937B4(uint64_t a1, int a2, int a3, __int16 *a4, uint64_t a5, int a6, int a7)
{
  int v11 = *(_DWORD *)(a1 + 304);
  int v12 = sub_1000CED6C((unint64_t)a4);
  int v13 = 4 * v12 + 4;
  uint64_t v14 = v13;
  unint64_t v22 = sub_1000CD3E8(v13, v15, v16, v17, v18, v19, v20, v21);
  uint64_t v30 = (unsigned __int8 *)sub_1000CD3E8(v13, v23, v24, v25, v26, v27, v28, v29);
  if (v11 == 4) {
    int v31 = 3;
  }
  else {
    int v31 = v11;
  }
  if (sub_1000C0270(v31, a4, v13, v22) == 2) {
    goto LABEL_16;
  }
  int v32 = *(_DWORD *)(a1 + 20);
  sub_10008814C(v30, (unsigned __int16 *)a4, v32, *(_DWORD *)(a1 + 304), a1 + 312, 0);
  int v81 = v12;
  if (v32)
  {
    int v82 = sub_100088008((uint64_t)a4);
  }
  else
  {
    a2 = 0;
    int v82 = 128;
  }
  unint64_t v33 = sub_1000CAD00((unint64_t)v30);
  int v34 = v33;
  unsigned int v40 = sub_10008F4CC(a1, v30, v33, v35, v36, v37, v38, v39);
  if ((signed int)v40 >= *(_DWORD *)(a1 + 72))
  {
LABEL_16:
    uint64_t v59 = 0;
    goto LABEL_17;
  }
  unsigned int v48 = v40;
  uint64_t v80 = a5;
  unsigned int v83 = (unsigned __int8 *)v22;
  unint64_t v49 = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 56) + 8 * (v40 >> 8)) + 2 * v40);
  unint64_t v50 = (unsigned int *)(*(void *)(*(void *)(a1 + 32) + ((v49 >> 5) & 0x7F8))
                       + 12
                       * *(_WORD *)(*(void *)(*(void *)(a1 + 56) + 8 * (v40 >> 8))
                                                   + 2 * v40));
  unint64_t v51 = *v50;
  LODWORD(v22) = *v50;
  int v84 = a7;
  unsigned int v85 = v50[2];
  int v52 = *(_DWORD *)(a1 + 144);
  if (v52 <= *(_DWORD *)(a1 + 140)) {
    int v52 = *(_DWORD *)(a1 + 140);
  }
  uint64_t v79 = v52 + 1;
  unint64_t v53 = (unsigned __int8 *)sub_1000CD3E8(v79, v41, v42, v43, v44, v45, v46, v47);
  uint64_t v54 = v53;
  uint64_t v55 = *(void *)(*(void *)(a1 + 96) + ((v51 >> 5) & 0x7FFFFF8));
  *unint64_t v53 = *(unsigned char *)(v55 + v51);
  uint64_t v56 = *(unsigned __int8 *)(v55 + v51);
  if (v56)
  {
    LODWORD(v56) = v22 + 1;
    uint64_t v57 = v53 + 1;
    do
    {
      uint64_t v58 = *(void *)(*(void *)(a1 + 96) + 8 * (v56 >> 8));
      *v57++ = *(unsigned char *)(v58 + v56);
      LODWORD(v58) = *(unsigned __int8 *)(v58 + v56);
      uint64_t v56 = (v56 + 1);
    }
    while (v58);
  }
  uint64_t v59 = 0;
  if (!sub_1000CAD44(v53, v30, v34, v56))
  {
    while (!a3 || sub_1000CAD00((unint64_t)v54) == v34)
    {
      if (a2)
      {
        int v61 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 80) + 8 * (v49 >> 8))
                                 + v49);
        if (v61 == 16)
        {
          int v62 = sub_1000CAD00((unint64_t)v54);
          unsigned int v63 = v22 + v62 + 1;
          uint64_t v64 = *(void *)(a1 + 96);
          uint64_t v65 = (v22 + v62 + 1);
          int v66 = *(unsigned __int8 *)(*(void *)(v64 + 8 * (v63 >> 8)) + v65);
          if (*(unsigned char *)(*(void *)(v64 + 8 * (v63 >> 8)) + v65))
          {
            int v67 = 0;
            do
            {
              int v66 = v67 + 1;
              int v68 = *(unsigned __int8 *)(*(void *)(v64 + 8 * ((v62 + v22 + 2 + v67) >> 8))
                                       + (v62 + v22 + 2 + v67));
              ++v67;
            }
            while (v68);
          }
          unsigned int v69 = v63 + v66 + 1;
          uint64_t v70 = *(void *)(v64 + 8 * (v69 >> 8));
          *uint64_t v54 = *(unsigned char *)(v70 + v69);
          uint64_t v71 = *(unsigned __int8 *)(v70 + v69);
          if (v71)
          {
            LODWORD(v71) = v62 + v22 + v66 + 3;
            int v72 = v54 + 1;
            do
            {
              uint64_t v73 = *(void *)(*(void *)(a1 + 96) + 8 * (v71 >> 8));
              *v72++ = *(unsigned char *)(v73 + v71);
              LODWORD(v73) = *(unsigned __int8 *)(v73 + v71);
              uint64_t v71 = (v71 + 1);
            }
            while (v73);
          }
          if (sub_1000CAD44(v54, v83, v14, v71)) {
            goto LABEL_40;
          }
        }
        else if (v82 == 16)
        {
          if (sub_1000878C8((unsigned __int16 *)a4, (char *)v54, v61, v81, *(_DWORD *)(a1 + 304), a1 + 312))goto LABEL_40; {
        }
          }
        else if ((v82 & v61) == 0)
        {
          goto LABEL_40;
        }
      }
      if ((int)v59 < a6) {
        *(_DWORD *)(v80 + 4 * (int)v59) = v85;
      }
      uint64_t v59 = (v59 + 1);
      if (v84 && (int)v59 >= a6) {
        break;
      }
LABEL_40:
      if (++v48 != *(_DWORD *)(a1 + 72))
      {
        unint64_t v49 = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 56) + 8 * (v48 >> 8)) + 2 * v48);
        uint64_t v74 = (unsigned int *)(*(void *)(*(void *)(a1 + 32) + ((v49 >> 5) & 0x7F8))
                             + 12
                             * *(_WORD *)(*(void *)(*(void *)(a1 + 56) + 8 * (v48 >> 8))
                                                         + 2 * v48));
        unint64_t v22 = *v74;
        unsigned int v85 = v74[2];
        uint64_t v75 = *(void *)(*(void *)(a1 + 96) + ((v22 >> 5) & 0x7FFFFF8));
        *uint64_t v54 = *(unsigned char *)(v75 + v22);
        uint64_t v76 = *(unsigned __int8 *)(v75 + v22);
        if (v76)
        {
          LODWORD(v76) = v22 + 1;
          uint64_t v77 = v54 + 1;
          do
          {
            uint64_t v78 = *(void *)(*(void *)(a1 + 96) + 8 * (v76 >> 8));
            *v77++ = *(unsigned char *)(v78 + v76);
            LODWORD(v78) = *(unsigned __int8 *)(v78 + v76);
            uint64_t v76 = (v76 + 1);
          }
          while (v78);
        }
        if (!sub_1000CAD44(v54, v30, v34, v76)) {
          continue;
        }
      }
      break;
    }
  }
  sub_1000CD4D0(v54, v79);
  unint64_t v22 = (unint64_t)v83;
LABEL_17:
  sub_1000CD4D0(v30, v14);
  sub_1000CD4D0((void *)v22, v14);
  return v59;
}

uint64_t sub_100093C08(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 228);
  if ((int)v1 < 1)
  {
    LODWORD(v2) = 0;
  }
  else
  {
    uint64_t v2 = 0;
    while (*(unsigned __int8 *)(*(void *)(a1 + 264) + v2) != 255)
    {
      if (v1 == ++v2) {
        return 0xFFFFLL;
      }
    }
  }
  if (v2 == v1) {
    return 0xFFFFLL;
  }
  *(unsigned char *)(*(void *)(a1 + 264) + v2) = 0;
  return (unsigned __int16)(*(_WORD *)(a1 + 284) + v2 + 1);
}

uint64_t sub_100093C74(uint64_t a1, int a2, void *__src)
{
  uint64_t v6 = *(unsigned int *)(a1 + 224);
  if ((int)v6 < 1)
  {
    LODWORD(v7) = 0;
  }
  else
  {
    uint64_t v7 = 0;
    while (*(unsigned __int8 *)(*(void *)(a1 + 272) + v7) != 255)
    {
      if (v6 == ++v7) {
        return 0xFFFFLL;
      }
    }
  }
  if (v7 == v6) {
    return 0xFFFFLL;
  }
  uint64_t v8 = *(unsigned __int16 *)(*(void *)(a1 + 240) + 2 * *(unsigned __int16 *)(a1 + 256) + 2);
  if ((int)v8 + a2 > *(_DWORD *)(a1 + 252)) {
    return 0xFFFFLL;
  }
  unsigned __int16 v10 = v7 + 1;
  *(unsigned char *)(*(void *)(a1 + 272) + v7) = 0;
  if (*(unsigned __int16 *)(a1 + 256) >= (unsigned __int16)(v7 + 1))
  {
    uint64_t v13 = (unsigned __int16)(v7 + 1) + 1;
    do
    {
      *(_WORD *)(*(void *)(a1 + 240) + 2 * v13) += a2;
      unint64_t v14 = v13++ - 1;
    }
    while (v14 < *(unsigned __int16 *)(a1 + 256));
    uint64_t v15 = *(unsigned __int16 *)(*(void *)(a1 + 240) + 2 * (unsigned __int16)(v7 + 1));
    int v12 = (char *)(*(void *)(a1 + 232) + 2 * v15);
    j__memmove(&v12[2 * a2], v12, 2 * (*(_DWORD *)(a1 + 248) - (int)v15));
  }
  else
  {
    *(_WORD *)(a1 + 256) = v10;
    int v11 = (_WORD *)(*(void *)(a1 + 240) + 2 * v10);
    v11[1] = *v11 + a2;
    int v12 = (char *)(*(void *)(a1 + 232) + 2 * v8);
  }
  memcpy(v12, __src, 2 * a2);
  *(_DWORD *)(a1 + 248) += a2;
  return (unsigned __int16)(v10 + *(_WORD *)(a1 + 288));
}

uint64_t sub_100093DE4(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 256);
}

uint64_t sub_100093DEC(uint64_t a1, int a2)
{
  if (a2 != 0xFFFFFF && *(_DWORD *)(a1 + 280) - 1 != a2)
  {
    int v2 = *(_DWORD *)(a1 + 48);
    int v5 = v2 - 1;
    if (v2 < 1)
    {
      unsigned int v3 = 1;
      return *(unsigned int *)(*(void *)(*(void *)(a1 + 32) + 8 * (v3 >> 8)) + 12 * v3 + 8);
    }
    signed int v6 = 0;
    do
    {
      int v7 = v6 + v5;
      if (v6 + v5 < 0 != __OFADD__(v6, v5)) {
        ++v7;
      }
      unsigned int v8 = v7 >> 1;
      if (*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8 * (v8 >> 8)) + 12 * v8 + 8) >= a2) {
        int v5 = v8 - 1;
      }
      else {
        signed int v6 = v8 + 1;
      }
    }
    while (v6 <= v5);
    unsigned int v3 = v6 + 1;
    goto LABEL_19;
  }
  int v2 = *(_DWORD *)(a1 + 48);
  if (v2 >= 1)
  {
    unsigned int v3 = 0;
    while (*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8 * (v3 >> 8)) + 12 * v3 + 8) < *(_DWORD *)(a1 + 280))
    {
      if (v2 == ++v3) {
        return 0xFFFFFFLL;
      }
    }
LABEL_19:
    if (v3 == v2) {
      return 0xFFFFFFLL;
    }
    return *(unsigned int *)(*(void *)(*(void *)(a1 + 32) + 8 * (v3 >> 8)) + 12 * v3 + 8);
  }
  unsigned int v3 = 0;
  if (!v2) {
    return 0xFFFFFFLL;
  }
  return *(unsigned int *)(*(void *)(*(void *)(a1 + 32) + 8 * (v3 >> 8)) + 12 * v3 + 8);
}

uint64_t sub_100093EF4(uint64_t a1, unsigned int *a2)
{
  unsigned int v2 = *a2;
  int v3 = *(_DWORD *)(a1 + 48);
  if ((int)*a2 < v3)
  {
    while (*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8 * (v2 >> 8)) + 12 * v2 + 8) < *(_DWORD *)(a1 + 280))
    {
      if (v3 == ++v2) {
        return 0xFFFFFFLL;
      }
    }
  }
  if (v2 == v3) {
    return 0xFFFFFFLL;
  }
  *a2 = v2 + 1;
  return *(unsigned int *)(*(void *)(*(void *)(a1 + 32) + 8 * (v2 >> 8)) + 12 * v2 + 8);
}

uint64_t sub_100093F78(uint64_t a1)
{
  return *(unsigned int *)(a1 + 164);
}

uint64_t sub_100093F80(uint64_t result, uint64_t a2, _DWORD *a3, _DWORD *a4, _DWORD *a5, _DWORD *a6)
{
  if (*(int *)(result + 72) >= 1)
  {
    *(_DWORD *)(result + 52) = *(_DWORD *)(*(void *)(*(void *)(result + 32)
                                                     + 8 * ((*(_DWORD *)(result + 48) - 1) >> 8))
                                         + 12 * (*(unsigned char *)(result + 48) - 1)
                                         + 8);
    int v6 = *(_DWORD *)(result + 140);
    if (v6 <= *a3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  *(_DWORD *)(result + 52) = *(_DWORD *)(result + 280) - 1;
  int v6 = *(_DWORD *)(result + 140);
  if (v6 > *a3) {
LABEL_3:
  }
    *a3 = v6;
LABEL_4:
  int v7 = *(_DWORD *)(result + 148);
  if (v7 > *a4)
  {
    *a4 = v7;
    int v8 = *(_DWORD *)(result + 152);
    if (v8 <= *a5)
    {
LABEL_6:
      int v9 = *(_DWORD *)(result + 156);
      if (v9 <= *a6) {
        return result;
      }
LABEL_10:
      *a6 = v9;
      return result;
    }
  }
  else
  {
    int v8 = *(_DWORD *)(result + 152);
    if (v8 <= *a5) {
      goto LABEL_6;
    }
  }
  *a5 = v8;
  int v9 = *(_DWORD *)(result + 156);
  if (v9 > *a6) {
    goto LABEL_10;
  }
  return result;
}

BOOL sub_10009404C(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v4 = sub_1000BFC50(a2, "bmd1", a3);
  if (!v4) {
    return 0;
  }
  uint64_t v6 = v4;
  if (!sub_1000BFD58(v4, *(_DWORD *)(a1 + 24), v5)
    || !sub_1000BFD58(v6, *(_DWORD *)a1, v7)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 40), v8)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 44), v9)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 48), v10)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 52), v11)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 64), v12)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 68), v13)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 72), v14)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 88), v15)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 92), v16)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 104), v17)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 108), v18)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 112), v19)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 128), v20)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 132), v21)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 136), v22)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 140), v23)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 144), v24)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 148), v25)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 152), v26)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 156), v27)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 160), v28)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 164), v29)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 176), v30)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 180), v31)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 192), v32)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 196), v33)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 200), v34)
    || !sub_1000BFD58(v6, *(unsigned __int16 *)(a1 + 204), v35)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 216), v36)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 220), v37)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 224), v38)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 228), v39)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 248), v40)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 252), v41)
    || !sub_1000BFD58(v6, *(unsigned __int16 *)(a1 + 256), v42)
    || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 20), v43)
    || !sub_1000C00C4(v6, *(void *)(a1 + 32), *(_DWORD *)(a1 + 40), 256, 12, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1000944C8, v44)|| !sub_1000BFFFC(v6, *(void ***)(a1 + 56), *(_DWORD *)(a1 + 64), 0x100u, 2, v45)|| *(_DWORD *)(a1 + 20)&& !sub_1000BFFFC(v6, *(void ***)(a1 + 80), *(_DWORD *)(a1 + 88), 0x100u, 1, v46))
  {
    goto LABEL_65;
  }
  if (!sub_1000BFFFC(v6, *(void ***)(a1 + 96), *(_DWORD *)(a1 + 104), 0x100u, 1, v46)
    || !sub_1000BFFFC(v6, *(void ***)(a1 + 120), *(_DWORD *)(a1 + 128), 0x100u, 1, v47)
    || !sub_1000BFFFC(v6, *(void ***)(a1 + 168), *(_DWORD *)(a1 + 176), 0x100u, 1, v48)
    || !sub_1000BFFFC(v6, *(void ***)(a1 + 184), *(_DWORD *)(a1 + 192), 0x100u, 1, v49)
    || *(__int16 *)(a1 + 204) != -1
    && !sub_1000BFFFC(v6, *(void ***)(a1 + 208), *(_DWORD *)(a1 + 216), 0x100u, 1, v50))
  {
    goto LABEL_65;
  }
  unint64_t v51 = *(void **)(a1 + 264);
  unsigned int v52 = v51 ? *(_DWORD *)(a1 + 228) : 0;
  if (!sub_1000BFDB0(v6, v51, v52, 1, v50)) {
    goto LABEL_65;
  }
  uint64_t v55 = *(void **)(a1 + 272);
  unsigned int v56 = v55 ? *(_DWORD *)(a1 + 224) : 0;
  if (!sub_1000BFDB0(v6, v55, v56, 1, v54)) {
    goto LABEL_65;
  }
  unsigned int v58 = 0;
  uint64_t v59 = *(void **)(a1 + 232);
  if (v59 && qword_100101CC0) {
    unsigned int v58 = *(_DWORD *)(qword_100101CC0 + 3928);
  }
  if (sub_1000BFDB0(v6, v59, v58, 2, v57))
  {
    int v61 = *(void **)(a1 + 240);
    if (v61) {
      unsigned int v62 = *(_DWORD *)(a1 + 224) + 2;
    }
    else {
      unsigned int v62 = 0;
    }
    BOOL v63 = sub_1000BFDB0(v6, v61, v62, 2, v60) != 0;
    sub_1000BFD14(v6);
    return v63;
  }
  else
  {
LABEL_65:
    sub_1000BFD14(v6);
    return 0;
  }
}

BOOL sub_1000944C8(uint64_t a1, int a2, int8x8_t *__ptr, uint8x8_t a4)
{
  if (a2)
  {
    v10.i32[0] = __ptr->i32[0];
    sub_1000CB2B8(&v10, 4, a4);
    BOOL result = sub_1000BFFC4(a1, 4uLL, &v10);
    if (result)
    {
      v10.i32[0] = __ptr->i32[1];
      sub_1000CB2B8(&v10, 4, v7);
      BOOL result = sub_1000BFFC4(a1, 4uLL, &v10);
      if (result)
      {
        v10.i32[0] = __ptr[1].i32[0];
        uint8x8_t v9 = &v10;
        sub_1000CB2B8(&v10, 4, v8);
        return sub_1000BFFC4(a1, 4uLL, v9);
      }
    }
  }
  else
  {
    BOOL result = sub_1000BFFC4(a1, 4uLL, __ptr);
    if (result)
    {
      BOOL result = sub_1000BFFC4(a1, 4uLL, (char *)__ptr + 4);
      if (result)
      {
        uint8x8_t v9 = __ptr + 1;
        return sub_1000BFFC4(a1, 4uLL, v9);
      }
    }
  }
  return result;
}

BOOL sub_1000945D4(_DWORD *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint8x8_t v9 = sub_1000BEC58(a2, "bmd1", a3, a4, a5, a6, a7, a8);
  if (!v9) {
    return 0;
  }
  uint64_t v10 = (uint64_t)v9;
  int v15 = 0;
  if (!sub_1000BEECC((uint64_t)v9, &v15)) {
    goto LABEL_75;
  }
  if (a1[6] != v15) {
    goto LABEL_75;
  }
  if (!sub_1000BEE7C(v10, a1)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 10)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 11)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 12)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 13)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 16)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 17)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 18)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 22)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 23)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 26)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 27)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 28)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 32)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 33)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 34)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 35)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 36)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 37)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 38)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 39)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 40)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 41)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 44)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 45)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 48)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 49)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 50)) {
    goto LABEL_75;
  }
  if (!sub_1000BEF74(v10, (_WORD *)a1 + 102)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 54)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 55)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 56)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 57)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 62)) {
    goto LABEL_75;
  }
  if (!sub_1000BEECC(v10, a1 + 63)) {
    goto LABEL_75;
  }
  if (!sub_1000BEF74(v10, (_WORD *)a1 + 128)) {
    goto LABEL_75;
  }
  if (!sub_1000BEE7C(v10, a1 + 5)) {
    goto LABEL_75;
  }
  int v14 = 0;
  if (!sub_1000BFA34(v10, (uint64_t *)a1 + 4, a1[11], 256, 12, (uint64_t (*)(uint64_t, void, uint64_t))sub_100094B9C, &v14)|| *((void *)a1 + 4) && v14 != a1[10])
  {
    goto LABEL_75;
  }
  int v14 = 0;
  if (!sub_1000BF88C(v10, (uint64_t *)a1 + 7, a1[17], 256, 2, &v14)
    || *((void *)a1 + 7) && v14 != a1[16])
  {
    goto LABEL_75;
  }
  if ((!a1[5]
     || (int v14 = 0, sub_1000BF88C(v10, (uint64_t *)a1 + 10, a1[23], 256, 1, &v14))
     && (!*((void *)a1 + 10) || v14 == a1[22]))
    && (int v14 = 0, sub_1000BF88C(v10, (uint64_t *)a1 + 12, a1[27], 256, 1, &v14))
    && (!*((void *)a1 + 12) || v14 == a1[26])
    && (int v14 = 0, sub_1000BF88C(v10, (uint64_t *)a1 + 15, a1[33], 256, 1, &v14))
    && (!*((void *)a1 + 15) || v14 == a1[32])
    && (int v14 = 0, sub_1000BF88C(v10, (uint64_t *)a1 + 21, a1[45], 256, 1, &v14))
    && (!*((void *)a1 + 21) || v14 == a1[44])
    && (int v14 = 0, sub_1000BF88C(v10, (uint64_t *)a1 + 23, a1[49], 256, 1, &v14))
    && (!*((void *)a1 + 23) || v14 == a1[48])
    && (*((__int16 *)a1 + 102) == -1
     || (int v14 = 0, sub_1000BF88C(v10, (uint64_t *)a1 + 26, a1[55], 256, 1, &v14))
     && (!*((void *)a1 + 26) || v14 == a1[54]))
    && sub_1000BEFCC(v10, *((void **)a1 + 33), a1[57], 1)
    && sub_1000BEFCC(v10, *((void **)a1 + 34), a1[56], 1)
    && (!qword_100101CC0 ? (int v11 = 0) : (int v11 = *(_DWORD *)(qword_100101CC0 + 3928)),
        sub_1000BEFCC(v10, *((void **)a1 + 29), v11, 2)))
  {
    BOOL v12 = sub_1000BEFCC(v10, *((void **)a1 + 30), a1[56] + 2, 2);
  }
  else
  {
LABEL_75:
    BOOL v12 = 0;
  }
  sub_1000BED3C(v10);
  return v12;
}

BOOL sub_100094B9C(uint64_t a1, int a2, uint64_t a3)
{
  BOOL result = sub_1000BF540(a1, 4uLL, (void *)a3);
  if (result)
  {
    if (a2)
    {
      sub_1000CB2B8((int8x8_t *)a3, 4, v7);
      BOOL result = sub_1000BF540(a1, 4uLL, (void *)(a3 + 4));
      if (!result) {
        return result;
      }
      sub_1000CB2B8((int8x8_t *)(a3 + 4), 4, v8);
    }
    else
    {
      BOOL result = sub_1000BF540(a1, 4uLL, (void *)(a3 + 4));
      if (!result) {
        return result;
      }
    }
    uint8x8_t v9 = (int8x8_t *)(a3 + 8);
    BOOL v10 = sub_1000BF540(a1, 4uLL, v9);
    BOOL result = v10;
    if (a2)
    {
      if (v10)
      {
        sub_1000CB2B8(v9, 4, v11);
        return 1;
      }
    }
  }
  return result;
}

uint64_t sub_100094C5C(uint64_t a1, void *a2, void *a3)
{
  *a2 = *(void *)(a1 + 232);
  *a3 = *(void *)(a1 + 240);
  return *(unsigned __int16 *)(a1 + 256);
}

uint64_t sub_100094C74(uint64_t a1)
{
  unsigned int v2 = sub_1000C085C(*(_DWORD *)a1, 4, 0xFFFFFFFF);
  signed int v3 = *(_DWORD *)(a1 + 48);
  if (v3 >= 1)
  {
    for (signed int i = 0; i < v3; ++i)
    {
      uint8x8_t v5 = (unsigned int *)(*(void *)(*(void *)(a1 + 32) + 8 * (i >> 8)) + 12 * i);
      unsigned int v6 = sub_1000C085C(*v5, 4, v2);
      unsigned int v7 = sub_1000C085C(v5[1], 4, v6);
      unsigned int v2 = sub_1000C085C(v5[2], 4, v7);
      signed int v3 = *(_DWORD *)(a1 + 48);
    }
  }
  unsigned int v8 = sub_1000C085C(v3, 4, v2);
  unsigned int v9 = sub_1000C085C(*(_DWORD *)(a1 + 52), 4, v8);
  if (*(int *)(a1 + 72) >= 1)
  {
    unsigned int v10 = 0;
    do
    {
      unsigned int v9 = sub_1000C085C(*(unsigned __int16 *)(*(void *)(*(void *)(a1 + 56) + 8 * (v10 >> 8)) + 2 * v10), 2, v9);
      ++v10;
    }
    while ((signed int)v10 < *(_DWORD *)(a1 + 72));
  }
  unsigned int v11 = sub_1000C085C(*(_DWORD *)(a1 + 64), 4, v9);
  unsigned int v12 = sub_1000C085C(*(_DWORD *)(a1 + 68), 4, v11);
  uint64_t v13 = sub_1000C085C(*(_DWORD *)(a1 + 72), 4, v12);
  if (*(void *)(a1 + 80) && *(int *)(a1 + 88) >= 1)
  {
    uint64_t v14 = 0;
    do
      uint64_t v13 = sub_1000C09B0(*(unint64_t **)(*(void *)(a1 + 80) + 8 * v14++), 1, 256, v13);
    while (v14 < *(int *)(a1 + 88));
  }
  if (*(int *)(a1 + 112) >= 1)
  {
    unsigned int v15 = 0;
    do
    {
      LODWORD(v13) = sub_1000C0710(*(unsigned char *)(*(void *)(*(void *)(a1 + 96) + 8 * (v15 >> 8)) + v15), v13);
      ++v15;
    }
    while ((signed int)v15 < *(_DWORD *)(a1 + 112));
  }
  unsigned int v16 = sub_1000C085C(*(_DWORD *)(a1 + 104), 4, v13);
  unsigned int v17 = sub_1000C085C(*(_DWORD *)(a1 + 108), 4, v16);
  unsigned int v18 = sub_1000C085C(*(_DWORD *)(a1 + 112), 4, v17);
  if (*(int *)(a1 + 136) >= 1)
  {
    unsigned int v19 = 0;
    do
    {
      unsigned int v18 = sub_1000C0710(*(unsigned char *)(*(void *)(*(void *)(a1 + 120) + 8 * (v19 >> 8)) + v19), v18);
      ++v19;
    }
    while ((signed int)v19 < *(_DWORD *)(a1 + 136));
  }
  unsigned int v20 = sub_1000C085C(*(_DWORD *)(a1 + 128), 4, v18);
  unsigned int v21 = sub_1000C085C(*(_DWORD *)(a1 + 132), 4, v20);
  unsigned int v22 = sub_1000C085C(*(_DWORD *)(a1 + 136), 4, v21);
  unsigned int v23 = sub_1000C085C(*(_DWORD *)(a1 + 140), 4, v22);
  unsigned int v24 = sub_1000C085C(*(_DWORD *)(a1 + 144), 4, v23);
  unsigned int v25 = sub_1000C085C(*(_DWORD *)(a1 + 148), 4, v24);
  unsigned int v26 = sub_1000C085C(*(_DWORD *)(a1 + 152), 4, v25);
  unsigned int v27 = sub_1000C085C(*(_DWORD *)(a1 + 156), 4, v26);
  unsigned int v28 = sub_1000C085C(*(_DWORD *)(a1 + 160), 4, v27);
  uint64_t v29 = sub_1000C085C(*(_DWORD *)(a1 + 164), 4, v28);
  if (*(void *)(a1 + 168) && *(int *)(a1 + 176) >= 1)
  {
    uint64_t v30 = 0;
    do
      uint64_t v29 = sub_1000C09B0(*(unint64_t **)(*(void *)(a1 + 168) + 8 * v30++), 1, 256, v29);
    while (v30 < *(int *)(a1 + 176));
  }
  if (*(void *)(a1 + 184) && *(int *)(a1 + 192) >= 1)
  {
    uint64_t v31 = 0;
    do
      uint64_t v29 = sub_1000C09B0(*(unint64_t **)(*(void *)(a1 + 184) + 8 * v31++), 1, 256, v29);
    while (v31 < *(int *)(a1 + 192));
  }
  unsigned int v32 = sub_1000C085C(*(_DWORD *)(a1 + 200), 4, v29);
  unsigned int v33 = sub_1000C085C(*(_DWORD *)(a1 + 224), 4, v32);
  uint64_t v34 = sub_1000C085C(*(_DWORD *)(a1 + 228), 4, v33);
  uint64_t v35 = sub_1000C09B0(*(unint64_t **)(a1 + 232), 2, *(_DWORD *)(a1 + 252), v34);
  unsigned int v36 = sub_1000C09B0(*(unint64_t **)(a1 + 240), 2, *(_DWORD *)(a1 + 224) + 2, v35);
  unsigned int v37 = sub_1000C085C(*(_DWORD *)(a1 + 248), 4, v36);
  unsigned int v38 = sub_1000C085C(*(_DWORD *)(a1 + 252), 4, v37);
  uint64_t v39 = sub_1000C085C(*(unsigned __int16 *)(a1 + 256), 2, v38);
  uint64_t v40 = sub_1000C09B0(*(unint64_t **)(a1 + 264), 1, *(_DWORD *)(a1 + 228), v39);
  unsigned int v41 = sub_1000C09B0(*(unint64_t **)(a1 + 272), 1, *(_DWORD *)(a1 + 224), v40);
  unsigned int v42 = sub_1000C085C(*(_DWORD *)(a1 + 280), 4, v41);
  unsigned int v43 = sub_1000C085C(*(_DWORD *)(a1 + 284), 4, v42);
  unsigned int v44 = sub_1000C085C(*(_DWORD *)(a1 + 288), 4, v43);
  unsigned int v45 = sub_1000C085C(*(_DWORD *)(a1 + 304), 4, v44);
  unsigned int v46 = sub_1000C085C(*(_DWORD *)(a1 + 312), 4, v45);
  uint64_t v47 = sub_1000C085C(*(_DWORD *)(a1 + 316), 4, v46);
  return sub_1000C09B0((unint64_t *)(a1 + 320), 4, 8, v47);
}

uint64_t sub_1000950EC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, unsigned __int16 *a5, uint64_t a6)
{
  uint64_t v7 = (uint64_t)a5;
  int v8 = *a5;
  if (v8 <= a2)
  {
    unint64_t v12 = sub_10009BF2C((unint64_t)a5);
    uint64_t v13 = sub_10007A9E8(a1, v12);
    uint64_t result = sub_10007AD50(a1, v12, v7, v13, a6, v14, v15, v16);
    *(_WORD *)(a6 + 2 * (int)result) = -1;
  }
  else
  {
    unsigned int v9 = (_WORD *)a6;
    if (v8 != 0xFFFF)
    {
      unsigned int v9 = (_WORD *)a6;
      do
      {
        uint64_t v18 = *(unsigned __int16 *)(a4 + 2 * (v8 - a2));
        int v19 = *(unsigned __int16 *)(a3 + 2 * v18);
        if (v19 != 0xFFFF)
        {
          unsigned int v20 = (unsigned __int16 *)(a3 + 2 + 2 * v18);
          do
          {
            *v9++ = v19;
            int v21 = *v20++;
            LOWORD(v19) = v21;
          }
          while (v21 != 0xFFFF);
        }
        int v17 = *(unsigned __int16 *)(v7 + 2);
        v7 += 2;
        int v8 = v17;
      }
      while (v17 != 0xFFFF);
    }
    *unsigned int v9 = -1;
    return ((unint64_t)v9 - a6) >> 1;
  }
  return result;
}

BOOL sub_1000951D0(unsigned __int16 *a1, unsigned __int16 *a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  unsigned int v6 = a2;
  int v8 = *a1;
  int v9 = *a2;
  if (v8 > a4)
  {
    if (v9 > a4)
    {
      if (v8 == 0xFFFF) {
        return v9 == 0xFFFF;
      }
      unsigned int v10 = a1 + 1;
      while (v8 == *v6 || *(__int16 *)(a5 + 2 * *(unsigned __int16 *)(a6 + 2 * (v8 - a4))) == -1)
      {
        ++v6;
        int v11 = *v10++;
        int v8 = v11;
        if (v11 == 0xFFFF)
        {
          int v9 = *v6;
          return v9 == 0xFFFF;
        }
      }
    }
    return 0;
  }
  if (v9 > a4) {
    return 0;
  }
  unint64_t v14 = sub_10009BF2C((unint64_t)a1);
  uint64_t v15 = sub_10007A9E8(a3, v14);
  uint64_t v16 = 2 * (int)v15;
  unsigned int v24 = (void *)sub_1000CD3E8(v16, v17, v18, v19, v20, v21, v22, v23);
  int v28 = sub_10007AD50(a3, v14, (uint64_t)a1, v15, (uint64_t)v24, v25, v26, v27);
  unint64_t v29 = sub_10009BF2C((unint64_t)v6);
  uint64_t v30 = sub_10007A9E8(a3, v29);
  unsigned int v38 = (void *)sub_1000CD3E8(2 * (int)v30, v31, v32, v33, v34, v35, v36, v37);
  BOOL v12 = v28 == sub_10007AD50(a3, v29, (uint64_t)v6, v30, (uint64_t)v38, v39, v40, v41)
     && memcmp(v24, v38, 2 * v28) == 0;
  sub_1000CD4D0(v38, 2 * (int)v30);
  sub_1000CD4D0(v24, v16);
  return v12;
}

uint64_t sub_10009536C(unsigned __int16 *a1, unsigned __int16 *a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  int v12 = sub_10009BF2C((unint64_t)a1);
  if (v12 != sub_10009BF2C((unint64_t)a2) || (uint64_t result = memcmp(a1, a2, 2 * v12), result))
  {
    return sub_1000951D0(a1, a2, a3, a4, a5, a6);
  }
  return result;
}

uint64_t sub_100095428(uint64_t a1, int a2, uint64_t a3, uint64_t a4, unsigned __int16 *a5)
{
  uint64_t v5 = (uint64_t)a5;
  int v6 = *a5;
  if (v6 <= a2)
  {
    unint64_t v9 = sub_10009BF2C((unint64_t)a5);
    return sub_10007AD50(a1, v9, v5, 0, 0, v10, v11, v12);
  }
  else if (v6 == 0xFFFF)
  {
    return 0;
  }
  else
  {
    uint64_t result = 0;
    do
    {
      uint64_t v14 = *(unsigned __int16 *)(a4 + 2 * (v6 - a2));
      if (*(__int16 *)(a3 + 2 * v14) != -1)
      {
        uint64_t v15 = (__int16 *)(a3 + 2 + 2 * v14);
        do
        {
          uint64_t result = (result + 1);
          int v16 = *v15++;
        }
        while (v16 != -1);
      }
      int v13 = *(unsigned __int16 *)(v5 + 2);
      v5 += 2;
      int v6 = v13;
    }
    while (v13 != 0xFFFF);
  }
  return result;
}

uint64_t sub_1000954E4(unsigned int a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int16 *a6, _WORD *a7)
{
  uint64_t result = 0;
  if (a3 && (int)a5 >= 1)
  {
    uint64_t v20 = (a5 + 1);
    uint64_t v21 = a7 + 1;
    uint64_t v11 = 1;
    do
    {
      uint64_t v12 = *(unsigned __int16 *)(a4 + 2 * v11);
      uint64_t v13 = v11 + 1;
      if (*(unsigned __int16 *)(a4 + 2 * (v11 + 1)) != v12 && *(__int16 *)(a3 + 2 * v12) != -1)
      {
        uint64_t v14 = 2 * v12;
        uint64_t v15 = a6;
        do
        {
          int v16 = *(unsigned __int16 *)(a3 + v14);
          int v17 = *v15;
          if (v16 == 0xFFFF)
          {
            if (v17 == 0xFFFF)
            {
              *a7 = v11 + a1;
              a7[1] = -1;
              return 1;
            }
            if (sub_1000954E4(a1, a2, a3, a4, a5, v15, v21))
            {
              *a7 = v11 + a1;
              return 1;
            }
          }
          ++v15;
          v14 += 2;
        }
        while (v16 == v17);
      }
      ++v11;
    }
    while (v13 != v20);
    return 0;
  }
  return result;
}

_WORD **sub_100095628(_WORD **result, unsigned __int16 *a2, int a3)
{
  if (a3 >= 1)
  {
    uint64_t v3 = 0;
    uint64_t v4 = *result;
    int v5 = *a2;
    if (v5 != 0xFFFF) {
      goto LABEL_5;
    }
    while (1)
    {
      _WORD *v4 = -1;
      ++a2;
      if (++v3 == a3) {
        break;
      }
      uint64_t v4 = result[v3];
      int v5 = *a2;
      if (v5 != 0xFFFF)
      {
        do
        {
LABEL_5:
          *v4++ = v5;
          int v6 = a2[1];
          ++a2;
          LOWORD(v5) = v6;
        }
        while (v6 != 0xFFFF);
      }
    }
  }
  return result;
}

uint64_t sub_100095688(uint64_t result, char *a2, int a3)
{
  if (a3 >= 1)
  {
    for (uint64_t i = 0; i != a3; ++i)
    {
      uint64_t v4 = *(_WORD **)(result + 8 * i);
      int v6 = *a2++;
      for (int j = v6; j; --j)
      {
        while (1)
        {
          __int16 v8 = *a2;
          if ((*a2 & 0x80000000) == 0) {
            break;
          }
          __int16 v7 = a2[1];
          a2 += 2;
          *v4++ = v8 & 0x7F | (v7 << 7);
          if (!--j) {
            goto LABEL_3;
          }
        }
        ++a2;
        *v4++ = v8;
      }
LABEL_3:
      _WORD *v4 = -1;
    }
  }
  return result;
}

unint64_t sub_100095704(unint64_t result, unsigned char *a2, int a3)
{
  if (a3 >= 1)
  {
    unint64_t v4 = result;
    uint64_t v5 = 0;
    uint64_t v6 = a3;
    do
    {
      __int16 v7 = *(unsigned __int16 **)(v4 + 8 * v5);
      uint64_t result = sub_10009BF2C((unint64_t)v7);
      *a2 = result;
      __int16 v8 = a2 + 1;
      if ((int)result >= 1)
      {
        do
        {
          while (1)
          {
            unsigned int v11 = *v7++;
            unsigned int v10 = v11;
            char v12 = v11;
            if (v11 < 0x80) {
              break;
            }
            v8[1] = v10 >> 7;
            unint64_t v9 = v8 + 2;
            *__int16 v8 = v12 | 0x80;
            v8 += 2;
            uint64_t result = (result - 1);
            if (!result) {
              goto LABEL_3;
            }
          }
          unint64_t v9 = v8 + 1;
          *v8++ = v12;
          uint64_t result = (result - 1);
        }
        while (result);
      }
      else
      {
        unint64_t v9 = v8;
      }
LABEL_3:
      ++v5;
      a2 = v9;
    }
    while (v5 != v6);
  }
  return result;
}

uint64_t sub_1000957D0(uint64_t a1, uint64_t a2)
{
  if ((int)a2 >= 1)
  {
    uint64_t v2 = 0;
    uint64_t v3 = a2;
    do
    {
      unint64_t v4 = *(unsigned __int16 **)(a1 + 8 * v2);
      unsigned int v5 = *v4;
      if (v5 != 0xFFFF)
      {
        uint64_t v6 = v4 + 1;
        do
        {
          if (v5 <= 0x7F) {
            int v7 = 1;
          }
          else {
            int v7 = 2;
          }
          a2 = (v7 + a2);
          unsigned int v8 = *v6++;
          unsigned int v5 = v8;
        }
        while (v8 != 0xFFFF);
      }
      ++v2;
    }
    while (v2 != v3);
  }
  return a2;
}

BOOL sub_100095830(unsigned __int16 *a1, unsigned __int16 *a2)
{
  int v2 = *a1;
  if (v2 == 0xFFFF) {
    return (__int16)*a2 == -1;
  }
  uint64_t v3 = a1 + 1;
  while (v2 == *a2)
  {
    ++a2;
    int v4 = *v3++;
    int v2 = v4;
    if (v4 == 0xFFFF) {
      return (__int16)*a2 == -1;
    }
  }
  return 0;
}

uint64_t sub_100095878(unsigned __int16 *a1, int a2)
{
  int v2 = *a1;
  if (v2 == 0xFFFF)
  {
    LOBYTE(v3) = -2;
    return v3;
  }
  int v5 = 0;
  int v3 = 254;
  int v6 = -2;
  uint64_t v7 = 1;
  do
  {
    if (v6 == -508) {
      return 254;
    }
    if (v2 == a2)
    {
      if (v5) {
        return 254;
      }
      int v3 = v7;
      int v5 = 1;
    }
    int v2 = a1[v7++];
    v6 -= 2;
  }
  while (v2 != 0xFFFF);
  if (v3 == 254) {
    return v3;
  }
  j__memmove(&a1[v3 - 1], &a1[v3], -(v6 + 2 * v3));
  return v3;
}

char *sub_10009593C(char *result, int a2, __int16 a3)
{
  if (a2 != 254)
  {
    int v5 = result;
    int v6 = sub_10009BF2C((unint64_t)result);
    uint64_t v7 = &v5[2 * a2];
    uint64_t result = (char *)j__memmove(v7, v7 - 2, 2 * (v6 - a2) + 4);
    *((_WORD *)v7 - 1) = a3;
  }
  return result;
}

uint64_t sub_1000959A0(signed int *a1)
{
  uint64_t v1 = a1;
  signed int v2 = *a1;
  uint64_t v3 = 0xFFFFFFFFLL;
  if (v2 >= 1)
  {
    do
    {
      unsigned int v7 = sub_1000C085C(v2, 4, v3);
      if (*v1 >= 1)
      {
        uint64_t v8 = 0;
        uint64_t v9 = 0;
        do
        {
          unsigned int v10 = sub_1000C085C(*(_DWORD *)(*((void *)v1 + 1) + v8), 4, v7);
          unsigned int v7 = sub_1000C085C(*(_DWORD *)(*((void *)v1 + 1) + v8 + 4), 4, v10);
          ++v9;
          v8 += 8;
        }
        while (v9 < *v1);
      }
      uint64_t v11 = sub_1000C085C(v1[1], 4, v7);
      if (v1[1] >= 1)
      {
        uint64_t v12 = 0;
        uint64_t v13 = 0;
        do
        {
          unsigned int v14 = sub_1000C085C(*(_DWORD *)(*((void *)v1 + 3) + v12), 4, v11);
          unsigned int v15 = sub_1000C085C(*(_DWORD *)(*((void *)v1 + 3) + v12 + 4), 4, v14);
          uint64_t v11 = sub_1000C085C(*(_DWORD *)(*((void *)v1 + 3) + v12 + 8), 4, v15);
          ++v13;
          v12 += 12;
        }
        while (v13 < v1[1]);
      }
      unsigned int v5 = sub_1000C06B4(*((void *)v1 + 5), v11);
      uint64_t v3 = sub_1000C085C(v1[14], 4, v5);
      int v6 = v1[16];
      v1 += 16;
      signed int v2 = v6;
    }
    while (v6 > 0);
  }
  return v3;
}

int *sub_100095AE8(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = sub_1000BEC58(a1, "bn0", a2, a4, a5, a6, a7, a8);
  if (!v8) {
    return 0;
  }
  uint64_t v9 = (uint64_t)v8;
  int v43 = 0;
  if (sub_1000BEECC((uint64_t)v8, &v43))
  {
    sub_1000C2F04(((uint64_t)v43 << 6) + 64, v10, v11, v12, v13, v14, v15, v16);
    uint64_t v18 = v17;
    if (v43 >= 1)
    {
      int v19 = 0;
      uint64_t v20 = v17;
      do
      {
        if (!sub_1000BEECC(v9, v20)) {
          break;
        }
        if (!sub_1000BEECC(v9, v20 + 1)) {
          break;
        }
        if (!sub_1000BF14C(v9, (uint64_t *)v20 + 6)) {
          break;
        }
        *((void *)v20 + 5) = *((void *)v20 + 6);
        int v42 = 0;
        if (!sub_1000BEECC(v9, &v42)) {
          break;
        }
        v20[14] = v42;
        sub_1000C2F04(8 * *v20, v21, v22, v23, v24, v25, v26, v27);
        *((void *)v20 + 2) = v28;
        if (*v20 >= 1)
        {
          uint64_t v36 = 0;
          uint64_t v37 = 0;
          do
          {
            if (!sub_1000BEECC(v9, (void *)(*((void *)v20 + 2) + v36))) {
              break;
            }
            if (!sub_1000BEE7C(v9, (_DWORD *)(*((void *)v20 + 2) + v36 + 4))) {
              break;
            }
            ++v37;
            v36 += 8;
          }
          while (v37 < *v20);
          uint64_t v28 = *((void *)v20 + 2);
        }
        *((void *)v20 + 1) = v28;
        sub_1000C2F04(12 * v20[1], v29, v30, v31, v32, v33, v34, v35);
        *((void *)v20 + 4) = v38;
        if (v20[1] >= 1)
        {
          uint64_t v39 = 0;
          uint64_t v40 = 0;
          do
          {
            int v42 = 0;
            if (!sub_1000BEECC(v9, &v42)) {
              break;
            }
            *(_DWORD *)(*((void *)v20 + 4) + v39) = v42;
            int v42 = 0;
            if (!sub_1000BEECC(v9, &v42)) {
              break;
            }
            *(_DWORD *)(*((void *)v20 + 4) + v39 + 4) = v42;
            if (!sub_1000BEECC(v9, (void *)(*((void *)v20 + 4) + v39 + 8))) {
              break;
            }
            ++v40;
            v39 += 12;
          }
          while (v40 < v20[1]);
        }
        *((void *)v20 + 3) = *((void *)v20 + 4);
        v20 += 16;
        ++v19;
      }
      while (v19 < v43);
    }
  }
  else
  {
    uint64_t v18 = 0;
  }
  sub_1000BED3C(v9);
  return v18;
}

int *sub_100095D0C(int *result)
{
  if (result)
  {
    uint64_t v1 = (uint64_t)result;
    if (*result >= 1)
    {
      signed int v2 = result + 8;
      do
      {
        sub_1000C321C(*((void *)v2 + 2));
        sub_1000C321C(*((void *)v2 - 2));
        sub_1000C321C(*(void *)v2);
        int v3 = v2[8];
        v2 += 16;
      }
      while (v3 > 0);
    }
    return (int *)sub_1000C321C(v1);
  }
  return result;
}

uint64_t sub_100095D80(int a1, int a2)
{
  uint64_t v4 = sub_1000C33A0(48);
  uint64_t v5 = v4;
  if (!v4) {
    return v5;
  }
  int v6 = (unsigned __int16)(100 * a1 / (1000 * a2));
  *(_DWORD *)(v4 + 28) = v6;
  uint64_t v7 = sub_1000C33A0((2 * v6));
  *(void *)(v5 + 16) = v7;
  if (!v7)
  {
    sub_1000C321C(0);
    sub_1000C321C(v5);
    return 0;
  }
  *(_WORD *)(v5 + 4) = (unsigned __int16)(100 * a2 / a1) << 7;
  uint64_t v8 = qword_100101CC0;
  if (!qword_100101CC0)
  {
    char v9 = 7;
    *(_DWORD *)(v5 + 24) = 7;
    goto LABEL_13;
  }
  if (*(_DWORD *)(qword_100101CC0 + 2868))
  {
    char v9 = 11;
    *(_DWORD *)(v5 + 24) = 11;
    if (!*(_DWORD *)(v8 + 2852)) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (*(_DWORD *)(qword_100101CC0 + 2888))
  {
    *(_DWORD *)(v5 + 40) = 1;
    char v9 = 6;
    *(_DWORD *)(v5 + 24) = 6;
    if (!*(_DWORD *)(v8 + 2852)) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  char v9 = 7;
  *(_DWORD *)(v5 + 24) = 7;
  if (*(_DWORD *)(v8 + 2852)) {
LABEL_12:
  }
    *(_DWORD *)(v5 + 44) = 1;
LABEL_13:
  if (*(_DWORD *)(v5 + 44))
  {
    *(_DWORD *)(v5 + 6) = 0x7FFF;
    if (*(_DWORD *)(v5 + 40)) {
      int v11 = 80;
    }
    else {
      int v11 = 40;
    }
    *(_WORD *)(v5 + 10) = v11 << v9;
    return v5;
  }
  else
  {
    int v12 = 100 << v9;
    if ((100 << v9) >= 0x8000) {
      LOWORD(v12) = 0x7FFF;
    }
    *(_WORD *)(v5 + 6) = v12;
    unsigned int v13 = 200 << v9;
    if (v13 >= 0x8000) {
      LOWORD(v13) = 0x7FFF;
    }
    *(_WORD *)(v5 + 8) = v13;
    *(_WORD *)(v5 + 10) = 0;
    return v5;
  }
}

uint64_t sub_100095F04(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    sub_1000C321C(*(void *)(result + 16));
    return sub_1000C321C(v1);
  }
  return result;
}

uint64_t sub_100095F48(uint64_t result)
{
  if (*(_DWORD *)(result + 44))
  {
    *(_DWORD *)(result + 6) = 0x7FFF;
    int v1 = *(_DWORD *)(result + 24);
    if (*(_DWORD *)(result + 40)) {
      int v2 = 80 << v1;
    }
    else {
      int v2 = 40 << v1;
    }
    *(_WORD *)(result + 10) = v2;
  }
  else
  {
    int v3 = *(_DWORD *)(result + 24);
    int v4 = 100 << v3;
    if (100 << v3 >= 0x8000) {
      LOWORD(v4) = 0x7FFF;
    }
    *(_WORD *)(result + 6) = v4;
    int v5 = 200 << v3;
    if (v5 >= 0x8000) {
      LOWORD(v5) = 0x7FFF;
    }
    *(_WORD *)(result + 8) = v5;
    *(_WORD *)(result + 10) = 0;
  }
  return result;
}

uint64_t sub_100095FBC(uint64_t result)
{
  *(_DWORD *)uint64_t result = 0;
  *(_DWORD *)(result + 32) = 0;
  if (*(int *)(result + 28) >= 1)
  {
    uint64_t v1 = 0;
    do
      *(_WORD *)(*(void *)(result + 16) + 2 * v1++) = 0;
    while (v1 < *(int *)(result + 28));
  }
  *(_DWORD *)(result + 36) = 0;
  if (*(_DWORD *)(result + 44))
  {
    *(_DWORD *)(result + 6) = 0x7FFF;
    if (*(_DWORD *)(result + 40)) {
      int v2 = 80;
    }
    else {
      int v2 = 40;
    }
    *(_WORD *)(result + 10) = v2 << *(_DWORD *)(result + 24);
  }
  return result;
}

uint64_t sub_100096024(uint64_t a1, int a2)
{
  int v2 = *(__int16 *)(a1 + 6);
  LOWORD(v3) = a2;
  if (v2 < a2) {
    int v3 = v2 + ((2 * (a2 - v2) * *(__int16 *)(a1 + 4) + 0x8000) >> 16);
  }
  *(_WORD *)(a1 + 6) = v3;
  int v4 = (__int16)(*(_WORD *)(a1 + 10) + v3);
  if (v4 <= a2) {
    int v4 = a2;
  }
  int v5 = *(__int16 *)(a1 + 8);
  if (v4 < v5) {
    int v4 = v5 + ((2 * (a2 - v5) * *(__int16 *)(a1 + 4) + 0x8000) >> 16);
  }
  *(_WORD *)(a1 + 8) = v4;
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(int *)(a1 + 32);
  *(_DWORD *)a1 += a2 - *(__int16 *)(v6 + 2 * v7);
  *(_DWORD *)(a1 + 32) = v7 + 1;
  *(_WORD *)(v6 + 2 * v7) = a2;
  int v8 = *(_DWORD *)(a1 + 28);
  if (*(_DWORD *)(a1 + 32) >= v8) {
    *(_DWORD *)(a1 + 32) = 0;
  }
  int v9 = *(__int16 *)(a1 + 6);
  int v10 = *(__int16 *)(a1 + 8) - v9;
  if (*(_DWORD *)(a1 + 36) == 2) {
    char v11 = 12;
  }
  else {
    char v11 = 14;
  }
  int v12 = v8 * (__int16)(v9 + (((v10 << v11) + 0x4000) >> 15));
  BOOL v13 = *(_DWORD *)a1 <= v12;
  BOOL v14 = *(_DWORD *)a1 > v12;
  if (v13) {
    int v15 = 1;
  }
  else {
    int v15 = 2;
  }
  *(_DWORD *)(a1 + 36) = v15;
  return (a2 > (__int16)(v9 + (((v10 << 13) + 0x4000) >> 15))) | (2 * v14);
}

uint64_t sub_100096130(uint64_t result, _WORD *a2)
{
  *a2 = *(_WORD *)(result + 6);
  a2[1] = *(_WORD *)(result + 8);
  return result;
}

uint64_t sub_100096144(uint64_t result, _WORD *a2)
{
  *(_WORD *)(result + 6) = *a2;
  *(_WORD *)(result + 8) = a2[1];
  return result;
}

uint64_t sub_100096158(uint64_t a1, unint64_t a2, uint64_t a3, _WORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  BOOL v14 = (unsigned __int16 *)a2;
  *a4 = -1;
  unint64_t v16 = sub_1000CED6C(a2);
  uint64_t v24 = v16;
  if (v16)
  {
    uint64_t v38 = a6;
    uint64_t v25 = 2 * ((int)v16 + 1);
    unint64_t v26 = sub_1000CD3E8(v25, v17, v18, v19, v20, v21, v22, v23);
    uint64_t v27 = (void *)v26;
    uint64_t v37 = v25;
    if ((int)v24 < 1)
    {
      uint64_t v28 = 0;
    }
    else
    {
      unsigned int v36 = a5;
      uint64_t v28 = v24;
      uint64_t v24 = v24;
      uint64_t v29 = (_WORD *)v26;
      do
      {
        unsigned int v30 = *v14++;
        *v29++ = sub_1000D0574(v30);
        --v24;
      }
      while (v24);
      a5 = v36;
    }
    *((_WORD *)v27 + v28) = 0;
    uint64_t v24 = (*(uint64_t (**)(uint64_t, void *, uint64_t, _WORD *, uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 16))(a1, v27, a3, a4, a5, v38, a7, a8);
    if (v24 && *(void *)(a1 + 152)) {
      uint64_t v24 = sub_100096BC8(a1, v24, (uint64_t)a4, a5, v31, v32, v33, v34);
    }
    sub_1000CD4D0(v27, v37);
  }
  return v24;
}

uint64_t sub_10009628C(uint64_t a1, char *a2, int a3, uint64_t a4, _WORD *a5, uint64_t a6, uint64_t a7, unsigned int a8, uint64_t a9)
{
  *a5 = -1;
  int v15 = sub_1000CAD00((unint64_t)a2) + 1;
  uint64_t v23 = (void *)sub_1000CD3E8(2 * v15, v16, v17, v18, v19, v20, v21, v22);
  sub_1000C031C(a3, a2, v15, (uint64_t)v23);
  uint64_t v24 = sub_100096158(a1, (unint64_t)v23, a4, a5, a6, a7, a8, a9);
  sub_1000CD4D0(v23, 2 * v15);
  return v24;
}

uint64_t sub_100096364(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(void))(a1 + 24);
  if (v1) {
    return v1();
  }
  else {
    return 0xFFFFFFFFLL;
  }
}

uint64_t *sub_100096378(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result = sub_1000BEC58(a1, "bpm0", a2, a4, a5, a6, a7, a8);
  if (result)
  {
    uint64_t v9 = (uint64_t)result;
    uint64_t v10 = sub_1000963C0((uint64_t)result);
    sub_1000BED3C(v9);
    return (uint64_t *)v10;
  }
  return result;
}

uint64_t sub_1000963C0(uint64_t a1)
{
  int v3 = 0;
  if (!sub_1000BEECC(a1, &v3)) {
    return 0;
  }
  switch(v3)
  {
    case 0:
      uint64_t result = sub_10009ADB8(a1);
      break;
    case 1:
      uint64_t result = (uint64_t)sub_100098F38(a1);
      break;
    case 2:
      uint64_t result = sub_100097AD4(a1);
      break;
    case 3:
      uint64_t result = sub_1000987B0(a1);
      break;
    case 4:
      uint64_t result = (uint64_t)sub_10009926C(a1);
      break;
    case 5:
      uint64_t result = (uint64_t)sub_100099890(a1);
      break;
    default:
      return 0;
  }
  return result;
}

uint64_t sub_1000964D0(void *a1)
{
  sub_10007A984(a1[20]);
  sub_1000C321C(a1[18]);
  sub_1000C321C(a1[15]);
  sub_10007C2D8(a1[11]);
  uint64_t v2 = a1[7];
  return sub_10007C2D8(v2);
}

uint64_t sub_100096524(uint64_t a1, _WORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = 0;
  int v16 = 0;
  sub_10007C324(*(void *)(a1 + 80), *(unsigned __int16 *)(a1 + 96), &v17, &v16);
  if ((int)a4 >= 1)
  {
    int v7 = 0;
    int v8 = 1;
    uint64_t v9 = a2;
    uint64_t result = a4;
    while (1)
    {
      int v11 = (unsigned __int16)*a2;
      if (v11 == 0xFFFF)
      {
        if (v8) {
          uint64_t result = (result - 1);
        }
        else {
          *v9++ = -1;
        }
        int v7 = 0;
        LODWORD(a4) = a4 - 1;
        int v8 = 1;
        goto LABEL_4;
      }
      int v12 = *(unsigned __int16 *)(a1 + 68);
      if (v7)
      {
        if (v11 != v12)
        {
          uint64_t v13 = v16;
          if (v16 < 1)
          {
LABEL_14:
            int v7 = 1;
          }
          else
          {
            BOOL v14 = v17;
            while (1)
            {
              int v15 = *v14++;
              if (v11 == v15) {
                break;
              }
              if (!--v13) {
                goto LABEL_14;
              }
            }
            int v7 = 0;
            *v9++ = v12;
            LOWORD(v11) = *a2;
          }
          goto LABEL_20;
        }
      }
      else if (v11 != v12)
      {
        int v7 = 0;
LABEL_20:
        int v8 = 0;
        *v9++ = v11;
        goto LABEL_4;
      }
      int v7 = 1;
LABEL_4:
      ++a2;
      if ((int)a4 <= 0) {
        return result;
      }
    }
  }
  return a4;
}

uint64_t sub_10009663C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = a4;
  if ((int)a4 < 1)
  {
    int v15 = (void *)sub_1000CD3E8(0, a2, a3, a4, a5, a6, a7, a8);
    uint64_t v17 = 0;
    goto LABEL_98;
  }
  uint64_t v9 = (char *)a2;
  uint64_t v11 = 0;
  int v12 = a4;
  do
  {
    int v13 = *(__int16 *)(a2 + 2 * v11++);
    v12 -= v13 == -1;
  }
  while (v12);
  BOOL v14 = (void *)sub_1000CD3E8(v11, a2, a3, a4, a5, a6, a7, a8);
  int v15 = v14;
  if (!v11)
  {
    uint64_t v80 = 0;
    unsigned int v81 = v8;
    int v16 = 0;
    if ((int)v8 < 1) {
      goto LABEL_91;
    }
LABEL_9:
    uint64_t v18 = (__int16 *)v9;
    int v82 = v9;
    int v84 = v15;
    while (1)
    {
      int v83 = v8;
      uint64_t v19 = 0;
      uint64_t v20 = 0xFFFFFFFF00000000;
      uint64_t v21 = 0xFFFFFFFE00000000;
      do
      {
        int v22 = v18[v19];
        v20 += (uint64_t)&_mh_execute_header;
        v21 += (uint64_t)&_mh_execute_header;
        ++v19;
      }
      while (v22 != -1);
      if (v18[v21 >> 32] != *(_WORD *)(a1 + 70))
      {
        *((unsigned char *)v15 + (((char *)v18 - v9) >> 1) + (v20 >> 32) - 1) = 1;
        ++v16;
      }
      int v23 = v19 - 1;
      unsigned int v24 = *(unsigned __int16 *)(a1 + 96);
      uint64_t v25 = *(void *)(a1 + 80);
      int v88 = 0;
      int v87 = 0;
      sub_10007C324(v25, v24, &v88, &v87);
      if (v23 >= 1 && v87 >= 1) {
        break;
      }
      do
LABEL_22:
        int v32 = *v18++;
      while (v32 != -1);
LABEL_10:
      LODWORD(v8) = v83 - 1;
      if (v83 <= 1) {
        goto LABEL_91;
      }
    }
    int v26 = 0;
    uint64_t v27 = (unsigned __int16 *)v18;
LABEL_18:
    int v86 = v27;
    int v28 = *v27;
    uint64_t v29 = v88;
    uint64_t v30 = v87;
    while (1)
    {
      int v31 = *v29++;
      if (v28 == v31) {
        break;
      }
      if (!--v30)
      {
        ++v26;
        uint64_t v27 = v86 + 1;
        if (v23 == v26) {
          goto LABEL_22;
        }
        goto LABEL_18;
      }
    }
    int v85 = v16;
    unsigned int v33 = *(unsigned __int16 *)(a1 + 96);
    uint64_t v34 = *(void *)(a1 + 80);
    int v88 = 0;
    int v87 = 0;
    sub_10007C324(v34, v33, &v88, &v87);
    if (v87 <= 0)
    {
      do
LABEL_30:
        int v42 = *v18++;
      while (v42 != -1);
      int v15 = v84;
      int v16 = v85;
      goto LABEL_10;
    }
    int v35 = 0;
    unsigned int v36 = &v18[v20 >> 32];
    while (1)
    {
      int v38 = (unsigned __int16)*--v36;
      int v37 = v38;
      uint64_t v39 = v88;
      uint64_t v40 = v87;
      do
      {
        int v41 = *v39++;
        if (v37 == v41)
        {
          while (1)
          {
            if (v36 <= (__int16 *)v86) {
              goto LABEL_30;
            }
            unsigned int v44 = *(unsigned __int16 *)(a1 + 98);
            unint64_t v45 = (unint64_t)((char *)v36 - (char *)v18) >> 1;
            uint64_t v46 = *(void *)(a1 + 80);
            int v88 = 0;
            int v87 = 0;
            sub_10007C324(v46, v44, &v88, &v87);
            uint64_t v47 = 0;
            if (v45 > 0x7FFFFFFE) {
              goto LABEL_46;
            }
            if (v87 >= 1) {
              break;
            }
            uint64_t v47 = 0;
            if (v36 > v18)
            {
LABEL_47:
              if (*(v36 - 1) == *(_WORD *)(a1 + 68)) {
                uint8x8_t v54 = v36 - 1;
              }
              else {
                uint8x8_t v54 = v36;
              }
              unint64_t v45 = (unint64_t)((char *)v54 - (char *)v18) >> 1;
              unsigned int v36 = v54;
              goto LABEL_53;
            }
LABEL_52:
            uint8x8_t v54 = v36;
LABEL_53:
            unsigned int v55 = *(unsigned __int16 *)(a1 + 96);
            int v43 = (char *)(v36 - 1);
            uint64_t v56 = *(void *)(a1 + 80);
            int v88 = 0;
            int v87 = 0;
            sub_10007C324(v56, v55, &v88, &v87);
            if ((int)v45 < 1)
            {
              unsigned int v36 = 0;
LABEL_64:
              if (!v47) {
                goto LABEL_66;
              }
LABEL_65:
              if (v47 < (unsigned __int16 *)v36) {
                goto LABEL_66;
              }
            }
            else
            {
              if (v87 >= 1)
              {
                int v57 = 0;
                unsigned int v58 = v36 - 1;
LABEL_56:
                uint64_t v59 = v88;
                uint64_t v60 = v87;
                while (1)
                {
                  int v61 = *v59++;
                  if ((unsigned __int16)*v58 == v61) {
                    break;
                  }
                  if (!--v60)
                  {
                    unsigned int v36 = 0;
                    ++v57;
                    --v58;
                    if (v57 != v45) {
                      goto LABEL_56;
                    }
                    goto LABEL_64;
                  }
                }
                unsigned int v36 = v58;
                if (v47) {
                  goto LABEL_65;
                }
                goto LABEL_66;
              }
              unsigned int v36 = 0;
              if (v47) {
                goto LABEL_65;
              }
LABEL_66:
              int v62 = *(_DWORD *)(a1 + 104);
              if (v62 < 1) {
                goto LABEL_34;
              }
              uint64_t v63 = 0;
              uint64_t v64 = (unsigned __int16 *)(*(void *)(a1 + 136) + 2);
              uint64_t v65 = v54 - v36;
              while (v65 < *(unsigned __int8 *)(*(void *)(a1 + 112) + v63))
              {
                do
                  int v66 = (__int16)*v64++;
                while (v66 != -1);
LABEL_68:
                if (++v63 >= v62) {
                  goto LABEL_33;
                }
              }
              int v67 = (unsigned __int16 *)v43;
              if ((__int16)*v64 != -1)
              {
                while (1)
                {
                  int v88 = 0;
                  int v87 = 0;
                  sub_10007C324(*(void *)(a1 + 80), *v64, &v88, &v87);
                  uint64_t v68 = v87;
                  if (v87 < 1) {
                    break;
                  }
                  unsigned int v69 = v88;
                  while (1)
                  {
                    int v70 = *v69++;
                    if (*v67 == v70) {
                      break;
                    }
                    if (!--v68) {
                      goto LABEL_81;
                    }
                  }
                  if (v67 == (unsigned __int16 *)v18)
                  {
                    int v72 = 0;
                    int v76 = v64[1];
                    ++v64;
                    int v73 = v76;
                    if (v76 == 0xFFFF) {
                      goto LABEL_84;
                    }
                    goto LABEL_83;
                  }
                  --v67;
                  int v71 = (__int16)v64[1];
                  ++v64;
                  if (v71 == -1) {
                    goto LABEL_32;
                  }
                }
LABEL_81:
                if (v67 != (unsigned __int16 *)v18) {
                  goto LABEL_85;
                }
                int v72 = 1;
                int v74 = v64[1];
                ++v64;
                int v73 = v74;
                if (v74 == 0xFFFF) {
                  goto LABEL_84;
                }
LABEL_83:
                if (v73 != *(unsigned __int16 *)(a1 + 100)) {
                  goto LABEL_85;
                }
LABEL_84:
                if (!v72) {
                  goto LABEL_32;
                }
                do
LABEL_85:
                  int v75 = (__int16)*v64++;
                while (v75 != -1);
                int v62 = *(_DWORD *)(a1 + 104);
                goto LABEL_68;
              }
LABEL_32:
              v43 -= 2 * *(unsigned __int8 *)(*(void *)(a1 + 112) + v63);
LABEL_33:
              uint64_t v9 = v82;
LABEL_34:
              *((unsigned char *)v84 + ((v43 - v9) >> 1)) = 1;
              ++v85;
            }
          }
          int v48 = 0;
          uint8x8_t v49 = v36;
LABEL_39:
          uint8x8_t v50 = v88;
          uint64_t v51 = v87;
          while (1)
          {
            int v52 = *v50++;
            if ((unsigned __int16)*v49 == v52) {
              break;
            }
            if (!--v51)
            {
              uint64_t v47 = 0;
              --v49;
              if (v48++ == v45) {
                goto LABEL_46;
              }
              goto LABEL_39;
            }
          }
          uint64_t v47 = (unsigned __int16 *)v49;
LABEL_46:
          if (v36 > v18) {
            goto LABEL_47;
          }
          goto LABEL_52;
        }
        --v40;
      }
      while (v40);
      if (v23 == ++v35) {
        goto LABEL_30;
      }
    }
  }
  bzero(v14, v11);
  uint64_t v80 = v11;
  unsigned int v81 = v8;
  int v16 = 0;
  if ((int)v8 >= 1) {
    goto LABEL_9;
  }
LABEL_91:
  if (v11)
  {
    uint64_t v17 = v80;
    uint64_t v77 = (uint64_t)&v9[2 * v80 + 2 * v16];
    uint64_t v78 = (int)v11 - 1;
    uint64_t v8 = v81;
    do
    {
      while (*((unsigned char *)v15 + v78))
      {
        *(_WORD *)(v77 - 2) = *(_WORD *)(a1 + 70);
        *(_WORD *)(v77 - 4) = *(_WORD *)&v9[2 * v78];
        v77 -= 4;
        --v78;
        LODWORD(v11) = v11 - 1;
        if (!v11) {
          goto LABEL_98;
        }
      }
      *(_WORD *)(v77 - 2) = *(_WORD *)&v9[2 * v78];
      v77 -= 2;
      --v78;
      LODWORD(v11) = v11 - 1;
    }
    while (v11);
  }
  else
  {
    uint64_t v8 = v81;
    uint64_t v17 = v80;
  }
LABEL_98:
  sub_1000CD4D0(v15, v17);
  return v8;
}

uint64_t sub_100096BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a4;
  uint64_t v9 = (__int16 *)a3;
  int v10 = a2;
  uint64_t v12 = 4 * (int)a2;
  uint64_t v20 = (void *)sub_1000CD3E8(v12, a2, a3, a4, a5, a6, a7, a8);
  uint64_t v21 = v10;
  if (v10 < 1)
  {
    uint64_t v23 = 0;
  }
  else
  {
    uint64_t v22 = 0;
    LODWORD(v23) = 0;
    unsigned int v24 = v9;
    do
    {
      int v25 = -1;
      do
      {
        int v26 = *v24++;
        ++v25;
      }
      while (v26 != -1);
      *((_DWORD *)v20 + v22) = v25;
      uint64_t v23 = v23 + sub_10007A9E8(*(void *)(a1 + 152), v25) + 1;
      ++v22;
    }
    while (v22 != v10);
  }
  uint64_t v27 = 2 * (int)v23;
  int v28 = (void *)sub_1000CD3E8(v27, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v52 = v12;
  uint64_t v39 = (void *)sub_1000CD3E8(v12, v29, v30, v31, v32, v33, v34, v35);
  if (v10 <= 0)
  {
    uint64_t v40 = 0;
    *uint64_t v9 = -1;
  }
  else
  {
    uint8x8_t v50 = v28;
    uint64_t v51 = 2 * (int)v23;
    uint64_t v40 = 0;
    uint64_t v41 = (uint64_t)v9;
    while (1)
    {
      int v42 = sub_10007AD50(*(void *)(a1 + 152), *((unsigned int *)v20 + v40), v41, v23, (uint64_t)v28, v36, v37, v38);
      if (!v42 || (int)v23 <= v42) {
        break;
      }
      *((_DWORD *)v39 + v40) = v42;
      v41 += 2 * *((int *)v20 + v40) + 2;
      unsigned int v44 = (_WORD *)v28 + v42;
      *unsigned int v44 = -1;
      int v28 = v44 + 1;
      uint64_t v23 = (v23 + ~v42);
      if (v21 == ++v40)
      {
        uint64_t v40 = v21;
        break;
      }
    }
    int v28 = v50;
    uint64_t v27 = v51;
    *uint64_t v9 = -1;
    if (v40)
    {
      uint64_t v45 = 0;
      uint64_t v46 = (unsigned __int16 *)v50;
      while (1)
      {
        v8 += ~*((_DWORD *)v39 + v45);
        if (v8 < 0) {
          break;
        }
        int v47 = *v46;
        if (v47 != 0xFFFF)
        {
          do
          {
            *v9++ = v47;
            int v48 = v46[1];
            ++v46;
            LOWORD(v47) = v48;
          }
          while (v48 != 0xFFFF);
        }
        ++v46;
        *v9++ = -1;
        if (++v45 == v40) {
          goto LABEL_25;
        }
      }
      uint64_t v40 = v45;
    }
  }
LABEL_25:
  sub_1000CD4D0(v39, v52);
  sub_1000CD4D0(v28, v27);
  sub_1000CD4D0(v20, v52);
  return v40;
}

uint64_t sub_100096DB4(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1000BEECC(a2, (void *)(a1 + 40));
  if (!result) {
    return result;
  }
  uint64_t result = sub_1000BEECC(a2, (void *)(a1 + 64));
  if (!result) {
    return result;
  }
  uint64_t result = sub_1000BEF74(a2, (_WORD *)(a1 + 68));
  if (!result) {
    return result;
  }
  uint64_t result = sub_1000BEF74(a2, (_WORD *)(a1 + 70));
  if (!result) {
    return result;
  }
  uint64_t result = sub_1000BEECC(a2, (void *)(a1 + 72));
  if (!result) {
    return result;
  }
  uint64_t result = sub_1000BEF74(a2, (_WORD *)(a1 + 96));
  if (!result) {
    return result;
  }
  uint64_t result = sub_1000BEF74(a2, (_WORD *)(a1 + 98));
  if (!result) {
    return result;
  }
  uint64_t result = sub_1000BEF74(a2, (_WORD *)(a1 + 100));
  if (!result) {
    return result;
  }
  int v5 = (int *)(a1 + 104);
  uint64_t result = sub_1000BEECC(a2, (void *)(a1 + 104));
  if (!result) {
    return result;
  }
  uint64_t result = sub_1000BEECC(a2, (void *)(a1 + 128));
  if (!result) {
    return result;
  }
  int v10 = 0;
  uint64_t result = sub_1000BEE7C(a2, &v10);
  if (!result) {
    return result;
  }
  uint64_t result = (uint64_t)sub_10007C40C(a2);
  *(void *)(a1 + 56) = result;
  if (!result) {
    return result;
  }
  *(void *)(a1 + 48) = result;
  if (*(_WORD *)(a1 + 96))
  {
    uint64_t result = (uint64_t)sub_10007C40C(a2);
    *(void *)(a1 + 88) = result;
    if (!result) {
      return result;
    }
    *(void *)(a1 + 80) = result;
  }
  if (*v5 < 1) {
    goto LABEL_25;
  }
  int v9 = 0;
  uint64_t v6 = (void *)(a1 + 120);
  if (!sub_1000BF078(a2, 1, (uint64_t *)(a1 + 120), &v9)) {
    return 0;
  }
  if (*v6)
  {
    if (v9 == *v5)
    {
      *(void *)(a1 + 112) = *v6;
      goto LABEL_21;
    }
    return 0;
  }
LABEL_21:
  int v8 = 0;
  int v7 = (void *)(a1 + 144);
  if (!sub_1000BF078(a2, 2, (uint64_t *)(a1 + 144), &v8)) {
    return 0;
  }
  if (*v7)
  {
    if (v8 == *(_DWORD *)(a1 + 128))
    {
      *(void *)(a1 + 136) = *v7;
      goto LABEL_25;
    }
    return 0;
  }
LABEL_25:
  if (v10)
  {
    uint64_t result = (uint64_t)sub_10007B078(a2);
    *(void *)(a1 + 160) = result;
    if (!result) {
      return result;
    }
    *(void *)(a1 + 152) = result;
  }
  return 1;
}

uint64_t sub_100096FB8(void *a1)
{
  sub_1000C321C(a1[37]);
  sub_1000C321C(a1[35]);
  sub_1000C321C(a1[33]);
  sub_1000C321C(a1[30]);
  sub_1000C321C(a1[28]);
  sub_1000C321C(a1[25]);
  sub_1000C321C(a1[23]);
  return sub_1000964D0(a1);
}

uint64_t sub_100097024(uint64_t a1, char *a2, int a3, unsigned __int16 *a4, int a5, void *a6, int a7, int *a8)
{
  unsigned int v67 = 0;
  if (a3 == 2) {
    int v8 = 9;
  }
  else {
    int v8 = a3;
  }
  if (a3 == 1) {
    int v8 = 8;
  }
  if (!a3) {
    int v8 = 7;
  }
  if ((v8 - 10) >= 0xFFFFFFFD) {
    int v9 = v8;
  }
  else {
    int v9 = 7;
  }
  *a4 = -1;
  *a8 = 0;
  if (a7 >= 10) {
    int v10 = 10;
  }
  else {
    int v10 = a7;
  }
  LOWORD(v11) = *(_WORD *)a2;
  if (*(_WORD *)a2)
  {
    int v18 = 0;
    uint64_t v19 = 2;
    do
    {
      if (!sub_1000CDF3C((unsigned __int16)v11)) {
        ++v18;
      }
      int v11 = *(unsigned __int16 *)&a2[v19];
      v19 += 2;
    }
    while (v11);
    if (v18)
    {
      uint64_t v66 = 2 * (2 * v18 + 2);
      uint64_t v27 = (char *)sub_1000CD3E8(v66, v20, v21, v22, v23, v24, v25, v26);
      switch(v9)
      {
        case 9:
          if (!sub_100097968(a1, a2, v27, (int *)&v67)) {
            goto LABEL_38;
          }
          break;
        case 8:
          if (!sub_100097494(a1, a2, v18, (uint64_t)v27, (int *)&v67)) {
            goto LABEL_38;
          }
          break;
        case 7:
          int v28 = sub_100097494(a1, a2, v18, (uint64_t)v27, (int *)&v67);
          int v29 = v28;
          uint64_t v30 = v67;
          if (v10 <= 1 && v28)
          {
LABEL_41:
            if (*(void *)(a1 + 288))
            {
              uint64_t v36 = &v27[2 * (int)v30];
              uint64_t v37 = v36 - 2;
              if (v36 - 2 > v27)
              {
                do
                {
                  uint64_t v38 = v36;
                  uint64_t v36 = v37;
                  uint64_t v39 = *((unsigned __int16 *)v38 - 1);
                  if (v39 != 0xFFFF)
                  {
                    uint64_t v40 = *(void *)(a1 + 288);
                    int v41 = *(unsigned __int16 *)(v40 + 2 * v39);
                    if (v41 && v41 != 0xFFFF)
                    {
                      for (uint64_t i = v38 - 4; i >= v27; i -= 2)
                      {
                        uint64_t v44 = *(unsigned __int16 *)i;
                        if (v44 == 0xFFFF) {
                          break;
                        }
                        int v45 = *(unsigned __int16 *)(v40 + 2 * v44);
                        if (v45 != 0xFFFF)
                        {
                          if (v45) {
                            *(_WORD *)uint64_t i = v45;
                          }
                          break;
                        }
                      }
                    }
                  }
                  uint64_t v37 = v36 - 2;
                }
                while (v36 - 2 > v27);
                LODWORD(v30) = v67;
              }
            }
            uint64_t v65 = a4;
            uint64_t v46 = v30;
            if ((int)v30 < 1)
            {
              int v47 = 0;
              uint64_t v35 = 0;
              if (a5 < 0) {
LABEL_70:
              }
                *a8 = v47;
            }
            else
            {
              uint64_t v35 = 0;
              int v47 = 0;
              int v48 = v27;
              do
              {
                while (1)
                {
                  unsigned int v51 = *(unsigned __int16 *)v48;
                  v48 += 2;
                  unsigned int v50 = v51;
                  LODWORD(v69) = 0;
                  if (v51 == 0xFFFF) {
                    break;
                  }
                  sub_10007C324(*(void *)(a1 + 48), v50, 0, &v69);
                  if (*(_WORD *)(a1 + 70)) {
                    v47 += v69 + 1;
                  }
                  else {
                    v47 += v69;
                  }
                  if (!--v46) {
                    goto LABEL_69;
                  }
                }
                if (v47++ < a5) {
                  uint64_t v35 = (v35 + 1);
                }
                else {
                  uint64_t v35 = v35;
                }
                --v46;
              }
              while (v46);
LABEL_69:
              if (v47 > a5) {
                goto LABEL_70;
              }
            }
            if (v35)
            {
              if ((int)v30 >= 1)
              {
                uint64_t v52 = 0;
                int v53 = 0;
                uint8x8_t v54 = v65;
                do
                {
                  unsigned int v55 = *(unsigned __int16 *)&v27[2 * v52];
                  uint64_t v69 = 0;
                  int v68 = 0;
                  if (v55 == 0xFFFF)
                  {
                    *v54++ = -1;
                    if (++v53 == v35) {
                      break;
                    }
                  }
                  else
                  {
                    sub_10007C324(*(void *)(a1 + 48), v55, &v69, &v68);
                    if (v68 >= 1)
                    {
                      uint64_t v56 = 0;
                      for (uint64_t j = 0; j < v68; ++j)
                      {
                        v54[j] = *(_WORD *)(v69 + 2 * j);
                        v56 += 2;
                      }
                      uint8x8_t v54 = (_WORD *)((char *)v54 + v56);
                    }
                    if (*(_WORD *)(a1 + 70)) {
                      *v54++ = *(_WORD *)(a1 + 70);
                    }
                  }
                  ++v52;
                }
                while (v52 != v30);
              }
              if (v35 == 2)
              {
                unsigned int v58 = v65;
                do
                  int v59 = (__int16)*v58++;
                while (v59 != -1);
                int v60 = *v65;
                if (v60 == *v58)
                {
                  uint64_t v61 = 1;
                  while (v60 != 0xFFFF)
                  {
                    int v60 = v65[v61];
                    int v62 = v58[v61++];
                    if (v60 != v62) {
                      goto LABEL_90;
                    }
                  }
                  uint64_t v35 = 1;
                }
                else
                {
LABEL_90:
                  uint64_t v35 = 2;
                }
                uint64_t v63 = v66;
              }
              else
              {
                uint64_t v63 = v66;
                if ((int)v35 < 1) {
                  goto LABEL_102;
                }
              }
              bzero(a6, 8 * v35);
            }
            else
            {
              uint64_t v63 = v66;
            }
LABEL_102:
            sub_1000CD4D0(v27, v63);
            return v35;
          }
          LODWORD(v69) = 0;
          int v31 = sub_100097968(a1, a2, &v27[2 * v67], (int *)&v69);
          if (v29)
          {
            if (v31 && v30 == v69)
            {
              if ((int)v30 < 1) {
                goto LABEL_97;
              }
              uint64_t v33 = v30;
              uint64_t v34 = v27;
              while (*(unsigned __int16 *)v34 == *(unsigned __int16 *)&v34[2 * (int)v30])
              {
                v34 += 2;
                if (!--v33) {
                  goto LABEL_97;
                }
              }
            }
          }
          unsigned int v67 = v69 + v30;
LABEL_97:
          if (!(v31 | v29)) {
            goto LABEL_38;
          }
          break;
        default:
LABEL_38:
          sub_1000CD4D0(v27, v66);
          return 0;
      }
      LODWORD(v30) = v67;
      goto LABEL_41;
    }
  }
  return 0;
}

uint64_t sub_100097494(uint64_t a1, char *a2, int a3, uint64_t a4, int *a5)
{
  if (a3 == 1 || a3 >= 5)
  {
    return sub_100097968(a1, a2, (char *)a4, a5);
  }
  int v9 = &a2[2 * (int)sub_1000D04D8(a2, &v63)];
  int v10 = &v9[2 * (int)sub_1000D04D8(v9, &v64)];
  uint64_t v11 = *(int *)(a1 + 248);
  if (!v11) {
    goto LABEL_13;
  }
  int v12 = 0;
  uint64_t v13 = *(void *)(a1 + 256);
  while (1)
  {
    while (1)
    {
      uint64_t v14 = v11 - 1;
      if (v11 - 1 < 0) {
        uint64_t v14 = v11;
      }
      uint64_t v15 = v14 >> 1;
      int v16 = v12 + (v14 >> 1);
      int v17 = 2 * v16;
      unsigned int v18 = *(unsigned __int16 *)(v13 + 4 * v16);
      if (v63 < v18) {
        goto LABEL_5;
      }
      if (v63 == v18) {
        break;
      }
LABEL_12:
      v11 -= (int)v15 + 1;
      int v12 = v16 + 1;
      if (!v11) {
        goto LABEL_13;
      }
    }
    unsigned int v19 = *(unsigned __int16 *)(v13 + 2 * (v17 | 1));
    if (v64 >= v19) {
      break;
    }
LABEL_5:
    uint64_t v11 = (int)v15;
    if (!v15) {
      goto LABEL_13;
    }
  }
  if (v64 != v19) {
    goto LABEL_12;
  }
  if (v16 != -1)
  {
    *(_WORD *)a4 = *(_WORD *)(*(void *)(a1 + 272) + 2 * v17);
    uint64_t v30 = (_WORD *)(a4 + 4);
    *(_WORD *)(a4 + 2) = *(_WORD *)(*(void *)(a1 + 272) + 2 * (v17 | 1));
    if (*(_WORD *)v10) {
      goto LABEL_79;
    }
    goto LABEL_94;
  }
LABEL_13:
  uint64_t v20 = *(int *)(a1 + 208);
  if (v20)
  {
    int v21 = 0;
    while (1)
    {
      while (1)
      {
        uint64_t v22 = v20 - 1;
        if (v20 - 1 < 0) {
          uint64_t v22 = v20;
        }
        uint64_t v23 = v22 >> 1;
        unsigned int v24 = *(unsigned __int16 *)(*(void *)(a1 + 216) + 2 * (v21 + (int)v23));
        if (v24 <= v63) {
          break;
        }
        uint64_t v20 = (int)v23;
        if (!v23) {
          goto LABEL_27;
        }
      }
      uint64_t v25 = v21 + (int)v23;
      if (v24 == v63) {
        break;
      }
      v20 -= (int)v23 + 1;
      int v21 = v25 + 1;
      if (!v20) {
        goto LABEL_27;
      }
    }
    if (v25 != -1)
    {
      uint64_t v27 = *(void *)(a1 + 232);
      goto LABEL_42;
    }
  }
LABEL_27:
  uint64_t v28 = *(void *)(a1 + 176);
  if (v28)
  {
    uint64_t v29 = *(int *)(a1 + 172);
    uint64_t v30 = (_WORD *)a4;
    if (v29)
    {
      int v31 = 0;
      while (1)
      {
        while (1)
        {
          uint64_t v32 = v29 - 1;
          if (v29 - 1 < 0) {
            uint64_t v32 = v29;
          }
          uint64_t v33 = v32 >> 1;
          unsigned int v34 = *(unsigned __int16 *)(v28 + 2 * (v31 + (int)v33));
          if (v34 <= v63) {
            break;
          }
          uint64_t v29 = (int)v33;
          if (!v33) {
            goto LABEL_36;
          }
        }
        uint64_t v25 = v31 + (int)v33;
        if (v34 == v63) {
          break;
        }
        v29 -= (int)v33 + 1;
        int v31 = v25 + 1;
        if (!v29)
        {
LABEL_36:
          uint64_t v30 = (_WORD *)a4;
          goto LABEL_43;
        }
      }
      uint64_t v30 = (_WORD *)a4;
      if (v25 != -1)
      {
        uint64_t v27 = *(void *)(a1 + 192);
LABEL_42:
        *(_WORD *)a4 = *(_WORD *)(v27 + 2 * v25);
        uint64_t v30 = (_WORD *)(a4 + 2);
      }
    }
  }
  else
  {
    uint64_t v35 = *(unsigned __int16 *)(a1 + 168);
    uint64_t v30 = (_WORD *)a4;
    if (v63 >= v35)
    {
      uint64_t v30 = (_WORD *)a4;
      if (v63 <= *(unsigned __int16 *)(a1 + 170))
      {
        int v36 = *(unsigned __int16 *)(*(void *)(a1 + 192) + 2 * (v63 - v35));
        *(_WORD *)a4 = v36;
        uint64_t v30 = (_WORD *)(a4 + 2 * (v36 != 0));
      }
    }
  }
LABEL_43:
  if (a3 == 4)
  {
    uint64_t v37 = *(int *)(a1 + 208);
    if (v37)
    {
      int v38 = 0;
      while (1)
      {
        while (1)
        {
          uint64_t v39 = v37 - 1;
          if (v37 - 1 < 0) {
            uint64_t v39 = v37;
          }
          uint64_t v40 = v39 >> 1;
          unsigned int v41 = *(unsigned __int16 *)(*(void *)(a1 + 216) + 2 * (v38 + (int)v40));
          if (v41 <= v64) {
            break;
          }
          uint64_t v37 = (int)v40;
          if (!v40) {
            goto LABEL_55;
          }
        }
        uint64_t v42 = v38 + (int)v40;
        if (v41 == v64) {
          break;
        }
        v37 -= (int)v40 + 1;
        int v38 = v42 + 1;
        if (!v37) {
          goto LABEL_55;
        }
      }
      if (v42 != -1)
      {
        uint64_t v43 = *(void *)(a1 + 232);
        goto LABEL_71;
      }
    }
  }
LABEL_55:
  uint64_t v44 = *(void *)(a1 + 176);
  if (!v44)
  {
    uint64_t v50 = *(unsigned __int16 *)(a1 + 168);
    if (v64 >= v50 && v64 <= *(unsigned __int16 *)(a1 + 170))
    {
      int v51 = *(unsigned __int16 *)(*(void *)(a1 + 192) + 2 * (v64 - v50));
      *uint64_t v30 = v51;
      v30 += v51 != 0;
      if (!*(_WORD *)v10) {
        goto LABEL_94;
      }
LABEL_79:
      while (1)
      {
        unsigned __int16 v62 = 0;
        int v53 = sub_1000D04D8(v10, &v62);
        if (!v62) {
          break;
        }
        uint64_t v54 = *(unsigned __int16 *)(a1 + 168);
        if (v62 < v54 || v62 > *(unsigned __int16 *)(a1 + 170)) {
          break;
        }
        uint64_t v55 = *(void *)(a1 + 176);
        if (!v55)
        {
          int v52 = *(unsigned __int16 *)(*(void *)(a1 + 192) + 2 * (v62 - v54));
          *uint64_t v30 = v52;
          v30 += v52 != 0;
          break;
        }
        uint64_t v56 = *(int *)(a1 + 172);
        if (!v56) {
          break;
        }
        int v57 = 0;
        while (1)
        {
          while (1)
          {
            uint64_t v58 = v56 - 1;
            if (v56 - 1 < 0) {
              uint64_t v58 = v56;
            }
            uint64_t v59 = v58 >> 1;
            int v60 = v57 + v59;
            unsigned int v61 = *(unsigned __int16 *)(v55 + 2 * (v57 + (int)v59));
            if (v61 <= v62) {
              break;
            }
            uint64_t v56 = (int)v59;
            if (!v59) {
              goto LABEL_77;
            }
          }
          if (v61 == v62) {
            break;
          }
          v56 -= (int)v59 + 1;
          int v57 = v60 + 1;
          if (!v56) {
            goto LABEL_77;
          }
        }
        if (v60 == -1) {
          break;
        }
        *v30++ = *(_WORD *)(*(void *)(a1 + 192) + 2 * v60);
        v10 += 2 * v53;
        if (!*(_WORD *)v10) {
          goto LABEL_94;
        }
      }
LABEL_77:
      v10 += 2 * v53;
    }
    goto LABEL_78;
  }
  uint64_t v45 = *(int *)(a1 + 172);
  if (!v45) {
    goto LABEL_78;
  }
  int v46 = 0;
  while (1)
  {
    while (1)
    {
      uint64_t v47 = v45 - 1;
      if (v45 - 1 < 0) {
        uint64_t v47 = v45;
      }
      uint64_t v48 = v47 >> 1;
      unsigned int v49 = *(unsigned __int16 *)(v44 + 2 * (v46 + (int)v48));
      if (v49 <= v64) {
        break;
      }
      uint64_t v45 = (int)v48;
      if (!v48) {
        goto LABEL_78;
      }
    }
    uint64_t v42 = v46 + (int)v48;
    if (v49 == v64) {
      break;
    }
    v45 -= (int)v48 + 1;
    int v46 = v42 + 1;
    if (!v45) {
      goto LABEL_78;
    }
  }
  if (v42 == -1)
  {
LABEL_78:
    if (*(_WORD *)v10) {
      goto LABEL_79;
    }
    goto LABEL_94;
  }
  uint64_t v43 = *(void *)(a1 + 192);
LABEL_71:
  *v30++ = *(_WORD *)(v43 + 2 * v42);
  if (*(_WORD *)v10) {
    goto LABEL_79;
  }
LABEL_94:
  *a5 = ((unint64_t)v30 - a4) >> 1;
  if (v30 == (_WORD *)a4) {
    return 0;
  }
  *uint64_t v30 = -1;
  ++*a5;
  return 1;
}

uint64_t sub_100097968(uint64_t a1, char *a2, char *a3, int *a4)
{
  int v5 = *(unsigned __int16 *)a2;
  if (!*(_WORD *)a2)
  {
    uint64_t result = 0;
    goto LABEL_23;
  }
  int v7 = a2;
  int v9 = a3;
  do
  {
    unsigned __int16 v21 = 0;
    int v11 = sub_1000D04D8(v7, &v21);
    if (v21)
    {
      uint64_t v12 = *(unsigned __int16 *)(a1 + 168);
      if (v21 >= v12 && v21 <= *(unsigned __int16 *)(a1 + 170))
      {
        uint64_t v13 = *(void *)(a1 + 176);
        if (v13)
        {
          uint64_t v14 = *(int *)(a1 + 172);
          if (v14)
          {
            int v15 = 0;
            while (1)
            {
              while (1)
              {
                uint64_t v16 = v14 - 1;
                if (v14 - 1 < 0) {
                  uint64_t v16 = v14;
                }
                uint64_t v17 = v16 >> 1;
                int v18 = v15 + v17;
                unsigned int v19 = *(unsigned __int16 *)(v13 + 2 * (v15 + (int)v17));
                if (v19 <= v21) {
                  break;
                }
                uint64_t v14 = (int)v17;
                if (!v17) {
                  goto LABEL_4;
                }
              }
              if (v19 == v21) {
                break;
              }
              v14 -= (int)v17 + 1;
              int v15 = v18 + 1;
              if (!v14) {
                goto LABEL_4;
              }
            }
            if (v18 != -1)
            {
              *(_WORD *)int v9 = *(_WORD *)(*(void *)(a1 + 192) + 2 * v18);
              v9 += 2;
            }
          }
        }
        else
        {
          int v10 = *(unsigned __int16 *)(*(void *)(a1 + 192) + 2 * (v21 - v12));
          *(_WORD *)int v9 = v10;
          v9 += 2 * (v10 != 0);
        }
      }
    }
LABEL_4:
    v7 += 2 * v11;
  }
  while (*(_WORD *)v7);
  *a4 = (unint64_t)(v9 - a3) >> 1;
  if (v9 != a3)
  {
    *(_WORD *)int v9 = -1;
    int v5 = *a4 + 1;
    uint64_t result = 1;
LABEL_23:
    *a4 = v5;
    return result;
  }
  return 0;
}

uint64_t sub_100097AD4(uint64_t a1)
{
  uint64_t v2 = sub_1000C33A0(304);
  uint64_t v3 = v2;
  if (v2)
  {
    if (!sub_100096DB4(v2, a1))
    {
LABEL_43:
      sub_1000C321C(v3);
      return 0;
    }
    if (!sub_1000BEF74(a1, (_WORD *)(v3 + 168))) {
      goto LABEL_42;
    }
    if (!sub_1000BEF74(a1, (_WORD *)(v3 + 170))) {
      goto LABEL_42;
    }
    int v4 = (int *)(v3 + 172);
    if (!sub_1000BEECC(a1, (void *)(v3 + 172))) {
      goto LABEL_42;
    }
    int v5 = (_DWORD *)(v3 + 208);
    if (!sub_1000BEECC(a1, (void *)(v3 + 208))) {
      goto LABEL_42;
    }
    uint64_t v6 = (_DWORD *)(v3 + 248);
    if (!sub_1000BEECC(a1, (void *)(v3 + 248))) {
      goto LABEL_42;
    }
    int v18 = 0;
    int v7 = (void *)(v3 + 184);
    if (!sub_1000BF078(a1, 2, (uint64_t *)(v3 + 184), &v18)) {
      goto LABEL_42;
    }
    if (*v7)
    {
      if (v18 != *v4) {
        goto LABEL_42;
      }
      *(void *)(v3 + 176) = *v7;
    }
    int v8 = (uint64_t *)(v3 + 200);
    if (*(void *)(v3 + 176))
    {
      int v18 = 0;
      if (!sub_1000BF078(a1, 2, (uint64_t *)(v3 + 200), &v18)) {
        goto LABEL_42;
      }
      uint64_t v9 = *v8;
      if (!*v8) {
        goto LABEL_21;
      }
      int v10 = v18;
      int v11 = *v4;
    }
    else
    {
      int v18 = 0;
      if (!sub_1000BF078(a1, 2, (uint64_t *)(v3 + 200), &v18)) {
        goto LABEL_42;
      }
      uint64_t v9 = *v8;
      if (!*v8) {
        goto LABEL_21;
      }
      int v10 = v18;
      int v11 = *(unsigned __int16 *)(v3 + 170) - *(unsigned __int16 *)(v3 + 168) + 1;
    }
    if (v10 != v11) {
      goto LABEL_42;
    }
    *(void *)(v3 + 192) = v9;
LABEL_21:
    int v18 = 0;
    uint64_t v12 = (void *)(v3 + 224);
    if (sub_1000BF078(a1, 2, (uint64_t *)(v3 + 224), &v18))
    {
      if (*v12)
      {
        if (v18 != *v5) {
          goto LABEL_42;
        }
        *(void *)(v3 + 216) = *v12;
      }
      int v18 = 0;
      uint64_t v13 = (void *)(v3 + 240);
      if (sub_1000BF078(a1, 2, (uint64_t *)(v3 + 240), &v18))
      {
        if (*v13)
        {
          if (v18 != *v5) {
            goto LABEL_42;
          }
          *(void *)(v3 + 232) = *v13;
        }
        int v18 = 0;
        uint64_t v14 = (void *)(v3 + 264);
        if (sub_1000BF078(a1, 2, (uint64_t *)(v3 + 264), &v18))
        {
          if (*v14)
          {
            if (v18 != 2 * *v6) {
              goto LABEL_42;
            }
            *(void *)(v3 + 256) = *v14;
          }
          int v18 = 0;
          int v15 = (void *)(v3 + 280);
          if (sub_1000BF078(a1, 2, (uint64_t *)(v3 + 280), &v18))
          {
            if (!*v15) {
              goto LABEL_37;
            }
            if (v18 == 2 * *v6)
            {
              *(void *)(v3 + 272) = *v15;
LABEL_37:
              int v18 = 0;
              uint64_t v16 = (void *)(v3 + 296);
              if (sub_1000BF078(a1, 2, (uint64_t *)(v3 + 296), &v18))
              {
                if (!*v16)
                {
LABEL_41:
                  *(void *)(v3 + 8) = sub_100096FB8;
                  *(void *)(v3 + 24) = 0;
                  *(void *)(v3 + 32) = 0;
                  *(void *)(v3 + 16) = sub_100097024;
                  return v3;
                }
                if (v18 == *(_DWORD *)(v3 + 64))
                {
                  *(void *)(v3 + 288) = *v16;
                  goto LABEL_41;
                }
              }
            }
          }
        }
      }
    }
LABEL_42:
    sub_1000C321C(*(void *)(v3 + 296));
    sub_1000C321C(*(void *)(v3 + 280));
    sub_1000C321C(*(void *)(v3 + 264));
    sub_1000C321C(*(void *)(v3 + 240));
    sub_1000C321C(*(void *)(v3 + 224));
    sub_1000C321C(*(void *)(v3 + 200));
    sub_1000C321C(*(void *)(v3 + 184));
    sub_1000964D0((void *)v3);
    goto LABEL_43;
  }
  return v3;
}

uint64_t sub_100097DF8(void *a1)
{
  sub_1000C321C(a1[50]);
  sub_1000C321C(a1[48]);
  sub_1000C321C(a1[45]);
  sub_1000C321C(a1[43]);
  sub_1000C321C(a1[40]);
  sub_1000C321C(a1[38]);
  sub_1000C321C(a1[35]);
  sub_1000C321C(a1[33]);
  sub_1000C321C(a1[30]);
  sub_1000C321C(a1[28]);
  sub_1000C321C(a1[25]);
  sub_1000C321C(a1[23]);
  return sub_1000964D0(a1);
}

uint64_t sub_100097E8C(uint64_t a1, char *a2, uint64_t a3, _WORD *a4, int a5, void *a6, uint64_t a7, _DWORD *a8)
{
  *a4 = -1;
  *a8 = 0;
  LOWORD(v8) = *(_WORD *)a2;
  if (*(_WORD *)a2)
  {
    uint64_t v12 = a4;
    uint64_t v13 = a2;
    int v15 = 0;
    uint64_t v16 = 2;
    do
    {
      if (!sub_1000CDF3C((unsigned __int16)v8)) {
        ++v15;
      }
      int v8 = *(unsigned __int16 *)&v13[v16];
      v16 += 2;
    }
    while (v8);
    if (v15)
    {
      unsigned __int16 v139 = 0;
      unint64_t v24 = sub_1000CD3E8((4 * v15), v17, v18, v19, v20, v21, v22, v23);
      uint64_t v25 = (char *)v24;
      int v138 = a5;
      if (v15 != 2)
      {
        if (v15 != 3)
        {
          uint64_t v44 = (4 * v15);
          int v45 = 0;
          uint64_t v27 = (char *)v24;
          do
          {
            int v46 = sub_1000D04D8(v13, &v139);
            if (v139 == 12293)
            {
              if (v27 > v25)
              {
                *(_WORD *)uint64_t v27 = *((_WORD *)v27 - 1);
                v27 += 2;
              }
            }
            else
            {
              uint64_t v47 = *(int *)(a1 + 172);
              if (v47)
              {
                int v48 = 0;
                while (1)
                {
                  while (1)
                  {
                    uint64_t v49 = v47 - 1;
                    if (v47 - 1 < 0) {
                      uint64_t v49 = v47;
                    }
                    uint64_t v50 = v49 >> 1;
                    int v51 = v48 + v50;
                    unsigned int v52 = *(unsigned __int16 *)(*(void *)(a1 + 176) + 2 * (v48 + (int)v50));
                    if (v52 <= v139) {
                      break;
                    }
                    uint64_t v47 = (int)v50;
                    if (!v50) {
                      goto LABEL_33;
                    }
                  }
                  if (v52 == v139) {
                    break;
                  }
                  v47 -= (int)v50 + 1;
                  int v48 = v51 + 1;
                  if (!v47) {
                    goto LABEL_33;
                  }
                }
                if (v51 != -1)
                {
                  *(_WORD *)uint64_t v27 = *(_WORD *)(*(void *)(a1 + 192) + 2 * v51);
                  v27 += 2;
                }
              }
            }
LABEL_33:
            v13 += 2 * v46;
            ++v45;
          }
          while (v45 != v15);
          goto LABEL_151;
        }
        uint64_t v26 = &v13[2 * (int)sub_1000D04D8(v13, &v139)];
        uint64_t v27 = v25;
        if (v139 != 12293)
        {
          uint64_t v28 = *(void *)(a1 + 296);
          if (v28)
          {
            uint64_t v29 = *(int *)(a1 + 288);
            if (v29)
            {
              int v30 = 0;
              while (1)
              {
                while (1)
                {
                  uint64_t v32 = v29 - 1;
                  if (v29 - 1 < 0) {
                    uint64_t v32 = v29;
                  }
                  uint64_t v33 = v32 >> 1;
                  int v34 = v30 + v33;
                  unsigned int v35 = *(unsigned __int16 *)(v28 + 2 * (v30 + (int)v33));
                  if (v35 <= v139) {
                    break;
                  }
                  uint64_t v29 = (int)v33;
                  if (!v33) {
                    goto LABEL_50;
                  }
                }
                if (v35 == v139) {
                  break;
                }
                v29 -= (int)v33 + 1;
                int v30 = v34 + 1;
                if (!v29) {
                  goto LABEL_50;
                }
              }
              if (v34 != -1)
              {
                int v53 = (_WORD *)(*(void *)(a1 + 312) + 2 * v34);
LABEL_61:
                *(_WORD *)uint64_t v25 = *v53;
                uint64_t v27 = v25 + 2;
                goto LABEL_62;
              }
            }
          }
LABEL_50:
          uint64_t v54 = *(int *)(a1 + 172);
          uint64_t v27 = v25;
          if (v54)
          {
            int v55 = 0;
            while (1)
            {
              while (1)
              {
                uint64_t v56 = v54 - 1;
                if (v54 - 1 < 0) {
                  uint64_t v56 = v54;
                }
                uint64_t v57 = v56 >> 1;
                int v58 = v55 + v57;
                unsigned int v59 = *(unsigned __int16 *)(*(void *)(a1 + 176) + 2 * (v55 + (int)v57));
                if (v59 <= v139) {
                  break;
                }
                uint64_t v54 = (int)v57;
                if (!v57) {
                  goto LABEL_58;
                }
              }
              if (v59 == v139) {
                break;
              }
              v54 -= (int)v57 + 1;
              int v55 = v58 + 1;
              if (!v54)
              {
LABEL_58:
                uint64_t v27 = v25;
                goto LABEL_62;
              }
            }
            uint64_t v27 = v25;
            if (v58 != -1)
            {
              int v53 = (_WORD *)(*(void *)(a1 + 192) + 2 * v58);
              goto LABEL_61;
            }
          }
        }
LABEL_62:
        int v60 = &v26[2 * (int)sub_1000D04D8(v26, &v139)];
        if (v139 == 12293)
        {
          if (v27 <= v25) {
            goto LABEL_116;
          }
          __int16 v61 = *((_WORD *)v27 - 1);
        }
        else
        {
          uint64_t v62 = *(void *)(a1 + 336);
          if (!v62) {
            goto LABEL_105;
          }
          uint64_t v63 = *(int *)(a1 + 328);
          if (!v63) {
            goto LABEL_105;
          }
          int v64 = 0;
          while (1)
          {
            while (1)
            {
              uint64_t v65 = v63 - 1;
              if (v63 - 1 < 0) {
                uint64_t v65 = v63;
              }
              uint64_t v66 = v65 >> 1;
              int v67 = v64 + v66;
              unsigned int v68 = *(unsigned __int16 *)(v62 + 2 * (v64 + (int)v66));
              if (v68 <= v139) {
                break;
              }
              uint64_t v63 = (int)v66;
              if (!v66) {
                goto LABEL_105;
              }
            }
            if (v68 == v139) {
              break;
            }
            v63 -= (int)v66 + 1;
            int v64 = v67 + 1;
            if (!v63) {
              goto LABEL_105;
            }
          }
          if (v67 != -1)
          {
            __int16 v61 = *(_WORD *)(*(void *)(a1 + 352) + 2 * v67);
          }
          else
          {
LABEL_105:
            uint64_t v84 = *(int *)(a1 + 172);
            if (!v84) {
              goto LABEL_116;
            }
            int v85 = 0;
            while (1)
            {
              while (1)
              {
                uint64_t v86 = v84 - 1;
                if (v84 - 1 < 0) {
                  uint64_t v86 = v84;
                }
                uint64_t v87 = v86 >> 1;
                int v88 = v85 + v87;
                unsigned int v89 = *(unsigned __int16 *)(*(void *)(a1 + 176) + 2 * (v85 + (int)v87));
                if (v89 <= v139) {
                  break;
                }
                uint64_t v84 = (int)v87;
                if (!v87) {
                  goto LABEL_116;
                }
              }
              if (v89 == v139) {
                break;
              }
              v84 -= (int)v87 + 1;
              int v85 = v88 + 1;
              if (!v84) {
                goto LABEL_116;
              }
            }
            if (v88 == -1)
            {
LABEL_116:
              sub_1000D04D8(v60, &v139);
              if (v139 == 12293)
              {
                if (v27 > v25) {
                  goto LABEL_118;
                }
                goto LABEL_150;
              }
              uint64_t v91 = *(void *)(a1 + 376);
              if (v91)
              {
                uint64_t v92 = *(int *)(a1 + 368);
                if (v92)
                {
                  int v93 = 0;
                  uint64_t v79 = *(void *)(a1 + 392);
                  while (1)
                  {
                    while (1)
                    {
                      uint64_t v94 = v92 - 1;
                      if (v92 - 1 < 0) {
                        uint64_t v94 = v92;
                      }
                      uint64_t v95 = v94 >> 1;
                      unsigned int v96 = *(unsigned __int16 *)(v91 + 2 * (v93 + (int)v95));
                      if (v96 <= v139) {
                        break;
                      }
                      uint64_t v92 = (int)v95;
                      if (!v95) {
                        goto LABEL_142;
                      }
                    }
                    uint64_t v83 = v93 + (int)v95;
                    if (v96 == v139) {
                      break;
                    }
                    v92 -= (int)v95 + 1;
                    int v93 = v83 + 1;
                    if (!v92) {
                      goto LABEL_142;
                    }
                  }
                  if (v83 != -1)
                  {
LABEL_141:
                    uint64_t v44 = (4 * v15);
                    __int16 v90 = *(_WORD *)(v79 + 2 * v83);
                    goto LABEL_119;
                  }
                }
              }
LABEL_142:
              uint64_t v103 = *(int *)(a1 + 172);
              if (v103)
              {
                int v104 = 0;
                while (1)
                {
                  while (1)
                  {
                    uint64_t v105 = v103 - 1;
                    if (v103 - 1 < 0) {
                      uint64_t v105 = v103;
                    }
                    uint64_t v106 = v105 >> 1;
                    unsigned int v107 = *(unsigned __int16 *)(*(void *)(a1 + 176) + 2 * (v104 + (int)v106));
                    if (v107 <= v139) {
                      break;
                    }
                    uint64_t v103 = (int)v106;
                    if (!v106) {
                      goto LABEL_150;
                    }
                  }
                  uint64_t v102 = v104 + (int)v106;
                  if (v107 == v139) {
                    goto LABEL_190;
                  }
                  v103 -= (int)v106 + 1;
                  int v104 = v102 + 1;
                  if (!v103) {
                    goto LABEL_150;
                  }
                }
              }
              goto LABEL_150;
            }
            __int16 v61 = *(_WORD *)(*(void *)(a1 + 192) + 2 * v88);
          }
        }
        *(_WORD *)uint64_t v27 = v61;
        v27 += 2;
        goto LABEL_116;
      }
      int v36 = &v13[2 * (int)sub_1000D04D8(v13, &v139)];
      uint64_t v27 = v25;
      if (v139 != 12293)
      {
        uint64_t v37 = *(void *)(a1 + 216);
        if (v37)
        {
          uint64_t v38 = *(int *)(a1 + 208);
          if (v38)
          {
            int v39 = 0;
            while (1)
            {
              while (1)
              {
                uint64_t v40 = v38 - 1;
                if (v38 - 1 < 0) {
                  uint64_t v40 = v38;
                }
                uint64_t v41 = v40 >> 1;
                int v42 = v39 + v41;
                unsigned int v43 = *(unsigned __int16 *)(v37 + 2 * (v39 + (int)v41));
                if (v43 <= v139) {
                  break;
                }
                uint64_t v38 = (int)v41;
                if (!v41) {
                  goto LABEL_78;
                }
              }
              if (v43 == v139) {
                break;
              }
              v38 -= (int)v41 + 1;
              int v39 = v42 + 1;
              if (!v38) {
                goto LABEL_78;
              }
            }
            if (v42 != -1)
            {
              uint64_t v69 = (_WORD *)(*(void *)(a1 + 232) + 2 * v42);
LABEL_89:
              *(_WORD *)uint64_t v25 = *v69;
              uint64_t v27 = v25 + 2;
              goto LABEL_90;
            }
          }
        }
LABEL_78:
        uint64_t v70 = *(int *)(a1 + 172);
        uint64_t v27 = v25;
        if (v70)
        {
          int v71 = 0;
          while (1)
          {
            while (1)
            {
              uint64_t v72 = v70 - 1;
              if (v70 - 1 < 0) {
                uint64_t v72 = v70;
              }
              uint64_t v73 = v72 >> 1;
              int v74 = v71 + v73;
              unsigned int v75 = *(unsigned __int16 *)(*(void *)(a1 + 176) + 2 * (v71 + (int)v73));
              if (v75 <= v139) {
                break;
              }
              uint64_t v70 = (int)v73;
              if (!v73) {
                goto LABEL_86;
              }
            }
            if (v75 == v139) {
              break;
            }
            v70 -= (int)v73 + 1;
            int v71 = v74 + 1;
            if (!v70)
            {
LABEL_86:
              uint64_t v27 = v25;
              goto LABEL_90;
            }
          }
          uint64_t v27 = v25;
          if (v74 != -1)
          {
            uint64_t v69 = (_WORD *)(*(void *)(a1 + 192) + 2 * v74);
            goto LABEL_89;
          }
        }
      }
LABEL_90:
      sub_1000D04D8(v36, &v139);
      if (v139 == 12293)
      {
        if (v27 > v25)
        {
LABEL_118:
          uint64_t v44 = (4 * v15);
          __int16 v90 = *((_WORD *)v27 - 1);
LABEL_119:
          *(_WORD *)uint64_t v27 = v90;
          v27 += 2;
          goto LABEL_151;
        }
        goto LABEL_150;
      }
      uint64_t v76 = *(void *)(a1 + 256);
      if (v76)
      {
        uint64_t v77 = *(int *)(a1 + 248);
        if (v77)
        {
          int v78 = 0;
          uint64_t v79 = *(void *)(a1 + 272);
          while (1)
          {
            while (1)
            {
              uint64_t v80 = v77 - 1;
              if (v77 - 1 < 0) {
                uint64_t v80 = v77;
              }
              uint64_t v81 = v80 >> 1;
              unsigned int v82 = *(unsigned __int16 *)(v76 + 2 * (v78 + (int)v81));
              if (v82 <= v139) {
                break;
              }
              uint64_t v77 = (int)v81;
              if (!v81) {
                goto LABEL_131;
              }
            }
            uint64_t v83 = v78 + (int)v81;
            if (v82 == v139) {
              break;
            }
            v77 -= (int)v81 + 1;
            int v78 = v83 + 1;
            if (!v77) {
              goto LABEL_131;
            }
          }
          if (v83 != -1) {
            goto LABEL_141;
          }
        }
      }
LABEL_131:
      uint64_t v97 = *(int *)(a1 + 172);
      if (v97)
      {
        int v98 = 0;
        while (1)
        {
          while (1)
          {
            uint64_t v99 = v97 - 1;
            if (v97 - 1 < 0) {
              uint64_t v99 = v97;
            }
            uint64_t v100 = v99 >> 1;
            unsigned int v101 = *(unsigned __int16 *)(*(void *)(a1 + 176) + 2 * (v98 + (int)v100));
            if (v101 <= v139) {
              break;
            }
            uint64_t v97 = (int)v100;
            if (!v100) {
              goto LABEL_150;
            }
          }
          uint64_t v102 = v98 + (int)v100;
          if (v101 == v139) {
            break;
          }
          v97 -= (int)v100 + 1;
          int v98 = v102 + 1;
          if (!v97) {
            goto LABEL_150;
          }
        }
LABEL_190:
        uint64_t v44 = (4 * v15);
        if (v102 != -1)
        {
          __int16 v90 = *(_WORD *)(*(void *)(a1 + 192) + 2 * v102);
          goto LABEL_119;
        }
LABEL_151:
        unint64_t v108 = v27 - v25;
        if (v27 == v25)
        {
          uint64_t v31 = 0;
LABEL_188:
          sub_1000CD4D0(v25, v44);
          return v31;
        }
        if ((int)(v108 >> 1) < 1)
        {
          if (v138 > 0)
          {
LABEL_185:
            _WORD *v12 = -1;
            *a6 = 0;
            uint64_t v31 = 1;
            goto LABEL_188;
          }
          int v110 = 0;
        }
        else
        {
          uint64_t v109 = 0;
          int v110 = 0;
          uint64_t v111 = (v108 >> 1);
          do
          {
            unsigned int v112 = *(unsigned __int16 *)&v25[2 * v109];
            uint64_t v143 = 0;
            int v142 = 0;
            sub_10007C324(*(void *)(a1 + 48), v112, &v143, &v142);
            v110 += v142;
            uint64_t v113 = *(void *)(a1 + 80);
            if (v113)
            {
              int v141 = 0;
              unsigned int v140 = 0;
              sub_10007C324(v113, *(unsigned __int16 *)(a1 + 96), &v141, &v140);
              if (v142 >= 1)
              {
                v114.i64[0] = 0x100000001;
                v114.i64[1] = 0x100000001;
                if ((int)v140 >= 1)
                {
                  if (v140 >= 0x10)
                  {
                    for (uint64_t i = 0; i != v142; ++i)
                    {
                      unsigned int v120 = *(unsigned __int16 *)(v143 + 2 * i);
                      int32x4_t v121 = 0uLL;
                      int32x4_t v122 = (int32x4_t)v110;
                      int16x8_t v123 = vdupq_n_s16(v120);
                      uint64_t v124 = v140 & 0xFFFFFFF0;
                      uint64_t v125 = v141 + 1;
                      int32x4_t v126 = 0uLL;
                      int32x4_t v127 = 0uLL;
                      do
                      {
                        uint16x8_t v128 = (uint16x8_t)vceqq_s16(v123, v125[-1]);
                        uint16x8_t v129 = (uint16x8_t)vceqq_s16(v123, *v125);
                        int32x4_t v121 = vaddq_s32(v121, (int32x4_t)vandq_s8((int8x16_t)vmovl_high_u16(v128), v114));
                        int32x4_t v122 = vaddq_s32(v122, (int32x4_t)vandq_s8((int8x16_t)vmovl_u16(*(uint16x4_t *)v128.i8), v114));
                        int32x4_t v127 = vaddq_s32(v127, (int32x4_t)vandq_s8((int8x16_t)vmovl_high_u16(v129), v114));
                        int32x4_t v126 = vaddq_s32(v126, (int32x4_t)vandq_s8((int8x16_t)vmovl_u16(*(uint16x4_t *)v129.i8), v114));
                        v125 += 2;
                        v124 -= 16;
                      }
                      while (v124);
                      int v110 = vaddvq_s32(vaddq_s32(vaddq_s32(v126, v122), vaddq_s32(v127, v121)));
                      if (v140 != (unint64_t)(v140 & 0xFFFFFFF0))
                      {
                        uint64_t v130 = (unsigned __int16 *)((char *)v141->u16 + ((2 * v140) & 0x1FFFFFFE0));
                        unint64_t v131 = v140 - (unint64_t)(v140 & 0xFFFFFFF0);
                        do
                        {
                          int v132 = *v130++;
                          if (v120 == v132) {
                            ++v110;
                          }
                          --v131;
                        }
                        while (v131);
                      }
                    }
                  }
                  else
                  {
                    for (uint64_t j = 0; j != v142; ++j)
                    {
                      uint64_t v116 = v141;
                      uint64_t v117 = v140;
                      do
                      {
                        int v118 = v116->u16[0];
                        uint64_t v116 = (int16x8_t *)((char *)v116 + 2);
                        if (*(unsigned __int16 *)(v143 + 2 * j) == v118) {
                          ++v110;
                        }
                        --v117;
                      }
                      while (v117);
                    }
                  }
                }
              }
            }
            ++v109;
          }
          while (v109 != v111);
          if (v110 < v138)
          {
            uint64_t v133 = 0;
            do
            {
              unsigned int v134 = *(unsigned __int16 *)&v25[2 * v133];
              uint64_t v143 = 0;
              LODWORD(v141) = 0;
              sub_10007C324(*(void *)(a1 + 48), v134, &v143, &v141);
              if ((int)v141 >= 1)
              {
                uint64_t v135 = 0;
                uint64_t v136 = 0;
                do
                {
                  v12[v136] = *(_WORD *)(v143 + 2 * v136);
                  ++v136;
                  v135 += 2;
                }
                while (v136 < (int)v141);
                uint64_t v12 = (_WORD *)((char *)v12 + v135);
              }
              ++v133;
            }
            while (v133 != v111);
            goto LABEL_185;
          }
        }
        uint64_t v31 = 0;
        *a8 = v110 + 1;
        goto LABEL_188;
      }
LABEL_150:
      uint64_t v44 = (4 * v15);
      goto LABEL_151;
    }
  }
  return 0;
}

uint64_t sub_1000987B0(uint64_t a1)
{
  uint64_t v2 = sub_1000C33A0(408);
  uint64_t v3 = v2;
  if (v2)
  {
    if (!sub_100096DB4(v2, a1))
    {
LABEL_61:
      sub_1000C321C(v3);
      return 0;
    }
    if (sub_1000BEF74(a1, (_WORD *)(v3 + 168)))
    {
      if (sub_1000BEF74(a1, (_WORD *)(v3 + 170)))
      {
        int v4 = (_DWORD *)(v3 + 172);
        if (sub_1000BEECC(a1, (void *)(v3 + 172)))
        {
          int v5 = (_DWORD *)(v3 + 208);
          if (sub_1000BEECC(a1, (void *)(v3 + 208)))
          {
            uint64_t v6 = (_DWORD *)(v3 + 248);
            if (sub_1000BEECC(a1, (void *)(v3 + 248)))
            {
              int v7 = (_DWORD *)(v3 + 288);
              if (sub_1000BEECC(a1, (void *)(v3 + 288)))
              {
                int v8 = (_DWORD *)(v3 + 328);
                if (sub_1000BEECC(a1, (void *)(v3 + 328)))
                {
                  uint64_t v9 = (_DWORD *)(v3 + 368);
                  if (sub_1000BEECC(a1, (void *)(v3 + 368)))
                  {
                    int v23 = 0;
                    int v10 = (void *)(v3 + 184);
                    if (sub_1000BF078(a1, 2, (uint64_t *)(v3 + 184), &v23))
                    {
                      if (*v10)
                      {
                        if (v23 != *v4) {
                          goto LABEL_60;
                        }
                        *(void *)(v3 + 176) = *v10;
                      }
                      int v23 = 0;
                      int v11 = (void *)(v3 + 200);
                      if (sub_1000BF078(a1, 2, (uint64_t *)(v3 + 200), &v23))
                      {
                        if (*v11)
                        {
                          if (v23 != *v4) {
                            goto LABEL_60;
                          }
                          *(void *)(v3 + 192) = *v11;
                        }
                        int v23 = 0;
                        uint64_t v12 = (void *)(v3 + 224);
                        if (sub_1000BF078(a1, 2, (uint64_t *)(v3 + 224), &v23))
                        {
                          if (*v12)
                          {
                            if (v23 != *v5) {
                              goto LABEL_60;
                            }
                            *(void *)(v3 + 216) = *v12;
                          }
                          int v23 = 0;
                          uint64_t v13 = (void *)(v3 + 240);
                          if (sub_1000BF078(a1, 2, (uint64_t *)(v3 + 240), &v23))
                          {
                            if (*v13)
                            {
                              if (v23 != *v5) {
                                goto LABEL_60;
                              }
                              *(void *)(v3 + 232) = *v13;
                            }
                            int v23 = 0;
                            uint64_t v14 = (void *)(v3 + 264);
                            if (sub_1000BF078(a1, 2, (uint64_t *)(v3 + 264), &v23))
                            {
                              if (*v14)
                              {
                                if (v23 != *v6) {
                                  goto LABEL_60;
                                }
                                *(void *)(v3 + 256) = *v14;
                              }
                              int v23 = 0;
                              int v15 = (void *)(v3 + 280);
                              if (sub_1000BF078(a1, 2, (uint64_t *)(v3 + 280), &v23))
                              {
                                if (*v15)
                                {
                                  if (v23 != *v6) {
                                    goto LABEL_60;
                                  }
                                  *(void *)(v3 + 272) = *v15;
                                }
                                int v23 = 0;
                                uint64_t v16 = (void *)(v3 + 304);
                                if (sub_1000BF078(a1, 2, (uint64_t *)(v3 + 304), &v23))
                                {
                                  if (*v16)
                                  {
                                    if (v23 != *v7) {
                                      goto LABEL_60;
                                    }
                                    *(void *)(v3 + 296) = *v16;
                                  }
                                  int v23 = 0;
                                  uint64_t v17 = (void *)(v3 + 320);
                                  if (sub_1000BF078(a1, 2, (uint64_t *)(v3 + 320), &v23))
                                  {
                                    if (*v17)
                                    {
                                      if (v23 != *v7) {
                                        goto LABEL_60;
                                      }
                                      *(void *)(v3 + 312) = *v17;
                                    }
                                    int v23 = 0;
                                    uint64_t v18 = (void *)(v3 + 344);
                                    if (sub_1000BF078(a1, 2, (uint64_t *)(v3 + 344), &v23))
                                    {
                                      if (*v18)
                                      {
                                        if (v23 != *v8) {
                                          goto LABEL_60;
                                        }
                                        *(void *)(v3 + 336) = *v18;
                                      }
                                      int v23 = 0;
                                      uint64_t v19 = (void *)(v3 + 360);
                                      if (sub_1000BF078(a1, 2, (uint64_t *)(v3 + 360), &v23))
                                      {
                                        if (*v19)
                                        {
                                          if (v23 != *v8) {
                                            goto LABEL_60;
                                          }
                                          *(void *)(v3 + 352) = *v19;
                                        }
                                        int v23 = 0;
                                        uint64_t v20 = (void *)(v3 + 384);
                                        if (sub_1000BF078(a1, 2, (uint64_t *)(v3 + 384), &v23))
                                        {
                                          if (!*v20) {
                                            goto LABEL_55;
                                          }
                                          if (v23 == *v9)
                                          {
                                            *(void *)(v3 + 376) = *v20;
LABEL_55:
                                            int v23 = 0;
                                            uint64_t v21 = (void *)(v3 + 400);
                                            if (sub_1000BF078(a1, 2, (uint64_t *)(v3 + 400), &v23))
                                            {
                                              if (!*v21)
                                              {
LABEL_59:
                                                *(void *)(v3 + 8) = sub_100097DF8;
                                                *(void *)(v3 + 24) = 0;
                                                *(void *)(v3 + 32) = 0;
                                                *(void *)(v3 + 16) = sub_100097E8C;
                                                return v3;
                                              }
                                              if (v23 == *v9)
                                              {
                                                *(void *)(v3 + 392) = *v21;
                                                goto LABEL_59;
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
LABEL_60:
    sub_100097DF8((void *)v3);
    goto LABEL_61;
  }
  return v3;
}

uint64_t sub_100098BC0(void *a1)
{
  sub_1000C321C(a1[26]);
  sub_1000C321C(a1[24]);
  sub_10007BDDC(a1[22]);
  return sub_1000964D0(a1);
}

uint64_t sub_100098C0C(uint64_t a1, _WORD *a2, uint64_t a3, _WORD *a4, int a5, void *a6, uint64_t a7, int *a8)
{
  int v10 = a4;
  *a8 = 0;
  *a4 = -1;
  uint64_t v13 = 2 * (int)((4 * sub_1000CED6C((unint64_t)a2)) | 2);
  uint64_t v21 = (void *)sub_1000CD3E8(v13, v14, v15, v16, v17, v18, v19, v20);
  *(_WORD *)uint64_t v21 = 0;
  uint64_t v22 = (unsigned __int16 *)v21 + 1;
  if (*(_WORD *)(a1 + 70)) {
    unsigned __int16 v23 = -3;
  }
  else {
    unsigned __int16 v23 = 0;
  }
  uint64_t v53 = *(void *)(a1 + 184);
  __int16 v24 = *a2;
  uint64_t v50 = v13;
  uint64_t v51 = a1;
  uint64_t v49 = a8;
  if (*a2)
  {
    uint64_t v47 = a6;
    int v25 = 0;
    uint64_t v26 = *(void *)(a1 + 168);
    uint64_t v27 = a2 + 1;
    uint64_t v52 = *(void *)(a1 + 200);
    do
    {
      if ((unsigned __int16)(v24 + 10332) >= 0xD45Cu)
      {
        __int16 v29 = (unsigned __int16)(v24 + 21504) / 0x1Cu;
        unsigned __int16 v30 = v24 - 28 * v29 + 21545;
        uint64_t v31 = (unsigned __int16)(v24 + 21504) / 0x24Cu + 1;
        unsigned __int16 v32 = sub_10007BE20(v26, (unsigned __int16)(v29 - 21 * ((unsigned __int16)(v24 + 21504) / 0x24Cu + 1) + 41));
        unsigned __int16 v33 = sub_10007BE20(v26, v30);
        uint64_t v34 = (int)v31 + 20 * v25 - 800;
        if (!v25) {
          uint64_t v34 = v31;
        }
        uint64_t v35 = 2 * v34;
        *(v22 - 1) = *(_WORD *)(v53 + v35);
        *uint64_t v22 = v23;
        v22[1] = *(_WORD *)(v52 + v35);
        v22[2] = v32;
        v22[3] = v33;
        v22 += 4;
        int v25 = v30;
      }
      int v28 = *v27++;
      __int16 v24 = v28;
    }
    while (v28);
    if (v25)
    {
      int v36 = 20 * v25 - 800;
      a6 = v47;
      goto LABEL_15;
    }
    a6 = v47;
  }
  int v36 = 0;
LABEL_15:
  *(v22 - 1) = *(_WORD *)(v53 + 2 * v36);
  *uint64_t v22 = v23;
  unint64_t v37 = (char *)v22 - (char *)v21 + 2;
  if ((int)(v37 >> 1) < 1)
  {
    int v39 = 0;
    uint64_t v42 = v50;
LABEL_38:
    sub_1000CD4D0(v21, v42);
    uint64_t result = 0;
    *uint64_t v49 = v39;
    return result;
  }
  uint64_t v38 = 0;
  int v39 = 0;
  uint64_t v40 = (v37 >> 1);
  do
  {
    LODWORD(v55) = 0;
    unsigned int v41 = *(unsigned __int16 *)((char *)v21 + v38);
    if (*(_WORD *)((char *)v21 + v38))
    {
      if (v41 == v23)
      {
        if (v39 < 1) {
          *(_WORD *)((char *)v21 + v38) = 0;
        }
        else {
          ++v39;
        }
      }
      else
      {
        sub_10007C324(*(void *)(v51 + 48), v41, 0, &v55);
        v39 += v55;
      }
    }
    v38 += 2;
  }
  while (2 * v40 != v38);
  if (v39 > 0) {
    ++v39;
  }
  uint64_t v42 = v50;
  if (!v39 || v39 > a5) {
    goto LABEL_38;
  }
  uint64_t v43 = 0;
  do
  {
    uint64_t v55 = 0;
    int v54 = 0;
    unsigned int v44 = *((unsigned __int16 *)v21 + v43);
    if (*((_WORD *)v21 + v43))
    {
      if (v44 == v23)
      {
        *v10++ = *(_WORD *)(v51 + 70);
      }
      else
      {
        sub_10007C324(*(void *)(v51 + 48), v44, &v55, &v54);
        if (v54 >= 1)
        {
          for (uint64_t i = 0; i < v54; ++i)
            *v10++ = *(_WORD *)(v55 + 2 * i);
        }
      }
    }
    ++v43;
  }
  while (v43 != v40);
  *int v10 = -1;
  *a6 = 0;
  sub_1000CD4D0(v21, v50);
  return 1;
}

void *sub_100098F38(uint64_t a1)
{
  uint64_t v2 = sub_1000C33A0(216);
  uint64_t v3 = (void *)v2;
  if (!v2) {
    return v3;
  }
  if (!sub_100096DB4(v2, a1))
  {
LABEL_13:
    sub_1000C321C((uint64_t)v3);
    return 0;
  }
  uint64_t v4 = sub_10007BE80(a1);
  v3[22] = v4;
  if (!v4) {
    goto LABEL_12;
  }
  v3[21] = v4;
  int v11 = 0;
  int v5 = v3 + 24;
  if (!sub_1000BF078(a1, 2, v3 + 24, &v11)) {
    goto LABEL_12;
  }
  uint64_t v6 = *v5;
  if (*v5)
  {
    if (v11 != 580) {
      goto LABEL_12;
    }
  }
  if (v6) {
    v3[23] = v6;
  }
  int v10 = 0;
  int v7 = v3 + 26;
  if (!sub_1000BF078(a1, 2, v3 + 26, &v10) || (uint64_t v8 = *v7) != 0 && v10 != 580)
  {
LABEL_12:
    sub_1000C321C(v3[26]);
    sub_1000C321C(v3[24]);
    sub_10007BDDC(v3[22]);
    sub_1000964D0(v3);
    goto LABEL_13;
  }
  if (v8) {
    v3[25] = v8;
  }
  v3[1] = sub_100098BC0;
  v3[3] = 0;
  v3[4] = 0;
  v3[2] = sub_100098C0C;
  return v3;
}

uint64_t sub_100099080(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 192);
  if (v2)
  {
    if (*(int *)(a1 + 172) >= 1)
    {
      uint64_t v3 = 0;
      do
        sub_1000C321C(*(void *)(*(void *)(a1 + 192) + 8 * v3++));
      while (v3 < *(int *)(a1 + 172));
      uint64_t v2 = *(void *)(a1 + 192);
    }
    sub_1000C321C(v2);
  }
  uint64_t v4 = *(void *)(a1 + 176);
  if (v4)
  {
    if (*(int *)(a1 + 172) >= 1)
    {
      uint64_t v5 = 0;
      do
        sub_1000760C8(*(void *)(*(void *)(a1 + 176) + 8 * v5++));
      while (v5 < *(int *)(a1 + 172));
      uint64_t v4 = *(void *)(a1 + 176);
    }
    sub_1000C321C(v4);
  }
  return sub_1000964D0((void *)a1);
}

uint64_t sub_10009912C(uint64_t a1, uint64_t a2, unsigned int a3, _WORD *a4, uint64_t a5)
{
  int v7 = *(_DWORD *)(a1 + 168);
  if (v7 != 1)
  {
    if (v7) {
      goto LABEL_6;
    }
    if (a3 < 3) {
      a3 = 10;
    }
    if (a3 - 14 >= 0xFFFFFFFC)
    {
LABEL_6:
      switch(a3)
      {
        case 0xAu:
          break;
        case 0xBu:
          goto LABEL_13;
        case 0xCu:
          uint64_t v8 = *(void *)(*(void *)(a1 + 176) + 16);
          if (!v8) {
            goto LABEL_20;
          }
          goto LABEL_14;
        case 0xDu:
          uint64_t v8 = *(void *)(*(void *)(a1 + 176) + 24);
          if (!v8) {
            goto LABEL_20;
          }
          goto LABEL_14;
        default:
          goto LABEL_20;
      }
    }
LABEL_11:
    uint64_t v8 = **(void **)(a1 + 176);
    if (!v8) {
      goto LABEL_20;
    }
    goto LABEL_14;
  }
  if (a3 == 1 || a3 == 14) {
    goto LABEL_11;
  }
LABEL_13:
  uint64_t v8 = *(void *)(*(void *)(a1 + 176) + 8);
  if (!v8)
  {
LABEL_20:
    uint64_t v9 = 0;
    *a4 = -1;
    return v9;
  }
LABEL_14:
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t, void, _WORD *, uint64_t))(v8 + 16))(v8, a2, 0, a4, a5);
  if ((int)v9 < 1 || !*(void *)(v8 + 152)) {
    return v9;
  }
  return sub_100096BC8(v8, v9, (uint64_t)a4, a5, v10, v11, v12, v13);
}

void *sub_10009926C(uint64_t a1)
{
  uint64_t v2 = sub_1000C33A0(208);
  uint64_t v3 = (void *)v2;
  if (!v2) {
    return v3;
  }
  if (!sub_100096DB4(v2, a1))
  {
LABEL_12:
    sub_1000C321C((uint64_t)v3);
    return 0;
  }
  if (!sub_1000BEECC(a1, v3 + 21)) {
    goto LABEL_11;
  }
  if (!sub_1000BEECC(a1, (char *)v3 + 172)) {
    goto LABEL_11;
  }
  uint64_t v4 = sub_1000C328C(8 * *((int *)v3 + 43));
  v3[22] = v4;
  if (!v4) {
    goto LABEL_11;
  }
  if (*((int *)v3 + 43) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      *(void *)(v3[22] + 8 * v5) = sub_1000963C0(a1);
      int v6 = *((_DWORD *)v3 + 43);
      if (!*(void *)(v3[22] + 8 * v5)) {
        break;
      }
      ++v5;
    }
    while (v5 < v6);
    if ((int)v5 < v6)
    {
LABEL_11:
      sub_100099080((uint64_t)v3);
      goto LABEL_12;
    }
  }
  v3[1] = sub_100099080;
  v3[3] = 0;
  v3[4] = 0;
  v3[2] = sub_10009912C;
  return v3;
}

uint64_t sub_100099394(uint64_t a1)
{
  sub_1000C321C(*(void *)(a1 + 192));
  uint64_t v2 = *(void *)(a1 + 208);
  if (v2)
  {
    if (*(int *)(a1 + 168) >= 1)
    {
      uint64_t v3 = 0;
      do
        sub_1000C321C(*(void *)(*(void *)(a1 + 208) + 8 * v3++));
      while (v3 < *(int *)(a1 + 168));
      uint64_t v2 = *(void *)(a1 + 208);
    }
    sub_1000C321C(v2);
  }
  uint64_t v4 = *(void *)(a1 + 176);
  if (v4)
  {
    if (*(int *)(a1 + 168) >= 1)
    {
      uint64_t v5 = 0;
      do
        sub_1000760C8(*(void *)(*(void *)(a1 + 176) + 8 * v5++));
      while (v5 < *(int *)(a1 + 168));
      uint64_t v4 = *(void *)(a1 + 176);
    }
    sub_1000C321C(v4);
  }
  return sub_1000964D0((void *)a1);
}

BOOL sub_100099448(uint64_t a1, unsigned __int16 *a2, unsigned int a3, char *a4, unsigned int a5, uint64_t a6, uint64_t a7, int *a8)
{
  uint64_t v77 = sub_1000CD550();
  if (a3 <= 2) {
    unsigned int v13 = a3;
  }
  else {
    unsigned int v13 = 0;
  }
  uint64_t v79 = a4;
  uint64_t v80 = a8;
  *a8 = 0;
  *(_WORD *)a4 = -1;
  int v14 = sub_1000CED6C((unint64_t)a2);
  uint64_t v84 = a1;
  uint64_t v15 = *(unsigned int *)(a1 + 168);
  __b = (unsigned int *)sub_1000CD3E8(4 * (int)v15, v16, v17, v18, v19, v20, v21, v22);
  if (v13)
  {
    if (v13 == 1)
    {
      if ((int)v15 >= 1)
      {
        size_t v30 = 4 * v15;
        uint64_t v31 = &unk_1000F4CD0;
        goto LABEL_12;
      }
    }
    else if ((int)v15 >= 1)
    {
      size_t v30 = 4 * v15;
      uint64_t v31 = &unk_1000F4CC0;
LABEL_12:
      memset_pattern16(__b, v31, v30);
LABEL_13:
      unint64_t v46 = sub_1000CD3E8(8 * (int)v15, v32, v33, v34, v35, v36, v37, v38);
      uint64_t v47 = 0;
      uint64_t v48 = 2 * (v14 + 1);
      do
        *(void *)(v46 + 8 * v47++) = sub_1000CD3E8(v48, v39, v40, v41, v42, v43, v44, v45);
      while (v15 != v47);
      unint64_t v83 = v46;
      int v85 = 1;
      goto LABEL_17;
    }
  }
  else if ((int)v15 >= 1)
  {
    bzero(__b, 4 * v15);
    goto LABEL_13;
  }
  unint64_t v83 = sub_1000CD3E8(8 * (int)v15, v23, v24, v25, v26, v27, v28, v29);
  int v85 = 0;
LABEL_17:
  int v86 = 0;
  int v49 = 0;
  int v50 = 0;
  LODWORD(v51) = 0;
  uint64_t v52 = (__int16 *)v79;
  uint64_t v53 = a5;
  unsigned int v54 = *a2;
  if (!*a2) {
    goto LABEL_28;
  }
LABEL_20:
  int v49 = sub_1000CD5A8(v54, v49);
  if (v85)
  {
LABEL_21:
    uint64_t v57 = *(_DWORD **)(v84 + 184);
    if (v49 == *v57)
    {
      int v58 = 0;
      BOOL v59 = 1;
    }
    else
    {
      uint64_t v60 = 1;
      while (v15 != v60)
      {
        int v61 = v57[v60++];
        if (v49 == v61)
        {
          int v58 = v60 - 1;
          BOOL v59 = v60 - 1 < (int)v15;
          goto LABEL_30;
        }
      }
      BOOL v59 = v60 < (int)v15;
      int v58 = v15;
    }
    goto LABEL_30;
  }
  while (1)
  {
    int v58 = 0;
    BOOL v59 = 0;
LABEL_30:
    int v62 = v51 == 0 && v59 ? v58 : v50;
    BOOL v63 = v58 == v62 && v59;
    if ((int)v51 < 1 || v63)
    {
      int v50 = v62;
      if (v59) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v64 = 8 * v62;
      uint64_t v65 = *(void *)(*(void *)(v84 + 176) + v64);
      int v87 = 0;
      uint64_t v66 = (*(uint64_t (**)(uint64_t, void, void, __int16 *, uint64_t, uint64_t, uint64_t, int *))(v65 + 16))(v65, *(void *)(v83 + v64), __b[v62], v52, v53, a6, 1, &v87);
      if ((int)v66 >= 1 && *(void *)(v65 + 152)) {
        LODWORD(v66) = sub_100096BC8(v65, v66, (uint64_t)v52, v53, v67, v68, v69, v70);
      }
      if (v86)
      {
        if (v87 <= 0)
        {
          if (*v52 != -1)
          {
            int v71 = *v80 + 1;
            uint64_t v72 = v52 + 1;
            do
            {
              *uint64_t v80 = v71;
              int v73 = *v72++;
              ++v71;
            }
            while (v73 != -1);
          }
          int v86 = 1;
          uint64_t v52 = (__int16 *)v79;
          LODWORD(v51) = 0;
          if (v59)
          {
            int v50 = v58;
            goto LABEL_19;
          }
        }
        else
        {
          *v80 += v87;
          int v86 = 1;
          LODWORD(v51) = 0;
          if (v59)
          {
            int v50 = v58;
            goto LABEL_19;
          }
        }
      }
      else if (v87 < 1)
      {
        if (v66 == 1 && *v52 != -1)
        {
          do
          {
            int v74 = v52[1];
            ++v52;
            uint64_t v53 = (v53 - 1);
          }
          while (v74 != -1);
        }
        int v86 = 0;
        LODWORD(v51) = 0;
        if (v59)
        {
          int v50 = v58;
LABEL_19:
          uint64_t v55 = 8 * v50;
          *(_WORD *)(*(void *)(v83 + v55) + 2 * (int)v51) = v54;
          uint64_t v51 = (int)v51 + 1;
          *(_WORD *)(*(void *)(v83 + v55) + 2 * v51) = 0;
          unsigned int v56 = a2[1];
          ++a2;
          unsigned int v54 = v56;
          if (v56) {
            goto LABEL_20;
          }
          goto LABEL_28;
        }
      }
      else
      {
        *uint64_t v80 = v87 + ((unint64_t)((char *)v52 - v79) >> 1);
        *(_WORD *)uint64_t v79 = -1;
        int v86 = 1;
        uint64_t v52 = (__int16 *)v79;
        uint64_t v53 = a5;
        LODWORD(v51) = 0;
        if (v59)
        {
          int v50 = v58;
          goto LABEL_19;
        }
      }
    }
    if (!v54) {
      break;
    }
    unsigned int v75 = a2[1];
    ++a2;
    unsigned int v54 = v75;
    if (v75) {
      goto LABEL_20;
    }
LABEL_28:
    int v49 = 0;
    if (v85) {
      goto LABEL_21;
    }
  }
  sub_1000CD534(v77);
  if (v86) {
    ++*v80;
  }
  return *(__int16 *)v79 != -1;
}

void *sub_100099890(uint64_t a1)
{
  uint64_t v2 = sub_1000C33A0(224);
  uint64_t v3 = (void *)v2;
  if (!v2) {
    return v3;
  }
  if (!sub_100096DB4(v2, a1))
  {
LABEL_23:
    sub_1000C321C((uint64_t)v3);
    return 0;
  }
  uint64_t v4 = (int *)(v3 + 21);
  if (!sub_1000BEECC(a1, v3 + 21)) {
    goto LABEL_22;
  }
  uint64_t v5 = sub_1000C328C(4 * *((int *)v3 + 42));
  v3[24] = v5;
  if (!v5) {
    goto LABEL_22;
  }
  LODWORD(v6) = *v4;
  if (*v4 < 1)
  {
    if ((int)v6 <= 0) {
      goto LABEL_14;
    }
LABEL_22:
    sub_100099394((uint64_t)v3);
    goto LABEL_23;
  }
  uint64_t v7 = 0;
  while (1)
  {
    int v12 = 0;
    if (!sub_1000BEECC(a1, &v12)) {
      break;
    }
    *(_DWORD *)(v3[24] + 4 * v7++) = v12;
    uint64_t v6 = *((int *)v3 + 42);
    if (v7 >= v6)
    {
      if ((int)v7 >= (int)v6) {
        goto LABEL_14;
      }
      goto LABEL_22;
    }
  }
  LODWORD(v6) = *v4;
  if ((int)v7 < *v4) {
    goto LABEL_22;
  }
LABEL_14:
  v3[23] = v3[24];
  uint64_t v8 = sub_1000C328C(8 * (int)v6);
  v3[22] = v8;
  if (!v8) {
    goto LABEL_22;
  }
  int v9 = *v4;
  if (*v4 < 1)
  {
    LODWORD(v10) = 0;
  }
  else
  {
    uint64_t v10 = 0;
    do
    {
      *(void *)(v3[22] + 8 * v10) = sub_1000963C0(a1);
      int v9 = *((_DWORD *)v3 + 42);
      if (!*(void *)(v3[22] + 8 * v10)) {
        break;
      }
      ++v10;
    }
    while (v10 < v9);
  }
  if ((int)v10 < v9) {
    goto LABEL_22;
  }
  v3[1] = sub_100099394;
  v3[3] = 0;
  v3[4] = 0;
  v3[2] = sub_100099448;
  return v3;
}

uint64_t sub_100099A30(void *a1)
{
  sub_1000760C8(a1[70]);
  sub_1000C321C(a1[68]);
  sub_1000C321C(a1[65]);
  sub_10007C84C(a1[62]);
  sub_10007C84C(a1[60]);
  sub_10007C84C(a1[58]);
  sub_10007C84C(a1[56]);
  sub_10007C84C(a1[54]);
  sub_10007C84C(a1[52]);
  sub_1000C321C(a1[50]);
  sub_1000C321C(a1[47]);
  sub_1000C321C(a1[45]);
  sub_1000C321C(a1[43]);
  sub_1000C321C(a1[40]);
  sub_1000C321C(a1[37]);
  sub_1000C321C(a1[34]);
  sub_10007C2D8(a1[29]);
  sub_10007C84C(a1[27]);
  sub_10007C2D8(a1[25]);
  sub_10007C84C(a1[22]);
  return sub_1000964D0(a1);
}

uint64_t sub_100099B04(_DWORD *a1, unint64_t a2, unsigned int a3, _WORD *a4, unsigned int a5, uint64_t a6, int a7, unsigned int *a8)
{
  uint64_t v15 = sub_1000CD550();
  if (a3 <= 3) {
    int v16 = 3;
  }
  else {
    int v16 = a3;
  }
  if ((v16 - 7) < 0xFFFFFFFD && a3 > 3) {
    int v18 = 3;
  }
  else {
    int v18 = v16;
  }
  int v252 = v18;
  *a8 = 0;
  int v19 = sub_1000CED6C(a2);
  if (!v19) {
    return 0;
  }
  int v27 = v19;
  int v246 = a1[64];
  int v245 = v246 / 2;
  int64x2_t v250 = (_WORD *)a2;
  if (a1[61])
  {
    int v28 = 3 * v19;
    int v29 = a1[60];
  }
  else
  {
    int v28 = a1[60];
    int v29 = v19;
  }
  uint64_t v244 = a8;
  unsigned int v262 = a1;
  unsigned int v240 = a5;
  uint64_t v241 = a6;
  uint64_t v242 = v15;
  uint64_t v247 = (char *)sub_1000CD3E8(2 * (v28 * v29 + 2 * v245 + 1), v20, v21, v22, v23, v24, v25, v26);
  if (v246 >= 2) {
    bzero(v247, 2 * (v245 - 1) + 2);
  }
  if (a7 >= 10) {
    int v38 = 10;
  }
  else {
    int v38 = a7;
  }
  uint64_t v39 = (void *)sub_1000CD3E8(8 * (v38 + 1), v31, v32, v33, v34, v35, v36, v37);
  unint64_t v47 = sub_1000CD3E8(8 * (v38 + 1), v40, v41, v42, v43, v44, v45, v46);
  unint64_t v55 = sub_1000CD3E8(4 * (v38 + 1), v48, v49, v50, v51, v52, v53, v54);
  int v254 = v38 + 1;
  unint64_t v63 = sub_1000CD3E8(2 * (v38 + 1), v56, v57, v58, v59, v60, v61, v62);
  unint64_t v71 = sub_1000CD3E8(v38 + 1, v64, v65, v66, v67, v68, v69, v70);
  int64x2_t v263 = (const __int16 *)sub_1000CD3E8(20, v72, v73, v74, v75, v76, v77, v78);
  int v93 = (const char *)sub_1000CD3E8(10, v79, v80, v81, v82, v83, v84, v85);
  uint64_t v94 = v262;
  int v255 = v38;
  if ((v38 & 0x80000000) == 0)
  {
    int v259 = v27 + 1;
    uint64_t v95 = (v38 + 1);
    unsigned int v96 = (unint64_t *)v47;
    uint64_t v97 = (_DWORD *)v55;
    do
    {
      int v98 = v94;
      unint64_t v99 = sub_1000CD3E8(2 * v94[65] * v259, v86, v87, v88, (uint64_t)v89, v90, v91, v92);
      uint64_t v94 = v98;
      *v96++ = v99;
      *v97++ = 0;
      --v95;
    }
    while (v95);
  }
  *uint64_t v39 = 0;
  uint64_t v100 = v250;
  if (!*v250)
  {
    int v101 = 1;
    uint64_t v102 = (uint64_t)v262;
    int v184 = v255;
    goto LABEL_150;
  }
  int32x4_t v248 = v93 + 1;
  uint64_t v249 = v263 + 1;
  int v101 = 1;
  BOOL v253 = (unsigned __int16 *)&v247[2 * v245];
  uint64_t v102 = (uint64_t)v262;
  do
  {
    *(void *)float64x2_t v266 = 0;
    uint64_t v251 = v100;
    int v103 = sub_10009A720(v102, (unint64_t)v100, v252, v253, &v266[1], v266);
    uint64_t v104 = v266[1];
    uint64_t v105 = v266[1];
    if (v103)
    {
      if (v246 > 1) {
        bzero(&v247[2 * v266[1] + 2 * v245], 2 * (v245 - 1) + 2);
      }
      if ((int)v105 >= 1)
      {
        uint64_t v106 = &v247[2 * v105];
        unsigned int v107 = v247;
        uint64_t v102 = (uint64_t)v262;
        uint64_t v256 = v106;
        while (*(unsigned __int16 *)&v107[2 * v245] == *(unsigned __int16 *)(v102 + 184))
        {
          if (v101 >= 1)
          {
            uint64_t v108 = v101;
            uint64_t v109 = (uint64_t *)v47;
            int v110 = (int *)v55;
            do
            {
              __int16 v111 = *(_WORD *)(v102 + 68);
              uint64_t v112 = *v109++;
              uint64_t v113 = *v110;
              *v110++ = v113 + 1;
              *(_WORD *)(v112 + 2 * v113) = v111;
              --v108;
            }
            while (v108);
          }
LABEL_33:
          v107 += 2;
          if (v107 >= v106) {
            goto LABEL_26;
          }
        }
        uint64_t v114 = *(void *)(v102 + 552);
        uint64_t v257 = v107;
        unsigned int v115 = v263;
        int v116 = sub_10007A110(v114);
        uint64_t v92 = v255;
        if (v101 >= 1)
        {
          if (v101 < 8)
          {
            uint64_t v117 = 0;
            goto LABEL_42;
          }
          uint64_t v117 = 0;
          unint64_t v150 = v63 + 2 * v101;
          BOOL v151 = v63 >= (unint64_t)v249 || (unint64_t)v263 >= v150;
          BOOL v152 = !v151;
          BOOL v153 = v63 >= (unint64_t)v248 || (unint64_t)v93 >= v150;
          BOOL v154 = !v153;
          unint64_t v155 = v71 + v101;
          BOOL v156 = v71 >= (unint64_t)v249 || (unint64_t)v263 >= v155;
          BOOL v157 = !v156;
          BOOL v158 = v71 >= (unint64_t)v248 || (unint64_t)v93 >= v155;
          BOOL v159 = !v158;
          BOOL v160 = v71 >= v150 || v63 >= v155;
          if (!v160 || v152 || v154 || v157 || v159) {
            goto LABEL_42;
          }
          if (v101 < 0x20)
          {
            uint64_t v117 = 0;
            goto LABEL_122;
          }
          int16x8_t v161 = vld1q_dup_s16(v263);
          uint64_t v117 = v101 & 0xFFFFFFE0;
          int8x16_t v162 = vld1q_dup_s8(v93);
          uint64_t v163 = v117;
          int v164 = (int8x16_t *)(v71 + 16);
          unsigned int v165 = (int16x8_t *)(v63 + 32);
          do
          {
            v165[-2] = v161;
            v165[-1] = v161;
            *unsigned int v165 = v161;
            v165[1] = v161;
            v165 += 4;
            v164[-1] = v162;
            int8x16_t *v164 = v162;
            v164 += 2;
            v163 -= 32;
          }
          while (v163);
          if (v117 != v101)
          {
            if ((v101 & 0x18) == 0) {
              goto LABEL_42;
            }
LABEL_122:
            uint64_t v166 = v117;
            int16x8_t v167 = vld1q_dup_s16(v263);
            uint64_t v117 = v101 & 0xFFFFFFF8;
            int8x8_t v168 = vld1_dup_s8(v93);
            int v169 = (int16x8_t *)(v63 + 2 * v166);
            int v170 = (int8x8_t *)(v71 + v166);
            uint64_t v171 = v166 - v117;
            do
            {
              *v169++ = v167;
              *v170++ = v168;
              v171 += 8;
            }
            while (v171);
            if (v117 != v101)
            {
LABEL_42:
              int v118 = (char *)(v71 + v117);
              int v119 = (__int16 *)(v63 + 2 * v117);
              uint64_t v120 = v101 - v117;
              do
              {
                *v119++ = *v263;
                *v118++ = *v93;
                --v120;
              }
              while (v120);
            }
          }
        }
        if (v116 > 1)
        {
          unint64_t v121 = v116;
          for (unint64_t i = 1; i < v121; ++i)
          {
            if (v101 < 1)
            {
              int v124 = 0;
              goto LABEL_74;
            }
            uint64_t v123 = 0;
            int v124 = 0;
            while (*(unsigned __int16 *)(v63 + 2 * v123) != *(unsigned __int16 *)v115)
            {
LABEL_49:
              if (++v123 >= v101) {
                goto LABEL_74;
              }
            }
            uint64_t v125 = v101;
            if (v101 >= (int)v123) {
              int v126 = v123;
            }
            else {
              int v126 = v101;
            }
            int v127 = v101 + 1;
            while (v125 > v123)
            {
              uint64_t v128 = v39[v125 - 1];
              uint64_t v129 = *(unsigned __int8 *)(v71 - 1 + v125--);
              --v127;
              if (v39[v123] + v93[i] >= v128 + v129)
              {
                if (!v123) {
                  int v124 = v127;
                }
                if (v127 == v254) {
                  goto LABEL_74;
                }
LABEL_64:
                if (v101 <= v255) {
                  ++v101;
                }
                int v130 = v101 - 1;
                uint64_t v131 = *(void *)(v47 + 8 * (v101 - 1));
                uint64_t v132 = v127;
                if (v101 - 1 > v127)
                {
                  uint64_t v133 = v130;
                  uint64_t v134 = 8 * v130;
                  uint64_t v135 = (void *)(v47 + v134);
                  uint64_t v136 = (_DWORD *)(v55 + 4 * v130);
                  uint64_t v137 = (_WORD *)(v63 + 2 * v130);
                  unsigned int v89 = &v39[(unint64_t)v134 / 8];
                  int v138 = (void *)(v47 + v134);
                  unsigned __int16 v139 = v89;
                  unsigned int v140 = v136;
                  int v141 = v137;
                  do
                  {
                    uint64_t v90 = v71 + v133;
                    uint64_t v91 = v133 - 1;
                    uint64_t v142 = *--v138;
                    void *v135 = v142;
                    uint64_t v143 = *--v139;
                    *unsigned int v89 = v143;
                    LODWORD(v143) = *--v140;
                    *uint64_t v136 = v143;
                    LOWORD(v143) = *--v141;
                    *uint64_t v137 = v143;
                    uint64_t v137 = v141;
                    uint64_t v136 = v140;
                    *(unsigned char *)(v71 + v133) = *(unsigned char *)(v71 + v133 - 1);
                    unsigned int v89 = v139;
                    uint64_t v135 = v138;
                    uint64_t v133 = v91;
                  }
                  while (v91 > v132);
                }
                *(void *)(v47 + 8 * v132) = v131;
                if (*(int *)(v55 + 4 * v123) >= 1)
                {
                  uint64_t v144 = 0;
                  do
                  {
                    *(_WORD *)(*(void *)(v47 + 8 * v132) + 2 * v144) = *(_WORD *)(*(void *)(v47 + 8 * v123)
                                                                                  + 2 * v144);
                    ++v144;
                  }
                  while (v144 < *(int *)(v55 + 4 * v123));
                }
                v39[v132] = v39[v123];
                *(_DWORD *)(v55 + 4 * v132) = *(_DWORD *)(v55 + 4 * v123);
                unsigned int v115 = v263;
                *(_WORD *)(v63 + 2 * v132) = v263[i];
                *(unsigned char *)(v71 + v132) = v93[i];
                goto LABEL_49;
              }
            }
            int v127 = v126;
            if (!v123) {
              int v124 = v126;
            }
            if (v126 != v254) {
              goto LABEL_64;
            }
LABEL_74:
            if (v124 > v255) {
              break;
            }
          }
        }
        if (v101 >= 1)
        {
          for (uint64_t j = 0; j != v101; ++j)
          {
            float64x2_t v265 = 0;
            int v264 = 0;
            sub_10007C324(*((void *)v262 + 6), *(unsigned __int16 *)(v63 + 2 * j), &v265, &v264);
            if (v264 >= 1)
            {
              for (int k = 0; k < v264; ++k)
              {
                uint64_t v147 = v265;
                float64x2_t v265 = (int16x8_t *)((char *)v265 + 2);
                LOWORD(v147) = v147->i16[0];
                uint64_t v148 = *(void *)(v47 + 8 * j);
                uint64_t v149 = *(int *)(v55 + 4 * j);
                *(_DWORD *)(v55 + 4 * j) = v149 + 1;
                *(_WORD *)(v148 + 2 * v149) = (_WORD)v147;
              }
            }
            v39[j] += *(unsigned __int8 *)(v71 + j);
          }
        }
        uint64_t v102 = (uint64_t)v262;
        uint64_t v106 = v256;
        unsigned int v107 = v257;
        goto LABEL_33;
      }
      goto LABEL_25;
    }
    if (v266[1] < 1) {
      goto LABEL_25;
    }
    if (v101 <= 0)
    {
      int32x4_t v181 = &v247[2 * v245];
      do
      {
        unsigned int v183 = *(unsigned __int16 *)v181;
        v181 += 2;
        unsigned int v182 = v183;
        float64x2_t v265 = 0;
        int v264 = 0;
        if (v183 != 0xFFFF && (v252 != 6 || v182 != *((unsigned __int16 *)v262 + 92)))
        {
          uint64_t v261 = v104;
          sub_10007C324(*((void *)v262 + 24), v182, &v265, &v264);
          uint64_t v104 = v261;
        }
        --v104;
      }
      while (v104);
LABEL_25:
      uint64_t v102 = (uint64_t)v262;
      goto LABEL_26;
    }
    uint64_t v172 = 0;
    uint64_t v102 = (uint64_t)v262;
    uint64_t v260 = v266[1];
    do
    {
      unsigned int v173 = v253[v172];
      float64x2_t v265 = 0;
      int v264 = 0;
      if (v173 != 0xFFFF && (v252 != 6 || v173 != *((unsigned __int16 *)v262 + 92)))
      {
        uint64_t v258 = v172;
        sub_10007C324(*((void *)v262 + 24), v173, &v265, &v264);
        uint64_t v172 = v258;
        uint64_t v104 = v260;
        int v174 = v264;
        if (v264 >= 1)
        {
          for (uint64_t m = 0; m != v101; ++m)
          {
            if (v174 >= 1)
            {
              uint64_t v176 = 0;
              unsigned __int8 v177 = v265;
              do
              {
                __int16 v178 = v177->i16[v176];
                uint64_t v179 = *(void *)(v47 + 8 * m);
                uint64_t v180 = *(int *)(v55 + 4 * m);
                *(_DWORD *)(v55 + 4 * m) = v180 + 1;
                *(_WORD *)(v179 + 2 * v180) = v178;
                int v174 = v264;
                ++v176;
              }
              while ((int)v176 < v264);
            }
          }
        }
      }
      ++v172;
    }
    while (v172 != v104);
LABEL_26:
    uint64_t v100 = &v251[v266[0]];
  }
  while (*v100);
  int v184 = v255;
  if (v101 <= 0)
  {
    uint64_t v30 = 0;
    uint64_t v185 = v240;
    *uint64_t v244 = v240;
    unsigned int v186 = v240;
    goto LABEL_199;
  }
LABEL_150:
  uint64_t v187 = 0;
  unint64_t v188 = v101;
  uint64_t v185 = v240;
  do
  {
    int v189 = *(_DWORD *)(v55 + 4 * v187);
    if (v189 < 1) {
      goto LABEL_168;
    }
    uint64_t v190 = 0;
    int v191 = 0;
    do
    {
      uint64_t v192 = *(void *)(v47 + 8 * v187);
      if (*(_WORD *)(v192 + 2 * v190))
      {
        *(_WORD *)(v192 + 2 * v191++) = *(_WORD *)(v192 + 2 * v190);
        int v189 = *(_DWORD *)(v55 + 4 * v187);
      }
      ++v190;
    }
    while (v190 < v189);
    *(_DWORD *)(v55 + 4 * v187) = v191;
    if (v191 < 1)
    {
LABEL_168:
      *(_DWORD *)(v55 + 4 * v187) = 0;
    }
    else
    {
      uint64_t v193 = v191;
      int8x16_t v194 = *(unsigned __int16 **)(v47 + 8 * v187);
      while (1)
      {
        int v195 = *v194++;
        if (v195 != *(unsigned __int16 *)(v102 + 68)) {
          break;
        }
        if (!--v193) {
          goto LABEL_168;
        }
      }
      if (v187)
      {
        for (uint64_t n = 0; n != v187; ++n)
        {
          if (*(_DWORD *)(v55 + 4 * n) == v191)
          {
            int32x4_t v197 = *(unsigned __int16 **)(v47 + 8 * n);
            uint64_t v198 = v191;
            uint64_t v199 = *(unsigned __int16 **)(v47 + 8 * v187);
            while (1)
            {
              int v201 = *v197++;
              int v200 = v201;
              int v202 = *v199++;
              if (v200 != v202) {
                break;
              }
              if (!--v198) {
                goto LABEL_168;
              }
            }
          }
        }
      }
    }
    ++v187;
  }
  while (v187 != v188);
  uint64_t v30 = 0;
  *uint64_t v244 = v240;
  unsigned int v186 = v240;
  if (v184)
  {
    unint64_t v203 = 0;
    uint64_t v30 = 0;
    unsigned int v186 = v240;
    int32x4_t v204 = a4;
    do
    {
      int v205 = *(_DWORD *)(v55 + 4 * v203);
      if (v205)
      {
        v186 += ~v205;
        if ((int)v262[26] >= 1)
        {
          float64x2_t v265 = 0;
          v266[1] = 0;
          sub_10007C324(*((void *)v262 + 10), *((unsigned __int16 *)v262 + 48), &v265, &v266[1]);
          uint64_t v206 = *(unsigned int *)(v55 + 4 * v203);
          if ((int)v206 < 1 || v266[1] < 1)
          {
            int v184 = v255;
          }
          else
          {
            uint64_t v207 = *(void *)(v47 + 8 * v203);
            if (v266[1] >= 0x10u)
            {
              uint64_t v213 = 0;
              int v184 = v255;
              do
              {
                unsigned int v214 = *(unsigned __int16 *)(v207 + 2 * v213);
                int32x4_t v215 = 0uLL;
                int32x4_t v216 = (int32x4_t)v186;
                int16x8_t v217 = vdupq_n_s16(v214);
                uint64_t v218 = v266[1] & 0xFFFFFFF0;
                BOOL v219 = v265 + 1;
                int32x4_t v220 = 0uLL;
                int32x4_t v221 = 0uLL;
                do
                {
                  int16x8_t v222 = vceqq_s16(v217, v219[-1]);
                  int16x8_t v223 = vceqq_s16(v217, *v219);
                  int32x4_t v215 = vaddw_high_s16(v215, v222);
                  int32x4_t v216 = vaddw_s16(v216, *(int16x4_t *)v222.i8);
                  int32x4_t v221 = vaddw_high_s16(v221, v223);
                  int32x4_t v220 = vaddw_s16(v220, *(int16x4_t *)v223.i8);
                  v219 += 2;
                  v218 -= 16;
                }
                while (v218);
                unsigned int v186 = vaddvq_s32(vaddq_s32(vaddq_s32(v220, v216), vaddq_s32(v221, v215)));
                if (v266[1] != (unint64_t)(v266[1] & 0xFFFFFFF0))
                {
                  unint64_t v224 = v266[1] - (unint64_t)(v266[1] & 0xFFFFFFF0);
                  int32x4_t v225 = (unsigned __int16 *)((char *)v265->u16 + ((2 * v266[1]) & 0x1FFFFFFE0));
                  do
                  {
                    int v226 = *v225++;
                    v186 -= v214 == v226;
                    --v224;
                  }
                  while (v224);
                }
                ++v213;
              }
              while (v213 != v206);
            }
            else
            {
              uint64_t v208 = 0;
              int v184 = v255;
              do
              {
                int v209 = v265;
                uint64_t v210 = v266[1];
                do
                {
                  int v211 = v209->u16[0];
                  int v209 = (int16x8_t *)((char *)v209 + 2);
                  v186 -= *(unsigned __int16 *)(v207 + 2 * v208) == v211;
                  --v210;
                }
                while (v210);
                ++v208;
              }
              while (v208 != v206);
            }
          }
        }
        if ((v186 & 0x80000000) == 0)
        {
          if (*(int *)(v55 + 4 * v203) >= 1)
          {
            uint64_t v212 = 0;
            do
              *v204++ = *(_WORD *)(*(void *)(v47 + 8 * v203) + 2 * v212++);
            while (v212 < *(int *)(v55 + 4 * v203));
          }
          *v204++ = -1;
          v39[(int)v30] = v39[v203];
          uint64_t v30 = (v30 + 1);
        }
      }
      ++v203;
    }
    while (v203 < v188 && v30 != v184);
  }
LABEL_199:
  if ((v186 & 0x80000000) != 0)
  {
    uint64_t v228 = v241;
    uint64_t v227 = v242;
    uint64_t v229 = (uint64_t)v262;
    *v244 -= v186;
    if ((int)v30 < 1) {
      goto LABEL_214;
    }
  }
  else
  {
    uint64_t v228 = v241;
    uint64_t v227 = v242;
    uint64_t v229 = (uint64_t)v262;
    *uint64_t v244 = 0;
    if ((int)v30 < 1) {
      goto LABEL_214;
    }
  }
  if (!*(void *)(v229 + 80) || (uint64_t v30 = sub_100096524(v229, a4, v185, v30), (int)v30 >= 1))
  {
    if (*(int *)(v229 + 104) < 1
      || (uint64_t v30 = sub_10009663C(v229, (uint64_t)a4, v185, v30, (uint64_t)v89, v90, v91, v92), (int)v30 >= 1))
    {
      uint64_t v230 = 0;
      if (v30 < 4) {
        goto LABEL_212;
      }
      if ((unint64_t)(v228 - (void)v39) < 0x20) {
        goto LABEL_212;
      }
      uint64_t v230 = v30 & 0xFFFFFFFC;
      float64x2_t v231 = (long long *)(v39 + 2);
      float64x2_t v232 = (_OWORD *)(v228 + 16);
      uint64_t v233 = v230;
      do
      {
        long long v234 = *v231;
        *(v232 - 1) = *(v231 - 1);
        *float64x2_t v232 = v234;
        v231 += 2;
        v232 += 2;
        v233 -= 4;
      }
      while (v233);
      if (v230 != v30)
      {
LABEL_212:
        float64x2_t v235 = (void *)(v228 + 8 * v230);
        uint64_t v236 = &v39[v230];
        uint64_t v237 = v30 - v230;
        do
        {
          uint64_t v238 = *v236++;
          *v235++ = v238;
          --v237;
        }
        while (v237);
      }
    }
  }
LABEL_214:
  sub_1000CD534(v227);
  return v30;
}

uint64_t sub_10009A720(uint64_t a1, unint64_t a2, int a3, unsigned __int16 *a4, _DWORD *a5, _DWORD *a6)
{
  int v12 = sub_1000CED6C(a2);
  int v20 = v12;
  char v90 = 1;
  int v92 = a3;
  switch(a3)
  {
    case 3:
    case 6:
      *a6 = 0;
      if (v12 < 1) {
        goto LABEL_93;
      }
      goto LABEL_3;
    case 4:
      char v90 = 0;
      *a6 = 0;
      if (v12 < 1) {
        goto LABEL_93;
      }
      goto LABEL_3;
    case 5:
      unsigned int v89 = a5;
      if (v12 < 1)
      {
        int v72 = 0;
        int v71 = 0;
      }
      else
      {
        int v71 = 0;
        int v72 = 0;
        uint64_t v73 = (unsigned __int16 *)a2;
        uint64_t v74 = v12;
        do
        {
          while (1)
          {
            unsigned int v76 = *v73++;
            unsigned int v75 = v76;
            if (!sub_1000CD818(v76)) {
              break;
            }
            int v71 = 1;
            if (!--v74) {
              goto LABEL_86;
            }
          }
          if (sub_1000CD950(v75)) {
            int v72 = 1;
          }
          --v74;
        }
        while (v74);
      }
LABEL_86:
      if (v71) {
        BOOL v83 = v72 == 0;
      }
      else {
        BOOL v83 = 1;
      }
      char v84 = v83;
      char v90 = v84;
      a5 = v89;
      a3 = v92;
      *a6 = 0;
      if (v20 < 1)
      {
LABEL_93:
        LODWORD(v22) = 0;
        int v91 = -1;
        LODWORD(v94) = 0;
        *a4 = 0;
        goto LABEL_50;
      }
LABEL_3:
      uint64_t v21 = 0;
      LODWORD(v22) = 0;
      uint64_t v87 = a4 + 8;
      uint64_t v88 = a5;
      int v91 = -1;
      uint64_t v23 = v20;
      break;
    default:
      uint64_t result = 0;
      *a5 = 0;
      *a6 = 0;
      return result;
  }
  while (1)
  {
    while (1)
    {
      unsigned int v24 = *(unsigned __int16 *)(a2 + 2 * v21);
      int v95 = 0;
      ++*a6;
      LOWORD(v95) = v24;
      if (a3 != 6 || v24 != 94) {
        break;
      }
      int v91 = v22;
      if (++v21 == v23)
      {
LABEL_49:
        LODWORD(v94) = v22;
        a4[(int)v22] = 0;
        if (v22 != 1) {
          goto LABEL_50;
        }
        goto LABEL_94;
      }
    }
    unsigned int v25 = sub_10007C8B0(*(void *)(a1 + 208), &v95);
    if (v25 == 0xFFFF)
    {
      if (!*(_DWORD *)(a1 + 244) || sub_1000CD5A8(v24, 0) != 9)
      {
LABEL_27:
        int v26 = 0;
        goto LABEL_28;
      }
      uint64_t v94 = 0;
      int v93 = 0;
      sub_10007C324(*(void *)(a1 + 224), (unsigned __int16)(*(_WORD *)(a1 + 248) + (unsigned __int16)(v24 + 21504) / 0x24Cu), &v94, &v93);
      uint64_t v31 = v93;
      if (v93 >= 1)
      {
        uint64_t v32 = v94;
        uint64_t v22 = (int)v22;
        if (v93 < 0x10 || (uint64_t v33 = (int)v22, (unint64_t)((char *)&a4[v33] - (char *)v94) < 0x20))
        {
          uint64_t v34 = 0;
LABEL_22:
          uint64_t v35 = &v32[v34];
          uint64_t v36 = v31 - v34;
          uint64_t v37 = v22;
          do
          {
            unsigned __int16 v38 = *v35++;
            LODWORD(v22) = v37 + 1;
            a4[v37++] = v38;
            --v36;
          }
          while (v36);
          goto LABEL_24;
        }
        uint64_t v34 = v93 & 0xFFFFFFF0;
        uint64_t v22 = v34 + (int)v22;
        uint64_t v43 = (long long *)(v94 + 8);
        uint64_t v44 = &v87[v33];
        uint64_t v45 = v34;
        do
        {
          long long v46 = *v43;
          *(v44 - 1) = *(v43 - 1);
          *uint64_t v44 = v46;
          v43 += 2;
          v44 += 2;
          v45 -= 16;
        }
        while (v45);
        if (v34 != v31) {
          goto LABEL_22;
        }
      }
LABEL_24:
      sub_10007C324(*(void *)(a1 + 224), (unsigned __int16)(*(_WORD *)(a1 + 250) + (unsigned __int16)(v24 + 21504) % 0x24Cu / 0x1C), &v94, &v93);
      uint64_t v39 = v93;
      if (v93 < 1)
      {
        a5 = v88;
        goto LABEL_45;
      }
      uint64_t v40 = v94;
      uint64_t v22 = (int)v22;
      if (v93 >= 0x10)
      {
        uint64_t v42 = (int)v22;
        a5 = v88;
        if ((unint64_t)((char *)&a4[v42] - (char *)v94) >= 0x20)
        {
          uint64_t v41 = v93 & 0xFFFFFFF0;
          uint64_t v22 = v41 + (int)v22;
          unint64_t v47 = (long long *)(v94 + 8);
          uint64_t v48 = &v87[v42];
          uint64_t v49 = v41;
          do
          {
            long long v50 = *v47;
            *(v48 - 1) = *(v47 - 1);
            *uint64_t v48 = v50;
            v47 += 2;
            v48 += 2;
            v49 -= 16;
          }
          while (v49);
          if (v41 == v39)
          {
LABEL_45:
            sub_10007C324(*(void *)(a1 + 224), (unsigned __int16)(*(_WORD *)(a1 + 252) + (unsigned __int16)(v24 + 21504) % 0x1Cu), &v94, &v93);
            int v26 = *v94;
            if (v93 > 1)
            {
              unint64_t v55 = &a4[(int)v22];
              uint64_t v56 = v94 + 1;
              uint64_t v57 = v93 - 1;
              do
              {
                *v55++ = v26;
                int v58 = *v56++;
                int v26 = v58;
                LODWORD(v22) = v22 + 1;
                --v57;
              }
              while (v57);
            }
            goto LABEL_28;
          }
        }
        else
        {
          uint64_t v41 = 0;
        }
      }
      else
      {
        uint64_t v41 = 0;
        a5 = v88;
      }
      uint64_t v51 = &v40[v41];
      uint64_t v52 = v39 - v41;
      uint64_t v53 = v22;
      do
      {
        unsigned __int16 v54 = *v51++;
        LODWORD(v22) = v53 + 1;
        a4[v53++] = v54;
        --v52;
      }
      while (v52);
      goto LABEL_45;
    }
    uint64_t v94 = 0;
    int v93 = 0;
    sub_10007C324(*(void *)(a1 + 224), v25, &v94, &v93);
    if (!v93) {
      goto LABEL_27;
    }
    int v26 = *v94;
    if (v93 >= 2)
    {
      int v27 = &a4[(int)v22];
      int v28 = v94 + 1;
      uint64_t v29 = v93 - 1;
      do
      {
        *v27++ = v26;
        int v30 = *v28++;
        int v26 = v30;
        LODWORD(v22) = v22 + 1;
        --v29;
      }
      while (v29);
    }
LABEL_28:
    if ((int)v22 >= 1) {
      break;
    }
    if (!v26)
    {
      unsigned __int16 v85 = sub_10007C8B0(*(void *)(a1 + 168), &v95);
      uint64_t result = 0;
      uint64_t v86 = &a4[(int)v22];
      *uint64_t v86 = v85;
      v86[1] = 0;
      *a5 = 1;
      *a6 = 1;
      return result;
    }
LABEL_5:
    a4[(int)v22] = v26;
    LODWORD(v22) = v22 + 1;
    a3 = v92;
    if (++v21 == v23) {
      goto LABEL_49;
    }
  }
  if (v26 && ((v90 & 1) != 0 || !sub_1000CD950(v24))) {
    goto LABEL_5;
  }
  LODWORD(v94) = v22;
  --*a6;
  a3 = v92;
  a4[(int)v22] = 0;
  if (v22 == 1)
  {
LABEL_94:
    uint64_t result = 0;
    *a5 = 1;
    return result;
  }
LABEL_50:
  uint64_t v59 = 2 * ((int)v22 + 1);
  uint64_t v60 = (_WORD *)sub_1000CD3E8(v59, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v61 = v60;
  *uint64_t v60 = 0;
  if ((int)v22 < 1)
  {
    if (!*(void *)(a1 + 408)) {
      goto LABEL_80;
    }
    goto LABEL_73;
  }
  uint64_t v62 = a5;
  uint64_t v63 = v22;
  uint64_t v64 = v22;
  uint64_t v65 = v60;
  uint64_t v66 = a4;
  do
  {
    unsigned int v67 = *v66++;
    *v65++ = *sub_10007C9B8(*(void *)(a1 + 168), v67);
    --v64;
  }
  while (v64);
  *((_WORD *)v61 + v22) = 0;
  a5 = v62;
  a3 = v92;
  if (*(void *)(a1 + 408) && v22 < 0x32)
  {
LABEL_73:
    if (sub_10009B65C(a1, (unint64_t)v61)) {
      goto LABEL_74;
    }
LABEL_80:
    *a5 = v22;
    sub_1000CD4D0(v61, v59);
    return 0;
  }
  uint64_t v68 = a4;
  while (1)
  {
    unsigned int v69 = *v68++;
    if (*(__int16 *)(*(void *)(a1 + 264) + 2 * v69) != -1) {
      break;
    }
    if (!--v63) {
      goto LABEL_80;
    }
  }
LABEL_74:
  sub_1000CD4D0(v61, v59);
  if (a3 != 6 || v91 == -1)
  {
    if (a3 != 6 && *(void *)(a1 + 312))
    {
      sub_10009BBA4(a1, (uint64_t)a4, (int *)&v94, v77, v78, v79, v80, v81);
      LODWORD(v22) = v94;
    }
  }
  else
  {
    if ((int)v22 > v91)
    {
      uint64_t v82 = (int)v22;
      do
      {
        a4[v82] = a4[v82 - 1];
        --v82;
      }
      while (v82 > v91);
    }
    a4[v91] = *(_WORD *)(a1 + 184);
    LODWORD(v22) = v22 + 1;
  }
  *a5 = v22;
  return 1;
}

uint64_t sub_10009ADB8(uint64_t a1)
{
  uint64_t v2 = sub_1000C33A0(568);
  uint64_t v3 = v2;
  if (v2)
  {
    if (!sub_100096DB4(v2, a1))
    {
LABEL_154:
      sub_1000C321C(v3);
      return 0;
    }
    if (sub_1000BEF74(a1, (_WORD *)(v3 + 184)))
    {
      if (sub_1000BEECC(a1, (void *)(v3 + 240)) && sub_1000BEE7C(a1, (_DWORD *)(v3 + 244)))
      {
        if (sub_1000BEF74(a1, (_WORD *)(v3 + 248)))
        {
          if (sub_1000BEF74(a1, (_WORD *)(v3 + 250)))
          {
            if (sub_1000BEF74(a1, (_WORD *)(v3 + 252)))
            {
              if (sub_1000BEECC(a1, (void *)(v3 + 256))
                && sub_1000BEECC(a1, (void *)(v3 + 260))
                && sub_1000BEECC(a1, (void *)(v3 + 280))
                && sub_1000BEECC(a1, (void *)(v3 + 304)))
              {
                uint64_t v4 = (int *)(v3 + 328);
                if (sub_1000BEECC(a1, (void *)(v3 + 328)))
                {
                  uint64_t v5 = (int *)(v3 + 504);
                  if (sub_1000BEECC(a1, (void *)(v3 + 504)) && sub_1000BEECC(a1, (void *)(v3 + 528)))
                  {
                    uint64_t v6 = sub_10007CAF4(a1);
                    *(void *)(v3 + 176) = v6;
                    if (v6)
                    {
                      *(void *)(v3 + 168) = v6;
                      uint64_t v7 = sub_10007C40C(a1);
                      *(void *)(v3 + 200) = v7;
                      if (v7)
                      {
                        *(void *)(v3 + 192) = v7;
                        uint64_t v8 = sub_10007CAF4(a1);
                        *(void *)(v3 + 216) = v8;
                        if (v8)
                        {
                          *(void *)(v3 + 208) = v8;
                          int v9 = sub_10007C40C(a1);
                          *(void *)(v3 + 232) = v9;
                          if (v9)
                          {
                            *(void *)(v3 + 224) = v9;
                            uint64_t v10 = sub_10007C8A8(*(void *)(v3 + 168));
                            int v35 = 0;
                            uint64_t v11 = (void *)(v3 + 272);
                            if (sub_1000BF078(a1, 2, (uint64_t *)(v3 + 272), &v35))
                            {
                              if (*v11)
                              {
                                if (v10 + 1 != v35) {
                                  goto LABEL_153;
                                }
                                *(void *)(v3 + 264) = *v11;
                              }
                              int v35 = 0;
                              int v12 = (void *)(v3 + 296);
                              if (sub_1000BF078(a1, 2, (uint64_t *)(v3 + 296), &v35))
                              {
                                if (*v12)
                                {
                                  if (v35 != *(_DWORD *)(v3 + 280)) {
                                    goto LABEL_153;
                                  }
                                  *(void *)(v3 + 288) = *v12;
                                }
                                if (*v5 >= 1)
                                {
                                  uint64_t v13 = sub_10007CAF4(a1);
                                  *(void *)(v3 + 416) = v13;
                                  if (!v13) {
                                    goto LABEL_153;
                                  }
                                  *(void *)(v3 + 408) = v13;
                                  uint64_t v14 = sub_10007CAF4(a1);
                                  *(void *)(v3 + 432) = v14;
                                  if (!v14) {
                                    goto LABEL_153;
                                  }
                                  *(void *)(v3 + 424) = v14;
                                  uint64_t v15 = sub_10007CAF4(a1);
                                  *(void *)(v3 + 448) = v15;
                                  if (!v15) {
                                    goto LABEL_153;
                                  }
                                  *(void *)(v3 + 440) = v15;
                                  uint64_t v16 = sub_10007CAF4(a1);
                                  *(void *)(v3 + 464) = v16;
                                  if (!v16) {
                                    goto LABEL_153;
                                  }
                                  *(void *)(v3 + 456) = v16;
                                  uint64_t v17 = sub_10007CAF4(a1);
                                  *(void *)(v3 + 480) = v17;
                                  if (!v17) {
                                    goto LABEL_153;
                                  }
                                  *(void *)(v3 + 472) = v17;
                                  uint64_t v18 = sub_10007CAF4(a1);
                                  *(void *)(v3 + 496) = v18;
                                  if (!v18) {
                                    goto LABEL_153;
                                  }
                                  *(void *)(v3 + 488) = v18;
                                  int v35 = 0;
                                  uint64_t v19 = (void *)(v3 + 520);
                                  if (!sub_1000BF078(a1, 2, (uint64_t *)(v3 + 520), &v35)) {
                                    goto LABEL_153;
                                  }
                                  if (*v19)
                                  {
                                    if (v35 != *v5) {
                                      goto LABEL_153;
                                    }
                                    *(void *)(v3 + 512) = *v19;
                                  }
                                  int v35 = 0;
                                  int v20 = (void *)(v3 + 544);
                                  if (!sub_1000BF078(a1, 2, (uint64_t *)(v3 + 544), &v35)) {
                                    goto LABEL_153;
                                  }
                                  if (*v20)
                                  {
                                    if (v35 != *(_DWORD *)(v3 + 528)) {
                                      goto LABEL_153;
                                    }
                                    *(void *)(v3 + 536) = *v20;
                                  }
                                }
                                uint64_t v21 = sub_10007A118(a1);
                                *(void *)(v3 + 560) = v21;
                                if (v21)
                                {
                                  *(void *)(v3 + 552) = v21;
                                  int v35 = 0;
                                  uint64_t v22 = (void *)(v3 + 320);
                                  if (sub_1000BF078(a1, 4, (uint64_t *)(v3 + 320), &v35))
                                  {
                                    if (!*v22)
                                    {
                                      if (!*(void *)(v3 + 312)) {
                                        goto LABEL_152;
                                      }
                                      goto LABEL_49;
                                    }
                                    if (v35 == *(_DWORD *)(v3 + 304) + 1)
                                    {
                                      *(void *)(v3 + 312) = *v22;
LABEL_49:
                                      uint64_t v23 = *v4;
                                      if (v23)
                                      {
                                        uint64_t v24 = sub_1000C33A0(4 * v23);
                                        if (v24)
                                        {
                                          uint64_t v25 = v24;
                                          int v26 = *v4;
                                          if (*v4 < 1)
                                          {
                                            LODWORD(v27) = 0;
                                          }
                                          else
                                          {
                                            uint64_t v27 = 0;
                                            uint64_t v28 = v24;
                                            do
                                            {
                                              if (!sub_1000BEF74(a1, (_WORD *)v28)) {
                                                break;
                                              }
                                              if (!sub_1000BEF1C(a1, (unsigned char *)(v28 + 2))) {
                                                break;
                                              }
                                              if (!sub_1000BEF1C(a1, (unsigned char *)(v28 + 3))) {
                                                break;
                                              }
                                              ++v27;
                                              v28 += 4;
                                            }
                                            while (v27 < *v4);
                                            int v26 = *v4;
                                          }
                                          if ((int)v27 >= v26)
                                          {
                                            uint64_t v29 = sub_1000C33A0(128);
                                            if (v29)
                                            {
                                              int v30 = (void *)v29;
                                              int v35 = 0;
                                              if (sub_1000BEECC(a1, &v35) && v35 >= -1 && v35 < *v4)
                                              {
                                                if (v35 != -1) {
                                                  *int v30 = v25 + 4 * v35;
                                                }
                                                int v35 = 0;
                                                if (sub_1000BEECC(a1, &v35) && v35 >= -1 && v35 < *v4)
                                                {
                                                  if (v35 != -1) {
                                                    v30[1] = v25 + 4 * v35;
                                                  }
                                                  int v35 = 0;
                                                  if (sub_1000BEECC(a1, &v35) && v35 >= -1 && v35 < *v4)
                                                  {
                                                    if (v35 != -1) {
                                                      v30[2] = v25 + 4 * v35;
                                                    }
                                                    int v35 = 0;
                                                    if (sub_1000BEECC(a1, &v35) && v35 >= -1 && v35 < *v4)
                                                    {
                                                      if (v35 != -1) {
                                                        v30[3] = v25 + 4 * v35;
                                                      }
                                                      int v35 = 0;
                                                      if (sub_1000BEECC(a1, &v35) && v35 >= -1 && v35 < *v4)
                                                      {
                                                        if (v35 != -1) {
                                                          v30[4] = v25 + 4 * v35;
                                                        }
                                                        int v35 = 0;
                                                        if (sub_1000BEECC(a1, &v35) && v35 >= -1 && v35 < *v4)
                                                        {
                                                          if (v35 != -1) {
                                                            v30[5] = v25 + 4 * v35;
                                                          }
                                                          int v35 = 0;
                                                          if (sub_1000BEECC(a1, &v35) && v35 >= -1 && v35 < *v4)
                                                          {
                                                            if (v35 != -1) {
                                                              v30[6] = v25 + 4 * v35;
                                                            }
                                                            int v35 = 0;
                                                            if (sub_1000BEECC(a1, &v35) && v35 >= -1 && v35 < *v4)
                                                            {
                                                              if (v35 != -1) {
                                                                v30[7] = v25 + 4 * v35;
                                                              }
                                                              int v35 = 0;
                                                              if (sub_1000BEECC(a1, &v35) && v35 >= -1 && v35 < *v4)
                                                              {
                                                                if (v35 != -1) {
                                                                  v30[8] = v25 + 4 * v35;
                                                                }
                                                                int v35 = 0;
                                                                if (sub_1000BEECC(a1, &v35) && v35 >= -1 && v35 < *v4)
                                                                {
                                                                  if (v35 != -1) {
                                                                    v30[9] = v25 + 4 * v35;
                                                                  }
                                                                  int v35 = 0;
                                                                  if (sub_1000BEECC(a1, &v35) && v35 >= -1 && v35 < *v4)
                                                                  {
                                                                    if (v35 != -1) {
                                                                      v30[10] = v25 + 4 * v35;
                                                                    }
                                                                    int v35 = 0;
                                                                    if (sub_1000BEECC(a1, &v35)
                                                                      && v35 >= -1
                                                                      && v35 < *v4)
                                                                    {
                                                                      if (v35 != -1) {
                                                                        v30[11] = v25 + 4 * v35;
                                                                      }
                                                                      int v35 = 0;
                                                                      if (sub_1000BEECC(a1, &v35)
                                                                        && v35 >= -1
                                                                        && v35 < *v4)
                                                                      {
                                                                        if (v35 != -1) {
                                                                          v30[12] = v25 + 4 * v35;
                                                                        }
                                                                        int v35 = 0;
                                                                        if (sub_1000BEECC(a1, &v35)
                                                                          && v35 >= -1
                                                                          && v35 < *v4)
                                                                        {
                                                                          if (v35 != -1) {
                                                                            v30[13] = v25 + 4 * v35;
                                                                          }
                                                                          int v35 = 0;
                                                                          if (sub_1000BEECC(a1, &v35)
                                                                            && v35 >= -1
                                                                            && v35 < *v4)
                                                                          {
                                                                            if (v35 != -1) {
                                                                              v30[14] = v25 + 4 * v35;
                                                                            }
                                                                            int v35 = 0;
                                                                            if (sub_1000BEECC(a1, &v35)
                                                                              && v35 >= -1
                                                                              && v35 < *v4)
                                                                            {
                                                                              if (v35 != -1) {
                                                                                v30[15] = v25 + 4 * v35;
                                                                              }
                                                                              int v35 = 0;
                                                                              uint64_t v31 = (uint64_t *)(v3 + 376);
                                                                              if (sub_1000BF078(a1, 4, (uint64_t *)(v3 + 376), &v35))
                                                                              {
                                                                                uint64_t v32 = *v31;
                                                                                if (!*v31 || v35 == 16)
                                                                                {
                                                                                  if (v32) {
                                                                                    *(void *)(v3 + 368) = v32;
                                                                                  }
                                                                                  if (sub_1000BEECC(a1, (void *)(v3 + 384)))
                                                                                  {
                                                                                    int v35 = 0;
                                                                                    uint64_t v33 = (void *)(v3 + 400);
                                                                                    if (sub_1000BF078(a1, 2, (uint64_t *)(v3 + 400), &v35))
                                                                                    {
                                                                                      if (!*v33)
                                                                                      {
LABEL_151:
                                                                                        *(void *)(v3 + 336) = v25;
                                                                                        *(void *)(v3 + 344) = v25;
                                                                                        *(void *)(v3 + 352) = v30;
                                                                                        *(void *)(v3 + 360) = v30;
                                                                                        goto LABEL_152;
                                                                                      }
                                                                                      if (v35 == *(_DWORD *)(v3 + 384))
                                                                                      {
                                                                                        *(void *)(v3 + 392) = *v33;
                                                                                        goto LABEL_151;
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        goto LABEL_153;
                                      }
LABEL_152:
                                      *(void *)(v3 + 8) = sub_100099A30;
                                      *(void *)(v3 + 24) = 0;
                                      *(void *)(v3 + 32) = 0;
                                      *(void *)(v3 + 16) = sub_100099B04;
                                      return v3;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
LABEL_153:
    sub_100099A30((void *)v3);
    goto LABEL_154;
  }
  return v3;
}

BOOL sub_10009B65C(uint64_t a1, unint64_t a2)
{
  if (qword_100101CC0)
  {
    HIDWORD(v42) = *(_DWORD *)(qword_100101CC0 + 4272);
    int v43 = *(_DWORD *)(qword_100101CC0 + 4288);
    LODWORD(v42) = *(_DWORD *)(qword_100101CC0 + 4280);
  }
  else
  {
    int v43 = 0;
    uint64_t v42 = 0;
  }
  int v49 = 0;
  unsigned int v4 = 0;
  int v46 = 0;
  int v47 = 0;
  v50[0] = 0;
  unint64_t v5 = a2;
  uint64_t v6 = (__int16 *)a2;
  unint64_t v7 = a2 + 2 * (int)sub_1000CED6C(a2);
  int v48 = 0;
  if (a2 >= v7) {
    goto LABEL_5;
  }
  while (2)
  {
    while (2)
    {
      int v28 = *(_DWORD *)(a1 + 504);
      if (!v28)
      {
        unint64_t v34 = v5 + 2;
        if (v7 > v5 + 2) {
          unint64_t v34 = v7;
        }
        unint64_t v35 = v34 + ~v5;
        if (v35 >= 0x2E)
        {
          if ((unint64_t)&v49 >= v5 + (v35 & 0xFFFFFFFFFFFFFFFELL) + 2 || v5 >= (unint64_t)&v49 + 2)
          {
            uint64_t v37 = (v35 >> 1) + 1;
            int v9 = (__int16 *)(v5 + 2 * (v37 & 0xFFFFFFFFFFFFFFF0));
            unsigned __int16 v38 = (_WORD *)(v5 - 2);
            unint64_t v39 = v37 & 0xFFFFFFFFFFFFFFF0;
            do
            {
              v38 += 16;
              v39 -= 16;
            }
            while (v39);
            unsigned int v8 = (unsigned __int16)*v38;
            LOWORD(v49) = *v38;
            if (v37 == (v37 & 0xFFFFFFFFFFFFFFF0)) {
              goto LABEL_7;
            }
          }
          else
          {
            int v9 = (__int16 *)v5;
          }
        }
        else
        {
          int v9 = (__int16 *)v5;
        }
        do
        {
          unsigned int v40 = (unsigned __int16)*v9++;
          unsigned int v8 = v40;
          LOWORD(v49) = v40;
        }
        while ((unint64_t)v9 < v7);
        goto LABEL_7;
      }
      unsigned int v8 = *(unsigned __int16 *)v5;
LABEL_55:
      int v29 = 0;
      while (1)
      {
        int v30 = v28 - 1;
        if (v28 - 1 < 0) {
          int v30 = v28;
        }
        int v31 = v30 >> 1;
        int v32 = v31 + v29;
        unsigned int v33 = *(unsigned __int16 *)(*(void *)(a1 + 512) + 2 * (v31 + v29));
        if (v33 > v8) {
          goto LABEL_56;
        }
        if (v33 == v8) {
          break;
        }
        int v31 = v28 + ~v31;
        int v29 = v32 + 1;
LABEL_56:
        int v28 = v31;
        if (!v31) {
          goto LABEL_65;
        }
      }
      if (v5 == a2)
      {
        int v9 = (__int16 *)a2;
      }
      else
      {
        if (!v4 || sub_10007C8B0(*(void *)(a1 + 488), &v49) != 0xFFFF)
        {
LABEL_65:
          while (1)
          {
            v5 += 2;
            LOWORD(v49) = v8;
            if (v5 >= v7) {
              break;
            }
            int v28 = *(_DWORD *)(a1 + 504);
            unsigned int v4 = v8;
            unsigned int v8 = *(unsigned __int16 *)v5;
            if (v28) {
              goto LABEL_55;
            }
          }
        }
LABEL_6:
        int v9 = (__int16 *)v5;
      }
LABEL_7:
      if (v9 == (__int16 *)v7)
      {
        if (!v47) {
          return 0;
        }
        sub_1000CED88(v50, v6, ((v7 - (unint64_t)v6) >> 1) + 1);
        if (v50[0] && sub_10007C8B0(*(void *)(a1 + 456), v50) == 0xFFFF)
        {
          if ((int)sub_1000CED6C((unint64_t)v50) > (int)v42) {
            return 0;
          }
        }
        else if (!v46)
        {
          return 1;
        }
        return (int)sub_1000CED6C(a2) > SHIDWORD(v42);
      }
      unint64_t v5 = v7;
      if (v7 <= (unint64_t)v9)
      {
LABEL_9:
        unsigned int v4 = 0;
        unint64_t v10 = v5 - (void)v9;
        if ((__int16 *)v5 != v9) {
          break;
        }
        goto LABEL_33;
      }
LABEL_13:
      int v11 = *(_DWORD *)(a1 + 528);
      if (!v11)
      {
        do
        {
          unsigned int v19 = *(unsigned __int16 *)(v5 - 2);
          v5 -= 2;
          unsigned int v4 = v19;
          LOWORD(v48) = v19;
        }
        while (v5 > (unint64_t)v9);
        goto LABEL_29;
      }
      unint64_t v12 = v5 - 2;
      unsigned int v4 = *(unsigned __int16 *)(v5 - 2);
LABEL_16:
      int v14 = 0;
      while (2)
      {
        int v15 = v11 - 1;
        if (v11 - 1 < 0) {
          int v15 = v11;
        }
        int v16 = v15 >> 1;
        int v17 = v16 + v14;
        unsigned int v18 = *(unsigned __int16 *)(*(void *)(a1 + 536) + 2 * (v16 + v14));
        if (v18 > v4)
        {
LABEL_17:
          int v11 = v16;
          if (!v16) {
            goto LABEL_26;
          }
          continue;
        }
        break;
      }
      if (v18 != v4)
      {
        int v16 = v11 + ~v16;
        int v14 = v17 + 1;
        goto LABEL_17;
      }
      if (v5 == v7)
      {
        unint64_t v5 = v7;
        unint64_t v10 = v7 - (void)v9;
        if ((__int16 *)v7 != v9) {
          break;
        }
        goto LABEL_33;
      }
      if (!(_WORD)v48 || sub_10007C8B0(*(void *)(a1 + 488), &v48) != 0xFFFF)
      {
LABEL_26:
        while (1)
        {
          LOWORD(v48) = v4;
          if (v12 <= (unint64_t)v9) {
            break;
          }
          int v11 = *(_DWORD *)(a1 + 528);
          unint64_t v5 = v12;
          unsigned int v13 = *(unsigned __int16 *)(v12 - 2);
          v12 -= 2;
          unsigned int v4 = v13;
          if (v11) {
            goto LABEL_16;
          }
        }
        unint64_t v5 = v12;
      }
LABEL_29:
      unint64_t v10 = v5 - (void)v9;
      if ((__int16 *)v5 == v9)
      {
LABEL_33:
        unint64_t v5 = (unint64_t)(v9 + 1);
        LOWORD(v49) = v8;
        unsigned int v4 = v8;
        int v48 = 0;
        if ((unint64_t)(v9 + 1) < v7) {
          continue;
        }
LABEL_5:
        unsigned int v8 = 0;
        goto LABEL_6;
      }
      break;
    }
    sub_1000CED88(v50, v9, (v10 >> 1) + 1);
    if (sub_10007C8B0(*(void *)(a1 + 472), v50) == 0xFFFF)
    {
      v5 -= 2;
      LOWORD(v48) = v4;
      if (v5 <= (unint64_t)v9) {
        goto LABEL_9;
      }
      goto LABEL_13;
    }
    sub_1000CED88(v50, v6, ((unint64_t)((char *)v9 - (char *)v6) >> 1) + 1);
    if (v47)
    {
      if (v50[0]) {
        int v20 = v46;
      }
      else {
        int v20 = 1;
      }
      if (!v50[0]) {
        goto LABEL_51;
      }
      if (sub_10007C8B0(*(void *)(a1 + 440), v50) != 0xFFFF) {
        goto LABEL_52;
      }
      int v44 = v20;
      if (sub_10007C8B0(*(void *)(a1 + 424), v50) != 0xFFFF) {
        goto LABEL_52;
      }
      int v21 = sub_1000CED6C((unint64_t)v50);
      if (v21 < 2) {
        goto LABEL_51;
      }
      unint64_t v22 = 0;
      uint64_t v45 = 2 * v21 - 2;
      while (1)
      {
        uint64_t v23 = &v50[v22 / 2 + 1];
        __int16 v24 = *v23;
        *uint64_t v23 = 0;
        int v25 = sub_10007C8B0(*(void *)(a1 + 424), v50);
        *uint64_t v23 = v24;
        if (v25 != 0xFFFF)
        {
          __int16 v26 = v50[v22 / 2];
          v50[v22 / 2] = 0;
          int v27 = sub_10007C8B0(*(void *)(a1 + 440), &v50[v22 / 2 + 1]);
          v50[v22 / 2] = v26;
          if (v27 != 0xFFFF) {
            break;
          }
        }
        v22 += 2;
        int v46 = 1;
        if (v45 == v22) {
          goto LABEL_52;
        }
      }
      int v46 = v44;
LABEL_52:
      ++v47;
      int v48 = 0;
      LOWORD(v49) = v4;
      uint64_t v6 = (__int16 *)v5;
      if (v5 >= v7) {
        goto LABEL_5;
      }
      continue;
    }
    break;
  }
  if (!v50[0] || sub_10007C8B0(*(void *)(a1 + 408), v50) != 0xFFFF) {
    goto LABEL_52;
  }
  if ((int)sub_1000CED6C((unint64_t)v50) <= v43)
  {
LABEL_51:
    int v46 = 1;
    goto LABEL_52;
  }
  return 0;
}

void *sub_10009BBA4(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = *a3;
  int v12 = v11 + 1;
  unsigned int v13 = (void *)sub_1000CD3E8(2 * ((int)v11 + 1), a2, (uint64_t)a3, a4, a5, a6, a7, a8);
  int v14 = 0;
  *(_WORD *)unsigned int v13 = 0;
  int v15 = (_WORD *)a2;
  while (1)
  {
    while (1)
    {
      uint64_t v16 = (unsigned __int16)*v15;
      if (v16 != 0xFFFF) {
        break;
      }
      ++v15;
    }
    if (!*v15) {
      break;
    }
    uint64_t v17 = *(unsigned __int16 *)(*(void *)(a1 + 264) + 2 * v16);
    if (v17 == 0xFFFF)
    {
      ++v15;
    }
    else
    {
      int v18 = 0;
      LODWORD(v19) = 0;
      int v20 = (_WORD *)(*(void *)(a1 + 288) + 2 * v17);
      int v21 = (unsigned __int16)*v20;
      do
      {
        uint64_t v22 = 0;
        uint64_t v23 = v20 + 1;
        while (1)
        {
          int v24 = v21;
          int v20 = v23;
          int v25 = (unsigned __int16)v15[v22];
          if (v21 != v25) {
            break;
          }
          ++v23;
          int v21 = (unsigned __int16)*v20;
          ++v22;
          if (!*v20)
          {
            int v18 = 1;
            break;
          }
        }
        if ((int)v22 <= (int)v19) {
          unsigned int v26 = v19;
        }
        else {
          unsigned int v26 = v22;
        }
        if (v24 == v25) {
          uint64_t v19 = v26;
        }
        else {
          uint64_t v19 = v19;
        }
        if ((int)v22 < (int)v19) {
          break;
        }
        while (*v20++)
          ;
        int v21 = (unsigned __int16)*v20;
      }
      while (*v20);
      if (v18)
      {
        *((_WORD *)v13 + ++v14) = (v15 - a2) >> 1;
        v15 += v19;
      }
      else
      {
        ++v15;
      }
    }
  }
  if (v14 <= 0)
  {
    return sub_1000CD4D0(v13, 2 * v12);
  }
  if (v14 <= *(_DWORD *)(a1 + 304)) {
    unsigned int v28 = v14;
  }
  else {
    unsigned int v28 = 0;
  }
  int v29 = *(_DWORD *)(*(void *)(a1 + 312) + 4 * v28);
  if (v14 > 0xF) {
    goto LABEL_70;
  }
  uint64_t v30 = *(void *)(a1 + 352);
  if (!v30) {
    goto LABEL_70;
  }
  uint64_t v31 = *(void *)(v30 + 8 * v14);
  if (!v31) {
    goto LABEL_70;
  }
  uint64_t v32 = *(unsigned int *)(*(void *)(a1 + 368) + 4 * v14);
  if ((int)v32 < 1) {
    goto LABEL_70;
  }
  uint64_t v33 = 0;
  uint64_t v34 = *(void *)(a1 + 392);
  uint64_t v35 = a2 + 2 * v11;
  uint64_t v36 = v34 + 2;
  while (1)
  {
    uint64_t v38 = *(unsigned __int16 *)(v31 + 4 * v33);
    unint64_t v39 = (_WORD *)(v34 + 2 * v38);
    int v40 = (unsigned __int16)*v39;
    if (*v39)
    {
      uint64_t v41 = 0;
      while (*(unsigned __int16 *)(v36 + 2 * v38 + 2 * v41++))
        ;
      if ((int)v41 > (int)v11) {
        goto LABEL_36;
      }
    }
    else
    {
      LODWORD(v41) = 0;
      if ((int)v11 < 0) {
        goto LABEL_36;
      }
    }
    int v43 = *(unsigned __int8 *)(v31 + 4 * v33 + 2);
    if (v43 != 1) {
      break;
    }
    if (*(unsigned __int16 *)(v35 - 2 * v41) == v40)
    {
      uint64_t v45 = v41;
      int v46 = (unsigned __int16 *)(v36 + 2 * v38);
      int v47 = (unsigned __int16 *)(v35 + 2 - 2 * v45);
      while (v40)
      {
        int v48 = *v47++;
        int v40 = v48;
        int v49 = *v46++;
        if (v40 != v49) {
          goto LABEL_36;
        }
      }
LABEL_68:
      int v29 = *(char *)(v31 + 4 * v33 + 3);
      goto LABEL_70;
    }
LABEL_36:
    if (++v33 == v32) {
      goto LABEL_70;
    }
  }
  if (v43 == 255)
  {
    int v44 = (unsigned __int16 *)a2;
    if (!v41) {
      goto LABEL_68;
    }
    while (*v44 == (unsigned __int16)*v39)
    {
      ++v39;
      ++v44;
      LODWORD(v41) = v41 - 1;
      if (!v41) {
        goto LABEL_68;
      }
    }
    goto LABEL_36;
  }
  if (v41)
  {
    uint64_t v50 = 0;
    do
    {
      uint64_t v51 = (unsigned __int16 *)(a2 + 2 * v50);
      int v52 = v41;
      uint64_t v53 = (unsigned __int16 *)(v34 + 2 * v38);
      while (*v51 == *v53)
      {
        ++v53;
        ++v51;
        if (!--v52) {
          goto LABEL_63;
        }
      }
      ++v50;
    }
    while (v50 != v12 - v41);
    goto LABEL_36;
  }
  LODWORD(v50) = 0;
LABEL_63:
  if (*(unsigned char *)(v31 + 4 * v33 + 3))
  {
    int v29 = *(char *)(v31 + 4 * v33 + 3);
  }
  else
  {
    uint64_t v54 = 1;
    while (v50 != *((__int16 *)v13 + v54))
    {
      if (v14 + 1 == ++v54) {
        goto LABEL_36;
      }
    }
    int v29 = v54;
  }
LABEL_70:
  if (v29 >= v14) {
    unsigned int v55 = v14;
  }
  else {
    unsigned int v55 = v29;
  }
  if (v29 < -v14) {
    uint64_t v56 = 1;
  }
  else {
    uint64_t v56 = v55;
  }
  uint64_t v57 = v14 + (int)v56 + 1;
  if ((int)v56 >= 0) {
    uint64_t v57 = v56;
  }
  uint64_t v58 = *((__int16 *)v13 + v57);
  uint64_t v59 = (_WORD *)(a2 + 2 * v58);
  if (v11 > v58)
  {
    uint64_t v60 = (_WORD *)(a2 + 2 * v11);
    uint64_t v61 = v60;
    do
    {
      __int16 v62 = *--v61;
      *uint64_t v60 = v62;
      uint64_t v60 = v61;
    }
    while (v61 > v59);
  }
  *uint64_t v59 = *(_WORD *)(a1 + 184);
  uint64_t result = sub_1000CD4D0(v13, 2 * v12);
  ++*a3;
  return result;
}

unint64_t sub_10009BF2C(unint64_t result)
{
  uint64_t v1 = (__int16 *)result;
  LODWORD(result) = -1;
  do
  {
    int v2 = *v1++;
    uint64_t result = (result + 1);
  }
  while (v2 != -1);
  return result;
}

unint64_t sub_10009BF48(unint64_t result)
{
  uint64_t v1 = (unsigned __int16 *)result;
  LODWORD(result) = -1;
  do
  {
    int v2 = *v1++;
    uint64_t result = (result + 1);
  }
  while (v2 != 0x7FFF);
  return result;
}

uint64_t sub_10009BF68(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = (uint64_t *)result;
    sub_1000C321C(*(void *)(result + 192));
    sub_1000C321C(v1[21]);
    sub_1000C321C(v1[19]);
    sub_1000C321C(v1[17]);
    sub_1000C321C(v1[14]);
    sub_1000C321C(v1[11]);
    sub_1000C321C(v1[9]);
    sub_1000C321C(v1[6]);
    sub_10007BDDC(v1[3]);
    return sub_1000C321C((uint64_t)v1);
  }
  return result;
}

uint64_t sub_10009BFEC(uint64_t a1)
{
  unsigned int v2 = -1;
  unsigned int v3 = sub_1000C085C(*(_DWORD *)a1, 4, 0xFFFFFFFF);
  unsigned int v4 = sub_1000C085C(*(_DWORD *)(a1 + 4), 4, v3);
  unsigned int v5 = sub_1000C085C(*(_DWORD *)(a1 + 8), 4, v4);
  unsigned int v6 = sub_1000C085C(*(_DWORD *)(a1 + 32), 4, v5);
  unsigned int v7 = sub_1000C085C(*(_DWORD *)(a1 + 56), 4, v6);
  unsigned int v8 = sub_1000C085C(*(_DWORD *)(a1 + 96), 4, v7);
  unsigned int v9 = sub_1000C085C(*(_DWORD *)(a1 + 120), 4, v8);
  unsigned int v10 = sub_1000C085C(*(_DWORD *)(a1 + 176), 4, v9);
  unsigned int v11 = sub_10007BE2C(*(void *)(a1 + 16));
  unsigned int v12 = sub_1000C085C(v11, 4, v10);
  unsigned int v13 = sub_1000C09B0(*(unint64_t **)(a1 + 40), 2, *(_DWORD *)(a1 + 32), 0xFFFFFFFFLL);
  unsigned int v14 = sub_1000C085C(v13, 4, v12);
  unsigned int v15 = sub_1000C09B0(*(unint64_t **)(a1 + 64), 2, *(_DWORD *)(a1 + 56), 0xFFFFFFFFLL);
  unsigned int v16 = sub_1000C085C(v15, 4, v14);
  unsigned int v17 = sub_1000C09B0(*(unint64_t **)(a1 + 80), 4, *(_DWORD *)(a1 + 56) + 1, 0xFFFFFFFFLL);
  unsigned int v18 = sub_1000C085C(v17, 4, v16);
  unsigned int v19 = sub_1000C09B0(*(unint64_t **)(a1 + 104), 2, *(_DWORD *)(a1 + 96) + 1, 0xFFFFFFFFLL);
  unsigned int v20 = sub_1000C085C(v19, 4, v18);
  if (*(int *)(a1 + 120) >= 1)
  {
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    do
    {
      unsigned int v23 = sub_1000C085C(*(unsigned __int16 *)(*(void *)(a1 + 128) + v21), 2, 0xFFFFFFFF);
      unsigned int v24 = sub_1000C085C(*(__int16 *)(*(void *)(a1 + 128) + v21 + 2), 2, v23);
      unsigned int v25 = sub_1000C085C(*(unsigned __int16 *)(*(void *)(a1 + 128) + v21 + 4), 2, v24);
      unsigned int v2 = sub_1000C085C(v25, 4, v2);
      ++v22;
      v21 += 6;
    }
    while (v22 < *(int *)(a1 + 120));
  }
  unsigned int v26 = sub_1000C085C(v2, 4, v20);
  uint64_t v27 = **(void **)(a1 + 144);
  if (v27) {
    unsigned int v28 = -1431655765 * ((unint64_t)(v27 - *(void *)(a1 + 128)) >> 1);
  }
  else {
    unsigned int v28 = -1;
  }
  unsigned int v29 = -1;
  unsigned int v30 = sub_1000C085C(v28, 4, 0xFFFFFFFF);
  uint64_t v31 = *(void *)(*(void *)(a1 + 144) + 8);
  if (v31) {
    unsigned int v29 = -1431655765 * ((unint64_t)(v31 - *(void *)(a1 + 128)) >> 1);
  }
  unsigned int v32 = sub_1000C085C(v29, 4, v30);
  uint64_t v33 = *(void *)(*(void *)(a1 + 144) + 16);
  if (v33)
  {
    unsigned int v34 = sub_1000C085C(-1431655765 * ((unint64_t)(v33 - *(void *)(a1 + 128)) >> 1), 4, v32);
    uint64_t v35 = *(void *)(*(void *)(a1 + 144) + 24);
    if (v35) {
      goto LABEL_11;
    }
  }
  else
  {
    unsigned int v34 = sub_1000C085C(0xFFFFFFFF, 4, v32);
    uint64_t v35 = *(void *)(*(void *)(a1 + 144) + 24);
    if (v35)
    {
LABEL_11:
      unsigned int v36 = sub_1000C085C(-1431655765 * ((unint64_t)(v35 - *(void *)(a1 + 128)) >> 1), 4, v34);
      uint64_t v37 = *(void *)(*(void *)(a1 + 144) + 32);
      if (v37) {
        goto LABEL_12;
      }
      goto LABEL_27;
    }
  }
  unsigned int v36 = sub_1000C085C(0xFFFFFFFF, 4, v34);
  uint64_t v37 = *(void *)(*(void *)(a1 + 144) + 32);
  if (v37)
  {
LABEL_12:
    unsigned int v38 = sub_1000C085C(-1431655765 * ((unint64_t)(v37 - *(void *)(a1 + 128)) >> 1), 4, v36);
    uint64_t v39 = *(void *)(*(void *)(a1 + 144) + 40);
    if (v39) {
      goto LABEL_13;
    }
    goto LABEL_28;
  }
LABEL_27:
  unsigned int v38 = sub_1000C085C(0xFFFFFFFF, 4, v36);
  uint64_t v39 = *(void *)(*(void *)(a1 + 144) + 40);
  if (v39)
  {
LABEL_13:
    unsigned int v40 = sub_1000C085C(-1431655765 * ((unint64_t)(v39 - *(void *)(a1 + 128)) >> 1), 4, v38);
    uint64_t v41 = *(void *)(*(void *)(a1 + 144) + 48);
    if (v41) {
      goto LABEL_14;
    }
    goto LABEL_29;
  }
LABEL_28:
  unsigned int v40 = sub_1000C085C(0xFFFFFFFF, 4, v38);
  uint64_t v41 = *(void *)(*(void *)(a1 + 144) + 48);
  if (v41)
  {
LABEL_14:
    unsigned int v42 = sub_1000C085C(-1431655765 * ((unint64_t)(v41 - *(void *)(a1 + 128)) >> 1), 4, v40);
    uint64_t v43 = *(void *)(*(void *)(a1 + 144) + 56);
    if (v43) {
      goto LABEL_15;
    }
    goto LABEL_30;
  }
LABEL_29:
  unsigned int v42 = sub_1000C085C(0xFFFFFFFF, 4, v40);
  uint64_t v43 = *(void *)(*(void *)(a1 + 144) + 56);
  if (v43)
  {
LABEL_15:
    unsigned int v44 = sub_1000C085C(-1431655765 * ((unint64_t)(v43 - *(void *)(a1 + 128)) >> 1), 4, v42);
    uint64_t v45 = *(void *)(*(void *)(a1 + 144) + 64);
    if (v45) {
      goto LABEL_16;
    }
    goto LABEL_31;
  }
LABEL_30:
  unsigned int v44 = sub_1000C085C(0xFFFFFFFF, 4, v42);
  uint64_t v45 = *(void *)(*(void *)(a1 + 144) + 64);
  if (v45)
  {
LABEL_16:
    unsigned int v46 = sub_1000C085C(-1431655765 * ((unint64_t)(v45 - *(void *)(a1 + 128)) >> 1), 4, v44);
    uint64_t v47 = *(void *)(*(void *)(a1 + 144) + 72);
    if (v47) {
      goto LABEL_17;
    }
    goto LABEL_32;
  }
LABEL_31:
  unsigned int v46 = sub_1000C085C(0xFFFFFFFF, 4, v44);
  uint64_t v47 = *(void *)(*(void *)(a1 + 144) + 72);
  if (v47)
  {
LABEL_17:
    unsigned int v48 = sub_1000C085C(-1431655765 * ((unint64_t)(v47 - *(void *)(a1 + 128)) >> 1), 4, v46);
    uint64_t v49 = *(void *)(*(void *)(a1 + 144) + 80);
    if (v49) {
      goto LABEL_18;
    }
    goto LABEL_33;
  }
LABEL_32:
  unsigned int v48 = sub_1000C085C(0xFFFFFFFF, 4, v46);
  uint64_t v49 = *(void *)(*(void *)(a1 + 144) + 80);
  if (v49)
  {
LABEL_18:
    unsigned int v50 = sub_1000C085C(-1431655765 * ((unint64_t)(v49 - *(void *)(a1 + 128)) >> 1), 4, v48);
    uint64_t v51 = *(void *)(*(void *)(a1 + 144) + 88);
    if (v51) {
      goto LABEL_19;
    }
    goto LABEL_34;
  }
LABEL_33:
  unsigned int v50 = sub_1000C085C(0xFFFFFFFF, 4, v48);
  uint64_t v51 = *(void *)(*(void *)(a1 + 144) + 88);
  if (v51)
  {
LABEL_19:
    unsigned int v52 = sub_1000C085C(-1431655765 * ((unint64_t)(v51 - *(void *)(a1 + 128)) >> 1), 4, v50);
    uint64_t v53 = *(void *)(*(void *)(a1 + 144) + 96);
    if (v53) {
      goto LABEL_20;
    }
    goto LABEL_35;
  }
LABEL_34:
  unsigned int v52 = sub_1000C085C(0xFFFFFFFF, 4, v50);
  uint64_t v53 = *(void *)(*(void *)(a1 + 144) + 96);
  if (v53)
  {
LABEL_20:
    unsigned int v54 = sub_1000C085C(-1431655765 * ((unint64_t)(v53 - *(void *)(a1 + 128)) >> 1), 4, v52);
    uint64_t v55 = *(void *)(*(void *)(a1 + 144) + 104);
    if (v55) {
      goto LABEL_21;
    }
    goto LABEL_36;
  }
LABEL_35:
  unsigned int v54 = sub_1000C085C(0xFFFFFFFF, 4, v52);
  uint64_t v55 = *(void *)(*(void *)(a1 + 144) + 104);
  if (v55)
  {
LABEL_21:
    unsigned int v56 = sub_1000C085C(-1431655765 * ((unint64_t)(v55 - *(void *)(a1 + 128)) >> 1), 4, v54);
    uint64_t v57 = *(void *)(*(void *)(a1 + 144) + 112);
    if (v57) {
      goto LABEL_22;
    }
    goto LABEL_37;
  }
LABEL_36:
  unsigned int v56 = sub_1000C085C(0xFFFFFFFF, 4, v54);
  uint64_t v57 = *(void *)(*(void *)(a1 + 144) + 112);
  if (v57)
  {
LABEL_22:
    unsigned int v58 = sub_1000C085C(-1431655765 * ((unint64_t)(v57 - *(void *)(a1 + 128)) >> 1), 4, v56);
    uint64_t v59 = *(void *)(*(void *)(a1 + 144) + 120);
    if (v59) {
      goto LABEL_23;
    }
LABEL_38:
    unsigned int v60 = sub_1000C085C(0xFFFFFFFF, 4, v58);
    uint64_t v61 = *(void *)(*(void *)(a1 + 144) + 128);
    if (v61) {
      goto LABEL_24;
    }
    goto LABEL_39;
  }
LABEL_37:
  unsigned int v58 = sub_1000C085C(0xFFFFFFFF, 4, v56);
  uint64_t v59 = *(void *)(*(void *)(a1 + 144) + 120);
  if (!v59) {
    goto LABEL_38;
  }
LABEL_23:
  unsigned int v60 = sub_1000C085C(-1431655765 * ((unint64_t)(v59 - *(void *)(a1 + 128)) >> 1), 4, v58);
  uint64_t v61 = *(void *)(*(void *)(a1 + 144) + 128);
  if (v61)
  {
LABEL_24:
    unsigned int v62 = -1431655765 * ((unint64_t)(v61 - *(void *)(a1 + 128)) >> 1);
    goto LABEL_40;
  }
LABEL_39:
  unsigned int v62 = -1;
LABEL_40:
  unsigned int v63 = sub_1000C085C(v62, 4, v60);
  unsigned int v64 = sub_1000C085C(v63, 4, v26);
  unsigned int v65 = sub_1000C09B0(*(unint64_t **)(a1 + 160), 4, 17, 0xFFFFFFFFLL);
  uint64_t v66 = sub_1000C085C(v65, 4, v64);
  unsigned int v67 = *(unint64_t **)(a1 + 184);
  if (!v67) {
    return v66;
  }
  unsigned int v68 = sub_1000C09B0(v67, 2, *(_DWORD *)(a1 + 176), 0xFFFFFFFFLL);
  return sub_1000C085C(v68, 4, v66);
}

_DWORD *sub_10009C730(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8 = sub_1000BEC58(a1, "pm0", a2, a4, a5, a6, a7, a8);
  if (!v8) {
    return 0;
  }
  uint64_t v9 = (uint64_t)v8;
  unsigned int v10 = (_DWORD *)sub_1000C33A0(200);
  if (v10)
  {
    int v30 = 0;
    if (!sub_1000BEECC(v9, &v30)) {
      goto LABEL_57;
    }
    *unsigned int v10 = v30;
    if (!sub_1000BEECC(v9, v10 + 1)) {
      goto LABEL_57;
    }
    if (!sub_1000BEECC(v9, v10 + 2)) {
      goto LABEL_57;
    }
    if (!sub_1000BEECC(v9, v10 + 8)) {
      goto LABEL_57;
    }
    unsigned int v11 = v10 + 14;
    if (!sub_1000BEECC(v9, v10 + 14)) {
      goto LABEL_57;
    }
    if (!sub_1000BEECC(v9, v10 + 24)) {
      goto LABEL_57;
    }
    unsigned int v12 = v10 + 30;
    if (!sub_1000BEECC(v9, v10 + 30)) {
      goto LABEL_57;
    }
    if (!sub_1000BEECC(v9, v10 + 44)) {
      goto LABEL_57;
    }
    uint64_t v13 = sub_10007BE80(v9);
    *((void *)v10 + 3) = v13;
    if (!v13) {
      goto LABEL_57;
    }
    *((void *)v10 + 2) = v13;
    int v30 = 0;
    unsigned int v14 = v10 + 12;
    if (!sub_1000BF078(v9, 2, (uint64_t *)v10 + 6, &v30)) {
      goto LABEL_57;
    }
    if (*v14)
    {
      if (v30 != v10[8]) {
        goto LABEL_57;
      }
      *((void *)v10 + 5) = *v14;
    }
    int v30 = 0;
    unsigned int v15 = v10 + 18;
    if (sub_1000BF078(v9, 2, (uint64_t *)v10 + 9, &v30))
    {
      if (*v15)
      {
        if (v30 != *v11) {
          goto LABEL_57;
        }
        *((void *)v10 + 8) = *v15;
      }
      int v30 = 0;
      unsigned int v16 = v10 + 22;
      if (sub_1000BF078(v9, 4, (uint64_t *)v10 + 11, &v30))
      {
        if (*v16)
        {
          if (v30 != *v11 + 1) {
            goto LABEL_57;
          }
          *((void *)v10 + 10) = *v16;
        }
        int v30 = 0;
        unsigned int v17 = v10 + 28;
        if (sub_1000BF078(v9, 2, (uint64_t *)v10 + 14, &v30))
        {
          if (!*v17)
          {
LABEL_28:
            uint64_t v18 = sub_1000C33A0(6 * *v12);
            if (v18)
            {
              uint64_t v19 = v18;
              int v20 = *v12;
              if (*v12 < 1)
              {
                LODWORD(v21) = 0;
              }
              else
              {
                uint64_t v21 = 0;
                uint64_t v22 = (_WORD *)v18;
                do
                {
                  if (!sub_1000BEF74(v9, v22)) {
                    break;
                  }
                  if (!sub_1000BEF74(v9, v22 + 1)) {
                    break;
                  }
                  if (!sub_1000BEF74(v9, v22 + 2)) {
                    break;
                  }
                  ++v21;
                  v22 += 3;
                }
                while (v21 < *v12);
                int v20 = *v12;
              }
              if ((int)v21 >= v20)
              {
                uint64_t v23 = sub_1000C33A0(136);
                if (v23)
                {
                  uint64_t v24 = v23;
                  uint64_t v25 = 0;
                  while (1)
                  {
                    int v30 = 0;
                    if (!sub_1000BEECC(v9, &v30) || v30 < -1 || v30 >= *v12) {
                      break;
                    }
                    if (v30 != -1) {
                      *(void *)(v24 + v25) = v19 + 6 * v30;
                    }
                    v25 += 8;
                    if (v25 == 136)
                    {
                      int v30 = 0;
                      unsigned int v26 = (uint64_t *)(v10 + 42);
                      if (!sub_1000BF078(v9, 4, (uint64_t *)v10 + 21, &v30)) {
                        goto LABEL_57;
                      }
                      uint64_t v27 = *v26;
                      if (*v26)
                      {
                        if (v30 != 17) {
                          goto LABEL_57;
                        }
                      }
                      if (v27) {
                        *((void *)v10 + 20) = v27;
                      }
                      int v30 = 0;
                      unsigned int v28 = v10 + 48;
                      if (!sub_1000BF078(v9, 2, (uint64_t *)v10 + 24, &v30)) {
                        goto LABEL_57;
                      }
                      if (*v28)
                      {
                        if (v30 != v10[44]) {
                          goto LABEL_57;
                        }
                        *((void *)v10 + 23) = *v28;
                      }
                      *((void *)v10 + 16) = v19;
                      *((void *)v10 + 17) = v19;
                      *((void *)v10 + 18) = v24;
                      *((void *)v10 + 19) = v24;
                      goto LABEL_56;
                    }
                  }
                }
              }
            }
            goto LABEL_57;
          }
          if (v30 == v10[24] + 1)
          {
            *((void *)v10 + 13) = *v17;
            goto LABEL_28;
          }
        }
      }
    }
LABEL_57:
    sub_1000BED3C(v9);
    sub_10009BF68((uint64_t)v10);
    return 0;
  }
LABEL_56:
  sub_1000BED3C(v9);
  return v10;
}

uint64_t sub_10009CAD0()
{
  return 1017;
}

uint64_t sub_10009CAD8()
{
  return 8;
}

const char *sub_10009CAE0()
{
  return "Elvis v9.1.1017.8 (depot #125144), Arm, AppleOSX, gcc, Optimized Embedded Build";
}

uint64_t sub_10009CAEC()
{
  return 9;
}

uint64_t sub_10009CAF4(int a1, int a2, int a3, int a4, int a5, uint64_t *a6, uint64_t a7)
{
  uint64_t v14 = sub_1000C33A0(176);
  uint64_t v15 = v14;
  if (v14)
  {
    *(void *)uint64_t v14 = a6;
    *(void *)(v14 + 8) = a7;
    *(_DWORD *)(v14 + 104) = a1;
    *(_DWORD *)(v14 + 108) = a2;
    *(_DWORD *)(v14 + 112) = a3;
    *(_DWORD *)(v14 + 116) = a4;
    *(_DWORD *)(v14 + 120) = a5;
    if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 4320))
    {
      int v16 = sub_1000B51F0((uint64_t)a6);
      uint64_t v17 = (v16 + 2);
      uint64_t v18 = sub_1000C33A0(2 * (int)v17);
      if (v18)
      {
        uint64_t v19 = (_DWORD *)v18;
        *(_DWORD *)(v15 + 136) = v16 + 1;
        *(void *)(v15 + 128) = v18;
        *(_DWORD *)(v15 + 16) = 1;
        if (v16 >= -1)
        {
          unsigned __int16 v20 = 0;
          do
          {
            if (sub_1000BB100(a6, v20, v19) == -1) {
              *(_WORD *)uint64_t v19 = -1;
            }
            ++v20;
            uint64_t v19 = (_DWORD *)((char *)v19 + 2);
            --v17;
          }
          while (v17);
        }
      }
      else
      {
        sub_1000C321C(v15);
        return 0;
      }
    }
    else
    {
      *(_DWORD *)(v14 + 16) = 0;
      *(void *)(v14 + 24) = 0;
      *(_DWORD *)(v14 + 32) = 0;
      *(_DWORD *)(v14 + 80) = 0;
      *(_DWORD *)(v14 + 124) = -1;
      sub_10009CC28(v14);
    }
  }
  return v15;
}

uint64_t sub_10009CC28(uint64_t result)
{
  if (result && *(_DWORD *)(result + 124) && !*(_DWORD *)(result + 16))
  {
    *(_DWORD *)(result + 124) = 0;
    *(_DWORD *)(result + 80) = 0;
    if (*(void *)(result + 144) && *(int *)(result + 164) >= 1)
    {
      uint64_t v1 = 0;
      do
      {
        for (uint64_t i = 0; i != 512; i += 2)
          *(_WORD *)(*(void *)(*(void *)(result + 144) + 8 * v1) + i) = -1;
        ++v1;
      }
      while (v1 < *(int *)(result + 164));
    }
    if (*(void *)(result + 152) && *(int *)(result + 164) >= 1)
    {
      uint64_t v3 = 0;
      do
      {
        for (uint64_t j = 0; j != 1024; j += 4)
          *(_DWORD *)(*(void *)(*(void *)(result + 152) + 8 * v3) + j) = -1;
        ++v3;
      }
      while (v3 < *(int *)(result + 164));
    }
    if (*(_DWORD *)(result + 108) && *(int *)(result + 100) >= 1)
    {
      uint64_t v5 = 0;
      do
      {
        for (uint64_t k = 0; k != 1024; k += 4)
          *(_WORD *)(*(void *)(*(void *)(result + 88) + 8 * v5) + k) = -1;
        ++v5;
      }
      while (v5 < *(int *)(result + 100));
    }
  }
  return result;
}

uint64_t sub_10009CD24(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if (*(_DWORD *)(result + 16))
    {
      unsigned int v2 = (uint64_t *)(result + 128);
    }
    else
    {
      sub_10009CD8C(result);
      sub_1000C321C(*(void *)(v1 + 24));
      unsigned int v2 = (uint64_t *)(v1 + 40);
    }
    sub_1000C321C(*v2);
    return sub_1000C321C(v1);
  }
  return result;
}

uint64_t sub_10009CD8C(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if (!*(_DWORD *)(result + 16))
    {
      sub_1000C3F24(*(void *)(result + 48), *(unsigned int *)(result + 60), *(_DWORD *)(result + 56));
      *(void *)(v1 + 48) = 0;
      *(void *)(v1 + 56) = 0;
      sub_1000C3F24(*(void *)(v1 + 64), *(unsigned int *)(v1 + 76), *(_DWORD *)(v1 + 72));
      *(void *)(v1 + 64) = 0;
      *(void *)(v1 + 72) = 0;
      uint64_t v2 = *(void *)(v1 + 144);
      if (v2)
      {
        sub_1000C3F24(v2, *(unsigned int *)(v1 + 164), *(_DWORD *)(v1 + 160));
        *(void *)(v1 + 144) = 0;
        *(void *)(v1 + 160) = 0;
      }
      uint64_t v3 = *(void *)(v1 + 152);
      if (v3)
      {
        sub_1000C3F24(v3, *(unsigned int *)(v1 + 164), *(_DWORD *)(v1 + 160));
        *(void *)(v1 + 152) = 0;
        *(_DWORD *)(v1 + 164) = 0;
      }
      uint64_t result = sub_1000C3F24(*(void *)(v1 + 88), *(unsigned int *)(v1 + 100), *(_DWORD *)(v1 + 96));
      *(_DWORD *)(v1 + 80) = 0;
      *(_DWORD *)(v1 + 124) = 0;
      *(void *)(v1 + 88) = 0;
      *(void *)(v1 + 96) = 0;
    }
  }
  return result;
}

uint64_t sub_10009CE2C(uint64_t a1)
{
  if (!a1) {
    return 1;
  }
  int v2 = sub_1000B51F8(*(uint64_t **)a1);
  if (*(_DWORD *)(a1 + 32) <= v2 && !*(_DWORD *)(a1 + 16))
  {
    int v3 = 3 * v2;
    uint64_t v4 = 2 * (3 * v2 + 1);
    uint64_t result = sub_1000C33A0(v4);
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
    if (*(_DWORD *)(a1 + 120))
    {
      uint64_t result = sub_1000C33A0(v4);
      if (!result) {
        return result;
      }
      uint64_t v7 = result;
      sub_1000C321C(*(void *)(a1 + 40));
      *(void *)(a1 + 40) = v7;
    }
    sub_1000C321C(*(void *)(a1 + 24));
    *(void *)(a1 + 24) = v6;
    *(_DWORD *)(a1 + 32) = v3;
  }
  return 1;
}

uint64_t sub_10009CED4(uint64_t a1, int a2, int a3)
{
  if (*(_DWORD *)(a1 + 16)) {
    return 1;
  }
  int v4 = a3;
  if (*(_DWORD *)(a1 + 112))
  {
    int v6 = sub_1000B51F0(*(void *)a1);
    if (!*(_DWORD *)(a1 + 112)) {
      goto LABEL_29;
    }
    int v7 = v6 + 1;
    int v8 = *(_DWORD *)(a1 + 60);
    if (v8 <= *(_DWORD *)(a1 + 76)) {
      int v8 = *(_DWORD *)(a1 + 76);
    }
    if (v8 << 8 < 0x10000)
    {
      uint64_t v15 = *(int *)(a1 + 164);
      *(_DWORD *)(a1 + 168) = 0;
      uint64_t result = sub_1000C3A90((const void **)(a1 + 144), (int *)(a1 + 160), (signed int *)(a1 + 164), 8, 2, v7);
      if ((int)v15 < *(_DWORD *)(a1 + 164))
      {
        do
        {
          for (uint64_t i = 0; i != 512; i += 2)
            *(_WORD *)(*(void *)(*(void *)(a1 + 144) + 8 * v15) + i) = -1;
          ++v15;
        }
        while (v15 < *(int *)(a1 + 164));
      }
    }
    else
    {
      uint64_t v9 = *(void *)(a1 + 152);
      *(_DWORD *)(a1 + 168) = 1;
      sub_1000C3F24(v9, *(unsigned int *)(a1 + 164), *(_DWORD *)(a1 + 160));
      *(void *)(a1 + 152) = 0;
      *(_DWORD *)(a1 + 164) = 0;
      uint64_t result = sub_1000C3A90((const void **)(a1 + 152), (int *)(a1 + 160), (signed int *)(a1 + 164), 8, 4, v7);
      if (*(int *)(a1 + 164) >= 1)
      {
        uint64_t v10 = 0;
        do
        {
          for (uint64_t j = 0; j != 1024; j += 4)
            *(_DWORD *)(*(void *)(*(void *)(a1 + 152) + 8 * v10) + j) = -1;
          ++v10;
        }
        while (v10 < *(int *)(a1 + 164));
      }
    }
  }
  else
  {
    if (a3 >= 0xFFFF) {
      int v4 = 0xFFFF;
    }
    else {
      int v4 = a3;
    }
    unsigned int v12 = (int *)(a1 + 100);
    uint64_t v13 = *(int *)(a1 + 100);
    uint64_t result = sub_1000C3A90((const void **)(a1 + 88), (int *)(a1 + 96), (signed int *)(a1 + 100), 8, 4, a2);
    if (*(_DWORD *)(a1 + 108) && (int)v13 < *v12)
    {
      do
      {
        for (uint64_t k = 0; k != 1024; k += 4)
          *(_WORD *)(*(void *)(*(void *)(a1 + 88) + 8 * v13) + k) = -1;
        ++v13;
      }
      while (v13 < *v12);
    }
  }
  if (!result) {
    return result;
  }
LABEL_29:
  unsigned int v17 = (v4 + 255) >> 8;
  int v18 = *(_DWORD *)(a1 + 116);
  if (v18 && !*(void *)(a1 + 48)) {
    *(_DWORD *)(a1 + 56) = v17;
  }
  if (*(_DWORD *)(a1 + 120) && !*(void *)(a1 + 64)) {
    *(_DWORD *)(a1 + 72) = v17;
  }
  if (v4 < 0x10000) {
    goto LABEL_47;
  }
  uint64_t v19 = *(void *)(a1 + 144);
  if (!v19) {
    goto LABEL_47;
  }
  uint64_t result = sub_1000C33A0(8 * *(int *)(a1 + 160));
  if (!result) {
    return result;
  }
  uint64_t v20 = result;
  if (*(int *)(a1 + 164) < 1)
  {
LABEL_46:
    *(void *)(a1 + 152) = v20;
    sub_1000C321C(v19);
    *(void *)(a1 + 144) = 0;
    int v18 = *(_DWORD *)(a1 + 116);
LABEL_47:
    if (!v18
      || (uint64_t result = sub_1000C3A90((const void **)(a1 + 48), (int *)(a1 + 56), (signed int *)(a1 + 60), 8, 2, v4),
          result))
    {
      if (!*(_DWORD *)(a1 + 120)
        || (uint64_t result = sub_1000C3A90((const void **)(a1 + 64), (int *)(a1 + 72), (signed int *)(a1 + 76), 8, 2, v4),
            result))
      {
        return sub_10009CE2C(a1);
      }
    }
    return result;
  }
  uint64_t v21 = 0;
  uint64_t v22 = 1;
  while (1)
  {
    uint64_t v23 = sub_1000C33A0(1024);
    *(void *)(v20 + 8 * v21) = v23;
    if (!v23) {
      break;
    }
    for (uint64_t m = 0; m != 256; ++m)
    {
      int v25 = *(unsigned __int16 *)(*(void *)(v19 + 8 * v21) + 2 * m);
      if (v25 == 0xFFFF) {
        int v25 = -1;
      }
      *(_DWORD *)(*(void *)(v20 + 8 * v21) + 4 * m) = v25;
    }
    sub_1000C321C(*(void *)(v19 + 8 * v21++));
    ++v22;
    if (v21 >= *(int *)(a1 + 164)) {
      goto LABEL_46;
    }
  }
  if (v21)
  {
    do
      sub_1000C321C(*(void *)(v20 + 8 * (v22-- - 2)));
    while (v22 > 1);
  }
  sub_1000C321C(v20);
  return 0;
}

uint64_t sub_10009D254(uint64_t result, uint64_t a2, void *a3, unsigned __int16 **a4, int *a5)
{
  uint64_t v9 = result;
  unsigned int v33 = 0;
  if (*(_DWORD *)(result + 16))
  {
    *a3 = *(void *)(result + 128) + 2 * a2;
    int v10 = 1;
    if (a4)
    {
      unsigned int v11 = 0;
LABEL_40:
      *a4 = v11;
      goto LABEL_41;
    }
    goto LABEL_41;
  }
  uint64_t v12 = *(void *)(result + 144);
  if (v12)
  {
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    int v10 = 0;
    unsigned int v33 = *(unsigned __int16 *)(*(void *)(v12 + 8 * (a2 >> 8)) + 2 * a2);
    if (v33 != 0xFFFF) {
      goto LABEL_36;
    }
  }
  else
  {
    uint64_t v15 = *(void *)(result + 152);
    if (!v15)
    {
      if (*(_DWORD *)(result + 108))
      {
        int v16 = *(_DWORD *)(result + 100) << 8;
        int v17 = __ROR4__(dword_1000F60E0[a2 >> 8], 31);
        uint64_t v14 = (dword_1000F60E0[a2] ^ v17) & (v16 - 1);
        uint64_t v18 = *(void *)(result + 88);
        uint64_t v19 = *(void *)(v18 + 8 * (v14 >> 8));
        uint64_t v20 = (LOBYTE(dword_1000F60E0[a2]) ^ v17);
        int v21 = *(unsigned __int16 *)(v19 + 4 * v20);
        if (v21 != a2)
        {
          int v27 = 0;
          uint64_t v13 = v14;
          while ((_WORD)v21 != 0xFFFF)
          {
            uint64_t v13 = (v13 + 1);
            if (v13 == v16)
            {
              uint64_t v13 = 0;
              if (v27) {
                goto LABEL_30;
              }
              int v27 = 1;
            }
            uint64_t v19 = *(void *)(v18 + 8 * (v13 >> 8));
            uint64_t v20 = v13;
            int v21 = *(unsigned __int16 *)(v19 + 4 * v20);
            if (v21 == a2) {
              goto LABEL_12;
            }
          }
          goto LABEL_30;
        }
LABEL_12:
        int v10 = 0;
        uint64_t v22 = v19 + 4 * v20;
      }
      else
      {
        int v23 = *(_DWORD *)(result + 124);
        uint64_t v13 = 0;
        int v24 = v23 - 1;
        if (v23 >= 1)
        {
          do
          {
            unsigned int v25 = (v13 + v24) >> 1;
            if (*(unsigned __int16 *)(*(void *)(*(void *)(result + 88) + 8 * ((v13 + v24) >> 9))
                                     + 4 * v25) < a2)
            {
              uint64_t v13 = v25 + 1;
            }
            else
            {
              int v24 = v25 - 1;
              uint64_t v13 = v13;
            }
          }
          while ((int)v13 <= v24);
        }
        if ((int)v13 >= v23
          || (uint64_t v26 = *(void *)(*(void *)(result + 88) + 8 * (v13 >> 8)),
              *(unsigned __int16 *)(v26 + 4 * v13) != a2))
        {
          uint64_t v14 = 0;
          goto LABEL_30;
        }
        int v10 = 0;
        uint64_t v22 = v26 + 4 * v13;
      }
      unsigned int v33 = *(unsigned __int16 *)(v22 + 2);
      goto LABEL_36;
    }
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    int v10 = 0;
    unsigned int v33 = *(_DWORD *)(*(void *)(v15 + 8 * (a2 >> 8)) + 4 * a2);
    if (v33 != -1) {
      goto LABEL_36;
    }
  }
LABEL_30:
  uint64_t result = sub_1000BB100(*(uint64_t **)result, a2, *(_DWORD **)(result + 24));
  int v10 = result;
  if ((int)result < 256)
  {
    uint64_t result = sub_10009D530(v9, a2, v13, v14, *(void *)(v9 + 24), 0, result, (uint64_t)&v33);
LABEL_36:
    if (a3)
    {
      int v30 = (unsigned __int16 *)(*(void *)(*(void *)(v9 + 48) + (((unint64_t)v33 >> 5) & 0x7FFFFF8))
                               + 2 * v33);
      int v10 = *v30;
      *a3 = v30 + 1;
    }
    if (a4)
    {
      uint64_t v31 = (unsigned __int16 *)(*(void *)(*(void *)(v9 + 64) + (((unint64_t)v33 >> 5) & 0x7FFFFF8))
                               + 2 * v33);
      int v32 = *v31;
      unsigned int v11 = v31 + 1;
      int v10 = v32;
      goto LABEL_40;
    }
    goto LABEL_41;
  }
  if (a3) {
    *a3 = *(void *)(v9 + 24);
  }
  if (a4)
  {
    uint64_t result = sub_100005524(*(void *)(v9 + 8), *(unsigned __int16 **)(v9 + 24), result, *(_WORD **)(v9 + 40), 0, 0, v28, v29);
    unsigned int v11 = *(unsigned __int16 **)(v9 + 40);
    goto LABEL_40;
  }
LABEL_41:
  *a5 = v10;
  return result;
}

uint64_t sub_10009D530(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = (_DWORD *)a8;
  int v9 = a7;
  int v10 = (__int16 *)a6;
  unsigned int v11 = (unsigned __int16 *)a5;
  unsigned int v12 = a4;
  unsigned int v13 = a3;
  unsigned int v14 = a2;
  uint64_t v15 = result;
  int v16 = *(_DWORD *)(result + 80);
  int v17 = 256 - v16;
  if (v17 <= (int)a7) {
    *(_DWORD *)(result + 80) = v17 + v16;
  }
  uint64_t v18 = (void *)(result + 88);
  if (*(void *)(result + 88))
  {
    unsigned int v46 = a2;
    unsigned int v19 = a3;
    unsigned int v21 = a4;
    int v24 = (int *)(result + 100);
    uint64_t v23 = *(int *)(result + 100);
    uint64_t result = sub_1000C3A90((const void **)(result + 88), (int *)(result + 96), (signed int *)(result + 100), 8, 4, *(_DWORD *)(result + 124) + 1);
    if (*(_DWORD *)(v15 + 108) && (int)v23 < *v24)
    {
      do
      {
        for (uint64_t i = 0; i != 1024; i += 4)
          *(_WORD *)(*(void *)(*v18 + 8 * v23) + i) = -1;
        ++v23;
      }
      while (v23 < *v24);
    }
    unsigned int v11 = (unsigned __int16 *)a5;
    unsigned int v12 = v21;
    int v8 = (_DWORD *)a8;
    unsigned int v13 = v19;
    unsigned int v14 = v46;
    if (!result)
    {
      uint64_t result = sub_10009CC28(v15);
      unsigned int v13 = v12;
    }
  }
  unsigned int v26 = *(_DWORD *)(v15 + 80);
  if (*(void *)(v15 + 48) && (signed int)(v9 + v26 + 2) > *(_DWORD *)(v15 + 60) << 8)
  {
    uint64_t result = sub_10009CC28(v15);
    unsigned int v26 = *(_DWORD *)(v15 + 80);
    unsigned int v13 = v12;
  }
  if (*(void *)(v15 + 64) && (signed int)(v9 + v26 + 2) > *(_DWORD *)(v15 + 76) << 8)
  {
    uint64_t result = sub_10009CC28(v15);
    unsigned int v26 = *(_DWORD *)(v15 + 80);
    unsigned int v13 = v12;
  }
  *int v8 = v26;
  uint64_t v27 = *(void *)(v15 + 144);
  if (v27)
  {
    *(_WORD *)(*(void *)(v27 + 8 * (v14 >> 8)) + 2 * v14) = v26;
    if (!v11) {
      goto LABEL_35;
    }
  }
  else
  {
    uint64_t v28 = *(void *)(v15 + 152);
    if (v28)
    {
      *(_DWORD *)(*(void *)(v28 + 8 * (v14 >> 8)) + 4 * v14) = v26;
      if (!v11)
      {
LABEL_35:
        *(_WORD *)(*(void *)(*(void *)(v15 + 64) + 8 * (v26 >> 8)) + 2 * v26) = v9;
        if (v9 >= 1)
        {
          uint64_t v43 = v9;
          unsigned int v44 = v26 + 1;
          do
          {
            __int16 v45 = *v10++;
            *(_WORD *)(*(void *)(*(void *)(v15 + 64) + 8 * (v44 >> 8)) + 2 * v44) = v45;
            ++v44;
            --v43;
          }
          while (v43);
        }
        *(_WORD *)(*(void *)(*(void *)(v15 + 64) + 8 * ((v26 + 1 + v9) >> 8))
                 + 2 * (v26 + 1 + v9)) = 0x7FFF;
        goto LABEL_39;
      }
    }
    else
    {
      if (!*(_DWORD *)(v15 + 108)) {
        uint64_t result = (uint64_t)sub_1000C403C(*(void **)(v15 + 88), *(unsigned int *)(v15 + 100), 256, 4, v13, *(_DWORD *)(v15 + 124) - v13, v13 + 1);
      }
      unsigned int v42 = (_WORD *)(*(void *)(*v18 + 8 * (v13 >> 8)) + 4 * v13);
      *unsigned int v42 = v14;
      v42[1] = v26;
      if (!v11) {
        goto LABEL_35;
      }
    }
  }
  uint64_t v29 = *(void *)(v15 + 48);
  unsigned int v30 = v26 >> 8;
  if (v29)
  {
    *(_WORD *)(*(void *)(v29 + 8 * v30) + 2 * v26) = v9;
    if (v9 >= 1)
    {
      unsigned int v31 = v26 + 1;
      uint64_t v32 = v9;
      unsigned int v33 = v11;
      do
      {
        __int16 v34 = *v33++;
        *(_WORD *)(*(void *)(*(void *)(v15 + 48) + 8 * (v31 >> 8)) + 2 * v31) = v34;
        ++v31;
        --v32;
      }
      while (v32);
    }
    *(_WORD *)(*(void *)(*(void *)(v15 + 48) + 8 * ((v9 + v26 + 1) >> 8)) + 2 * (v9 + v26 + 1)) = -1;
  }
  if (*(void *)(v15 + 64))
  {
    uint64_t v35 = (__int16 *)sub_1000CD3E8(2 * v9, a2, a3, a4, a5, a6, a7, a8);
    sub_100005524(*(void *)(v15 + 8), v11, v9, v35, 0, 0, v36, v37);
    *(_WORD *)(*(void *)(*(void *)(v15 + 64) + 8 * v30) + 2 * v26) = v9;
    if (v9 >= 1)
    {
      unsigned int v38 = v26 + 1;
      uint64_t v39 = v9;
      unsigned int v40 = v35;
      do
      {
        __int16 v41 = *v40++;
        *(_WORD *)(*(void *)(*(void *)(v15 + 64) + 8 * (v38 >> 8)) + 2 * v38) = v41;
        ++v38;
        --v39;
      }
      while (v39);
    }
    *(_WORD *)(*(void *)(*(void *)(v15 + 64) + 8 * ((v9 + v26 + 1) >> 8)) + 2 * (v9 + v26 + 1)) = -1;
    uint64_t result = (uint64_t)sub_1000CD4D0(v35, 2 * v9);
  }
LABEL_39:
  *(_DWORD *)(v15 + 80) += v9 + 2;
  ++*(_DWORD *)(v15 + 124);
  return result;
}

uint64_t sub_10009D8F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(void *)(a1 + 144) || *(void *)(a1 + 152)) {
    goto LABEL_3;
  }
  if (*(_DWORD *)(a1 + 108))
  {
    int v9 = *(_DWORD *)(a1 + 100) << 8;
    int v10 = __ROR4__(dword_1000F60E0[a2 >> 8], 31);
    uint64_t v6 = (dword_1000F60E0[a2] ^ v10) & (v9 - 1);
    uint64_t v11 = *(void *)(a1 + 88);
    uint64_t v7 = v6;
    if (*(__int16 *)(*(void *)(v11 + 8 * (v6 >> 8))
                    + 4 * (LOBYTE(dword_1000F60E0[a2]) ^ v10)) != -1)
    {
      do
      {
        if (v7 + 1 == v9) {
          uint64_t v7 = 0;
        }
        else {
          uint64_t v7 = (v7 + 1);
        }
      }
      while (*(__int16 *)(*(void *)(v11 + 8 * (v7 >> 8)) + 4 * v7) != -1);
    }
    return sub_10009D530(a1, a2, v7, v6, 0, a3, a4, (uint64_t)v17);
  }
  int v12 = *(_DWORD *)(a1 + 124);
  BOOL v13 = __OFSUB__(v12, 1);
  int v14 = v12 - 1;
  if (v14 < 0 != v13)
  {
LABEL_3:
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    return sub_10009D530(a1, a2, v7, v6, 0, a3, a4, (uint64_t)v17);
  }
  LODWORD(v15) = 0;
  do
  {
    unsigned int v16 = (v15 + v14) >> 1;
    if (*(unsigned __int16 *)(*(void *)(*(void *)(a1 + 88) + 8 * ((v15 + v14) >> 9))
                             + 4 * v16) < a2)
    {
      uint64_t v15 = v16 + 1;
    }
    else
    {
      int v14 = v16 - 1;
      uint64_t v15 = v15;
    }
  }
  while ((int)v15 <= v14);
  return sub_10009D530(a1, a2, v15, 0, 0, a3, a4, (uint64_t)v17);
}

uint64_t sub_10009DA20(uint64_t a1, unsigned int a2)
{
  if (*(_DWORD *)(a1 + 16)) {
    return 1;
  }
  uint64_t v3 = *(void *)(a1 + 144);
  if (v3)
  {
    unsigned int v4 = *(unsigned __int16 *)(*(void *)(v3 + 8 * (a2 >> 8)) + 2 * a2);
    if (v4 != 0xFFFF) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v6 = *(void *)(a1 + 152);
    if (!v6)
    {
      if (*(_DWORD *)(a1 + 108))
      {
        int v7 = *(_DWORD *)(a1 + 100) << 8;
        int v8 = __ROR4__(dword_1000F60E0[a2 >> 8], 31);
        unsigned int v9 = (dword_1000F60E0[a2] ^ v8) & (v7 - 1);
        uint64_t v10 = *(void *)(a1 + 88);
        uint64_t v11 = *(void *)(v10 + 8 * (v9 >> 8));
        uint64_t v12 = (LOBYTE(dword_1000F60E0[a2]) ^ v8);
        int v13 = *(unsigned __int16 *)(v11 + 4 * v12);
        if (v13 != a2)
        {
          int v19 = 0;
          while ((_WORD)v13 != 0xFFFF)
          {
            if (++v9 == v7)
            {
              if (v19) {
                return sub_1000BB100(*(uint64_t **)a1, a2, *(_DWORD **)(a1 + 24));
              }
              unsigned int v9 = 0;
              int v19 = 1;
            }
            uint64_t v11 = *(void *)(v10 + 8 * (v9 >> 8));
            uint64_t v12 = v9;
            int v13 = *(unsigned __int16 *)(v11 + 4 * v12);
            if (v13 == a2) {
              goto LABEL_12;
            }
          }
          return sub_1000BB100(*(uint64_t **)a1, a2, *(_DWORD **)(a1 + 24));
        }
LABEL_12:
        unsigned int v4 = *(unsigned __int16 *)(v11 + 4 * v12 + 2);
        uint64_t v5 = *(void *)(a1 + 48);
        if (v5) {
          return *(unsigned __int16 *)(*(void *)(v5 + 8 * (v4 >> 8)) + 2 * v4);
        }
      }
      else
      {
        int v14 = *(_DWORD *)(a1 + 124);
        int v15 = 0;
        int v16 = v14 - 1;
        if (v14 >= 1)
        {
          do
          {
            unsigned int v17 = (v16 + v15) >> 1;
            if (*(unsigned __int16 *)(*(void *)(*(void *)(a1 + 88) + 8 * ((v16 + v15) >> 9))
                                     + 4 * v17) >= a2)
              int v16 = v17 - 1;
            else {
              int v15 = v17 + 1;
            }
          }
          while (v15 <= v16);
        }
        if (v15 >= v14) {
          return sub_1000BB100(*(uint64_t **)a1, a2, *(_DWORD **)(a1 + 24));
        }
        uint64_t v18 = *(void *)(*(void *)(a1 + 88) + 8 * (v15 >> 8));
        if (*(unsigned __int16 *)(v18 + 4 * v15) != a2) {
          return sub_1000BB100(*(uint64_t **)a1, a2, *(_DWORD **)(a1 + 24));
        }
        unsigned int v4 = *(unsigned __int16 *)(v18 + 4 * v15 + 2);
        uint64_t v5 = *(void *)(a1 + 48);
        if (v5) {
          return *(unsigned __int16 *)(*(void *)(v5 + 8 * (v4 >> 8)) + 2 * v4);
        }
      }
      return *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 64) + 8 * (v4 >> 8)) + 2 * v4);
    }
    unsigned int v4 = *(_DWORD *)(*(void *)(v6 + 8 * (a2 >> 8)) + 4 * a2);
    if (v4 != -1)
    {
LABEL_5:
      uint64_t v5 = *(void *)(a1 + 48);
      if (v5) {
        return *(unsigned __int16 *)(*(void *)(v5 + 8 * (v4 >> 8)) + 2 * v4);
      }
      return *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 64) + 8 * (v4 >> 8)) + 2 * v4);
    }
  }
  return sub_1000BB100(*(uint64_t **)a1, a2, *(_DWORD **)(a1 + 24));
}

uint64_t sub_10009DBF4(uint64_t a1)
{
  unsigned int v2 = sub_1000C085C(*(_DWORD *)(a1 + 16), 4, 0xFFFFFFFF);
  uint64_t v3 = sub_1000C085C(*(_DWORD *)(a1 + 32), 4, v2);
  if (*(void *)(a1 + 48) && *(int *)(a1 + 60) >= 1)
  {
    uint64_t v4 = 0;
    do
      uint64_t v3 = sub_1000C09B0(*(unint64_t **)(*(void *)(a1 + 48) + 8 * v4++), 2, 256, v3);
    while (v4 < *(int *)(a1 + 60));
  }
  unsigned int v5 = sub_1000C085C(*(_DWORD *)(a1 + 56), 4, v3);
  uint64_t v6 = sub_1000C085C(*(_DWORD *)(a1 + 60), 4, v5);
  if (*(void *)(a1 + 64) && *(int *)(a1 + 60) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t v6 = sub_1000C09B0(*(unint64_t **)(*(void *)(a1 + 64) + 8 * v7++), 2, 256, v6);
    while (v7 < *(int *)(a1 + 60));
  }
  unsigned int v8 = sub_1000C085C(*(_DWORD *)(a1 + 72), 4, v6);
  unsigned int v9 = sub_1000C085C(*(_DWORD *)(a1 + 76), 4, v8);
  unsigned int v10 = sub_1000C085C(*(_DWORD *)(a1 + 80), 4, v9);
  if (*(void *)(a1 + 88) && *(int *)(a1 + 100) >= 1)
  {
    uint64_t v11 = 0;
    do
    {
      uint64_t v12 = 0;
      uint64_t v13 = *(void *)(*(void *)(a1 + 88) + 8 * v11);
      do
      {
        unsigned int v14 = sub_1000C085C(*(unsigned __int16 *)(v13 + v12), 2, v10);
        unsigned int v10 = sub_1000C085C(*(unsigned __int16 *)(v13 + v12 + 2), 2, v14);
        v12 += 4;
      }
      while (v12 != 1024);
      ++v11;
    }
    while (v11 < *(int *)(a1 + 100));
  }
  unsigned int v15 = sub_1000C085C(*(_DWORD *)(a1 + 96), 4, v10);
  unsigned int v16 = sub_1000C085C(*(_DWORD *)(a1 + 100), 4, v15);
  unsigned int v17 = sub_1000C085C(*(_DWORD *)(a1 + 104), 4, v16);
  unsigned int v18 = sub_1000C085C(*(_DWORD *)(a1 + 108), 4, v17);
  unsigned int v19 = sub_1000C085C(*(_DWORD *)(a1 + 112), 4, v18);
  unsigned int v20 = sub_1000C085C(*(_DWORD *)(a1 + 116), 4, v19);
  unsigned int v21 = sub_1000C085C(*(_DWORD *)(a1 + 120), 4, v20);
  uint64_t v22 = sub_1000C085C(*(_DWORD *)(a1 + 124), 4, v21);
  uint64_t v23 = *(unint64_t **)(a1 + 128);
  if (v23) {
    LODWORD(v22) = sub_1000C09B0(v23, 2, *(_DWORD *)(a1 + 136) + 1, v22);
  }
  uint64_t v24 = sub_1000C085C(*(_DWORD *)(a1 + 136), 4, v22);
  if (*(void *)(a1 + 144) && *(int *)(a1 + 164) >= 1)
  {
    uint64_t v25 = 0;
    do
      uint64_t v24 = sub_1000C09B0(*(unint64_t **)(*(void *)(a1 + 144) + 8 * v25++), 2, 256, v24);
    while (v25 < *(int *)(a1 + 164));
  }
  if (*(void *)(a1 + 152) && *(int *)(a1 + 164) >= 1)
  {
    uint64_t v26 = 0;
    do
      uint64_t v24 = sub_1000C09B0(*(unint64_t **)(*(void *)(a1 + 152) + 8 * v26++), 4, 256, v24);
    while (v26 < *(int *)(a1 + 164));
  }
  unsigned int v27 = sub_1000C085C(*(_DWORD *)(a1 + 160), 4, v24);
  unsigned int v28 = *(_DWORD *)(a1 + 164);
  return sub_1000C085C(v28, 4, v27);
}

uint64_t sub_10009DEE0(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v4 = sub_1000BFC50(a2, "bpc0", a3);
  if (!v4) {
    return 0;
  }
  uint64_t v6 = v4;
  if (qword_100101CC0)
  {
    if (!sub_1000BFD58(v4, *(_DWORD *)(qword_100101CC0 + 4516), v5)) {
      goto LABEL_37;
    }
LABEL_7:
    if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 4516))
    {
      if (!sub_1000BFD58(v6, *(_DWORD *)(a1 + 16), v7)
        || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 56), v9)
        || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 60), v10)
        || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 72), v11)
        || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 76), v12)
        || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 80), v13)
        || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 96), v14)
        || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 100), v15)
        || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 104), v16)
        || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 112), v17)
        || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 116), v18)
        || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 120), v19)
        || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 124), v20)
        || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 136), v21)
        || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 160), v22)
        || !sub_1000BFD58(v6, *(_DWORD *)(a1 + 164), v23)
        || !sub_1000BFFFC(v6, *(void ***)(a1 + 48), *(_DWORD *)(a1 + 60), 0x100u, 2, v24)
        || !sub_1000BFFFC(v6, *(void ***)(a1 + 64), *(_DWORD *)(a1 + 76), 0x100u, 2, v25)
        || !sub_1000BFFFC(v6, *(void ***)(a1 + 88), *(_DWORD *)(a1 + 100), 0x100u, 4, v26))
      {
        goto LABEL_37;
      }
      unsigned int v28 = *(void **)(a1 + 128);
      unsigned int v29 = v28 ? *(_DWORD *)(a1 + 136) + 1 : 0;
      if (!sub_1000BFDB0(v6, v28, v29, 2, v27)) {
        goto LABEL_37;
      }
      if (*(_DWORD *)(a1 + 112))
      {
        int v31 = *(_DWORD *)(a1 + 60);
        if (v31 <= *(_DWORD *)(a1 + 76)) {
          int v31 = *(_DWORD *)(a1 + 76);
        }
        int v32 = *(_DWORD *)(a1 + 164);
        if (v31 << 8 < 0x10000)
        {
          if (!sub_1000BFFFC(v6, *(void ***)(a1 + 144), v32, 0x100u, 2, v30)) {
            goto LABEL_37;
          }
        }
        else if (!sub_1000BFFFC(v6, *(void ***)(a1 + 152), v32, 0x100u, 4, v30))
        {
          goto LABEL_37;
        }
      }
    }
    uint64_t v33 = 1;
    goto LABEL_40;
  }
  if (sub_1000BFD58(v4, 0, v5)) {
    goto LABEL_7;
  }
LABEL_37:
  uint64_t v33 = 0;
LABEL_40:
  sub_1000BFD14(v6);
  return v33;
}

uint64_t sub_10009E16C(_DWORD *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint8x8_t v9 = sub_1000BEC58(a2, "bpc0", a3, a4, a5, a6, a7, a8);
  if (v9)
  {
    uint64_t v10 = (uint64_t)v9;
    int v20 = 0;
    if (sub_1000BEECC((uint64_t)v9, &v20))
    {
      if (v20)
      {
        uint8x8_t v11 = a1 + 15;
        sub_1000C3F24(*((void *)a1 + 6), a1[15], a1[15]);
        uint8x8_t v12 = a1 + 19;
        sub_1000C3F24(*((void *)a1 + 8), a1[19], a1[19]);
        sub_1000C3F24(*((void *)a1 + 11), a1[25], a1[25]);
        uint8x8_t v18 = (uint64_t *)(a1 + 36);
        uint8x8_t v13 = a1 + 41;
        sub_1000C3F24(*((void *)a1 + 18), a1[41], a1[41]);
        sub_1000C3F24(*((void *)a1 + 19), *v13, *v13);
        if (!sub_1000BEECC(v10, a1 + 4)) {
          goto LABEL_45;
        }
        if (!sub_1000BEECC(v10, a1 + 14)) {
          goto LABEL_45;
        }
        if (!sub_1000BEECC(v10, a1 + 15)) {
          goto LABEL_45;
        }
        if (!sub_1000BEECC(v10, a1 + 18)) {
          goto LABEL_45;
        }
        if (!sub_1000BEECC(v10, a1 + 19)) {
          goto LABEL_45;
        }
        if (!sub_1000BEECC(v10, a1 + 20)) {
          goto LABEL_45;
        }
        if (!sub_1000BEECC(v10, a1 + 24)) {
          goto LABEL_45;
        }
        if (!sub_1000BEECC(v10, a1 + 25)) {
          goto LABEL_45;
        }
        if (!sub_1000BEECC(v10, a1 + 26)) {
          goto LABEL_45;
        }
        if (!sub_1000BEECC(v10, a1 + 28)) {
          goto LABEL_45;
        }
        if (!sub_1000BEECC(v10, a1 + 29)) {
          goto LABEL_45;
        }
        if (!sub_1000BEECC(v10, a1 + 30)) {
          goto LABEL_45;
        }
        if (!sub_1000BEECC(v10, a1 + 31)) {
          goto LABEL_45;
        }
        if (!sub_1000BEECC(v10, a1 + 34)) {
          goto LABEL_45;
        }
        uint8x8_t v17 = a1 + 40;
        if (!sub_1000BEECC(v10, a1 + 40)) {
          goto LABEL_45;
        }
        if (!sub_1000BEECC(v10, a1 + 41)) {
          goto LABEL_45;
        }
        int v19 = 0;
        if (!sub_1000BF88C(v10, (uint64_t *)a1 + 6, a1[14], 256, 2, &v19)
          || *((void *)a1 + 6) && v19 != *v11)
        {
          goto LABEL_45;
        }
        int v19 = 0;
        if (!sub_1000BF88C(v10, (uint64_t *)a1 + 8, a1[18], 256, 2, &v19)
          || *((void *)a1 + 8) && v19 != *v12)
        {
          goto LABEL_45;
        }
        int v19 = 0;
        if (!sub_1000BF88C(v10, (uint64_t *)a1 + 11, a1[24], 256, 4, &v19)
          || *((void *)a1 + 11) && v19 != a1[25])
        {
          goto LABEL_45;
        }
        int v19 = 0;
        if (!sub_1000BF078(v10, 2, (uint64_t *)a1 + 16, &v19) || *((void *)a1 + 16) && v19 != a1[34] + 1) {
          goto LABEL_45;
        }
        if (a1[28])
        {
          int v14 = *v11;
          if (*v11 <= *v12) {
            int v14 = *v12;
          }
          if (v14 << 8 < 0x10000)
          {
            int v19 = 0;
            if (!sub_1000BF88C(v10, v18, *v17, 256, 2, &v19) || *v18 && v19 != *v13) {
              goto LABEL_45;
            }
          }
          else
          {
            int v19 = 0;
            if (!sub_1000BF88C(v10, (uint64_t *)a1 + 19, *v17, 256, 4, &v19)
              || *((void *)a1 + 19) && v19 != *v13)
            {
              goto LABEL_45;
            }
          }
        }
      }
      uint64_t v15 = 1;
LABEL_46:
      sub_1000BED3C(v10);
      return v15;
    }
LABEL_45:
    uint64_t v15 = 0;
    goto LABEL_46;
  }
  return 0;
}

uint64_t sub_10009E548(int a1)
{
  uint64_t v2 = sub_1000C33A0(80);
  uint64_t v3 = v2;
  if (!v2) {
    return v3;
  }
  *(void *)(v2 + 16) = 0;
  *(void *)uint64_t v2 = 0xFFFFFFFF00000000;
  *(_DWORD *)(v2 + 8) = 0x40000000;
  *(_DWORD *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 28) = (a1 + 1023) >> 10;
  if (!qword_100101CC0) {
    return v3;
  }
  uint64_t v4 = *(void *)(qword_100101CC0 + 4624);
  if (v4 < 1) {
    return v3;
  }
  int v5 = 1 << v4;
  uint64_t v6 = (void *)sub_1000C33A0(4 * (1 << v4));
  if (v6)
  {
    *(void *)(v3 + 48) = v6;
    *(_DWORD *)(v3 + 56) = v5;
    if (v4 != 31)
    {
      if (v5 <= 1) {
        unsigned int v7 = 1;
      }
      else {
        unsigned int v7 = 1 << v4;
      }
      memset_pattern16(v6, &unk_1000F4D40, 4 * v7);
    }
    return v3;
  }
  return 0;
}

uint64_t sub_10009E614(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if (*(int *)(result + 24) >= 1)
    {
      uint64_t v2 = 0;
      do
        sub_1000C321C(*(void *)(*(void *)(v1 + 16) + 8 * v2++));
      while (v2 < *(int *)(v1 + 24));
    }
    sub_1000C321C(*(void *)(v1 + 16));
    sub_1000C321C(*(void *)(v1 + 48));
    return sub_1000C321C(v1);
  }
  return result;
}

uint64_t sub_10009E68C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 64) = a2;
  return result;
}

void sub_10009E694(uint64_t a1)
{
  *(void *)a1 = 0xFFFFFFFF00000000;
  *(_DWORD *)(a1 + 8) = 0x40000000;
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v2 = *(void **)(a1 + 48);
  if (v2)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    if ((int)v3 >= 1) {
      memset_pattern16(v2, &unk_1000F4D40, 4 * v3);
    }
  }
}

void sub_10009E6D4(uint64_t a1, int a2, int a3)
{
  *(void *)a1 = 0xFFFFFFFF00000000;
  *(_DWORD *)(a1 + 8) = 0x40000000;
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v6 = *(void **)(a1 + 48);
  if (v6)
  {
    uint64_t v7 = *(unsigned int *)(a1 + 56);
    if ((int)v7 >= 1) {
      memset_pattern16(v6, &unk_1000F4D40, 4 * v7);
    }
  }
  *(_DWORD *)(a1 + 32) = a2;
  *(_DWORD *)(a1 + 36) = a3;
}

double sub_10009E740(uint64_t a1)
{
  double result = 2.00000191;
  *(void *)(a1 + 4) = 0x40000000FFFFFFFFLL;
  return result;
}

unint64_t sub_10009E750(unsigned int *a1, unint64_t a2, int a3, uint64_t a4, int a5, int a6, __int16 a7)
{
  __int16 v8 = a6;
  __int16 v9 = a3;
  int v10 = a2;
  unint64_t v12 = a4 & 0x7FFFFFFFFFFFFFFFLL | ((unint64_t)(a5 != 0) << 63);
  uint64_t v13 = *((void *)a1 + 6);
  int v14 = *a1;
  if (!v13) {
    goto LABEL_17;
  }
  uint64_t v15 = (int)a1[14];
  uint64_t v16 = qword_100101CC0;
  if (qword_100101CC0) {
    uint64_t v16 = *(void *)(qword_100101CC0 + 4632);
  }
  if (v15 - v16 > v14)
  {
    unsigned int v17 = a1[8];
    unint64_t v18 = a4 & 0x7FFFFFFFFFFFFFFFLL | ((unint64_t)(a5 != 0) << 63);
    if (!v17)
    {
      if (a1[9]) {
        unint64_t v18 = a4 & 0x7FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v18 = 0;
      }
    }
    int v19 = 0;
    int v47 = a2;
    __int16 v46 = a3;
    unint64_t v45 = v18;
    int v20 = (unsigned __int8 *)&v47 + 3;
    do
    {
      int v21 = *v20--;
      int v19 = dword_1000F60E0[v21] ^ __ROR4__(v19, 31);
    }
    while (v20 >= (unsigned __int8 *)&v47);
    uint8x8_t v22 = (unsigned __int8 *)&v46 + 1;
    do
    {
      int v23 = *v22--;
      int v19 = dword_1000F60E0[v23] ^ __ROR4__(v19, 31);
    }
    while (v22 >= (unsigned __int8 *)&v46);
    uint8x8_t v24 = (unsigned __int8 *)&v45 + 7;
    do
    {
      int v25 = *v24--;
      int v19 = dword_1000F60E0[v25] ^ __ROR4__(v19, 31);
    }
    while (v24 >= (unsigned __int8 *)&v45);
    int v26 = v19 & (v15 - 1);
    unint64_t result = *(unsigned int *)(v13 + 4 * v26);
    if (result == -2)
    {
LABEL_16:
      *(_DWORD *)(v13 + 4 * v26) = v14;
      int v14 = *a1;
LABEL_51:
      if (v14 == 2147483646
        || !sub_1000C3A90((const void **)a1 + 2, (int *)a1 + 7, (signed int *)a1 + 6, 10, 24, v14 + 1))
      {
        a1[10] = 1;
        return 0xFFFFFFFFLL;
      }
      else
      {
        unint64_t result = *a1;
        *a1 = result + 1;
        uint64_t v37 = *(void *)(*((void *)a1 + 2) + ((result >> 7) & 0x1FFFFF8)) + 24 * (result & 0x3FF);
        *(_DWORD *)(v37 + 8) = v10;
        *(_WORD *)(v37 + 12) = v9;
        *(void *)uint64_t v37 = v12;
        *(_WORD *)(v37 + 16) = a7;
        *(_WORD *)(v37 + 14) = v8;
      }
      return result;
    }
    uint64_t v33 = *((void *)a1 + 2);
    if (v17)
    {
      while (1)
      {
        uint64_t v34 = *(void *)(v33 + 8 * (result >> 10));
        uint64_t v35 = v34 + 24 * (result & 0x3FF);
        if (*(_DWORD *)(v35 + 8) == a2
          && *(unsigned __int16 *)(v34 + 24 * (result & 0x3FF) + 12) == a3
          && *(void *)v35 == v18)
        {
          break;
        }
        if (v26 + 1 == v15) {
          int v26 = 0;
        }
        else {
          ++v26;
        }
        unint64_t result = *(unsigned int *)(v13 + 4 * v26);
        if (result == -2) {
          goto LABEL_16;
        }
      }
    }
    else if (a1[9])
    {
      while (1)
      {
        uint64_t v38 = *(void *)(v33 + 8 * (result >> 10));
        uint64_t v39 = v38 + 24 * (result & 0x3FF);
        if (*(_DWORD *)(v39 + 8) == a2
          && *(unsigned __int16 *)(v38 + 24 * (result & 0x3FF) + 12) == a3
          && ((*(void *)v39 ^ v18) & 0x7FFFFFFFFFFFFFFFLL) == 0)
        {
          break;
        }
        if (v26 + 1 == v15) {
          int v26 = 0;
        }
        else {
          ++v26;
        }
        unint64_t result = *(unsigned int *)(v13 + 4 * v26);
        if (result == -2) {
          goto LABEL_16;
        }
      }
    }
    else
    {
      while (1)
      {
        uint64_t v40 = *(void *)(v33 + 8 * (result >> 10));
        if (*(_DWORD *)(v40 + 24 * (result & 0x3FF) + 8) == a2
          && *(unsigned __int16 *)(v40 + 24 * (result & 0x3FF) + 12) == a3)
        {
          break;
        }
        if (v26 + 1 == v15) {
          int v26 = 0;
        }
        else {
          ++v26;
        }
        unint64_t result = *(unsigned int *)(v13 + 4 * v26);
        if (result == -2) {
          goto LABEL_16;
        }
      }
    }
    if ((int)result >= v14) {
      goto LABEL_51;
    }
  }
  else
  {
LABEL_17:
    unint64_t result = (v14 - 1);
    int v28 = a2 + 1;
    if (a1[8])
    {
      if (v14 > v28)
      {
        LODWORD(result) = v14;
        while (1)
        {
          unint64_t result = (result - 1);
          uint64_t v29 = *(void *)(*((void *)a1 + 2) + 8 * (result >> 10));
          uint64_t v30 = v29 + 24 * (result & 0x3FF);
          if (*(_DWORD *)(v30 + 8) == a2
            && *(unsigned __int16 *)(v29 + 24 * (result & 0x3FF) + 12) == a3
            && *(void *)v30 == v12)
          {
            break;
          }
          if ((int)result <= v28) {
            goto LABEL_49;
          }
        }
      }
    }
    else if (a1[9])
    {
      if (v14 > v28)
      {
        LODWORD(result) = v14;
        while (1)
        {
          unint64_t result = (result - 1);
          uint64_t v31 = *(void *)(*((void *)a1 + 2) + 8 * (result >> 10));
          uint64_t v32 = v31 + 24 * (result & 0x3FF);
          if (*(_DWORD *)(v32 + 8) == a2
            && *(unsigned __int16 *)(v31 + 24 * (result & 0x3FF) + 12) == a3
            && (*(void *)v32 & 0x7FFFFFFFFFFFFFFFLL) == (a4 & 0x7FFFFFFFFFFFFFFFLL))
          {
            break;
          }
          if ((int)result <= v28) {
            goto LABEL_49;
          }
        }
      }
    }
    else if (v14 > v28)
    {
      LODWORD(result) = v14;
      while (1)
      {
        unint64_t result = (result - 1);
        uint64_t v36 = *(void *)(*((void *)a1 + 2) + 8 * (result >> 10));
        if (*(_DWORD *)(v36 + 24 * (result & 0x3FF) + 8) == a2
          && *(unsigned __int16 *)(v36 + 24 * (result & 0x3FF) + 12) == a3)
        {
          break;
        }
        if ((int)result <= v28)
        {
LABEL_49:
          unint64_t result = a2;
          break;
        }
      }
    }
    if ((int)result < v28) {
      goto LABEL_51;
    }
  }
  uint64_t v41 = *(void *)(*((void *)a1 + 2) + 8 * (result >> 10));
  uint64_t v42 = v41 + 24 * (result & 0x3FF);
  int v44 = *(__int16 *)(v42 + 14);
  uint64_t v43 = (_WORD *)(v42 + 14);
  if (v44 > a6)
  {
    *(_WORD *)(v41 + 24 * (result & 0x3FF) + 16) = a7;
    *uint64_t v43 = a6;
  }
  return result;
}

uint64_t sub_10009EBBC(uint64_t result, int a2, int a3)
{
  if (*(_DWORD *)(result + 8) > a3)
  {
    *(_DWORD *)(result + 4) = a2;
    *(_DWORD *)(result + 8) = a3;
  }
  return result;
}

uint64_t sub_10009EBD0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int *a4)
{
  uint64_t v5 = a1;
  uint64_t v51 = sub_1000B5108(*(void *)(a1 + 64));
  unsigned int v6 = *(_DWORD *)(a3 + 24);
  if (v6 == -1)
  {
    unsigned int v8 = 0;
    uint64_t v7 = 0;
    unsigned int v10 = -1;
LABEL_21:
    unint64_t v11 = a4[1];
    if (v11 == -1)
    {
      unint64_t v11 = *a4;
    }
    else if (*((_WORD *)a4 + 4) || *a4 != -1)
    {
      return 0;
    }
    uint64_t result = sub_10002025C(v51, *(unsigned __int16 *)(*(void *)(*(void *)(v5 + 16) + 8 * (v11 >> 10))+ 24 * (v11 & 0x3FF)+ 12), *(unsigned __int16 *)(v7 + 12));
    if (!result) {
      return result;
    }
    if (v11 != -1 || v8 != 0) {
      goto LABEL_31;
    }
    return 0;
  }
  uint64_t v7 = 0;
  unsigned int v8 = 0;
  BOOL v9 = 1;
  unsigned int v10 = -1;
  LODWORD(v11) = -2;
  unint64_t v12 = &qword_100101CC0;
  while (1)
  {
    unsigned int v13 = v10;
    unsigned int v10 = v6;
    unsigned int v14 = a4[1];
    int v15 = v10 == v14 && v9;
    if (v15 != 1) {
      break;
    }
    unint64_t v11 = *a4;
    if (!*((_WORD *)a4 + 4)) {
      goto LABEL_10;
    }
    if (!v7) {
      goto LABEL_37;
    }
LABEL_15:
    if (v11 == -1)
    {
      unsigned int v10 = v13;
      if (v8) {
        goto LABEL_31;
      }
      return 0;
    }
    uint64_t v19 = v11 >> 10;
    uint64_t v20 = *(void *)(*(void *)(v5 + 16) + 8 * v19);
    unsigned int v21 = v11 & 0x3FF;
    if (!*v12) {
      goto LABEL_3;
    }
    if (!*(_DWORD *)(*v12 + 1288)) {
      goto LABEL_3;
    }
    unsigned int v52 = v11;
    unsigned int v22 = v13;
    uint64_t v23 = v5;
    uint8x8_t v24 = v12;
    BOOL v25 = sub_10002025C(v51, *(unsigned __int16 *)(v20 + 24 * v21 + 12), *(unsigned __int16 *)(v7 + 12));
    unsigned int v13 = v22;
    unint64_t v11 = v52;
    unint64_t v12 = v24;
    uint64_t v5 = v23;
    if (v25)
    {
LABEL_3:
      if (((*(void *)(v20 + 24 * v21) ^ *(void *)v7) & 0x7FE0000000000000) == 0)
      {
        uint64_t v28 = *(void *)(v5 + 16);
        uint64_t v30 = (*(void *)(*(void *)(v28 + 8 * v19) + 24 * v21) >> 35) & 0x3FFFFLL;
        LODWORD(v29) = v30;
        unsigned int v10 = v13;
        uint64_t v31 = a3;
        if (v8) {
          goto LABEL_46;
        }
        goto LABEL_35;
      }
    }
LABEL_4:
    uint64_t v7 = *(void *)(*(void *)(v5 + 16) + 8 * (v10 >> 10)) + 24 * (v10 & 0x3FF);
    BOOL v9 = (*(_WORD *)v7 & 0x3FF) == 0;
    ++v8;
    unsigned int v6 = *(_DWORD *)(v7 + 8);
    if (v6 == -1) {
      goto LABEL_21;
    }
  }
  if (*((_WORD *)a4 + 4)) {
    goto LABEL_4;
  }
LABEL_10:
  int v16 = v10 == *a4 && v9;
  int v17 = v15 | v16;
  if (v16) {
    unint64_t v18 = v14;
  }
  else {
    unint64_t v18 = v11;
  }
  if (v17 != 1) {
    goto LABEL_4;
  }
  unint64_t v11 = v18;
  if (v7) {
    goto LABEL_15;
  }
LABEL_37:
  unsigned int v10 = v13;
  if (v11 == -1 && v8 == 0) {
    return 0;
  }
LABEL_31:
  if (v11 == -1)
  {
    uint64_t v31 = a3;
    if (!v8)
    {
      LODWORD(v11) = -1;
      uint64_t result = sub_10002A1D4(*(void *)(a3 + 16), 0, 0);
      if (!result) {
        return result;
      }
LABEL_36:
      *(_DWORD *)(a2 + 24) = v11;
      *(void *)(a2 + 16) = *(void *)(v31 + 16);
      return 1;
    }
    LODWORD(v30) = 0;
    uint64_t v28 = *(void *)(v5 + 16);
    unint64_t v11 = 0xFFFFFFFFLL;
LABEL_46:
    uint64_t result = sub_10002A1D4(*(void *)(v31 + 16), v30, (*(void *)(*(void *)(v28 + 8 * (v10 >> 10)) + 24 * (v10 & 0x3FF)) >> 35) & 0x3FFFF);
    if (!result) {
      return result;
    }
    unint64_t v40 = sub_1000CD3E8(4 * v8, v33, v34, v35, v36, v37, v38, v39);
    uint64_t v41 = (void *)v40;
    uint64_t v42 = 4 * (int)v8 - 4;
    uint64_t v43 = v8;
    int v44 = (unsigned int *)(a3 + 24);
    do
    {
      unint64_t v45 = *v44;
      *(_DWORD *)(v40 + v42) = v45;
      int v44 = (unsigned int *)(*(void *)(*(void *)(v5 + 16) + ((v45 >> 7) & 0x1FFFFF8)) + 24 * (v45 & 0x3FF) + 8);
      v42 -= 4;
      --v43;
    }
    while (v43);
    for (uint64_t i = 0; i != v8; ++i)
    {
      uint64_t v47 = *(void *)(*(void *)(v5 + 16) + (((unint64_t)*((unsigned int *)v41 + i) >> 7) & 0x1FFFFF8))
          + 24 * (*((_DWORD *)v41 + i) & 0x3FF);
      unint64_t v48 = sub_10009E750((unsigned int *)v5, v11, *(unsigned __int16 *)(v47 + 12), *(void *)v47 & 0x7FFFFFFFFFFFFFFFLL, *(void *)v47 >> 63, 0x4000, -1);
      unint64_t v11 = v48;
    }
    *(_DWORD *)(a2 + 24) = v48;
    *(void *)(a2 + 16) = *(void *)(v31 + 16);
    sub_1000CD4D0(v41, 4 * v8);
    return 1;
  }
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = (*(void *)(*(void *)(v28 + 8 * (v11 >> 10)) + 24 * (v11 & 0x3FF)) >> 35) & 0x3FFFFLL;
  LODWORD(v30) = v29;
  uint64_t v31 = a3;
  if (v8) {
    goto LABEL_46;
  }
LABEL_35:
  uint64_t result = sub_10002A1D4(*(void *)(v31 + 16), v29, 0);
  if (result) {
    goto LABEL_36;
  }
  return result;
}

uint64_t sub_10009EFC4(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, __int16 *a7, uint64_t a8, int a9, _DWORD *a10)
{
  if (a2 == -1) {
    return 0;
  }
  int v10 = 0;
  int v11 = a9;
  unint64_t v12 = (void *)(*(void *)(*(void *)(a1 + 16) + 8 * (a2 >> 10)) + 24 * (a2 & 0x3FF));
  *a10 = (*v12 >> 53) & 0x3FF;
  uint64_t v13 = *(void *)(a1 + 16);
  for (unsigned int i = a2; i != -1; unsigned int i = *(_DWORD *)(*(void *)(v13 + 8 * (i >> 10)) + 24 * (i & 0x3FF) + 8))
    ++v10;
  if (v10 - 1 >= a9)
  {
    int v15 = v10 - a9;
    if (v10 - a9 >= 1)
    {
      do
      {
        uint64_t v41 = *(void *)(v13 + 8 * (a2 >> 10));
        unsigned int v42 = a2 & 0x3FF;
        a2 = *(_DWORD *)(v41 + 24 * (a2 & 0x3FF) + 8);
        ++v11;
      }
      while (v10 != v11);
      unint64_t v12 = (void *)(v41 + 24 * v42);
    }
    uint64_t v16 = (*v12 >> 10) & 0x1FFFFFFLL;
    uint64_t v17 = *v12 & 0x3FFLL;
    if (a2 == -1) {
      return 0;
    }
  }
  else
  {
    int v15 = 0;
    LODWORD(v16) = -1;
    LODWORD(v17) = -1;
  }
  uint64_t v18 = 0;
  int v19 = v10 - v15;
  uint64_t v20 = v19;
  uint64_t v21 = v19;
  uint64_t v22 = a3 + v20 * 2 - 2;
  uint64_t v23 = 4 * v19;
  uint64_t v24 = a4 + v23 - 4;
  uint64_t v25 = a6 + v23 - 4;
  uint64_t v26 = a5 + v21 - 1;
  uint64_t v27 = (uint64_t)&a7[v20 - 1];
  uint64_t v28 = a8 + v21 - 1;
  do
  {
    uint64_t v29 = *(void *)(*(void *)(a1 + 16) + 8 * (a2 >> 10));
    int v30 = v16;
    unsigned int v31 = a2 & 0x3FF;
    uint64_t v32 = v29 + 24 * v31;
    *(_WORD *)(v22 + 2 * v18) = *(_WORD *)(v32 + 12);
    if (a4) {
      *(_DWORD *)(v24 + 4 * v18) = (*(void *)v32 >> 35) & 0x3FFFF;
    }
    uint64_t v16 = (*(void *)v32 >> 10) & 0x1FFFFFFLL;
    uint64_t v33 = *(void *)v32 & 0x3FFLL;
    if (a6)
    {
      *(_DWORD *)(v25 + 4 * v18) = (unsigned __int16)(*(void *)v32 >> 10);
      BOOL v34 = !v33 && v17 == 1;
      if (v34 && v30 != v16) {
        *(_DWORD *)(v25 + 4 * v18) = (unsigned __int16)v30;
      }
    }
    if (a5) {
      *(unsigned char *)(v26 + v18) = v33 == 0;
    }
    if (a7) {
      *(_WORD *)(v27 + 2 * v18) = *(_WORD *)(v29 + 24 * v31 + 16);
    }
    if (a8 && (*(void *)v32 & 0x8000000000000000) != 0) {
      *(unsigned char *)(v28 + v18) = 1;
    }
    a2 = *(_DWORD *)(v29 + 24 * v31 + 8);
    --v18;
    LODWORD(v17) = v33;
  }
  while (a2 != -1);
  uint64_t result = -v18;
  if (a7)
  {
    __int16 v37 = *a7;
    if (*a7)
    {
      if (v18 != -1) {
        goto LABEL_29;
      }
    }
    else
    {
      __int16 v37 = 1;
      *a7 = 1;
      if (v18 != -1)
      {
LABEL_29:
        uint64_t v38 = ~v18;
        uint64_t v39 = a7 + 1;
        do
        {
          int v40 = *v39;
          if (v40 <= v37) {
            *(v39 - 1) = v40 - 1;
          }
          ++v39;
          __int16 v37 = v40;
          --v38;
        }
        while (v38);
        return result;
      }
    }
    return 1;
  }
  return result;
}

uint64_t sub_10009F228(uint64_t a1, unsigned int a2)
{
  if (a2 == -1) {
    return 0;
  }
  else {
    return *(void *)(*(void *)(*(void *)(a1 + 16) + 8 * (a2 >> 10)) + 24 * (a2 & 0x3FF)) & 0x7FFFFFFFFFFFFFFFLL;
  }
}

uint64_t sub_10009F25C(uint64_t a1, unsigned int a2)
{
  if (a2 == -1) {
    return 65534;
  }
  uint64_t v2 = *(void *)(*(void *)(a1 + 16) + 8 * (a2 >> 10));
  if ((*(void *)(v2 + 24 * (a2 & 0x3FF)) & 0x8000000000000000) != 0) {
    return 65534;
  }
  else {
    return *(unsigned __int16 *)(v2 + 24 * (a2 & 0x3FF) + 12);
  }
}

uint64_t sub_10009F29C(uint64_t a1, unsigned int a2)
{
  return *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 16) + 8 * (a2 >> 10)) + 24 * (a2 & 0x3FF) + 12);
}

uint64_t sub_10009F2BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

BOOL sub_10009F2C4(uint64_t a1)
{
  return *(_DWORD *)(a1 + 4) != -1;
}

uint64_t sub_10009F2D4(uint64_t result, _DWORD *a2, _DWORD *a3)
{
  *a2 = *(_DWORD *)(result + 4);
  *a3 = *(_DWORD *)(result + 8);
  return result;
}

uint64_t sub_10009F2E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int16 *a6, int a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, int a11, uint64_t a12, _DWORD *a13)
{
  unsigned int v13 = *(_DWORD *)(a1 + 4);
  if (v13 == -1 || !*(_DWORD *)a1)
  {
    uint64_t v22 = 0;
    *a9 = 0x40000000;
    *a8 = 0;
    return v22;
  }
  int v14 = 0;
  uint64_t v15 = 0;
  int v16 = -a7;
  do
  {
    uint64_t v17 = *(void *)(*(void *)(a1 + 16) + 8 * (v13 >> 10));
    unsigned int v18 = v13 & 0x3FF;
    ++v15;
    unsigned int v13 = *(_DWORD *)(v17 + 24 * (v13 & 0x3FF) + 8);
    ++v16;
    --v14;
  }
  while (v13 != -1);
  *a8 = -v14;
  *a9 = *(_DWORD *)(a1 + 8);
  if (a10) {
    *a10 = *(_DWORD *)(a1 + 4);
  }
  unsigned int v19 = *(_DWORD *)(a1 + 4);
  if (v19 != -1 && *(_DWORD *)(a1 + 8) == 0x40000000)
  {
    *a9 -= 50000;
    unsigned int v19 = *(_DWORD *)(a1 + 4);
  }
  if (-a7 - v14 < 1)
  {
    uint64_t v23 = (void *)(v17 + 24 * v18);
    uint64_t v22 = 1;
    if (a13) {
LABEL_13:
    }
      *a13 = (*v23 >> 53) & 0x3FF;
  }
  else
  {
    do
    {
      uint64_t v20 = *(void *)(*(void *)(a1 + 16) + 8 * (v19 >> 10));
      unsigned int v21 = v19 & 0x3FF;
      unsigned int v19 = *(_DWORD *)(v20 + 24 * (v19 & 0x3FF) + 8);
      ++a7;
    }
    while (-v14 != a7);
    uint64_t v22 = 0;
    uint64_t v23 = (void *)(v20 + 24 * v21);
    if (a13) {
      goto LABEL_13;
    }
  }
  int v24 = v16 & ~(v16 >> 31);
  if (v19 != -1)
  {
    uint64_t v25 = 0;
    int v26 = -v14 - v24;
    uint64_t v27 = v15 - ((int)v15 - v24);
    uint64_t v28 = 4 * v26;
    uint64_t v29 = a3 + v28 - 4;
    uint64_t v30 = a4 + v28 - 4;
    uint64_t v31 = v26;
    uint64_t v32 = a2 + v31 * 2 - 2;
    int v33 = -1;
    int v34 = -1;
    do
    {
      uint64_t v36 = *(void *)(*(void *)(a1 + 16) + 8 * (v19 >> 10));
      unsigned int v37 = v19 & 0x3FF;
      uint64_t v38 = (unint64_t *)(v36 + 24 * v37);
      if (a11)
      {
        if (v27 == v25) {
          LOBYTE(v39) = 0;
        }
        else {
          unint64_t v39 = *v38 >> 63;
        }
        *(unsigned char *)(a12 + v26 - 1 + v25) = v39;
      }
      if (a3) {
        *(_DWORD *)(v29 + 4 * v25) = (*v38 >> 35) & 0x3FFFF;
      }
      unint64_t v40 = *v38;
      uint64_t v41 = (*v38 >> 10) & 0x1FFFFFF;
      if (a4)
      {
        *(_DWORD *)(v30 + 4 * v25) = (unsigned __int16)(v40 >> 10);
        if (v34 == 1 && (v40 & 0x3FF) == 0 && v33 != v41) {
          *(_DWORD *)(v30 + 4 * v25) = (unsigned __int16)v33;
        }
      }
      if (a5) {
        *(unsigned char *)(a5 + v26 - 1 + v25) = (v40 & 0x3FF) == 0;
      }
      if (a6) {
        a6[v31 - 1 + v25] = *(_WORD *)(v36 + 24 * v37 + 16);
      }
      uint64_t v35 = v36 + 24 * v37;
      *(_WORD *)(v32 + 2 * v25) = *(_WORD *)(v35 + 12);
      unsigned int v19 = *(_DWORD *)(v35 + 8);
      --v25;
      int v33 = v41;
      int v34 = v40 & 0x3FF;
    }
    while (v19 != -1);
  }
  if (a6)
  {
    int v44 = -v14 - v24;
    __int16 v45 = *a6;
    if (*a6)
    {
      if (v44 < 2) {
        return v22;
      }
    }
    else
    {
      __int16 v45 = 1;
      *a6 = 1;
      if (v44 < 2) {
        return v22;
      }
    }
    __int16 v46 = a6 + 1;
    uint64_t v47 = (-v14 - v24) - 1;
    do
    {
      int v48 = *v46;
      if (v48 <= v45) {
        *(v46 - 1) = v48 - 1;
      }
      ++v46;
      __int16 v45 = v48;
      --v47;
    }
    while (v47);
  }
  return v22;
}

uint64_t sub_10009F5D0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a2 + 88) = 0u;
  uint64_t v4 = a2 + 88;
  *(_DWORD *)(a2 + 120) = 0;
  *(_OWORD *)(a2 + 104) = 0u;
  if (sub_100039EB4(a1) == 3)
  {
    uint64_t v5 = (_DWORD *)(a2 + 12);
  }
  else
  {
    uint64_t v5 = (_DWORD *)(a2 + 12);
    int v6 = sub_10009F2E8(*(void *)(a1 + 688), a2 + 16, 0, 0, 0, 0, 36, (_DWORD *)(a2 + 4), (_DWORD *)(a2 + 12), 0, *(_DWORD *)(a1 + 648), v4, 0);
    int v7 = *(_DWORD *)(a2 + 4);
    if (v7 && v7 <= 36 && v6) {
      return 1;
    }
    *(_DWORD *)(a1 + 548) = 3;
  }
  uint64_t result = 0;
  _DWORD *v5 = 0x40000000;
  return result;
}

_WORD *sub_10009F6A4(_WORD *result, __int16 a2)
{
  result[406] = a2;
  result[405] = a2;
  result[333] = a2;
  return result;
}

uint64_t sub_10009F6B4(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  *(_DWORD *)(result + 584) = a2;
  *(void *)(result + 568) = a3;
  *(void *)(result + 576) = a4;
  return result;
}

uint64_t sub_10009F6C4(uint64_t a1, uint64_t a2, __int16 *a3, int a4)
{
  if (sub_1000D2974())
  {
    return sub_100039FBC(a1);
  }
  if (a2) {
    sub_100006AA4(*(void *)(a1 + 384), a2, a3, *(void *)(a1 + 408), *(_WORD *)(a1 + 812), a4, v8, v9, v10, v11, v12, v13);
  }
  sub_10009E740(*(void *)(a1 + 688));
  if (*(__int16 *)(a1 + 748) < 0 || *(__int16 *)(a1 + 750) < 0)
  {
    unsigned int v17 = *(unsigned __int16 *)(a1 + 736);
    int v18 = *(_DWORD *)(a1 + 604);
    if (v18 >= 1)
    {
      uint64_t v19 = *(void *)(a1 + 592);
      unint64_t v20 = v19 + 12 * v18;
      if (v20 <= v19 + 12) {
        unint64_t v20 = v19 + 12;
      }
      unint64_t v21 = v20 - 12;
      if (v21 == v19) {
        uint64_t v22 = *(void *)(a1 + 592);
      }
      else {
        uint64_t v22 = v19 + 1;
      }
      unint64_t v23 = v21 - v22;
      BOOL v24 = v21 != v19;
      unint64_t v25 = v23 / 0xC;
      if (v21 == v19) {
        unint64_t v26 = v25;
      }
      else {
        unint64_t v26 = v25 + 1;
      }
      unint64_t v27 = *(void *)(a1 + 592);
      if (v26 >= 4)
      {
        unint64_t v28 = v26 + 1;
        uint64_t v29 = (v26 + 1) & 3;
        if (!v29) {
          uint64_t v29 = 4;
        }
        int32x2_t v30 = vdup_n_s32(v17);
        unint64_t v27 = v19 + 12 * (v28 - v29);
        uint64_t v31 = (__int16 *)(v19 + 32);
        unint64_t v32 = ~v25 + v29 - v24;
        int32x2_t v33 = v30;
        do
        {
          v15.i16[0] = *(v31 - 12);
          v15.i16[2] = *(v31 - 6);
          int32x2_t v15 = vshr_n_s32(vshl_n_s32(v15, 0x10uLL), 0x10uLL);
          v16.i16[0] = *v31;
          v16.i16[2] = v31[6];
          int32x2_t v16 = vshr_n_s32(vshl_n_s32(v16, 0x10uLL), 0x10uLL);
          int32x2_t v30 = vmin_s32(v15, vshr_n_s32(vshl_n_s32(v30, 0x10uLL), 0x10uLL));
          int32x2_t v33 = vmin_s32(v16, vshr_n_s32(vshl_n_s32(v33, 0x10uLL), 0x10uLL));
          v31 += 24;
          v32 += 4;
        }
        while (v32);
        int32x2_t v34 = vmin_s32(vshr_n_s32(vshl_n_s32(v30, 0x10uLL), 0x10uLL), vshr_n_s32(vshl_n_s32(v33, 0x10uLL), 0x10uLL));
        LOWORD(v17) = vpmin_s32(v34, v34).u16[0];
      }
      unint64_t v35 = v19 + 12 * v18;
      do
      {
        if (*(__int16 *)(v27 + 8) < (__int16)v17) {
          LOWORD(v17) = *(_WORD *)(v27 + 8);
        }
        v27 += 12;
      }
      while (v27 < v35);
    }
  }
  else
  {
    LOWORD(v17) = *(_WORD *)(a1 + 736);
  }
  *(_WORD *)(a1 + 740) = v17;
  *(_DWORD *)(a1 + 756) += (__int16)v17;
  *(_WORD *)(a1 + 736) = 0x4000;
  sub_10005EEF4(*(int **)(a1 + 824));
  (*(void (**)(uint64_t))(a1 + 520))(a1);
  if (*(_DWORD *)(a1 + 548) != 3)
  {
    (*(void (**)(uint64_t))(a1 + 528))(a1);
    if (*(unsigned char *)(a1 + 424)) {
      sub_10003A240(a1, v38, v39, v40, v41, v42, v43, v44);
    }
    sub_100006C90(*(void *)(a1 + 384), *(__int16 *)(a1 + 812), (_DWORD *)(a1 + 436));
    if (qword_100101CC0
      && *(_DWORD *)(qword_100101CC0 + 1492)
      && sub_100025D50((unsigned int *)(a1 + 760)) == 3)
    {
      __int16 v45 = (__int16 *)(*(void *)(a1 + 712) + 28 * (*(_DWORD *)(a1 + 728) - *(_DWORD *)(a1 + 732)));
      __int16 v46 = *(_WORD *)(a1 + 662);
      __int16 v47 = 0x4000;
      while ((unint64_t)v45 < *(void *)(a1 + 720))
      {
        if (*v45 == -1)
        {
          v45 += 14;
        }
        else if (*((unsigned char *)v45 + 2))
        {
          if (v45[12] < v46) {
            __int16 v46 = v45[12];
          }
          v45 += 14;
        }
        else
        {
          if (v45[3] < v47) {
            __int16 v47 = v45[3];
          }
          v45 += 14;
        }
      }
      int v48 = (_DWORD *)(a1 + 760);
      uint64_t result = sub_1000B44AC((unsigned int *)(a1 + 760), v47 <= v46);
      if (*(_DWORD *)(a1 + 548) == 3) {
        goto LABEL_62;
      }
    }
    else
    {
      int v48 = (_DWORD *)(a1 + 760);
      uint64_t result = sub_1000B44AC((unsigned int *)(a1 + 760), *(unsigned __int16 *)(a1 + 808) == *(unsigned __int16 *)(a1 + 660));
      if (*(_DWORD *)(a1 + 548) == 3)
      {
LABEL_62:
        --*(_WORD *)(a1 + 812);
        return result;
      }
    }
    uint64_t result = sub_1000B4630(v48);
    if (result)
    {
      int v55 = 0;
      BOOL v56 = 0;
    }
    else
    {
      uint64_t result = sub_100039F98(a1);
      int v55 = 0;
      BOOL v56 = result == 0;
      if (!result)
      {
LABEL_58:
        if (v56 | v55) {
          int v57 = 1;
        }
        else {
          int v57 = 2;
        }
        *(_DWORD *)(a1 + 548) = v57;
        goto LABEL_62;
      }
    }
    if (qword_100101CC0)
    {
      int v55 = *(_DWORD *)(qword_100101CC0 + 5364);
      if (v55)
      {
        uint64_t result = sub_100039A9C(a1, *(unsigned int *)(qword_100101CC0 + 5376), v49, v50, v51, v52, v53, v54);
        int v55 = result != 0;
      }
    }
    goto LABEL_58;
  }
  uint64_t v36 = *(void *)(a1 + 384);
  uint64_t v37 = *(__int16 *)(a1 + 812);
  return sub_100006C90(v36, v37, (_DWORD *)(a1 + 436));
}

uint64_t sub_10009FA90(uint64_t a1, uint64_t a2, _DWORD *a3, int a4, unsigned __int16 a5, int a6, uint64_t a7, unsigned int a8, unsigned __int16 a9, void *a10, unsigned int a11)
{
  if (!a2) {
    a2 = *(void *)(a1 + 472);
  }
  return sub_1000D4308(a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_10009FAD0(uint64_t a1, uint64_t a2, int a3)
{
  if ((int)sub_100004180(a2) > 2) {
    return 0;
  }
  int v6 = (void *)sub_1000C33A0(896);
  uint64_t v7 = (uint64_t)v6;
  if (!v6) {
    return v7;
  }
  memcpy(v6, &off_1000FDCE0, 0x208uLL);
  *(void *)(v7 + 376) = a1;
  *(void *)(v7 + 384) = a2;
  *(_DWORD *)(v7 + 432) = a3;
  *(_WORD *)(v7 + 660) = sub_1000041E4(a2);
  int v8 = qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 1480) && sub_100004178(*(void *)(v7 + 384)) != 0;
  *(_DWORD *)(v7 + 552) = v8;
  int v9 = *(_DWORD *)(v7 + 432);
  *(_DWORD *)(v7 + 560) = sub_100004180(*(void *)(v7 + 384));
  *(void *)(v7 + 592) = 0;
  *(_DWORD *)(v7 + 584) = -1;
  *(_OWORD *)(v7 + 568) = 0u;
  *(_WORD *)(v7 + 812) = -1;
  *(void *)(v7 + 712) = 0;
  uint64_t v10 = qword_100101CC0;
  if (qword_100101CC0)
  {
    *(_DWORD *)(v7 + 728) = *(void *)(qword_100101CC0 + 4664);
    *(_WORD *)(v7 + 746) = *(void *)(v10 + 1688);
    *(_WORD *)(v7 + 750) = *(void *)(v10 + 1496);
    *(_WORD *)(v7 + 752) = *(void *)(v10 + 1664);
    *(_WORD *)(v7 + 814) = -1;
    *(void *)(v7 + 456) = 0xFFFFFFFFLL;
    *(_DWORD *)(v7 + 816) = 0;
    uint64_t v11 = sub_10009E548(*(_DWORD *)(v10 + 4672));
    *(void *)(v7 + 688) = v11;
    sub_10009E68C(v11, *(void *)(v7 + 376));
    if (!*(void *)(v7 + 688)) {
      goto LABEL_41;
    }
  }
  else
  {
    *(_DWORD *)(v7 + 728) = 0;
    *(_WORD *)(v7 + 746) = 0;
    *(_DWORD *)(v7 + 750) = 0;
    *(_WORD *)(v7 + 814) = -1;
    *(void *)(v7 + 456) = 0xFFFFFFFFLL;
    *(_DWORD *)(v7 + 816) = 0;
    uint64_t v12 = sub_10009E548(0);
    *(void *)(v7 + 688) = v12;
    sub_10009E68C(v12, *(void *)(v7 + 376));
    if (!*(void *)(v7 + 688)) {
      goto LABEL_41;
    }
  }
  *(_OWORD *)(v7 + 704) = 0u;
  uint64_t v13 = sub_1000C33A0(28 * *(int *)(v7 + 728));
  *(void *)(v7 + 712) = v13;
  if (!v13) {
    goto LABEL_41;
  }
  *(void *)(v7 + 720) = v13 + 28 * *(int *)(v7 + 728);
  if (qword_100101CC0)
  {
    int v14 = *(_DWORD *)(qword_100101CC0 + 4704);
    int v15 = *(_DWORD *)(qword_100101CC0 + 4708);
  }
  else
  {
    int v14 = 0;
    int v15 = 0;
  }
  uint64_t v16 = sub_10009CAF4(1, v14, v15, *(_DWORD *)(v7 + 552), 1, *(uint64_t **)(v7 + 376), *(void *)(v7 + 384));
  *(void *)(v7 + 840) = v16;
  if (!v16) {
    goto LABEL_41;
  }
  if (!*(void *)(v7 + 592))
  {
    int v17 = qword_100101CC0;
    if (qword_100101CC0) {
      int v17 = *(_DWORD *)(qword_100101CC0 + 4680);
    }
    *(_DWORD *)(v7 + 600) = v17;
    uint64_t v18 = sub_1000C33A0(12 * v17);
    *(void *)(v7 + 592) = v18;
    if (!v18) {
      goto LABEL_41;
    }
  }
  sub_10003B678(v7);
  if (!*(void *)(v7 + 408)) {
    goto LABEL_41;
  }
  *(void *)(v7 + 824) = sub_10005EE38();
  sub_100004178(*(void *)(v7 + 384));
  if (v8) {
    uint64_t v19 = sub_1000A0B80;
  }
  else {
    uint64_t v19 = sub_1000A1EF8;
  }
  if (v8) {
    unint64_t v20 = sub_1000A172C;
  }
  else {
    unint64_t v20 = sub_1000A2548;
  }
  uint64_t v21 = qword_100101CC0;
  *(void *)(v7 + 528) = v19;
  *(void *)(v7 + 536) = v20;
  *(void *)(v7 + 520) = sub_1000A2954;
  if (!v21) {
    goto LABEL_44;
  }
  uint64_t v22 = *(void *)(v21 + 4128);
  if (v22)
  {
    uint64_t v23 = *(void *)(v21 + 4136);
    if (v23)
    {
      uint64_t v24 = sub_1000D307C(*(void *)(v7 + 384), *(void *)(v7 + 376), v9, v23, v22, 1, 0, v8);
      *(void *)(v7 + 472) = v24;
      if (v24)
      {
        uint64_t v21 = qword_100101CC0;
        if (qword_100101CC0) {
          goto LABEL_32;
        }
LABEL_44:
        *(_DWORD *)(v7 + 616) = 0;
        return v7;
      }
LABEL_41:
      sub_10009FE90(v7);
      return 0;
    }
  }
LABEL_32:
  if (*(_DWORD *)(v21 + 4448)) {
    int v25 = v8;
  }
  else {
    int v25 = 0;
  }
  *(_DWORD *)(v7 + 616) = v25;
  if (v25 != 1) {
    return v7;
  }
  int v26 = sub_1000B51F0(*(void *)(v7 + 376));
  if (!sub_1000C3A90((const void **)(v7 + 624), (int *)(v7 + 636), (signed int *)(v7 + 632), 8, 2, v26 + 1))goto LABEL_41; {
  uint64_t v27 = 2 * (int)(sub_1000B51F8(*(uint64_t **)(v7 + 376)) + 1);
  }
  unint64_t v35 = (_DWORD *)sub_1000CD3E8(v27, v28, v29, v30, v31, v32, v33, v34);
  if ((v26 & 0x80000000) == 0)
  {
    unsigned int v36 = 0;
    int v37 = v26 + 1;
    do
    {
      *(_WORD *)(*(void *)(*(void *)(v7 + 624) + 8 * (v36 >> 8)) + 2 * v36) = *((_WORD *)v35 + (int)(sub_1000BB100(*(uint64_t **)(v7 + 376), (unsigned __int16)v36, v35) - 1));
      ++v36;
    }
    while (v37 != v36);
  }
  sub_1000CD4D0(v35, v27);
  return v7;
}

uint64_t sub_10009FE90(uint64_t a1)
{
  uint64_t v2 = *(uint64_t **)(a1 + 704);
  if (v2)
  {
    sub_1000241A8(v2);
    *(void *)(a1 + 704) = 0;
  }
  uint64_t v3 = *(void *)(a1 + 472);
  if (v3) {
    sub_1000D31E4(v3);
  }
  sub_10005EEB0(*(void *)(a1 + 824));
  sub_100006A98(*(void *)(a1 + 408));
  sub_1000C321C(*(void *)(a1 + 592));
  sub_10009CD24(*(void *)(a1 + 840));
  sub_1000C321C(*(void *)(a1 + 712));
  sub_10009E614(*(void *)(a1 + 688));
  sub_1000C321C(*(void *)(a1 + 864));
  sub_1000C3F24(*(void *)(a1 + 624), *(unsigned int *)(a1 + 636), *(_DWORD *)(a1 + 632));
  return sub_1000C321C(a1);
}

uint64_t sub_10009FF28(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v3 = *(void *)(a1 + 840);
  if (!v3) {
    return 1;
  }
  uint64_t result = sub_10009DEE0(v3, a2, a3);
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_10009FF50(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = *(_DWORD **)(a1 + 840);
  if (!v8) {
    return 1;
  }
  uint64_t result = sub_10009E16C(v8, a2, a3, a4, a5, a6, a7, a8);
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_10009FF78(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6, int a7, int a8, int a9, int a10)
{
  if (a5) {
    goto LABEL_2;
  }
  if (a6 != 2)
  {
    if (a6 != 1) {
      goto LABEL_2;
    }
    if (*(_DWORD *)(a1 + 552)) {
      return 0;
    }
  }
  uint64_t v17 = *(void *)(a1 + 840);
  if (qword_100101CC0)
  {
    uint64_t result = sub_10009CED4(v17, *(_DWORD *)(qword_100101CC0 + 4688), *(void *)(qword_100101CC0 + 4696));
    if (!result) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t result = sub_10009CED4(v17, 0, 0);
    if (!result) {
      goto LABEL_3;
    }
  }
  *(_DWORD *)(a1 + 544) = a6;
  *(_DWORD *)(a1 + 644) = 1;
  *(_DWORD *)(a1 + 848) = a8;
  *(_DWORD *)(a1 + 852) = a9;
  LOWORD(v18) = qword_100101CC0;
  if (qword_100101CC0) {
    uint64_t v18 = *(void *)(qword_100101CC0 + 1704);
  }
  *(_WORD *)(a1 + 748) = v18;
  if (a3 < 1)
  {
    *(_DWORD *)(a1 + 816) = 0;
    __int16 v19 = -1;
  }
  else
  {
    *(_DWORD *)(a1 + 816) = 1;
    __int16 v19 = *(_WORD *)(a2 + 2 * (a3 - 1));
  }
  *(_WORD *)(a1 + 814) = v19;
  *(void *)(a1 + 732) = 1;
  *(_WORD *)(*(void *)(a1 + 712) + 28 * *(int *)(a1 + 728) - 28) = -1;
  *(_DWORD *)(a1 + 548) = 1;
  *(_DWORD *)(a1 + 640) = 0;
  uint64_t v20 = qword_100101CC0;
  if (qword_100101CC0)
  {
    *(_DWORD *)(a1 + 820) = *(__int16 *)(qword_100101CC0 + 4656);
    int v21 = a10;
    sub_100039634(a1, *(_DWORD *)(v20 + 5348), *(_DWORD *)(v20 + 5372));
    uint64_t v22 = *(void *)(a1 + 472);
    if (!v22) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  *(_DWORD *)(a1 + 820) = 0;
  int v21 = a10;
  sub_100039634(a1, 0, 0);
  uint64_t v22 = *(void *)(a1 + 472);
  if (v22) {
LABEL_19:
  }
    sub_1000D3EB4(v22, a2, a3, v21);
LABEL_20:
  if (a7 == 2)
  {
    __int16 v23 = qword_100101CC0;
    if (!qword_100101CC0) {
      goto LABEL_32;
    }
    uint64_t v24 = (__int16 *)(qword_100101CC0 + 968);
    goto LABEL_31;
  }
  if (a7 == 1)
  {
    __int16 v23 = qword_100101CC0;
    if (!qword_100101CC0) {
      goto LABEL_32;
    }
    uint64_t v24 = (__int16 *)(qword_100101CC0 + 4568);
    goto LABEL_31;
  }
  if (a7)
  {
    *(_WORD *)(a1 + 742) = 0;
    *(_WORD *)(a1 + 744) = 0;
    if (*(__int16 *)(a1 + 750) > 0) {
      goto LABEL_2;
    }
    goto LABEL_35;
  }
  __int16 v23 = qword_100101CC0;
  if (qword_100101CC0)
  {
    uint64_t v24 = (__int16 *)(qword_100101CC0 + 1632);
LABEL_31:
    __int16 v23 = *v24;
  }
LABEL_32:
  *(_WORD *)(a1 + 742) = v23;
  *(_WORD *)(a1 + 744) = v23;
  if (*(__int16 *)(a1 + 750) > v23) {
    goto LABEL_2;
  }
LABEL_35:
  if (*(__int16 *)(a1 + 748) > 0x4000) {
    goto LABEL_2;
  }
  *(_WORD *)(a1 + 656) = -1;
  *(unsigned char *)(a1 + 658) = -1;
  *(_WORD *)(a1 + 660) = -1;
  memset_pattern16((void *)(a1 + 662), &unk_1000F4890, 4uLL);
  *(_WORD *)(a1 + 662) = 0;
  *(void *)(a1 + 672) = 0xFFFFFFFF00000000;
  *(_WORD *)(a1 + 680) = 0;
  *(_WORD *)(a1 + 660) = sub_1000041E4(*(void *)(a1 + 384));
  *(_WORD *)(a1 + 832) = sub_1000041DC(*(void *)(a1 + 384));
  uint64_t v25 = qword_100101CC0;
  if (qword_100101CC0) {
    int v26 = *(_DWORD *)(qword_100101CC0 + 4552);
  }
  else {
    int v26 = 0;
  }
  int v27 = *(_DWORD *)(a1 + 552);
  if (v26) {
    BOOL v28 = v27 == 0;
  }
  else {
    BOOL v28 = 1;
  }
  if (!v28) {
    int v26 = 0;
  }
  *(_DWORD *)(a1 + 696) = v26;
  if (v26)
  {
    if (v25)
    {
      uint64_t v29 = *(void *)(v25 + 4040);
      if (v29)
      {
        uint64_t v30 = *(void *)(a1 + 704);
        if (v30) {
          sub_1000241E4(v30);
        }
        else {
          *(void *)(a1 + 704) = sub_100024128(*(void *)(a1 + 688), v29);
        }
        *(_DWORD *)(a1 + 648) = 0;
        int v27 = *(_DWORD *)(a1 + 552);
        goto LABEL_53;
      }
    }
LABEL_2:
    uint64_t result = 0;
LABEL_3:
    *(_DWORD *)(a1 + 548) = 3;
    return result;
  }
  *(_DWORD *)(a1 + 648) = v21;
  if (v21)
  {
    BOOL v31 = 1;
    goto LABEL_54;
  }
LABEL_53:
  BOOL v31 = v27 != 0;
LABEL_54:
  *(_DWORD *)(a1 + 652) = v31;
  sub_10009E6D4(*(void *)(a1 + 688), v31, 0);
  if (a7 != 1)
  {
    if (!qword_100101CC0)
    {
      int v34 = 0;
      int v32 = 0;
      int v35 = 0;
      int v33 = *(_DWORD *)(a1 + 432);
      goto LABEL_61;
    }
    int v32 = *(_DWORD *)(qword_100101CC0 + 1592);
    int v33 = *(_DWORD *)(a1 + 432);
    goto LABEL_59;
  }
  int v32 = 1000000;
  int v33 = *(_DWORD *)(a1 + 432);
  if (qword_100101CC0)
  {
LABEL_59:
    int v34 = *(_DWORD *)(qword_100101CC0 + 1600);
    int v35 = *(_DWORD *)(qword_100101CC0 + 1440);
    goto LABEL_61;
  }
  int v34 = 0;
  int v35 = 0;
LABEL_61:
  sub_1000B4440(a1 + 760, v33, v34, v32, v35, 0);
  if (qword_100101CC0)
  {
    if (*(_DWORD *)(qword_100101CC0 + 4464)) {
      sub_10009CC28(*(void *)(a1 + 840));
    }
  }
  *(_DWORD *)(a1 + 756) = 0;
  *(_DWORD *)(a1 + 612) = sub_1000B51F0(*(void *)(a1 + 376));
  *(_DWORD *)(a1 + 604) = 0;
  *(_DWORD *)(a1 + 584) = 0;
  *(_DWORD *)(a1 + 856) = sub_1000B5190(*(void *)(a1 + 376));
  *(void *)(a1 + 880) = sub_1000A0964;
  *(void *)(a1 + 888) = sub_1000A0A2C;
  return 1;
}

uint64_t sub_1000A0348(uint64_t a1)
{
  return *(unsigned int *)(a1 + 548);
}

uint64_t sub_1000A0350(uint64_t a1)
{
  return *(__int16 *)(a1 + 812);
}

uint64_t sub_1000A0358(uint64_t a1, int a2)
{
  uint64_t v2 = *(unsigned int *)(a1 + 548);
  if (v2 == 1 && sub_1000B46DC((unsigned int *)(a1 + 760), a2, 0) == 2)
  {
    if (sub_10009F2C4(*(void *)(a1 + 688))) {
      return 2;
    }
    else {
      return 1;
    }
  }
  return v2;
}

uint64_t sub_1000A03AC(uint64_t result)
{
  *(_DWORD *)(result + 548) = 3;
  return result;
}

uint64_t sub_1000A03B8()
{
  return 0;
}

uint64_t sub_1000A03C0(_WORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8 = a5 - 1;
  if ((int)a5 < 1) {
    return 0;
  }
  int v9 = (unsigned __int8 *)a7;
  unsigned int v11 = a5;
  __int16 v13 = sub_10003A104((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8);
  if (*(_DWORD *)(a6 + 4 * v8) == -4) {
    unsigned int v14 = v8;
  }
  else {
    unsigned int v14 = v11;
  }
  uint64_t v15 = v14 - 1;
  __int16 v16 = a1[375] + v13 + a1[374] * (v14 - 1);
  if (v9 && v14 >= 2)
  {
    do
    {
      if (*v9++) {
        v16 += a1[376];
      }
      --v15;
    }
    while (v15);
  }
  return v16;
}

uint64_t sub_1000A0474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v9 = a2;
  uint64_t v15 = 0;
  uint64_t v11 = 2 * (int)a2;
  uint64_t v12 = (void *)sub_1000CD3E8(v11, a2, a3, a4, a5, a6, a7, a8);
  sub_10009F2E8(*(void *)(a1 + 688), (uint64_t)v12, 0, 0, 0, 0, v9, (_DWORD *)&v15 + 1, &v15, 0, 0, 0, 0);
  if (SHIDWORD(v15) >= 1)
  {
    uint64_t v13 = 0;
    do
    {
      *(_DWORD *)(a3 + 4 * v13) = sub_1000BD96C(*(void *)(a1 + 376), *((unsigned __int16 *)v12 + v13));
      ++v13;
    }
    while (v13 < SHIDWORD(v15));
  }
  sub_1000CD4D0(v12, v11);
  return HIDWORD(v15);
}

uint64_t sub_1000A053C(uint64_t a1)
{
  return sub_1000D34EC(*(long long **)(a1 + 472));
}

uint64_t sub_1000A0544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned char *a13, int a14, unsigned int a15, _DWORD *a16)
{
  int v34 = a7;
  uint64_t v17 = a2;
  uint64_t v35 = 2 * (int)a2;
  unint64_t v19 = sub_1000CD3E8(v35, a2, a3, a4, a5, a6, a7, a8);
  uint64_t v24 = (unsigned __int16 *)v19;
  if ((int)v17 >= 1)
  {
    uint64_t v25 = v17;
    int v26 = (unsigned int *)a3;
    int v27 = (_WORD *)v19;
    do
    {
      unsigned int v28 = *v26++;
      *v27++ = sub_1000BD9AC(*(void *)(a1 + 376), v28);
      --v25;
    }
    while (v25);
  }
  int v29 = sub_10005D30C(a12, a13, a15, a3 + 4 * a14, v20, v21, v22, v23);
  if (v34 >= 1 && v29) {
    int v29 = sub_100026420(a8, v34, v24, v17);
  }
  if (v29)
  {
    *a16 = 0;
    sub_1000CD4D0(v24, v35);
  }
  else
  {
    int v36 = 0;
    v37[0] = v17;
    if (sub_10003BAA4((uint64_t)v24, a9, a10, a11, a4, v37, &v36) && v37[0] >= 1)
    {
      uint64_t v30 = 0;
      do
      {
        *(_DWORD *)(a3 + 4 * v30) = sub_1000BD96C(*(void *)(a1 + 376), v24[v30]);
        ++v30;
      }
      while (v30 < v37[0]);
    }
    *a16 = v36;
    sub_1000CD4D0(v24, v35);
    return v37[0];
  }
  return v17;
}

uint64_t sub_1000A06DC(uint64_t a1)
{
  if (!sub_10009F2C4(*(void *)(a1 + 688))) {
    *(_DWORD *)(a1 + 548) = 3;
  }
  *(_DWORD *)(a1 + 584) = -1;
  *(_WORD *)(a1 + 812) = -1;
  uint64_t result = sub_100039A9C(a1, *(unsigned int *)(a1 + 428), v2, v3, v4, v5, v6, v7);
  if (result)
  {
    return sub_100039FBC(a1);
  }
  return result;
}

uint64_t sub_1000A0754(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = sub_10009CE2C(*(void *)(a1 + 840));
  if (!*(_DWORD *)(a1 + 616)) {
    return v4;
  }
  int v5 = sub_1000B5C44(*(uint64_t **)(a1 + 376), a2);
  uint64_t v6 = (int16x8_t *)sub_1000C33A0(2 * v5);
  if (v6)
  {
    uint64_t v7 = (uint64_t)v6;
    sub_1000B594C(*(void *)(a1 + 376), a2, v6, v5);
    if (v5 >= 1)
    {
      uint64_t v8 = v5;
      int v9 = (unsigned __int16 *)v7;
      do
      {
        unsigned int v10 = *v9++;
        uint64_t v4 = sub_1000A0824(a1, v10);
        if (!v4) {
          break;
        }
        --v8;
      }
      while (v8);
    }
    sub_1000C321C(v7);
    return v4;
  }
  return 0;
}

uint64_t sub_1000A0824(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = sub_10009CE2C(*(void *)(a1 + 840));
  if (v4)
  {
    if (*(_DWORD *)(a1 + 616))
    {
      uint64_t v4 = sub_1000C3A90((const void **)(a1 + 624), (int *)(a1 + 636), (signed int *)(a1 + 632), 8, 2, a2 + 1);
      if (v4)
      {
        uint64_t v5 = 2 * (int)(sub_1000B51F8(*(uint64_t **)(a1 + 376)) + 1);
        uint64_t v13 = (_DWORD *)sub_1000CD3E8(v5, v6, v7, v8, v9, v10, v11, v12);
        *(_WORD *)(*(void *)(*(void *)(a1 + 624) + 8 * (a2 >> 8)) + 2 * a2) = *((_WORD *)v13 + (int)(sub_1000BB100(*(uint64_t **)(a1 + 376), a2, v13) - 1));
        sub_1000CD4D0(v13, v5);
      }
    }
  }
  return v4;
}

uint64_t sub_1000A08EC(uint64_t a1)
{
  *(_DWORD *)(a1 + 548) = 4;
  return 1;
}

uint64_t sub_1000A0928(uint64_t a1)
{
  *(_DWORD *)(a1 + 548) = 4;
  return 1;
}

uint64_t sub_1000A095C(uint64_t a1)
{
  return nullsub_1(*(void *)(a1 + 472));
}

uint64_t sub_1000A0964(uint64_t result, __int16 a2)
{
  if (*(int *)(result + 604) >= 1)
  {
    uint64_t v2 = result;
    int v3 = 0;
    __int16 v4 = *(_WORD *)(result + 750) + a2;
    __int16 v6 = 0;
    uint64_t v5 = (_WORD *)(*(void *)(result + 592) + 8);
    do
    {
      if (!*(_DWORD *)(v2 + 856) || *(__int16 *)(v2 + 456) == -1)
      {
        uint64_t result = 0;
      }
      else
      {
        __int16 v6 = sub_1000BD964(*(void *)(v2 + 376), (unsigned __int16)*(v5 - 1), 0);
        uint64_t result = sub_1000BDCD4(*(void *)(v2 + 376), (uint64_t)&v6, 1u, *(unsigned __int16 *)(v2 + 456));
      }
      _WORD *v5 = v4 + result;
      *((_DWORD *)v5 - 2) = -1;
      ++v3;
      v5 += 6;
    }
    while (v3 < *(_DWORD *)(v2 + 604));
  }
  return result;
}

uint64_t sub_1000A0A2C(uint64_t a1, __int16 a2, unsigned int a3, int a4)
{
  uint64_t v7 = *(void *)(a1 + 376);
  uint64_t v8 = *(void *)(a1 + 592);
  uint64_t result = sub_1000BD964(v7, a3, 0);
  if (*(int *)(a1 + 604) >= 1)
  {
    unsigned int v10 = result;
    int v11 = 0;
    __int16 v17 = 0;
    do
    {
      __int16 v12 = a2;
      if (*(_DWORD *)(a1 + 856))
      {
        __int16 v17 = sub_1000BD964(v7, *(unsigned __int16 *)(v8 + 6), 0);
        uint64_t result = sub_1000BDCD4(v7, (uint64_t)&v17, 1u, v10);
        __int16 v12 = result + a2;
      }
      int v13 = *(__int16 *)(v8 + 8);
      int v14 = *(_DWORD *)(a1 + 696);
      if (v13 <= v12)
      {
        if (v14 && *(_DWORD *)v8 != a4) {
          uint64_t result = (uint64_t)sub_1000241EC(*(uint64_t **)(a1 + 704), a4, *(_DWORD *)v8, v12 - (unsigned __int16)v13, v12 - *(_WORD *)(a1 + 736));
        }
      }
      else
      {
        if (v14)
        {
          int v15 = *(_DWORD *)v8;
          if (v13 != 0x4000 && v15 != a4) {
            uint64_t result = (uint64_t)sub_1000241EC(*(uint64_t **)(a1 + 704), v15, a4, (unsigned __int16)v13 - v12, (unsigned __int16)v13 - *(_WORD *)(a1 + 736));
          }
        }
        *(_WORD *)(v8 + 8) = v12;
        *(_DWORD *)uint64_t v8 = a4;
      }
      v8 += 12;
      ++v11;
    }
    while (v11 < *(_DWORD *)(a1 + 604));
  }
  return result;
}

unint64_t sub_1000A0B80(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 472);
  uint64_t v3 = *(void *)(a1 + 376);
  uint64_t v102 = *(void *)(a1 + 384);
  *(_WORD *)(*(void *)(a1 + 592) + 6) = -1;
  *(_WORD *)(*(void *)(a1 + 592) + 8) = 0;
  *(_DWORD *)(a1 + 604) = 0;
  int v4 = *(__int16 *)(a1 + 736);
  unint64_t result = v4 + *(unsigned __int16 *)(a1 + 742);
  int v6 = *(_DWORD *)(a1 + 820);
  if (*(_DWORD *)(a1 + 732) > v6) {
    unint64_t result = sub_10005EF28(*(int **)(a1 + 824), v6, v4, (__int16)result);
  }
  int v128 = 0;
  *(_WORD *)(a1 + 744) = result;
  int v7 = *(__int16 *)(a1 + 662);
  uint64_t v113 = v2;
  if (v7 <= (__int16)result)
  {
    LODWORD(v126) = 0;
    LOWORD(v125) = 0;
    uint64_t v129 = 0;
    if (*(int *)(a1 + 584) < 1)
    {
LABEL_16:
      *(_WORD *)(*(void *)(a1 + 592) + 12 * *(int *)(a1 + 604) + 6) = -1;
      *(_WORD *)(*(void *)(a1 + 592) + 12 * *(int *)(a1 + 604) + 8) = 0;
LABEL_17:
      uint64_t v20 = v113;
      if (!v113) {
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v8 = 0;
      __int16 v9 = *(_WORD *)(a1 + 750) + v7;
      while (1)
      {
        while (1)
        {
          uint64_t v11 = *(unsigned __int16 *)(*(void *)(a1 + 568) + 2 * v8);
          if (!*(_DWORD *)(a1 + 856) || *(__int16 *)(a1 + 456) == -1)
          {
            __int16 v12 = 0;
          }
          else
          {
            LOWORD(v125) = sub_1000BD964(*(void *)(a1 + 376), *(unsigned __int16 *)(*(void *)(a1 + 568) + 2 * v8), 0);
            __int16 v12 = sub_1000BDCD4(*(void *)(a1 + 376), (uint64_t)&v125, 1u, *(unsigned __int16 *)(a1 + 456));
          }
          __int16 v13 = v9 + v12;
          unint64_t result = sub_10009D254(*(void *)(a1 + 840), v11, &v129, 0, (int *)&v126);
          if ((int)v126 >= 2) {
            break;
          }
          int v10 = sub_1000055F0(*(void *)(a1 + 384), word_100101D20, *v129, 0, v14, v15, v16, v17);
          unint64_t result = sub_1000A2D0C(a1, v11, v13, -1, v10, (unsigned __int16)word_100101D20[v10]);
          if (!result) {
            goto LABEL_17;
          }
          if (++v8 >= *(int *)(a1 + 584)) {
            goto LABEL_16;
          }
        }
        int v18 = *(_DWORD *)(a1 + 604);
        if (v18 == *(_DWORD *)(a1 + 600) - 1) {
          break;
        }
        uint64_t v19 = *(void *)(a1 + 592) + 12 * v18;
        *(_DWORD *)(a1 + 604) = v18 + 1;
        *(_WORD *)(v19 + 6) = v11;
        unint64_t result = sub_100005304(*(void *)(a1 + 384), v129[(int)v126 - 2], v129[(int)v126 - 1], 0, v14, v15, v16, v17);
        *(_WORD *)(v19 + 4) = result;
        *(_WORD *)(v19 + 8) = v13;
        *(_DWORD *)uint64_t v19 = -1;
        *(unsigned char *)(v19 + 10) = 0;
        if (++v8 >= *(int *)(a1 + 584)) {
          goto LABEL_16;
        }
      }
      *(_DWORD *)(a1 + 548) = 3;
      uint64_t v20 = v113;
      if (!v113) {
        goto LABEL_21;
      }
    }
    unint64_t result = sub_1000D3BAC(v20, 0, 0, 0, *(__int16 *)(a1 + 666), *(_WORD *)(a1 + 812), 65534, *(_WORD *)(a1 + 660), *(_DWORD *)(a1 + 756) + *(__int16 *)(a1 + 662), 0x4000, &v128);
    if (v128)
    {
LABEL_19:
      *(_DWORD *)(a1 + 548) = 3;
      return result;
    }
    goto LABEL_21;
  }
  *(_WORD *)(a1 + 662) = 0x4000;
  *(_WORD *)(a1 + 680) = 0x4000;
LABEL_21:
  uint64_t v21 = *(void *)(a1 + 712) + 28 * *(int *)(a1 + 732);
  uint64_t v22 = *(void *)(a1 + 720);
  long long v23 = *(_OWORD *)(v21 - 28);
  *(_OWORD *)(v22 - 16) = *(_OWORD *)(v21 - 16);
  *(_OWORD *)(v22 - 28) = v23;
  if (*(_DWORD *)(a1 + 732) == 1) {
    return result;
  }
  uint64_t v24 = (_OWORD *)(v22 - 56);
  uint64_t v25 = (unsigned __int16 *)(v21 - 56);
  int v26 = *(__int16 *)(a1 + 746);
  if (v26 >= (__int16)(*(_WORD *)(a1 + 744) - *(_WORD *)(a1 + 736))) {
    LOWORD(v26) = *(_WORD *)(a1 + 744) - *(_WORD *)(a1 + 736);
  }
  uint64_t v104 = v3;
  __int16 v107 = v26;
  if (qword_100101CC0)
  {
    uint64_t v27 = *(void *)(qword_100101CC0 + 1696);
    if (v27 >= (__int16)v26) {
      LOWORD(v27) = v26;
    }
  }
  else
  {
    LODWORD(v27) = (__int16)v26 & ((__int16)v26 >> 31);
  }
  __int16 v108 = v27;
  int v28 = 0;
  uint64_t v103 = a1 + 814;
  int v122 = 1;
  while (1)
  {
    while (1)
    {
      uint64_t v127 = 0;
      uint64_t v125 = 0;
      int v126 = 0;
      unsigned int v29 = *v25;
      unint64_t result = sub_10009D254(*(void *)(a1 + 840), *v25, &v126, 0, (int *)&v127 + 1);
      int v30 = HIDWORD(v127);
      BOOL v31 = HIDWORD(v127) == 1;
      if (*((unsigned char *)v25 + 2) == 1 && HIDWORD(v127) != 1) {
        break;
      }
      if (v25[12] <= *(_WORD *)(a1 + 744))
      {
        int v120 = v28;
LABEL_60:
        long long v39 = *(_OWORD *)v25;
        *(_OWORD *)((char *)v24 + 12) = *(_OWORD *)(v25 + 6);
        unint64_t v121 = v24;
        *uint64_t v24 = v39;
        int v40 = (__int16)(v25[3] - *(_WORD *)(a1 + 736));
        unsigned int v41 = *((unsigned __int8 *)v25 + 2);
        BOOL v42 = *((unsigned char *)v25 + 2) == 0;
        ++v122;
        int v43 = *(_DWORD *)(a1 + 756) + (__int16)v25[3];
        if (v41 >= 2)
        {
          unint64_t result = v113;
          if (HIDWORD(v127) == v41)
          {
            if (v113)
            {
              if (v40 <= v108)
              {
                unint64_t result = sub_1000D3BAC(v113, 1, v30 == 1, 0, (__int16)v25[5], *(_WORD *)(a1 + 812), v29, v25[2], v43, 0x4000, &v128);
                if (v128) {
                  goto LABEL_19;
                }
              }
            }
          }
          if (v25 == *(unsigned __int16 **)(a1 + 712)) {
            goto LABEL_137;
          }
          uint64_t v44 = v25 - 14;
          uint64_t v24 = (_OWORD *)((char *)v121 - 28);
          goto LABEL_29;
        }
        if (v40 > v107) {
          goto LABEL_68;
        }
        int v123 = 0x40000000;
        unsigned int v124 = -1;
        unsigned int v45 = sub_1000BD964(*(void *)(a1 + 376), v29, 0);
        int v118 = sub_1000BDCD4(v104, v103, *(_DWORD *)(a1 + 816), v45);
        int v114 = *(__int16 *)(a1 + 736);
        int v111 = *(_DWORD *)(a1 + 756);
        if (!*(_DWORD *)(a1 + 696) || qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 4736))
        {
          BOOL v46 = 1;
        }
        else
        {
          sub_10009F2D4(*(void *)(a1 + 688), &v124, &v123);
          BOOL v46 = v123 == 0x40000000;
        }
        BOOL v109 = v46;
        unint64_t result = sub_10009E750(*(unsigned int **)(a1 + 688), *((unsigned int *)v25 + 4), v29, 0, v42, v40, *(_WORD *)(a1 + 812));
        int v117 = result;
        if (v113 && v40 <= v108)
        {
          int v47 = 0;
          __int16 v48 = v25[2];
          if (v30 == 1 && !v25[2])
          {
            uint64_t v49 = *v126;
            uint64_t v50 = sub_10009F25C(*(void *)(a1 + 688), *((_DWORD *)v25 + 4));
            if (v50 == 65534)
            {
              uint64_t v55 = 0;
            }
            else
            {
              sub_10009D254(*(void *)(a1 + 840), v50, &v125, 0, (int *)&v127);
              uint64_t v55 = *v125;
            }
            __int16 v48 = sub_100005304(v102, 0, v49, v55, v51, v52, v53, v54);
            int v47 = 1;
          }
          unint64_t result = sub_1000D3BAC(v113, 0, v31, v47, (__int16)v25[5], *(_WORD *)(a1 + 812), v29, v48, v43, 0x4000, &v128);
          if (v128) {
            goto LABEL_19;
          }
        }
        int v56 = v117;
        int v57 = v118 + v40 + v114 + v111;
        if (!v109)
        {
          int v58 = v124;
          if (v117 != v124)
          {
            __int16 v59 = v123;
            __int16 v60 = v123 - v57;
            if (v123 <= v57)
            {
              __int16 v60 = v57 - v123;
              __int16 v66 = v40;
              int v67 = v117;
            }
            else
            {
              int v115 = *(_DWORD *)(a1 + 756);
              __int16 v61 = *(_WORD *)(a1 + 736);
              unsigned int v62 = sub_10009F29C(*(void *)(a1 + 688), v124);
              unsigned int v63 = sub_1000BD964(v104, v62, 0);
              __int16 v64 = sub_1000BDCD4(v104, v103, *(_DWORD *)(a1 + 816), v63);
              __int16 v65 = v115 + v61;
              int v56 = v117;
              __int16 v66 = v59 - (v65 + v64 - v118);
              int v67 = v124;
              int v58 = v117;
            }
            unint64_t result = (unint64_t)sub_1000241EC(*(uint64_t **)(a1 + 704), v67, v58, v60, v66);
          }
        }
        if (v56 == -1) {
          goto LABEL_19;
        }
        if (v41)
        {
          int v68 = v117;
          if (*(_DWORD *)(a1 + 852)) {
            goto LABEL_93;
          }
LABEL_96:
          uint64_t v69 = *v126;
          if (*((unsigned char *)v25 + 2))
          {
            if (SHIDWORD(v127) >= 2)
            {
              uint64_t v70 = v126 + 1;
LABEL_103:
              uint64_t v71 = v69;
              uint64_t v69 = *v70;
              goto LABEL_104;
            }
            uint64_t v72 = sub_10009F25C(*(void *)(a1 + 688), *((_DWORD *)v25 + 4));
            if (v72 != 65534)
            {
              sub_10009D254(*(void *)(a1 + 840), v72, &v125, 0, (int *)&v127);
              uint64_t v70 = v125;
              goto LABEL_103;
            }
            uint64_t v71 = v69;
            uint64_t v69 = 0;
          }
          else
          {
            uint64_t v71 = 0;
          }
LABEL_104:
          __int16 v73 = *(_WORD *)(a1 + 736);
          __int16 v74 = *(_WORD *)(a1 + 748);
          unsigned int v116 = v25[2];
          uint64_t v112 = *(void *)(a1 + 376);
          unint64_t result = sub_1000BD964(v112, v29, 0);
          unsigned int v110 = result;
          if (*(int *)(a1 + 584) < 1) {
            goto LABEL_68;
          }
          uint64_t v75 = 0;
          v131[0] = 0;
          __int16 v119 = v73 + v74 + v40;
          __int16 v130 = 0;
          uint64_t v129 = 0;
          unsigned int v105 = v69;
          unsigned int v106 = v71;
LABEL_108:
          unint64_t v77 = *(unsigned __int16 *)(*(void *)(a1 + 568) + 2 * v75);
          uint64_t v78 = *(void *)(*(void *)(a1 + 624) + ((v77 >> 5) & 0x7F8));
          uint64_t v79 = *(_WORD *)(*(void *)(a1 + 568) + 2 * v75);
          uint64_t v80 = *(unsigned __int16 *)(v78 + 2 * v79);
          if (v71)
          {
            unint64_t result = sub_100005794(*(void *)(a1 + 384), *(unsigned __int16 *)(v78 + 2 * v79), v71, v69, v116);
            if (!result) {
              goto LABEL_107;
            }
          }
          LOWORD(v81) = v119;
          if (*(_DWORD *)(a1 + 856))
          {
            __int16 v130 = sub_1000BD964(v112, v77, 0);
            unint64_t result = sub_1000BDCD4(v112, (uint64_t)&v130, 1u, v110);
            int v81 = (__int16)(result + v119);
            if (v81 > *(__int16 *)(a1 + 744)) {
              goto LABEL_107;
            }
          }
          sub_10009D254(*(void *)(a1 + 840), v77, &v129, 0, v131);
          uint64_t v86 = *(void *)(a1 + 384);
          if (v131[0] < 2)
          {
            int v76 = sub_1000055F0(v86, word_100101D20, v80, v71, v82, v83, v84, v85);
            unint64_t result = sub_1000A2D0C(a1, v77, (__int16)v81, v68, v76, (unsigned __int16)word_100101D20[v76]);
            if (result) {
              goto LABEL_107;
            }
            goto LABEL_68;
          }
          unint64_t result = sub_100005304(v86, v129[v131[0] - 2], v80, v71, v82, v83, v84, v85);
          __int16 v87 = result;
          int v88 = *(_DWORD *)(a1 + 604);
          uint64_t v89 = *(void *)(a1 + 592);
          int v90 = 0;
          int v91 = v88 - 1;
          if (v88 >= 1)
          {
            while (1)
            {
              uint64_t v92 = (uint64_t)(v90 + v91 + (v90 + v91 < 0)) >> 1;
              unsigned int v93 = *(unsigned __int16 *)(v89 + 12 * ((v90 + v91) / 2) + 6);
              if (v93 > v77) {
                goto LABEL_115;
              }
              if (v93 < v77) {
                goto LABEL_120;
              }
              unsigned int v94 = *(unsigned __int16 *)(v89 + 12 * ((v90 + v91) / 2) + 4);
              if (v94 > result)
              {
LABEL_115:
                int v91 = (v90 + v91) / 2 - 1;
                if (v90 > (int)v92 - 1) {
                  break;
                }
              }
              else
              {
                if (v94 >= result)
                {
                  unsigned int v96 = (__int16 *)(v89 + 12 * ((v90 + v91) / 2));
                  int v98 = v96[4];
                  int v99 = *(_DWORD *)(a1 + 696);
                  int v68 = v117;
                  uint64_t v71 = v106;
                  if (v98 <= (__int16)v81) {
                    goto LABEL_133;
                  }
LABEL_125:
                  if (v99)
                  {
                    int v100 = *(_DWORD *)v96;
                    if (v98 != 0x4000 && v100 != v68) {
                      unint64_t result = (unint64_t)sub_1000241EC(*(uint64_t **)(a1 + 704), v100, v68, (unsigned __int16)v98 - (unsigned __int16)v81, (unsigned __int16)v98 - *(_WORD *)(a1 + 736));
                    }
                  }
                  v96[4] = v81;
                  *(_DWORD *)unsigned int v96 = v68;
LABEL_107:
                  if (++v75 >= *(int *)(a1 + 584)) {
                    goto LABEL_68;
                  }
                  goto LABEL_108;
                }
LABEL_120:
                int v90 = (v90 + v91) / 2 + 1;
                if ((int)v92 + 1 > v91) {
                  break;
                }
              }
            }
          }
          if (v88 != *(_DWORD *)(a1 + 600) - 1)
          {
            int v95 = v90;
            unsigned int v96 = (__int16 *)(v89 + 12 * v90);
            if (v90 < v88) {
              unint64_t result = (unint64_t)j__memmove(v96 + 6, v96, 12 * (v88 - v90));
            }
            uint64_t v97 = v89 + 12 * v95;
            *(_WORD *)(v97 + 6) = v77;
            *(_WORD *)(v97 + 4) = v87;
            *(_WORD *)(v97 + 8) = 0x4000;
            *(unsigned char *)(v97 + 10) = 0;
            *(_DWORD *)(a1 + 604) = v88 + 1;
            *(_DWORD *)(v89 + 12 * (v88 + 1) + 6) = 0xFFFF;
            uint64_t v69 = v105;
            uint64_t v71 = v106;
            int v98 = v96[4];
            int v99 = *(_DWORD *)(a1 + 696);
            int v68 = v117;
            if (v98 > (__int16)v81) {
              goto LABEL_125;
            }
LABEL_133:
            if (v99 && *(_DWORD *)v96 != v68) {
              unint64_t result = (unint64_t)sub_1000241EC(*(uint64_t **)(a1 + 704), v68, *(_DWORD *)v96, (unsigned __int16)v81 - (unsigned __int16)v98, (unsigned __int16)v81 - *(_WORD *)(a1 + 736));
            }
            goto LABEL_107;
          }
          *(_DWORD *)(a1 + 548) = 3;
LABEL_68:
          if (v25 == *(unsigned __int16 **)(a1 + 712)) {
            goto LABEL_137;
          }
          uint64_t v44 = v25 - 14;
          uint64_t v24 = (_OWORD *)((char *)v121 - 28);
LABEL_29:
          int v28 = v120;
          uint64_t v25 = v44;
        }
        else
        {
          int v68 = v117;
          unint64_t result = sub_10009EBBC(*(void *)(a1 + 688), v117, v57);
          if (*(_DWORD *)(a1 + 848)) {
            goto LABEL_96;
          }
LABEL_93:
          if (v25 == *(unsigned __int16 **)(a1 + 712)) {
            goto LABEL_137;
          }
          v25 -= 14;
          uint64_t v24 = (_OWORD *)((char *)v121 - 28);
          int v28 = v120;
        }
      }
      else
      {
        if (v25 == *(unsigned __int16 **)(a1 + 712)) {
          goto LABEL_137;
        }
        v25 -= 14;
      }
    }
    int v33 = (__int16)v25[12];
    if (v28)
    {
      if (v33 <= *(__int16 *)(a1 + 744)) {
        goto LABEL_59;
      }
      goto LABEL_55;
    }
    unint64_t v34 = *(void *)(a1 + 712);
    uint64_t v35 = v25 - 14;
    if ((unint64_t)(v25 - 14) < v34) {
      break;
    }
    signed __int16 v36 = v25[12];
    while (*v25 == *v35 && *((unsigned char *)v35 + 2) == 1)
    {
      if ((__int16)v35[12] < v36) {
        signed __int16 v36 = v35[12];
      }
      v35 -= 14;
      if ((unint64_t)v35 < v34) {
        goto LABEL_50;
      }
    }
    int v37 = *(__int16 *)(a1 + 744);
    if (v37 >= v36) {
      goto LABEL_54;
    }
    int v28 = 0;
    uint64_t v25 = v35;
  }
  signed __int16 v36 = v25[12];
LABEL_50:
  int v37 = *(__int16 *)(a1 + 744);
  if (v37 >= v36)
  {
LABEL_54:
    int v28 = -1227133513 * ((unint64_t)((char *)v25 - (char *)v35) >> 2);
    if (v33 <= (__int16)v37)
    {
LABEL_59:
      int v120 = v28 - 1;
      goto LABEL_60;
    }
LABEL_55:
    if (*(int *)(a1 + 560) >= 1)
    {
      uint64_t v38 = 0;
      do
        v25[v38++ + 3] = 0x4000;
      while (v38 < *(int *)(a1 + 560));
    }
    v25[12] = 0x4000;
    goto LABEL_59;
  }
LABEL_137:
  *(_DWORD *)(a1 + 732) = v122;
  return result;
}

uint64_t sub_1000A172C(uint64_t a1, unsigned __int16 **a2, unint64_t *a3, uint64_t a4, void *a5)
{
  int v78 = 0;
  int v76 = 0;
  unint64_t v77 = 0;
  __int16 v9 = *a2;
  unint64_t v10 = *a3;
  uint64_t v11 = *a5;
  uint64_t result = sub_10009D254(*(void *)(a1 + 840), **a2, &v76, &v77, &v78);
  int v17 = *(unsigned __int16 *)(v11 + 6);
  int v18 = *v9;
  int v19 = *((unsigned __int8 *)v9 + 2);
  BOOL v20 = v17 == v18;
  if (v17 != v18)
  {
    int v22 = v78;
    BOOL v23 = v78 == v19;
    uint64_t v72 = a2;
    __int16 v73 = a3;
    if (v78 != v19)
    {
      int v26 = -1;
      __int16 v25 = -1;
      __int16 v24 = 0x4000;
      *a5 = v11;
      if (v22 == v19 && v22 != 1) {
LABEL_39:
      }
        __int16 v25 = *(_WORD *)(a1 + 812);
LABEL_40:
      BOOL v42 = v22 != 2 || v24 == 0x4000;
      if (v22 > v19)
      {
        unsigned int v43 = *((unsigned __int8 *)v9 + 2);
        if (v43 < 2)
        {
          __int16 v24 = 0x4000;
          int v26 = -1;
          __int16 v25 = -1;
          if (v43 == 1) {
            goto LABEL_80;
          }
          goto LABEL_76;
        }
        long long v44 = *(_OWORD *)v9;
        *(_OWORD *)(v10 + 12) = *(_OWORD *)(v9 + 6);
        *(_OWORD *)unint64_t v10 = v44;
        uint64_t result = sub_1000A3054(a1, 0x4000, -1, -1, v10);
        __int16 v24 = v9[3];
        __int16 v25 = v9[5];
        int v26 = *((_DWORD *)v9 + 4);
        v9 += 14;
        v10 += 28;
      }
      unsigned int v45 = *((unsigned __int8 *)v9 + 2);
      if (*((unsigned __int8 *)v9 - 26) - 1 == v45)
      {
        uint64_t v46 = 0;
        while (1)
        {
          int v47 = &v9[v46];
          __int16 v13 = (_OWORD *)(v10 + v46 * 2);
          if (v45 < 2 || *(v47 - 14) != *v47) {
            break;
          }
          long long v48 = *(_OWORD *)v47;
          *(_OWORD *)((char *)v13 + 12) = *(_OWORD *)(v47 + 6);
          *__int16 v13 = v48;
          uint64_t result = sub_1000A3054(a1, v24, v25, v26, (uint64_t)v13);
          __int16 v24 = v9[v46 + 3];
          __int16 v25 = v9[v46 + 5];
          int v26 = *(_DWORD *)&v9[v46 + 8];
          int v49 = LOBYTE(v9[v46 + 1]) - 1;
          unsigned int v45 = LOBYTE(v9[v46 + 15]);
          v46 += 14;
          if (v49 != v45)
          {
            __int16 v9 = (unsigned __int16 *)((char *)v9 + v46 * 2);
            uint64_t v50 = v9 - 14;
            v10 += v46 * 2;
            if (*((unsigned __int8 *)v9 - 26) >= 3u) {
              goto LABEL_57;
            }
            goto LABEL_73;
          }
        }
        uint64_t v50 = v47 - 14;
        __int16 v9 = (unsigned __int16 *)((char *)v9 + v46 * 2);
        v10 += v46 * 2;
        if (*((unsigned __int8 *)v47 - 26) >= 3u) {
          goto LABEL_57;
        }
      }
      else
      {
        uint64_t v50 = v9 - 14;
        if (*((unsigned __int8 *)v9 - 26) >= 3u)
        {
LABEL_57:
          if (v24 != 0x4000)
          {
            if ((unint64_t)(v9 - 28) <= v10)
            {
LABEL_101:
              *uint64_t v72 = v9;
              unint64_t *v73 = v10;
              goto LABEL_102;
            }
            *(_DWORD *)(v10 + 6) = 1073758208;
            *(_WORD *)(v10 + 4) = v77[*((unsigned __int8 *)v50 + 2) - 2];
            *(_WORD *)unint64_t v10 = *v50;
            *(unsigned char *)(v10 + 2) = *((unsigned char *)v50 + 2) - 1;
            uint64_t result = sub_1000A3054(a1, v24, v25, v26, v10);
            v10 += 28;
          }
LABEL_75:
          *uint64_t v72 = v9;
          unint64_t *v73 = v10;
          return result;
        }
      }
LABEL_73:
      if (v78 >= 2)
      {
        if (v24 == 0x4000) {
          goto LABEL_75;
        }
        goto LABEL_80;
      }
LABEL_76:
      if (v42)
      {
        if (*v9 != v18) {
          goto LABEL_86;
        }
        goto LABEL_78;
      }
LABEL_80:
      if (*v9 != v18 || !*((unsigned char *)v9 + 2))
      {
        uint64_t result = sub_1000055F0(*(void *)(a1 + 384), word_100101D20, *v76, v76[1], (uint64_t)v13, v14, v15, v16);
        if ((result & 0x80000000) == 0)
        {
          uint64_t v60 = 0;
          uint64_t v61 = (int)result;
          int v75 = (unsigned __int16)word_100101D20[(int)result];
          uint64_t v62 = (result + 1);
          do
          {
            if (v60 >= v61 || (unsigned __int16)word_100101D20[v60] != v75)
            {
              if ((unint64_t)(v9 - 28) <= v10) {
                goto LABEL_101;
              }
              *(_DWORD *)(v10 + 6) = 1073758208;
              *(_WORD *)(v10 + 4) = word_100101D20[v60];
              *(_WORD *)unint64_t v10 = v18;
              *(unsigned char *)(v10 + 2) = 1;
              uint64_t result = sub_1000A3054(a1, v24, v25, v26, v10);
              v10 += 28;
            }
            ++v60;
          }
          while (v62 != v60);
        }
        if (*v9 != v18) {
          goto LABEL_100;
        }
        __int16 v25 = -1;
        int v26 = -1;
        __int16 v24 = 0x4000;
        long long v63 = *(_OWORD *)(v9 + 6);
        long long v64 = *(_OWORD *)v9;
        v9 += 14;
        *(_OWORD *)unint64_t v10 = v64;
        *(_OWORD *)(v10 + 12) = v63;
        if (!*(unsigned char *)(v10 + 2)) {
          goto LABEL_103;
        }
LABEL_99:
        uint64_t result = sub_1000A3054(a1, v24, v25, v26, v10);
        goto LABEL_107;
      }
      uint64_t v55 = 0;
      do
      {
        int v56 = &v9[v55];
        int v57 = (_OWORD *)(v10 + v55 * 2);
        long long v58 = *(_OWORD *)&v9[v55];
        *(_OWORD *)((char *)v57 + 12) = *(_OWORD *)&v9[v55 + 6];
        *int v57 = v58;
        uint64_t result = sub_1000A3054(a1, v24, v25, v26, v10 + v55 * 2);
        int v59 = v9[v55 + 14];
        if (v59 != v18) {
          break;
        }
        v55 += 14;
      }
      while (*((unsigned char *)v56 + 30) == 1);
      __int16 v24 = v56[3];
      __int16 v25 = v56[5];
      __int16 v9 = v56 + 14;
      unint64_t v10 = (unint64_t)v57 + 28;
      int v26 = *((_DWORD *)v56 + 4);
      if (v59 != v18)
      {
LABEL_86:
        if (v24 != 0x4000)
        {
          if ((unint64_t)(v9 - 28) > v10)
          {
            *(_WORD *)unint64_t v10 = v18;
            *(unsigned char *)(v10 + 2) = 0;
            *(_WORD *)(v10 + 4) = *(_WORD *)(a1 + 660);
            *(_WORD *)(v10 + 6) = 0x4000;
LABEL_103:
            int v79 = 0;
            uint64_t result = sub_100015A08(*(void *)(a1 + 384), *(unsigned __int16 *)(v10 + 4), &v79);
            int v65 = *(__int16 *)(v10 + 6);
            if (v65 >= v24)
            {
              *(_WORD *)(v10 + 6) = v24;
              *(_WORD *)(v10 + 10) = v25;
              LOWORD(v65) = v24;
              *(_DWORD *)(v10 + 16) = v26;
            }
            if (*(__int16 *)(a1 + 744) >= (__int16)v65)
            {
              uint64_t v68 = *(unsigned __int16 *)result;
              uint64_t result = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 384) + 1792) + 2 * v68);
              int v67 = v72;
              __int16 v66 = v73;
              if (result == 0x4000)
              {
                uint64_t result = sub_100015A48(*(void *)(a1 + 384), v68);
                LOWORD(v65) = *(_WORD *)(v10 + 6);
              }
              __int16 v69 = result - *(_WORD *)(a1 + 740) + v65;
              *(_WORD *)(v10 + 6) = v69;
              *(_WORD *)(v10 + 24) = v69;
              if (v69 < *(__int16 *)(a1 + 736))
              {
                *(_WORD *)(a1 + 736) = v69;
                *(_WORD *)(a1 + 808) = *(_WORD *)(v10 + 4);
                __int16 v69 = *(_WORD *)(v10 + 24);
              }
              uint64_t v70 = *(void *)(a1 + 824);
              if (*(_DWORD *)v70 > v69) {
                ++*(_WORD *)(*(void *)(v70 + 8) + 2 * v69);
              }
              goto LABEL_108;
            }
            *(_WORD *)(v10 + 24) = 0x4000;
            *(_WORD *)(v10 + 6) = 0x4000;
LABEL_107:
            int v67 = v72;
            __int16 v66 = v73;
LABEL_108:
            *int v67 = v9;
            *__int16 v66 = v10 + 28;
            return result;
          }
LABEL_102:
          *(_DWORD *)(a1 + 548) = 3;
          return result;
        }
LABEL_100:
        *uint64_t v72 = v9;
        unint64_t *v73 = v10;
        return result;
      }
LABEL_78:
      long long v53 = *(_OWORD *)(v9 + 6);
      long long v54 = *(_OWORD *)v9;
      v9 += 14;
      *(_OWORD *)unint64_t v10 = v54;
      *(_OWORD *)(v10 + 12) = v53;
      if (!*(unsigned char *)(v10 + 2)) {
        goto LABEL_103;
      }
      goto LABEL_99;
    }
    __int16 v74 = a5;
LABEL_11:
    __int16 v24 = 0x4000;
    __int16 v25 = -1;
    int v26 = -1;
    BOOL v27 = 1;
    int v71 = *((unsigned __int8 *)v9 + 2);
    BOOL v28 = v20;
    BOOL v29 = 1;
    do
    {
      if (v20 && ((BOOL v30 = v22 > v19, v31 = *(unsigned __int16 *)(v11 + 4), v32 = v9[2], v30 || !v27) || v31 <= v32))
      {
        __int16 v35 = *(_WORD *)(v11 + 8);
        int v36 = *(_DWORD *)v11;
        if (v31 != v32 || !v23)
        {
          if ((unint64_t)(v9 - 28) <= v10) {
            goto LABEL_102;
          }
          *(_DWORD *)(v10 + 6) = 1073758208;
          *(_WORD *)unint64_t v10 = *(_WORD *)(v11 + 6);
          *(unsigned char *)(v10 + 2) = v22;
          *(_WORD *)(v10 + 4) = *(_WORD *)(v11 + 4);
          *(unsigned char *)(v10 + 3) = *(unsigned char *)(v11 + 10);
        }
        else
        {
          long long v37 = *(_OWORD *)v9;
          *(_OWORD *)(v10 + 12) = *(_OWORD *)(v9 + 6);
          *(_OWORD *)unint64_t v10 = v37;
          if ((__int16)v9[3] < v24 && (v22 > 1 || *((unsigned char *)v9 + 3)))
          {
            __int16 v25 = v9[5];
            int v26 = *((_DWORD *)v9 + 4);
            __int16 v24 = v9[3];
          }
          int v38 = v9[14];
          v9 += 14;
          BOOL v29 = v38 == v18;
        }
        do
        {
          int v39 = *(unsigned __int16 *)(v11 + 20);
          v11 += 12;
        }
        while (v39 == 0x4000);
        BOOL v28 = *(unsigned __int16 *)(v11 + 6) == v18;
      }
      else
      {
        long long v33 = *(_OWORD *)v9;
        *(_OWORD *)(v10 + 12) = *(_OWORD *)(v9 + 6);
        *(_OWORD *)unint64_t v10 = v33;
        if ((__int16)v9[3] < v24 && (v22 > 1 || *((unsigned char *)v9 + 3)))
        {
          __int16 v25 = v9[5];
          int v26 = *((_DWORD *)v9 + 4);
          __int16 v24 = v9[3];
        }
        int v34 = v9[14];
        v9 += 14;
        BOOL v29 = v34 == v18;
        __int16 v35 = 0x4000;
        int v36 = -1;
      }
      uint64_t result = sub_1000A3054(a1, v35, *(_WORD *)(a1 + 812), v36, v10);
      v10 += 28;
      int v19 = *((unsigned __int8 *)v9 + 2);
      int v22 = v78;
      BOOL v27 = v29;
      BOOL v23 = v29 && v78 == v19;
      LOBYTE(v20) = v28;
    }
    while (v23 || v28);
    int v19 = v71;
    *__int16 v74 = v11;
    if (v22 == v71 && v22 != 1) {
      goto LABEL_39;
    }
    goto LABEL_40;
  }
  int v22 = v78;
  if (v78 == v19 || v78 == 1)
  {
    __int16 v73 = a3;
    __int16 v74 = a5;
    uint64_t v72 = a2;
    BOOL v23 = v78 == v19;
    goto LABEL_11;
  }
  if ((unint64_t)(v9 - 28) <= v10) {
    goto LABEL_102;
  }
  *(_DWORD *)(v10 + 6) = 1073758208;
  *(_WORD *)unint64_t v10 = *(_WORD *)(v11 + 6);
  *(unsigned char *)(v10 + 2) = v22;
  *(_WORD *)(v10 + 4) = *(_WORD *)(v11 + 4);
  uint64_t result = sub_1000A3054(a1, *(__int16 *)(v11 + 8), *(_WORD *)(a1 + 812), *(_DWORD *)v11, v10);
  *a3 += 28;
  do
  {
    int v51 = *(unsigned __int16 *)(v11 + 20);
    v11 += 12;
  }
  while (v51 == 0x4000);
  *a5 = v11;
  return result;
}

void sub_1000A1EF8(uint64_t a1)
{
  int v74 = 0x40000000;
  unsigned int v75 = -1;
  uint64_t v2 = *(void *)(a1 + 472);
  uint64_t v3 = *(void *)(a1 + 376);
  int v4 = *(__int16 *)(a1 + 736);
  __int16 v5 = v4 + *(_WORD *)(a1 + 742);
  int v6 = *(_DWORD *)(a1 + 820);
  if (*(_DWORD *)(a1 + 732) > v6) {
    __int16 v5 = sub_10005EF28(*(int **)(a1 + 824), v6, v4, v5);
  }
  int v73 = 0;
  *(_WORD *)(a1 + 744) = v5;
  int v7 = *(_WORD **)(a1 + 592);
  int v8 = *(_DWORD *)(a1 + 584);
  *(_DWORD *)(a1 + 604) = v8;
  if (v8 >= 1)
  {
    uint64_t v9 = 0;
    unint64_t v10 = v7 + 4;
    do
    {
      *(v10 - 1) = *(_WORD *)(*(void *)(a1 + 568) + 2 * v9);
      *unint64_t v10 = 0x4000;
      v10 += 6;
      ++v9;
    }
    while (v9 < *(int *)(a1 + 584));
    int v8 = *(_DWORD *)(a1 + 604);
  }
  qsort(v7, v8, 0xCuLL, (int (__cdecl *)(const void *, const void *))sub_1000A3318);
  int v11 = *(__int16 *)(a1 + 662);
  *(_WORD *)(a1 + 738) = *(_WORD *)(a1 + 662);
  if (v11 <= *(__int16 *)(a1 + 744))
  {
    (*(void (**)(uint64_t))(a1 + 880))(a1);
    if (v2)
    {
      sub_1000D3780(v2, *(__int16 *)(a1 + 666), *(_WORD *)(a1 + 812), 65534, *(_DWORD *)(a1 + 756) + *(__int16 *)(a1 + 662), &v73);
      if (v73)
      {
LABEL_11:
        *(_DWORD *)(a1 + 548) = 3;
        return;
      }
    }
  }
  else
  {
    *(_WORD *)(a1 + 662) = 0x4000;
    *(_WORD *)(a1 + 680) = 0x4000;
  }
  uint64_t v12 = *(void *)(a1 + 712) + 28 * *(int *)(a1 + 732);
  uint64_t v13 = *(void *)(a1 + 720);
  long long v14 = *(_OWORD *)(v12 - 28);
  *(_OWORD *)(v13 - 16) = *(_OWORD *)(v12 - 16);
  *(_OWORD *)(v13 - 28) = v14;
  if (*(_DWORD *)(a1 + 732) == 1)
  {
    uint64_t v15 = *(void *)(a1 + 592);
    int v16 = *(_DWORD *)(a1 + 604);
    if (v16 < 1)
    {
      uint64_t v25 = *(void *)(a1 + 592);
    }
    else
    {
      int v17 = 0;
      int v18 = (__int16 *)(v15 + 8);
      do
      {
        if (*v18 < 0x4000)
        {
          uint64_t v19 = *((void *)v18 - 1);
          *(_DWORD *)(v15 + 8) = *(_DWORD *)v18;
          *(void *)uint64_t v15 = v19;
          v15 += 12;
          int v16 = *(_DWORD *)(a1 + 604);
        }
        ++v17;
        v18 += 6;
      }
      while (v17 < v16);
      uint64_t v25 = *(void *)(a1 + 592);
    }
    *(_DWORD *)(a1 + 604) = -1431655765 * ((unint64_t)(v15 - v25) >> 2);
    *(_DWORD *)(v15 + 6) = 0xFFFF;
    return;
  }
  BOOL v20 = (unsigned __int16 *)(v12 - 28);
  uint64_t v21 = (_OWORD *)(v13 - 56);
  __int16 v22 = *(_WORD *)(a1 + 744);
  if (*(__int16 *)(a1 + 746) >= (__int16)(v22 - *(_WORD *)(a1 + 736))) {
    __int16 v23 = v22 - *(_WORD *)(a1 + 736);
  }
  else {
    __int16 v23 = *(_WORD *)(a1 + 746);
  }
  if (qword_100101CC0)
  {
    uint64_t v24 = *(void *)(qword_100101CC0 + 1696);
    if (v24 >= v23) {
      LOWORD(v24) = v23;
    }
  }
  else
  {
    LODWORD(v24) = v23 & (v23 >> 31);
  }
  __int16 v69 = v24;
  uint64_t v71 = a1 + 814;
  __int16 v72 = v23;
  int v26 = 1;
  while (1)
  {
    int v27 = (__int16)*(v20 - 2);
    v20 -= 14;
    if (v27 > v22) {
      break;
    }
LABEL_35:
    long long v30 = *(_OWORD *)v20;
    *(_OWORD *)((char *)v21 + 12) = *(_OWORD *)(v20 + 6);
    _OWORD *v21 = v30;
    ++v26;
    unsigned int v31 = *((unsigned __int8 *)v20 + 2);
    if (v31 >= 2)
    {
      int v32 = (__int16)v20[12];
      if (v32 < *(__int16 *)(a1 + 738)) {
        *(_WORD *)(a1 + 738) = v32;
      }
      if (v20 == *(unsigned __int16 **)(a1 + 712)) {
        goto LABEL_69;
      }
      goto LABEL_30;
    }
    if (*((unsigned char *)v20 + 2))
    {
      int v33 = (__int16)v20[12];
      if (v33 >= *(__int16 *)(a1 + 738))
      {
        int v34 = 0;
        int v35 = (__int16)v20[3];
        int v36 = (__int16)(v20[3] - *(_WORD *)(a1 + 736));
        if (v36 > v23) {
          goto LABEL_67;
        }
      }
      else
      {
        int v34 = 0;
        *(_WORD *)(a1 + 738) = v33;
        int v35 = (__int16)v20[3];
        int v36 = (__int16)(v20[3] - *(_WORD *)(a1 + 736));
        if (v36 > v23) {
          goto LABEL_67;
        }
      }
    }
    else
    {
      int v34 = 1;
      int v35 = (__int16)v20[3];
      int v36 = (__int16)(v20[3] - *(_WORD *)(a1 + 736));
      if (v36 > v23) {
        goto LABEL_67;
      }
    }
    uint64_t v68 = v2;
    int v37 = *(_DWORD *)(a1 + 756);
    unsigned int v70 = *v20;
    unsigned int v38 = sub_1000BD964(v3, v70, 0);
    int v66 = sub_1000BDCD4(v3, v71, *(_DWORD *)(a1 + 816), v38);
    uint64_t v67 = v3;
    if (!*(_DWORD *)(a1 + 696) || qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 4736))
    {
      BOOL v39 = 1;
    }
    else
    {
      sub_10009F2D4(*(void *)(a1 + 688), &v75, &v74);
      BOOL v39 = v74 == 0x40000000;
    }
    int v40 = v37 + v35;
    int v41 = sub_10009E750(*(unsigned int **)(a1 + 688), *((unsigned int *)v20 + 4), v70, 0, v34, v36, *(_WORD *)(a1 + 812));
    uint64_t v2 = v68;
    if (v68)
    {
      if (v36 <= v69)
      {
        __int16 v42 = v34;
        BOOL v43 = v39;
        int v44 = v26;
        int v45 = v41;
        sub_1000D3788(v68, (__int16)v20[5], *(_WORD *)(a1 + 812), v70, v40, &v73, v42);
        int v41 = v45;
        int v26 = v44;
        BOOL v39 = v43;
        if (v73) {
          goto LABEL_11;
        }
      }
    }
    int v46 = v40 + v66;
    if (!v39)
    {
      int v47 = v75;
      if (v41 != v75)
      {
        __int16 v48 = v74;
        __int16 v49 = v74 - v46;
        if (v74 <= v46)
        {
          __int16 v49 = v46 - v74;
          __int16 v53 = v36;
          int v55 = v41;
          int v54 = v41;
        }
        else
        {
          __int16 v64 = *(_WORD *)(a1 + 736);
          int v65 = *(_DWORD *)(a1 + 756);
          int v63 = v41;
          unsigned int v50 = sub_10009F29C(*(void *)(a1 + 688), v75);
          unsigned int v51 = sub_1000BD964(v67, v50, 0);
          __int16 v52 = sub_1000BDCD4(v67, v71, *(_DWORD *)(a1 + 816), v51);
          int v47 = v63;
          __int16 v53 = v48 - (v65 + v64 + v52 - v66);
          int v54 = v75;
          int v55 = v63;
        }
        sub_1000241EC(*(uint64_t **)(a1 + 704), v54, v47, v49, v53);
        uint64_t v2 = v68;
        int v41 = v55;
      }
    }
    uint64_t v3 = v67;
    if (!(v31 | *(_DWORD *)(a1 + 848))) {
      goto LABEL_60;
    }
    if (!v31 || !*(_DWORD *)(a1 + 852))
    {
      if (*(_DWORD *)(a1 + 544) != 1
        && (__int16)(*(_WORD *)(a1 + 736) + *(_WORD *)(a1 + 748) + v36) <= *(__int16 *)(a1 + 744))
      {
        int v56 = v41;
        (*(void (**)(uint64_t))(a1 + 888))(a1);
        int v41 = v56;
      }
      if (!v31) {
LABEL_60:
      }
        sub_10009EBBC(*(void *)(a1 + 688), v41, v46);
    }
LABEL_67:
    if (sub_10009F2BC(*(void *)(a1 + 688))) {
      goto LABEL_11;
    }
    __int16 v23 = v72;
    if (v20 == *(unsigned __int16 **)(a1 + 712)) {
      goto LABEL_69;
    }
LABEL_30:
    uint64_t v21 = (_OWORD *)((char *)v21 - 28);
    __int16 v22 = *(_WORD *)(a1 + 744);
  }
  while (v20 != *(unsigned __int16 **)(a1 + 712))
  {
    BOOL v28 = v20 - 14;
    int v29 = (__int16)*(v20 - 2);
    v20 -= 14;
    if (v29 <= v22)
    {
      BOOL v20 = v28;
      goto LABEL_35;
    }
  }
LABEL_69:
  int v57 = *(_DWORD *)(a1 + 604);
  if (v57 >= *(_DWORD *)(a1 + 600) - 1) {
    *(_DWORD *)(a1 + 548) = 3;
  }
  uint64_t v58 = *(void *)(a1 + 592);
  if (v57 < 1)
  {
    uint64_t v62 = *(void *)(a1 + 592);
  }
  else
  {
    int v59 = 0;
    uint64_t v60 = (__int16 *)(v58 + 8);
    do
    {
      if (*v60 < 0x4000)
      {
        uint64_t v61 = *((void *)v60 - 1);
        *(_DWORD *)(v58 + 8) = *(_DWORD *)v60;
        *(void *)uint64_t v58 = v61;
        v58 += 12;
        int v57 = *(_DWORD *)(a1 + 604);
      }
      ++v59;
      v60 += 6;
    }
    while (v59 < v57);
    uint64_t v62 = *(void *)(a1 + 592);
  }
  *(_DWORD *)(a1 + 604) = -1431655765 * ((unint64_t)(v58 - v62) >> 2);
  *(_DWORD *)(v58 + 6) = 0xFFFF;
  *(_DWORD *)(a1 + 732) = v26;
}

uint64_t sub_1000A2548(uint64_t a1, void *a2, unint64_t *a3, int a4, uint64_t *a5)
{
  int v49 = 0;
  __int16 v48 = 0;
  unint64_t v10 = (unsigned __int16 *)*a2;
  unint64_t v11 = *a3;
  uint64_t v12 = *a5;
  v46[1] = 0;
  v46[0] = 0x4000000000FF0000;
  int v47 = 0;
  v46[2] = 0xFFFFFFFFLL;
  uint64_t result = sub_10009D254(*(void *)(a1 + 840), *v10, 0, &v48, &v49);
  if (*v10 == a4)
  {
    int v14 = v49;
    if (v49 == *((unsigned __int8 *)v10 + 2))
    {
      int v44 = a2;
      int v45 = a3;
      __int16 v15 = *(_WORD *)(v12 + 8);
      int v16 = *(_DWORD *)v12;
      long long v17 = *(_OWORD *)v10;
      *(_OWORD *)(v11 + 12) = *(_OWORD *)(v10 + 6);
      *(_OWORD *)unint64_t v11 = v17;
      do
      {
        int v18 = *(unsigned __int16 *)(v12 + 20);
        v12 += 12;
      }
      while (v18 == 0x4000);
      *a5 = v12;
      uint64_t v19 = v10 + 14;
    }
    else
    {
      if ((unint64_t)(v10 - 28) <= v11) {
        goto LABEL_37;
      }
      int v44 = a2;
      int v45 = a3;
      *(_DWORD *)(v11 + 6) = 1073758208;
      *(_WORD *)unint64_t v11 = a4;
      *(unsigned char *)(v11 + 2) = v14;
      unsigned __int16 v21 = v48[v14 - 1];
      *(_WORD *)(v11 + 4) = v21;
      __int16 v15 = *(_WORD *)(v12 + 8);
      int v16 = *(_DWORD *)v12;
      LOWORD(v46[0]) = a4;
      WORD2(v46[0]) = v21;
      do
      {
        int v22 = *(unsigned __int16 *)(v12 + 20);
        v12 += 12;
      }
      while (v22 == 0x4000);
      *a5 = v12;
      uint64_t v19 = v10;
      unint64_t v10 = (unsigned __int16 *)v46;
    }
  }
  else
  {
    int v44 = a2;
    int v45 = a3;
    long long v20 = *(_OWORD *)v10;
    *(_OWORD *)(v11 + 12) = *(_OWORD *)(v10 + 6);
    *(_OWORD *)unint64_t v11 = v20;
    uint64_t v19 = v10 + 14;
    __int16 v15 = 0x4000;
    int v16 = -1;
  }
  uint64_t result = sub_1000A3054(a1, v15, *(_WORD *)(a1 + 812), v16, v11);
  __int16 v23 = (unsigned __int16 *)(v11 + 28);
  int v24 = *((unsigned __int8 *)v10 + 2);
  if (v24 - 1 == *((unsigned __int8 *)v19 + 2)) {
    goto LABEL_29;
  }
LABEL_12:
  uint64_t v25 = v10;
  unint64_t v10 = v19;
  if (!v24) {
    goto LABEL_34;
  }
LABEL_13:
  int v26 = (__int16)v25[3];
  if (v26 == 0x4000)
  {
LABEL_34:
    while (1)
    {
      unint64_t v11 = (unint64_t)v23;
      if (*v25 != *v10) {
        goto LABEL_35;
      }
LABEL_28:
      long long v35 = *(_OWORD *)v10;
      *(_OWORD *)(v11 + 12) = *(_OWORD *)(v10 + 6);
      *(_OWORD *)unint64_t v11 = v35;
      uint64_t result = sub_1000A3054(a1, 0x4000, 0, -1, v11);
      uint64_t v19 = v10 + 14;
      __int16 v23 = (unsigned __int16 *)(v11 + 28);
      int v24 = *((unsigned __int8 *)v10 + 2);
      if (v24 - 1 != *((unsigned __int8 *)v10 + 30)) {
        goto LABEL_12;
      }
LABEL_29:
      if (*v10 != *v19) {
        goto LABEL_12;
      }
      uint64_t v36 = 0;
      do
      {
        uint64_t v25 = &v19[v36];
        unint64_t v37 = v11 + v36 * 2;
        uint64_t v38 = v11 + v36 * 2 + 28;
        int v39 = (__int16)v10[3];
        __int16 v40 = v10[5];
        int v41 = *((_DWORD *)v10 + 4);
        long long v42 = *(_OWORD *)&v19[v36];
        *(_OWORD *)(v37 + 40) = *(_OWORD *)&v19[v36 + 6];
        *(_OWORD *)(v37 + 28) = v42;
        uint64_t result = sub_1000A3054(a1, v39, v40, v41, v38);
        int v43 = LOBYTE(v19[v36 + 1]);
        if (v43 - 1 != LOBYTE(v19[v36 + 15])) {
          break;
        }
        v36 += 14;
        unint64_t v10 = v25;
      }
      while (*v25 == v25[14]);
      unint64_t v10 = v25 + 14;
      __int16 v23 = (unsigned __int16 *)(v37 + 56);
      unint64_t v11 = v38;
      if (v43) {
        goto LABEL_13;
      }
    }
  }
  if (v10 - 28 > v23)
  {
    __int16 v27 = v25[5];
    int v28 = *((_DWORD *)v25 + 4);
    *__int16 v23 = *v25;
    unsigned __int8 v29 = *((unsigned char *)v25 + 2) - 1;
    *(unsigned char *)(v11 + 30) = v29;
    if (v29)
    {
      *(_DWORD *)(v11 + 34) = 1073758208;
      *(_WORD *)(v11 + 32) = v48[v29 - 1];
      uint64_t result = sub_1000A3054(a1, v26, v27, v28, (uint64_t)v23);
    }
    else
    {
      int v30 = *(unsigned __int16 *)(a1 + 660);
      *(_WORD *)(v11 + 32) = v30;
      *(_WORD *)(v11 + 34) = 0x4000;
      int v50 = 0;
      uint64_t result = sub_100015A08(*(void *)(a1 + 384), v30, &v50);
      int v31 = *(__int16 *)(v11 + 34);
      if (v31 >= v26)
      {
        *(_WORD *)(v11 + 34) = v26;
        *(_WORD *)(v11 + 38) = v27;
        int v31 = v26;
        *(_DWORD *)(v11 + 44) = v28;
      }
      if (v31 <= *(__int16 *)(a1 + 744))
      {
        uint64_t v32 = *(unsigned __int16 *)result;
        uint64_t result = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 384) + 1792) + 2 * v32);
        if (result == 0x4000)
        {
          uint64_t result = sub_100015A48(*(void *)(a1 + 384), v32);
          LOWORD(v31) = *(_WORD *)(v11 + 34);
        }
        __int16 v33 = result - *(_WORD *)(a1 + 740) + v31;
        *(_WORD *)(v11 + 34) = v33;
        *(_WORD *)(v11 + 52) = v33;
        if (v33 < *(__int16 *)(a1 + 736))
        {
          *(_WORD *)(a1 + 736) = v33;
          *(_WORD *)(a1 + 808) = *(_WORD *)(v11 + 32);
          __int16 v33 = *(_WORD *)(v11 + 52);
        }
        uint64_t v34 = *(void *)(a1 + 824);
        if (*(_DWORD *)v34 > v33) {
          ++*(_WORD *)(*(void *)(v34 + 8) + 2 * v33);
        }
      }
      else
      {
        *(_WORD *)(v11 + 52) = 0x4000;
        *(_WORD *)(v11 + 34) = 0x4000;
      }
    }
    v11 += 56;
    if (*v25 == *v10) {
      goto LABEL_28;
    }
LABEL_35:
    *int v44 = v10;
    *int v45 = v11;
    return result;
  }
  *int v44 = v10;
  *int v45 = (unint64_t)v23;
LABEL_37:
  *(_DWORD *)(a1 + 548) = 3;
  return result;
}

uint64_t sub_1000A2954(uint64_t a1)
{
  *(_WORD *)(*(void *)(a1 + 592) + 12 * *(int *)(a1 + 604) + 6) = -1;
  *(_WORD *)(*(void *)(a1 + 592) + 12 * *(int *)(a1 + 604) + 8) = 0;
  LODWORD(v31) = 0;
  uint64_t result = sub_100015A08(*(void *)(a1 + 384), *(unsigned __int16 *)(a1 + 660), &v31);
  int v3 = *(__int16 *)(a1 + 662);
  if (v3 >= 0x4000)
  {
    int v3 = 0x4000;
    *(_WORD *)(a1 + 662) = 0x4000;
    *(_WORD *)(a1 + 666) = -1;
    *(_DWORD *)(a1 + 672) = -1;
  }
  if (v3 <= *(__int16 *)(a1 + 744))
  {
    uint64_t v4 = *(unsigned __int16 *)result;
    uint64_t result = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 384) + 1792) + 2 * v4);
    if (result == 0x4000)
    {
      uint64_t result = sub_100015A48(*(void *)(a1 + 384), v4);
      LOWORD(v3) = *(_WORD *)(a1 + 662);
    }
    __int16 v5 = result - *(_WORD *)(a1 + 740) + v3;
    int v6 = v5;
    *(_WORD *)(a1 + 662) = v5;
    *(_WORD *)(a1 + 680) = v5;
    if (v5 < *(__int16 *)(a1 + 736))
    {
      *(_WORD *)(a1 + 736) = v5;
      *(_WORD *)(a1 + 808) = *(_WORD *)(a1 + 660);
    }
    uint64_t v7 = *(void *)(a1 + 824);
    if (*(_DWORD *)v7 > v6) {
      ++*(_WORD *)(*(void *)(v7 + 8) + 2 * v6);
    }
  }
  else
  {
    *(_WORD *)(a1 + 680) = 0x4000;
    *(_WORD *)(a1 + 662) = 0x4000;
  }
  unsigned __int8 v29 = *(unsigned __int16 **)(a1 + 712);
  int v8 = &v29[14 * (*(_DWORD *)(a1 + 728) - *(_DWORD *)(a1 + 732))];
  int v30 = v8;
  uint64_t v9 = *(void *)(a1 + 592) - 12;
  do
  {
    int v10 = *(unsigned __int16 *)(v9 + 20);
    v9 += 12;
  }
  while (v10 == 0x4000);
  uint64_t v28 = v9;
  int v11 = *(unsigned __int16 *)(v9 + 6);
  int v12 = *(_DWORD *)(a1 + 612);
  int v13 = *v8;
  if (v12 >= v11 || v12 >= v13)
  {
    do
    {
      if ((unsigned __int16)v11 >= (unsigned __int16)v13)
      {
        uint64_t result = (*(uint64_t (**)(uint64_t, unsigned __int16 **, unsigned __int16 **))(a1 + 536))(a1, &v30, &v29);
        if (*(_DWORD *)(a1 + 548) == 3) {
          return result;
        }
        uint64_t v9 = v28;
      }
      else
      {
        long long v17 = v29;
        if (*(__int16 *)(v9 + 8) - *(__int16 *)(a1 + 740) <= *(__int16 *)(a1 + 746))
        {
          if (v8 - 28 <= v29)
          {
            *(_DWORD *)(a1 + 548) = 3;
            return result;
          }
          int v31 = 0;
          uint64_t v32 = 0;
          sub_10009D254(*(void *)(a1 + 840), (unsigned __int16)v11, 0, &v31, (int *)&v32);
          char v18 = v32;
          if (*(_DWORD *)(a1 + 552)) {
            uint64_t v19 = (unsigned __int16 *)(v9 + 4);
          }
          else {
            uint64_t v19 = &v31[(int)v32 - 1];
          }
          int v20 = *v19;
          v17[3] = 0x4000;
          unsigned char v17[4] = 0x4000;
          *((unsigned char *)v17 + 2) = v18;
          *long long v17 = v11;
          _OWORD v17[2] = v20;
          *((unsigned char *)v17 + 3) = *(unsigned char *)(v9 + 10);
          uint64_t result = sub_100015A08(*(void *)(a1 + 384), v20, (_DWORD *)&v32 + 1);
          uint64_t v21 = SHIDWORD(v32) - 1;
          int v22 = &v17[v21 + 3];
          *int v22 = *(_WORD *)(v9 + 8);
          v17[v21 + 5] = *(_WORD *)(a1 + 812);
          *(_DWORD *)&v17[2 * v21 + 8] = *(_DWORD *)v9;
          int v23 = (__int16)*v22;
          if (v23 <= *(__int16 *)(a1 + 744))
          {
            uint64_t v24 = *(unsigned __int16 *)(result + 2 * v21);
            uint64_t result = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 384) + 1792) + 2 * v24);
            if (result == 0x4000)
            {
              uint64_t result = sub_100015A48(*(void *)(a1 + 384), v24);
              uint64_t v21 = SHIDWORD(v32) - 1;
              LOWORD(v23) = v17[v21 + 3];
            }
            signed __int16 v25 = result - *(_WORD *)(a1 + 740) + v23;
            v17[v21 + 3] = v25;
            v17[12] = v25;
            if (v25 < *(__int16 *)(a1 + 736))
            {
              *(_WORD *)(a1 + 736) = v25;
              *(_WORD *)(a1 + 808) = v17[2];
              signed __int16 v25 = v17[12];
            }
            uint64_t v26 = *(void *)(a1 + 824);
            if (*(_DWORD *)v26 > v25) {
              ++*(_WORD *)(*(void *)(v26 + 8) + 2 * v25);
            }
          }
          else
          {
            v17[12] = 0x4000;
            *int v22 = 0x4000;
          }
          v17 += 14;
          uint64_t v9 = v28;
        }
        unsigned __int8 v29 = v17;
        do
        {
          int v27 = *(unsigned __int16 *)(v9 + 20);
          v9 += 12;
        }
        while (v27 == 0x4000);
        uint64_t v28 = v9;
      }
      int v8 = v30;
      int v11 = *(unsigned __int16 *)(v9 + 6);
      int v15 = *(_DWORD *)(a1 + 612);
      int v13 = *v30;
    }
    while (v15 >= v11 || v15 >= v13);
  }
  *unsigned __int8 v29 = -1;
  *(_DWORD *)(a1 + 732) = -1227133513 * (((unint64_t)v29 - *(void *)(a1 + 712) + 28) >> 2);
  return result;
}

uint64_t sub_1000A2D0C(uint64_t a1, unsigned int a2, int a3, int a4, int a5, int a6)
{
  int v7 = a5;
  uint64_t v11 = a1;
  uint64_t v12 = *(void *)(a1 + 592);
  int v13 = *(_DWORD *)(a1 + 604);
  int v14 = 0;
  BOOL v15 = __OFSUB__(v13, 1);
  int v16 = v13 - 1;
  if (v16 < 0 == v15)
  {
    do
    {
      int v17 = v16 + v14;
      if (v16 + v14 < 0 != __OFADD__(v16, v14)) {
        ++v17;
      }
      int v18 = v17 >> 1;
      if (*(unsigned __int16 *)(v12 + 12 * v18 + 6) >= a2) {
        int v16 = v18 - 1;
      }
      else {
        int v14 = v18 + 1;
      }
    }
    while (v14 <= v16);
  }
  if (a5 < 1) {
    return 1;
  }
  uint64_t v19 = (int *)(v12 + 12 * v14);
  int v20 = &word_100101D20;
  while (1)
  {
    uint64_t v21 = v7;
    int v22 = *(_DWORD *)(v11 + 604);
    int v23 = v22 - v14;
    if (v22 <= v14) {
      break;
    }
    uint64_t v24 = (char *)v19 + 6;
    if (*((unsigned __int16 *)v19 + 3) != a2) {
      break;
    }
    unsigned int v25 = *((unsigned __int16 *)v19 + 2);
    unsigned int v26 = (unsigned __int16)*v20;
    if (v25 < v26)
    {
LABEL_12:
      ++v14;
      v19 += 3;
      if (v7 <= 0) {
        return 1;
      }
    }
    else
    {
      if (v25 <= v26)
      {
        int v35 = *((__int16 *)v19 + 4);
        int v36 = *(_DWORD *)(v11 + 696);
        if (v35 <= a3)
        {
          if (v36 && *v19 != a4)
          {
            sub_1000241EC(*(uint64_t **)(v11 + 704), a4, *v19, a3 - v35, a3 - *(_WORD *)(v11 + 736));
            uint64_t v11 = a1;
          }
        }
        else
        {
          if (v36 && v35 != 0x4000 && *v19 != a4)
          {
            sub_1000241EC(*(uint64_t **)(v11 + 704), *v19, a4, v35 - a3, v35 - *(_WORD *)(v11 + 736));
            uint64_t v11 = a1;
          }
          *((_WORD *)v19 + 4) = a3;
          *uint64_t v19 = a4;
        }
        --v7;
        ++v20;
        goto LABEL_12;
      }
      BOOL v27 = v7 >= 2;
      int v46 = v7;
      uint64_t v28 = 1;
      if (v27)
      {
        while (v25 > (unsigned __int16)v20[v28])
        {
          if (v21 == ++v28)
          {
            LODWORD(v28) = v21;
            break;
          }
        }
      }
      if ((int)v28 + v22 >= *(_DWORD *)(v11 + 600)) {
        goto LABEL_40;
      }
      uint64_t v45 = *(void *)(v11 + 592);
      unsigned __int8 v29 = &v19[3 * v28];
      j__memmove(v29, v19, 12 * v23);
      uint64_t v30 = v28;
      int v31 = v20;
      uint64_t v32 = v28;
      do
      {
        *(_WORD *)uint64_t v24 = a2;
        *((_WORD *)v24 - 1) = *v31;
        *((_WORD *)v24 + 1) = a3;
        *(_DWORD *)(v24 - 6) = a4;
        int v33 = (unsigned __int16)*v31++;
        v24[4] = v33 == a6;
        v24 += 12;
        --v32;
      }
      while (v32);
      uint64_t v11 = a1;
      int v34 = *(_DWORD *)(a1 + 604) + v28;
      *(_DWORD *)(a1 + 604) = v34;
      *(_WORD *)(v45 + 12 * v34 + 6) = -1;
      *(_WORD *)(v45 + 12 * *(int *)(a1 + 604) + 8) = 0;
      v14 += v28;
      int v7 = v46 - v28;
      v20 += v30;
      uint64_t v19 = v29;
      if (v7 <= 0) {
        return 1;
      }
    }
  }
  if (v22 + v7 >= *(_DWORD *)(v11 + 600))
  {
LABEL_40:
    uint64_t result = 0;
    *(_DWORD *)(v11 + 548) = 3;
    return result;
  }
  unsigned int v37 = v7;
  uint64_t v38 = *(void *)(v11 + 592);
  unsigned int v39 = v37;
  j__memmove(&v19[3 * v37], v19, 12 * v23);
  __int16 v40 = (char *)v19 + 6;
  do
  {
    *(_WORD *)__int16 v40 = a2;
    *((_WORD *)v40 - 1) = *v20;
    *((_WORD *)v40 + 1) = a3;
    *(_DWORD *)(v40 - 6) = a4;
    int v41 = (unsigned __int16)*v20++;
    v40[4] = v41 == a6;
    v40 += 12;
    --v21;
  }
  while (v21);
  unsigned int v42 = *(_DWORD *)(a1 + 604) + v39;
  *(_DWORD *)(a1 + 604) = v42;
  *(_WORD *)(v38 + 12 * (int)v42 + 6) = -1;
  *(_WORD *)(v38 + 12 * *(int *)(a1 + 604) + 8) = 0;
  return 1;
}

uint64_t sub_1000A3054(uint64_t a1, int a2, __int16 a3, int a4, uint64_t a5)
{
  int v10 = *(unsigned __int16 *)(a5 + 4);
  if (v10 != *(unsigned __int16 *)(a1 + 660))
  {
    uint64_t result = sub_100015A34(*(void *)(a1 + 384), v10);
    uint64_t v13 = result;
    int v14 = *(__int16 *)(a5 + 8);
    int v15 = *(__int16 *)(a5 + 6);
    if (v14 <= v15)
    {
      *(_WORD *)(a5 + 6) = *(_WORD *)(a5 + 8);
      *(_WORD *)(a5 + 10) = *(_WORD *)(a5 + 12);
      *(_DWORD *)(a5 + 16) = *(_DWORD *)(a5 + 20);
      int v15 = v14;
    }
    if (v15 <= *(__int16 *)(a1 + 744))
    {
      uint64_t v20 = *(unsigned __int16 *)result;
      uint64_t result = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 384) + 1792) + 2 * v20);
      if (result == 0x4000)
      {
        uint64_t result = sub_100015A48(*(void *)(a1 + 384), v20);
        LOWORD(v15) = *(_WORD *)(a5 + 6);
        LOWORD(v14) = *(_WORD *)(a5 + 8);
      }
      __int16 v16 = result - *(_WORD *)(a1 + 740) + v15;
      *(_WORD *)(a5 + 6) = v16;
      *(_WORD *)(a5 + 24) = v16;
      if (a2 > (__int16)v14)
      {
LABEL_22:
        if (*(__int16 *)(a1 + 744) >= (__int16)v14)
        {
          uint64_t v21 = *(unsigned __int16 *)(v13 + 2);
          uint64_t result = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 384) + 1792) + 2 * v21);
          if (result == 0x4000)
          {
            uint64_t result = sub_100015A48(*(void *)(a1 + 384), v21);
            LOWORD(v14) = *(_WORD *)(a5 + 8);
            __int16 v16 = *(_WORD *)(a5 + 24);
          }
          __int16 v22 = result - *(_WORD *)(a1 + 740) + v14;
          *(_WORD *)(a5 + 8) = v22;
          if (v22 < v16)
          {
            *(_WORD *)(a5 + 24) = v22;
            __int16 v16 = v22;
            if (*(__int16 *)(a1 + 736) > v22) {
              goto LABEL_32;
            }
          }
          else if (*(__int16 *)(a1 + 736) > v16)
          {
            goto LABEL_32;
          }
        }
        else
        {
          *(_WORD *)(a5 + 8) = 0x4000;
          if (*(__int16 *)(a1 + 736) > v16)
          {
LABEL_32:
            *(_WORD *)(a1 + 736) = v16;
            *(_WORD *)(a1 + 808) = *(_WORD *)(a5 + 4);
            __int16 v16 = *(_WORD *)(a5 + 24);
            uint64_t v23 = *(void *)(a1 + 824);
            if (*(_DWORD *)v23 <= v16) {
              return result;
            }
LABEL_33:
            ++*(_WORD *)(*(void *)(v23 + 8) + 2 * v16);
            return result;
          }
        }
        uint64_t v23 = *(void *)(a1 + 824);
        if (*(_DWORD *)v23 <= v16) {
          return result;
        }
        goto LABEL_33;
      }
    }
    else
    {
      __int16 v16 = 0x4000;
      *(_WORD *)(a5 + 24) = 0x4000;
      *(_WORD *)(a5 + 6) = 0x4000;
      if (a2 > (__int16)v14) {
        goto LABEL_22;
      }
    }
    *(_WORD *)(a5 + 8) = a2;
    *(_WORD *)(a5 + 12) = a3;
    LOWORD(v14) = a2;
    *(_DWORD *)(a5 + 20) = a4;
    goto LABEL_22;
  }
  int v24 = 0;
  uint64_t result = sub_100015A08(*(void *)(a1 + 384), v10, &v24);
  int v12 = *(__int16 *)(a5 + 6);
  if (v12 >= a2)
  {
    *(_WORD *)(a5 + 6) = a2;
    *(_WORD *)(a5 + 10) = a3;
    int v12 = a2;
    *(_DWORD *)(a5 + 16) = a4;
  }
  if (v12 <= *(__int16 *)(a1 + 744))
  {
    uint64_t v17 = *(unsigned __int16 *)result;
    uint64_t result = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 384) + 1792) + 2 * v17);
    if (result == 0x4000)
    {
      uint64_t result = sub_100015A48(*(void *)(a1 + 384), v17);
      LOWORD(v12) = *(_WORD *)(a5 + 6);
    }
    __int16 v18 = result - *(_WORD *)(a1 + 740) + v12;
    *(_WORD *)(a5 + 6) = v18;
    *(_WORD *)(a5 + 24) = v18;
    if (v18 < *(__int16 *)(a1 + 736))
    {
      *(_WORD *)(a1 + 736) = v18;
      *(_WORD *)(a1 + 808) = *(_WORD *)(a5 + 4);
      __int16 v18 = *(_WORD *)(a5 + 24);
    }
    uint64_t v19 = *(void *)(a1 + 824);
    if (*(_DWORD *)v19 > v18) {
      ++*(_WORD *)(*(void *)(v19 + 8) + 2 * v18);
    }
  }
  else
  {
    *(_WORD *)(a5 + 24) = 0x4000;
    *(_WORD *)(a5 + 6) = 0x4000;
  }
  return result;
}

uint64_t sub_1000A3318(uint64_t a1, uint64_t a2)
{
  return *(unsigned __int16 *)(a1 + 6) - *(unsigned __int16 *)(a2 + 6);
}

uint64_t sub_1000A3328(uint64_t a1)
{
  uint64_t result = sub_1000C33A0(2 * *(int *)(a1 + 128));
  *(void *)a1 = result;
  if (result)
  {
    uint64_t result = sub_1000C33A0(2 * *(int *)(a1 + 108) + 4);
    *(void *)(a1 + 8) = result;
    if (result)
    {
      uint64_t result = sub_1000C33A0(4 * (*(_DWORD *)(a1 + 108) / 2 + 1));
      *(void *)(a1 + 16) = result;
      if (result)
      {
        uint64_t result = sub_1000C33A0(2 * *(int *)(a1 + 112));
        *(void *)(a1 + 24) = result;
        if (result)
        {
          uint64_t v3 = sub_1000C33A0(2 * *(int *)(a1 + 124));
          *(void *)(a1 + 32) = v3;
          return v3 != 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000A33C4(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = (uint64_t *)result;
    sub_100095F04(*(void *)(result + 88));
    sub_1000384C0(v1[10]);
    sub_10007D938(v1[9]);
    sub_1000D2B28(v1[8]);
    sub_100006A98(v1[7]);
    sub_100059EFC(v1[6]);
    sub_10005E528(v1[5]);
    sub_1000C321C(v1[4]);
    v1[4] = 0;
    sub_1000C321C(v1[3]);
    v1[3] = 0;
    sub_1000C321C(v1[2]);
    v1[2] = 0;
    sub_1000C321C(v1[1]);
    v1[1] = 0;
    sub_1000C321C(*v1);
    uint64_t *v1 = 0;
    return sub_1000C321C((uint64_t)v1);
  }
  return result;
}

uint64_t sub_1000A3474(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v10 = sub_1000BEC58(a1, "bsc0", a2, a4, a5, a6, a7, a8);
  if (!v10) {
    return 0;
  }
  uint64_t v11 = (uint64_t)v10;
  uint64_t v12 = sub_1000C33A0(160);
  uint64_t v13 = v12;
  if (v12)
  {
    if (sub_1000BEECC(v11, (void *)(v12 + 96))
      && sub_1000BEECC(v11, (void *)(v13 + 100))
      && sub_1000BEECC(v11, (void *)(v13 + 104))
      && sub_1000BEECC(v11, (void *)(v13 + 128))
      && sub_1000BEECC(v11, (void *)(v13 + 108))
      && sub_1000BEE7C(v11, (_DWORD *)(v13 + 132))
      && sub_1000BEECC(v11, (void *)(v13 + 116))
      && sub_1000BEECC(v11, (void *)(v13 + 120))
      && sub_1000BEECC(v11, (void *)(v13 + 112))
      && sub_1000BEECC(v11, (void *)(v13 + 124))
      && sub_1000BEE7C(v11, (_DWORD *)(v13 + 136)))
    {
      BOOL v14 = sub_1000BEE7C(v11, (_DWORD *)(v13 + 140));
      sub_1000BED3C(v11);
      *(_DWORD *)(v13 + 148) = 0;
      if (v14)
      {
        if (sub_1000A3328(v13))
        {
          uint64_t v21 = sub_10005ED2C(a1, a2, v15, v16, v17, v18, v19, v20);
          *(void *)(v13 + 40) = v21;
          if (v21)
          {
            uint64_t v28 = sub_10005A368(a1, a2, v22, v23, v24, v25, v26, v27);
            *(void *)(v13 + 48) = v28;
            if (v28)
            {
              int v35 = sub_10007E0EC(a1, a2, v29, v30, v31, v32, v33, v34);
              *(void *)(v13 + 72) = v35;
              if (v35)
              {
                unsigned int v42 = sub_1000387D8(a1, a2, v36, v37, v38, v39, v40, v41);
                *(void *)(v13 + 80) = v42;
                if (v42)
                {
                  *(void *)(v13 + 56) = sub_10007D234(*(_DWORD *)(v13 + 108));
                  *(void *)(v13 + 64) = sub_1000D29B4(*(_DWORD *)(v13 + 96), *(_DWORD *)(v13 + 108));
                  *(void *)(v13 + 88) = sub_100095D80(*(_DWORD *)(v13 + 96), *(_DWORD *)(v13 + 100));
                  return v13;
                }
              }
            }
          }
        }
      }
    }
    else
    {
      sub_1000BED3C(v11);
      *(_DWORD *)(v13 + 148) = 0;
    }
    sub_1000A33C4(v13);
    return 0;
  }
  return v13;
}

uint64_t sub_1000A3658(uint64_t a1)
{
  return sub_100095F48(*(void *)(a1 + 88));
}

uint64_t sub_1000A3660(uint64_t a1)
{
  bzero(*(void **)a1, 2 * *(int *)(a1 + 128));
  *(_WORD *)(a1 + 148) = 0;
  *(_DWORD *)(a1 + 144) = 0;
  *(_DWORD *)(a1 + 152) = 3;
  sub_10007D9A0(*(void *)(a1 + 72));
  uint64_t v2 = *(void *)(a1 + 88);
  return sub_100095FBC(v2);
}

uint64_t sub_1000A36C4(uint64_t a1, __int16 *a2, void *a3, unsigned char *a4)
{
  uint64_t v8 = *(unsigned int *)(a1 + 152);
  *a4 = 0;
  uint64_t v9 = *(int16x8_t **)a1;
  uint64_t v10 = *(int *)(a1 + 100);
  size_t v11 = *(_DWORD *)(a1 + 128) - (int)v10;
  j__memmove(*(void **)a1, (const void *)(*(void *)a1 + 2 * v10), v11 * 2);
  uint64_t v12 = *(unsigned int *)(a1 + 100);
  uint64_t v13 = &v9->i16[v11];
  if (*(_DWORD *)(a1 + 136))
  {
    size_t v14 = 2 * v12;
    memcpy(v13, a2, 2 * v12);
    if (!*(_DWORD *)(a1 + 144)) {
      memcpy(v9, a2, v14);
    }
  }
  else if (v12)
  {
    int v15 = 0;
    int v16 = 0;
    __int16 v17 = *(_WORD *)(a1 + 148);
    do
    {
      int v18 = *a2++;
      int v19 = v18 - v17;
      __int16 v17 = v18;
      if (v19 <= -16383) {
        int v20 = -16383;
      }
      else {
        int v20 = v19;
      }
      if (v20 >= 0x3FFF) {
        int v20 = 0x3FFF;
      }
      if (v15 > 30 && v20 == 0) {
        int v16 = 1;
      }
      if (v20) {
        int v15 = 0;
      }
      else {
        ++v15;
      }
      *v13++ = v20;
      LODWORD(v12) = v12 - 1;
    }
    while (v12);
    *(_WORD *)(a1 + 148) = v17;
    if (v16)
    {
      j__memmove(a3, *(const void **)(a1 + 32), 2 * *(int *)(a1 + 124));
      return *(unsigned int *)(a1 + 152);
    }
  }
  int v22 = *(_DWORD *)(a1 + 144) + 1;
  int v23 = *(_DWORD *)(a1 + 104);
  if (v22 * *(_DWORD *)(a1 + 100) >= v23 || *(_DWORD *)(a1 + 136))
  {
    if (v23)
    {
      unsigned int v24 = 0;
      char v25 = 0;
      uint64_t v26 = *(unsigned int *)(a1 + 104);
      uint64_t v27 = v9;
      do
      {
        int v28 = v27->i16[0];
        uint64_t v27 = (int16x8_t *)((char *)v27 + 2);
        v24 += (v28 * v28) >> v25;
        if (v24 >> 30)
        {
          v25 += 2;
          v24 >>= 2;
        }
        --v26;
      }
      while (v26);
    }
    else
    {
      char v25 = 0;
      unsigned int v24 = 0;
    }
    *(_WORD *)(a1 + 150) = sub_10007D818((v24 / (unsigned __int16)*(_DWORD *)(a1 + 104)) << v25);
    int v29 = sub_10005E570(*(unsigned int **)(a1 + 40), v9, *(void *)(a1 + 8));
    int v30 = sub_100059F50(*(int **)(a1 + 48), *(_WORD **)(a1 + 8));
    sub_10007D2E0(*(_DWORD **)(a1 + 56), *(const __int16 **)(a1 + 8), *(void *)(a1 + 16), v31);
    sub_1000D2F58(*(char **)(a1 + 64), *(char **)(a1 + 16));
    if (*(_DWORD *)(a1 + 136))
    {
      uint64_t v36 = *(int **)(a1 + 72);
      uint64_t v37 = (v30 + 2 * (v29 - v30) + 1);
    }
    else
    {
      uint64_t v36 = *(int **)(a1 + 72);
      uint64_t v37 = (v29 - v30);
      if (*(_DWORD *)(a1 + 140)) {
        uint64_t v37 = (2 * v37);
      }
    }
    sub_10007D9B4(v36, v37, *(void *)(a1 + 16), *(int16x4_t **)(a1 + 24), v32, v33, v34, v35);
    sub_100038508(*(void *)(a1 + 80), *(int16x8_t **)(a1 + 24), *(_WORD **)(a1 + 32));
    j__memmove(a3, *(const void **)(a1 + 32), 2 * *(int *)(a1 + 124));
    char v38 = sub_100096024(*(void *)(a1 + 88), **(__int16 **)(a1 + 32));
    *a4 = v38;
    if ((v38 & 2) != 0) {
      uint64_t v8 = 5;
    }
    else {
      uint64_t v8 = 6;
    }
    int v22 = *(_DWORD *)(a1 + 144) + 1;
  }
  *(_DWORD *)(a1 + 144) = v22;
  *(_DWORD *)(a1 + 152) = v8;
  return v8;
}

uint64_t sub_1000A3938(uint64_t a1, const void *a2, int a3, void *a4, unsigned char *a5)
{
  *a5 = 0;
  if (a3 >= 0xFFFF) {
    int v8 = 0xFFFF;
  }
  else {
    int v8 = a3;
  }
  *(_WORD *)(a1 + 150) = v8 & ~(unsigned __int16)(v8 >> 31);
  j__memmove(*(void **)(a1 + 32), a2, 2 * *(int *)(a1 + 124));
  j__memmove(a4, *(const void **)(a1 + 32), 2 * *(int *)(a1 + 124));
  char v9 = sub_100096024(*(void *)(a1 + 88), **(__int16 **)(a1 + 32));
  *a5 = v9;
  if ((v9 & 2) != 0) {
    uint64_t result = 5;
  }
  else {
    uint64_t result = 6;
  }
  ++*(_DWORD *)(a1 + 144);
  return result;
}

uint64_t sub_1000A39D0(uint64_t a1, int a2)
{
  return sub_100096024(*(void *)(a1 + 88), a2);
}

uint64_t sub_1000A39D8(uint64_t a1)
{
  return sub_1000D2B84(*(void *)(a1 + 64));
}

uint64_t sub_1000A39E0(uint64_t a1)
{
  return sub_100025D50(*(unsigned int **)(a1 + 64));
}

uint64_t sub_1000A39E8(uint64_t a1, int a2)
{
  return sub_1000D2BBC(*(void *)(a1 + 64), a2);
}

uint64_t sub_1000A39F0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 112);
}

uint64_t sub_1000A39F8(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 150);
}

uint64_t sub_1000A3A00(uint64_t a1, _WORD *a2)
{
  return sub_100096130(*(void *)(a1 + 88), a2);
}

uint64_t sub_1000A3A08(uint64_t a1, _WORD *a2)
{
  return sub_100096144(*(void *)(a1 + 88), a2);
}

_DWORD *sub_1000A3A10(uint64_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4)
{
  return sub_10007E0AC(*(_DWORD **)(a1 + 72), a2, a3, a4);
}

_DWORD *sub_1000A3A18(uint64_t a1, int a2, int a3, int a4)
{
  return sub_10007E0DC(*(_DWORD **)(a1 + 72), a2, a3, a4);
}

uint64_t sub_1000A3A20(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t result = sub_1000C33A0(160);
  if (result)
  {
    *(void *)(result + 112) = a1;
    *(void *)(result + 120) = a2;
    *(_DWORD *)(result + 128) = a3;
    *(_DWORD *)uint64_t result = 0;
  }
  return result;
}

uint64_t sub_1000A3A6C(uint64_t a1, uint64_t *a2, int a3, int a4, int a5, unsigned __int16 *a6, _WORD *a7, int a8, _WORD *a9, _WORD *a10, uint64_t a11, _DWORD *a12)
{
  __int16 v16 = sub_1000041DC(a1);
  int v17 = sub_1000B51F8(a2);
  char v25 = (unsigned __int16 *)sub_1000CD3E8(2 * (v17 + 1), v18, v19, v20, v21, v22, v23, v24);
  uint64_t v85 = 2 * (v17 + 1);
  __int16 v87 = (unsigned __int16 *)sub_1000CD3E8(v85, v26, v27, v28, v29, v30, v31, v32);
  uint64_t v84 = 2 * v17;
  uint64_t v40 = (_WORD *)sub_1000CD3E8(v84, v33, v34, v35, v36, v37, v38, v39);
  uint64_t v89 = a2;
  int v90 = a6;
  int v88 = v25;
  int v43 = sub_1000BB100(a2, *a6, v25);
  uint64_t v102 = a7;
  *a7 = 0;
  int v86 = a4;
  if (!a4)
  {
    uint64_t v44 = 0;
    v105[0] = 0;
    unsigned int v45 = a5;
    unint64_t v46 = (a5 - 1);
    if (a5 < 1) {
      goto LABEL_58;
    }
    goto LABEL_5;
  }
  *a9 = v16;
  *a10 = -1;
  uint64_t v44 = 1;
  v105[0] = 0;
  unsigned int v45 = a5;
  unint64_t v46 = (a5 - 1);
  if (a5 >= 1)
  {
LABEL_5:
    unint64_t v47 = 0;
    unsigned int v48 = 0;
    uint64_t v96 = 0;
    int v95 = -1;
    int v50 = v87;
    int v49 = v88;
    uint64_t v92 = v45;
    unint64_t v93 = v46;
    __int16 v91 = v16;
    do
    {
      unsigned int v51 = v49;
      if (v47 != v46) {
        int v95 = sub_1000BB100(v89, v90[v47 + 1], v50);
      }
      if (a3)
      {
        if (v47 >= v46 || *(unsigned char *)(a11 + v47)) {
          LOWORD(v96) = 0;
        }
        else {
          LOWORD(v96) = *v50;
        }
      }
      sub_100005524(a1, v51, v43, v40, WORD2(v96), (unsigned __int16)v96, v41, v42);
      uint64_t v97 = v50;
      unint64_t v98 = v47;
      int v94 = v43 - 1;
      if (v43 >= 1)
      {
        uint64_t v52 = 0;
        uint64_t v53 = v43;
        int16x8_t v101 = vdupq_n_s16(v48);
        while (1)
        {
          uint64_t v54 = v52;
          int v55 = (const void *)sub_100015A08(a1, (unsigned __int16)v40[v52], v105);
          unsigned int v56 = v105[0];
          uint64_t v57 = v105[0] + v44;
          if ((int)v57 < a8)
          {
            uint64_t v58 = v105[0];
            memcpy(&a9[(int)v44], v55, 2 * (int)v105[0]);
            if ((int)v58 >= 1)
            {
              if (v56 >= 0x10)
              {
                uint64_t v59 = 0;
                uint64_t v60 = &v51[v54];
                unint64_t v61 = (unint64_t)&v51[v54 + 1];
                uint64_t v62 = (int)v44;
                uint64_t v63 = (int)v44 + v58;
                __int16 v64 = &a10[v63];
                unint64_t v65 = (unint64_t)&v102[v62];
                BOOL v66 = (unint64_t)&a10[v62] >= v61 || v60 >= v64;
                char v67 = !v66;
                BOOL v66 = v65 >= v61;
                uint64_t v68 = &v102[v63];
                char v70 = !v66 && v60 < v68;
                if ((v65 >= (unint64_t)v64 || &a10[v62] >= v68) && (v67 & 1) == 0 && (v70 & 1) == 0)
                {
                  uint64_t v59 = v58 & 0x7FFFFFF0;
                  __int16 v72 = (const __int16 *)&v51[v52];
                  int16x8_t v73 = vld1q_dup_s16(v72);
                  int v74 = (int16x8_t *)&v102[v62 + 8];
                  unsigned int v75 = (int16x8_t *)&a10[v62 + 8];
                  uint64_t v76 = v58 & 0xFFFFFFF0;
                  do
                  {
                    v74[-1] = v73;
                    *int v74 = v73;
                    v74 += 2;
                    v75[-1] = v101;
                    *unsigned int v75 = v101;
                    v75 += 2;
                    v76 -= 16;
                  }
                  while (v76);
                  if (v59 == v58) {
                    goto LABEL_16;
                  }
                }
              }
              else
              {
                uint64_t v59 = 0;
              }
              uint64_t v77 = v59 + (int)v44;
              int v78 = &a10[v77];
              int v79 = &v102[v77];
              uint64_t v80 = v58 - v59;
              do
              {
                *v78++ = v48;
                *v79++ = v51[v52];
                --v80;
              }
              while (v80);
            }
          }
LABEL_16:
          ++v52;
          LODWORD(v44) = v56 + v44;
          if (v52 == v53) {
            goto LABEL_47;
          }
        }
      }
      uint64_t v57 = v44;
LABEL_47:
      ++v48;
      unint64_t v46 = v93;
      if (v98 == v93 || (int)v57 >= a8)
      {
        uint64_t v44 = v57;
        __int16 v16 = v91;
        int v49 = v97;
        if (a3) {
          goto LABEL_55;
        }
      }
      else
      {
        __int16 v16 = v91;
        int v49 = v97;
        if (*(unsigned char *)(a11 + v98) == 1)
        {
          uint64_t v81 = (int)v57;
          a10[v81] = v48;
          v102[v81] = 0;
          uint64_t v44 = (v57 + 1);
          a9[v81] = v91;
          if (a3) {
            goto LABEL_55;
          }
        }
        else
        {
          uint64_t v44 = v57;
          if (a3)
          {
LABEL_55:
            if (*(unsigned char *)(a11 + v98)) {
              WORD2(v96) = 0;
            }
            else {
              WORD2(v96) = v51[v94];
            }
          }
        }
      }
      unint64_t v47 = v98 + 1;
      int v50 = v51;
      int v43 = v95;
    }
    while (v98 + 1 != v92);
  }
LABEL_58:
  if (!v86)
  {
LABEL_61:
    sub_1000CD4D0(v40, v84);
    sub_1000CD4D0(v87, v85);
    sub_1000CD4D0(v88, v85);
    *a12 = v44;
    return 1;
  }
  if ((int)v44 < a8)
  {
    uint64_t v82 = (int)v44;
    a9[v82] = v16;
    a10[v82] = -1;
    v102[v82] = 0;
    LODWORD(v44) = v44 + 1;
    goto LABEL_61;
  }
  return 0;
}

uint64_t sub_1000A3ED4(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, unsigned __int16 *a8, int32x4_t a9, double a10, int32x4_t a11, int32x4_t a12, int8x16_t a13, int8x16_t a14, int a15, unsigned __int16 *a16, int a17, _WORD *a18, _WORD *a19, uint64_t a20,int *a21,uint64_t a22)
{
  if ((*(_DWORD *)a1 - 1) <= 5)
  {
    uint64_t v30 = *(__int16 **)(a1 + 56);
    if (*(_DWORD *)(a1 + 40) && *(v30 - 1) < *v30) {
      --v30;
    }
    if (*(_DWORD *)a1 != 3 && *v30 != 0x4000)
    {
      *(_DWORD *)a1 = 0;
      sub_1000C321C(*(void *)(a1 + 80));
      *(void *)(a1 + 80) = 0;
      sub_1000C321C(*(void *)(a1 + 48));
      *(void *)(a1 + 48) = 0;
      if (a2 <= 1) {
        goto LABEL_32;
      }
      goto LABEL_13;
    }
    uint64_t v31 = *(void *)(a1 + 80);
    if (v31)
    {
      sub_1000C321C(v31);
      *(void *)(a1 + 80) = 0;
    }
    uint64_t v32 = *(void *)(a1 + 48);
    if (v32)
    {
      sub_1000C321C(v32);
      *(void *)(a1 + 48) = 0;
    }
    *(_DWORD *)a1 = 0;
  }
  if (a2 <= 1) {
    goto LABEL_32;
  }
LABEL_13:
  int v33 = a17;
  sub_100005A6C(*(void *)(a1 + 112), a9, a10, a11, a12, a13, a14);
  int v63 = 0;
  if (!a6)
  {
    int v62 = a5;
    uint64_t v34 = *(void *)(a1 + 112);
    if (a8)
    {
      uint64_t result = sub_1000A3A6C(v34, *(uint64_t **)(a1 + 120), a3, a5, a7, a8, a16, a17, a18, a19, a22, &v63);
      if (result) {
        goto LABEL_18;
      }
LABEL_47:
      *(_DWORD *)a1 = 0;
      return result;
    }
    uint64_t v39 = a15;
    __int16 v40 = sub_1000041DC(*(void *)(a1 + 112));
    __int16 v58 = v40;
    if (a5)
    {
      *a18 = v40;
      *a19 = -1;
      int v48 = 1;
    }
    else
    {
      int v48 = 0;
    }
    int v64 = 0;
    int v49 = (_WORD *)sub_1000CD3E8(2 * a15, v41, v42, v43, v44, v45, v46, v47);
    sub_100005524(v34, a16, a15, v49, 0, 0, v50, v51);
    int v61 = a4;
    uint64_t v59 = v49;
    uint64_t v60 = 2 * a15;
    if (a15 < 1)
    {
      int v56 = v48;
    }
    else
    {
      uint64_t v52 = v49;
      do
      {
        int v53 = *v52++;
        uint64_t v54 = (const void *)sub_100015A08(v34, v53, &v64);
        int v55 = v64;
        int v56 = v64 + v48;
        if (v64 + v48 < a17)
        {
          memcpy(&a18[v48], v54, 2 * v64);
          if (v55 >= 1) {
            bzero(&a19[v48], 2 * v55);
          }
        }
        int v48 = v56;
        --v39;
      }
      while (v39);
    }
    if (v62)
    {
      a4 = v61;
      if (v56 >= a17)
      {
        uint64_t result = 0;
        goto LABEL_47;
      }
      uint64_t v57 = v56;
      a18[v57] = v58;
      a19[v57] = -1;
      sub_1000CD4D0(v59, v60);
      int v63 = v56 + 1;
    }
    else
    {
      a4 = v61;
      sub_1000CD4D0(v59, v60);
      int v63 = v56;
    }
LABEL_18:
    int v33 = v63;
    a5 = v62;
    if (v63 <= a2) {
      goto LABEL_19;
    }
LABEL_32:
    uint64_t result = 0;
    goto LABEL_33;
  }
  if (a17 > a2) {
    goto LABEL_32;
  }
LABEL_19:
  *(_DWORD *)a1 = 1;
  *(_DWORD *)(a1 + 8) = v33;
  *(void *)(a1 + 16) = a18;
  *(void *)(a1 + 24) = a19;
  *(void *)(a1 + 32) = 0;
  uint64_t result = sub_1000C33A0(2 * v33);
  *(void *)(a1 + 48) = result;
  if (!result)
  {
LABEL_33:
    *(_DWORD *)a1 = 3;
    return result;
  }
  *(void *)(a1 + 56) = result + 2 * v33 - 2;
  *(_WORD *)(a1 + 64) = 0;
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 72) = a20;
  *(_WORD *)(a1 + 4) = 0;
  *(_DWORD *)(a1 + 132) = 0;
  *(_DWORD *)(a1 + 136) = 0;
  *(_DWORD *)(a1 + 40) = a5;
  int v36 = (a2 + 7) >> 3;
  *(_DWORD *)(a1 + 148) = a2;
  *(_DWORD *)(a1 + 152) = v36;
  uint64_t v37 = sub_1000C33A0(v33 * v36);
  *(void *)(a1 + 80) = v37;
  if (!v37)
  {
    sub_1000C321C(*(void *)(a1 + 48));
    goto LABEL_32;
  }
  *(void *)(a1 + 88) = v37;
  **(_WORD **)(a1 + 48) = 0;
  if (v33 >= 2)
  {
    uint64_t v38 = 2;
    do
    {
      *(_WORD *)(*(void *)(a1 + 48) + v38) = 0x4000;
      v38 += 2;
    }
    while (2 * v33 != v38);
  }
  *(void *)(a1 + 140) = (a4 / *(_DWORD *)(a1 + 128));
  if (a21) {
    *a21 = v33;
  }
  return 1;
}

uint64_t sub_1000A429C(uint64_t a1, int a2, int *a3)
{
  uint64_t v4 = *(__int16 **)(a1 + 56);
  int v5 = *(_DWORD *)(a1 + 40);
  if (v5)
  {
    int v5 = *(v4 - 1) < *v4;
    if (*(v4 - 1) < *v4) {
      --v4;
    }
  }
  if (*(_DWORD *)a1 == 3 || *v4 == 0x4000)
  {
    uint64_t v6 = *(void *)(a1 + 80);
    if (v6)
    {
      sub_1000C321C(v6);
      *(void *)(a1 + 80) = 0;
    }
    uint64_t v7 = *(void *)(a1 + 48);
    if (v7)
    {
      sub_1000C321C(v7);
      *(void *)(a1 + 48) = 0;
    }
    *(_DWORD *)a1 = 0;
    return 3;
  }
  else
  {
    if (a2)
    {
      *(_DWORD *)a1 = 0;
      int v9 = 0x40000000;
    }
    else
    {
      uint64_t v10 = *(int *)(a1 + 152);
      int v11 = *(__int16 *)(a1 + 4);
      uint64_t v12 = *(int *)(a1 + 8);
      if (v5) {
        uint64_t v13 = -v10;
      }
      else {
        uint64_t v13 = 0;
      }
      int v15 = *(_WORD **)(a1 + 72);
      uint64_t v14 = *(void *)(a1 + 80);
      *(_DWORD *)(a1 + 132) = 0;
      *(_DWORD *)(a1 + 136) = 0;
      if (v11 < 1)
      {
        __int16 v18 = 0;
      }
      else
      {
        int v16 = 0;
        int v17 = 0;
        __int16 v18 = 0;
        uint64_t v19 = v14 + (v12 - 1) * v10 + v13;
        do
        {
          if ((byte_1000F594C[v16] & *(unsigned char *)(v19 + *(int *)(a1 + 132))) != 0)
          {
            *v15++ = v17 - v18;
            int v16 = *(_DWORD *)(a1 + 136);
            __int16 v18 = v17;
          }
          *(_DWORD *)(a1 + 136) = ++v16;
          if (v16 == 8)
          {
            int v16 = 0;
            *(void *)(a1 + 132) = (*(_DWORD *)(a1 + 132) + 1);
          }
          ++v17;
        }
        while (v11 != v17);
      }
      *int v15 = v11 - v18;
      if (v5) {
        v15[1] = 0;
      }
      *(_DWORD *)a1 = 0;
      int v9 = *(_DWORD *)(a1 + 68) + *v4;
    }
    *a3 = v9;
    sub_1000C321C(*(void *)(a1 + 80));
    *(void *)(a1 + 80) = 0;
    sub_1000C321C(*(void *)(a1 + 48));
    uint64_t result = 0;
    *(void *)(a1 + 48) = 0;
  }
  return result;
}

uint64_t sub_1000A441C(uint64_t a1, uint64_t a2, __int16 *a3, uint64_t a4, int32x4_t a5, double a6, int32x4_t a7, int32x4_t a8, int8x16_t a9, int8x16_t a10)
{
  int v19 = 0;
  sub_100006AA4(*(void *)(a1 + 112), a2, a3, a4, *(_WORD *)(a1 + 4), 0, a5, a6, a7, a8, a9, a10);
  uint64_t v17 = sub_100006CCC(*(void *)(a1 + 112), 0, v11, v12, v13, v14, v15, v16);
  sub_100006C90(*(void *)(a1 + 112), *(__int16 *)(a1 + 4), &v19);
  return v17;
}

uint64_t sub_1000A4480(uint64_t a1, uint64_t a2, __int16 *a3, uint64_t a4, int32x4_t a5, double a6, int32x4_t a7, int32x4_t a8, int8x16_t a9, int8x16_t a10)
{
  int v36 = 0;
  if (*(_DWORD *)a1 == 3) {
    return 3;
  }
  int v12 = *(__int16 *)(a1 + 4);
  if (*(_DWORD *)(a1 + 148) <= v12) {
    goto LABEL_32;
  }
  size_t __n = *(int *)(a1 + 152);
  sub_100006AA4(*(void *)(a1 + 112), a2, a3, a4, v12, 0, a5, a6, a7, a8, a9, a10);
  int v13 = *(__int16 *)(a1 + 64);
  *(_DWORD *)(a1 + 68) += v13;
  *(_WORD *)(a1 + 64) = 0x4000;
  __int16 v14 = qword_100101CC0;
  if (qword_100101CC0) {
    __int16 v14 = *(_WORD *)(qword_100101CC0 + 968);
  }
  uint64_t v16 = *(int *)(a1 + 32);
  uint64_t v15 = *(int *)(a1 + 36);
  if ((int)v15 < (int)v16) {
    goto LABEL_32;
  }
  uint64_t v17 = 0;
  __int16 v35 = v13;
  int v18 = (__int16)(v14 + v13);
  int v19 = *(char **)(a1 + 88);
  uint64_t v20 = (__int16 *)(*(void *)(a1 + 48) + 2 * v15);
  int v21 = -1;
  int v22 = -1;
  do
  {
    while (1)
    {
      int v24 = *v20;
      if (v15 > v16)
      {
        int v25 = *(v20 - 1);
        if (v25 < v24)
        {
          *uint64_t v20 = v25;
          memcpy(v19, &v19[-__n], __n);
          v19[*(int *)(a1 + 132)] |= byte_1000F594C[*(int *)(a1 + 136)];
          LOWORD(v24) = *v20;
        }
      }
      if (v18 >= (__int16)v24) {
        break;
      }
      *v20-- = 0x4000;
      v19 -= __n;
      BOOL v28 = v15-- <= v16;
      if (v28) {
        goto LABEL_22;
      }
    }
    __int16 v26 = sub_1000121BC(*(void *)(a1 + 112), *(unsigned __int16 *)(*(void *)(a1 + 16) + 2 * v15)) - v35 + *v20;
    *uint64_t v20 = v26;
    if (v26 < *(__int16 *)(a1 + 64)) {
      *(_WORD *)(a1 + 64) = v26;
    }
    BOOL v23 = v21 == -1;
    if (v21 == -1) {
      int v21 = v15;
    }
    if (v23) {
      uint64_t v17 = v19;
    }
    int v22 = v15;
    --v20;
    v19 -= __n;
    BOOL v28 = v15-- <= v16;
  }
  while (!v28);
LABEL_22:
  if (v21 == -1) {
    goto LABEL_32;
  }
  int v27 = *(_DWORD *)(a1 + 8) - 1;
  BOOL v28 = v21 < v27;
  int v29 = v21 >= v27 ? v21 : v21 + 1;
  int v30 = v28 ? __n : 0;
  *(_DWORD *)(a1 + 32) = v22;
  *(_DWORD *)(a1 + 36) = v29;
  *(void *)(a1 + 88) = &v17[v30];
  int v31 = *(_DWORD *)(a1 + 136) + 1;
  *(_DWORD *)(a1 + 136) = v31;
  if (v31 == 8) {
    *(void *)(a1 + 132) = (*(_DWORD *)(a1 + 132) + 1);
  }
  if (*(_WORD *)(a1 + 64) == 0x4000)
  {
LABEL_32:
    uint64_t result = 3;
    *(_DWORD *)a1 = 3;
  }
  else
  {
    sub_100006C90(*(void *)(a1 + 112), *(__int16 *)(a1 + 4), &v36);
    ++*(_WORD *)(a1 + 4);
    if (*(_DWORD *)(a1 + 40))
    {
      if (**(unsigned __int16 **)(a1 + 56) == *(unsigned __int16 *)(a1 + 64))
      {
        int v32 = *(_DWORD *)(a1 + 140);
        int v33 = *(_DWORD *)(a1 + 144) + 1;
        *(_DWORD *)(a1 + 144) = v33;
        if (v33 >= v32) {
          return 2;
        }
      }
      else
      {
        *(_DWORD *)(a1 + 144) = 0;
      }
    }
    return 1;
  }
  return result;
}

uint64_t sub_1000A4714(int a1, int a2)
{
  uint64_t v2 = 0;
  if (!a1) {
    return v2;
  }
  if (!a2) {
    return v2;
  }
  uint64_t v5 = sub_1000C33A0(80);
  uint64_t v2 = v5;
  if (!v5) {
    return v2;
  }
  *(_DWORD *)(v5 + 32) = a1;
  uint64_t v6 = sub_1000C33A0(2 * a1);
  *(void *)uint64_t v2 = v6;
  if (!v6
    || (uint64_t v7 = sub_1000C33A0(2 * *(int *)(v2 + 32)), (*(void *)(v2 + 16) = v7) == 0)
    || (uint64_t v8 = sub_1000C33A0(2 * *(int *)(v2 + 32)), (*(void *)(v2 + 24) = v8) == 0)
    || (uint64_t v9 = sub_1000C33A0(2 * *(int *)(v2 + 32)), (*(void *)(v2 + 8) = v9) == 0))
  {
    sub_1000C321C(*(void *)(v2 + 48));
    sub_1000C321C(*(void *)(v2 + 56));
    sub_1000C321C(*(void *)(v2 + 8));
    sub_1000C321C(*(void *)(v2 + 24));
    sub_1000C321C(*(void *)(v2 + 16));
    sub_1000C321C(*(void *)v2);
    *(_OWORD *)uint64_t v2 = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
    *(void *)(v2 + 48) = 0;
    *(void *)(v2 + 56) = 0;
    sub_1000C321C(v2);
    return 0;
  }
  *(_DWORD *)(v2 + 68) = 0x40000000;
  *(_DWORD *)(v2 + 40) = a2;
  uint64_t v10 = sub_1000C33A0(2 * a2);
  *(void *)(v2 + 48) = v10;
  if (v10)
  {
    uint64_t v11 = sub_1000C33A0(*(int *)(v2 + 40));
    *(void *)(v2 + 56) = v11;
    if (v11)
    {
      *(_DWORD *)(v2 + 44) = 0;
      if (*(int *)(v2 + 40) >= 1)
      {
        uint64_t v12 = 0;
        do
          *(_WORD *)(*(void *)(v2 + 48) + 2 * v12++) = -1;
        while (v12 < *(int *)(v2 + 40));
      }
      return v2;
    }
  }
  sub_1000A4878(v2);
  return 0;
}

uint64_t sub_1000A4878(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = (uint64_t *)result;
    sub_1000C321C(*(void *)(result + 48));
    sub_1000C321C(v1[7]);
    sub_1000C321C(v1[1]);
    sub_1000C321C(v1[3]);
    sub_1000C321C(v1[2]);
    sub_1000C321C(*v1);
    *(_OWORD *)uint64_t v1 = 0u;
    *((_OWORD *)v1 + 1) = 0u;
    v1[6] = 0;
    v1[7] = 0;
    return sub_1000C321C((uint64_t)v1);
  }
  return result;
}

uint64_t sub_1000A48F0(uint64_t *a1, int a2)
{
  int v3 = sub_1000B51F8(a1);
  if (a2 > 1000) {
    return 0;
  }
  int v5 = v3;
  uint64_t result = 0;
  if (a2)
  {
    int v6 = 3 * (a2 + a2 * v5) + 1;
    if (v6)
    {
      uint64_t result = sub_1000A4714(v6, a2);
      if (result) {
        *(_DWORD *)(result + 44) = a2;
      }
    }
  }
  return result;
}

void *sub_1000A495C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  int v4 = *(_DWORD *)(a2 + 36);
  if (v4 >= *(_DWORD *)(a1 + 32)) {
    int v4 = *(_DWORD *)(a1 + 32);
  }
  *(_DWORD *)(a1 + 36) = v4;
  int v5 = *(_DWORD *)(a2 + 44);
  if (v5 >= *(_DWORD *)(a1 + 40)) {
    int v5 = *(_DWORD *)(a1 + 40);
  }
  *(_DWORD *)(a1 + 44) = v5;
  memcpy(*(void **)a1, *(const void **)a2, 2 * v4);
  memcpy(*(void **)(a1 + 8), *(const void **)(a2 + 8), 2 * *(int *)(a1 + 36));
  memcpy(*(void **)(a1 + 16), *(const void **)(a2 + 16), 2 * *(int *)(a1 + 36));
  memcpy(*(void **)(a1 + 24), *(const void **)(a2 + 24), 2 * *(int *)(a1 + 36));
  memcpy(*(void **)(a1 + 48), *(const void **)(a2 + 48), 2 * *(int *)(a1 + 44));
  int v6 = *(void **)(a1 + 56);
  uint64_t v7 = *(const void **)(a2 + 56);
  size_t v8 = *(int *)(a1 + 44);
  return memcpy(v6, v7, v8);
}

uint64_t sub_1000A4A38(uint64_t a1, uint64_t a2)
{
  if (a1 && a2 && *(_DWORD *)(a2 + 68) < *(_DWORD *)(a1 + 68)) {
    return (uint64_t)sub_1000A495C(a1, a2);
  }
  return a1;
}

void sub_1000A4A58(uint64_t a1)
{
  if (a1)
  {
    *(_DWORD *)(a1 + 68) = 0x40000000;
    bzero(*(void **)a1, *(int *)(a1 + 32));
    bzero(*(void **)(a1 + 8), *(int *)(a1 + 32));
    *(_DWORD *)(a1 + 44) = 0;
    *(_DWORD *)(a1 + 64) = 0;
    *(_DWORD *)(a1 + 36) = 0;
  }
}

uint64_t sub_1000A4AAC(uint64_t a1, int a2)
{
  if (!a1) {
    return 1;
  }
  if (*(_DWORD *)(a1 + 40) < a2)
  {
    uint64_t result = sub_1000C33A0(2 * a2);
    if (!result) {
      return result;
    }
    uint64_t v5 = result;
    sub_1000C321C(*(void *)(a1 + 48));
    *(void *)(a1 + 48) = v5;
    *(_DWORD *)(a1 + 40) = a2;
  }
  *(_DWORD *)(a1 + 44) = 0;
  if (a2 >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      *(_WORD *)(*(void *)(a1 + 48) + v6) = -1;
      v6 += 2;
    }
    while (2 * a2 != v6);
  }
  return 1;
}

uint64_t sub_1000A4B44(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 944) + 112))();
}

uint64_t sub_1000A4B50(int a1, uint64_t a2, _DWORD *a3, int *a4)
{
  if (a1 != 1)
  {
    if (a1 || !a2) {
      return 0;
    }
    *a3 = sub_10005A798(a2);
    *a4 = 2 * sub_10005A748(a2) + 9;
    return 1;
  }
  *a3 = 22;
  if (!qword_100101CC0 || (int)*(void *)(qword_100101CC0 + 2792) < 1)
  {
    *a4 = 1;
    return 1;
  }
  unint64_t v7 = *(void *)(qword_100101CC0 + 2792);
  if (v7 >= 0x10)
  {
    int32x4_t v10 = (int32x4_t)xmmword_1000F4D50;
    uint64_t v8 = *(void *)(qword_100101CC0 + 2792) & 0xFFFFFFF0;
    int32x4_t v11 = 0uLL;
    uint64_t v12 = (int16x8_t *)&unk_1000F4D70;
    uint64_t v13 = v8;
    int32x4_t v14 = 0uLL;
    int32x4_t v15 = 0uLL;
    do
    {
      int16x8_t v16 = v12[-1];
      int32x4_t v11 = vaddw_high_s16(v11, v16);
      int32x4_t v10 = vaddw_s16(v10, *(int16x4_t *)v16.i8);
      int32x4_t v15 = vaddw_high_s16(v15, *v12);
      int32x4_t v14 = vaddw_s16(v14, *(int16x4_t *)v12->i8);
      v12 += 2;
      v13 -= 16;
    }
    while (v13);
    int v9 = vaddvq_s32(vaddq_s32(vaddq_s32(v14, v10), vaddq_s32(v15, v11)));
    if ((*(void *)(qword_100101CC0 + 2792) & 0xFLL) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v8 = 0;
    int v9 = 2;
  }
  unint64_t v17 = v7 - v8;
  int v18 = &asc_1000F4D60[v8];
  do
  {
    int v19 = *v18++;
    v9 += v19;
    --v17;
  }
  while (v17);
LABEL_16:
  int v20 = v9 + 7;
  if (v9 < -7) {
    int v20 = v9 + 14;
  }
  *a4 = v20 >> 3;
  return 1;
}

void sub_1000A4CC8(int *a1)
{
  bzero(*((void **)a1 + 1), 2 * *a1);
  bzero(*((void **)a1 + 5), 2 * *a1);
  bzero(*((void **)a1 + 7), 2 * *a1);
  uint64_t v2 = (void *)*((void *)a1 + 21);
  uint64_t v3 = *((void *)a1 + 22);
  *((void *)a1 + 20) = v2;
  *((_WORD *)a1 + 92) = 0;
  bzero(v2, v3 - (void)v2);
  a1[20] = 0;
  *((_WORD *)a1 + 156) = 0;
  *((_WORD *)a1 + 93) = 0;
  *((_WORD *)a1 + 96) = 0;
  a1[74] = 0;
}

void sub_1000A4D40(int *a1, int16x4_t *__src)
{
  int v4 = a1[20];
  if (!v4)
  {
    memcpy(*((void **)a1 + 1), __src, 2 * *a1);
    *((_WORD *)a1 + 93) = 0;
    goto LABEL_215;
  }
  if (v4 >= *((unsigned __int16 *)a1 + 154))
  {
    int v21 = (__int16 *)*((void *)a1 + 1);
    int v22 = (_WORD *)*((void *)a1 + 18);
    if (*((__int16 *)a1 + 96) <= *((__int16 *)a1 + 97)) {
      __int16 v23 = 0;
    }
    else {
      __int16 v23 = *((_WORD *)a1 + 118);
    }
    int v24 = (char *)__src + 2;
    int v25 = (__int16 *)*((void *)a1 + 16);
    __int16 v27 = *v21;
    __int16 v26 = v21 + 1;
    __int16 v28 = __src->i16[0] - v27;
    uint64_t v29 = *v25;
    if (v29 >= 2)
    {
      int v30 = (char *)__src + 2 * v29;
      do
      {
        __int16 v31 = *(_WORD *)v24 - (v23 + *v26);
        int v32 = v31;
        int v33 = v28;
        __int16 v34 = v31 - v28;
        LOWORD(v35) = v28 - v31;
        if (v28 <= v32) {
          __int16 v28 = v32;
        }
        if (v33 < v32) {
          LOWORD(v35) = v34;
        }
        unsigned int v35 = (unsigned __int16)v35;
        if ((unsigned __int16)v35 >= 0x7FFFu) {
          unsigned int v35 = 0x7FFF;
        }
        if ((v35 & 0x6000) == 0)
        {
          int v36 = (unsigned __int16)(v35 & 0x800) >> 11;
          if ((v35 & 0x800) != 0) {
            char v37 = 0;
          }
          else {
            char v37 = -1;
          }
          if ((v35 & 0x1000) != 0)
          {
            char v37 = 0;
            int v36 = 2;
          }
          if ((v35 & 0x2000) != 0)
          {
            char v37 = 0;
            int v36 = 3;
          }
          int v38 = (v35 >> (v36 + 3)) + (v36 << 7);
          unsigned int v39 = v35 >> 3;
          if ((v37 & 1) == 0) {
            LOWORD(v39) = v38;
          }
          v28 += word_1000F517C[(__int16)v39];
        }
        v24 += 2;
        ++v26;
      }
      while (v24 < v30);
    }
    int v40 = (__int16)(v28 - *v22);
    if (v40 <= *((__int16 *)a1 + 117)) {
      LOWORD(v40) = *((_WORD *)a1 + 117);
    }
    __int16 v43 = *(_WORD *)v24;
    uint64_t v41 = v24 + 2;
    __int16 v42 = v43;
    __int16 v45 = *v26;
    uint64_t v44 = v26 + 1;
    __int16 v46 = v42 - v45;
    for (unsigned int i = (char *)__src + 2 * v25[1]; v41 < i; ++v44)
    {
      __int16 v48 = *(_WORD *)v41 - (v23 + *v44);
      int v49 = v48;
      int v50 = v46;
      __int16 v51 = v48 - v46;
      LOWORD(v52) = v46 - v48;
      if (v46 <= v49) {
        __int16 v46 = v49;
      }
      if (v50 < v49) {
        LOWORD(v52) = v51;
      }
      unsigned int v52 = (unsigned __int16)v52;
      if ((unsigned __int16)v52 >= 0x7FFFu) {
        unsigned int v52 = 0x7FFF;
      }
      if ((v52 & 0x6000) == 0)
      {
        int v53 = (unsigned __int16)(v52 & 0x800) >> 11;
        if ((v52 & 0x800) != 0) {
          char v54 = 0;
        }
        else {
          char v54 = -1;
        }
        if ((v52 & 0x1000) != 0)
        {
          char v54 = 0;
          int v53 = 2;
        }
        if ((v52 & 0x2000) != 0)
        {
          char v54 = 0;
          int v53 = 3;
        }
        unsigned int v55 = v52 >> 3;
        int v56 = (v52 >> (v53 + 3)) + (v53 << 7);
        if (v54) {
          LOWORD(v56) = v55;
        }
        v46 += word_1000F517C[(__int16)v56];
      }
      v41 += 2;
    }
    __int16 v57 = *((_WORD *)a1 + 115);
    int v58 = (__int16)(v46 - v22[1]);
    __int16 v61 = *(_WORD *)v41;
    uint64_t v59 = v41 + 2;
    __int16 v60 = v61;
    if (v58 > (__int16)v40) {
      LOWORD(v40) = v58;
    }
    __int16 v62 = v60 - *v44;
    int v63 = (char *)__src + 2 * v25[2];
    if (v59 < v63)
    {
      int v64 = v44 + 1;
      do
      {
        __int16 v65 = *v64++;
        __int16 v66 = *(_WORD *)v59 - (v23 + v65);
        int v67 = v66;
        int v68 = v62;
        __int16 v69 = v66 - v62;
        LOWORD(v70) = v62 - v66;
        if (v62 <= v67) {
          __int16 v62 = v67;
        }
        if (v68 < v67) {
          LOWORD(v70) = v69;
        }
        unsigned int v70 = (unsigned __int16)v70;
        if ((unsigned __int16)v70 >= 0x7FFFu) {
          unsigned int v70 = 0x7FFF;
        }
        if ((v70 & 0x6000) == 0)
        {
          int v71 = (unsigned __int16)(v70 & 0x800) >> 11;
          if ((v70 & 0x800) != 0) {
            char v72 = 0;
          }
          else {
            char v72 = -1;
          }
          if ((v70 & 0x1000) != 0)
          {
            char v72 = 0;
            int v71 = 2;
          }
          if ((v70 & 0x2000) != 0)
          {
            char v72 = 0;
            int v71 = 3;
          }
          unsigned int v73 = v70 >> 3;
          int v74 = (v70 >> (v71 + 3)) + (v71 << 7);
          if (v72) {
            LOWORD(v74) = v73;
          }
          v62 += word_1000F517C[(__int16)v74];
        }
        v59 += 2;
      }
      while (v59 < v63);
    }
    int v75 = *((__int16 *)a1 + 112);
    __int16 v76 = *((_WORD *)a1 + 114);
    int v77 = (__int16)(v62 - v22[2]);
    if (v77 <= (__int16)v40) {
      LOWORD(v77) = v40;
    }
    __int16 v78 = v77 + v57;
    int v79 = (__int16)(v77 + v57);
    if (((_WORD)v77 + v57)) {
      unsigned int v80 = 1074790400;
    }
    else {
      unsigned int v80 = 0x40000000;
    }
    if ((v78 & 2) != 0) {
      v80 |= v80 >> 9;
    }
    if ((v78 & 4) != 0) {
      unsigned int v80 = 32896 * ((v80 + 0x4000) >> 15);
    }
    if ((v78 & 8) != 0) {
      unsigned int v80 = 33026 * ((v80 + 0x4000) >> 15);
    }
    if ((v78 & 0x10) != 0) {
      unsigned int v80 = 33284 * ((v80 + 0x4000) >> 15);
    }
    if ((v78 & 0x20) != 0) {
      unsigned int v80 = 33808 * ((v80 + 0x4000) >> 15);
    }
    if ((v78 & 0x40) != 0) {
      unsigned int v80 = 34882 * ((v80 + 0x4000) >> 15);
    }
    if ((v78 & 0x80) != 0) {
      unsigned int v80 = 37132 * ((v80 + 0x4000) >> 15);
    }
    if ((v78 & 0x100) != 0) {
      unsigned int v80 = 42074 * ((v80 + 0x4000) >> 15);
    }
    if (v80 >= 0x4DA24000) {
      int v81 = 27013;
    }
    else {
      int v81 = 54026;
    }
    unsigned int v82 = ((v80 + 0x4000) >> 15) * v81;
    if (v80 < 0x4DA24000) {
      __int16 v83 = 1;
    }
    else {
      __int16 v83 = 2;
    }
    BOOL v84 = (v78 & 0x200) == 0;
    if ((v78 & 0x200) != 0) {
      int v85 = v82;
    }
    else {
      int v85 = v80;
    }
    if (v84) {
      __int16 v86 = 1;
    }
    else {
      __int16 v86 = v83;
    }
    int v87 = (v85 + 0x4000) >> 15;
    int v88 = 22268 * v87;
    int v89 = 44536 * v87;
    if (v85 <= 1580023807)
    {
      __int16 v90 = v86 + 1;
    }
    else
    {
      int v89 = v88;
      __int16 v90 = v86 + 2;
    }
    if ((v79 & 0x400) != 0)
    {
      int v85 = v89;
      __int16 v86 = v90;
    }
    int v91 = (v85 + 0x4000) >> 15;
    int v92 = 30266 * v91;
    int v93 = 60532 * v91;
    if (v85 <= 1162493951)
    {
      __int16 v94 = v86 + 2;
    }
    else
    {
      int v93 = v92;
      __int16 v94 = v86 + 3;
    }
    if ((v79 & 0x800) != 0)
    {
      int v85 = v93;
      __int16 v86 = v94;
    }
    int v95 = (v85 + 0x4000) >> 15;
    int v96 = 27954 * v95;
    int v97 = 55908 * v95;
    if (v85 <= 1258635263)
    {
      __int16 v98 = v86 + 5;
    }
    else
    {
      int v97 = v96;
      __int16 v98 = v86 + 6;
    }
    if ((v79 & 0x1000) != 0)
    {
      int v85 = v97;
      __int16 v86 = v98;
    }
    int v99 = (v85 + 0x4000) >> 15;
    int v100 = 23848 * v99;
    int v101 = 47696 * v99;
    if (v85 <= 1475362815)
    {
      __int16 v102 = v86 + 11;
    }
    else
    {
      int v101 = v100;
      __int16 v102 = v86 + 12;
    }
    if ((v79 & 0x2000) != 0)
    {
      int v85 = v101;
      __int16 v86 = v102;
    }
    int v103 = (v85 + 0x4000) >> 15;
    int v104 = 17356 * v103;
    int v105 = 34712 * v103;
    if (v85 <= 2027208703)
    {
      __int16 v106 = v86 + 23;
    }
    else
    {
      int v105 = v104;
      __int16 v106 = v86 + 24;
    }
    if ((v79 & 0x4000) != 0)
    {
      int v85 = v105;
      __int16 v86 = v106;
    }
    int v107 = (v85 + 0x4000) >> 15;
    int v108 = 29202 * v107;
    int v109 = 58404 * v107;
    if (v85 <= 1204862975)
    {
      __int16 v110 = v86 - 47;
    }
    else
    {
      int v109 = v108;
      __int16 v110 = v86 - 46;
    }
    BOOL v111 = v79 >= 0;
    if (v79 < 0) {
      int v112 = v109;
    }
    else {
      int v112 = v85;
    }
    if (v111) {
      __int16 v113 = v86;
    }
    else {
      __int16 v113 = v110;
    }
    if (v112 <= 0x3FFFFFFF)
    {
      do
      {
        v112 *= 2;
        --v113;
      }
      while (v112 < 0x40000000);
    }
    int v114 = *((__int16 *)a1 + 111);
    __int16 v115 = *((_WORD *)a1 + 93);
    __int16 v116 = v115 + v76;
    int v117 = (__int16)(v115 + v76);
    __int16 v118 = v75 - v116;
    __int16 v119 = v116 - v75;
    if (v117 <= v75) {
      __int16 v120 = *((_WORD *)a1 + 112);
    }
    else {
      __int16 v120 = v117;
    }
    if (v117 >= v75) {
      LOWORD(v121) = v119;
    }
    else {
      LOWORD(v121) = v118;
    }
    unsigned int v121 = (unsigned __int16)v121;
    if ((unsigned __int16)v121 >= 0x7FFFu) {
      unsigned int v121 = 0x7FFF;
    }
    if ((v121 & 0x6000) == 0)
    {
      if ((v121 & 0x2000) != 0)
      {
        char v123 = 0;
        int v122 = 3;
      }
      else if ((v121 & 0x1000) != 0)
      {
        char v123 = 0;
        int v122 = 2;
      }
      else
      {
        int v122 = (unsigned __int16)(v121 & 0x800) >> 11;
        if ((v121 & 0x800) != 0) {
          char v123 = 0;
        }
        else {
          char v123 = -1;
        }
      }
      int v124 = (v121 >> (v122 + 3)) + (v122 << 7);
      unsigned int v125 = v121 >> 3;
      if ((v123 & 1) == 0) {
        LOWORD(v125) = v124;
      }
      v120 += word_1000F517C[(__int16)v125];
    }
    int v126 = a1[1];
    __int16 v127 = v115 + *((_WORD *)a1 + 113);
    int v128 = v127;
    __int16 v129 = v114 - v127;
    LOWORD(v130) = v127 - v114;
    BOOL v131 = v128 < v114;
    if (v128 > v114) {
      LOWORD(v114) = v128;
    }
    if (v131) {
      LOWORD(v130) = v129;
    }
    unsigned int v130 = (unsigned __int16)v130;
    if ((unsigned __int16)v130 >= 0x7FFFu) {
      unsigned int v130 = 0x7FFF;
    }
    if ((v130 & 0x6000) == 0)
    {
      if ((v130 & 0x2000) != 0)
      {
        char v133 = 0;
        int v132 = 3;
      }
      else if ((v130 & 0x1000) != 0)
      {
        char v133 = 0;
        int v132 = 2;
      }
      else
      {
        int v132 = (unsigned __int16)(v130 & 0x800) >> 11;
        if ((v130 & 0x800) != 0) {
          char v133 = 0;
        }
        else {
          char v133 = -1;
        }
      }
      int v134 = (v130 >> (v132 + 3)) + (v132 << 7);
      unsigned int v135 = v130 >> 3;
      if ((v133 & 1) == 0) {
        LOWORD(v135) = v134;
      }
      LOWORD(v114) = word_1000F517C[(__int16)v135] + v114;
    }
    int v136 = v112 >> (21 - v113);
    if (v113 > 4) {
      int v136 = 16 << v126;
    }
    __int16 v137 = *((_WORD *)a1 + 116) + v136 + v120 - v114;
    if (0x80000 << v126 >> 16 < v137) {
      __int16 v137 = 8 << v126;
    }
    *((_WORD *)a1 + 93) = v137;
    int v138 = (_WORD *)*((void *)a1 + 20);
    int v139 = (unsigned __int16)*v138;
    *((void *)a1 + 20) = v138 + 1;
    *int v138 = v137;
    unint64_t v140 = *((void *)a1 + 22);
    if (*((void *)a1 + 20) >= v140) {
      *((void *)a1 + 20) = *((void *)a1 + 21);
    }
    int v141 = *((__int16 *)a1 + 93);
    int v142 = *((__int16 *)a1 + 92);
    if (v141 >= v142)
    {
      *((_WORD *)a1 + 92) = *((_WORD *)a1 + 93);
      LOWORD(v142) = v141;
    }
    else if (v139 == (unsigned __int16)v142)
    {
      uint64_t v143 = (__int16 *)*((void *)a1 + 21);
      __int16 v145 = *v143;
      uint64_t v144 = v143 + 1;
      LOWORD(v142) = v145;
      *((_WORD *)a1 + 92) = v145;
      while ((unint64_t)v144 < v140)
      {
        int v146 = *v144;
        if (v146 > (__int16)v142)
        {
          *((_WORD *)a1 + 92) = *v144;
          LOWORD(v142) = v146;
        }
        ++v144;
      }
    }
    unsigned int v147 = *((unsigned __int16 *)a1 + 156);
    if (v147 < *((unsigned __int16 *)a1 + 155))
    {
      *((_WORD *)a1 + 156) = v147 + 1;
LABEL_214:
      memcpy(*((void **)a1 + 11), __src, 2 * *a1);
      goto LABEL_215;
    }
    if (*((__int16 *)a1 + 102) < (__int16)v142)
    {
      uint64_t v287 = *a1;
      int v288 = *((__int16 *)a1 + 122);
      int v289 = (__int16 *)*((void *)a1 + 6);
      int v290 = *((__int16 *)a1 + 119);
      __int16 v291 = *((_WORD *)a1 + 120);
      int v292 = (__int16)(*((_WORD *)a1 + 119) - v291);
      int v293 = v292 / v288;
      if (v292 / v288 >= 0) {
        int v294 = v292 / v288;
      }
      else {
        int v294 = v293 + 1;
      }
      __int16 v295 = *((_WORD *)a1 + 104);
      __int16 v296 = *((_WORD *)a1 + 105);
      uint64_t v297 = *((void *)a1 + 3);
      if ((int)v287 <= 0)
      {
        sub_1000A656C(a1, *((__int16 **)a1 + 6), v297, v295, v296);
        goto LABEL_214;
      }
      uint64_t v298 = 0;
      uint64_t v299 = (_WORD *)*((void *)a1 + 1);
      int v356 = *((__int16 *)a1 + 121);
      int v353 = v294 >> 1;
      uint64_t v354 = *((void *)a1 + 33);
      uint64_t v355 = *((void *)a1 + 31);
      __int16 v300 = *((_WORD *)a1 + 103);
      do
      {
        int v302 = __src->i16[v298];
        int v303 = (__int16)v299[v298];
        __int16 v301 = v300;
        BOOL v209 = __OFSUB__(v302, v303);
        int v304 = v302 - v303;
        if (!((v304 < 0) ^ v209 | (v304 == 0)))
        {
          unsigned int v305 = (unsigned __int16)v304;
          if ((unsigned __int16)v304 >= 0x7FFFu) {
            unsigned int v305 = 0x7FFF;
          }
          if ((v305 & 0x6000) == 0)
          {
            int v306 = (unsigned __int16)(v305 & 0x800) >> 11;
            if ((v305 & 0x800) != 0) {
              char v307 = 0;
            }
            else {
              char v307 = -1;
            }
            if ((v305 & 0x1000) != 0)
            {
              char v307 = 0;
              int v306 = 2;
            }
            if ((v305 & 0x2000) != 0)
            {
              char v307 = 0;
              int v306 = 3;
            }
            int v308 = (v305 >> (v306 + 3)) + (v306 << 7);
            unsigned int v309 = v305 >> 3;
            if ((v307 & 1) == 0) {
              LOWORD(v309) = v308;
            }
            LOWORD(v302) = word_1000F4D7C[(__int16)v309] + v302;
          }
          __int16 v301 = v300;
          if ((__int16)v302 > v300) {
            __int16 v301 = v302;
          }
        }
        v289[v298] = v301;
        *(_WORD *)(v297 + v298 * 2) = v301 - v299[v298];
        ++v298;
      }
      while (v287 != v298);
      sub_1000A656C(a1, v289, *((void *)a1 + 3), v295, v296);
      int v340 = __src;
      while (1)
      {
        __int16 v341 = *v289 - *v299;
        if (v290 > v341)
        {
          if (v341 <= v291)
          {
            int v343 = 0;
            if (v288 <= 0) {
              goto LABEL_517;
            }
          }
          else
          {
            int v342 = (__int16)(v353 - v291 + v341);
            if (v342 >= v356)
            {
              int v343 = v342 / (__int16)v293;
              if (v343 >= v288) {
                goto LABEL_517;
              }
            }
            else
            {
              int v343 = v342 * v288 / v292;
              if (v343 >= v288) {
                goto LABEL_517;
              }
            }
          }
          uint64_t v348 = 2 * v343;
          __int16 v344 = *(_WORD *)(v355 + v348);
          LOWORD(v348) = *(_WORD *)(v354 + v348);
          __int16 v345 = v344 + *v299;
          int v346 = v345;
          *uint64_t v299 = v345;
          int v347 = (__int16)(v340->i16[0] + v348);
          LOWORD(v348) = v346 - v347;
          if (v346 >= v347)
          {
            LOWORD(v347) = v346;
            LODWORD(v348) = (unsigned __int16)v348;
            if ((unsigned __int16)v348 >= 0x7FFFu) {
              LODWORD(v348) = 0x7FFF;
            }
            if ((v348 & 0x6000) != 0) {
              goto LABEL_517;
            }
          }
          else
          {
            *uint64_t v299 = v347;
            LODWORD(v348) = (unsigned __int16)(v347 - v346);
            if (v348 >= 0x7FFF) {
              LODWORD(v348) = 0x7FFF;
            }
            if ((v348 & 0x6000) != 0) {
              goto LABEL_517;
            }
          }
          int v349 = (unsigned __int16)(v348 & 0x800) >> 11;
          if ((v348 & 0x800) != 0) {
            char v350 = 0;
          }
          else {
            char v350 = -1;
          }
          if ((v348 & 0x1000) != 0)
          {
            char v350 = 0;
            int v349 = 2;
          }
          if ((v348 & 0x2000) != 0)
          {
            char v350 = 0;
            int v349 = 3;
          }
          unsigned int v351 = (v348 >> (v349 + 3)) + (v349 << 7);
          unsigned int v352 = v348 >> 3;
          if ((v350 & 1) == 0) {
            LOWORD(v352) = v351;
          }
          *uint64_t v299 = word_1000F517C[(__int16)v352] + v347;
        }
LABEL_517:
        ++v289;
        ++v299;
        int v340 = (int16x4_t *)((char *)v340 + 2);
        LODWORD(v287) = v287 - 1;
        if (!v287) {
          goto LABEL_214;
        }
      }
    }
    int v312 = (__int16)(*((_WORD *)a1 + 94) + v142);
    int v313 = v312 & ~(v312 >> 31);
    if (v312 < 0) {
      int v312 = -v312;
    }
    int v312 = (unsigned __int16)v312;
    if ((unsigned __int16)v312 >= 0x7FFFu) {
      int v312 = 0x7FFF;
    }
    if ((v312 & 0x6000) == 0)
    {
      if ((v312 & 0x800) != 0) {
        char v314 = 0;
      }
      else {
        char v314 = -1;
      }
      if ((v312 & 0x1000) != 0)
      {
        char v314 = 0;
        int v315 = 2;
      }
      else
      {
        int v315 = (unsigned __int16)(v312 & 0x800) >> 11;
      }
      if ((v312 & 0x2000) != 0) {
        char v316 = 0;
      }
      else {
        char v316 = v314;
      }
      if ((v312 & 0x2000) != 0) {
        int v317 = 3;
      }
      else {
        int v317 = v315;
      }
      int v318 = (v312 >> (v317 + 3)) + (v317 << 7);
      unsigned int v319 = v312 >> 3;
      if ((v316 & 1) == 0) {
        LOWORD(v319) = v318;
      }
      LOWORD(v313) = word_1000F517C[(__int16)v319] + v313;
    }
    unsigned __int16 v320 = 0;
    int v321 = (_WORD *)*((void *)a1 + 1);
    unint64_t v322 = *((void *)a1 + 2);
    int v323 = (__int16)-(__int16)v313;
    if (*((__int16 *)a1 + 95) < v323) {
      LOWORD(v323) = *((_WORD *)a1 + 95);
    }
    if ((unsigned __int16)-(__int16)v323 >= 0x7FFFu) {
      unsigned int v324 = 0x7FFF;
    }
    else {
      unsigned int v324 = (unsigned __int16)-(__int16)v323;
    }
    if ((v324 & 0x6000) == 0)
    {
      if ((v324 & 0x800) != 0) {
        char v325 = 0;
      }
      else {
        char v325 = -1;
      }
      if ((v324 & 0x1000) != 0)
      {
        char v325 = 0;
        int v326 = 2;
      }
      else
      {
        int v326 = (unsigned __int16)(v324 & 0x800) >> 11;
      }
      if ((v324 & 0x2000) != 0) {
        char v327 = 0;
      }
      else {
        char v327 = v325;
      }
      if ((v324 & 0x2000) != 0) {
        int v328 = 3;
      }
      else {
        int v328 = v326;
      }
      int v329 = (v324 >> (v328 + 3)) + (v328 << 7);
      unsigned int v330 = v324 >> 3;
      if (v327) {
        LOWORD(v329) = v330;
      }
      unsigned __int16 v320 = word_1000F4D7C[(__int16)v329];
    }
    if ((unint64_t)v321 >= v322) {
      goto LABEL_214;
    }
    BOOL v331 = (_WORD *)*((void *)a1 + 11);
    while (1)
    {
      __int16 v332 = *v321 + v320;
      int v333 = v332;
      *int v321 = v332;
      int v334 = (__int16)(*v331 + v323);
      LOWORD(v335) = v333 - v334;
      if (v333 >= v334)
      {
        LOWORD(v334) = v333;
        unsigned int v335 = (unsigned __int16)v335;
        if ((unsigned __int16)v335 >= 0x7FFFu) {
          unsigned int v335 = 0x7FFF;
        }
        if ((v335 & 0x6000) != 0) {
          goto LABEL_497;
        }
      }
      else
      {
        *int v321 = v334;
        unsigned int v335 = (unsigned __int16)(v334 - v333);
        if (v335 >= 0x7FFF) {
          unsigned int v335 = 0x7FFF;
        }
        if ((v335 & 0x6000) != 0) {
          goto LABEL_497;
        }
      }
      int v336 = (unsigned __int16)(v335 & 0x800) >> 11;
      if ((v335 & 0x800) != 0) {
        char v337 = 0;
      }
      else {
        char v337 = -1;
      }
      if ((v335 & 0x1000) != 0)
      {
        char v337 = 0;
        int v336 = 2;
      }
      if ((v335 & 0x2000) != 0)
      {
        char v337 = 0;
        int v336 = 3;
      }
      int v338 = (v335 >> (v336 + 3)) + (v336 << 7);
      unsigned int v339 = v335 >> 3;
      if ((v337 & 1) == 0) {
        LOWORD(v339) = v338;
      }
      *int v321 = word_1000F517C[(__int16)v339] + v334;
LABEL_497:
      ++v321;
      ++v331;
      if ((unint64_t)v321 >= v322) {
        goto LABEL_214;
      }
    }
  }
  uint64_t v5 = *a1;
  if ((int)v5 >= 1)
  {
    uint64_t v6 = 2 * (v4 - 1);
    __int16 v7 = *(_WORD *)(*((void *)a1 + 12) + v6);
    __int16 v8 = *(_WORD *)(*((void *)a1 + 14) + v6);
    int v9 = (_WORD *)*((void *)a1 + 1);
    int32x4_t v10 = &v9[v5];
    int32x4_t v11 = __src;
    do
    {
      __int16 v12 = *v9 + v7;
      int v13 = v12;
      *int v9 = v12;
      __int16 v14 = v11->i16[0];
      int32x4_t v11 = (int16x4_t *)((char *)v11 + 2);
      int v15 = (__int16)(v14 + v8);
      LOWORD(v16) = v13 - v15;
      if (v13 >= v15)
      {
        LOWORD(v15) = v13;
        unsigned int v16 = (unsigned __int16)v16;
        if ((unsigned __int16)v16 >= 0x7FFFu) {
          unsigned int v16 = 0x7FFF;
        }
        if ((v16 & 0x6000) != 0) {
          goto LABEL_5;
        }
      }
      else
      {
        *int v9 = v15;
        unsigned int v16 = (unsigned __int16)(v15 - v13);
        if (v16 >= 0x7FFF) {
          unsigned int v16 = 0x7FFF;
        }
        if ((v16 & 0x6000) != 0) {
          goto LABEL_5;
        }
      }
      int v17 = (unsigned __int16)(v16 & 0x800) >> 11;
      if ((v16 & 0x800) != 0) {
        char v18 = 0;
      }
      else {
        char v18 = -1;
      }
      if ((v16 & 0x1000) != 0)
      {
        char v18 = 0;
        int v17 = 2;
      }
      if ((v16 & 0x2000) != 0)
      {
        char v18 = 0;
        int v17 = 3;
      }
      int v19 = (v16 >> (v17 + 3)) + (v17 << 7);
      unsigned int v20 = v16 >> 3;
      if ((v18 & 1) == 0) {
        LOWORD(v20) = v19;
      }
      *int v9 = word_1000F517C[(__int16)v20] + v15;
LABEL_5:
      ++v9;
    }
    while (v9 < v10);
  }
  *((_WORD *)a1 + 93) = 0;
LABEL_215:
  int v148 = a1[20] + 1;
  a1[20] = v148;
  uint64_t v149 = (__int16 *)*((void *)a1 + 1);
  uint64_t v150 = *a1;
  __int16 v151 = *v149;
  if ((int)v150 >= 2)
  {
    uint64_t v152 = v150 - 1;
    BOOL v153 = v149 + 1;
    do
    {
      int v155 = *v153++;
      __int16 v154 = v155;
      __int16 v156 = v155 - v151;
      __int16 v157 = v151 - v155;
      BOOL v158 = v151 < v155;
      if (v151 <= v155) {
        __int16 v151 = v154;
      }
      if (v158) {
        LOWORD(v159) = v156;
      }
      else {
        LOWORD(v159) = v157;
      }
      unsigned int v159 = (unsigned __int16)v159;
      if ((unsigned __int16)v159 >= 0x7FFFu) {
        unsigned int v159 = 0x7FFF;
      }
      if ((v159 & 0x6000) == 0)
      {
        int v160 = (unsigned __int16)(v159 & 0x800) >> 11;
        if ((v159 & 0x800) != 0) {
          char v161 = 0;
        }
        else {
          char v161 = -1;
        }
        if ((v159 & 0x1000) != 0)
        {
          char v161 = 0;
          int v160 = 2;
        }
        if ((v159 & 0x2000) != 0)
        {
          char v161 = 0;
          int v160 = 3;
        }
        int v162 = (v159 >> (v160 + 3)) + (v160 << 7);
        unsigned int v163 = v159 >> 3;
        if ((v161 & 1) == 0) {
          LOWORD(v163) = v162;
        }
        v151 += word_1000F517C[(__int16)v163];
      }
      --v152;
    }
    while (v152);
  }
  *((_WORD *)a1 + 144) = v151;
  if (v148 < *((unsigned __int16 *)a1 + 154) && !a1[74] && *((__int16 *)a1 + 93) <= *((__int16 *)a1 + 100)) {
    *((_WORD *)a1 + 145) = *((_WORD *)a1 + 101) + v151;
  }
  if (*((__int16 *)a1 + 93) > *((__int16 *)a1 + 100))
  {
    __int16 v164 = __src->i16[0];
    if ((int)v150 >= 2)
    {
      uint64_t v165 = v150 - 1;
      uint64_t v166 = (__int16 *)__src + 1;
      do
      {
        int v168 = *v166++;
        __int16 v167 = v168;
        __int16 v169 = v168 - v164;
        __int16 v170 = v164 - v168;
        BOOL v171 = v164 < v168;
        if (v164 <= v168) {
          __int16 v164 = v167;
        }
        if (v171) {
          LOWORD(v172) = v169;
        }
        else {
          LOWORD(v172) = v170;
        }
        unsigned int v172 = (unsigned __int16)v172;
        if ((unsigned __int16)v172 >= 0x7FFFu) {
          unsigned int v172 = 0x7FFF;
        }
        if ((v172 & 0x6000) == 0)
        {
          int v173 = (unsigned __int16)(v172 & 0x800) >> 11;
          if ((v172 & 0x800) != 0) {
            char v174 = 0;
          }
          else {
            char v174 = -1;
          }
          if ((v172 & 0x1000) != 0)
          {
            char v174 = 0;
            int v173 = 2;
          }
          if ((v172 & 0x2000) != 0)
          {
            char v174 = 0;
            int v173 = 3;
          }
          int v175 = (v172 >> (v173 + 3)) + (v173 << 7);
          unsigned int v176 = v172 >> 3;
          if ((v174 & 1) == 0) {
            LOWORD(v176) = v175;
          }
          v164 += word_1000F517C[(__int16)v176];
        }
        --v165;
      }
      while (v165);
    }
    unsigned int v179 = *((__int16 *)a1 + 145);
    uint64_t v180 = 218;
    if (v164 > (int)v179) {
      uint64_t v180 = 214;
    }
    uint64_t v181 = 55;
    if (v164 > (int)v179) {
      uint64_t v181 = 54;
    }
    __int16 v182 = a1[v181];
    __int16 v183 = *(_WORD *)((char *)a1 + v180) + v179;
    int v184 = v183;
    *((_WORD *)a1 + 145) = v183;
    int v185 = (__int16)(v182 + v164);
    LOWORD(v179) = v183 - v185;
    if (v184 >= v185)
    {
      LOWORD(v185) = v184;
      unsigned int v179 = (unsigned __int16)v179;
      if ((unsigned __int16)v179 >= 0x7FFFu) {
        unsigned int v179 = 0x7FFF;
      }
      if ((v179 & 0x6000) != 0)
      {
LABEL_295:
        a1[74] = 1;
        *((_WORD *)a1 + 96) = v185 - v151;
        if ((int)v150 >= 1)
        {
LABEL_296:
          __int16 v192 = *((_WORD *)a1 + 98);
          __int16 v193 = *((_WORD *)a1 + 99);
          int v195 = (_WORD *)*((void *)a1 + 5);
          int8x16_t v194 = (__int16 *)*((void *)a1 + 6);
          int32x4_t v196 = (_WORD *)*((void *)a1 + 7);
          __int16 v197 = *((_WORD *)a1 + 106);
          __int16 v198 = *((_WORD *)a1 + 103);
          uint64_t v199 = (_WORD *)*((void *)a1 + 3);
          int v200 = (_WORD *)*((void *)a1 + 4);
          int v201 = v194;
          uint64_t v202 = v150;
          unint64_t v203 = __src;
          int32x4_t v204 = v149;
          do
          {
            int v207 = v203->i16[0];
            int v208 = (__int16)(*v204 + v197);
            __int16 v205 = v198;
            BOOL v209 = __OFSUB__(v207, v208);
            int v210 = v207 - v208;
            if (!((v210 < 0) ^ v209 | (v210 == 0)))
            {
              unsigned int v211 = (unsigned __int16)v210;
              if ((unsigned __int16)v210 >= 0x7FFFu) {
                unsigned int v211 = 0x7FFF;
              }
              if ((v211 & 0x6000) == 0)
              {
                int v212 = (unsigned __int16)(v211 & 0x800) >> 11;
                if ((v211 & 0x800) != 0) {
                  char v213 = 0;
                }
                else {
                  char v213 = -1;
                }
                if ((v211 & 0x1000) != 0)
                {
                  char v213 = 0;
                  int v212 = 2;
                }
                if ((v211 & 0x2000) != 0)
                {
                  char v213 = 0;
                  int v212 = 3;
                }
                int v214 = (v211 >> (v212 + 3)) + (v212 << 7);
                unsigned int v215 = v211 >> 3;
                if ((v213 & 1) == 0) {
                  LOWORD(v215) = v214;
                }
                LOWORD(v207) = word_1000F4D7C[(__int16)v215] + v207;
              }
              if ((__int16)v207 <= v198) {
                __int16 v205 = v198;
              }
              else {
                __int16 v205 = v207;
              }
            }
            *v201++ = v205;
            __int16 v206 = *v204++;
            *v199++ = v205 - v206;
            unint64_t v203 = (int16x4_t *)((char *)v203 + 2);
            --v202;
          }
          while (v202);
          while (1)
          {
            int v216 = *v149;
            *int v195 = *v149;
            int v217 = *v194;
            LOWORD(v218) = v216 - v217;
            if (v216 >= v217)
            {
              LOWORD(v217) = v216;
              unsigned int v218 = (unsigned __int16)v218;
              if ((unsigned __int16)v218 >= 0x7FFFu) {
                unsigned int v218 = 0x7FFF;
              }
              if ((v218 & 0x6000) == 0)
              {
LABEL_325:
                int v219 = (unsigned __int16)(v218 & 0x800) >> 11;
                if ((v218 & 0x800) != 0) {
                  char v220 = 0;
                }
                else {
                  char v220 = -1;
                }
                if ((v218 & 0x1000) != 0)
                {
                  char v220 = 0;
                  int v219 = 2;
                }
                if ((v218 & 0x2000) != 0)
                {
                  char v220 = 0;
                  int v219 = 3;
                }
                int v221 = (v218 >> (v219 + 3)) + (v219 << 7);
                unsigned int v222 = v218 >> 3;
                if ((v220 & 1) == 0) {
                  LOWORD(v222) = v221;
                }
                LOWORD(v217) = word_1000F517C[(__int16)v222] + v217;
                *int v195 = v217;
              }
            }
            else
            {
              *int v195 = v217;
              unsigned int v218 = (unsigned __int16)(v217 - v216);
              if (v218 >= 0x7FFF) {
                unsigned int v218 = 0x7FFF;
              }
              if ((v218 & 0x6000) == 0) {
                goto LABEL_325;
              }
            }
            __int16 v223 = v217 - *v149;
            *int v195 = v223;
            __int16 v224 = v223 + v193;
            int v225 = v224;
            *int v200 = v224;
            int v226 = (__int16)(*v196 + v192);
            LOWORD(v227) = v225 - v226;
            if (v225 >= v226)
            {
              LOWORD(v226) = v225;
              unsigned int v227 = (unsigned __int16)v227;
              if ((unsigned __int16)v227 >= 0x7FFFu) {
                unsigned int v227 = 0x7FFF;
              }
              if ((v227 & 0x6000) != 0) {
                goto LABEL_316;
              }
            }
            else
            {
              *int v200 = v226;
              unsigned int v227 = (unsigned __int16)(v226 - v225);
              if (v227 >= 0x7FFF) {
                unsigned int v227 = 0x7FFF;
              }
              if ((v227 & 0x6000) != 0) {
                goto LABEL_316;
              }
            }
            int v228 = (unsigned __int16)(v227 & 0x800) >> 11;
            if ((v227 & 0x800) != 0) {
              char v229 = 0;
            }
            else {
              char v229 = -1;
            }
            if ((v227 & 0x1000) != 0)
            {
              char v229 = 0;
              int v228 = 2;
            }
            if ((v227 & 0x2000) != 0)
            {
              char v229 = 0;
              int v228 = 3;
            }
            int v230 = (v227 >> (v228 + 3)) + (v228 << 7);
            unsigned int v231 = v227 >> 3;
            if ((v229 & 1) == 0) {
              LOWORD(v231) = v230;
            }
            *int v200 = word_1000F517C[(__int16)v231] + v226;
LABEL_316:
            ++v194;
            ++v149;
            ++v195;
            ++v200;
            ++v196;
            LODWORD(v150) = v150 - 1;
            if (!v150)
            {
              unint64_t v177 = *((void *)a1 + 8);
              if (a1[20] != 1) {
                goto LABEL_354;
              }
LABEL_264:
              unint64_t v178 = *((void *)a1 + 9);
              if (v177 < v178)
              {
                if (v178 <= v177 + 2) {
                  unint64_t v178 = v177 + 2;
                }
                bzero((void *)v177, ((v178 + ~v177) & 0xFFFFFFFFFFFFFFFELL) + 2);
              }
              goto LABEL_382;
            }
          }
        }
        goto LABEL_263;
      }
    }
    else
    {
      *((_WORD *)a1 + 145) = v185;
      unsigned int v179 = (unsigned __int16)(v185 - v184);
      if (v179 >= 0x7FFF) {
        unsigned int v179 = 0x7FFF;
      }
      if ((v179 & 0x6000) != 0) {
        goto LABEL_295;
      }
    }
    if ((v179 & 0x800) != 0) {
      char v186 = 0;
    }
    else {
      char v186 = -1;
    }
    if ((v179 & 0x1000) != 0)
    {
      char v186 = 0;
      int v187 = 2;
    }
    else
    {
      int v187 = (unsigned __int16)(v179 & 0x800) >> 11;
    }
    if ((v179 & 0x2000) != 0) {
      char v188 = 0;
    }
    else {
      char v188 = v186;
    }
    if ((v179 & 0x2000) != 0) {
      int v189 = 3;
    }
    else {
      int v189 = v187;
    }
    int v190 = (v179 >> (v189 + 3)) + (v189 << 7);
    unsigned int v191 = v179 >> 3;
    if ((v188 & 1) == 0) {
      LOWORD(v191) = v190;
    }
    LOWORD(v185) = word_1000F517C[(__int16)v191] + v185;
    *((_WORD *)a1 + 145) = v185;
    goto LABEL_295;
  }
  *((_WORD *)a1 + 96) = *((_WORD *)a1 + 145) - v151;
  if ((int)v150 >= 1) {
    goto LABEL_296;
  }
LABEL_263:
  unint64_t v177 = *((void *)a1 + 8);
  if (v148 == 1) {
    goto LABEL_264;
  }
LABEL_354:
  int v232 = *a1;
  __int16 v233 = *((_WORD *)a1 + 146);
  if (a1[75])
  {
    int v234 = (__int16)(*((_WORD *)a1 + 145) - (*((_WORD *)a1 + 144) + *((_WORD *)a1 + 97)));
    int v235 = v234 & (v234 >> 31);
    if (v235 > v233) {
      __int16 v233 = v235;
    }
  }
  if (v232 >= 1)
  {
    uint64_t v237 = (unsigned __int16 *)*((void *)a1 + 4);
    uint64_t v236 = (_WORD *)*((void *)a1 + 5);
    do
    {
      int v240 = (__int16)*v237;
      LOWORD(v239) = v233;
      if (v240 >= 1)
      {
        unsigned int v241 = *v237;
        if (v241 >> 13)
        {
          int v242 = 0;
        }
        else
        {
          if ((v240 & 0x4000) != 0)
          {
            char v244 = 0;
            int v243 = 4;
          }
          else if ((v240 & 0x2000) != 0)
          {
            char v244 = 0;
            int v243 = 3;
          }
          else if ((v240 & 0x1000) != 0)
          {
            char v244 = 0;
            int v243 = 2;
          }
          else
          {
            int v243 = (unsigned __int16)(v240 & 0x800) >> 11;
            if ((v240 & 0x800) != 0) {
              char v244 = 0;
            }
            else {
              char v244 = -1;
            }
          }
          int v245 = (v241 >> (v243 + 3)) + (v243 << 7);
          unsigned int v246 = v241 >> 3;
          if ((v244 & 1) == 0) {
            LOWORD(v246) = v245;
          }
          int v242 = word_1000F4D7C[(__int16)v246];
        }
        int v247 = *((__int16 *)a1 + 143);
        int v248 = a1[1];
        char v249 = 25 - v248;
        int v250 = 1 << (24 - v248);
        int v251 = (__int16)(*v236 + v242);
        if (v247 > v251)
        {
          int v238 = (v250 + 183470944) >> v249;
        }
        else
        {
          int v252 = *((__int16 *)a1 + 142);
          if (v252 >= v251)
          {
            int v253 = (v252 - v247) / 107;
            int v254 = (v251 - v247) / v253;
            int v238 = ((dword_1000F557C[v254] + v250) >> v249)
                 + ((__int16)((v250 - dword_1000F557C[v254] + dword_1000F557C[v254 + 1]) >> v249)
                  * (__int16)(v251 - (v247 + v254 * v253))
                  + (v253 >> 1))
                 / v253;
          }
          else
          {
            int v238 = 0;
          }
        }
        int v239 = (__int16)((v238 + v242) << (a1[76] != 0));
        if (v239 <= v233) {
          LOWORD(v239) = v233;
        }
      }
      *(_WORD *)unint64_t v177 = v239;
      v177 += 2;
      ++v237;
      ++v236;
      --v232;
    }
    while (v232);
  }
LABEL_382:
  uint64_t v255 = *a1;
  if ((int)v255 >= 1)
  {
    uint64_t v256 = (__int16 *)*((void *)a1 + 6);
    uint64_t v257 = (_WORD *)*((void *)a1 + 7);
    uint64_t v258 = &v256[v255];
    int v259 = (__int16 *)*((void *)a1 + 1);
    uint64_t v260 = (__int16 *)*((void *)a1 + 8);
    uint64_t v261 = __src;
    do
    {
      __int16 v264 = v261->i16[0];
      uint64_t v261 = (int16x4_t *)((char *)v261 + 2);
      __int16 v263 = v264;
      __int16 v265 = *v260++;
      *uint64_t v256 = v265 + v263;
      int v266 = *v259;
      *uint64_t v257 = *v259;
      int v267 = *v256;
      LOWORD(v268) = v266 - v267;
      if (v266 >= v267)
      {
        LOWORD(v267) = v266;
        unsigned int v268 = (unsigned __int16)v268;
        if ((unsigned __int16)v268 >= 0x7FFFu) {
          unsigned int v268 = 0x7FFF;
        }
        if ((v268 & 0x6000) != 0) {
          goto LABEL_384;
        }
      }
      else
      {
        *uint64_t v257 = v267;
        unsigned int v268 = (unsigned __int16)(v267 - v266);
        if (v268 >= 0x7FFF) {
          unsigned int v268 = 0x7FFF;
        }
        if ((v268 & 0x6000) != 0) {
          goto LABEL_384;
        }
      }
      int v269 = (unsigned __int16)(v268 & 0x800) >> 11;
      if ((v268 & 0x800) != 0) {
        char v270 = 0;
      }
      else {
        char v270 = -1;
      }
      if ((v268 & 0x1000) != 0)
      {
        char v270 = 0;
        int v269 = 2;
      }
      if ((v268 & 0x2000) != 0)
      {
        char v270 = 0;
        int v269 = 3;
      }
      int v271 = (v268 >> (v269 + 3)) + (v269 << 7);
      unsigned int v272 = v268 >> 3;
      if ((v270 & 1) == 0) {
        LOWORD(v272) = v271;
      }
      LOWORD(v267) = word_1000F517C[(__int16)v272] + v267;
      *uint64_t v257 = v267;
LABEL_384:
      __int16 v262 = *v259++;
      *v257++ = v267 - v262;
      ++v256;
    }
    while (v256 < v258);
  }
  if (*((__int16 *)a1 + 93) <= *((__int16 *)a1 + 100)) {
    goto LABEL_450;
  }
  uint64_t v273 = *a1;
  uint64_t v274 = (int16x4_t *)*((void *)a1 + 6);
  sub_1000A656C(a1, (__int16 *)v274, *((void *)a1 + 5), *((__int16 *)a1 + 140), *((__int16 *)a1 + 141));
  if ((int)v273 < 1) {
    goto LABEL_450;
  }
  if (v273 < 8
    || ((uint64_t v275 = 2 * (v273 - 1) + 2, v274 < (int16x4_t *)&__src->i8[v275])
      ? (BOOL v276 = &v274->i8[v275] > (__int8 *)__src)
      : (BOOL v276 = 0),
        v276))
  {
    LODWORD(v277) = 0;
    int v279 = (char *)__src;
    unsigned int v280 = v274;
    goto LABEL_422;
  }
  uint64_t v277 = v273 & 0x7FFFFFFC;
  uint64_t v278 = 2 * (v273 & 0xFFFFFFFC);
  int v279 = (char *)__src + v278;
  unsigned int v280 = (int16x4_t *)((char *)v274 + v278);
  uint64_t v281 = v273 & 0xFFFFFFFC;
  uint64_t v282 = __src;
  do
  {
    int16x4_t v283 = *v282;
    int16x4_t v284 = vcgt_s16(*v274, *v282);
    if (v284.i8[0])
    {
      v274->i16[0] = v283.i16[0];
      if ((v284.i8[2] & 1) == 0)
      {
LABEL_414:
        if (v284.i8[4]) {
          goto LABEL_419;
        }
        goto LABEL_415;
      }
    }
    else if ((v284.i8[2] & 1) == 0)
    {
      goto LABEL_414;
    }
    v274->i16[1] = v283.i16[1];
    if (v284.i8[4])
    {
LABEL_419:
      v274->i16[2] = v283.i16[2];
      if ((v284.i8[6] & 1) == 0) {
        goto LABEL_411;
      }
      goto LABEL_420;
    }
LABEL_415:
    if ((v284.i8[6] & 1) == 0) {
      goto LABEL_411;
    }
LABEL_420:
    v274->i16[3] = v283.i16[3];
LABEL_411:
    ++v274;
    ++v282;
    v281 -= 4;
  }
  while (v281);
  if (v277 == v273) {
    goto LABEL_450;
  }
LABEL_422:
  int v285 = v273 - v277;
  do
  {
    int v286 = *(__int16 *)v279;
    if (v280->i16[0] > v286) {
      v280->i16[0] = v286;
    }
    v279 += 2;
    unsigned int v280 = (int16x4_t *)((char *)v280 + 2);
    --v285;
  }
  while (v285);
LABEL_450:
  if (*a1 >= 1)
  {
    uint64_t v310 = 0;
    uint64_t v311 = *((void *)a1 + 6);
    do
    {
      __src->i16[v310] = *(_WORD *)(v311 + 2 * v310);
      ++v310;
    }
    while ((int)v310 < *a1);
  }
}

uint64_t sub_1000A64C8(uint64_t *a1)
{
  sub_1000C321C(a1[1]);
  sub_1000C321C(a1[11]);
  sub_1000C321C(a1[21]);
  sub_1000C321C(a1[17]);
  sub_1000C321C(a1[19]);
  sub_1000C321C(a1[3]);
  sub_1000C321C(a1[4]);
  sub_1000C321C(a1[5]);
  sub_1000C321C(a1[6]);
  sub_1000C321C(a1[7]);
  sub_1000C321C(a1[13]);
  sub_1000C321C(a1[15]);
  sub_1000C321C(a1[32]);
  sub_1000C321C(a1[34]);
  return sub_1000C321C((uint64_t)a1);
}

int *sub_1000A656C(int *result, __int16 *a2, uint64_t a3, int a4, int a5)
{
  if (*result >= 2)
  {
    LODWORD(v5) = 0;
    uint64_t v6 = a2 + 1;
    int v7 = *result - 1;
    BOOL v8 = a2[1] > *a2;
    while (1)
    {
      int v9 = v5 + 1;
      uint64_t v10 = (int)v5;
      __int16 v11 = *(_WORD *)(a3 + 2 * (int)v5);
      if ((int)v5 + 1 < v7) {
        break;
      }
      LODWORD(v5) = v5 + 1;
      if (a4 > v11) {
        goto LABEL_17;
      }
LABEL_3:
      if ((int)v5 >= v7) {
        return result;
      }
    }
    __int16 v12 = &a2[(int)v5 + 2];
    uint64_t v5 = (int)v5;
    do
    {
      int v13 = *v12++;
      BOOL v14 = v8;
      int v15 = v6[v5];
      BOOL v16 = v13 <= v15;
      BOOL v8 = v13 > v15;
      if (v16 && v14) {
        break;
      }
      if (*(__int16 *)(a3 + 2 + 2 * v5) < v11) {
        __int16 v11 = *(_WORD *)(a3 + 2 + 2 * v5);
      }
      ++v5;
    }
    while ((int)v5 + 1 < v7);
    LODWORD(v5) = v5 + 1;
    if (a4 <= v11) {
      goto LABEL_3;
    }
LABEL_17:
    int v18 = (1 << result[1]) - (((int)v5 + v9) << result[1]) / (2 * *result);
    if (v9 < (int)v5)
    {
      int v19 = (unsigned __int16)a2[v10] - a5;
      unsigned int v20 = &v6[v10];
      int v21 = ~v10 + v5;
      int v22 = a5;
      do
      {
        int v23 = *v20;
        int v24 = a5;
        if (v23 < (__int16)v19)
        {
          *unsigned int v20 = v19;
          int v24 = ((1 << (result[1] - 1)) + v22 * v18) >> result[1];
          int v23 = v19;
        }
        int v19 = v23 - v24;
        ++v20;
        int v22 = v24;
        --v21;
      }
      while (v21);
    }
    LODWORD(v25) = v5 - 1;
    if ((int)v5 - 1 > (int)v10)
    {
      int v26 = (unsigned __int16)a2[(int)v5] - a5;
      uint64_t v25 = (int)v25;
      int v27 = a5;
      do
      {
        int v28 = a2[v25];
        int v29 = a5;
        if (v28 < (__int16)v26)
        {
          a2[v25] = v26;
          int v29 = ((1 << (result[1] - 1)) + v27 * v18) >> result[1];
          int v28 = v26;
        }
        int v26 = v28 - v29;
        --v25;
        int v27 = v29;
      }
      while (v25 > v10);
    }
    goto LABEL_3;
  }
  return result;
}

uint64_t sub_1000A6718(uint64_t *a1, __int16 *a2, unsigned int a3, uint64_t a4, void *a5, void *a6, void *a7, void *a8, void *a9)
{
  uint64_t v462 = 0;
  size_t v14 = (int)a4;
  size_t v15 = 4 * (int)a4;
  bzero(a5, v15);
  uint64_t v453 = (uint64_t)a6;
  bzero(a6, v15);
  uint64_t v454 = (uint64_t)a7;
  bzero(a7, v15);
  if (a8) {
    bzero(a8, v14);
  }
  if (a9) {
    bzero(a9, v14);
  }
  int v16 = sub_1000CED6C((unint64_t)a2) + 1;
  size_t v17 = 2 * v16;
  uint64_t v25 = (unsigned __int16 *)sub_1000CD454(v17, v18, v19, v20, v21, v22, v23, v24);
  int v26 = v25;
  if (!v25
    || (v459 = v25, v27 = sub_1000CED88(v25, a2, v16), int v26 = v459, !v27)
    || (v28 = sub_1000D01FC(v459), int v26 = v459, !v28))
  {
    sub_1000CD4D0(v26, 2 * v16);
    return 0;
  }
  int v451 = sub_1000CD454(v15, v29, v30, v31, v32, v33, v34, v35);
  uint64_t v460 = sub_1000CD454(v15, v36, v37, v38, v39, v40, v41, v42);
  __int16 v57 = sub_1000CD454(v15, v43, v44, v45, v46, v47, v48, v49);
  if (!a8)
  {
    int v58 = 0;
    uint64_t v59 = a4;
    if (a9) {
      goto LABEL_10;
    }
LABEL_14:
    __int16 v60 = 0;
    goto LABEL_15;
  }
  int v58 = (char *)sub_1000CD454(v14, v50, v51, v52, v53, v54, v55, v56);
  uint64_t v59 = a4;
  if (!a9) {
    goto LABEL_14;
  }
LABEL_10:
  __int16 v60 = sub_1000CD454(v14, v50, v51, v52, v53, v54, v55, v56);
LABEL_15:
  uint64_t v63 = sub_1000B9D78(a1, (unint64_t)v459, 0, a3, 0, v59, v451, (uint64_t)v460, (uint64_t)v57, v58, (uint64_t)v60);
  int v442 = a1;
  uint64_t v430 = v17;
  int v71 = v59;
  if ((int)v63 > (int)v59)
  {
    char v72 = v451;
    do
    {
      if (v60) {
        sub_1000CD4D0(v60, v71);
      }
      int v73 = v71;
      int v74 = v60;
      int v75 = v73;
      uint64_t v76 = v73;
      if (v58) {
        sub_1000CD4D0(v58, v73);
      }
      uint64_t v77 = 4 * v76;
      sub_1000CD4D0(v57, v77);
      sub_1000CD4D0(v460, v77);
      sub_1000CD4D0(v72, v77);
      size_t v78 = 2 * v75;
      uint64_t v79 = (2 * v75);
      char v72 = sub_1000CD454(4 * v78, v80, v81, v82, v83, v84, v85, v86);
      uint64_t v460 = sub_1000CD454(4 * v78, v87, v88, v89, v90, v91, v92, v93);
      __int16 v57 = sub_1000CD454(4 * v78, v94, v95, v96, v97, v98, v99, v100);
      if (a8) {
        int v58 = (char *)sub_1000CD454(v78, v101, v102, v103, v104, v105, v106, v107);
      }
      if (a9) {
        int v74 = sub_1000CD454(v78, v101, v102, v103, v104, v105, v106, v107);
      }
      __int16 v60 = v74;
      uint64_t v410 = (uint64_t)v74;
      int v71 = v79;
      uint64_t v63 = sub_1000B9D78(a1, (unint64_t)v459, 0, a3, 0, v79, v72, (uint64_t)v460, (uint64_t)v57, v58, v410);
    }
    while ((int)v63 > (int)v79);
    int v451 = v72;
  }
  int v108 = 2 * v63;
  uint64_t v443 = v63;
  for (int i = (2 * v63) | 1; ; int i = v111 + 4)
  {
    __int16 v110 = sub_1000CD454(28 * i, v64, v65, v66, v67, v68, v69, v70);
    int v111 = sub_1000A8A2C(a2, v108, (uint64_t)v110);
    if (v111 <= v108) {
      break;
    }
    sub_1000CD4D0(v110, 28 * (v108 + 1));
    int v108 = v111 + 3;
  }
  int v112 = sub_1000B51A0(a1);
  v439 = sub_1000CD454(2 * (v112 + 1), v113, v114, v115, v116, v117, v118, v119);
  int v120 = sub_1000B51E0(a1);
  v438 = sub_1000CD454(2 * (v120 + 1), v121, v122, v123, v124, v125, v126, v127);
  v441 = (int *)sub_1000CD454(0x78uLL, v128, v129, v130, v131, v132, v133, v134);
  int v445 = (int32x2_t *)a1[7];
  int32x2_t v415 = v445[27];
  if (v111 > 1)
  {
    for (int j = 0; j < v111 - 1; ++j)
    {
      int v142 = (int *)v110 + 7 * j;
      int v143 = *v142;
      if ((*v142 - 1) > 1)
      {
        if (v143 != 3) {
          continue;
        }
        unsigned int v147 = (unsigned int *)v110 + 7 * j + 7;
        uint64_t v135 = *v147;
        if (v135 != 1) {
          continue;
        }
        uint64_t v135 = v459[*((int *)v110 + 7 * j + 1)];
        if (v135 != 36) {
          continue;
        }
        int v148 = (char *)v110 + 28 * j;
        uint64_t v135 = *((unsigned int *)v148 + 2);
        *((_DWORD *)v148 + 2) = v135 + *((_DWORD *)v110 + 7 * j + 9);
        *int v142 = 1;
        ++j;
      }
      else
      {
        uint64_t v135 = j + 1;
        uint64_t v144 = (_DWORD *)v110 + 7 * v135;
        uint64_t v136 = *v144;
        if (v136 != 3) {
          continue;
        }
        if (v143 != 1 || j >= v111 - 2)
        {
          if (v143 == 1)
          {
            int v146 = v459[*((int *)v110 + 7 * v135 + 1)];
LABEL_51:
            if (v146 == 36)
            {
              if ((int)v135 < v111)
              {
                uint64_t v149 = (_DWORD *)v110 + 7 * j + 2;
                uint64_t v150 = (v111 - j) - 1;
                __int16 v151 = (_DWORD *)v110 + 7 * v135;
                do
                {
                  if (v459[v151[1]] != 36 && *v151 != 1) {
                    break;
                  }
                  uint64_t v135 = *v149;
                  *uint64_t v149 = v135 + v151[2];
                  _DWORD *v151 = 4;
                  v151 += 7;
                  --v150;
                }
                while (v150);
              }
              continue;
            }
          }
LABEL_58:
          uint64_t v136 = qword_100101CC0;
          if (!qword_100101CC0) {
            continue;
          }
          if (*(_DWORD *)(qword_100101CC0 + 5200)
            && ((int v152 = v459[*((int *)v110 + 7 * v135 + 1)], v152 == 8217) || v152 == 39)
            && (uint64_t v137 = j + 2, v147 = (unsigned int *)v110 + 7 * v137, v138 = v147[2], v138 == 1)
            && (uint64_t v137 = v459[*((int *)v110 + 7 * v137 + 1)], v137 == 115))
          {
            BOOL v153 = (char *)v110 + 28 * j;
            uint64_t v135 = *((unsigned int *)v153 + 2);
            *int v142 = 1;
            *((_DWORD *)v153 + 2) = v135 + 2;
            *((_DWORD *)v153 + 3) = 1;
            _DWORD *v144 = 4;
          }
          else
          {
            if (!*(_DWORD *)(qword_100101CC0 + 5204)) {
              continue;
            }
            int v154 = v459[*((int *)v110 + 7 * v135 + 1)];
            if (v154 != 39 && v154 != 8217) {
              continue;
            }
            uint64_t v156 = j + 2;
            unsigned int v147 = (unsigned int *)v110 + 7 * v156;
            if (v147[2] != 1 || v459[*((int *)v110 + 7 * v156 + 1)] != 115) {
              continue;
            }
            _DWORD *v144 = 4;
          }
          goto LABEL_33;
        }
        int v146 = v459[*((int *)v110 + 7 * v135 + 1)];
        if (v146 != 64 && v146 != 33) {
          goto LABEL_51;
        }
        uint64_t v136 = j + 2;
        unsigned int v147 = (unsigned int *)v110 + 7 * v136;
        uint64_t v137 = *v147;
        if (v137 != 1) {
          goto LABEL_58;
        }
        *((_DWORD *)v110 + 7 * j + 2) += *((_DWORD *)v110 + 7 * v136 + 2) + *((_DWORD *)v110 + 7 * v135 + 2);
        _DWORD *v144 = 4;
        j += 2;
      }
LABEL_33:
      unsigned int *v147 = 4;
    }
  }
  unsigned int v456 = v57;
  if (**(int **)v445 < 1)
  {
    int v158 = 2;
  }
  else
  {
    __int16 v157 = (int *)(*(void *)v445 + 64);
    int v158 = 2;
    do
    {
      int v159 = *v157;
      v157 += 16;
      v158 += 2;
    }
    while (v159 > 0);
  }
  int v160 = v158 * v111;
  int v448 = v160 - 1;
  v457 = v58;
  int v447 = v60;
  int v437 = v108;
  int v446 = v111;
  int v429 = v71;
  int v420 = v111 - 1;
  if (v160 >= 1)
  {
    uint64_t v431 = 40 * v160;
    char v161 = sub_1000CD454(v431, v135, v136, v137, v138, (uint64_t)v459, v139, v140);
    if (v111 >= 1)
    {
      uint64_t v162 = 0;
      unsigned int v163 = 0;
      __int16 v164 = 0;
      uint64_t v423 = v111;
      do
      {
        int v165 = -1;
        uint64_t v166 = 3;
        do
        {
          ++v165;
          int v167 = v161[v166];
          v166 += 5;
        }
        while (v167);
        if (v448 <= v165) {
          break;
        }
        int32x2_t v168 = *v445;
        if (**(int **)v445 > 0)
        {
          int32x2_t v169 = vdup_n_s32(v162);
          do
          {
            if (v163) {
              v161[5 * v165 + 4] = v163;
            }
            unsigned int v163 = (int32x2_t *)&v161[5 * v165];
            int32x2_t *v163 = v168;
            v163[1].i32[1] = 0;
            v163[2] = v169;
            v163[3].i32[0] = 1;
            v163[1].i32[0] = *(_DWORD *)(*(void *)&v168 + 56);
            uint64_t v170 = 40 * v165 + 64;
            do
            {
              ++v165;
              int v171 = *(_DWORD *)((char *)v161 + v170);
              v170 += 40;
            }
            while (v171);
            if (v448 <= v165) {
              goto LABEL_156;
            }
            int v172 = *(_DWORD *)(*(void *)&v168 + 64);
            *(void *)&v168 += 64;
          }
          while (v172 > 0);
        }
        int v433 = v163;
        int v173 = 0;
        int v444 = (int *)v110 + 7 * v162;
        uint64_t v440 = v162 + 1;
        char v174 = v163;
        do
        {
          uint64_t v176 = v174[1].i32[1];
          if ((int)v176 < *(_DWORD *)v174->i32[0] - 1)
          {
            uint64_t v177 = *(void *)(*(void *)v174 + 8);
            uint64_t v178 = *(int *)(v177 + 8 * v176);
            int v179 = *(_DWORD *)(v177 + 8 * ((int)v176 + 1));
            if ((int)v178 < v179)
            {
              uint64_t v180 = v173;
              uint64_t v181 = v164;
              do
              {
                uint64_t v182 = *(void *)(*(void *)v174 + 24);
                int v183 = *(_DWORD *)(v182 + 12 * v178);
                if (v183 && v162 == v174[2].i32[1])
                {
                  int v184 = v110;
                  uint64_t v185 = v162;
                  if (sub_1000B0894((uint64_t)v445, v183, (uint64_t)v459, v444))
                  {
                    __int16 v164 = (int32x2_t *)&v161[5 * v165];
                    int v173 = v164;
                    if (v180)
                    {
                      v181[4] = (int32x2_t)v164;
                      int v173 = v180;
                    }
                    int32x2_t *v164 = *v174;
                    uint64_t v186 = 5 * v165;
                    int v187 = &v161[v186];
                    v187[3] = *(_DWORD *)(v182 + 12 * v178 + 8);
                    v187[4] = v174[2].i32[0];
                    v187[5] = v440;
                    v187[2] = v174[1].i32[0];
                    v187[6] = 1;
                    uint64_t v188 = v186 * 8 + 64;
                    uint64_t v162 = v185;
                    do
                    {
                      int v189 = *(_DWORD *)((char *)v161 + v188);
                      ++v165;
                      v188 += 40;
                    }
                    while (v189);
                    int v58 = v457;
                    __int16 v110 = v184;
                    if (v448 <= v165)
                    {
                      sub_1000CD4D0(v161, v431);
                      __int16 v60 = v447;
                      int v108 = v437;
                      int v111 = v446;
                      HIDWORD(v462) = 0;
                      if (v446 < 1) {
                        goto LABEL_400;
                      }
LABEL_158:
                      uint64_t v222 = 0;
                      uint64_t v61 = 0;
                      int v223 = 0;
                      int v224 = v443;
                      int v225 = (char *)v460 + 4;
                      uint64_t v226 = (int)v443 - 1;
                      uint64_t v414 = v110 + 7;
                      while (2)
                      {
                        unint64_t v461 = 0;
                        LODWORD(v462) = 0;
                        unsigned int v227 = (int *)v110 + 7 * v223;
                        int v228 = *v227;
                        if (*v227 == 4) {
                          goto LABEL_163;
                        }
                        int v229 = v223;
                        if ((int)v222 >= v224)
                        {
                          BOOL v234 = 1;
                          int v232 = v456;
                        }
                        else
                        {
                          int v230 = *((_DWORD *)v110 + 7 * v223 + 1);
                          uint64_t v231 = (int)v222;
                          if (*((_DWORD *)v460 + (int)v222) >= v230)
                          {
                            BOOL v234 = 0;
                            int v232 = v456;
                          }
                          else
                          {
                            int v232 = v456;
                            while (v226 != v231)
                            {
                              int v233 = *(_DWORD *)&v225[4 * v231++];
                              if (v233 >= v230)
                              {
                                BOOL v234 = v231 >= (int)v443;
                                goto LABEL_174;
                              }
                            }
                            BOOL v234 = 1;
                            uint64_t v231 = v443;
                          }
LABEL_174:
                          uint64_t v222 = v231;
                        }
                        int v235 = *((_DWORD *)v110 + 7 * v223 + 3);
                        BOOL v237 = v235 != 15 && v235 != 0 || v228 == 3;
                        int v449 = v223;
                        if (!v237)
                        {
                          char v254 = v235 == 15 || v234;
                          if (v254) {
                            goto LABEL_346;
                          }
                          uint64_t v255 = (char *)v110 + 28 * v223;
                          uint64_t v424 = (int *)(v255 + 4);
                          v421 = v255 + 8;
                          uint64_t v256 = 4 * (int)v222;
                          uint64_t v257 = *(int *)((char *)v460 + v256);
                          if (*((_DWORD *)v255 + 2) + *((_DWORD *)v255 + 1) <= *(_DWORD *)((char *)v456 + v256)
                                                                              + (int)v257)
                            goto LABEL_346;
                          uint64_t v258 = (int)v222;
                          uint64_t v435 = v222;
                          int v259 = sub_1000CD5A8(v459[v257], 0);
                          uint64_t v416 = v258;
                          uint64_t v260 = v258 + 1;
                          int v261 = sub_1000CD5A8(v459[*((int *)v460 + v260)], v259);
                          int v229 = v223;
                          uint64_t v222 = v435;
                          if (v261 != v259) {
                            goto LABEL_346;
                          }
                          int v262 = sub_1000CD564(v259);
                          int v229 = v223;
                          uint64_t v222 = v435;
                          if (!v262) {
                            goto LABEL_346;
                          }
                          int v263 = *v424;
                          unint64_t v264 = *v421;
                          if ((int)v260 < (int)v443)
                          {
                            uint64_t v265 = v260 << 32;
                            uint64_t v266 = 4 * v260;
                            int v267 = (_DWORD *)v460 + v260;
                            unsigned int v268 = (_DWORD *)((char *)v456 + v266);
                            int v269 = v443 - 1 - v435;
                            while (*v267 < (int)v264 + v263)
                            {
                              int v270 = sub_1000CD5A8(v459[*((int *)v460 + v416)], v259);
                              int v229 = v223;
                              uint64_t v222 = v435;
                              if (v270 != v259) {
                                goto LABEL_346;
                              }
                              int v263 = *v424;
                              unint64_t v264 = *v421;
                              if (*v268 + *v267 > (int)v264 + *v424) {
                                goto LABEL_346;
                              }
                              v265 += (uint64_t)&_mh_execute_header;
                              ++v267;
                              ++v268;
                              if (!--v269)
                              {
                                uint64_t v260 = (int)v443;
                                goto LABEL_345;
                              }
                            }
                            uint64_t v260 = v265 >> 32;
                          }
LABEL_345:
                          if (*((_DWORD *)v460 + v260) <= (int)v264 + v263)
                          {
                            BOOL v450 = (char *)&v459[v263];
                            unint64_t v389 = v264;
                            int v390 = sub_1000B574C(v442, v450, 0, 0, v264, 30, (uint64_t)v441);
                            if (v390 < 1)
                            {
                              LOBYTE(v391) = 0;
                              int v393 = -1;
                            }
                            else
                            {
                              BOOL v391 = 0;
                              unint64_t v392 = v390 + 1;
                              int v393 = -1;
                              unint64_t v394 = (unint64_t)v439;
                              uint64_t v395 = v441;
                              do
                              {
                                uint64_t v397 = (v392 - 2);
                                sub_1000B5360((uint64_t)v442, v395[v397], v394, v438);
                                unint64_t v398 = sub_1000CED6C(v394);
                                if ((int)v398 < (int)v389)
                                {
                                  unint64_t v396 = v389;
                                  uint64_t v395 = v441;
                                }
                                else
                                {
                                  v399 = (_WORD *)v394;
                                  unint64_t v400 = v398;
                                  int v401 = sub_1000CFC34(v450, v399, v398);
                                  uint64_t v395 = v441;
                                  if (v393 == -1
                                    || (unint64_t v396 = v389, (int)v400 > (int)v389)
                                    || (v391 ? (BOOL v402 = v401 == 0) : (BOOL v402 = 1),
                                        !v402 ? (int v403 = 0) : (int v403 = 1),
                                        v400 == v389 && v403))
                                  {
                                    int v393 = v441[v397];
                                    BOOL v391 = v401 == 0;
                                    unint64_t v396 = v400;
                                  }
                                }
                                unint64_t v389 = v396;
                                --v392;
                                unint64_t v394 = (unint64_t)v439;
                              }
                              while (v392 > 1);
                              unint64_t v461 = __PAIR64__(v391, v396);
                            }
                            sub_1000BA9EC(a4, (uint64_t)a5, v453, v454, 0, (uint64_t)a9, (int *)&v462 + 1, a3, v393, *v424, v389, 0, v391);
                            uint64_t v61 = (v61 + 1);
                            int v224 = v443;
                            uint64_t v222 = v435;
                            int v58 = v457;
                            __int16 v60 = v447;
                            if ((int)v435 >= (int)v443)
                            {
                              int v108 = v437;
                              int v225 = (char *)v460 + 4;
                            }
                            else
                            {
                              double v404 = (int *)v460 + v416;
                              uint64_t v405 = (int)v443 - v416;
                              int v108 = v437;
                              int v225 = (char *)v460 + 4;
                              while (1)
                              {
                                int v406 = *v404++;
                                if (v406 >= *v421 + *v424) {
                                  break;
                                }
                                uint64_t v222 = (v222 + 1);
                                if (!--v405)
                                {
                                  int v224 = v443;
                                  uint64_t v222 = v443;
                                  goto LABEL_163;
                                }
                              }
                              int v224 = v443;
                            }
                          }
                          else
                          {
LABEL_346:
                            int v224 = v443;
                            if ((int)v222 < (int)v443)
                            {
                              int v377 = 0;
                              uint64_t v378 = (char *)v110 + 28 * v229;
                              uint64_t v379 = v378 + 4;
                              uint64_t v380 = v378 + 8;
                              int v381 = v223 + 1;
                              uint64_t v382 = (int)v222;
                              unsigned int v436 = v443 + v61 - v222;
                              do
                              {
                                int v383 = *((_DWORD *)v460 + v382);
                                if (v383 >= *v380 + *v379)
                                {
                                  uint64_t v222 = v382;
                                  int v58 = v457;
                                  __int16 v60 = v447;
                                  goto LABEL_160;
                                }
                                if (*v227 == 3)
                                {
                                  while (1)
                                    ;
                                }
                                char v384 = (char)v447;
                                if (v447) {
                                  char v384 = *((unsigned char *)v447 + v382);
                                }
                                sub_1000BA9EC(a4, (uint64_t)a5, v453, v454, 0, (uint64_t)a9, (int *)&v462 + 1, a3, v451[v382], v383, *((_DWORD *)v456 + v382), 0, v384);
                                if (*((_DWORD *)v110 + 7 * v381 + 7 * v377)
                                  && (int v385 = *((_DWORD *)v456 + v382) + *((_DWORD *)v460 + v382),
                                      *((_DWORD *)v110 + 7 * v381 + 7 * v377 + 1) < v385))
                                {
                                  int v386 = v377 + 1;
                                  int v111 = v446;
                                  int v223 = v449;
                                  do
                                  {
                                    int v377 = v386;
                                    LODWORD(v462) = v386;
                                    int v387 = v449 + v386 + 1;
                                    if (!*((_DWORD *)v110 + 7 * v387)) {
                                      break;
                                    }
                                    int v388 = *((_DWORD *)v110 + 7 * v387 + 1);
                                    int v386 = v377 + 1;
                                  }
                                  while (v388 < v385);
                                }
                                else
                                {
                                  int v111 = v446;
                                  int v223 = v449;
                                }
                                uint64_t v61 = (v61 + 1);
                                ++v382;
                              }
                              while (v382 != (int)v443);
                              uint64_t v61 = v436;
                              int v224 = v443;
                              uint64_t v222 = v443;
                            }
                            int v58 = v457;
                            __int16 v60 = v447;
LABEL_363:
                            int v108 = v437;
LABEL_162:
                            int v225 = (char *)v460 + 4;
                          }
LABEL_163:
                          v223 += v462 + 1;
                          uint64_t v226 = (int)v443 - 1;
                          if (v223 >= v111) {
                            goto LABEL_401;
                          }
                          continue;
                        }
                        break;
                      }
                      int v238 = *((_DWORD *)v232 + (int)v222);
                      int v239 = (char *)v110 + 28 * v223;
                      int v242 = *((_DWORD *)v239 + 2);
                      int v240 = (int *)(v239 + 8);
                      int v241 = v242;
                      if (v238 >= v242)
                      {
                        uint64_t v243 = (int)v222;
                        int v244 = v451[(int)v222];
                        if (v244 != -1)
                        {
                          int v245 = v222;
                          if (v60) {
                            char v246 = *((unsigned char *)v60 + (int)v222);
                          }
                          else {
                            char v246 = 0;
                          }
                          sub_1000BA9EC(a4, (uint64_t)a5, v453, v454, 0, (uint64_t)a9, (int *)&v462 + 1, a3, v244, *((_DWORD *)v460 + (int)v222), v238, 0, v246);
                          if (*((_DWORD *)v110 + 7 * v223 + 7))
                          {
                            uint64_t v283 = v223 + 1;
                            int v284 = *((_DWORD *)v456 + v243) + *((_DWORD *)v460 + v243);
                            int v285 = 1;
                            do
                            {
                              if (*((_DWORD *)v110 + 7 * v283 + 1) >= v284) {
                                break;
                              }
                              LODWORD(v462) = v285++;
                              uint64_t v283 = v285 + v223;
                            }
                            while (*((_DWORD *)v110 + 7 * v283));
                          }
                          uint64_t v61 = (v61 + 1);
                          uint64_t v222 = (v245 + 1);
                          goto LABEL_160;
                        }
                      }
                      if (v228 != 4)
                      {
                        int v247 = (char *)v110 + 28 * v223;
                        uint64_t v249 = *((int *)v247 + 1);
                        int v248 = (int *)(v247 + 4);
                        int v250 = (char *)&v459[v249];
                        int v225 = (char *)v460 + 4;
                        if (v228 != 3)
                        {
                          int v224 = v443;
                          switch(v235)
                          {
                            case 0:
                            case 1:
                              unsigned __int16 v411 = v240;
                              v417 = v248;
                              uint64_t v434 = v222;
                              LODWORD(v461) = v241;
                              int v425 = v250;
                              int v271 = sub_1000B574C(v442, v250, 0, 0, v241, 30, (uint64_t)v441);
                              if (v271 < 1)
                              {
                                char v286 = 0;
                                int v288 = -1;
                                uint64_t v287 = v417;
                              }
                              else
                              {
                                BOOL v413 = 0;
                                unint64_t v272 = v271 + 1;
                                int v422 = -1;
                                unint64_t v273 = (unint64_t)v439;
                                uint64_t v274 = v441;
                                do
                                {
                                  uint64_t v275 = (v272 - 2);
                                  sub_1000B5360((uint64_t)v442, v274[v275], v273, v438);
                                  int v276 = sub_1000CED6C(v273);
                                  if (v276 < v241)
                                  {
                                    uint64_t v274 = v441;
                                  }
                                  else
                                  {
                                    int v277 = v276;
                                    uint64_t v278 = v276;
                                    uint64_t v279 = v276 - 1;
                                    if (sub_1000CDF3C(*(unsigned __int16 *)&v425[2 * v279])
                                      || sub_1000CDD58(*(unsigned __int16 *)&v425[2 * v279])
                                      && sub_1000CDD58(*(unsigned __int16 *)&v425[2 * v278])
                                      || sub_1000CDF18(*(unsigned __int16 *)&v425[2 * v279])
                                      && sub_1000CDF18(*(unsigned __int16 *)&v425[2 * v278]))
                                    {
                                      __int16 v60 = v447;
                                      int v108 = v437;
                                      uint64_t v274 = v441;
                                    }
                                    else
                                    {
                                      int v280 = sub_1000CFC34(v425, v439, v277);
                                      __int16 v60 = v447;
                                      int v108 = v437;
                                      uint64_t v274 = v441;
                                      if (v422 == -1
                                        || v277 > v241
                                        || (v413 ? (BOOL v281 = v280 == 0) : (BOOL v281 = 1),
                                            !v281 ? (int v282 = 0) : (int v282 = 1),
                                            v277 == v241 && v282))
                                      {
                                        int v422 = v441[v275];
                                        BOOL v413 = v280 == 0;
                                        int v241 = v277;
                                      }
                                    }
                                  }
                                  --v272;
                                  unint64_t v273 = (unint64_t)v439;
                                }
                                while (v272 > 1);
                                char v286 = v413;
                                unint64_t v461 = __PAIR64__(v413, v241);
                                int v58 = v457;
                                int v225 = (char *)v460 + 4;
                                uint64_t v287 = v417;
                                int v288 = v422;
                              }
                              sub_1000BA9EC(a4, (uint64_t)a5, v453, v454, 0, (uint64_t)a9, (int *)&v462 + 1, a3, v288, *v287, v241, 0, v286);
                              uint64_t v61 = (v61 + 1);
                              if (v241 <= *v411)
                              {
                                int v224 = v443;
LABEL_336:
                                uint64_t v222 = v434;
                              }
                              else
                              {
                                uint64_t v222 = v434;
                                uint64_t v369 = v223 + 1;
                                if (*((_DWORD *)v110 + 7 * v369))
                                {
                                  uint64_t v370 = (int *)v414 + 7 * v223;
                                  uint64_t v331 = 1;
                                  do
                                  {
                                    if (*((_DWORD *)v110 + 7 * v369 + 1) >= *v417 + v241) {
                                      break;
                                    }
                                    uint64_t v369 = ++v331 + v223;
                                    int v371 = *v370;
                                    v370 += 7;
                                  }
                                  while (v371);
                                }
                                else
                                {
                                  LODWORD(v331) = 1;
                                }
LABEL_343:
                                LODWORD(v462) = v331 - 1;
                                int v224 = v443;
                              }
                              break;
                            case 3:
LABEL_319:
                              uint64_t v325 = v222;
                              int v326 = sub_1000A8DCC(v442, (uint64_t)v459, a3, a4, (uint64_t)a5, v453, v454, (uint64_t)a9, v441, (int *)&v462 + 1, &v462, (int *)v110 + 7 * v223);
                              goto LABEL_320;
                            case 4:
                              uint64_t v325 = v222;
                              int v326 = sub_1000A9BBC(v442, (uint64_t)v459, a3, a4, (uint64_t)a5, v453, v454, (uint64_t)a9, v441, (int *)&v462 + 1, v439, v438, (unsigned int *)&v462, (int *)v110 + 7 * v223);
                              goto LABEL_320;
                            case 5:
                              uint64_t v327 = v222;
                              v464[0] = 0;
                              int v328 = sub_1000AA174(v442, a4, (uint64_t)a5, v453, v454, (uint64_t)a9, (int *)&v462 + 1, a3, (uint64_t)v459, (_DWORD *)v110 + 7 * v223, v464);
                              uint64_t v329 = v223 + 1;
                              if (!*((_DWORD *)v110 + 7 * v329)) {
                                goto LABEL_316;
                              }
                              unsigned int v330 = (int *)v414 + 7 * v223;
                              uint64_t v331 = 1;
                              uint64_t v222 = v327;
                              do
                              {
                                if (*((_DWORD *)v110 + 7 * v329 + 1) >= v464[0]) {
                                  break;
                                }
                                uint64_t v329 = ++v331 + v223;
                                int v332 = *v330;
                                v330 += 7;
                              }
                              while (v332);
                              goto LABEL_291;
                            case 6:
                              uint64_t v327 = v222;
                              v464[0] = 0;
                              int v328 = sub_1000AA174(v442, a4, (uint64_t)a5, v453, v454, (uint64_t)a9, (int *)&v462 + 1, a3, (uint64_t)v459, (_DWORD *)v110 + 7 * v223, v464);
                              uint64_t v333 = v223 + 1;
                              if (*((_DWORD *)v110 + 7 * v333))
                              {
                                int v334 = (int *)v414 + 7 * v223;
                                uint64_t v331 = 1;
                                uint64_t v222 = v327;
                                do
                                {
                                  if (*((_DWORD *)v110 + 7 * v333 + 1) >= v464[0]) {
                                    break;
                                  }
                                  uint64_t v333 = ++v331 + v223;
                                  int v335 = *v334;
                                  v334 += 7;
                                }
                                while (v335);
LABEL_291:
                                uint64_t v61 = (v328 + v61);
                              }
                              else
                              {
LABEL_316:
                                LODWORD(v331) = 1;
                                uint64_t v222 = v327;
                                uint64_t v61 = (v328 + v61);
                              }
                              goto LABEL_343;
                            case 9:
                              uint64_t v325 = v222;
                              int v326 = sub_1000ABC2C(v442, (uint64_t)v459, a3, a4, (uint64_t)a5, v453, v454, (uint64_t)a9, v441, (int *)&v462 + 1, v439, v438, (int *)&v462, (uint64_t)v110 + 28 * v223);
LABEL_320:
                              uint64_t v222 = v325;
                              int v224 = v443;
                              uint64_t v61 = (v326 + v61);
                              goto LABEL_163;
                            case 12:
                              uint64_t v336 = v222;
                              int v427 = v61;
                              char v337 = v248;
                              sub_1000CED88(v463, (__int16 *)v250, v241 + 1);
                              int v338 = *v337;
                              uint64_t v339 = v442[7];
                              uint64_t v340 = *(void *)(v339 + 200);
                              int v341 = sub_1000CED6C((unint64_t)v463);
                              int v342 = *(_DWORD *)(v339 + 192);
                              if (v342 < 1)
                              {
                                int v344 = 0;
                                int v345 = a3;
                              }
                              else
                              {
                                int v343 = v341;
                                int v344 = 0;
                                int v345 = a3;
                                do
                                {
                                  int v346 = sub_1000CFC98(*(_WORD **)v340, v463, v343);
                                  int v342 = *(_DWORD *)(v339 + 192);
                                  if (!v346) {
                                    break;
                                  }
                                  v340 += 32;
                                  ++v344;
                                }
                                while (v344 < v342);
                              }
                              if (v344 == v342)
                              {
                                int v372 = 0;
                              }
                              else
                              {
                                uint64_t v373 = *(_WORD **)(v340 + 16);
                                int v372 = 1;
                                sub_1000B55FC(v442, v373, 1, 1, 0, 5, (uint64_t)v464);
                                sub_1000BA9EC(a4, (uint64_t)a5, v453, v454, 0, (uint64_t)a9, (int *)&v462 + 1, v345, v464[0], v338, 0, 0, 0);
                              }
                              int v58 = v457;
                              __int16 v60 = v447;
                              int v224 = v443;
                              uint64_t v222 = v336;
                              uint64_t v61 = (v372 + v427);
                              goto LABEL_363;
                            case 13:
                              uint64_t v434 = v222;
                              int v347 = v61;
                              uint64_t v348 = v248;
                              sub_1000CED88(v463, (__int16 *)v250, v241 + 1);
                              int v349 = *v348;
                              uint64_t v350 = v442[7];
                              unsigned int v351 = *(_WORD ***)(v350 + 152);
                              int v352 = sub_1000CED6C((unint64_t)v463);
                              int v353 = *(_DWORD *)(v350 + 144);
                              if (v353 < 1)
                              {
                                int v355 = 0;
                                int v356 = a3;
                              }
                              else
                              {
                                int v354 = v352;
                                int v355 = 0;
                                int v356 = a3;
                                do
                                {
                                  int v357 = sub_1000CFC98(*v351, v463, v354);
                                  int v353 = *(_DWORD *)(v350 + 144);
                                  if (!v357) {
                                    break;
                                  }
                                  v351 += 4;
                                  ++v355;
                                }
                                while (v355 < v353);
                              }
                              if (v355 == v353)
                              {
                                int v374 = 0;
                                int v58 = v457;
                                __int16 v60 = v447;
                              }
                              else
                              {
                                int v58 = v457;
                                __int16 v60 = v447;
                                if ((int)sub_1000B55FC(v442, v351[2], 1, 1, 0, 30, (uint64_t)v464) <= 0) {
                                  sub_1000B55FC(v442, v351[2], 0, 1, 0, 30, (uint64_t)v464);
                                }
                                sub_1000BA9EC(a4, (uint64_t)a5, v453, v454, 0, (uint64_t)a9, (int *)&v462 + 1, v356, v464[0], v349, 0, 0, 0);
                                int v374 = 1;
                              }
                              uint64_t v61 = (v374 + v347);
LABEL_333:
                              int v108 = v437;
LABEL_334:
                              int v224 = v443;
LABEL_335:
                              int v225 = (char *)v460 + 4;
                              goto LABEL_336;
                            case 14:
                              uint64_t v358 = v222;
                              int v428 = v61;
                              uint64_t v359 = v248;
                              sub_1000CED88(v463, (__int16 *)v250, v241 + 3);
                              int v360 = *v359;
                              uint64_t v361 = v442[7];
                              uint64_t v362 = *(void *)(v361 + 176);
                              int v363 = sub_1000CED6C((unint64_t)v463);
                              int v364 = *(_DWORD *)(v361 + 168);
                              if (v364 < 1)
                              {
                                int v366 = 0;
                                int v367 = a3;
                              }
                              else
                              {
                                int v365 = v363;
                                int v366 = 0;
                                int v367 = a3;
                                do
                                {
                                  int v368 = sub_1000CFC98(*(_WORD **)v362, v463, v365);
                                  int v364 = *(_DWORD *)(v361 + 168);
                                  if (!v368) {
                                    break;
                                  }
                                  v362 += 32;
                                  ++v366;
                                }
                                while (v366 < v364);
                              }
                              if (v366 == v364)
                              {
                                int v375 = 0;
                              }
                              else
                              {
                                uint64_t v376 = *(_WORD **)(v362 + 16);
                                int v375 = 1;
                                sub_1000B55FC(v442, v376, 1, 1, 0, 5, (uint64_t)v464);
                                sub_1000BA9EC(a4, (uint64_t)a5, v453, v454, 0, (uint64_t)a9, (int *)&v462 + 1, v367, v464[0], v360, 0, 0, 0);
                              }
                              int v58 = v457;
                              __int16 v60 = v447;
                              int v224 = v443;
                              uint64_t v222 = v358;
                              uint64_t v61 = (v375 + v428);
                              LODWORD(v462) = 1;
                              goto LABEL_363;
                            default:
                              goto LABEL_163;
                          }
                          goto LABEL_163;
                        }
                        int v224 = v443;
                        switch(*(_WORD *)v250)
                        {
                          case '#':
                            if (*((_DWORD *)v110 + 7 * v223 + 7) == 2)
                            {
                              int v289 = *(_WORD **)(*(void *)&v415 + 112);
                              if (v289)
                              {
                                int v418 = v248;
                                uint64_t v434 = v222;
                                int v290 = sub_1000B55FC(v442, v289, 0, 1, 0, 30, (uint64_t)v441);
                                if (v290 >= 1)
                                {
                                  LODWORD(v461) = 1;
                                  int v291 = sub_1000A8C60(v442, v290, *(_WORD **)(*(void *)&v415 + 112), (uint64_t)v441, (int *)&v461, (_DWORD *)&v461 + 1);
                                  sub_1000BA9EC(a4, (uint64_t)a5, v453, v454, 0, (uint64_t)a9, (int *)&v462 + 1, a3, v291, *v418, 0, 0, SBYTE4(v461));
                                  uint64_t v61 = (v61 + 1);
                                  goto LABEL_334;
                                }
                                int v224 = v443;
                                goto LABEL_335;
                              }
                            }
                            goto LABEL_163;
                          case '$':
                            if (v223 < 1)
                            {
                              if (v235 == 3) {
                                goto LABEL_319;
                              }
                            }
                            else if (v235 == 3 && *((_DWORD *)v110 + 7 * (v223 - 1)) != 1)
                            {
                              goto LABEL_319;
                            }
                            goto LABEL_163;
                          case '&':
                            int v292 = v248;
                            uint64_t v293 = v222;
                            int v294 = v442;
                            __int16 v295 = &unk_1000F5730;
                            goto LABEL_270;
                          case '\'':
                            if (v223 >= v420 || *((_DWORD *)v110 + 7 * v223 + 7) != 1) {
                              goto LABEL_163;
                            }
                            int v251 = v248;
                            uint64_t v434 = v222;
                            int v252 = sub_1000B574C(v442, v250, 0, 0, 2, 30, (uint64_t)v441);
                            if (v252 >= 1)
                            {
                              LODWORD(v461) = 1;
                              int v253 = sub_1000A8C60(v442, v252, &v459[*v251], (uint64_t)v441, (int *)&v461, (_DWORD *)&v461 + 1);
                              sub_1000BA9EC(a4, (uint64_t)a5, v453, v454, 0, (uint64_t)a9, (int *)&v462 + 1, a3, v253, *v251, 0, 0, SBYTE4(v461));
                              uint64_t v61 = (v61 + 1);
                              LODWORD(v462) = 1;
                            }
                            goto LABEL_333;
                          case '-':
                            uint64_t v412 = v240;
                            int v419 = v248;
                            uint64_t v432 = v223;
                            uint64_t v293 = v222;
                            LODWORD(v461) = v241;
                            unsigned int v296 = v223 - 1;
                            if (v223 >= 1
                              && *((_DWORD *)v110 + 7 * v296 + 3) != 15
                              && *((_DWORD *)v110 + 7 * v296) == 2
                              && *((_DWORD *)v110 + 7 * (v223 + 1)) == 2)
                            {
                              int v297 = sub_1000B55FC(v442, *(_WORD **)(*(void *)&v415 + 224), 0, 1, 0, 30, (uint64_t)v441);
                              if (v297 < 1)
                              {
                                char v300 = 0;
                                int v299 = -1;
                              }
                              else
                              {
                                int v298 = v297;
                                v464[0] = sub_1000CED6C(*(void *)(*(void *)&v415 + 224));
                                int v299 = sub_1000A8C60(v442, v298, *(_WORD **)(*(void *)&v415 + 224), (uint64_t)v441, v464, (_DWORD *)&v461 + 1);
                                char v300 = BYTE4(v461);
                              }
                              sub_1000BA9EC(a4, (uint64_t)a5, v453, v454, 0, (uint64_t)a9, (int *)&v462 + 1, a3, v299, *v419, 0, 0, v300);
                              int v223 = v449;
                            }
                            else
                            {
                              v464[0] = 45;
                              if ((int)sub_1000B55FC(v442, v464, 0, 1, 0, 30, (uint64_t)v441) < 1)
                              {
LABEL_280:
                                int v224 = v443;
                                int v225 = (char *)v460 + 4;
                                uint64_t v222 = v293;
                                goto LABEL_163;
                              }
                              int v320 = *v441;
                              HIDWORD(v461) = 1;
                              sub_1000BA9EC(a4, (uint64_t)a5, v453, v454, 0, (uint64_t)a9, (int *)&v462 + 1, a3, v320, *v419, 1, 0, 1);
                            }
                            int v225 = (char *)v460 + 4;
                            uint64_t v61 = (v61 + 1);
                            int v224 = v443;
                            uint64_t v222 = v293;
                            if (v241 > *v412)
                            {
                              uint64_t v321 = v432 + 1;
                              if (*((_DWORD *)v110 + 7 * v432 + 7))
                              {
                                unint64_t v322 = (int *)v414 + 7 * (int)v432;
                                uint64_t v323 = 1;
                                do
                                {
                                  if (*((_DWORD *)v110 + 7 * v321 + 1) >= *v419 + v241) {
                                    break;
                                  }
                                  uint64_t v321 = ++v323 + v432;
                                  int v324 = *v322;
                                  v322 += 7;
                                }
                                while (v324);
                                int v224 = v443;
                              }
                              else
                              {
                                LODWORD(v323) = 1;
                              }
                              int v223 = v223 + v323 - 1;
                            }
                            goto LABEL_163;
                          case ':':
                            if (v223 >= v420) {
                              goto LABEL_163;
                            }
                            uint64_t v301 = v223 + 1;
                            int v302 = (_DWORD *)v110 + 7 * v301;
                            if (*v302 != 1) {
                              goto LABEL_317;
                            }
                            int v303 = v248;
                            uint64_t v434 = v222;
                            unsigned int v426 = v61;
                            int v304 = sub_1000B574C(v442, v250, 0, 0, 1, 30, (uint64_t)v441);
                            if (v304 < 1) {
                              goto LABEL_389;
                            }
                            LODWORD(v305) = 1;
                            LODWORD(v461) = 1;
                            int v306 = sub_1000A8C60(v442, v304, &v459[*v303], (uint64_t)v441, (int *)&v461, (_DWORD *)&v461 + 1);
                            int v307 = v461;
                            sub_1000BA9EC(a4, (uint64_t)a5, v453, v454, 0, (uint64_t)a9, (int *)&v462 + 1, a3, v306, *v303, v461, 0, SBYTE4(v461));
                            if (!*v302) {
                              goto LABEL_394;
                            }
                            int v308 = *v303 + v307;
                            uint64_t v222 = v434;
                            unsigned int v309 = (int *)v414 + 7 * v223;
                            uint64_t v305 = 1;
                            int v58 = v457;
                            __int16 v60 = v447;
                            do
                            {
                              if (*((_DWORD *)v110 + 7 * v301 + 1) >= v308) {
                                break;
                              }
                              uint64_t v301 = ++v305 + v223;
                              int v310 = *v309;
                              v309 += 7;
                            }
                            while (v310);
                            goto LABEL_395;
                          case '<':
                            if (v223 >= v420) {
                              goto LABEL_163;
                            }
                            uint64_t v311 = v223 + 1;
                            int v312 = (_DWORD *)v110 + 7 * v311;
                            if (*v312 != 1)
                            {
LABEL_317:
                              __int16 v60 = v447;
                              goto LABEL_162;
                            }
                            int v313 = v248;
                            uint64_t v434 = v222;
                            unsigned int v426 = v61;
                            int v314 = sub_1000B574C(v442, v250, 0, 0, 1, 30, (uint64_t)v441);
                            if (v314 < 1)
                            {
LABEL_389:
                              int v58 = v457;
                              __int16 v60 = v447;
                              int v224 = v443;
                              uint64_t v61 = v426;
                              goto LABEL_335;
                            }
                            LODWORD(v305) = 1;
                            LODWORD(v461) = 1;
                            int v315 = sub_1000A8C60(v442, v314, &v459[*v313], (uint64_t)v441, (int *)&v461, (_DWORD *)&v461 + 1);
                            int v316 = v461;
                            sub_1000BA9EC(a4, (uint64_t)a5, v453, v454, 0, (uint64_t)a9, (int *)&v462 + 1, a3, v315, *v313, v461, 0, SBYTE4(v461));
                            if (*v312)
                            {
                              int v317 = *v313 + v316;
                              uint64_t v222 = v434;
                              int v318 = (int *)v414 + 7 * v223;
                              uint64_t v305 = 1;
                              int v58 = v457;
                              __int16 v60 = v447;
                              do
                              {
                                if (*((_DWORD *)v110 + 7 * v311 + 1) >= v317) {
                                  break;
                                }
                                uint64_t v311 = ++v305 + v223;
                                int v319 = *v318;
                                v318 += 7;
                              }
                              while (v319);
                            }
                            else
                            {
LABEL_394:
                              int v58 = v457;
                              __int16 v60 = v447;
                              LODWORD(v61) = v426;
                              uint64_t v222 = v434;
                            }
LABEL_395:
                            uint64_t v61 = (v61 + 1);
                            LODWORD(v462) = v305 - 1;
                            break;
                          case '@':
                            int v292 = v248;
                            uint64_t v293 = v222;
                            int v294 = v442;
                            __int16 v295 = &unk_1000F572C;
LABEL_270:
                            if ((int)sub_1000B55FC(v294, v295, 1, 1, 0, 30, (uint64_t)v441) >= 1)
                            {
                              sub_1000BA9EC(a4, (uint64_t)a5, v453, v454, 0, (uint64_t)a9, (int *)&v462 + 1, a3, *v441, *v292, 1, 0, 1);
                              uint64_t v61 = (v61 + 1);
                            }
                            goto LABEL_280;
                          default:
                            goto LABEL_163;
                        }
LABEL_160:
                        int v108 = v437;
                      }
                      int v224 = v443;
                      goto LABEL_162;
                    }
                  }
                  else
                  {
                    __int16 v164 = v181;
                    int v173 = v180;
                    int v58 = v457;
                    uint64_t v162 = v185;
                    __int16 v110 = v184;
                  }
                }
                else
                {
                  __int16 v164 = v181;
                  int v173 = v180;
                  int v58 = v457;
                }
                ++v178;
                uint64_t v180 = v173;
                uint64_t v181 = v164;
              }
              while (v179 != v178);
            }
          }
          char v174 = (int32x2_t *)v174[4];
          int v111 = v446;
          int v175 = v433;
        }
        while (v174);
        unsigned int v163 = v173;
        __int16 v60 = v447;
        int v108 = v437;
        do
        {
          uint64_t v190 = v175[1].i32[1];
          if ((int)v190 < *(_DWORD *)v175->i32[0] - 1)
          {
            uint64_t v191 = *(void *)(*(void *)v175 + 8);
            uint64_t v192 = *(int *)(v191 + 8 * v190);
            int v193 = *(_DWORD *)(v191 + 8 * ((int)v190 + 1));
            if ((int)v192 < v193)
            {
              int8x16_t v194 = v163;
              do
              {
                uint64_t v195 = *(void *)(*(void *)v175 + 24);
                uint64_t v196 = v195 + 12 * v192;
                int v198 = *(_DWORD *)(v196 + 4);
                __int16 v197 = (_DWORD *)(v196 + 4);
                if (v198)
                {
                  if (v194)
                  {
                    int v199 = 0;
                    int v200 = 0;
                    int v201 = (__int32 *)(v195 + 12 * v192 + 8);
                    unsigned int v163 = v194;
                    while (1)
                    {
                      if (*v197 == v194[1].i32[0] && v175[2].i32[1] == v194[2].i32[0])
                      {
                        int32x2_t v202 = *v194;
                        if (v200)
                        {
                          int v200 = 1;
                        }
                        else
                        {
                          int v200 = *(_DWORD *)(*(void *)(*(void *)&v202 + 8) + 8 * v194[1].i32[1] + 4);
                          if (v200)
                          {
                            unint64_t v203 = (int32x2_t *)&v161[5 * v165];
                            int32x2_t *v203 = *v175;
                            v203[1].i32[1] = *v201;
                            v203[2].i32[0] = v175[2].i32[0];
                            v203[2].i32[1] = v440;
                            v203[1].i32[0] = v175[1].i32[0];
                            v203[4] = (int32x2_t)v163;
                            v203[3].i32[0] = 1;
                            uint64_t v204 = 40 * v165 + 64;
                            do
                            {
                              int v205 = *(_DWORD *)((char *)v161 + v204);
                              ++v165;
                              v204 += 40;
                            }
                            while (v205);
                            if (v448 <= v165) {
                              goto LABEL_156;
                            }
                            int32x2_t v202 = *v194;
                            int v200 = 1;
                            unsigned int v163 = v203;
                          }
                        }
                        uint64_t v206 = *(void *)(*(void *)&v202 + 8);
                        uint64_t v207 = v194[1].i32[1];
                        int v208 = *(_DWORD *)(v206 + 8 * v207);
                        if (v208 >= *(_DWORD *)(*(void *)&v202 + 4)
                          || v199
                          || *(_DWORD *)(v206 + 8 * v207 + 8) <= v208)
                        {
                          if (v199) {
                            char v212 = v200;
                          }
                          else {
                            char v212 = 0;
                          }
                          if (v212) {
                            goto LABEL_115;
                          }
                        }
                        else
                        {
                          BOOL v209 = (int32x2_t *)&v161[5 * v165];
                          *BOOL v209 = *v175;
                          v209[1].i32[1] = v175[1].i32[1];
                          v209[2].i32[0] = v175[2].i32[0];
                          v209[2].i32[1] = v175[2].i32[1];
                          v209[1].i32[0] = v175[1].i32[0];
                          v209[4] = (int32x2_t)v163;
                          v209[3].i32[0] = 1;
                          uint64_t v210 = 40 * v165 + 64;
                          do
                          {
                            int v211 = *(_DWORD *)((char *)v161 + v210);
                            ++v165;
                            v210 += 40;
                          }
                          while (v211);
                          if (v448 <= v165) {
                            goto LABEL_156;
                          }
                          int v199 = 1;
                          unsigned int v163 = v209;
                          if (v200) {
                            goto LABEL_115;
                          }
                        }
                      }
                      int8x16_t v194 = (int32x2_t *)v194[4];
                      if (!v194) {
                        goto LABEL_115;
                      }
                    }
                  }
                  unsigned int v163 = 0;
                }
                else
                {
                  unsigned int v163 = v194;
                }
LABEL_115:
                ++v192;
                int8x16_t v194 = v163;
              }
              while (v193 != v192);
            }
          }
          v175[3].i32[0] = 0;
          char v213 = (int32x2_t *)v175[4];
          int v165 = -1;
          uint64_t v214 = 3;
          v175[4] = 0;
          do
          {
            int v215 = v161[v214];
            ++v165;
            v214 += 5;
          }
          while (v215);
          if (v448 <= v165) {
            goto LABEL_156;
          }
          int v175 = v213;
        }
        while (v213);
        if (v163)
        {
          int v216 = v163;
          do
          {
            if (*(_DWORD *)(*(void *)(*(void *)v216 + 8) + 8 * v216[1].i32[1] + 4))
            {
              __int32 v217 = v216[2].i32[0];
              unsigned int v218 = (char *)v110 + 28 * v217;
              int v220 = *((_DWORD *)v218 + 3);
              int v219 = (__int32 *)(v218 + 12);
              __int32 v221 = v216[1].i32[0];
              if (v220 != v221 || *((_DWORD *)v110 + 7 * v217 + 4) != v162 + 1 - v217)
              {
                *int v219 = v221;
                *((_DWORD *)v110 + 7 * v216[2].i32[0] + 4) = v440 - v216[2].i32[0];
              }
            }
            int v216 = (int32x2_t *)v216[4];
          }
          while (v216);
        }
        uint64_t v162 = v440;
      }
      while (v440 != v423);
    }
LABEL_156:
    sub_1000CD4D0(v161, v431);
  }
  HIDWORD(v462) = 0;
  if (v111 >= 1) {
    goto LABEL_158;
  }
LABEL_400:
  uint64_t v61 = 0;
LABEL_401:
  if ((int)v61 > (int)a4 && a3 && SHIDWORD(v462) < (int)a4) {
    sub_1000BAC1C(a4, (uint64_t)a5, v453, v454, 0, (uint64_t)a9, SHIDWORD(v462));
  }
  sub_1000CD4D0(v441, 120);
  int v407 = sub_1000B51E0(v442);
  sub_1000CD4D0(v438, 2 * (v407 + 1));
  int v408 = sub_1000B51A0(v442);
  sub_1000CD4D0(v439, 2 * (v408 + 1));
  sub_1000CD4D0(v110, 28 * (v108 + 1));
  if (v447) {
    sub_1000CD4D0(v447, v429);
  }
  if (v58) {
    sub_1000CD4D0(v58, v429);
  }
  uint64_t v409 = 4 * v429;
  sub_1000CD4D0(v456, v409);
  sub_1000CD4D0(v460, v409);
  sub_1000CD4D0(v451, v409);
  sub_1000CD4D0(v459, v430);
  return v61;
}

uint64_t sub_1000A8A2C(__int16 *a1, int a2, uint64_t a3)
{
  int v6 = sub_1000CED6C((unint64_t)a1) + 1;
  size_t v14 = (char *)sub_1000CD454(2 * v6, v7, v8, v9, v10, v11, v12, v13);
  size_t v15 = v14;
  if (v14 && sub_1000CED88(v14, a1, v6))
  {
    uint64_t v32 = 2 * v6;
    uint64_t v33 = 0;
    int v16 = sub_1000CF044(v15, asc_1000F6510, &v33);
    if (v16)
    {
      size_t v17 = v16;
      uint64_t v18 = 0;
      uint64_t v19 = 2 - (void)v15;
      uint64_t v20 = (unsigned __int16 *)v15;
      while (1)
      {
        if (v17 > (char *)v20)
        {
          if ((int)v18 < a2)
          {
            *(_DWORD *)a3 = 4;
            *(_DWORD *)(a3 + 4) = (unint64_t)((char *)v20 - v15) >> 1;
            *(_DWORD *)(a3 + 8) = (unint64_t)(v17 - (char *)v20) >> 1;
            a3 += 28;
            uint64_t v20 = (unsigned __int16 *)v17;
          }
          uint64_t v18 = (v18 + 1);
        }
        uint64_t v21 = &v17[2 * (int)sub_1000CED6C((unint64_t)v17)];
        if (v20 < (unsigned __int16 *)v21) {
          break;
        }
LABEL_5:
        size_t v17 = sub_1000CF044(0, asc_1000F6510, &v33);
        if (!v17) {
          goto LABEL_29;
        }
      }
      while (!sub_1000CDFAC(*v20))
      {
        BOOL v26 = sub_1000CDF18(*v20);
        unint64_t v27 = (char *)v20 - v15;
        if (v26)
        {
          *(_DWORD *)a3 = 2;
          *(_DWORD *)(a3 + 4) = v27 >> 1;
          int v28 = (char *)v20 + v19;
          uint64_t v29 = v20 + 1;
          do
          {
            unint64_t v24 = (unint64_t)v28;
            uint64_t v20 = v29;
            if (!*v29) {
              break;
            }
            BOOL v30 = sub_1000CDF18(*v29);
            int v28 = (char *)(v24 + 2);
            uint64_t v29 = v20 + 1;
          }
          while (v30);
LABEL_22:
          *(_DWORD *)(a3 + 8) = (v24 >> 1) - *(_DWORD *)(a3 + 4);
          if ((int)v18 < a2) {
            goto LABEL_12;
          }
LABEL_23:
          *(void *)a3 = 0;
          *(void *)(a3 + 8) = 0;
          *(_DWORD *)(a3 + 24) = 0;
          *(void *)(a3 + 16) = 0;
          uint64_t v18 = (v18 + 1);
          if (v20 >= (unsigned __int16 *)v21) {
            goto LABEL_5;
          }
        }
        else
        {
          ++v20;
          *(_DWORD *)a3 = 3;
          *(_DWORD *)(a3 + 4) = v27 >> 1;
          *(_DWORD *)(a3 + 8) = 1;
          if ((int)v18 >= a2) {
            goto LABEL_23;
          }
LABEL_12:
          a3 += 28;
          uint64_t v18 = (v18 + 1);
          if (v20 >= (unsigned __int16 *)v21) {
            goto LABEL_5;
          }
        }
      }
      *(_DWORD *)a3 = 1;
      *(_DWORD *)(a3 + 4) = (unint64_t)((char *)v20 - v15) >> 1;
      uint64_t v22 = v20 + 1;
      uint64_t v23 = (char *)v20 + v19;
      do
      {
        uint64_t v20 = v22;
        unint64_t v24 = (unint64_t)v23;
        if (!*v22) {
          break;
        }
        int v25 = sub_1000CDFAC(*v22);
        uint64_t v22 = v20 + 1;
        uint64_t v23 = (char *)(v24 + 2);
      }
      while (v25);
      goto LABEL_22;
    }
    uint64_t v18 = 0;
LABEL_29:
    sub_1000CD4D0(v15, v32);
  }
  else
  {
    sub_1000CD4D0(v15, 2 * v6);
    return 0;
  }
  return v18;
}

uint64_t sub_1000A8C60(uint64_t *a1, int a2, _WORD *a3, uint64_t a4, int *a5, _DWORD *a6)
{
  *a6 = 0;
  int v11 = sub_1000B51A0(a1);
  uint64_t v19 = sub_1000CD454(2 * (v11 + 1), v12, v13, v14, v15, v16, v17, v18);
  int v20 = sub_1000B51E0(a1);
  int v28 = sub_1000CD454(2 * (v20 + 1), v21, v22, v23, v24, v25, v26, v27);
  if (a2 < 1)
  {
    uint64_t v30 = 0xFFFFFFFFLL;
  }
  else
  {
    unint64_t v29 = a2 + 1;
    uint64_t v30 = 0xFFFFFFFFLL;
    do
    {
      uint64_t v31 = (v29 - 2);
      sub_1000B5360((uint64_t)a1, *(_DWORD *)(a4 + 4 * v31), (uint64_t)v19, v28);
      int v32 = sub_1000CED6C((unint64_t)v19);
      if (v32 >= *a5)
      {
        int v33 = v32;
        int v34 = sub_1000CFC34(a3, v19, v32);
        if (v30 == -1 || v33 > *a5 || v33 == *a5 && (!*a6 || !v34))
        {
          *a5 = v33;
          uint64_t v30 = *(unsigned int *)(a4 + 4 * v31);
          *a6 = v34 == 0;
        }
      }
      --v29;
    }
    while (v29 > 1);
  }
  int v35 = sub_1000B51E0(a1);
  sub_1000CD4D0(v28, 2 * (v35 + 1));
  int v36 = sub_1000B51A0(a1);
  sub_1000CD4D0(v19, 2 * (v36 + 1));
  return v30;
}

uint64_t sub_1000A8DCC(uint64_t *a1, uint64_t a2, unsigned int a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int *a9, int *a10, _DWORD *a11, int *a12)
{
  uint64_t v108 = *(void *)(a1[7] + 216);
  if (a12[4] >= 1)
  {
    uint64_t v15 = 0;
    int v115 = 0;
    uint64_t v16 = a12 + 1;
    while (1)
    {
      int v18 = *(v16 - 1);
      if (v18 == 1) {
        break;
      }
      if (v18 != 3) {
        goto LABEL_5;
      }
      int v17 = *(unsigned __int16 *)(a2 + 2 * *v16);
      if (v17 != 36)
      {
        if (v17 != 8364 && v17 != 164) {
          goto LABEL_5;
        }
LABEL_3:
        int v17 = 8364;
      }
LABEL_4:
      int v115 = v17;
      *(v16 - 1) = 4;
LABEL_5:
      ++v15;
      v16 += 7;
      if (v15 >= a12[4]) {
        goto LABEL_17;
      }
    }
    if (!sub_1000CFC98((_WORD *)(a2 + 2 * *v16), (unsigned __int16 *)"u", 2))
    {
      int v17 = 36;
      goto LABEL_4;
    }
    if (sub_1000CFC98((_WORD *)(a2 + 2 * *v16), (unsigned __int16 *)"e", 3)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  int v115 = 0;
LABEL_17:
  unint64_t v19 = -1;
  int v20 = a12;
  do
  {
    int v21 = *v20;
    v20 += 7;
    ++v19;
  }
  while (v21 != 2);
  v117[0] = 0;
  uint64_t v29 = sub_1000AA174(a1, a4, a5, a6, a7, a8, a10, a3, a2, v20 - 7, v117);
  unint64_t v30 = v19;
  uint64_t v110 = a7;
  uint64_t v111 = a8;
  if (a12[7 * v19])
  {
    uint64_t v31 = a1;
    while (*(v20 - 6) < v117[0])
    {
      int v32 = *v20;
      v20 += 7;
      unint64_t v30 = ++v19;
      if (!v32)
      {
        int v33 = a12[4];
        if (v33 > (int)v19) {
          goto LABEL_28;
        }
        goto LABEL_49;
      }
    }
    unint64_t v30 = v19;
    int v33 = a12[4];
    if (v33 <= (int)v19) {
      goto LABEL_49;
    }
  }
  else
  {
    uint64_t v31 = a1;
    int v33 = a12[4];
    if (v33 <= (int)v19) {
      goto LABEL_49;
    }
  }
LABEL_28:
  int v34 = &a12[7 * v30];
  uint64_t v36 = v34[1];
  int v35 = v34 + 1;
  if (*(unsigned __int16 *)(a2 + 2 * v36) != **(unsigned __int16 **)(v108 + 416))
  {
    uint64_t v43 = &a12[7 * v19 + 2];
    do
    {
      if (*(v43 - 2) == 1)
      {
        uint64_t v44 = (_WORD *)sub_1000CD3E8(2 * *v43 + 2, v22, v23, v24, v25, v26, v27, v28);
        sub_1000CED88(v44, (__int16 *)(a2 + 2 * *(v43 - 1)), *v43 + 1);
        if (v44)
        {
          if ((int)sub_1000B55FC(v31, v44, 1, 1, 0, 30, (uint64_t)a9) >= 1)
          {
            sub_1000BA9EC(a4, a5, a6, a7, 0, v111, a10, a3, *a9, *(v43 - 1), *v43, (int)&_mh_execute_header, (unint64_t)&_mh_execute_header >> 32);
          }
          else
          {
            if ((int)sub_1000B55FC(v31, v44, 0, 1, 0, 30, (uint64_t)a9) < 1) {
              int v45 = -1;
            }
            else {
              int v45 = *a9;
            }
            sub_1000BA9EC(a4, a5, a6, a7, 0, v111, a10, a3, v45, *(v43 - 1), *v43, 0, 0);
            uint64_t v31 = a1;
          }
          uint64_t v29 = (v29 + 1);
        }
        sub_1000CD4D0(v44, 2 * *v43 + 2);
        int v33 = a12[4];
      }
      v43 += 7;
      LODWORD(v19) = v19 + 1;
    }
    while (v33 > (int)v19);
LABEL_49:
    uint64_t v46 = (int)v19 - 1;
    uint64_t v47 = &a12[7 * v46];
    int v49 = v47[2];
    uint64_t v48 = v47 + 2;
    if (v49 != 1
      || (v50 = &a12[7 * v46], v52 = v50[1], uint64_t v51 = v50 + 1, *(_WORD *)(a2 + 2 * v52) != 49)
      || a12[7 * v33 - 7] == 1)
    {
      if (v115 == 36)
      {
        uint64_t v53 = *(_WORD **)(v108 + 240);
        uint64_t v54 = a9;
        if (v53)
        {
          if ((int)sub_1000B55FC(v31, v53, 1, 1, 0, 30, (uint64_t)a9) < 1)
          {
            uint64_t v55 = *(_WORD **)(v108 + 240);
LABEL_66:
            if ((int)sub_1000B55FC(v31, v55, 0, 1, 0, 30, (uint64_t)v54) < 1) {
              int v64 = -1;
            }
            else {
              int v64 = *v54;
            }
            __int16 v60 = a11;
            int v65 = a12[7 * v46 + 1];
LABEL_70:
            int v66 = *v48 + v65;
LABEL_71:
            sub_1000BA9EC(a4, a5, a6, v110, 0, v111, a10, a3, v64, v66, 0, 0, 0);
            goto LABEL_72;
          }
LABEL_58:
          int v57 = *v54;
          int v58 = a12[7 * v46 + 1];
LABEL_59:
          int v59 = *v48 + v58;
LABEL_60:
          sub_1000BA9EC(a4, a5, a6, v110, 0, v111, a10, a3, v57, v59, 0, 0, 1);
          __int16 v60 = a11;
LABEL_72:
          uint64_t v29 = (v29 + 1);
          goto LABEL_137;
        }
      }
      else
      {
        uint64_t v56 = *(_WORD **)(v108 + 304);
        uint64_t v54 = a9;
        if (v56)
        {
          if ((int)sub_1000B55FC(v31, v56, 1, 1, 0, 30, (uint64_t)a9) < 1)
          {
            uint64_t v55 = *(_WORD **)(v108 + 304);
            goto LABEL_66;
          }
          goto LABEL_58;
        }
      }
LABEL_111:
      __int16 v60 = a11;
      goto LABEL_137;
    }
    if (v115 == 36)
    {
      uint64_t v61 = *(_WORD **)(v108 + 256);
      if (!v61) {
        goto LABEL_111;
      }
      __int16 v62 = a9;
      if ((int)sub_1000B55FC(v31, v61, 1, 1, 0, 30, (uint64_t)a9) < 1)
      {
        uint64_t v63 = *(_WORD **)(v108 + 256);
LABEL_87:
        if ((int)sub_1000B55FC(v31, v63, 0, 1, 0, 30, (uint64_t)v62) < 1) {
          int v64 = -1;
        }
        else {
          int v64 = *v62;
        }
        __int16 v60 = a11;
        int v65 = *v51;
        goto LABEL_70;
      }
    }
    else
    {
      uint64_t v67 = *(_WORD **)(v108 + 320);
      if (!v67) {
        goto LABEL_111;
      }
      __int16 v62 = a9;
      if ((int)sub_1000B55FC(v31, v67, 1, 1, 0, 30, (uint64_t)a9) < 1)
      {
        uint64_t v63 = *(_WORD **)(v108 + 320);
        goto LABEL_87;
      }
    }
    int v57 = *v62;
    int v58 = *v51;
    goto LABEL_59;
  }
  int v37 = v19 + 1;
  if (a12[7 * (v19 + 1)] != 2)
  {
LABEL_136:
    LODWORD(v19) = v19 + 1;
    __int16 v60 = a11;
    goto LABEL_137;
  }
  uint64_t v38 = &a12[7 * v37];
  int v41 = v38[2];
  uint64_t v40 = v38 + 2;
  int v39 = v41;
  if (v41 != 2 || v115 != 36 && !*(_DWORD *)(v108 + 536) || a12[7 * a12[2] - 7] == 1)
  {
    uint64_t v42 = *(_WORD **)(v108 + 64);
    if (v42)
    {
      if ((int)sub_1000B55FC(v31, v42, 1, 1, 0, 30, (uint64_t)a9) < 1)
      {
        if ((int)sub_1000B55FC(v31, *(_WORD **)(v108 + 64), 0, 1, 0, 30, (uint64_t)a9) < 1) {
          int v71 = -1;
        }
        else {
          int v71 = *a9;
        }
        sub_1000BA9EC(a4, a5, a6, v110, 0, v111, a10, a3, v71, *v35, 0, 0, 0);
      }
      else
      {
        sub_1000BA9EC(a4, a5, a6, v110, 0, v111, a10, a3, *a9, *v35, 0, 0, 1);
      }
      LODWORD(v29) = v29 + 1;
      int v39 = *v40;
    }
    uint64_t v72 = a12[7 * v37 + 1];
    uint64_t v29 = sub_1000BAA4C(v31, a2 + 2 * v72, v72, v39, a3, a4, a5, a6, v110, 0, v111, a10, 0)
        + v29;
    int v80 = a12[4];
    if (a12[7 * v80 - 7] == 1)
    {
      uint64_t v81 = &a12[7 * v80 - 7];
      unint64_t v19 = (unint64_t)(v81 + 2);
      uint64_t v82 = (_WORD *)sub_1000CD3E8(2 * v81[2] + 2, v73, v74, v75, v76, v77, v78, v79);
      uint64_t v84 = v81[1];
      uint64_t v83 = v81 + 1;
      sub_1000CED88(v82, (__int16 *)(a2 + 2 * v84), *(_DWORD *)v19 + 1);
      if (v82)
      {
        if ((int)sub_1000B55FC(v31, v82, 1, 1, 0, 30, (uint64_t)a9) < 1)
        {
          if ((int)sub_1000B55FC(v31, v82, 0, 1, 0, 30, (uint64_t)a9) < 1) {
            int v87 = -1;
          }
          else {
            int v87 = *a9;
          }
          sub_1000BA9EC(a4, a5, a6, v110, 0, v111, a10, a3, v87, *v83, *(_DWORD *)v19, 0, 0);
        }
        else
        {
          sub_1000BA9EC(a4, a5, a6, v110, 0, v111, a10, a3, *a9, *v83, *(_DWORD *)v19, (int)&_mh_execute_header, (unint64_t)&_mh_execute_header >> 32);
        }
        uint64_t v29 = (v29 + 1);
      }
      sub_1000CD4D0(v82, 2 * *(int *)v19 + 2);
      LODWORD(v19) = v80;
      if (v115 == 36)
      {
LABEL_108:
        uint64_t v88 = *(_WORD **)(v108 + 240);
        if (v88)
        {
          if ((int)sub_1000B55FC(v31, v88, 1, 1, 0, 30, (uint64_t)a9) >= 1) {
            goto LABEL_110;
          }
          uint64_t v86 = *(_WORD **)(v108 + 240);
LABEL_113:
          if ((int)sub_1000B55FC(v31, v86, 0, 1, 0, 30, (uint64_t)a9) < 1) {
            int v64 = -1;
          }
          else {
            int v64 = *a9;
          }
          __int16 v60 = a11;
          int v66 = a12[7 * (int)v19 - 5] + a12[7 * (int)v19 - 6];
          goto LABEL_71;
        }
        goto LABEL_111;
      }
    }
    else
    {
      LODWORD(v19) = v19 + 2;
      if (v115 == 36) {
        goto LABEL_108;
      }
    }
    uint64_t v85 = *(_WORD **)(v108 + 304);
    if (v85)
    {
      if ((int)sub_1000B55FC(v31, v85, 1, 1, 0, 30, (uint64_t)a9) >= 1)
      {
LABEL_110:
        int v57 = *a9;
        int v59 = a12[7 * (int)v19 - 5] + a12[7 * (int)v19 - 6];
        goto LABEL_60;
      }
      uint64_t v86 = *(_WORD **)(v108 + 304);
      goto LABEL_113;
    }
    goto LABEL_111;
  }
  if (v19 && a12[7 * (v19 - 1)] == 2)
  {
    int v68 = a12[9];
    if (v115 == 36)
    {
      if (v68 == 1 && *(_WORD *)(a2 + 2 * a12[8]) == 49)
      {
        uint64_t v69 = *(_WORD **)(v108 + 256);
        if (v69)
        {
          if ((int)sub_1000B55FC(v31, v69, 1, 1, 0, 30, (uint64_t)a9) < 1)
          {
            uint64_t v70 = *(_WORD **)(v108 + 256);
LABEL_129:
            if ((int)sub_1000B55FC(v31, v70, 0, 1, 0, 30, (uint64_t)a9) < 1) {
              int v92 = -1;
            }
            else {
              int v92 = *a9;
            }
            sub_1000BA9EC(a4, a5, a6, v110, 0, v111, a10, a3, v92, *v35, 0, 0, 0);
            goto LABEL_133;
          }
          goto LABEL_127;
        }
      }
      else
      {
        uint64_t v90 = *(_WORD **)(v108 + 240);
        if (v90)
        {
          if ((int)sub_1000B55FC(v31, v90, 1, 1, 0, 30, (uint64_t)a9) < 1)
          {
            uint64_t v70 = *(_WORD **)(v108 + 240);
            goto LABEL_129;
          }
          goto LABEL_127;
        }
      }
    }
    else if (v68 == 1 && *(_WORD *)(a2 + 2 * a12[8]) == 49)
    {
      uint64_t v89 = *(_WORD **)(v108 + 320);
      if (v89)
      {
        if ((int)sub_1000B55FC(v31, v89, 1, 1, 0, 30, (uint64_t)a9) < 1)
        {
          uint64_t v70 = *(_WORD **)(v108 + 320);
          goto LABEL_129;
        }
LABEL_127:
        sub_1000BA9EC(a4, a5, a6, v110, 0, v111, a10, a3, *a9, *v35, 0, 0, 1);
LABEL_133:
        uint64_t v29 = (v29 + 1);
      }
    }
    else
    {
      uint64_t v91 = *(_WORD **)(v108 + 304);
      if (v91)
      {
        if ((int)sub_1000B55FC(v31, v91, 1, 1, 0, 30, (uint64_t)a9) < 1)
        {
          uint64_t v70 = *(_WORD **)(v108 + 304);
          goto LABEL_129;
        }
        goto LABEL_127;
      }
    }
  }
  uint64_t v93 = &a12[7 * v37];
  uint64_t v96 = v93[1];
  uint64_t v94 = v93 + 1;
  int v95 = v96;
  if (*(_WORD *)(a2 + 2 * v96) == 48 && *(_WORD *)(a2 + 2 * (v95 + 1)) == 48) {
    goto LABEL_136;
  }
  uint64_t v99 = v94;
  if (v19)
  {
    if (a12[7 * (v19 - 1)] == 2)
    {
      uint64_t v100 = *(_WORD **)(v108 + 336);
      if (v100)
      {
        if ((int)sub_1000B55FC(v31, v100, 1, 1, 0, 30, (uint64_t)a9) < 1)
        {
          if ((int)sub_1000B55FC(v31, *(_WORD **)(v108 + 336), 0, 1, 0, 30, (uint64_t)a9) < 1) {
            int v101 = -1;
          }
          else {
            int v101 = *a9;
          }
          sub_1000BA9EC(a4, a5, a6, v110, 0, v111, a10, a3, v101, *v35, 0, 0, 0);
        }
        else
        {
          sub_1000BA9EC(a4, a5, a6, v110, 0, v111, a10, a3, *a9, *v35, 0, 0, 1);
        }
        LODWORD(v29) = v29 + 1;
        int v95 = *v99;
      }
    }
  }
  if (*(_DWORD *)(v108 + 536))
  {
    int v102 = 3;
  }
  else
  {
    if (*(_WORD *)(a2 + 2 * v95) == 48) {
      int v102 = 2;
    }
    else {
      int v102 = 3;
    }
    if (*(_WORD *)(a2 + 2 * v95) == 48) {
      ++v95;
    }
  }
  sub_1000CED88(v116, (__int16 *)(a2 + 2 * v95), v102);
  uint64_t v29 = sub_1000B157C(v31, a4, a5, a6, v110, v111, a10, a3, (unint64_t)v116, v95)
      + v29;
  if (v115 == 36)
  {
    if (sub_1000CED6C((unint64_t)v116) == 1 && v116[0] == 49)
    {
      uint64_t v103 = *(_WORD **)(v108 + 288);
      if (v103)
      {
        if ((int)sub_1000B55FC(v31, v103, 1, 1, 0, 30, (uint64_t)a9) < 1)
        {
          uint64_t v104 = *(_WORD **)(v108 + 288);
LABEL_167:
          if ((int)sub_1000B55FC(v31, v104, 0, 1, 0, 30, (uint64_t)a9) < 1) {
            int v106 = -1;
          }
          else {
            int v106 = *a9;
          }
          sub_1000BA9EC(a4, a5, a6, v110, 0, v111, a10, a3, v106, *v99 + 2, 0, 0, 0);
          goto LABEL_171;
        }
        goto LABEL_165;
      }
    }
    else
    {
      uint64_t v105 = *(_WORD **)(v108 + 272);
      if (v105)
      {
        if ((int)sub_1000B55FC(v31, v105, 1, 1, 0, 30, (uint64_t)a9) < 1)
        {
          uint64_t v104 = *(_WORD **)(v108 + 272);
          goto LABEL_167;
        }
LABEL_165:
        sub_1000BA9EC(a4, a5, a6, v110, 0, v111, a10, a3, *a9, *v99 + 2, 0, 0, 1);
LABEL_171:
        uint64_t v29 = (v29 + 1);
      }
    }
  }
  LODWORD(v19) = v19 + 2;
  __int16 v60 = a11;
LABEL_137:
  int v97 = a12[4];
  if ((int)v19 > v97) {
    int v97 = v19;
  }
  *__int16 v60 = v97 - 1;
  return v29;
}

uint64_t sub_1000A9BBC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int *a9, int *a10, _WORD *a11, _WORD *a12, unsigned int *a13, int *a14)
{
  uint64_t v19 = a3;
  int v20 = a1;
  int v21 = a14;
  uint64_t v81 = *(void *)(a1[7] + 216);
  uint64_t v82 = a14 + 1;
  uint64_t v84 = a2;
  if (a14[4] != 1) {
    goto LABEL_31;
  }
  uint64_t v22 = (char *)(a2 + 2 * a14[1]);
  int v23 = a14[2];
  int v25 = sub_1000B574C(a1, v22, 0, 0, v23, 30, (uint64_t)a9);
  uint64_t v19 = a3;
  uint64_t v26 = a9;
  a2 = v84;
  if (v25 < 1) {
    goto LABEL_31;
  }
  uint64_t v74 = a8;
  uint64_t v75 = a5;
  uint64_t v76 = a6;
  unsigned int v77 = a3;
  BOOL v73 = 0;
  int v27 = -1;
  uint64_t v28 = (uint64_t)v20;
  while (2)
  {
    while (2)
    {
      while (2)
      {
        int v79 = v27;
        uint64_t v29 = (unsigned int *)&v26[v25 - 1];
        int v30 = v25;
        while (1)
        {
          sub_1000B5360(v28, *v29, (uint64_t)a11, a12);
          int v32 = sub_1000CED6C((unint64_t)a11);
          if (v32 >= v23)
          {
            int v33 = v32;
            uint64_t v34 = v32;
            uint64_t v35 = v32 - 1;
            if (!sub_1000CDF3C(*(unsigned __int16 *)&v22[2 * v35])
              && (!sub_1000CDD58(*(unsigned __int16 *)&v22[2 * v35])
               || !sub_1000CDD58(*(unsigned __int16 *)&v22[2 * v34]))
              && (!sub_1000CDF18(*(unsigned __int16 *)&v22[2 * v35])
               || !sub_1000CDF18(*(unsigned __int16 *)&v22[2 * v34])))
            {
              break;
            }
          }
          --v29;
          BOOL v31 = __OFSUB__(v30--, 1);
          if ((v30 < 0) ^ v31 | (v30 == 0))
          {
            int v33 = v23;
            a2 = v84;
            int v27 = v79;
            goto LABEL_24;
          }
        }
        int v36 = sub_1000CFC34(v22, a11, v33);
        int v27 = v79;
        a2 = v84;
        uint64_t v26 = a9;
        if (v79 == -1 || v33 > v23)
        {
LABEL_19:
          int v27 = *v29;
          BOOL v73 = v36 == 0;
          int v25 = v30 - 1;
          int v23 = v33;
          if (v30 > 1) {
            continue;
          }
          goto LABEL_24;
        }
        break;
      }
      if (v33 == v23)
      {
        if (v73 && v36)
        {
          BOOL v73 = 1;
          int v33 = v23;
          int v25 = v30 - 1;
          if (v30 > 1) {
            continue;
          }
          goto LABEL_24;
        }
        goto LABEL_19;
      }
      break;
    }
    int v33 = v23;
    int v25 = v30 - 1;
    if (v30 > 1) {
      continue;
    }
    break;
  }
LABEL_24:
  uint64_t v19 = v77;
  a5 = v75;
  a6 = v76;
  a8 = v74;
  a4 = a4;
  int v20 = (uint64_t *)v28;
  int v21 = a14;
  if (v27 != -1)
  {
    sub_1000BA9EC(a4, v75, v76, a7, 0, v74, a10, v77, v27, a14[1], v33, 0, v73);
    if (v33 <= a14[2]) {
      return 1;
    }
    if (a14[7])
    {
      int v37 = a14 + 8;
      int v38 = 1;
      int v39 = a14 + 8;
      do
      {
        int v40 = *v39;
        v39 += 7;
        if (v40 >= a14[1] + v33) {
          break;
        }
        ++v38;
        int v41 = v37[6];
        int v37 = v39;
      }
      while (v41);
      unsigned int v42 = v38 - 1;
      uint64_t v43 = 1;
    }
    else
    {
      unsigned int v42 = 0;
      uint64_t v43 = 1;
    }
    goto LABEL_53;
  }
LABEL_31:
  v85[0] = 0;
  uint64_t v44 = v20;
  int v45 = v20;
  int v46 = v19;
  uint64_t v43 = sub_1000AA174(v45, a4, a5, a6, a7, a8, a10, v19, a2, v21, v85);
  if (*v21)
  {
    uint64_t v52 = a14 + 1;
    int v53 = *v82;
    if (*v82 >= v85[0])
    {
      int v55 = 0;
      if (*v21 == 3 && v21[4] > 0)
      {
LABEL_47:
        uint64_t v60 = v84;
        if (*(unsigned __int16 *)(v84 + 2 * v53) == **(unsigned __int16 **)(v81 + 416))
        {
          unsigned int v80 = a4;
          unsigned int v42 = v55 + 1;
          if (v21[7 * (v55 + 1)] == 2)
          {
            uint64_t v61 = *(_WORD **)(v81 + 64);
            if (v61)
            {
              uint64_t v83 = v52;
              if ((int)sub_1000B55FC(v44, v61, 1, 1, 0, 30, (uint64_t)a9) < 1)
              {
                if ((int)sub_1000B55FC(v44, *(_WORD **)(v81 + 64), 0, 1, 0, 30, (uint64_t)a9) < 1) {
                  int v63 = -1;
                }
                else {
                  int v63 = *a9;
                }
                sub_1000BA9EC(v80, a5, a6, a7, 0, a8, a10, v46, v63, *v83, 0, 0, 0);
              }
              else
              {
                sub_1000BA9EC(v80, a5, a6, a7, 0, a8, a10, v46, *a9, *v83, 0, 0, 1);
              }
              LODWORD(v43) = v43 + 1;
              uint64_t v60 = v84;
            }
            uint64_t v78 = a7;
            int v64 = &v21[7 * v42];
            unsigned int v67 = v64[2];
            int v66 = v64 + 2;
            uint64_t v65 = v67;
            if (*(_DWORD *)(v81 + 536) && (int)v65 <= 3)
            {
              int v68 = sub_1000CD454(2 * ((int)v65 + 1), (uint64_t)v61, v47, v65, v48, v49, v50, v51);
              uint64_t v69 = v21;
              uint64_t v70 = v68;
              int v71 = &v69[7 * v42];
              sub_1000CED88(v68, (__int16 *)(v84 + 2 * v71[1]), *v66 + 1);
              uint64_t v43 = sub_1000B157C(v44, v80, a5, a6, v78, a8, a10, v46, (unint64_t)v70, v71[1])
                  + v43;
              sub_1000CD4D0(v70, 2 * *v66 + 2);
            }
            else
            {
              uint64_t v72 = v21[7 * v42 + 1];
              uint64_t v43 = sub_1000BAA4C(v44, v60 + 2 * v72, v72, v65, v46, v80, a5, a6, v78, 0, a8, a10, 0)
                  + v43;
            }
          }
          goto LABEL_53;
        }
      }
    }
    else
    {
      uint64_t v54 = v21 + 8;
      int v55 = 1;
      while (1)
      {
        int v56 = *(v54 - 1);
        if (!v56) {
          break;
        }
        int v57 = *v54;
        v54 += 7;
        int v53 = v57;
        ++v55;
        if (v57 >= v85[0])
        {
          --v55;
          uint64_t v52 = v54 - 7;
          if (v56 != 3 || v21[4] <= v55) {
            break;
          }
          goto LABEL_47;
        }
      }
    }
  }
  else
  {
    int v55 = 0;
  }
  unsigned int v42 = v55 - 1;
LABEL_53:
  *a13 = v42;
  return v43;
}

uint64_t sub_1000AA174(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int *a7, uint64_t a8, uint64_t a9, _DWORD *a10, _DWORD *a11)
{
  int v11 = a8;
  uint64_t v15 = a3;
  unsigned int v191 = a2;
  uint64_t v16 = a1;
  uint64_t v17 = a9;
  int v18 = *(_WORD ***)(a1[7] + 216);
  if (a10[4] == 1)
  {
    int v19 = a10[2];
    uint64_t v20 = (int)a10[1];
    if (v19 > 6 || v19 >= 3 && *(_WORD *)(a9 + 2 * v20) == 48)
    {
      *a11 = v20 + v19;
      if (!*((_DWORD *)v18 + 134)) {
        return sub_1000BAA4C(a1, a9 + 2 * (int)a10[1], a10[1], a10[2], a8, a2, a3, a4, a5, 0, a6, a7, 0);
      }
      uint64_t v22 = sub_1000CD454(2 * (int)a10[2] + 2, a2, a3, a4, a5, a6, (uint64_t)a7, a8);
      sub_1000CED88(v22, (__int16 *)(a9 + 2 * (int)a10[1]), a10[2] + 1);
      uint64_t v23 = sub_1000B157C(a1, v191, v15, a4, a5, a6, a7, v11, (unint64_t)v22, a10[1]);
      sub_1000CD4D0(v22, 2 * (int)a10[2] + 2);
      return v23;
    }
  }
  int v196 = a8;
  int v25 = sub_1000B51A0(a1);
  int v33 = sub_1000CD454(2 * (v25 + 1), v26, v27, v28, v29, v30, v31, v32);
  int v34 = sub_1000B51E0(v16);
  int v198 = sub_1000CD454(2 * (v34 + 1), v35, v36, v37, v38, v39, v40, v41);
  int v201 = (int *)sub_1000CD454(0x78uLL, v42, v43, v44, v45, v46, v47, v48);
  int v56 = (int *)sub_1000CD454(0x78uLL, v49, v50, v51, v52, v53, v54, v55);
  uint64_t v195 = a7;
  if (*a10 != 3)
  {
    unsigned int v199 = 0;
    uint64_t v59 = a4;
    uint64_t v61 = v56;
    uint64_t v58 = a6;
    goto LABEL_31;
  }
  int v57 = *(unsigned __int16 *)(a9 + 2 * (int)a10[1]);
  uint64_t v58 = a6;
  if (v57 == 35)
  {
    int v64 = v18[14];
    uint64_t v59 = a4;
    if (!v64) {
      goto LABEL_23;
    }
    uint64_t v61 = v56;
    if ((int)sub_1000B55FC(v16, v64, 1, 1, 0, 30, (uint64_t)v201) >= 1) {
      goto LABEL_21;
    }
    uint64_t v65 = v18[14];
  }
  else
  {
    if (v57 != 43)
    {
      uint64_t v59 = a4;
      if (v57 == 45)
      {
        uint64_t v60 = v18[12];
        uint64_t v61 = v56;
        if (!v60)
        {
          unsigned int v199 = 0;
          goto LABEL_31;
        }
        __int16 v62 = v201;
        if ((int)sub_1000B55FC(v16, v60, 1, 1, 0, 30, (uint64_t)v201) >= 1)
        {
          int v63 = *v201;
LABEL_22:
          unsigned int v199 = 1;
          sub_1000BA9EC(v191, v15, v59, a5, 0, a6, v195, v196, v63, a10[1], 0, 0, 1);
          goto LABEL_31;
        }
        if ((int)sub_1000B55FC(v16, v18[12], 0, 1, 0, 30, (uint64_t)v201) < 1) {
          goto LABEL_29;
        }
        goto LABEL_27;
      }
LABEL_23:
      unsigned int v199 = 0;
      uint64_t v61 = v56;
      goto LABEL_31;
    }
    int v66 = v18[10];
    uint64_t v59 = a4;
    if (!v66) {
      goto LABEL_23;
    }
    uint64_t v61 = v56;
    if ((int)sub_1000B55FC(v16, v66, 1, 1, 0, 30, (uint64_t)v201) >= 1)
    {
LABEL_21:
      int v63 = *v201;
      goto LABEL_22;
    }
    uint64_t v65 = v18[10];
  }
  __int16 v62 = v201;
  if ((int)sub_1000B55FC(v16, v65, 0, 1, 0, 30, (uint64_t)v201) < 1)
  {
LABEL_29:
    int v67 = -1;
    goto LABEL_30;
  }
LABEL_27:
  int v67 = *v62;
LABEL_30:
  sub_1000BA9EC(v191, v15, v59, a5, 0, a6, v195, v196, v67, a10[1], 0, 0, 0);
  unsigned int v199 = 1;
LABEL_31:
  int v68 = a10[4];
  if (v68 < 1)
  {
    uint64_t v84 = v201;
    goto LABEL_52;
  }
  uint64_t v69 = 0;
  int v70 = 0;
  while (1)
  {
    int v71 = a10[7 * v69];
    if (v71 != 3)
    {
      if (v71 == 2)
      {
        uint64_t v72 = &a10[7 * v69];
        int v75 = v72[2];
        BOOL v73 = v72 + 2;
        int v74 = v75;
        if (v75 >= 1)
        {
          uint64_t v76 = 0;
          do
          {
            v61[v70 + v76] = v76 + a10[7 * v69 + 1];
            int v74 = *v73;
            ++v76;
          }
          while ((int)v76 < *v73);
          v70 += v76;
        }
        *a11 = a10[7 * v69 + 1] + v74;
        int v68 = a10[4];
      }
      goto LABEL_34;
    }
    uint64_t v77 = (int)a10[7 * v69 + 1];
    int v78 = *(unsigned __int16 *)(a9 + 2 * v77);
    if (v78 == (unsigned __int16)*v18[52] || v69 && v78 != (unsigned __int16)*v18[50]) {
      break;
    }
LABEL_34:
    if (++v69 >= v68) {
      goto LABEL_45;
    }
  }
  *a11 = v77;
LABEL_45:
  uint64_t v185 = v18;
  int v200 = v61;
  if (v70 >= 13)
  {
    int v189 = v33;
    uint64_t v79 = v70;
    uint64_t v80 = v58;
    unsigned int v81 = v199;
    do
    {
      uint64_t v82 = *v61++;
      v81 += sub_1000BAA4C(v16, a9 + 2 * v82, v82, 1, v196, v191, v15, v59, a5, 0, v80, v195, 0);
      --v79;
    }
    while (v79);
    unsigned int v199 = v81;
    LODWORD(v83) = v70;
    uint64_t v58 = v80;
    int v33 = v189;
    int v18 = v185;
    uint64_t v61 = v200;
    uint64_t v17 = a9;
    uint64_t v177 = v15;
    uint64_t v178 = v59;
    uint64_t v84 = v201;
    goto LABEL_49;
  }
  LODWORD(v83) = 0;
  uint64_t v177 = v15;
  uint64_t v178 = v59;
  uint64_t v84 = v201;
  if (v70 != 3)
  {
LABEL_49:
    if ((int)v83 >= v70) {
      goto LABEL_52;
    }
    goto LABEL_50;
  }
  int v159 = sub_1000B574C(v16, (char *)(a9 + 2 * *v61), 0, 0, 3, 30, (uint64_t)v201);
  if (v159 < 1)
  {
    int v70 = 3;
    LODWORD(v83) = 0;
LABEL_50:
    int v179 = 0;
    int v188 = v70;
    while (1)
    {
      int v90 = (v70 + ~v83) % 3;
      int v91 = v90 + 1;
      if (v90 == 2) {
        break;
      }
      uint64_t v97 = v59;
      uint64_t v98 = v58;
      uint64_t v99 = v15;
      int v96 = 0;
LABEL_100:
      int v182 = v188 - v83;
      BOOL v117 = v91 >= 1 && v188 - (int)v83 <= 2;
      int v193 = v83;
      uint64_t v118 = v198;
      unsigned int v190 = v91;
      if (!v117)
      {
LABEL_104:
        if (v91 < 1)
        {
          int v18 = v185;
          uint64_t v15 = v99;
          uint64_t v58 = v98;
          uint64_t v59 = v97;
          int v70 = v188;
          LODWORD(v83) = v91 + v193;
          if (!v96) {
            goto LABEL_56;
          }
          goto LABEL_106;
        }
LABEL_139:
        if (v96)
        {
          int v18 = v185;
          uint64_t v135 = v185[48];
          uint64_t v15 = v99;
          if (v135)
          {
            uint64_t v58 = v98;
            int v70 = v188;
            if ((int)sub_1000B55FC(v16, v135, 1, 1, 0, 30, (uint64_t)v84) < 1)
            {
              uint64_t v59 = v97;
              if ((int)sub_1000B55FC(v16, v185[48], 0, 1, 0, 30, (uint64_t)v84) < 1) {
                int v143 = -1;
              }
              else {
                int v143 = *v84;
              }
              uint64_t v173 = v200[v179];
              sub_1000BA9EC(v191, v15, v97, a5, 0, v58, v195, v196, v143, v173, SHIDWORD(v173), 0, 0);
            }
            else
            {
              uint64_t v172 = v200[v179];
              uint64_t v59 = v97;
              sub_1000BA9EC(v191, v15, v97, a5, 0, v58, v195, v196, *v84, v172, SHIDWORD(v172), 0, 1);
            }
            ++v199;
            int v138 = v193;
            int v91 = v190;
            uint64_t v139 = v200;
            if (v188 == 4)
            {
LABEL_165:
              if (!v138 && *(_WORD *)(v17 + 2 * *v139) == 49 && *((_DWORD *)v18 + 136))
              {
                LODWORD(v83) = v91;
                int v119 = v70 - v91;
                if (v70 - v91 == 3) {
                  goto LABEL_169;
                }
LABEL_107:
                if (v119 != 6)
                {
                  if (v119 == 9)
                  {
                    int v194 = v83;
                    if (sub_1000CF020(*v18, 32))
                    {
                      int32x2_t v202 = 0;
                      sub_1000CED88(&v203, *v18, 32);
                      int v120 = sub_1000CF044((char *)&v203, L" ", &v202);
                      if (v120)
                      {
                        uint64_t v121 = v120;
                        uint64_t v122 = v194 - 1;
                        do
                        {
                          if ((int)sub_1000B55FC(v16, v121, 1, 1, 0, 30, (uint64_t)v201) >= 1)
                          {
                            uint64_t v170 = (v200[v122] + 1);
                            sub_1000BA9EC(v191, v15, v59, a5, 0, v58, v195, v196, *v201, v170, SHIDWORD(v170), 0, 1);
                            unsigned int v123 = v199;
                          }
                          else
                          {
                            if ((int)sub_1000B55FC(v16, v121, 0, 1, 0, 30, (uint64_t)v201) < 1) {
                              int v124 = -1;
                            }
                            else {
                              int v124 = *v201;
                            }
                            unsigned int v123 = v199;
                            uint64_t v171 = (v200[v122] + 1);
                            sub_1000BA9EC(v191, v15, v59, a5, 0, v58, v195, v196, v124, v171, SHIDWORD(v171), 0, 0);
                          }
                          unsigned int v199 = v123 + 1;
                          uint64_t v121 = sub_1000CF044(0, L" ", &v202);
                        }
                        while (v121);
                      }
                      int v18 = v185;
                      uint64_t v84 = v201;
                      int v70 = v188;
                      LODWORD(v83) = v194;
                    }
                    else if (*v18)
                    {
                      if ((int)sub_1000B55FC(v16, *v18, 1, 1, 0, 30, (uint64_t)v84) < 1)
                      {
                        if ((int)sub_1000B55FC(v16, *v18, 0, 1, 0, 30, (uint64_t)v84) < 1) {
                          int v153 = -1;
                        }
                        else {
                          int v153 = *v84;
                        }
                        sub_1000BA9EC(v191, v15, v59, a5, 0, v58, v195, v196, v153, v200[v194 - 1] + 1, 0, 0, 0);
                      }
                      else
                      {
                        sub_1000BA9EC(v191, v15, v59, a5, 0, v58, v195, v196, *v84, v200[v194 - 1] + 1, 0, 0, 1);
                      }
                      ++v199;
                      LODWORD(v83) = v194;
                    }
                    else
                    {
                      LODWORD(v83) = v194;
                    }
                  }
                  goto LABEL_56;
                }
                uint64_t v140 = v18[2];
                if (!v140) {
                  goto LABEL_56;
                }
                int v141 = v83;
                if ((int)sub_1000B55FC(v16, v140, 1, 1, 0, 30, (uint64_t)v84) < 1)
                {
                  int v142 = v18[2];
                  goto LABEL_189;
                }
LABEL_171:
                sub_1000BA9EC(v191, v15, v59, a5, 0, v58, v195, v196, *v84, v200[v141 - 1] + 1, 0, 0, 1);
LABEL_199:
                ++v199;
                LODWORD(v83) = v141;
                goto LABEL_56;
              }
            }
LABEL_172:
            BOOL v145 = v91 != 1 || v182 < 2;
            if (!v145 && *(_WORD *)(v17 + 2 * v139[v138]) == 49 && (int v146 = v18[64]) != 0)
            {
              if ((int)sub_1000B55FC(v16, v146, 1, 1, 0, 30, (uint64_t)v84) < 1)
              {
                if ((int)sub_1000B55FC(v16, v18[64], 0, 1, 0, 30, (uint64_t)v84) < 1) {
                  int v152 = -1;
                }
                else {
                  int v152 = *v84;
                }
                sub_1000BA9EC(v191, v15, v59, a5, 0, v58, v195, v196, v152, v139[v179], 1, 0, 0);
              }
              else
              {
                sub_1000BA9EC(v191, v15, v59, a5, 0, v58, v195, v196, *v84, v139[v179], 1, 0, 1);
              }
              ++v199;
            }
            else
            {
              uint64_t v147 = 0;
              uint64_t v148 = v138;
              do
              {
                *(&v203 + v147) = *(_WORD *)(v17 + 2 * v139[v138 + v147]);
                ++v147;
              }
              while (v190 != v147);
              *(&v203 + v190) = 0;
              if (sub_1000B55FC(v16, &v203, 1, 1, 0, 30, (uint64_t)v84))
              {
                if ((int)sub_1000B55FC(v16, &v203, 1, 1, 0, 30, (uint64_t)v84) < 1)
                {
                  if ((int)sub_1000B55FC(v16, &v203, 0, 1, 0, 30, (uint64_t)v84) < 1) {
                    int v150 = -1;
                  }
                  else {
                    int v150 = *v84;
                  }
                  sub_1000BA9EC(v191, v15, v59, a5, 0, v58, v195, v196, v150, v139[v148], v190, 0, 0);
                }
                else
                {
                  sub_1000BA9EC(v191, v15, v59, a5, 0, v58, v195, v196, *v84, v139[v148], v190, (int)&_mh_execute_header, (unint64_t)&_mh_execute_header >> 32);
                }
                unsigned int v149 = v199 + 1;
              }
              else
              {
                unsigned int v149 = sub_1000BAA4C(v16, v17 + 2 * v139[v148], v139[v148], 2, v196, v191, v15, v59, a5, 0, v58, v195, 0)+ v199;
              }
              unsigned int v199 = v149;
              int v18 = v185;
            }
            LODWORD(v83) = v190 + v193;
            int v119 = v70 - (v190 + v193);
            if (v119 != 3) {
              goto LABEL_107;
            }
LABEL_169:
            uint64_t v144 = v18[4];
            if (!v144) {
              goto LABEL_56;
            }
            int v141 = v83;
            if ((int)sub_1000B55FC(v16, v144, 1, 1, 0, 30, (uint64_t)v84) >= 1) {
              goto LABEL_171;
            }
            int v142 = v18[4];
LABEL_189:
            if ((int)sub_1000B55FC(v16, v142, 0, 1, 0, 30, (uint64_t)v84) < 1) {
              int v151 = -1;
            }
            else {
              int v151 = *v84;
            }
            sub_1000BA9EC(v191, v15, v59, a5, 0, v58, v195, v196, v151, v200[v141 - 1] + 1, 0, 0, 0);
            goto LABEL_199;
          }
        }
        else
        {
          int v18 = v185;
          uint64_t v15 = v99;
        }
        uint64_t v58 = v98;
        uint64_t v59 = v97;
        int v70 = v188;
        int v138 = v193;
        uint64_t v139 = v200;
        if (v188 == 4) {
          goto LABEL_165;
        }
        goto LABEL_172;
      }
      int v181 = v96;
      int v125 = sub_1000B574C(v16, (char *)(v17 + 2 * v200[(int)v83]), 0, 0, v91, 30, (uint64_t)v84);
      int v96 = v181;
      int v91 = v190;
      if (v125 < 1) {
        goto LABEL_139;
      }
      BOOL v180 = 0;
      unint64_t v126 = v125 + 1;
      int v186 = -1;
      unint64_t v127 = v190;
      do
      {
        while (1)
        {
          unint64_t v128 = v127;
          uint64_t v129 = (v126 - 2);
          sub_1000B5360((uint64_t)v16, v201[v129], (uint64_t)v33, v118);
          unint64_t v130 = sub_1000CED6C((unint64_t)v33);
          if ((int)v130 >= (int)v127) {
            break;
          }
          if (--v126 <= 1) {
            goto LABEL_143;
          }
        }
        unint64_t v127 = v130;
        uint64_t v131 = v33;
        uint64_t v132 = v16;
        int v133 = v130 - 1;
        if (sub_1000CDF3C(*(unsigned __int16 *)(v17 + 2 * ((int)v130 - 1 + v200[v193])))
          || sub_1000CDD58(*(unsigned __int16 *)(v17 + 2 * (v133 + v200[v193])))
          && sub_1000CDD58(*(unsigned __int16 *)(v17 + 2 * (v200[v193] + (int)v127)))
          || sub_1000CDF18(*(unsigned __int16 *)(v17 + 2 * (v133 + v200[v193])))
          && sub_1000CDF18(*(unsigned __int16 *)(v17 + 2 * (v200[v193] + (int)v127))))
        {
          unint64_t v127 = v128;
          uint64_t v16 = v132;
          goto LABEL_125;
        }
        int v134 = sub_1000CFC34((_WORD *)(v17 + 2 * v200[v193]), v131, v127);
        uint64_t v16 = v132;
        if (v186 == -1 || (int)v127 > (int)v128) {
          goto LABEL_138;
        }
        if (v127 != v128)
        {
          unint64_t v127 = v128;
          goto LABEL_125;
        }
        if (v180 && v134)
        {
          BOOL v180 = 1;
          unint64_t v127 = v128;
        }
        else
        {
LABEL_138:
          int v186 = v201[v129];
          BOOL v180 = v134 == 0;
        }
LABEL_125:
        int v33 = v131;
        uint64_t v118 = v198;
        --v126;
      }
      while (v126 > 1);
LABEL_143:
      uint64_t v99 = v177;
      uint64_t v97 = v178;
      uint64_t v98 = a6;
      uint64_t v84 = v201;
      int v91 = v190;
      int v96 = v181;
      if (v186 == -1) {
        goto LABEL_104;
      }
      if (v181)
      {
        if (v127 == v190)
        {
          uint64_t v136 = v185[48];
          if (v136)
          {
            if ((int)sub_1000B55FC(v16, v136, 1, 1, 0, 30, (uint64_t)v201) >= 1)
            {
              uint64_t v169 = v200[v179];
              sub_1000BA9EC(v191, v177, v178, a5, 0, a6, v195, v196, *v201, v169, SHIDWORD(v169), 0, 1);
              unsigned int v87 = v199;
            }
            else
            {
              if ((int)sub_1000B55FC(v16, v185[48], 0, 1, 0, 30, (uint64_t)v201) < 1) {
                int v137 = -1;
              }
              else {
                int v137 = *v201;
              }
              unsigned int v87 = v199;
              uint64_t v174 = v200[v179];
              sub_1000BA9EC(v191, v177, v178, a5, 0, a6, v195, v196, v137, v174, SHIDWORD(v174), 0, 0);
            }
            unsigned int v199 = v87 + 1;
          }
        }
      }
      uint64_t v88 = v193;
      sub_1000BA9EC(v191, v177, v178, a5, 0, a6, v195, v196, v186, v200[v88], v127, 0, v180);
      ++v199;
      int v89 = v200[v88] + v127;
      uint64_t v15 = v177;
      uint64_t v58 = a6;
      uint64_t v59 = v178;
      *a11 = v89;
      int v70 = v188;
      LODWORD(v83) = v190 + v193;
      int v18 = v185;
      uint64_t v84 = v201;
LABEL_56:
      uint64_t v61 = v200;
      if ((int)v83 >= v70) {
        goto LABEL_52;
      }
    }
    uint64_t v92 = (int)v83;
    uint64_t v93 = v61[(int)v83];
    uint64_t v94 = (unsigned __int16 *)(v17 + 2 * v93);
    int v95 = *v94;
    if (v95 != 49)
    {
      if (v95 == 48)
      {
        int v96 = 0;
        LODWORD(v83) = v83 + 1;
        uint64_t v84 = v201;
        goto LABEL_94;
      }
      int v192 = v83;
      if (*((_DWORD *)v18 + 132))
      {
        uint64_t v103 = v61;
        __int16 v203 = *v94;
        int v204 = 3145776;
        __int16 v205 = 0;
        uint64_t v104 = v201;
        if ((int)sub_1000B55FC(v16, &v203, 1, 1, 0, 30, (uint64_t)v201) < 1)
        {
          uint64_t v105 = &v203;
LABEL_84:
          if ((int)sub_1000B55FC(v16, v105, 0, 1, 0, 30, (uint64_t)v104) < 1) {
            int v107 = -1;
          }
          else {
            int v107 = *v104;
          }
          uint64_t v61 = v103;
          int v108 = v103[v92];
          char v176 = 0;
          uint64_t v109 = 1;
          goto LABEL_88;
        }
        goto LABEL_72;
      }
      goto LABEL_77;
    }
    if (*((_DWORD *)v18 + 132))
    {
      uint64_t v100 = &v61[(int)v83];
      if (*(_WORD *)(v17 + 2 * v100[1]) == 48 && *(_WORD *)(v17 + 2 * v100[2]) == 48)
      {
        int v192 = v83;
        if ((int)sub_1000B55FC(v16, L"100", 1, 1, 0, 30, (uint64_t)v201) >= 1)
        {
          char v176 = 1;
          *((void *)&v168 + 1) = 3;
          LODWORD(v168) = *v201;
          DWORD1(v168) = v61[v92];
          uint64_t v101 = v191;
          uint64_t v102 = v15;
          uint64_t v59 = v178;
LABEL_90:
          uint64_t v115 = v59;
          uint64_t v116 = a5;
LABEL_91:
          uint64_t v58 = a6;
          sub_1000BA9EC(v101, v102, v115, v116, 0, a6, v195, v196, v168, SDWORD1(v168), SDWORD2(v168), SHIDWORD(v168), v176);
          ++v199;
          goto LABEL_92;
        }
        if ((int)sub_1000B55FC(v16, L"100", 0, 1, 0, 30, (uint64_t)v201) < 1) {
          int v107 = -1;
        }
        else {
          int v107 = *v201;
        }
        uint64_t v59 = v178;
        int v108 = v61[v92];
        char v176 = 0;
        uint64_t v109 = 3;
        goto LABEL_88;
      }
      int v106 = v18[62];
      if (!v106)
      {
        uint64_t v84 = v201;
LABEL_93:
        LODWORD(v83) = v83 + 1;
        int v96 = 1;
        int v179 = v83;
        goto LABEL_94;
      }
      int v192 = v83;
      uint64_t v103 = v61;
      uint64_t v104 = v201;
      if ((int)sub_1000B55FC(v16, v106, 1, 1, 0, 30, (uint64_t)v201) < 1)
      {
        uint64_t v105 = v18[62];
        goto LABEL_84;
      }
LABEL_72:
      int v107 = *v104;
      uint64_t v61 = v103;
      int v108 = v103[v92];
      uint64_t v109 = 1;
      char v176 = 1;
LABEL_88:
      *((void *)&v168 + 1) = v109;
LABEL_89:
      *(void *)&long long v168 = __PAIR64__(v108, v107);
      uint64_t v101 = v191;
      uint64_t v102 = v15;
      goto LABEL_90;
    }
    int v192 = v83;
    uint64_t v110 = v18[62];
    if (!v110)
    {
LABEL_77:
      v199 += sub_1000BAA4C(v16, (uint64_t)v94, v93, 1, v196, v191, v15, v59, a5, 0, v58, v195, 0);
      uint64_t v113 = v18[6];
      if (!v113)
      {
LABEL_92:
        uint64_t v84 = v201;
        LODWORD(v83) = v192;
        goto LABEL_93;
      }
      if ((int)sub_1000B55FC(v16, v113, 1, 1, 0, 30, (uint64_t)v201) < 1)
      {
        if ((int)sub_1000B55FC(v16, v18[6], 0, 1, 0, 30, (uint64_t)v201) < 1) {
          int v114 = -1;
        }
        else {
          int v114 = *v201;
        }
        uint64_t v116 = a5;
        char v176 = 0;
        HIDWORD(v168) = 0;
        LODWORD(v168) = v114;
        *(void *)((char *)&v168 + 4) = (v61[v92] + 1);
        uint64_t v101 = v191;
        uint64_t v102 = v15;
        uint64_t v115 = v59;
        goto LABEL_91;
      }
      int v107 = *v201;
      int v108 = v61[v92] + 1;
      char v176 = 1;
      *((void *)&v168 + 1) = 0;
      goto LABEL_89;
    }
    int v111 = *((_DWORD *)v18 + 135);
    int v112 = sub_1000B55FC(v16, v110, 1, 1, 0, 30, (uint64_t)v201);
    if (v111)
    {
      if (v112 < 1)
      {
        int v18 = v185;
        if ((int)sub_1000B55FC(v16, v185[62], 0, 1, 0, 30, (uint64_t)v201) < 1) {
          int v156 = -1;
        }
        else {
          int v156 = *v201;
        }
        uint64_t v59 = v178;
        uint64_t v58 = a6;
        sub_1000BA9EC(v191, v15, v178, a5, 0, a6, v195, v196, v156, v61[v92], 1, 0, 0);
      }
      else
      {
        sub_1000BA9EC(v191, v15, v59, a5, 0, v58, v195, v196, *v201, v61[v92], 1, 0, 1);
        int v18 = v185;
      }
      ++v199;
      LODWORD(v83) = v192 + 1;
      goto LABEL_232;
    }
    if (v112 < 1)
    {
      int v18 = v185;
      if ((int)sub_1000B55FC(v16, v185[62], 0, 1, 0, 30, (uint64_t)v201) < 1) {
        int v157 = -1;
      }
      else {
        int v157 = *v201;
      }
      uint64_t v58 = a6;
      sub_1000BA9EC(v191, v15, v178, a5, 0, a6, v195, v196, v157, v61[v92], 1, 0, 0);
      uint64_t v59 = v178;
      uint64_t v83 = v92 + 1;
      int v154 = v185[6];
      if (v154)
      {
LABEL_207:
        uint64_t v155 = v83;
        uint64_t v84 = v201;
        if ((int)sub_1000B55FC(v16, v154, 1, 1, 0, 30, (uint64_t)v201) < 1)
        {
          if ((int)sub_1000B55FC(v16, v18[6], 0, 1, 0, 30, (uint64_t)v201) < 1) {
            int v158 = -1;
          }
          else {
            int v158 = *v201;
          }
          uint64_t v175 = v61[(int)v155];
          sub_1000BA9EC(v191, v15, v178, a5, 0, v58, v195, v196, v158, v175, SHIDWORD(v175), 0, 0);
        }
        else
        {
          sub_1000BA9EC(v191, v15, v178, a5, 0, v58, v195, v196, *v201, v61[v155], 0, 0, 1);
        }
        v199 += 2;
        int v96 = 1;
        int v179 = v155;
        LODWORD(v83) = v155;
        uint64_t v59 = v178;
LABEL_94:
        if (*(_WORD *)(v17 + 2 * v61[(int)v83]) == 48)
        {
          if (*(_WORD *)(v17 + 2 * v61[(int)v83 + 1]) == 48)
          {
            LODWORD(v83) = v83 + 2;
            if (!v96) {
              goto LABEL_56;
            }
LABEL_106:
            int v119 = v70 - v83;
            if (v70 - v83 != 3) {
              goto LABEL_107;
            }
            goto LABEL_169;
          }
          uint64_t v97 = v59;
          uint64_t v98 = v58;
          uint64_t v99 = v15;
          int v91 = 1;
          LODWORD(v83) = v83 + 1;
        }
        else
        {
          uint64_t v97 = v59;
          uint64_t v98 = v58;
          uint64_t v99 = v15;
          int v91 = 2;
        }
        goto LABEL_100;
      }
    }
    else
    {
      sub_1000BA9EC(v191, v15, v59, a5, 0, v58, v195, v196, *v201, v61[v92], 1, 0, 1);
      int v18 = v185;
      uint64_t v83 = v92 + 1;
      int v154 = v185[6];
      if (v154) {
        goto LABEL_207;
      }
    }
    ++v199;
LABEL_232:
    int v96 = 1;
    int v179 = v83;
    uint64_t v84 = v201;
    goto LABEL_94;
  }
  BOOL v183 = 0;
  unint64_t v160 = v159 + 1;
  int v187 = -1;
  uint64_t v161 = 3;
  uint64_t v162 = v191;
  do
  {
    uint64_t v163 = v161;
    uint64_t v164 = (v160 - 2);
    sub_1000B5360((uint64_t)v16, v201[v164], (uint64_t)v33, v198);
    unint64_t v165 = sub_1000CED6C((unint64_t)v33);
    if ((int)v165 < (int)v161) {
      goto LABEL_244;
    }
    uint64_t v161 = v165;
    int v166 = v165 - 1;
    if (sub_1000CDF3C(*(unsigned __int16 *)(a9 + 2 * ((int)v165 - 1 + *v200)))
      || sub_1000CDD58(*(unsigned __int16 *)(a9 + 2 * (v166 + *v200)))
      && sub_1000CDD58(*(unsigned __int16 *)(a9 + 2 * (*v200 + (int)v161)))
      || sub_1000CDF18(*(unsigned __int16 *)(a9 + 2 * (v166 + *v200)))
      && sub_1000CDF18(*(unsigned __int16 *)(a9 + 2 * (*v200 + (int)v161))))
    {
      uint64_t v161 = v163;
      uint64_t v162 = v191;
    }
    else
    {
      int v167 = sub_1000CFC34((_WORD *)(a9 + 2 * *v200), v33, v161);
      uint64_t v162 = v191;
      if (v187 != -1 && (int)v161 <= (int)v163)
      {
        if (v161 != v163) {
          goto LABEL_244;
        }
        if (v183 && v167)
        {
          BOOL v183 = 1;
LABEL_244:
          uint64_t v161 = v163;
          goto LABEL_245;
        }
      }
      int v187 = v201[v164];
      BOOL v183 = v167 == 0;
    }
LABEL_245:
    --v160;
  }
  while (v160 > 1);
  int v70 = 3;
  if (v187 == -1)
  {
    uint64_t v15 = v177;
    uint64_t v59 = v178;
    uint64_t v84 = v201;
    uint64_t v61 = v200;
    uint64_t v58 = a6;
    LODWORD(v83) = 0;
    goto LABEL_50;
  }
  uint64_t v61 = v200;
  sub_1000BA9EC(v162, v177, v178, a5, 0, a6, v195, v196, v187, *v200, v161, 0, v183);
  ++v199;
  *a11 = *v200 + v161;
  uint64_t v84 = v201;
LABEL_52:
  sub_1000CD4D0(v61, 120);
  sub_1000CD4D0(v84, 120);
  int v85 = sub_1000B51E0(v16);
  sub_1000CD4D0(v198, 2 * (v85 + 1));
  int v86 = sub_1000B51A0(v16);
  sub_1000CD4D0(v33, 2 * (v86 + 1));
  return v199;
}

uint64_t sub_1000ABC2C(uint64_t *a1, uint64_t a2, unsigned int a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int *a9, int *a10, _WORD *a11, _WORD *a12, int *a13, uint64_t a14)
{
  uint64_t v14 = a14;
  if (*(int *)(a14 + 16) >= 1)
  {
    unsigned int v91 = 0;
    int v17 = 0;
    uint64_t v84 = *(void *)(a1[7] + 216);
    while (1)
    {
      int v19 = (int *)(v14 + 28 * v17);
      int v20 = *v19;
      if (*v19 == 1)
      {
        uint64_t v30 = v14 + 28 * v17;
        int v32 = *(_DWORD *)(v30 + 8);
        uint64_t v31 = (int *)(v30 + 8);
        if (v32 < 1)
        {
          LOWORD(v92[0]) = 0;
          if (!sub_1000CF5BC(*(unsigned __int16 **)(a1[7] + 32), v92)) {
            goto LABEL_4;
          }
        }
        else
        {
          uint64_t v33 = 0;
          int v34 = (int *)(v14 + 28 * v17 + 4);
          do
          {
            *((_WORD *)v92 + v33) = sub_1000CDA88(*(unsigned __int16 *)(a2 + 2 * (v33 + *v34)));
            ++v33;
          }
          while (v33 < *v31);
          *((_WORD *)v92 + v33) = 0;
          if (!sub_1000CF5BC(*(unsigned __int16 **)(a1[7] + 32), v92)) {
            goto LABEL_4;
          }
        }
        if (v17 < 1)
        {
          unsigned int v57 = v91;
        }
        else
        {
          int v56 = *(_WORD **)(v84 + 352);
          unsigned int v57 = v91;
          if (v56)
          {
            if ((int)sub_1000B55FC(a1, v56, 1, 1, 0, 30, (uint64_t)a9) < 1)
            {
              if ((int)sub_1000B55FC(a1, *(_WORD **)(v84 + 352), 0, 1, 0, 30, (uint64_t)a9) < 1) {
                int v64 = -1;
              }
              else {
                int v64 = *a9;
              }
              uint64_t v74 = *(unsigned int *)(a14 + 28 * v17 + 4);
              sub_1000BA9EC(a4, a5, a6, a7, 0, a8, a10, a3, v64, v74, SHIDWORD(v74), 0, 0);
            }
            else
            {
              uint64_t v73 = *(unsigned int *)(a14 + 28 * v17 + 4);
              sub_1000BA9EC(a4, a5, a6, a7, 0, a8, a10, a3, *a9, v73, SHIDWORD(v73), 0, 1);
            }
            unsigned int v57 = v91 + 1;
          }
        }
        uint64_t v66 = a1[7];
        if (*(int *)(v66 + 120) >= 1)
        {
          uint64_t v67 = 0;
          uint64_t v68 = 0;
          while (sub_1000CF6D4(v92, *(unsigned __int16 **)(*(void *)(v66 + 128) + v67))
               && sub_1000CF6D4(v92, *(unsigned __int16 **)(*(void *)(a1[7] + 128) + v67 + 16)))
          {
            ++v68;
            uint64_t v66 = a1[7];
            v67 += 32;
            if (v68 >= *(int *)(v66 + 120)) {
              goto LABEL_92;
            }
          }
          if ((int)sub_1000B55FC(a1, *(_WORD **)(*(void *)(a1[7] + 128) + v67 + 16), 0, 1, 0, 30, (uint64_t)a9) < 1) {
            int v69 = -1;
          }
          else {
            int v69 = *a9;
          }
          uint64_t v75 = *(unsigned int *)(a14 + 28 * v17 + 4);
          sub_1000BA9EC(a4, a5, a6, a7, 0, a8, a10, a3, v69, v75, SHIDWORD(v75), 0, 0);
          ++v57;
        }
LABEL_92:
        if (v17 < 1)
        {
          unsigned int v91 = v57;
          uint64_t v14 = a14;
        }
        else
        {
          int v70 = *(_WORD **)(v84 + 352);
          uint64_t v14 = a14;
          if (v70 && v17 < *(_DWORD *)(a14 + 16) - 2)
          {
            if ((int)sub_1000B55FC(a1, v70, 1, 1, 0, 30, (uint64_t)a9) < 1)
            {
              if ((int)sub_1000B55FC(a1, *(_WORD **)(v84 + 352), 0, 1, 0, 30, (uint64_t)a9) < 1) {
                int v71 = -1;
              }
              else {
                int v71 = *a9;
              }
              uint64_t v77 = (*v31 + *(_DWORD *)(a14 + 28 * v17 + 4));
              sub_1000BA9EC(a4, a5, a6, a7, 0, a8, a10, a3, v71, v77, SHIDWORD(v77), 0, 0);
            }
            else
            {
              uint64_t v76 = (*v31 + *(_DWORD *)(a14 + 28 * v17 + 4));
              sub_1000BA9EC(a4, a5, a6, a7, 0, a8, a10, a3, *a9, v76, SHIDWORD(v76), 0, 1);
            }
            unsigned int v29 = v57 + 1;
LABEL_110:
            unsigned int v91 = v29;
            uint64_t v14 = a14;
            goto LABEL_5;
          }
          unsigned int v91 = v57;
        }
      }
      else
      {
        if (v20 != 3)
        {
          if (v20 != 2) {
            goto LABEL_5;
          }
          uint64_t v21 = v14 + 28 * v17;
          int v22 = *(_DWORD *)(v21 + 8);
          uint64_t v83 = (int *)(v21 + 8);
          if (v22 == 4)
          {
            uint64_t v23 = v14 + 28 * v17;
            uint64_t v25 = *(int *)(v23 + 4);
            uint64_t v24 = (int *)(v23 + 4);
            sub_1000CED88(v93, (__int16 *)(a2 + 2 * v25), 5);
            if (!sub_1000CDF18(v93[0]) || !sub_1000CDF18(v93[1]) || !sub_1000CDF18(v93[2]) || !sub_1000CDF18(v93[3])) {
              return 0;
            }
            if (*(_DWORD *)(v84 + 532) && sub_1000C4C84(v93) < 0x7D0)
            {
              sub_1000CED88(v93, (__int16 *)(a2 + 2 * *v24), 3);
              sub_1000B55FC(a1, v93, 0, 1, 0, 30, (uint64_t)a9);
              sub_1000BA9EC(a4, a5, a6, a7, 0, a8, a10, a3, *a9, *v24, 2, 0, 1);
              __int16 v62 = (__int16 *)(a2 + 2 * (*v24 + 2));
              if (*v62 == 48 && *(_WORD *)(a2 + 2 * (*v24 + 3)) == 48)
              {
                int v63 = *(_WORD **)(v84 + 48);
              }
              else
              {
                sub_1000CED88(v93, v62, 3);
                int v63 = v93;
              }
              sub_1000B55FC(a1, v63, 0, 1, 0, 30, (uint64_t)a9);
              sub_1000BA9EC(a4, a5, a6, a7, 0, a8, a10, a3, *a9, *v24 + 2, 2, 0, 1);
              unsigned int v29 = v91 + 2;
            }
            else
            {
              uint64_t v26 = *v83 + (uint64_t)*v24;
              __int16 v27 = *(_WORD *)(a2 + 2 * v26);
              if (v27) {
                *(_WORD *)(a2 + 2 * v26) = 0;
              }
              int v28 = sub_1000AA174(a1, a4, a5, a6, a7, a8, a10, a3, a2, v19, v92);
              *(_WORD *)(a2 + 2 * (*v83 + *v24)) = v27;
              unsigned int v29 = v28 + v91;
            }
            goto LABEL_110;
          }
          uint64_t v40 = v17 + 1;
          unsigned int v81 = (_DWORD *)(v14 + 28 * v40);
          unsigned int v41 = v91;
          if ((*v81 | 2) == 3
            && (int v42 = *(_DWORD *)(v14 + 28 * v40 + 8), v42 <= 2)
            && (int v43 = *(_DWORD *)(v14 + 28 * v17 + 4), v43 + v22 == *(_DWORD *)(v14 + 28 * v40 + 4)))
          {
            int v44 = v22 + v42 + 1;
          }
          else
          {
            int v44 = v22 + 1;
            int v43 = *(_DWORD *)(v14 + 28 * v17 + 4);
          }
          uint64_t v82 = (int *)(v14 + 28 * v17 + 4);
          sub_1000CED88(v93, (__int16 *)(a2 + 2 * v43), v44);
          int v45 = sub_1000B574C(a1, (char *)v93, 0, 0, v22, 30, (uint64_t)a9);
          if (v45 < 1) {
            goto LABEL_3;
          }
          int v46 = v45;
          BOOL v47 = 0;
          int v48 = -1;
LABEL_37:
          int v49 = v22;
          int v50 = v47;
LABEL_38:
          int v80 = v50;
LABEL_39:
          uint64_t v51 = &a9[v46];
          while (1)
          {
            BOOL v52 = __OFSUB__(v46--, 1);
            if (v46 < 0 != v52) {
              break;
            }
            unsigned int v53 = *--v51;
            sub_1000B5360((uint64_t)a1, v53, (uint64_t)a11, a12);
            int v54 = sub_1000CED6C((unint64_t)a11);
            if (v54 >= v49)
            {
              int v22 = v54;
              int v55 = sub_1000CFC34(v93, a11, v54);
              if (v48 == -1 || v22 > v49)
              {
                BOOL v47 = v55 == 0;
LABEL_49:
                int v48 = *v51;
                goto LABEL_37;
              }
              if (v22 != v49) {
                goto LABEL_39;
              }
              BOOL v47 = v55 == 0;
              if (!v80) {
                goto LABEL_49;
              }
              int v50 = 1;
              if (!v55) {
                goto LABEL_49;
              }
              goto LABEL_38;
            }
          }
          unsigned int v41 = v91;
          if (v48 == -1)
          {
LABEL_3:
            unsigned int v91 = sub_1000BAA4C(a1, a2 + 2 * *v82, *v82, *v83, a3, a4, a5, a6, a7, 0, a8, a10, 0) + v41;
          }
          else
          {
            sub_1000BA9EC(a4, a5, a6, a7, 0, a8, a10, a3, v48, *v82, v49, 0, v80);
            ++v91;
            if (v49 > *v83)
            {
              uint64_t v14 = a14;
              if (*v81)
              {
                uint64_t v58 = (int *)(a14 + 56 + 28 * v17);
                uint64_t v59 = 1;
                do
                {
                  if (*(_DWORD *)(a14 + 28 * v40 + 4) >= *v82 + v49) {
                    break;
                  }
                  uint64_t v40 = ++v59 + v17;
                  int v60 = *v58;
                  v58 += 7;
                }
                while (v60);
              }
              else
              {
                LODWORD(v59) = 1;
              }
              int v17 = v17 + v59 - 1;
              goto LABEL_5;
            }
          }
LABEL_4:
          uint64_t v14 = a14;
          goto LABEL_5;
        }
        uint64_t v35 = v14 + 28 * v17;
        uint64_t v37 = *(int *)(v35 + 4);
        uint64_t v36 = (int *)(v35 + 4);
        int v38 = *(unsigned __int16 *)(a2 + 2 * v37);
        if (v38 == 44)
        {
          uint64_t v39 = a9;
          if ((int)sub_1000B55FC(a1, L",", 1, 1, 0, 30, (uint64_t)a9) >= 1) {
            goto LABEL_63;
          }
          if ((int)sub_1000B55FC(a1, L",", 0, 1, 0, 30, (uint64_t)a9) < 1) {
            int v65 = -1;
          }
          else {
            int v65 = *a9;
          }
          goto LABEL_105;
        }
        if (v38 == 45)
        {
          uint64_t v61 = *(_WORD **)(v84 + 224);
          if (v61)
          {
            sub_1000B55FC(a1, v61, 0, 1, 0, 30, (uint64_t)a9);
            uint64_t v78 = *(unsigned int *)(a14 + 28 * v17 + 8);
            sub_1000BA9EC(a4, a5, a6, a7, 0, a8, a10, a3, *a9, *v36, v78, SHIDWORD(v78), 0);
            uint64_t v14 = a14;
            ++v91;
          }
          goto LABEL_5;
        }
        if (v38 == 47 && *(void *)(v84 + 208))
        {
          uint64_t v39 = a9;
          if ((int)sub_1000B55FC(a1, L"/", 1, 1, 0, 30, (uint64_t)a9) >= 1)
          {
LABEL_63:
            sub_1000BA9EC(a4, a5, a6, a7, 0, a8, a10, a3, *v39, *v36, *(_DWORD *)(a14 + 28 * v17 + 8), (int)&_mh_execute_header, (unint64_t)&_mh_execute_header >> 32);
LABEL_106:
            ++v91;
            uint64_t v14 = a14;
            goto LABEL_5;
          }
          if ((int)sub_1000B55FC(a1, L"/", 0, 1, 0, 30, (uint64_t)a9) < 1) {
            int v65 = -1;
          }
          else {
            int v65 = *a9;
          }
LABEL_105:
          uint64_t v79 = *(unsigned int *)(a14 + 28 * v17 + 8);
          sub_1000BA9EC(a4, a5, a6, a7, 0, a8, a10, a3, v65, *v36, v79, SHIDWORD(v79), 0);
          goto LABEL_106;
        }
      }
LABEL_5:
      int v18 = v17++;
      if (v17 >= *(_DWORD *)(v14 + 16)) {
        goto LABEL_112;
      }
    }
  }
  unsigned int v91 = 0;
  int v18 = -1;
LABEL_112:
  *a13 = v18;
  return v91;
}

uint64_t sub_1000AC828(uint64_t *a1, __int16 *a2, unsigned int a3, uint64_t a4, void *a5, void *a6, void *a7, void *a8, void *a9)
{
  uint64_t v387 = 0;
  int v13 = sub_1000CED6C((unint64_t)a2);
  int v21 = v13 + 10;
  for (int i = v13 + 11; ; int i = v24 + 4)
  {
    uint64_t v23 = (int *)sub_1000CD454(28 * i, v14, v15, v16, v17, v18, v19, v20);
    int v24 = sub_1000A8A2C(a2, v21, (uint64_t)v23);
    if (v24 <= v21) {
      break;
    }
    sub_1000CD4D0(v23, 28 * (v21 + 1));
    int v21 = v24 + 3;
  }
  int v367 = v23;
  uint64_t v368 = a4;
  int v356 = v21;
  size_t v25 = 4 * (int)a4;
  bzero(a5, v25);
  if (a6) {
    bzero(a6, v25);
  }
  uint64_t v365 = (uint64_t)a6;
  if (a7) {
    bzero(a7, v25);
  }
  if (a8) {
    bzero(a8, (int)v368);
  }
  if (a9) {
    bzero(a9, (int)v368);
  }
  int v26 = sub_1000CED6C((unint64_t)a2) + 1;
  int v34 = (__int16 *)sub_1000CD454(2 * v26, v27, v28, v29, v30, v31, v32, v33);
  uint64_t v35 = v34;
  if (v34 && sub_1000CED88(v34, a2, v26))
  {
    uint64_t v354 = 2 * v26;
    int v36 = sub_1000B51A0(a1);
    int v371 = sub_1000CD454(2 * (v36 + 1), v37, v38, v39, v40, v41, v42, v43);
    int v44 = sub_1000B51E0(a1);
    uint64_t v370 = sub_1000CD454(2 * (v44 + 1), v45, v46, v47, v48, v49, v50, v51);
    int v372 = (int *)sub_1000CD454(0x78uLL, v52, v53, v54, v55, v56, v57, v58);
    int v377 = v35;
    if (v24 > 0)
    {
      uint64_t v378 = 0;
      uint64_t v66 = 0;
      uint64_t v67 = 0;
      int v374 = (int **)a1[7];
      int v353 = v374[27];
      int v363 = v24;
      uint64_t v361 = v24;
      do
      {
        while (1)
        {
          uint64_t v68 = *v374;
          uint64_t v69 = v66;
          if (**v374 >= 1)
          {
            do
            {
              sub_1000C2F04(0x28uLL, v59, v60, v61, v62, v63, v64, v65);
              if (v69) {
                *(void *)(v103 + 32) = v69;
              }
              *(void *)uint64_t v103 = v68;
              *(_DWORD *)(v103 + 12) = 0;
              *(_DWORD *)(v103 + 16) = v378;
              *(_DWORD *)(v103 + 20) = v378;
              *(_DWORD *)(v103 + 8) = v68[14];
              int v102 = v68[16];
              v68 += 16;
              uint64_t v69 = v103;
            }
            while (v102 > 0);
          }
          uint64_t v66 = 0;
          int v70 = &v23[7 * v378];
          uint64_t v385 = v378 + 1;
          uint64_t v71 = v69;
          do
          {
            uint64_t v72 = *(int *)(v71 + 12);
            if ((int)v72 < **(_DWORD **)v71 - 1)
            {
              uint64_t v73 = *(void *)(*(void *)v71 + 8);
              uint64_t v74 = *(int *)(v73 + 8 * v72);
              int v75 = *(_DWORD *)(v73 + 8 * ((int)v72 + 1));
              if (v75 > (int)v74)
              {
                uint64_t v76 = 12 * v74;
                int v77 = v75 - v74;
                uint64_t v78 = v67;
                do
                {
                  while (1)
                  {
                    uint64_t v79 = *(void *)(*(void *)v71 + 24);
                    uint64_t v59 = *(unsigned int *)(v79 + v76);
                    if (v59)
                    {
                      if (v378 == *(_DWORD *)(v71 + 20)
                        && sub_1000B0894((uint64_t)v374, v59, (uint64_t)v377, v70))
                      {
                        break;
                      }
                    }
                    uint64_t v67 = v78;
                    v76 += 12;
                    if (!--v77) {
                      goto LABEL_19;
                    }
                  }
                  sub_1000C2F04(0x28uLL, v59, v60, v61, v62, v63, v64, v65);
                  uint64_t v67 = v80;
                  if (v66)
                  {
                    *(void *)(v78 + 32) = v80;
                    uint64_t v80 = v66;
                  }
                  *(void *)uint64_t v67 = *(void *)v71;
                  *(_DWORD *)(v67 + 12) = *(_DWORD *)(v79 + v76 + 8);
                  *(_DWORD *)(v67 + 16) = *(_DWORD *)(v71 + 16);
                  *(_DWORD *)(v67 + 20) = v385;
                  *(_DWORD *)(v67 + 8) = *(_DWORD *)(v71 + 8);
                  uint64_t v66 = v80;
                  v76 += 12;
                  uint64_t v78 = v67;
                  --v77;
                }
                while (v77);
              }
            }
LABEL_19:
            uint64_t v71 = *(void *)(v71 + 32);
          }
          while (v71);
          do
          {
            uint64_t v82 = *(int *)(v69 + 12);
            if ((int)v82 < **(_DWORD **)v69 - 1)
            {
              uint64_t v83 = *(void *)(*(void *)v69 + 8);
              uint64_t v84 = *(int *)(v83 + 8 * v82);
              int v85 = *(_DWORD *)(v83 + 8 * ((int)v82 + 1));
              if ((int)v84 < v85)
              {
                uint64_t v86 = v66;
                do
                {
                  uint64_t v87 = *(void *)(*(void *)v69 + 24);
                  uint64_t v88 = v87 + 12 * v84;
                  int v90 = *(_DWORD *)(v88 + 4);
                  int v89 = (_DWORD *)(v88 + 4);
                  if (v90) {
                    BOOL v91 = v86 == 0;
                  }
                  else {
                    BOOL v91 = 1;
                  }
                  if (v91)
                  {
                    uint64_t v66 = v86;
                  }
                  else
                  {
                    int v92 = 0;
                    int v93 = 0;
                    uint64_t v94 = (_DWORD *)(v87 + 12 * v84 + 8);
                    uint64_t v66 = v86;
                    do
                    {
                      if (*v89 == *(_DWORD *)(v86 + 8) && *(_DWORD *)(v69 + 20) == *(_DWORD *)(v86 + 16))
                      {
                        uint64_t v95 = *(void *)v86;
                        if (v93)
                        {
                          int v93 = 1;
                        }
                        else if (*(_DWORD *)(*(void *)(v95 + 8) + 8 * *(int *)(v86 + 12) + 4))
                        {
                          sub_1000C2F04(0x28uLL, v59, v60, v61, v62, v63, v64, v65);
                          *(void *)uint64_t v96 = *(void *)v69;
                          *(_DWORD *)(v96 + 12) = *v94;
                          *(_DWORD *)(v96 + 16) = *(_DWORD *)(v69 + 16);
                          *(_DWORD *)(v96 + 20) = v385;
                          *(_DWORD *)(v96 + 8) = *(_DWORD *)(v69 + 8);
                          *(void *)(v96 + 32) = v66;
                          uint64_t v95 = *(void *)v86;
                          int v93 = 1;
                          uint64_t v66 = v96;
                        }
                        else
                        {
                          int v93 = 0;
                        }
                        uint64_t v97 = *(void *)(v95 + 8);
                        uint64_t v98 = *(int *)(v86 + 12);
                        int v99 = *(_DWORD *)(v97 + 8 * v98);
                        if (v99 < *(_DWORD *)(v95 + 4) && !v92 && *(_DWORD *)(v97 + 8 * v98 + 8) > v99)
                        {
                          sub_1000C2F04(0x28uLL, v59, v60, v61, v62, v63, v64, v65);
                          *(void *)uint64_t v100 = *(void *)v69;
                          *(_DWORD *)(v100 + 12) = *(_DWORD *)(v69 + 12);
                          *(_DWORD *)(v100 + 16) = *(_DWORD *)(v69 + 16);
                          *(_DWORD *)(v100 + 20) = *(_DWORD *)(v69 + 20);
                          *(_DWORD *)(v100 + 8) = *(_DWORD *)(v69 + 8);
                          *(void *)(v100 + 32) = v66;
                          int v92 = 1;
                          uint64_t v66 = v100;
                        }
                        if (v92 ? v93 : 0) {
                          break;
                        }
                      }
                      uint64_t v86 = *(void *)(v86 + 32);
                    }
                    while (v86);
                  }
                  ++v84;
                  uint64_t v86 = v66;
                }
                while (v85 != v84);
              }
            }
            uint64_t v81 = *(void *)(v69 + 32);
            sub_1000C321C(v69);
            uint64_t v69 = v81;
          }
          while (v81);
          if (v66) {
            break;
          }
          ++v378;
          uint64_t v23 = v367;
          if (v385 == v361) {
            goto LABEL_73;
          }
        }
        uint64_t v104 = v66;
        uint64_t v23 = v367;
        do
        {
          if (*(_DWORD *)(*(void *)(*(void *)v104 + 8) + 8 * *(int *)(v104 + 12) + 4))
          {
            int v105 = *(_DWORD *)(v104 + 16);
            int v106 = &v367[7 * v105];
            int v108 = v106[3];
            int v107 = v106 + 3;
            int v109 = *(_DWORD *)(v104 + 8);
            if (v108 != v109 || v367[7 * v105 + 4] != v378 + 1 - v105)
            {
              *int v107 = v109;
              v367[7 * *(int *)(v104 + 16) + 4] = v385 - *(_DWORD *)(v104 + 16);
            }
          }
          uint64_t v104 = *(void *)(v104 + 32);
        }
        while (v104);
        ++v378;
      }
      while (v385 != v361);
      do
      {
        uint64_t v110 = *(void *)(v66 + 32);
        sub_1000C321C(v66);
        uint64_t v66 = v110;
      }
      while (v110);
LABEL_73:
      int v386 = 0;
      uint64_t v111 = 0;
      HIDWORD(v387) = 0;
      int v355 = v23 + 14;
LABEL_80:
      LODWORD(v387) = 0;
      uint64_t v116 = &v23[7 * (int)v111];
      if (*v116 == 4) {
        goto LABEL_79;
      }
      uint64_t v117 = (int)v111;
      uint64_t v118 = v116 + 1;
      int v119 = (char *)&v377[v116[1]];
      if (*v116 == 3)
      {
        int v120 = *(unsigned __int16 *)v119;
        if (v120 == 45)
        {
          if ((int)v111 > 0)
          {
            uint64_t v121 = v367;
            uint64_t v122 = v368;
            unsigned int v123 = &v367[7 * (int)v111];
            int v126 = v123[2];
            int v124 = v123 + 2;
            int v125 = v126;
            uint64_t v127 = (uint64_t)a7;
            if (v367[7 * (v111 - 1)] != 2)
            {
              uint64_t v128 = v365;
              goto LABEL_143;
            }
            uint64_t v128 = v365;
            if (v367[7 * (v111 + 1)] != 2) {
              goto LABEL_143;
            }
            uint64_t v59 = *((void *)v353 + 28);
            if (!v59) {
              goto LABEL_79;
            }
            if ((int)sub_1000B55FC(a1, (_WORD *)v59, 0, 1, 0, 30, (uint64_t)v372) < 1) {
              int v129 = -1;
            }
            else {
              int v129 = *v372;
            }
            sub_1000BA9EC(v368, (uint64_t)a5, v365, (uint64_t)a7, 0, (uint64_t)a9, (int *)&v387 + 1, a3, v129, *v118, 0, 0, 0);
            goto LABEL_435;
          }
          unint64_t v130 = (unsigned char *)sub_1000B5110(a1);
          if (!sub_1000CAED0(v130, "frfr") && v367[7 * (int)v111 + 3] != 5)
          {
            uint64_t v121 = v367;
            uint64_t v122 = v368;
            int v342 = &v367[7 * (int)v111];
            int v343 = v342[2];
            int v124 = v342 + 2;
            int v125 = v343;
            uint64_t v127 = (uint64_t)a7;
            uint64_t v128 = v365;
LABEL_143:
            int v157 = (unsigned char *)sub_1000B5110(a1);
            if (sub_1000CAED0(v157, "frfr"))
            {
              v388[0] = (unsigned __int16)v377[*v118];
              if ((int)sub_1000B55FC(a1, v388, 0, 1, 0, 30, (uint64_t)v372) < 1)
              {
                char v159 = 0;
                int v158 = -1;
              }
              else
              {
                int v158 = *v372;
                char v159 = 1;
              }
              sub_1000BA9EC(v122, (uint64_t)a5, v128, v127, 0, (uint64_t)a9, (int *)&v387 + 1, a3, v158, *v118, 1, 0, v159);
              ++v386;
              if (v125 <= *v124) {
                goto LABEL_79;
              }
              goto LABEL_436;
            }
            unsigned int v309 = (char *)&v377[*v118];
            int v310 = sub_1000B574C(a1, v309, 0, 0, v125, 30, (uint64_t)v372);
            if (v310 < 1)
            {
LABEL_393:
              int v313 = -1;
              int v319 = v125;
            }
            else
            {
              int v311 = v310;
              if (v121[7 * (int)v111 - 7] != 1 || (int v312 = L"join", v121[7 * (int)v111 + 7] != 1)) {
                int v312 = (__int16 *)"t";
              }
              sub_1000CED88(v388, v312, 10);
              int v313 = -1;
              while (2)
              {
                while (1)
                {
                  int v314 = v311;
                  if (v313 != -1) {
                    break;
                  }
                  uint64_t v321 = (unsigned int *)&v372[v311 - 1];
                  uint64_t v322 = -1;
                  while (1)
                  {
                    unsigned int v323 = *v321--;
                    sub_1000B5360((uint64_t)a1, v323, (uint64_t)v371, v370);
                    int v324 = sub_1000CED6C((unint64_t)v371);
                    if (v324 >= v125)
                    {
                      int v319 = v324;
                      if (!sub_1000CDD58(*(unsigned __int16 *)&v309[2 * v324 - 2])
                        || !sub_1000CDD58(*(unsigned __int16 *)&v309[2 * v319]))
                      {
                        break;
                      }
                    }
                    if (v314 + (int)--v322 + 2 <= 1) {
                      goto LABEL_393;
                    }
                  }
                  sub_1000CFC34(v309, v371, v319);
                  sub_1000CF6D4(v370, (unsigned __int16 *)v388);
                  int v311 = v314 + v322;
                  int v313 = v372[(v314 - 1) + 1 + v322];
                  int v125 = v319;
                  if (v311 <= 0) {
                    goto LABEL_429;
                  }
                }
                uint64_t v360 = v111;
                int v315 = (unsigned int *)&v372[v311 - 1];
                uint64_t v316 = -1;
                while (1)
                {
                  unsigned int v317 = *v315--;
                  sub_1000B5360((uint64_t)a1, v317, (uint64_t)v371, v370);
                  int v318 = sub_1000CED6C((unint64_t)v371);
                  if (v318 >= v125)
                  {
                    int v319 = v318;
                    if (!sub_1000CDD58(*(unsigned __int16 *)&v309[2 * v318 - 2])
                      || !sub_1000CDD58(*(unsigned __int16 *)&v309[2 * v319]))
                    {
                      sub_1000CFC34(v309, v371, v319);
                      if (!sub_1000CF6D4(v370, (unsigned __int16 *)v388) || v319 > v125) {
                        break;
                      }
                    }
                  }
                  if (v314 + (int)--v316 + 2 <= 1)
                  {
                    int v319 = v125;
                    LODWORD(v111) = v360;
                    goto LABEL_429;
                  }
                }
                int v311 = v314 + v316;
                uint64_t v320 = (v314 - 1) + v316 + 1;
                uint64_t v111 = v360;
                int v313 = v372[v320];
                int v125 = v319;
                if (v311 > 0) {
                  continue;
                }
                break;
              }
            }
LABEL_429:
            sub_1000BA9EC(v368, (uint64_t)a5, v365, (uint64_t)a7, 0, (uint64_t)a9, (int *)&v387 + 1, a3, v313, *v118, 0, 0, 0);
            int v125 = v319;
            uint64_t v121 = v367;
LABEL_435:
            ++v386;
            if (v125 <= *v124) {
              goto LABEL_79;
            }
LABEL_436:
            uint64_t v344 = v117 + 1;
            if (v121[7 * v117 + 7])
            {
              int v345 = (int *)v355 + 7 * (int)v117;
              uint64_t v346 = 1;
              do
              {
                if (v121[7 * v344 + 1] >= *v118 + v125) {
                  break;
                }
                uint64_t v344 = ++v346 + v117;
                int v347 = *v345;
                v345 += 7;
              }
              while (v347);
            }
            else
            {
              LODWORD(v346) = 1;
            }
            LODWORD(v111) = v111 + v346 - 1;
            goto LABEL_79;
          }
          if (*v116 != 3) {
            goto LABEL_96;
          }
          int v120 = *(unsigned __int16 *)v119;
        }
        if (v120 == 46)
        {
          uint64_t v131 = (int)v111 + 1;
          if (v111 + 1 == v363 || v367[7 * v131] != 2)
          {
            int v143 = a1;
            int v144 = sub_1000B574C(a1, v119, 0, 0, 1, 30, (uint64_t)v372);
            if (v144 < 1) {
              goto LABEL_146;
            }
            int v358 = v111;
            BOOL v380 = 0;
            uint64_t v145 = v144 + 1;
            uint64_t v146 = 1;
            int v147 = -1;
            while (2)
            {
              while (1)
              {
                uint64_t v148 = v146;
                uint64_t v149 = (v145 - 2);
                sub_1000B5360((uint64_t)a1, v372[v149], (uint64_t)v371, v370);
                unint64_t v150 = sub_1000CED6C((unint64_t)v371);
                if ((int)v150 < (int)v146) {
                  break;
                }
                uint64_t v146 = v150;
                uint64_t v151 = (v150 - 1);
                if (sub_1000CDF3C(*(unsigned __int16 *)&v119[2 * v151])
                  || sub_1000CDD58(*(unsigned __int16 *)&v119[2 * v151])
                  && sub_1000CDD58(*(unsigned __int16 *)&v119[2 * v146]))
                {
                  break;
                }
                if (sub_1000CDF18(*(unsigned __int16 *)&v119[2 * v151])
                  && sub_1000CDF18(*(unsigned __int16 *)&v119[2 * v146]))
                {
                  break;
                }
                int v152 = sub_1000CFC34(v119, v371, v146);
                if (v147 == -1 || (int)v146 > (int)v148) {
                  goto LABEL_133;
                }
                if (v146 != v148) {
                  break;
                }
                if (v380 && v152)
                {
                  BOOL v380 = 1;
                  uint64_t v146 = v148;
                  if ((unint64_t)--v145 <= 1) {
                    goto LABEL_134;
                  }
                }
                else
                {
LABEL_133:
                  int v147 = v372[v149];
                  BOOL v380 = v152 == 0;
                  if ((unint64_t)--v145 <= 1)
                  {
LABEL_134:
                    int v143 = a1;
                    LODWORD(v111) = v358;
                    if (v147 != -1 && (int)v146 >= 2)
                    {
                      sub_1000BA9EC(v368, (uint64_t)a5, v365, (uint64_t)a7, 0, (uint64_t)a9, (int *)&v387 + 1, a3, v147, *v118, v146, 0, v380);
                      ++v386;
                      if ((int)v146 <= v367[7 * (int)v117 + 2]) {
                        goto LABEL_79;
                      }
                      if (v367[7 * (int)v131])
                      {
                        uint64_t v153 = (int)v131;
                        int v154 = (int *)v355 + 7 * (int)v117;
                        uint64_t v155 = 1;
                        do
                        {
                          if (v367[7 * v153 + 1] >= *v118 + (int)v146) {
                            break;
                          }
                          uint64_t v153 = ++v155 + v117;
                          int v156 = *v154;
                          v154 += 7;
                        }
                        while (v156);
                        goto LABEL_376;
                      }
LABEL_392:
                      LODWORD(v155) = 1;
LABEL_376:
                      LODWORD(v387) = v155 - 1;
                      goto LABEL_79;
                    }
LABEL_146:
                    unint64_t v160 = (__int16 **)(v353 + 116);
                    uint64_t v161 = (__int16 **)(v353 + 120);
                    if (*((_WORD *)v119 + 1))
                    {
                      uint64_t v162 = sub_1000CF020(asc_1000F6510, *((unsigned __int16 *)v119 + 1));
                      unint64_t v160 = (__int16 **)(v353 + 108);
                      if (v162)
                      {
                        unint64_t v160 = (__int16 **)(v353 + 116);
                        uint64_t v161 = (__int16 **)(v353 + 120);
                      }
                      else
                      {
                        uint64_t v161 = (__int16 **)(v353 + 112);
                      }
                    }
                    sub_1000CED88(v388, *v160, 16);
                    sub_1000CED88(v390, *v161, 16);
                    uint64_t v163 = sub_1000B55FC(v143, v388, 1, 1, 0, 30, (uint64_t)v372);
                    while ((int)v163 >= 1)
                    {
                      uint64_t v164 = v163 - 1;
                      sub_1000B5360((uint64_t)a1, v372[v163 - 1], (uint64_t)v371, v370);
                      int v165 = sub_1000CF6D4(v370, (unsigned __int16 *)v390);
                      uint64_t v163 = v164;
                      if (!v165)
                      {
                        int v166 = v372[v164];
LABEL_388:
                        sub_1000BA9EC(v368, (uint64_t)a5, v365, (uint64_t)a7, 0, (uint64_t)a9, (int *)&v387 + 1, a3, v166, *v118, 0, 0, 1);
                        int v115 = v386 + 1;
                        goto LABEL_78;
                      }
                    }
                    int v166 = -1;
                    goto LABEL_388;
                  }
                }
              }
              uint64_t v146 = v148;
              if ((unint64_t)--v145 <= 1) {
                goto LABEL_134;
              }
              continue;
            }
          }
        }
      }
LABEL_96:
      switch(v367[7 * (int)v111 + 3])
      {
        case 0:
        case 8:
          int v357 = v111;
          uint64_t v132 = &v367[7 * (int)v111];
          int v133 = v132[2];
          int v375 = v132 + 2;
          int v134 = sub_1000B574C(a1, v119, 0, 0, v133, 30, (uint64_t)v372);
          if (v134 < 1)
          {
            LOBYTE(v379) = 0;
            int v136 = -1;
LABEL_380:
            sub_1000BA9EC(v368, (uint64_t)a5, v365, (uint64_t)a7, 0, (uint64_t)a9, (int *)&v387 + 1, a3, v136, *v118, v133, 0, v379);
            ++v386;
            if (v133 <= *v375)
            {
              LODWORD(v111) = v357;
              goto LABEL_79;
            }
            uint64_t v325 = v117 + 1;
            LODWORD(v111) = v357;
            if (!v367[7 * v117 + 7]) {
              goto LABEL_392;
            }
            int v326 = (int *)v355 + 7 * (int)v117;
            uint64_t v155 = 1;
            do
            {
              if (v367[7 * v325 + 1] >= *v118 + v133) {
                break;
              }
              uint64_t v325 = ++v155 + v117;
              int v327 = *v326;
              v326 += 7;
            }
            while (v327);
            goto LABEL_376;
          }
          BOOL v379 = 0;
          unint64_t v135 = v134 + 1;
          int v136 = -1;
          int v137 = v133;
          while (2)
          {
            while (1)
            {
              uint64_t v138 = (v135 - 2);
              sub_1000B5360((uint64_t)a1, v372[v138], (uint64_t)v371, v370);
              int v139 = sub_1000CED6C((unint64_t)v371);
              if (v139 < v137) {
                break;
              }
              int v133 = v139;
              uint64_t v140 = v139;
              uint64_t v141 = v139 - 1;
              if (sub_1000CDF3C(*(unsigned __int16 *)&v119[2 * v141])
                || sub_1000CDD58(*(unsigned __int16 *)&v119[2 * v141])
                && sub_1000CDD58(*(unsigned __int16 *)&v119[2 * v140]))
              {
                break;
              }
              if (sub_1000CDF18(*(unsigned __int16 *)&v119[2 * v141])
                && sub_1000CDF18(*(unsigned __int16 *)&v119[2 * v140]))
              {
                break;
              }
              int v142 = sub_1000CFC34(v119, v371, v133);
              if (v136 == -1 || v133 > v137) {
                goto LABEL_114;
              }
              if (v133 != v137) {
                break;
              }
              if (v379 && v142)
              {
                BOOL v379 = 1;
                int v133 = v137;
                if (--v135 <= 1) {
                  goto LABEL_380;
                }
              }
              else
              {
LABEL_114:
                int v136 = v372[v138];
                BOOL v379 = v142 == 0;
                --v135;
                int v137 = v133;
                if (v135 <= 1) {
                  goto LABEL_380;
                }
              }
            }
            int v133 = v137;
            if (--v135 <= 1) {
              goto LABEL_380;
            }
            continue;
          }
        case 2:
          if (*(_DWORD *)(*(void *)(a1[7] + 216) + 536))
          {
            int v167 = &v367[7 * (int)v111];
            int v170 = v167[4];
            uint64_t v169 = v167 + 4;
            LODWORD(v168) = v170;
            if (v170 < 1)
            {
LABEL_427:
              int v172 = 0;
              goto LABEL_432;
            }
            uint64_t v171 = 0;
            int v172 = 0;
            uint64_t v173 = v372;
            int v381 = v169;
            int v359 = v111;
            while (2)
            {
              if (v116[7 * v171] == 2)
              {
                uint64_t v175 = &v116[7 * v171];
                int v178 = v175[2];
                uint64_t v177 = v175 + 2;
                int v176 = v178;
                if ((v178 - 1) < 3)
                {
                  int v179 = &v116[7 * v171];
                  sub_1000CED88(v388, &v377[v179[1]], v176 + 1);
                  int v180 = sub_1000B157C(a1, v368, (uint64_t)a5, v365, (uint64_t)a7, (uint64_t)a9, (int *)&v387 + 1, a3, (unint64_t)v388, v179[1]);
                  goto LABEL_170;
                }
                if (v176 == 4)
                {
                  if ((int)sub_1000B55FC(a1, L"0", 1, 1, 0, 30, (uint64_t)v173) < 1)
                  {
                    int v181 = v172;
                    if ((int)sub_1000B55FC(a1, L"0", 0, 1, 0, 30, (uint64_t)v173) < 1) {
                      int v186 = -1;
                    }
                    else {
                      int v186 = *v173;
                    }
                    uint64_t v182 = v368;
                    uint64_t v183 = (uint64_t)a9;
                    uint64_t v111 = (uint64_t)a5;
                    uint64_t v185 = v365;
                    int v184 = a3;
                    sub_1000BA9EC(v368, (uint64_t)a5, v365, (uint64_t)a7, 0, (uint64_t)a9, (int *)&v387 + 1, a3, v186, v116[7 * v171 + 1], 1, 0, 0);
                  }
                  else
                  {
                    int v181 = v172;
                    int v350 = *v173;
                    uint64_t v182 = v368;
                    uint64_t v183 = (uint64_t)a9;
                    int v184 = a3;
                    uint64_t v185 = v365;
                    uint64_t v111 = (uint64_t)a5;
                    sub_1000BA9EC(v368, (uint64_t)a5, v365, (uint64_t)a7, 0, (uint64_t)a9, (int *)&v387 + 1, a3, v350, v116[7 * v171 + 1], 1, 0, 1);
                  }
                  int v180 = v181 + 1;
                  int v187 = &v116[7 * v171];
                  sub_1000CED88(v388, &v377[v187[1] + 1], *v177);
                  int v172 = sub_1000B157C(a1, v182, v111, v185, (uint64_t)a7, v183, (int *)&v387 + 1, v184, (unint64_t)v388, v187[1] + 1);
                  uint64_t v173 = v372;
                  LODWORD(v111) = v359;
                  uint64_t v169 = v381;
LABEL_170:
                  v172 += v180;
                  LODWORD(v168) = *v169;
                }
                uint64_t v174 = v171 + 1;
                if (v171 + 1 < (int)v168)
                {
                  if ((int)sub_1000B55FC(a1, L",", 1, 1, 0, 30, (uint64_t)v173) < 1)
                  {
                    if ((int)sub_1000B55FC(a1, L",", 0, 1, 0, 30, (uint64_t)v173) < 1) {
                      int v188 = -1;
                    }
                    else {
                      int v188 = *v173;
                    }
                    uint64_t v352 = (*v177 + v116[7 * v171 + 1]);
                    sub_1000BA9EC(v368, (uint64_t)a5, v365, (uint64_t)a7, 0, (uint64_t)a9, (int *)&v387 + 1, a3, v188, v352, SHIDWORD(v352), 0, 0);
                  }
                  else
                  {
                    uint64_t v351 = (*v177 + v116[7 * v171 + 1]);
                    sub_1000BA9EC(v368, (uint64_t)a5, v365, (uint64_t)a7, 0, (uint64_t)a9, (int *)&v387 + 1, a3, *v173, v351, SHIDWORD(v351), 0, 1);
                  }
                  uint64_t v169 = v381;
                  ++v172;
                  LODWORD(v168) = *v381;
                }
              }
              else
              {
                uint64_t v174 = v171 + 1;
              }
              uint64_t v171 = v174;
              if (v174 >= (int)v168) {
                goto LABEL_432;
              }
              continue;
            }
          }
          int v328 = &v367[7 * (int)v111];
          int v330 = v328[4];
          uint64_t v329 = v328 + 4;
          LODWORD(v168) = v330;
          if (v330 < 1) {
            goto LABEL_427;
          }
          uint64_t v331 = 0;
          int v384 = 0;
          BOOL v332 = 1;
          while (1)
          {
            if (v116[7 * v331] != 2)
            {
              ++v331;
              goto LABEL_397;
            }
            uint64_t v333 = &v116[7 * v331];
            int v336 = v333[2];
            int v335 = v333 + 2;
            int v334 = v336;
            int v338 = v335 - 1;
            uint64_t v337 = (int)*(v335 - 1);
            if (!v332) {
              break;
            }
            uint64_t v339 = (uint64_t)a7;
            if (v334 != 3) {
              goto LABEL_408;
            }
            if (v377[(int)v337 + 1] != 48 || v377[(int)v337 + 2] != 48)
            {
              int v334 = 3;
              goto LABEL_408;
            }
            v384 += sub_1000BAA4C(a1, (uint64_t)&v377[v337], v337, 1, a3, v368, (uint64_t)a5, v365, (uint64_t)a7, 0, (uint64_t)a9, (int *)&v387 + 1, 0);
            uint64_t v59 = *(void *)(*(void *)(a1[7] + 216) + 48);
            if (v59)
            {
              if ((int)sub_1000B55FC(a1, (_WORD *)v59, 1, 1, 0, 30, (uint64_t)v372) < 1)
              {
                if ((int)sub_1000B55FC(a1, *(_WORD **)(*(void *)(a1[7] + 216) + 48), 0, 1, 0, 30, (uint64_t)v372) < 1)int v341 = -1; {
                else
                }
                  int v341 = *v372;
                sub_1000BA9EC(v368, (uint64_t)a5, v365, (uint64_t)a7, 0, (uint64_t)a9, (int *)&v387 + 1, a3, v341, *v338 + 1, 0, 0, 0);
              }
              else
              {
                sub_1000BA9EC(v368, (uint64_t)a5, v365, (uint64_t)a7, 0, (uint64_t)a9, (int *)&v387 + 1, a3, *v372, *v338 + 1, 0, 0, 1);
              }
              ++v384;
              if (++v331 >= *v329) {
                goto LABEL_397;
              }
            }
            else if (++v331 >= *v329)
            {
              goto LABEL_397;
            }
LABEL_409:
            if ((int)sub_1000B55FC(a1, L",", 1, 1, 0, 30, (uint64_t)v372) < 1)
            {
              if ((int)sub_1000B55FC(a1, L",", 0, 1, 0, 30, (uint64_t)v372) < 1) {
                int v340 = -1;
              }
              else {
                int v340 = *v372;
              }
              sub_1000BA9EC(v368, (uint64_t)a5, v365, v339, 0, (uint64_t)a9, (int *)&v387 + 1, a3, v340, *v335 + *v338, 0, 0, 0);
              ++v384;
              if (!v332)
              {
LABEL_416:
                BOOL v332 = 0;
                goto LABEL_397;
              }
            }
            else
            {
              sub_1000BA9EC(v368, (uint64_t)a5, v365, v339, 0, (uint64_t)a9, (int *)&v387 + 1, a3, *v372, *v335 + *v338, 0, 0, 1);
              ++v384;
              if (!v332) {
                goto LABEL_416;
              }
            }
            BOOL v332 = *v335 != 3;
LABEL_397:
            uint64_t v168 = *v329;
            if (v331 >= v168)
            {
              int v172 = v384;
LABEL_432:
              LODWORD(v387) = v168 - 1;
              int v115 = v172 + v386;
LABEL_78:
              int v386 = v115;
LABEL_79:
              uint64_t v111 = (v111 + v387 + 1);
              uint64_t v23 = v367;
              if ((int)v111 >= v363) {
                goto LABEL_444;
              }
              goto LABEL_80;
            }
          }
          uint64_t v339 = (uint64_t)a7;
LABEL_408:
          v384 += sub_1000BAA4C(a1, (uint64_t)&v377[v337], v337, v334, a3, v368, (uint64_t)a5, v365, v339, 0, (uint64_t)a9, (int *)&v387 + 1, 0);
          if (++v331 >= *v329) {
            goto LABEL_397;
          }
          goto LABEL_409;
        case 3:
          int v114 = sub_1000A8DCC(a1, (uint64_t)v377, a3, v368, (uint64_t)a5, v365, (uint64_t)a7, (uint64_t)a9, v372, (int *)&v387 + 1, &v387, &v23[7 * (int)v111]);
          goto LABEL_77;
        case 4:
          int v114 = sub_1000A9BBC(a1, (uint64_t)v377, a3, v368, (uint64_t)a5, v365, (uint64_t)a7, (uint64_t)a9, v372, (int *)&v387 + 1, v371, v370, (unsigned int *)&v387, &v23[7 * (int)v111]);
          goto LABEL_77;
        case 5:
          v388[0] = 0;
          int v189 = sub_1000AA174(a1, v368, (uint64_t)a5, v365, (uint64_t)a7, (uint64_t)a9, (int *)&v387 + 1, a3, (uint64_t)v377, &v23[7 * (int)v111], v388);
          uint64_t v190 = (int)v111 + 1;
          if (!v367[7 * v190]) {
            goto LABEL_374;
          }
          unsigned int v191 = (int *)v355 + 7 * (int)v111;
          uint64_t v155 = 1;
          int v192 = v386;
          do
          {
            if (v367[7 * v190 + 1] >= v388[0]) {
              break;
            }
            uint64_t v190 = ++v155 + (int)v111;
            int v193 = *v191;
            v191 += 7;
          }
          while (v193);
          goto LABEL_375;
        case 6:
          v388[0] = 0;
          int v189 = sub_1000AA174(a1, v368, (uint64_t)a5, v365, (uint64_t)a7, (uint64_t)a9, (int *)&v387 + 1, a3, (uint64_t)v377, &v23[7 * (int)v111], v388);
          uint64_t v194 = (int)v111 + 1;
          if (v367[7 * v194])
          {
            uint64_t v195 = (int *)v355 + 7 * (int)v111;
            uint64_t v155 = 1;
            int v192 = v386;
            do
            {
              if (v367[7 * v194 + 1] >= v388[0]) {
                break;
              }
              uint64_t v194 = ++v155 + (int)v111;
              int v196 = *v195;
              v195 += 7;
            }
            while (v196);
          }
          else
          {
LABEL_374:
            LODWORD(v155) = 1;
            int v192 = v386;
          }
LABEL_375:
          int v386 = v189 + v192;
          goto LABEL_376;
        case 7:
          __int16 v197 = &v367[7 * (int)v111];
          int v200 = v197[4];
          unsigned int v199 = v197 + 4;
          LODWORD(v198) = v200;
          if (v200 < 1) {
            goto LABEL_377;
          }
          uint64_t v201 = 0;
          int v202 = 0;
          int v382 = 0;
          uint64_t v362 = *(void *)(a1[7] + 216);
          int v203 = 1;
          uint64_t v376 = v199;
          break;
        case 9:
          int v114 = sub_1000ABC2C(a1, (uint64_t)v377, a3, v368, (uint64_t)a5, v365, (uint64_t)a7, (uint64_t)a9, v372, (int *)&v387 + 1, v371, v370, (int *)&v387, (uint64_t)&v23[7 * (int)v111]);
LABEL_77:
          int v115 = v114 + v386;
          goto LABEL_78;
        case 10:
          int v247 = &v367[7 * (int)v111];
          int v250 = v247[4];
          uint64_t v249 = v247 + 4;
          LODWORD(v248) = v250;
          if (v250 < 1)
          {
            int v252 = 0;
          }
          else
          {
            uint64_t v251 = 0;
            int v252 = 0;
            do
            {
              int v254 = *(v118 - 1);
              if ((v254 - 3) >= 2)
              {
                if (v254 == 2)
                {
                  uint64_t v255 = (unsigned char *)sub_1000B5110(a1);
                  int v256 = sub_1000CAED0(v255, "frfr");
                  int v257 = v118[1];
                  if (v256 || v257 > 3)
                  {
                    int v253 = sub_1000BAA4C(a1, (uint64_t)&v377[*v118], *v118, v257, a3, v368, (uint64_t)a5, v365, (uint64_t)a7, 0, (uint64_t)a9, (int *)&v387 + 1, 0);
                  }
                  else
                  {
                    sub_1000CED88(v388, &v377[*v118], v257 + 1);
                    int v253 = sub_1000B157C(a1, v368, (uint64_t)a5, v365, (uint64_t)a7, (uint64_t)a9, (int *)&v387 + 1, a3, (unint64_t)v388, *v118);
                  }
                  v252 += v253;
                }
              }
              else
              {
                v388[0] = 0;
                if ((int)sub_1000B55FC(a1, L",", 1, 1, 0, 1, (uint64_t)v388) >= 1)
                {
                  sub_1000BA9EC(v368, (uint64_t)a5, v365, (uint64_t)a7, 0, (uint64_t)a9, (int *)&v387 + 1, a3, v388[0], *v118, 0, 0, 1);
                  ++v252;
                }
              }
              ++v251;
              uint64_t v248 = *v249;
              v118 += 7;
            }
            while (v251 < v248);
          }
          LODWORD(v387) = v248 - 1;
          int v115 = v252 + v386;
          goto LABEL_78;
        case 11:
          uint64_t v258 = &v367[7 * (int)v111];
          int v260 = v258[4];
          int v259 = v258 + 4;
          LODWORD(v198) = v260;
          if (v260 < 1)
          {
LABEL_377:
            int v202 = 0;
LABEL_378:
            LODWORD(v387) = v198 - 1;
            int v115 = v202 + v386;
            goto LABEL_78;
          }
          uint64_t v261 = 0;
          int v202 = 0;
          uint64_t v262 = (uint64_t)a7;
          int v383 = v259;
          while (1)
          {
            int v265 = v116[7 * v261];
            switch(v265)
            {
              case 1:
                uint64_t v266 = &v116[7 * v261];
                int v267 = v266 + 2;
                unsigned int v268 = (_WORD *)sub_1000CD3E8(2 * v266[2] + 2, v59, v60, v61, v62, v63, v64, v65);
                uint64_t v270 = v266[1];
                int v269 = v266 + 1;
                sub_1000CED88(v268, &v377[v270], *v267 + 1);
                if (v268)
                {
                  if ((int)sub_1000B55FC(a1, v268, 1, 1, 0, 30, (uint64_t)v388) < 1)
                  {
                    int v263 = sub_1000B55FC(a1, v268, 0, 1, 0, 30, (uint64_t)v388);
                    int v264 = v388[0];
                    if (v263 <= 0) {
                      int v264 = -1;
                    }
                    sub_1000BA9EC(v368, (uint64_t)a5, v365, v262, 0, (uint64_t)a9, (int *)&v387 + 1, a3, v264, *v269, *v267, 0, 0);
                  }
                  else
                  {
                    sub_1000BA9EC(v368, (uint64_t)a5, v365, v262, 0, (uint64_t)a9, (int *)&v387 + 1, a3, v388[0], *v269, *v267, (int)&_mh_execute_header, (unint64_t)&_mh_execute_header >> 32);
                  }
                  int v259 = v383;
                  ++v202;
                }
                sub_1000CD4D0(v268, 2 * *v267 + 2);
                break;
              case 3:
                int v271 = &v116[7 * v261];
                uint64_t v273 = v271[1];
                unint64_t v272 = v271 + 1;
                switch(v377[v273])
                {
                  case '#':
                    uint64_t v274 = a1;
                    uint64_t v275 = a1;
                    int v276 = L"#";
                    goto LABEL_343;
                  case '$':
                    uint64_t v59 = *(void *)(*(void *)(a1[7] + 216) + 256);
                    if (!v59) {
                      goto LABEL_318;
                    }
                    if ((int)sub_1000B55FC(a1, (_WORD *)v59, 1, 1, 0, 30, (uint64_t)v388) >= 1) {
                      goto LABEL_344;
                    }
                    int v277 = *(__int16 **)(*(void *)(a1[7] + 216) + 256);
                    uint64_t v278 = a1;
                    goto LABEL_346;
                  case '&':
                    uint64_t v274 = a1;
                    uint64_t v275 = a1;
                    int v276 = (__int16 *)&unk_1000F5730;
                    goto LABEL_343;
                  case '-':
                    uint64_t v274 = a1;
                    uint64_t v275 = a1;
                    int v276 = L"-";
                    goto LABEL_343;
                  case '.':
                    int v279 = sub_1000B51A0(a1);
                    uint64_t v287 = (void *)sub_1000CD3E8(2 * (v279 + 1), v280, v281, v282, v283, v284, v285, v286);
                    int v288 = sub_1000B51E0(a1);
                    unsigned int v296 = (_WORD *)sub_1000CD3E8(2 * (v288 + 1), v289, v290, v291, v292, v293, v294, v295);
                    int v297 = *(__int16 **)(*(void *)(a1[7] + 216) + 432);
                    int v298 = sub_1000CED6C((unint64_t)v297);
                    sub_1000CED88(v389, v297, v298 + 1);
                    int v299 = *(__int16 **)(*(void *)(a1[7] + 216) + 448);
                    int v300 = sub_1000CED6C((unint64_t)v299);
                    sub_1000CED88(v390, v299, v300 + 1);
                    uint64_t v301 = sub_1000B55FC(a1, v389, 1, 1, 0, 30, (uint64_t)v388);
                    break;
                  case '/':
                    uint64_t v274 = a1;
                    uint64_t v275 = a1;
                    int v276 = L"/";
                    goto LABEL_343;
                  case ':':
                    uint64_t v274 = a1;
                    uint64_t v275 = a1;
                    int v276 = L":";
                    goto LABEL_343;
                  case ';':
                    uint64_t v274 = a1;
                    uint64_t v275 = a1;
                    int v276 = L";";
                    goto LABEL_343;
                  case '=':
                    uint64_t v274 = a1;
                    uint64_t v275 = a1;
                    int v276 = L"=";
                    goto LABEL_343;
                  case '?':
                    uint64_t v274 = a1;
                    uint64_t v275 = a1;
                    int v276 = L"?";
                    goto LABEL_343;
                  case '@':
                    uint64_t v274 = a1;
                    uint64_t v275 = a1;
                    int v276 = (__int16 *)&unk_1000F572C;
LABEL_343:
                    if ((int)sub_1000B55FC(v275, v276, 1, 1, 0, 30, (uint64_t)v388) < 1)
                    {
                      uint64_t v278 = v274;
                      int v277 = v276;
LABEL_346:
                      int v305 = sub_1000B55FC(v278, v277, 0, 1, 0, 30, (uint64_t)v388);
                      int v306 = v388[0];
                      if (v305 <= 0) {
                        int v306 = -1;
                      }
                      sub_1000BA9EC(v368, (uint64_t)a5, v365, v262, 0, (uint64_t)a9, (int *)&v387 + 1, a3, v306, *v272, 1, 0, 0);
                    }
                    else
                    {
LABEL_344:
                      sub_1000BA9EC(v368, (uint64_t)a5, v365, v262, 0, (uint64_t)a9, (int *)&v387 + 1, a3, v388[0], *v272, 1, 0, 1);
                    }
                    ++v202;
                    goto LABEL_318;
                  default:
                    goto LABEL_318;
                }
                while ((int)v301 >= 1)
                {
                  uint64_t v302 = v301 - 1;
                  sub_1000B5360((uint64_t)a1, v388[v301 - 1], (uint64_t)v287, v296);
                  int v303 = sub_1000CF6D4(v296, (unsigned __int16 *)v390);
                  uint64_t v301 = v302;
                  if (!v303)
                  {
                    int v304 = v388[v302];
                    goto LABEL_351;
                  }
                }
                int v304 = -1;
LABEL_351:
                uint64_t v262 = (uint64_t)a7;
                sub_1000BA9EC(v368, (uint64_t)a5, v365, (uint64_t)a7, 0, (uint64_t)a9, (int *)&v387 + 1, a3, v304, *v272, 0, 0, 1);
                ++v202;
                int v307 = sub_1000B51E0(a1);
                sub_1000CD4D0(v296, 2 * (v307 + 1));
                int v308 = sub_1000B51A0(a1);
                sub_1000CD4D0(v287, 2 * (v308 + 1));
                int v259 = v383;
                break;
              case 2:
                v202 += sub_1000BAA4C(a1, (uint64_t)&v377[v116[7 * v261 + 1]], v116[7 * v261 + 1], v116[7 * v261 + 2], a3, v368, (uint64_t)a5, v365, v262, 0, (uint64_t)a9, (int *)&v387 + 1, 0);
                break;
            }
LABEL_318:
            ++v261;
            uint64_t v198 = *v259;
            if (v261 >= v198) {
              goto LABEL_378;
            }
          }
        default:
          goto LABEL_79;
      }
      while (1)
      {
        int v204 = &v116[7 * v201];
        int v205 = *v204;
        if (*v204 != 4)
        {
          if (v205 == 2)
          {
            uint64_t v206 = &v116[7 * v201];
            uint64_t v209 = v206[1];
            int v208 = v206 + 1;
            uint64_t v207 = v209;
            int v210 = v208[1];
            if (v203 || v210 != 2) {
              goto LABEL_218;
            }
            if (v377[v207] != 48 || v377[(int)v207 + 1] != 48)
            {
              int v210 = 2;
LABEL_218:
              sub_1000CED88(v388, &v377[v207], v210 + 1);
              BOOL v224 = LOWORD(v388[0]) != 49 || v210 != 1 || v203 == 0;
              int v225 = v382;
              if (!v224) {
                int v225 = 1;
              }
              int v382 = v225;
              int v226 = sub_1000B157C(a1, v368, (uint64_t)a5, v365, (uint64_t)a7, (uint64_t)a9, (int *)&v387 + 1, a3, (unint64_t)v388, *v208);
              unsigned int v199 = v376;
              int v203 = 0;
              v202 += v226;
              goto LABEL_192;
            }
            int v211 = *(unsigned __int16 **)(v362 + 128);
            if (v211)
            {
              if (sub_1000CF020(v211, 32))
              {
                v390[0] = 0;
                sub_1000CED88(v388, *(__int16 **)(v362 + 128), 32);
                char v212 = sub_1000CF044((char *)v388, L" ", v390);
                if (v212)
                {
                  char v213 = v212;
                  do
                  {
                    if ((int)sub_1000B55FC(a1, v213, 1, 1, 0, 30, (uint64_t)v372) >= 1)
                    {
                      sub_1000BA9EC(v368, (uint64_t)a5, v365, (uint64_t)a7, 0, (uint64_t)a9, (int *)&v387 + 1, a3, *v372, *v208, 0, 0, 1);
                    }
                    else
                    {
                      if ((int)sub_1000B55FC(a1, v213, 0, 1, 0, 30, (uint64_t)v372) < 1) {
                        int v222 = -1;
                      }
                      else {
                        int v222 = *v372;
                      }
                      sub_1000BA9EC(v368, (uint64_t)a5, v365, (uint64_t)a7, 0, (uint64_t)a9, (int *)&v387 + 1, a3, v222, *v208, 0, 0, 0);
                    }
                    ++v202;
                    char v213 = sub_1000CF044(0, L" ", v390);
                  }
                  while (v213);
                }
LABEL_271:
                int v203 = 0;
LABEL_294:
                unsigned int v199 = v376;
                goto LABEL_192;
              }
              uint64_t v59 = *(void *)(v362 + 128);
              if (!v59) {
                goto LABEL_271;
              }
              if ((int)sub_1000B55FC(a1, (_WORD *)v59, 1, 1, 0, 30, (uint64_t)v372) < 1)
              {
                if ((int)sub_1000B55FC(a1, *(_WORD **)(v362 + 128), 0, 1, 0, 30, (uint64_t)v372) < 1) {
                  int v246 = -1;
                }
                else {
                  int v246 = *v372;
                }
                sub_1000BA9EC(v368, (uint64_t)a5, v365, (uint64_t)a7, 0, (uint64_t)a9, (int *)&v387 + 1, a3, v246, *v208, 2, 0, 0);
              }
              else
              {
                sub_1000BA9EC(v368, (uint64_t)a5, v365, (uint64_t)a7, 0, (uint64_t)a9, (int *)&v387 + 1, a3, *v372, *v208, 2, 0, 1);
              }
              int v203 = 0;
LABEL_293:
              ++v202;
              goto LABEL_294;
            }
            int v203 = 0;
          }
          else
          {
            uint64_t v214 = &v116[7 * v201];
            int v216 = v214[2];
            int v215 = v214 + 2;
            if (v216 == 1)
            {
              __int32 v217 = *(unsigned __int16 **)(v362 + 176);
              if (v217)
              {
                unsigned int v218 = &v116[7 * v201];
                uint64_t v220 = v218[1];
                int v219 = v218 + 1;
                if (sub_1000CF020(v217, (unsigned __int16)v377[v220]))
                {
                  if (v382)
                  {
                    __int32 v221 = *(_WORD **)(v362 + 144);
                    if (v221)
                    {
                      if ((int)sub_1000B55FC(a1, v221, 1, 1, 0, 30, (uint64_t)v372) < 1)
                      {
                        if ((int)sub_1000B55FC(a1, *(_WORD **)(v362 + 144), 0, 1, 0, 30, (uint64_t)v372) < 1) {
                          int v242 = -1;
                        }
                        else {
                          int v242 = *v372;
                        }
                        sub_1000BA9EC(v368, (uint64_t)a5, v365, (uint64_t)a7, 0, (uint64_t)a9, (int *)&v387 + 1, a3, v242, *v219, 0, 0, 0);
                      }
                      else
                      {
                        sub_1000BA9EC(v368, (uint64_t)a5, v365, (uint64_t)a7, 0, (uint64_t)a9, (int *)&v387 + 1, a3, *v372, *v219, 0, 0, 1);
                      }
                      ++v202;
                      int v382 = 1;
                      goto LABEL_294;
                    }
                  }
                  unsigned int v227 = *(_WORD **)(v362 + 160);
                  if (v227)
                  {
                    if ((int)sub_1000B55FC(a1, v227, 1, 1, 0, 30, (uint64_t)v372) < 1)
                    {
                      if ((int)sub_1000B55FC(a1, *(_WORD **)(v362 + 160), 0, 1, 0, 30, (uint64_t)v372) < 1) {
                        int v243 = -1;
                      }
                      else {
                        int v243 = *v372;
                      }
                      sub_1000BA9EC(v368, (uint64_t)a5, v365, (uint64_t)a7, 0, (uint64_t)a9, (int *)&v387 + 1, a3, v243, *v219, 0, 0, 0);
                    }
                    else
                    {
                      sub_1000BA9EC(v368, (uint64_t)a5, v365, (uint64_t)a7, 0, (uint64_t)a9, (int *)&v387 + 1, a3, *v372, *v219, 0, 0, 1);
                    }
                    goto LABEL_293;
                  }
                  uint64_t v59 = *(void *)(v362 + 368);
                  if (!v59 || v377[*v219 + 1] == 48 && v377[*v219 + 2] == 48) {
                    goto LABEL_294;
                  }
                  uint64_t v231 = v372;
                  int v232 = a1;
                  if ((int)sub_1000B55FC(a1, (_WORD *)v59, 1, 1, 0, 30, (uint64_t)v372) >= 1) {
                    goto LABEL_266;
                  }
                  int v233 = *(_WORD **)(v362 + 368);
                  goto LABEL_282;
                }
                int v205 = *v204;
                unsigned int v199 = v376;
              }
            }
            if (v205 == 3)
            {
              BOOL v234 = &v116[7 * v201];
              uint64_t v236 = v234[1];
              int v235 = v234 + 1;
              if (v377[v236] != 46) {
                goto LABEL_192;
              }
              if (v201 >= *v199 - 1) {
                goto LABEL_192;
              }
              if (v116[7 * v201 + 7] != 2) {
                goto LABEL_192;
              }
              uint64_t v59 = *(void *)(v362 + 64);
              if (!v59) {
                goto LABEL_192;
              }
              if ((int)sub_1000B55FC(a1, (_WORD *)v59, 1, 1, 0, 30, (uint64_t)v372) >= 1)
              {
                int v237 = *v372;
                int v238 = *v235;
                goto LABEL_267;
              }
              if ((int)sub_1000B55FC(a1, *(_WORD **)(v362 + 64), 0, 1, 0, 30, (uint64_t)v372) < 1) {
                int v244 = -1;
              }
              else {
                int v244 = *v372;
              }
              int v245 = *v235;
              goto LABEL_292;
            }
            if (v205 == 1)
            {
              uint64_t v60 = *v215;
              if (v60 != 1 || (v228 = &v116[7 * v201], v229 = v228[1], int v219 = v228 + 1, v377[v229] != 104))
              {
                uint64_t v59 = *(void *)(v362 + 192);
                if (v59)
                {
                  if (!sub_1000CFC98(&v377[v116[7 * v201 + 1]], (unsigned __int16 *)v59, v60)) {
                    goto LABEL_294;
                  }
                  uint64_t v60 = *v215;
                }
                if ((int)v60 >= 1)
                {
                  uint64_t v239 = 0;
                  int v240 = &v116[7 * v201 + 1];
                  do
                  {
                    v388[0] = (unsigned __int16)v377[v239 + *v240];
                    if ((int)sub_1000B55FC(a1, v388, 1, 1, 0, 30, (uint64_t)v372) >= 1)
                    {
                      sub_1000BA9EC(v368, (uint64_t)a5, v365, (uint64_t)a7, 0, (uint64_t)a9, (int *)&v387 + 1, a3, *v372, v239 + *v240, 1, 0, 1);
                    }
                    else
                    {
                      if ((int)sub_1000B55FC(a1, v388, 0, 1, 0, 30, (uint64_t)v372) < 1) {
                        int v241 = -1;
                      }
                      else {
                        int v241 = *v372;
                      }
                      sub_1000BA9EC(v368, (uint64_t)a5, v365, (uint64_t)a7, 0, (uint64_t)a9, (int *)&v387 + 1, a3, v241, v239 + *v240, 1, 0, 0);
                    }
                    ++v239;
                  }
                  while ((int)v239 < *v215);
                  v202 += v239;
                }
                goto LABEL_294;
              }
              if (v382)
              {
                int v230 = *(_WORD **)(v362 + 144);
                if (v230)
                {
                  uint64_t v231 = v372;
                  int v232 = a1;
                  if ((int)sub_1000B55FC(a1, v230, 1, 1, 0, 30, (uint64_t)v372) < 1)
                  {
                    int v233 = *(_WORD **)(v362 + 144);
                    goto LABEL_282;
                  }
LABEL_266:
                  int v237 = *v231;
                  int v238 = *v219;
LABEL_267:
                  sub_1000BA9EC(v368, (uint64_t)a5, v365, (uint64_t)a7, 0, (uint64_t)a9, (int *)&v387 + 1, a3, v237, v238, 1, 0, 1);
                  goto LABEL_293;
                }
              }
              uint64_t v59 = *(void *)(v362 + 160);
              if (!v59) {
                goto LABEL_294;
              }
              uint64_t v231 = v372;
              int v232 = a1;
              if ((int)sub_1000B55FC(a1, (_WORD *)v59, 1, 1, 0, 30, (uint64_t)v372) >= 1) {
                goto LABEL_266;
              }
              int v233 = *(_WORD **)(v362 + 160);
LABEL_282:
              if ((int)sub_1000B55FC(v232, v233, 0, 1, 0, 30, (uint64_t)v231) < 1) {
                int v244 = -1;
              }
              else {
                int v244 = *v231;
              }
              int v245 = *v219;
LABEL_292:
              sub_1000BA9EC(v368, (uint64_t)a5, v365, (uint64_t)a7, 0, (uint64_t)a9, (int *)&v387 + 1, a3, v244, v245, 1, 0, 0);
              goto LABEL_293;
            }
          }
        }
LABEL_192:
        ++v201;
        uint64_t v198 = *v199;
        if (v201 >= v198) {
          goto LABEL_378;
        }
      }
    }
    int v386 = 0;
    HIDWORD(v387) = 0;
LABEL_444:
    uint64_t v112 = v386;
    if (v386 > (int)v368 && a3 && SHIDWORD(v387) < (int)v368) {
      sub_1000BAC1C(v368, (uint64_t)a5, v365, (uint64_t)a7, 0, (uint64_t)a9, SHIDWORD(v387));
    }
    sub_1000CD4D0(v372, 120);
    int v348 = sub_1000B51E0(a1);
    sub_1000CD4D0(v370, 2 * (v348 + 1));
    int v349 = sub_1000B51A0(a1);
    sub_1000CD4D0(v371, 2 * (v349 + 1));
    sub_1000CD4D0(v377, v354);
    sub_1000CD4D0(v23, 28 * (v356 + 1));
  }
  else
  {
    sub_1000CD4D0(v35, 2 * v26);
    return 0;
  }
  return v112;
}

uint64_t sub_1000AF184(unint64_t a1, unsigned int a2, _DWORD *a3, uint64_t a4, int a5, void *a6)
{
  int v10 = sub_1000CED6C(a1);
  int v11 = v10 & (v10 >> 31);
  uint64_t v12 = (unsigned __int16 *)(a1 + 2 * v10 - 2);
  int v13 = v10;
  int v14 = v10;
  while (1)
  {
    BOOL v15 = __OFSUB__(v14--, 1);
    if (v14 < 0 != v15) {
      break;
    }
    int v16 = *v12--;
    if (v16 != 32)
    {
      int v11 = v14 + 1;
      break;
    }
  }
  uint64_t v17 = 0;
  int v145 = 0;
  uint64_t v18 = " - ep";
  do
  {
    int v19 = sub_1000CAD00((unint64_t)v18);
    if (v19 >= 1)
    {
      uint64_t v27 = v19;
      int v28 = v11;
      while (1)
      {
        unint64_t v29 = (v28 - 1);
        if (v28 < 1) {
          goto LABEL_9;
        }
        int v30 = v18[(v27 - 1)];
        unsigned __int16 v31 = (v30 - 97) >= 0x1A ? v18[(v27 - 1)] : v30 ^ 0x20;
        int v32 = *(unsigned __int16 *)(a1 + 2 * v29);
        if (v32 != (unsigned __int16)v30 && v32 != v31) {
          goto LABEL_9;
        }
        if (v28 >= 2)
        {
          --v28;
          if (v30 != 32) {
            goto LABEL_13;
          }
          while (*(_WORD *)(a1 - 2 + 2 * v29) == 32)
          {
            if (v29-- <= 1)
            {
              int v28 = 0;
              goto LABEL_13;
            }
          }
        }
        int v28 = v29;
LABEL_13:
        BOOL v95 = v27-- <= 1;
        if (v95)
        {
          int v19 = 0;
          if (v28 < 1) {
            goto LABEL_9;
          }
          goto LABEL_28;
        }
      }
    }
    int v28 = v11;
    if (v11 >= 1)
    {
LABEL_28:
      if (!v19)
      {
        if ((int)a2 >= 1 && *(_DWORD *)(a4 + 4 * a2 - 4) > v28)
        {
          if (a2 < 2)
          {
            a2 = 0;
          }
          else
          {
            uint64_t v33 = a2;
            while (*(_DWORD *)(a4 + 4 * (v33 - 2)) > v28)
            {
              if ((unint64_t)--v33 < 2)
              {
                int v145 = 1;
                a2 = 0;
                goto LABEL_8;
              }
            }
            a2 = v33 - 1;
          }
          int v145 = 1;
        }
LABEL_8:
        int v13 = v28;
      }
    }
LABEL_9:
    uint64_t v18 = off_1000FDEE8[++v17];
  }
  while (v17 != 8);
  if ((int)a2 >= 1)
  {
    uint64_t v149 = (char *)sub_1000CD454(4 * a2, v20, v21, v22, v23, v24, v25, v26);
    uint64_t v141 = 4 * a2;
    uint64_t v48 = (char *)sub_1000CD454(v141, v34, v35, v36, v37, v38, v39, v40);
    if (a5 >= 1) {
      memset(a6, 255, 4 * a5);
    }
    int v142 = a5;
    unint64_t v140 = (v13 - 1);
    if (v13 >= 1)
    {
      unsigned int v49 = v13;
      int64_t v50 = 0;
      signed int v51 = 0;
      signed int v144 = 0;
      signed int v52 = 0;
      unsigned int v53 = 0;
      signed int v54 = 0;
      uint64_t v55 = v49;
      uint64_t v56 = 0xFFFFFFFFLL;
      uint64_t v57 = v149;
      signed int v58 = a2;
      uint64_t v59 = a2;
      uint64_t v146 = v49;
      while (1)
      {
        while (1)
        {
          while (1)
          {
            if (v54 < v58)
            {
              BOOL v63 = v52 > 29 || (int)v56 < 0;
              uint64_t v64 = v54;
              if (v63)
              {
                uint64_t v65 = (int *)(a4 + 4 * v54);
                uint64_t v66 = (unsigned int *)&v57[4 * v54];
                uint64_t v67 = &v48[4 * v54];
                uint64_t v68 = v59 - v54;
                while (1)
                {
                  uint64_t v69 = *v65++;
                  if (v50 < v69) {
                    break;
                  }
                  *v66++ = v53;
                  *(_DWORD *)uint64_t v67 = -1;
                  v67 += 4;
                  ++v54;
                  if (!--v68)
                  {
LABEL_77:
                    signed int v54 = v59;
                    break;
                  }
                }
              }
              else
              {
                while (v50 >= *(int *)(a4 + 4 * v64))
                {
                  uint64_t v70 = 4 * v64;
                  *(_DWORD *)&v57[v70] = v53;
                  *(_DWORD *)&v48[v70] = v52;
                  if (v59 == ++v64) {
                    goto LABEL_77;
                  }
                }
                signed int v54 = v64;
              }
            }
            if ((v56 & 0x80000000) != 0) {
              break;
            }
            if (v54 <= v51) {
              int v60 = v52;
            }
            else {
              int v60 = v52 + 1;
            }
            if (asc_1000F8574[v56] == *(_WORD *)(a1 + 2 * v50))
            {
              signed int v52 = v60;
              uint64_t v56 = 0xFFFFFFFFLL;
            }
            if (++v50 == v55) {
              goto LABEL_81;
            }
          }
          uint64_t v147 = v56;
          int v148 = v51;
          uint64_t v61 = sub_1000CF020((unsigned __int16 *)"(", *(unsigned __int16 *)(a1 + 2 * v50));
          int v62 = *(unsigned __int16 *)(a1 + 2 * v50);
          if (!v61) {
            break;
          }
          uint64_t v56 = ((unint64_t)((char *)sub_1000CF020((unsigned __int16 *)"(", v62) - "(") >> 1);
          signed int v51 = v54;
          uint64_t v57 = v149;
          signed int v58 = a2;
LABEL_53:
          uint64_t v59 = a2;
          uint64_t v55 = v146;
          if (++v50 == v146) {
            goto LABEL_81;
          }
        }
        if (sub_1000CF020(L"/\\?:", v62))
        {
          uint64_t v57 = v149;
          signed int v58 = a2;
          uint64_t v59 = a2;
          if (v54 > v144) {
            goto LABEL_57;
          }
        }
        else
        {
          uint64_t v57 = v149;
          signed int v58 = a2;
          uint64_t v59 = a2;
          if (v50 && *(_WORD *)(a1 + 2 * v50) == 45 && v50 < v140)
          {
            if (!sub_1000CF020(asc_1000F6510, *(unsigned __int16 *)(a1 + 2 * v50 + 2))
              || !sub_1000CF020(asc_1000F6510, *(unsigned __int16 *)(a1 + 2 * (v50 - 1))))
            {
              uint64_t v57 = v149;
              signed int v51 = v148;
              uint64_t v56 = v147;
              goto LABEL_53;
            }
            uint64_t v59 = a2;
            uint64_t v57 = v149;
            if (v54 > v144)
            {
LABEL_57:
              ++v53;
              signed int v144 = v54;
            }
          }
        }
        signed int v51 = v148;
        uint64_t v55 = v146;
        uint64_t v56 = v147;
        if (++v50 == v146) {
          goto LABEL_81;
        }
      }
    }
    signed int v54 = 0;
    unsigned int v53 = 0;
    signed int v52 = 0;
    signed int v144 = 0;
    signed int v51 = 0;
    LODWORD(v56) = -1;
    uint64_t v57 = v149;
    signed int v58 = a2;
LABEL_81:
    if (v54 >= v58)
    {
      uint64_t v74 = a6;
    }
    else
    {
      unint64_t v72 = v54;
      unint64_t v73 = v58 - (uint64_t)v54;
      uint64_t v74 = a6;
      if ((v56 & 0x80000000) != 0 || v52 > 29)
      {
        if (v73 < 0xC) {
          goto LABEL_98;
        }
        uint64_t v85 = 4 * v54;
        if ((unint64_t)(v48 - v57) < 0x20) {
          goto LABEL_98;
        }
        int32x4_t v86 = vdupq_n_s32(v53);
        unint64_t v72 = (v73 & 0xFFFFFFFFFFFFFFF8) + v54;
        uint64_t v87 = v85 + 16;
        uint64_t v88 = (int32x4_t *)&v57[v85 + 16];
        int v89 = &v48[v87];
        *(void *)&long long v90 = -1;
        *((void *)&v90 + 1) = -1;
        unint64_t v91 = v73 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          v88[-1] = v86;
          *uint64_t v88 = v86;
          v88 += 2;
          *((_OWORD *)v89 - 1) = v90;
          *(_OWORD *)int v89 = v90;
          v89 += 32;
          v91 -= 8;
        }
        while (v91);
        if (v73 != (v73 & 0xFFFFFFFFFFFFFFF8))
        {
LABEL_98:
          int v92 = (unsigned int *)&v57[4 * v72];
          int v93 = &v48[4 * v72];
          unint64_t v94 = v58 - v72;
          do
          {
            *v92++ = v53;
            *(_DWORD *)int v93 = -1;
            v93 += 4;
            --v94;
          }
          while (v94);
        }
      }
      else
      {
        if (v73 < 0xC) {
          goto LABEL_89;
        }
        uint64_t v75 = 4 * v54;
        if ((unint64_t)(v48 - v57) < 0x20) {
          goto LABEL_89;
        }
        unint64_t v72 = (v73 & 0xFFFFFFFFFFFFFFF8) + v54;
        int32x4_t v76 = vdupq_n_s32(v53);
        int32x4_t v77 = vdupq_n_s32(v52);
        uint64_t v78 = v75 + 16;
        uint64_t v79 = (int32x4_t *)&v57[v75 + 16];
        uint64_t v80 = (int32x4_t *)&v48[v78];
        unint64_t v81 = v73 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          v79[-1] = v76;
          *uint64_t v79 = v76;
          v79 += 2;
          v80[-1] = v77;
          *uint64_t v80 = v77;
          v80 += 2;
          v81 -= 8;
        }
        while (v81);
        if (v73 != (v73 & 0xFFFFFFFFFFFFFFF8))
        {
LABEL_89:
          uint64_t v82 = (unsigned int *)&v57[4 * v72];
          uint64_t v83 = (signed int *)&v48[4 * v72];
          unint64_t v84 = v58 - v72;
          do
          {
            *v82++ = v53;
            *v83++ = v52;
            --v84;
          }
          while (v84);
        }
      }
      signed int v54 = v58;
    }
    BOOL v95 = (int)v56 < 0 || v54 <= v51;
    if (v95) {
      int v96 = v52;
    }
    else {
      int v96 = v52 + 1;
    }
    if (v54 <= v144) {
      uint64_t v97 = v53;
    }
    else {
      uint64_t v97 = v53 + 1;
    }
    if (v96 >= 30) {
      int v98 = 30;
    }
    else {
      int v98 = v96;
    }
    uint64_t v99 = 4 * ((int)v97 + 1);
    uint64_t v100 = sub_1000CD454(v99, v41, v42, v43, v44, v45, v46, v47);
    int v108 = sub_1000CD454(v99, v101, v102, v103, v104, v105, v106, v107);
    uint64_t v109 = 0;
    int v110 = 0;
    *(_DWORD *)uint64_t v100 = 0;
    *(_DWORD *)int v108 = 0;
    int v111 = -1;
    do
    {
      uint64_t v114 = *(unsigned int *)&v149[4 * v109];
      if ((int)v114 > v110)
      {
        uint64_t v115 = 4 * v114;
        *(_DWORD *)((char *)v100 + v115) = v111 + 1;
        *(_DWORD *)((char *)v108 + v115) = v109;
        int v110 = v114;
      }
      int v112 = *(_DWORD *)&v48[4 * v109];
      if (v112 > v111 && v112 > -1) {
        int v111 = *(_DWORD *)&v48[4 * v109];
      }
      ++v109;
    }
    while (a2 != v109);
    uint64_t v116 = 4 * (int)v97;
    *(_DWORD *)((char *)v100 + v116) = v98;
    *(_DWORD *)((char *)v108 + v116) = a2;
    unsigned int v117 = v145 == 0;
    if (1 << v98 <= v117)
    {
      uint64_t v71 = 0;
      uint64_t v128 = v74;
LABEL_143:
      if ((int)v97 < 2) {
        goto LABEL_163;
      }
    }
    else
    {
      uint64_t v71 = 0;
      uint64_t v118 = v74;
      while ((uint64_t)(v142 - (unint64_t)a2) >= v118 - v74)
      {
        int v119 = 0;
        uint64_t v120 = a2;
        uint64_t v121 = v48;
        uint64_t v122 = a3;
        unsigned int v123 = (int *)v149;
        int v124 = v118;
        do
        {
          int v126 = *(_DWORD *)v121;
          v121 += 4;
          char v125 = v126;
          if (v126 < 0 || ((v117 >> (v98 + ~v125)) & 1) == 0)
          {
            *v124++ = *v122;
            if (*v123 != v110) {
              ++v119;
            }
            int v110 = *v123;
          }
          ++v123;
          ++v122;
          --v120;
        }
        while (v120);
        if (v119 >= 2 || (int)v97 <= 1) {
          uint64_t v128 = v124;
        }
        else {
          uint64_t v128 = v118;
        }
        if (v128 > v118)
        {
          *v128++ = -1;
          uint64_t v71 = (v71 + 1);
        }
        ++v117;
        uint64_t v118 = v128;
        if (v117 == 1 << v98) {
          goto LABEL_143;
        }
      }
      uint64_t v128 = v118;
      if ((int)v97 < 2) {
        goto LABEL_163;
      }
    }
    uint64_t v129 = 0;
    do
    {
      uint64_t v130 = v129;
      int v131 = *((_DWORD *)v100 + v129++);
      int v132 = *((_DWORD *)v100 + v129);
      char v133 = v132 - v131;
      if (v132 - v131 != 31)
      {
        unsigned int v134 = 0;
        int v135 = 1 << v133;
        if (v135 <= 1) {
          int v135 = 1;
        }
        do
        {
          if ((uint64_t)(v142 - (unint64_t)a2) < v128 - v74) {
            break;
          }
          uint64_t v136 = *((int *)v108 + v130);
          if ((int)v136 < *((_DWORD *)v108 + v129))
          {
            int v137 = v128;
            do
            {
              int v138 = *(_DWORD *)&v48[4 * v136];
              if (v138 < 0 || ((v134 >> (v132 + ~(_BYTE)v138)) & 1) == 0) {
                *v137++ = a3[v136];
              }
              ++v136;
            }
            while (v136 < *((int *)v108 + v129));
            if (v137 > v128)
            {
              *v137++ = -1;
              uint64_t v71 = (v71 + 1);
            }
            uint64_t v128 = v137;
          }
          ++v134;
        }
        while (v134 != v135);
      }
    }
    while (v129 != v97);
LABEL_163:
    sub_1000CD4D0(v108, v99);
    sub_1000CD4D0(v100, v99);
    sub_1000CD4D0(v48, v141);
    sub_1000CD4D0(v149, v141);
    return v71;
  }
  return 0;
}

uint64_t sub_1000AF9D4(uint64_t a1)
{
  uint64_t v2 = *(signed int **)a1;
  if (v2)
  {
    unsigned int v3 = sub_1000959A0(v2);
    uint64_t v4 = sub_1000C085C(v3, 4, 0xFFFFFFFF);
    uint64_t v5 = *(unint64_t **)(a1 + 16);
    if (!v5) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v4 = 0xFFFFFFFFLL;
  uint64_t v5 = *(unint64_t **)(a1 + 16);
  if (v5)
  {
LABEL_3:
    int v6 = sub_1000CED6C((unint64_t)v5);
    uint64_t v4 = sub_1000C09B0(v5, 2, v6 + 1, v4);
  }
LABEL_4:
  uint64_t v7 = *(unint64_t **)(a1 + 32);
  if (v7)
  {
    int v8 = sub_1000CED6C(*(void *)(a1 + 32));
    uint64_t v4 = sub_1000C09B0(v7, 2, v8 + 1, v4);
  }
  uint64_t v9 = *(unint64_t **)(a1 + 48);
  if (v9)
  {
    int v10 = sub_1000CED6C(*(void *)(a1 + 48));
    uint64_t v4 = sub_1000C09B0(v9, 2, v10 + 1, v4);
  }
  int v11 = *(unint64_t **)(a1 + 64);
  if (v11)
  {
    int v12 = sub_1000CED6C(*(void *)(a1 + 64));
    uint64_t v4 = sub_1000C09B0(v11, 2, v12 + 1, v4);
  }
  int v13 = *(unint64_t **)(a1 + 80);
  if (v13)
  {
    int v14 = sub_1000CED6C(*(void *)(a1 + 80));
    LODWORD(v4) = sub_1000C09B0(v13, 2, v14 + 1, v4);
  }
  uint64_t v15 = sub_1000C085C(*(_DWORD *)(a1 + 96), 4, v4);
  if (*(int *)(a1 + 96) >= 1)
  {
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    do
    {
      uint64_t v18 = *(unint64_t **)(*(void *)(a1 + 104) + v16);
      int v19 = sub_1000CED6C((unint64_t)v18);
      uint64_t v15 = sub_1000C09B0(v18, 2, v19 + 1, v15);
      ++v17;
      v16 += 16;
    }
    while (v17 < *(int *)(a1 + 96));
  }
  uint64_t v20 = sub_1000C085C(*(_DWORD *)(a1 + 120), 4, v15);
  if (*(int *)(a1 + 120) >= 1)
  {
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    do
    {
      uint64_t v23 = *(unint64_t **)(*(void *)(a1 + 128) + v21);
      int v24 = sub_1000CED6C((unint64_t)v23);
      uint64_t v25 = sub_1000C09B0(v23, 2, v24 + 1, v20);
      uint64_t v26 = *(unint64_t **)(*(void *)(a1 + 128) + v21 + 16);
      int v27 = sub_1000CED6C((unint64_t)v26);
      uint64_t v20 = sub_1000C09B0(v26, 2, v27 + 1, v25);
      ++v22;
      v21 += 32;
    }
    while (v22 < *(int *)(a1 + 120));
  }
  uint64_t v28 = sub_1000C085C(*(_DWORD *)(a1 + 144), 4, v20);
  if (*(int *)(a1 + 144) >= 1)
  {
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    do
    {
      unsigned __int16 v31 = *(unint64_t **)(*(void *)(a1 + 152) + v29);
      int v32 = sub_1000CED6C((unint64_t)v31);
      uint64_t v33 = sub_1000C09B0(v31, 2, v32 + 1, v28);
      uint64_t v34 = *(unint64_t **)(*(void *)(a1 + 152) + v29 + 16);
      int v35 = sub_1000CED6C((unint64_t)v34);
      uint64_t v28 = sub_1000C09B0(v34, 2, v35 + 1, v33);
      ++v30;
      v29 += 32;
    }
    while (v30 < *(int *)(a1 + 144));
  }
  uint64_t v36 = sub_1000C085C(*(_DWORD *)(a1 + 168), 4, v28);
  if (*(int *)(a1 + 168) >= 1)
  {
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    do
    {
      uint64_t v39 = *(unint64_t **)(*(void *)(a1 + 176) + v37);
      int v40 = sub_1000CED6C((unint64_t)v39);
      uint64_t v41 = sub_1000C09B0(v39, 2, v40 + 1, v36);
      uint64_t v42 = *(unint64_t **)(*(void *)(a1 + 176) + v37 + 16);
      int v43 = sub_1000CED6C((unint64_t)v42);
      uint64_t v36 = sub_1000C09B0(v42, 2, v43 + 1, v41);
      ++v38;
      v37 += 32;
    }
    while (v38 < *(int *)(a1 + 168));
  }
  uint64_t v44 = sub_1000C085C(*(_DWORD *)(a1 + 192), 4, v36);
  if (*(int *)(a1 + 192) >= 1)
  {
    uint64_t v45 = 0;
    uint64_t v46 = 0;
    do
    {
      uint64_t v47 = *(unint64_t **)(*(void *)(a1 + 200) + v45);
      int v48 = sub_1000CED6C((unint64_t)v47);
      uint64_t v49 = sub_1000C09B0(v47, 2, v48 + 1, v44);
      int64_t v50 = *(unint64_t **)(*(void *)(a1 + 200) + v45 + 16);
      int v51 = sub_1000CED6C((unint64_t)v50);
      uint64_t v44 = sub_1000C09B0(v50, 2, v51 + 1, v49);
      ++v46;
      v45 += 32;
    }
    while (v46 < *(int *)(a1 + 192));
  }
  return v44;
}

uint64_t sub_1000AFDA0(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v10 = sub_1000BEC58(a1, "btn0", a2, a4, a5, a6, a7, a8);
  if (!v10) {
    return 0;
  }
  uint64_t v11 = (uint64_t)v10;
  uint64_t v12 = sub_1000C33A0(232);
  uint64_t v13 = v12;
  if (v12)
  {
    if (sub_1000BF290(v11, (uint64_t *)(v12 + 24)))
    {
      *(void *)(v13 + 16) = *(void *)(v13 + 24);
      if (sub_1000BF290(v11, (uint64_t *)(v13 + 40)))
      {
        *(void *)(v13 + 32) = *(void *)(v13 + 40);
        if (sub_1000BF290(v11, (uint64_t *)(v13 + 56)))
        {
          *(void *)(v13 + 48) = *(void *)(v13 + 56);
          if (sub_1000BF290(v11, (uint64_t *)(v13 + 72)))
          {
            *(void *)(v13 + 64) = *(void *)(v13 + 72);
            if (sub_1000BF290(v11, (uint64_t *)(v13 + 88)))
            {
              *(void *)(v13 + 80) = *(void *)(v13 + 88);
              if (sub_1000BEECC(v11, (void *)(v13 + 96))
                && sub_1000BEECC(v11, (void *)(v13 + 120))
                && sub_1000BEECC(v11, (void *)(v13 + 144))
                && sub_1000BEECC(v11, (void *)(v13 + 168))
                && sub_1000BEECC(v11, (void *)(v13 + 192)))
              {
                uint64_t v21 = *(unsigned int *)(v13 + 96);
                if ((int)v21 >= 1)
                {
                  sub_1000C2F04(16 * v21, v14, v15, v16, v17, v18, v19, v20);
                  *(void *)(v13 + 112) = v22;
                  if (*(int *)(v13 + 96) >= 1)
                  {
                    uint64_t v23 = 0;
                    uint64_t v24 = 0;
                    do
                    {
                      if (!sub_1000BF290(v11, (uint64_t *)(*(void *)(v13 + 112) + v23 + 8))) {
                        break;
                      }
                      *(void *)(*(void *)(v13 + 112) + v23) = *(void *)(*(void *)(v13 + 112) + v23 + 8);
                      ++v24;
                      v23 += 16;
                    }
                    while (v24 < *(int *)(v13 + 96));
                    uint64_t v22 = *(void *)(v13 + 112);
                  }
                  *(void *)(v13 + 104) = v22;
                }
                uint64_t v25 = *(unsigned int *)(v13 + 120);
                if ((int)v25 >= 1)
                {
                  sub_1000C2F04(32 * v25, v14, v15, v16, v17, v18, v19, v20);
                  *(void *)(v13 + 136) = v26;
                  if (*(int *)(v13 + 120) >= 1)
                  {
                    uint64_t v27 = 0;
                    uint64_t v28 = 0;
                    do
                    {
                      if (!sub_1000BF290(v11, (uint64_t *)(*(void *)(v13 + 136) + v27 + 8))) {
                        break;
                      }
                      *(void *)(*(void *)(v13 + 136) + v27) = *(void *)(*(void *)(v13 + 136) + v27 + 8);
                      if (!sub_1000BF290(v11, (uint64_t *)(*(void *)(v13 + 136) + v27 + 24))) {
                        break;
                      }
                      *(void *)(*(void *)(v13 + 136) + v27 + 16) = *(void *)(*(void *)(v13 + 136) + v27 + 24);
                      ++v28;
                      v27 += 32;
                    }
                    while (v28 < *(int *)(v13 + 120));
                    uint64_t v26 = *(void *)(v13 + 136);
                  }
                  *(void *)(v13 + 128) = v26;
                }
                uint64_t v29 = *(unsigned int *)(v13 + 144);
                if ((int)v29 >= 1)
                {
                  sub_1000C2F04(32 * v29, v14, v15, v16, v17, v18, v19, v20);
                  *(void *)(v13 + 160) = v30;
                  if (*(int *)(v13 + 144) >= 1)
                  {
                    uint64_t v31 = 0;
                    uint64_t v32 = 0;
                    do
                    {
                      if (!sub_1000BF290(v11, (uint64_t *)(*(void *)(v13 + 160) + v31 + 8))) {
                        break;
                      }
                      *(void *)(*(void *)(v13 + 160) + v31) = *(void *)(*(void *)(v13 + 160) + v31 + 8);
                      if (!sub_1000BF290(v11, (uint64_t *)(*(void *)(v13 + 160) + v31 + 24))) {
                        break;
                      }
                      *(void *)(*(void *)(v13 + 160) + v31 + 16) = *(void *)(*(void *)(v13 + 160) + v31 + 24);
                      ++v32;
                      v31 += 32;
                    }
                    while (v32 < *(int *)(v13 + 144));
                    uint64_t v30 = *(void *)(v13 + 160);
                  }
                  *(void *)(v13 + 152) = v30;
                }
                uint64_t v33 = *(unsigned int *)(v13 + 168);
                if ((int)v33 >= 1)
                {
                  sub_1000C2F04(32 * v33, v14, v15, v16, v17, v18, v19, v20);
                  *(void *)(v13 + 184) = v34;
                  if (*(int *)(v13 + 168) >= 1)
                  {
                    uint64_t v35 = 0;
                    uint64_t v36 = 0;
                    do
                    {
                      if (!sub_1000BF290(v11, (uint64_t *)(*(void *)(v13 + 184) + v35 + 8))) {
                        break;
                      }
                      *(void *)(*(void *)(v13 + 184) + v35) = *(void *)(*(void *)(v13 + 184) + v35 + 8);
                      if (!sub_1000BF290(v11, (uint64_t *)(*(void *)(v13 + 184) + v35 + 24))) {
                        break;
                      }
                      *(void *)(*(void *)(v13 + 184) + v35 + 16) = *(void *)(*(void *)(v13 + 184) + v35 + 24);
                      ++v36;
                      v35 += 32;
                    }
                    while (v36 < *(int *)(v13 + 168));
                    uint64_t v34 = *(void *)(v13 + 184);
                  }
                  *(void *)(v13 + 176) = v34;
                }
                uint64_t v37 = *(unsigned int *)(v13 + 192);
                if ((int)v37 >= 1)
                {
                  sub_1000C2F04(32 * v37, v14, v15, v16, v17, v18, v19, v20);
                  *(void *)(v13 + 208) = v38;
                  if (*(int *)(v13 + 192) >= 1)
                  {
                    uint64_t v39 = 0;
                    uint64_t v40 = 0;
                    do
                    {
                      if (!sub_1000BF290(v11, (uint64_t *)(*(void *)(v13 + 208) + v39 + 8))) {
                        break;
                      }
                      *(void *)(*(void *)(v13 + 208) + v39) = *(void *)(*(void *)(v13 + 208) + v39 + 8);
                      if (!sub_1000BF290(v11, (uint64_t *)(*(void *)(v13 + 208) + v39 + 24))) {
                        break;
                      }
                      *(void *)(*(void *)(v13 + 208) + v39 + 16) = *(void *)(*(void *)(v13 + 208) + v39 + 24);
                      ++v40;
                      v39 += 32;
                    }
                    while (v40 < *(int *)(v13 + 192));
                    uint64_t v38 = *(void *)(v13 + 208);
                  }
                  *(void *)(v13 + 200) = v38;
                }
                sub_1000C2F04(0x228uLL, v14, v15, v16, v17, v18, v19, v20);
                uint64_t v42 = v41;
                *(void *)(v13 + 224) = v41;
                if (sub_1000BF290(v11, (uint64_t *)(v41 + 8)))
                {
                  *(void *)uint64_t v42 = *(void *)(v42 + 8);
                  if (sub_1000BF290(v11, (uint64_t *)(v42 + 24)))
                  {
                    *(void *)(v42 + 16) = *(void *)(v42 + 24);
                    if (sub_1000BF290(v11, (uint64_t *)(v42 + 40)))
                    {
                      *(void *)(v42 + 32) = *(void *)(v42 + 40);
                      if (sub_1000BF290(v11, (uint64_t *)(v42 + 56)))
                      {
                        *(void *)(v42 + 48) = *(void *)(v42 + 56);
                        if (sub_1000BF290(v11, (uint64_t *)(v42 + 72)))
                        {
                          *(void *)(v42 + 64) = *(void *)(v42 + 72);
                          if (sub_1000BF290(v11, (uint64_t *)(v42 + 88)))
                          {
                            *(void *)(v42 + 80) = *(void *)(v42 + 88);
                            if (sub_1000BF290(v11, (uint64_t *)(v42 + 104)))
                            {
                              *(void *)(v42 + 96) = *(void *)(v42 + 104);
                              if (sub_1000BF290(v11, (uint64_t *)(v42 + 120)))
                              {
                                *(void *)(v42 + 112) = *(void *)(v42 + 120);
                                if (sub_1000BF290(v11, (uint64_t *)(v42 + 136)))
                                {
                                  *(void *)(v42 + 128) = *(void *)(v42 + 136);
                                  if (sub_1000BF290(v11, (uint64_t *)(v42 + 152)))
                                  {
                                    *(void *)(v42 + 144) = *(void *)(v42 + 152);
                                    if (sub_1000BF290(v11, (uint64_t *)(v42 + 168)))
                                    {
                                      *(void *)(v42 + 160) = *(void *)(v42 + 168);
                                      if (sub_1000BF290(v11, (uint64_t *)(v42 + 200)))
                                      {
                                        *(void *)(v42 + 192) = *(void *)(v42 + 200);
                                        if (sub_1000BF290(v11, (uint64_t *)(v42 + 216)))
                                        {
                                          *(void *)(v42 + 208) = *(void *)(v42 + 216);
                                          if (sub_1000BF290(v11, (uint64_t *)(v42 + 232)))
                                          {
                                            *(void *)(v42 + 224) = *(void *)(v42 + 232);
                                            if (sub_1000BF290(v11, (uint64_t *)(v42 + 248)))
                                            {
                                              *(void *)(v42 + 240) = *(void *)(v42 + 248);
                                              if (sub_1000BF290(v11, (uint64_t *)(v42 + 264)))
                                              {
                                                *(void *)(v42 + 256) = *(void *)(v42 + 264);
                                                if (sub_1000BF290(v11, (uint64_t *)(v42 + 280)))
                                                {
                                                  *(void *)(v42 + 272) = *(void *)(v42 + 280);
                                                  if (sub_1000BF290(v11, (uint64_t *)(v42 + 296)))
                                                  {
                                                    *(void *)(v42 + 288) = *(void *)(v42 + 296);
                                                    if (sub_1000BF290(v11, (uint64_t *)(v42 + 312)))
                                                    {
                                                      *(void *)(v42 + 304) = *(void *)(v42 + 312);
                                                      if (sub_1000BF290(v11, (uint64_t *)(v42 + 328)))
                                                      {
                                                        *(void *)(v42 + 320) = *(void *)(v42 + 328);
                                                        if (sub_1000BF290(v11, (uint64_t *)(v42 + 344)))
                                                        {
                                                          *(void *)(v42 + 336) = *(void *)(v42 + 344);
                                                          if (sub_1000BF290(v11, (uint64_t *)(v42 + 360)))
                                                          {
                                                            *(void *)(v42 + 352) = *(void *)(v42 + 360);
                                                            if (sub_1000BF290(v11, (uint64_t *)(v42 + 376)))
                                                            {
                                                              *(void *)(v42 + 368) = *(void *)(v42 + 376);
                                                              if (sub_1000BF290(v11, (uint64_t *)(v42 + 392)))
                                                              {
                                                                *(void *)(v42 + 384) = *(void *)(v42 + 392);
                                                                if (sub_1000BF290(v11, (uint64_t *)(v42 + 408)))
                                                                {
                                                                  *(void *)(v42 + 400) = *(void *)(v42 + 408);
                                                                  if (sub_1000BF290(v11, (uint64_t *)(v42 + 424)))
                                                                  {
                                                                    *(void *)(v42 + 416) = *(void *)(v42 + 424);
                                                                    if (sub_1000BF290(v11, (uint64_t *)(v42 + 440)))
                                                                    {
                                                                      *(void *)(v42 + 432) = *(void *)(v42 + 440);
                                                                      if (sub_1000BF290(v11, (uint64_t *)(v42 + 456)))
                                                                      {
                                                                        *(void *)(v42 + 448) = *(void *)(v42 + 456);
                                                                        if (sub_1000BF290(v11, (uint64_t *)(v42 + 472)))
                                                                        {
                                                                          *(void *)(v42 + 464) = *(void *)(v42 + 472);
                                                                          if (sub_1000BF290(v11, (uint64_t *)(v42 + 488)))
                                                                          {
                                                                            *(void *)(v42 + 480) = *(void *)(v42 + 488);
                                                                            if (sub_1000BF290(v11, (uint64_t *)(v42 + 504)))
                                                                            {
                                                                              *(void *)(v42 + 496) = *(void *)(v42 + 504);
                                                                              if (sub_1000BF290(v11, (uint64_t *)(v42 + 520)))
                                                                              {
                                                                                *(void *)(v42 + 512) = *(void *)(v42 + 520);
                                                                                if (sub_1000BEE7C(v11, (_DWORD *)(v42 + 528))&& sub_1000BEE7C(v11, (_DWORD *)(v42 + 532))&& sub_1000BEE7C(v11, (_DWORD *)(v42 + 536))&& sub_1000BEE7C(v11, (_DWORD *)(v42 + 540)))
                                                                                {
                                                                                  sub_1000BEE7C(v11, (_DWORD *)(v42 + 544));
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    *(void *)(v13 + 216) = *(void *)(v13 + 224);
    sub_1000BED3C(v11);
    uint64_t v49 = sub_100095AE8(a1, a2, v43, v44, v45, v46, v47, v48);
    *(void *)uint64_t v13 = v49;
    *(void *)(v13 + 8) = v49;
  }
  else
  {
    sub_1000BED3C(v11);
  }
  return v13;
}

uint64_t sub_1000B054C(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = *(void *)(result + 136);
    if (v2)
    {
      if (*(int *)(v1 + 120) >= 1)
      {
        uint64_t v3 = 0;
        uint64_t v4 = 0;
        do
        {
          sub_1000C321C(*(void *)(*(void *)(v1 + 128) + v3 + 8));
          sub_1000C321C(*(void *)(*(void *)(v1 + 128) + v3 + 24));
          ++v4;
          v3 += 32;
        }
        while (v4 < *(int *)(v1 + 120));
        uint64_t v2 = *(void *)(v1 + 136);
      }
      sub_1000C321C(v2);
      *(void *)(v1 + 128) = 0;
    }
    uint64_t v5 = *(void *)(v1 + 112);
    if (v5)
    {
      if (*(int *)(v1 + 96) >= 1)
      {
        uint64_t v6 = 0;
        uint64_t v7 = 8;
        do
        {
          sub_1000C321C(*(void *)(*(void *)(v1 + 112) + v7));
          ++v6;
          v7 += 16;
        }
        while (v6 < *(int *)(v1 + 96));
        uint64_t v5 = *(void *)(v1 + 112);
      }
      sub_1000C321C(v5);
      *(void *)(v1 + 104) = 0;
      *(void *)(v1 + 112) = 0;
    }
    uint64_t v8 = *(void *)(v1 + 160);
    if (v8)
    {
      if (*(int *)(v1 + 144) >= 1)
      {
        uint64_t v9 = 0;
        uint64_t v10 = 0;
        do
        {
          sub_1000C321C(*(void *)(*(void *)(v1 + 160) + v9 + 8));
          sub_1000C321C(*(void *)(*(void *)(v1 + 160) + v9 + 24));
          ++v10;
          v9 += 32;
        }
        while (v10 < *(int *)(v1 + 144));
        uint64_t v8 = *(void *)(v1 + 160);
      }
      sub_1000C321C(v8);
      *(void *)(v1 + 152) = 0;
      *(void *)(v1 + 160) = 0;
    }
    uint64_t v11 = *(void *)(v1 + 184);
    if (v11)
    {
      if (*(int *)(v1 + 168) >= 1)
      {
        uint64_t v12 = 0;
        uint64_t v13 = 0;
        do
        {
          sub_1000C321C(*(void *)(*(void *)(v1 + 184) + v12 + 8));
          sub_1000C321C(*(void *)(*(void *)(v1 + 184) + v12 + 24));
          ++v13;
          v12 += 32;
        }
        while (v13 < *(int *)(v1 + 168));
        uint64_t v11 = *(void *)(v1 + 184);
      }
      sub_1000C321C(v11);
      *(void *)(v1 + 176) = 0;
      *(void *)(v1 + 184) = 0;
    }
    uint64_t v14 = *(void *)(v1 + 208);
    if (v14)
    {
      if (*(int *)(v1 + 192) >= 1)
      {
        uint64_t v15 = 0;
        uint64_t v16 = 0;
        do
        {
          sub_1000C321C(*(void *)(*(void *)(v1 + 208) + v15 + 8));
          sub_1000C321C(*(void *)(*(void *)(v1 + 208) + v15 + 24));
          ++v16;
          v15 += 32;
        }
        while (v16 < *(int *)(v1 + 192));
        uint64_t v14 = *(void *)(v1 + 208);
      }
      sub_1000C321C(v14);
      *(void *)(v1 + 200) = 0;
    }
    sub_1000C321C(*(void *)(v1 + 24));
    sub_1000C321C(*(void *)(v1 + 40));
    sub_1000C321C(*(void *)(v1 + 56));
    sub_1000C321C(*(void *)(v1 + 88));
    sub_1000C321C(*(void *)(v1 + 72));
    uint64_t v17 = *(uint64_t **)(v1 + 224);
    if (v17)
    {
      sub_1000C321C(v17[1]);
      sub_1000C321C(v17[3]);
      sub_1000C321C(v17[5]);
      sub_1000C321C(v17[7]);
      sub_1000C321C(v17[9]);
      sub_1000C321C(v17[11]);
      sub_1000C321C(v17[13]);
      sub_1000C321C(v17[15]);
      sub_1000C321C(v17[17]);
      sub_1000C321C(v17[19]);
      sub_1000C321C(v17[21]);
      sub_1000C321C(v17[23]);
      sub_1000C321C(v17[25]);
      sub_1000C321C(v17[27]);
      sub_1000C321C(v17[29]);
      sub_1000C321C(v17[31]);
      sub_1000C321C(v17[33]);
      sub_1000C321C(v17[35]);
      sub_1000C321C(v17[37]);
      sub_1000C321C(v17[39]);
      sub_1000C321C(v17[41]);
      sub_1000C321C(v17[43]);
      sub_1000C321C(v17[45]);
      sub_1000C321C(v17[47]);
      sub_1000C321C(v17[49]);
      sub_1000C321C(v17[51]);
      sub_1000C321C(v17[53]);
      sub_1000C321C(v17[55]);
      sub_1000C321C(v17[57]);
      sub_1000C321C(v17[59]);
      sub_1000C321C(v17[61]);
      sub_1000C321C(v17[63]);
      sub_1000C321C(v17[65]);
      sub_1000C321C(*(void *)(v1 + 224));
      *(void *)(v1 + 224) = 0;
    }
    sub_100095D0C(*(int **)(v1 + 8));
    return sub_1000C321C(v1);
  }
  return result;
}

uint64_t sub_1000B0894(uint64_t a1, int a2, uint64_t a3, int *a4)
{
  uint64_t v7 = *(void **)(a1 + 216);
  switch(a2)
  {
    case 1:
      if (*a4 == 2 && a4[2] == 1) {
        return *(_WORD *)(a3 + 2 * a4[1]) == 48;
      }
      return 0;
    case 2:
      if (*a4 != 2 || a4[2] != 2) {
        return 0;
      }
      return *(_WORD *)(a3 + 2 * a4[1]) == 48;
    case 3:
      if (*a4 != 2 || a4[2] != 1) {
        return 0;
      }
      int v8 = *(unsigned __int16 *)(a3 + 2 * a4[1]);
      return v8 == 49;
    case 4:
      if (*a4 != 2 || a4[2] != 3) {
        return 0;
      }
      uint64_t v9 = a4[1];
      unsigned int v10 = *(unsigned __int16 *)(a3 + 2 * v9);
      BOOL v11 = v10 > 0x39;
      uint64_t v12 = (1 << v10) & 0x250000000000000;
      BOOL v13 = v11 || v12 == 0;
      if (v13 || *(_WORD *)(a3 + 2 * ((int)v9 + 1)) != 49) {
        return 0;
      }
      int v8 = *(unsigned __int16 *)(a3 + 2 * ((int)v9 + 2));
      return v8 == 49;
    case 5:
      if (*a4 != 2) {
        return 0;
      }
      int v14 = a4[2];
      return v14 == 1;
    case 6:
      return *a4 == 2 && a4[2] == 2;
    case 7:
      return *a4 == 2 && a4[2] == 3;
    case 8:
      return *a4 == 2 && a4[2] < 4;
    case 9:
      if (*a4 != 2) {
        return 0;
      }
      int v15 = a4[2];
      return v15 == 4;
    case 10:
      return *a4 == 2 && a4[2] < 7;
    case 11:
      return *a4 == 2 && a4[2] == 7;
    case 12:
      return *a4 == 2 && a4[2] > 6;
    case 13:
      return *a4 == 2 && a4[2] > 0;
    case 14:
      return *a4 == 4 || *a4 == 3 && *(unsigned __int16 *)(a3 + 2 * a4[1]) - 48 >= 0xFFFFFFFD;
    case 15:
      if (*a4 != 3) {
        return 0;
      }
      int v16 = *(unsigned __int16 *)(a3 + 2 * a4[1]);
      uint64_t v17 = (unsigned __int16 *)v7[50];
      return v16 == *v17;
    case 16:
      if (*a4 == 3)
      {
        unsigned int v18 = *(unsigned __int16 *)(a3 + 2 * a4[1]);
        BOOL v11 = v18 > 0x2D;
        uint64_t v19 = (1 << v18) & 0x280800000000;
        if (!v11 && v19 != 0) {
          return 1;
        }
      }
      return 0;
    case 17:
      if (*a4 != 3) {
        return 0;
      }
      int v16 = *(unsigned __int16 *)(a3 + 2 * a4[1]);
      uint64_t v17 = (unsigned __int16 *)v7[52];
      return v16 == *v17;
    case 18:
      return *a4 == 3 && *(_WORD *)(a3 + 2 * a4[1]) == 40;
    case 19:
      return *a4 == 3 && *(_WORD *)(a3 + 2 * a4[1]) == 41;
    case 20:
      if (*a4 != 3) {
        return 0;
      }
      int v21 = *(unsigned __int16 *)(a3 + 2 * a4[1]);
      uint64_t result = 1;
      if (v21 != 36 && v21 != 164 && v21 != 8364) {
        return 0;
      }
      return result;
    case 21:
      if (*a4 != 1) {
        return 0;
      }
      int v24 = a4[2];
      if (v24 > 3) {
        return 0;
      }
      if (v24 < 1)
      {
        uint64_t v25 = 0;
      }
      else
      {
        uint64_t v25 = 0;
        do
        {
          v65[v25] = sub_1000CDA88(*(unsigned __int16 *)(a3 + 2 * (v25 + a4[1])));
          ++v25;
        }
        while (v25 < a4[2]);
      }
      v65[v25] = 0;
      if (!sub_1000CF684(v65, "u") || !sub_1000CF684(v65, "e")) {
        return 1;
      }
      int v62 = "u";
      return !sub_1000CF684(v65, v62);
    case 22:
      if (*a4 != 1) {
        return 0;
      }
      int v26 = a4[2];
      if (v26 > 31) {
        return 0;
      }
      sub_1000CED88(v65, (__int16 *)(a3 + 2 * a4[1]), v26 + 1);
      if (*(int *)(a1 + 96) < 1) {
        return 0;
      }
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      while (sub_1000CF6D4(*(_WORD **)(*(void *)(a1 + 104) + v27), v65))
      {
        ++v28;
        v27 += 16;
        if (v28 >= *(int *)(a1 + 96)) {
          return 0;
        }
      }
      return 1;
    case 23:
      if (*a4 != 2) {
        return 0;
      }
      int v29 = a4[2];
      if (v29 > 2) {
        return 0;
      }
      sub_1000CED88(v65, (__int16 *)(a3 + 2 * a4[1]), v29 + 1);
      if (a4[2] < 1) {
        goto LABEL_96;
      }
      uint64_t v30 = 0;
      while (1)
      {
        uint64_t result = sub_1000CDF18(v65[v30]);
        if (!result) {
          return result;
        }
        if (++v30 >= a4[2])
        {
LABEL_96:
          if ((int)sub_1000C4A54(v65) <= 12) {
            return (int)sub_1000C4A54(v65) >= 1;
          }
          return 0;
        }
      }
    case 24:
      if (*a4 != 2) {
        return 0;
      }
      int v31 = a4[2];
      if (v31 > 2) {
        return 0;
      }
      sub_1000CED88(v65, (__int16 *)(a3 + 2 * a4[1]), v31 + 1);
      if (a4[2] < 1) {
        goto LABEL_104;
      }
      uint64_t v32 = 0;
      while (1)
      {
        uint64_t result = sub_1000CDF18(v65[v32]);
        if (!result) {
          break;
        }
        if (++v32 >= a4[2])
        {
LABEL_104:
          if ((int)sub_1000C4A54(v65) > 31) {
            return 0;
          }
          return (int)sub_1000C4A54(v65) >= 1;
        }
      }
      return result;
    case 25:
      if (*a4 != 2) {
        return 0;
      }
      return ((a4[2] - 2) & 0xFFFFFFFD) == 0;
    case 26:
      if (*a4 != 2 || a4[2] != 4) {
        return 0;
      }
      sub_1000CED88(v65, (__int16 *)(a3 + 2 * a4[1]), 5);
      if (a4[2] < 1) {
        return (int)sub_1000C4A54(v65) <= 2010 && (int)sub_1000C4A54(v65) >= 1900;
      }
      uint64_t v33 = 0;
      while (1)
      {
        uint64_t result = sub_1000CDF18(v65[v33]);
        if (!result) {
          break;
        }
        if (++v33 >= a4[2]) {
          return (int)sub_1000C4A54(v65) <= 2010 && (int)sub_1000C4A54(v65) >= 1900;
        }
      }
      return result;
    case 27:
      if (*a4 != 1) {
        return 0;
      }
      int v34 = a4[2];
      if (v34 > 31) {
        return 0;
      }
      if (v34 < 1)
      {
        uint64_t v35 = 0;
      }
      else
      {
        uint64_t v35 = 0;
        do
        {
          v65[v35] = sub_1000CDA88(*(unsigned __int16 *)(a3 + 2 * (v35 + a4[1])));
          ++v35;
        }
        while (v35 < a4[2]);
      }
      v65[v35] = 0;
      uint64_t result = (uint64_t)sub_1000CF5BC(*(unsigned __int16 **)(a1 + 32), v65);
      if (!result) {
        return result;
      }
      if (*(int *)(a1 + 120) < 1) {
        return 0;
      }
      uint64_t v63 = 0;
      uint64_t v64 = 0;
      while (sub_1000CF6D4(v65, *(unsigned __int16 **)(*(void *)(a1 + 128) + v63))
           && sub_1000CF6D4(v65, *(unsigned __int16 **)(*(void *)(a1 + 128) + v63 + 16)))
      {
        ++v64;
        v63 += 32;
        if (v64 >= *(int *)(a1 + 120)) {
          return 0;
        }
      }
      return 1;
    case 28:
      return *a4 == 3 && (*(_WORD *)(a3 + 2 * a4[1]) & 0xFFFD) == 0x2D;
    case 29:
      return *a4 == 3 && *(_WORD *)(a3 + 2 * a4[1]) == 44;
    case 30:
      return *a4 == 3 && *(_WORD *)(a3 + 2 * a4[1]) == 46;
    case 31:
      int v15 = *a4;
      return v15 == 4;
    case 32:
      if (*a4 != 2) {
        return 0;
      }
      int v36 = a4[2];
      if (v36 > 2) {
        return 0;
      }
      sub_1000CED88(v65, (__int16 *)(a3 + 2 * a4[1]), v36 + 1);
      if (a4[2] < 1) {
        return (int)sub_1000C4A54(v65) < 25;
      }
      uint64_t v37 = 0;
      while (1)
      {
        uint64_t result = sub_1000CDF18(v65[v37]);
        if (!result) {
          break;
        }
        if (++v37 >= a4[2]) {
          return (int)sub_1000C4A54(v65) < 25;
        }
      }
      return result;
    case 33:
      if (*a4 != 2) {
        return 0;
      }
      int v38 = a4[2];
      if (v38 > 2) {
        return 0;
      }
      sub_1000CED88(v65, (__int16 *)(a3 + 2 * a4[1]), v38 + 1);
      if (a4[2] < 1) {
        return (int)sub_1000C4A54(v65) < 61;
      }
      uint64_t v39 = 0;
      while (1)
      {
        uint64_t result = sub_1000CDF18(v65[v39]);
        if (!result) {
          break;
        }
        if (++v39 >= a4[2]) {
          return (int)sub_1000C4A54(v65) < 61;
        }
      }
      return result;
    case 34:
      if (*a4 != 2) {
        return 0;
      }
      int v40 = a4[2];
      if (v40 > 2) {
        return 0;
      }
      sub_1000CED88(v65, (__int16 *)(a3 + 2 * a4[1]), v40 + 1);
      if (a4[2] < 1) {
        return (int)sub_1000C4A54(v65) < 61;
      }
      uint64_t v41 = 0;
      break;
    case 35:
      if (a4[2] != 1) {
        return 0;
      }
      uint64_t v42 = (unsigned __int16 *)v7[22];
      if (!v42) {
        return 0;
      }
      int v43 = *(unsigned __int16 *)(a3 + 2 * a4[1]);
      return sub_1000CF020(v42, v43) != 0;
    case 36:
      if (*a4 != 1) {
        return 0;
      }
      int v44 = a4[2];
      if (v44 > 2) {
        return 0;
      }
      if (v44 < 1)
      {
        uint64_t v45 = 0;
      }
      else
      {
        uint64_t v45 = 0;
        do
        {
          v65[v45] = sub_1000CDA88(*(unsigned __int16 *)(a3 + 2 * (v45 + a4[1])));
          ++v45;
        }
        while (v45 < a4[2]);
      }
      v65[v45] = 0;
      if (!sub_1000CF684(v65, L"am")) {
        return 1;
      }
      int v62 = "p";
      return !sub_1000CF684(v65, v62);
    case 37:
      return *a4 == 1
          && a4[2] == 1
          && (sub_1000CDA88(*(unsigned __int16 *)(a3 + 2 * a4[1])) == 97
           || sub_1000CDA88(*(unsigned __int16 *)(a3 + 2 * a4[1])) == 112);
    case 38:
      return *a4 == 1 && a4[2] == 1 && sub_1000CDA88(*(unsigned __int16 *)(a3 + 2 * a4[1])) == 109;
    case 39:
      if (*a4 == 1)
      {
        uint64_t v46 = (unsigned __int16 *)v7[24];
        if (v46)
        {
          if (!sub_1000CFC98((_WORD *)(a3 + 2 * a4[1]), v46, a4[2])) {
            return 1;
          }
        }
      }
      return 0;
    case 40:
      if ((*a4 | 2) != 3) {
        return 0;
      }
      int v47 = a4[2];
      if (v47 > 2) {
        return 0;
      }
      if (v47 < 1)
      {
        uint64_t v48 = 0;
      }
      else
      {
        uint64_t v48 = 0;
        do
        {
          v65[v48] = sub_1000CDA88(*(unsigned __int16 *)(a3 + 2 * (v48 + a4[1])));
          ++v48;
        }
        while (v48 < a4[2]);
      }
      v65[v48] = 0;
      uint64_t v61 = *(unsigned __int16 **)(a1 + 16);
      return sub_1000CF5BC(v61, v65) != 0;
    case 41:
      int v14 = *a4;
      return v14 == 1;
    case 42:
      if (*a4 != 3) {
        return 0;
      }
      int v43 = *(unsigned __int16 *)(a3 + 2 * a4[1]);
      uint64_t v42 = L"$-_@&=;/#?:";
      return sub_1000CF020(v42, v43) != 0;
    case 43:
      if (*a4 != 1) {
        return 0;
      }
      int v49 = a4[2];
      if (v49 > 5) {
        return 0;
      }
      v65[0] = 95;
      if (v49 < 1)
      {
        LODWORD(v50) = 0;
      }
      else
      {
        uint64_t v50 = 0;
        do
        {
          uint64_t v51 = v50;
          unsigned __int16 v52 = sub_1000CDA88(*(unsigned __int16 *)(a3 + 2 * (v50 + a4[1])));
          uint64_t v50 = v51 + 1;
          v65[v51 + 1] = v52;
        }
        while (v51 + 1 < a4[2]);
      }
      v65[(v50 + 1)] = 95;
      v65[(v50 + 2)] = 0;
      uint64_t v61 = *(unsigned __int16 **)(a1 + 64);
      return sub_1000CF5BC(v61, v65) != 0;
    case 44:
      if (*a4 != 1) {
        return 0;
      }
      int v53 = a4[2];
      if (v53 > 5) {
        return 0;
      }
      v65[0] = 95;
      if (v53 < 1)
      {
        LODWORD(v54) = 0;
      }
      else
      {
        uint64_t v54 = 0;
        do
        {
          uint64_t v55 = v54;
          unsigned __int16 v56 = sub_1000CDA88(*(unsigned __int16 *)(a3 + 2 * (v54 + a4[1])));
          uint64_t v54 = v55 + 1;
          v65[v55 + 1] = v56;
        }
        while (v55 + 1 < a4[2]);
      }
      v65[(v54 + 1)] = 95;
      v65[(v54 + 2)] = 0;
      uint64_t v61 = *(unsigned __int16 **)(a1 + 80);
      return sub_1000CF5BC(v61, v65) != 0;
    case 45:
      if (*a4 != 2 || a4[2] > 2) {
        return 0;
      }
      int v57 = sub_1000CED6C(a3 + 2 * a4[1]);
      int v58 = a4[2] + 2;
      if (v58 >= v57) {
        uint64_t v59 = v57;
      }
      else {
        uint64_t v59 = v58;
      }
      v65[0] = 95;
      if ((int)v59 < 1)
      {
        LODWORD(v59) = 0;
      }
      else
      {
        for (uint64_t i = 0; i != v59; ++i)
          v65[i + 1] = sub_1000CDA88(*(unsigned __int16 *)(a3 + 2 * (i + a4[1])));
      }
      v65[(v59 + 1)] = 95;
      v65[(v59 + 2)] = 0;
      uint64_t v61 = *(unsigned __int16 **)(a1 + 48);
      return sub_1000CF5BC(v61, v65) != 0;
    default:
      return 0;
  }
  while (1)
  {
    uint64_t result = sub_1000CDF18(v65[v41]);
    if (!result) {
      break;
    }
    if (++v41 >= a4[2]) {
      return (int)sub_1000C4A54(v65) < 61;
    }
  }
  return result;
}

uint64_t sub_1000B157C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int *a7, int a8, unint64_t a9, int a10)
{
  int v16 = a1;
  uint64_t v17 = (unsigned __int16 *)a9;
  uint64_t v36 = a1[7];
  int v18 = sub_1000CED6C(a9);
  if (v18 < 1) {
    return 0;
  }
  int v19 = v18;
  uint64_t v37 = a6;
  int v38 = a7;
  int v40 = a8;
  uint64_t v20 = 0;
  int v22 = 1;
  while (1)
  {
    if (v19 == 2)
    {
      if (v20 && !v22 && *v17 == 48 && v17[1] == 48) {
        return v20;
      }
      if ((int)sub_1000B55FC(v16, v17, 1, 1, 0, 5, (uint64_t)v43) >= 1)
      {
        sub_1000BA9EC(a2, a3, a4, a5, 0, v37, v38, v40, v43[0], a10, 2, 0, 1);
        return (v20 + 1);
      }
      int v19 = 1;
      if (*v17 != 48 || v22)
      {
        __int16 v41 = *v17;
        __int16 v42 = 0;
        sub_1000B55FC(v16, &v41, 1, 1, 0, 5, (uint64_t)v43);
        sub_1000BA9EC(a2, a3, a4, a5, 0, v37, v38, v40, v43[0], a10, 1, 0, 1);
        uint64_t v20 = (v20 + 1);
      }
      goto LABEL_4;
    }
    if (v19 != 3) {
      break;
    }
    int v23 = *v17;
    if (v23 == 49)
    {
      if (*(_DWORD *)(*(void *)(v36 + 216) + 540))
      {
        int v24 = v16;
        uint64_t v25 = a2;
        uint64_t v26 = a3;
        uint64_t v27 = a4;
        uint64_t v28 = a5;
        uint64_t v29 = v37;
        uint64_t v30 = v38;
      }
      else
      {
        int v31 = L"1";
        uint64_t v30 = v38;
LABEL_25:
        sub_1000B55FC(v16, v31, 1, 1, 0, 5, (uint64_t)v43);
        uint64_t v32 = a2;
        uint64_t v33 = a3;
        uint64_t v34 = a4;
        int v24 = v16;
        uint64_t v25 = a2;
        uint64_t v26 = a3;
        uint64_t v27 = a4;
        uint64_t v28 = a5;
        uint64_t v29 = v37;
        sub_1000BA9EC(v32, v33, v34, a5, 0, v37, v30, v40, v43[0], a10, 1, 0, 1);
        LODWORD(v20) = v20 + 1;
      }
      sub_1000B55FC(v24, *(_WORD **)(*(void *)(v36 + 216) + 48), 0, 1, 0, 5, (uint64_t)v43);
      sub_1000BA9EC(v25, v26, v27, v28, 0, v29, v30, v40, v43[0], a10 + 1, 0, 0, 0);
      int v22 = 0;
      uint64_t v20 = (v20 + 1);
      int v19 = 2;
      a4 = v27;
      a3 = v26;
      a2 = v25;
      int v16 = v24;
      goto LABEL_4;
    }
    if (v23 != 48)
    {
      __int16 v41 = *v17;
      __int16 v42 = 0;
      int v31 = &v41;
      uint64_t v30 = v38;
      goto LABEL_25;
    }
    if (v22)
    {
      int v22 = 1;
      sub_1000B55FC(v16, L"0", 1, 1, 0, 5, (uint64_t)v43);
      sub_1000BA9EC(a2, a3, a4, a5, 0, v37, v38, v40, v43[0], a10, 1, 0, 1);
      uint64_t v20 = (v20 + 1);
    }
    int v19 = 2;
LABEL_4:
    ++v17;
    ++a10;
  }
  if (v19 != 1) {
    return 0;
  }
  sub_1000B55FC(v16, v17, 1, 1, 0, 5, (uint64_t)v43);
  sub_1000BA9EC(a2, a3, a4, a5, 0, v37, v38, v40, v43[0], a10, 1, 0, 1);
  return (v20 + 1);
}

uint64_t sub_1000B1978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000B1994(0, 0, a1, a2, a3, a4);
}

uint64_t sub_1000B1994(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)sub_1000C33A0(33376);
  uint64_t v13 = (uint64_t)v12;
  if (v12)
  {
    if (!qword_100101CC0 || !*(_DWORD *)(qword_100101CC0 + 1164)) {
      return 0;
    }
    memcpy(v12, &off_1000FDF30, 0x208uLL);
    *(void *)(v13 + 376) = a3;
    *(void *)(v13 + 384) = a4;
    if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 3304)) {
      a6 = (a6 << (*(_DWORD *)(qword_100101CC0 + 1780) != 0));
    }
    *(_DWORD *)(v13 + 432) = a6;
    uint64_t v14 = sub_100039154(a3, a4, 0, 0, a6, 3);
    *(void *)(v13 + 528) = v14;
    if (v14)
    {
      uint64_t v15 = sub_100039154(a3, a4, 0, 0, a6, 3);
      *(void *)(v13 + 520) = v15;
      if (v15)
      {
        if (a1)
        {
          int v16 = sub_1000CAD00((unint64_t)a2) + 10;
          int v24 = (unsigned __int8 *)sub_1000CD454(v16, v17, v18, v19, v20, v21, v22, v23);
          *int v24 = 0;
          sub_1000CAE14(v24, a2, v16);
          sub_1000CAE14(v24, "dual", v16);
          *(void *)(v13 + 536) = sub_10003ED14(a1, v24, a3, a4, a5, 0, a6);
          sub_1000CD4D0(v24, v16);
          uint64_t v25 = *(void *)(v13 + 536);
          if (!v25) {
            goto LABEL_17;
          }
        }
        else
        {
          uint64_t v25 = sub_100039154(a3, a4, a5, 0, a6, 5);
          *(void *)(v13 + 536) = v25;
          if (!v25) {
            goto LABEL_17;
          }
        }
        sub_10003E8C4(v25, 0);
        uint64_t v26 = sub_100004148(a4);
        if (qword_100101CC0)
        {
          uint64_t v27 = sub_10005A4F0(v26, *(unsigned int *)(qword_100101CC0 + 4056));
          *(void *)(v13 + 392) = v27;
          if (v27)
          {
LABEL_15:
            *(_DWORD *)(v13 + 400) = 1;
            return v13;
          }
        }
        else
        {
          uint64_t v28 = sub_10005A4F0(v26, 0);
          *(void *)(v13 + 392) = v28;
          if (v28) {
            goto LABEL_15;
          }
        }
      }
    }
LABEL_17:
    sub_100039374(v13, 0);
    return 0;
  }
  return v13;
}

uint64_t sub_1000B1B9C(uint64_t a1, uint64_t a2)
{
  sub_100006A98(*(void *)(a1 + 408));
  uint64_t v4 = *(void *)(a1 + 528);
  if (v4) {
    sub_100039374(v4, a2);
  }
  uint64_t v5 = *(void *)(a1 + 520);
  if (v5) {
    sub_100039374(v5, a2);
  }
  uint64_t v6 = *(void *)(a1 + 536);
  if (v6) {
    sub_100039374(v6, a2);
  }
  if (*(int *)(a1 + 8756) >= 1)
  {
    uint64_t v7 = 0;
    do
      sub_100026244(*(void *)(*(void *)(a1 + 8744) + 8 * v7++));
    while (v7 < *(int *)(a1 + 8756));
  }
  *(_DWORD *)(a1 + 8756) = 0;
  sub_1000C321C(*(void *)(a1 + 8744));
  if (*(_DWORD *)(a1 + 400)) {
    sub_10005A59C(*(void *)(a1 + 392));
  }
  *(void *)(a1 + 392) = 0;
  return sub_1000C321C(a1);
}

BOOL sub_1000B1C58(uint64_t *a1, uint64_t a2, char *a3)
{
  int v5 = sub_1000CAD00((unint64_t)a3) + 10;
  uint64_t v13 = (unsigned char *)sub_1000CD3E8(v5, v6, v7, v8, v9, v10, v11, v12);
  bzero(v13, v5);
  sub_1000CAD88(v13, a3, v5);
  sub_1000CAE14(v13, "dtg/", v5);
  int v14 = sub_10003953C(a1[65]);
  sub_1000CAD88(v13, a3, v5);
  sub_1000CAE14(v13, "dtl/", v5);
  int v15 = sub_10003953C(a1[66]);
  sub_1000CAD88(v13, a3, v5);
  sub_1000CAE14(v13, "dtd/", v5);
  int v16 = sub_10003953C(a1[67]);
  sub_1000CD4D0(v13, v5);
  if (v14) {
    BOOL v17 = v15 == 0;
  }
  else {
    BOOL v17 = 1;
  }
  return !v17 && v16 != 0;
}

uint64_t sub_1000B1D80(uint64_t *a1, uint64_t a2, char *a3)
{
  int v5 = sub_1000CAD00((unint64_t)a3) + 10;
  uint64_t v13 = (unsigned char *)sub_1000CD3E8(v5, v6, v7, v8, v9, v10, v11, v12);
  bzero(v13, v5);
  sub_1000CAD88(v13, a3, v5);
  sub_1000CAE14(v13, "dtg/", v5);
  if (sub_100039550(a1[65])
    && (sub_1000CAD88(v13, a3, v5), sub_1000CAE14(v13, "dtl/", v5), sub_100039550(a1[66])))
  {
    sub_1000CAD88(v13, a3, v5);
    sub_1000CAE14(v13, "dtd/", v5);
    uint64_t v14 = sub_100039550(a1[67]);
  }
  else
  {
    uint64_t v14 = 0;
  }
  sub_1000CD4D0(v13, v5);
  return v14;
}

uint64_t sub_1000B1E9C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, uint64_t a5, int a6, uint64_t a7, unsigned int a8, unsigned int a9, unsigned int a10)
{
  uint64_t v18 = a1 + 33340;
  if (*(int *)(a1 + 8756) >= 1)
  {
    uint64_t v19 = 0;
    do
      sub_100026244(*(void *)(*(void *)(a1 + 8744) + 8 * v19++));
    while (v19 < *(int *)(a1 + 8756));
  }
  *(_DWORD *)(a1 + 8756) = 0;
  if (a6 != 3 && a6 != 10 || !a5) {
    goto LABEL_115;
  }
  if ((int)a5 >= 1)
  {
    uint64_t v20 = a5;
    uint64_t v21 = a4;
    while (**v21 == 3 && *((void *)*v21 + 32) == *((void *)*a4 + 32))
    {
      ++v21;
      if (!--v20) {
        goto LABEL_12;
      }
    }
    goto LABEL_115;
  }
LABEL_12:
  uint64_t v22 = sub_10002BD6C((uint64_t)a4, a5);
  sub_100032488(v22);
  int v23 = sub_10003CDE8(a4, a5);
  *(_DWORD *)(v18 + 8) = a10;
  if ((int)a3 < 1)
  {
    unsigned int v31 = a9;
    *(_DWORD *)(v18 + 32) = 0;
    uint64_t v32 = 1;
    *(_DWORD *)(v18 + 16) = 0;
    int v116 = v23;
    if (v23) {
      goto LABEL_17;
    }
  }
  else
  {
    *(_WORD *)(v18 + 28) = *(_WORD *)(a2 + 2 * (a3 - 1));
    unsigned int v31 = a9;
    *(_DWORD *)(v18 + 32) = 1;
    uint64_t v32 = 1;
    *(_DWORD *)(v18 + 16) = 0;
    int v116 = v23;
    if (v23) {
      goto LABEL_17;
    }
  }
  *(_DWORD *)(v18 + 16) = 1;
  unsigned int v33 = v31;
  uint64_t v34 = sub_1000398F8(*(void *)(a1 + 528), a3, a2, a5, a4, 3, a7, a8, __SPAIR64__(a10, v31));
  unsigned int v31 = v33;
  uint64_t v32 = v34;
  if (!v34)
  {
    sub_100039FBC(*(void *)(a1 + 528));
    return v32;
  }
LABEL_17:
  unint64_t v114 = __PAIR64__(a10, v31);
  uint64_t v115 = a2;
  if ((int)a5 >= 1)
  {
    uint64_t v35 = a5;
    uint64_t v36 = (uint64_t **)a4;
    while (!sub_10002A5E0(*v36, v24, v25, v26, v27, v28, v29, v30))
    {
      ++v36;
      if (!--v35) {
        goto LABEL_21;
      }
    }
    *(_DWORD *)(v18 + 12) = 0;
    int v37 = v116;
    uint64_t v39 = v115;
    unsigned int v40 = HIDWORD(v114);
    if (v116 <= 0) {
      goto LABEL_37;
    }
    goto LABEL_40;
  }
LABEL_21:
  int v37 = v116;
  if (v116 < 1)
  {
    *(_DWORD *)(v18 + 12) = 0;
    goto LABEL_37;
  }
  if (!qword_100101CC0)
  {
    *(_DWORD *)(v18 + 12) = 0;
    uint64_t v39 = v115;
    unsigned int v40 = HIDWORD(v114);
    goto LABEL_40;
  }
  int v38 = *(_DWORD *)(qword_100101CC0 + 5248);
  *(_DWORD *)(v18 + 12) = v38 != 0;
  uint64_t v39 = v115;
  unsigned int v40 = HIDWORD(v114);
  if (!v38)
  {
LABEL_40:
    unsigned int v113 = a7;
    *(_DWORD *)(v18 + 20) = 1;
    int v47 = (_DWORD *)(v18 + 20);
    goto LABEL_41;
  }
  uint64_t v32 = *(void *)(a1 + 8744);
  if (*(_DWORD *)(a1 + 8752) < (int)a5)
  {
    sub_1000C321C(*(void *)(a1 + 8744));
    uint64_t v41 = sub_1000C33A0(8 * (int)a5);
    uint64_t v32 = v41;
    if (!v41)
    {
LABEL_54:
      sub_100039FBC(*(void *)(a1 + 528));
LABEL_116:
      *(_DWORD *)(v18 + 16) = 1;
      return v32;
    }
    *(void *)(a1 + 8744) = v41;
    *(_DWORD *)(a1 + 8752) = a5;
  }
  unsigned int v106 = a8;
  __int16 v42 = *(uint64_t **)(a1 + 376);
  uint64_t v108 = *((void *)*a4 + 32);
  if ((int)a5 >= 1)
  {
    int v110 = *(uint64_t **)(a1 + 376);
    unsigned int v43 = 0;
    uint64_t v44 = a5;
    uint64_t v45 = (uint64_t **)a4;
    while (1)
    {
      int v46 = sub_10002A68C(*v45, 0, v25, v26, v27, v28, v29, v30);
      if (!v46) {
        goto LABEL_115;
      }
      if (v46 > (int)v43) {
        unsigned int v43 = v46;
      }
      ++v45;
      if (!--v44)
      {
        unsigned int v113 = a7;
        unsigned int v104 = a5;
        uint64_t v39 = v115;
        __int16 v42 = v110;
        goto LABEL_56;
      }
    }
  }
  unsigned int v113 = a7;
  unsigned int v104 = 0;
  unsigned int v43 = 0;
LABEL_56:
  int v102 = sub_100031BE8(v108, "<s>");
  unsigned int v101 = sub_100031BE8(v108, "<e>");
  unsigned int v54 = sub_1000B529C(v42);
  int v55 = sub_1000B5A58((uint64_t)v42, v54);
  __int16 v117 = v55;
  if (v55 == 0xFFFF)
  {
    int v83 = sub_1000B589C((uint64_t)v42, v54);
    if (v83 == 0xFFFFFF)
    {
      if (v104 >= 2)
      {
        uint64_t v84 = v104 - 1;
        do
        {
          uint64_t v85 = *(unsigned int **)v32;
          v32 += 8;
          sub_100026244((uint64_t)v85);
          --v84;
        }
        while (v84);
      }
    }
    else
    {
      int v87 = sub_1000BB274(v42, v83);
      __int16 v117 = v87;
      if (v87 != 0xFFFF) {
        goto LABEL_57;
      }
      if (v104 >= 2)
      {
        uint64_t v88 = v104 - 1;
        do
        {
          uint64_t v89 = *(void *)v32;
          v32 += 8;
          sub_100026244(v89);
          --v88;
        }
        while (v88);
      }
    }
LABEL_115:
    sub_100039FBC(*(void *)(a1 + 528));
    uint64_t v32 = 0;
    goto LABEL_116;
  }
LABEL_57:
  uint64_t v100 = 2 * v43;
  int v112 = (__int16 *)sub_1000CD3E8(v100, v56, v57, v58, v59, v60, v61, v62);
  if ((int)a5 >= 1)
  {
    uint64_t v63 = 0;
    int v64 = -1;
    while (1)
    {
      unsigned int v103 = v64;
      uint64_t v65 = sub_100027004("GC", v108, 2 * (int)a5, 2 * (int)a5, 0);
      if (!v65) {
        break;
      }
      uint64_t v66 = v65;
      *(void *)(v32 + 8 * v63) = v65;
      __sprintf_chk(v118, 0, 0x20uLL, "_Generic%d", v63);
      if (!sub_100031F74(v108, v118, 1, 1u, 0, 0, 0))
      {
        if (v63)
        {
          uint64_t v92 = 0;
          do
            sub_100026244(*(void *)(v32 + 8 * v92++));
          while (v63 != v92);
        }
        goto LABEL_115;
      }
      int v73 = sub_10002A68C((uint64_t *)a4[v63], (uint64_t)v112, v67, v68, v69, v70, v71, v72);
      uint64_t v74 = v63;
      if (!v73)
      {
        if (v63)
        {
          uint64_t v93 = 0;
          do
            sub_100026244(*(void *)(v32 + 8 * v93++));
          while (v63 != v93);
        }
        goto LABEL_115;
      }
      int v75 = v73;
      uint64_t v105 = v74;
      __sprintf_chk(v119, 0, 0x20uLL, "_Gate%d", v74);
      if (!sub_100031F74(v108, v119, v75, v75, 0, 0, 0))
      {
        if (v105)
        {
          uint64_t v94 = 0;
          do
            sub_100026244(*(void *)(v32 + 8 * v94++));
          while (v105 != v94);
        }
        goto LABEL_115;
      }
      if (!sub_10003287C(v108, (unsigned __int8 *)v118, &v117, 1, 0, -1))
      {
        if (v105)
        {
          uint64_t v95 = 0;
          do
            sub_100026244(*(void *)(v32 + 8 * v95++));
          while (v105 != v95);
        }
        goto LABEL_115;
      }
      if (v75 >= 1)
      {
        if (!sub_10003287C(v108, (unsigned __int8 *)v119, v112, 1, 0, -1)) {
          goto LABEL_76;
        }
        if (v75 != 1)
        {
          uint64_t v79 = v75 - 1;
          uint64_t v80 = &_mh_execute_header;
          unint64_t v81 = v112 + 1;
          while (*v81 == v112[v80]
               || sub_10003287C(v108, (unsigned __int8 *)v119, v81, 1, 0, -1))
          {
            LODWORD(v80) = v80 + 1;
            ++v81;
            if (!--v79) {
              goto LABEL_67;
            }
          }
LABEL_76:
          if (v105)
          {
            uint64_t v82 = 0;
            do
              sub_100026244(*(void *)(v32 + 8 * v82++));
            while (v105 != v82);
          }
LABEL_79:
          sub_1000CD4D0(v112, v100);
          goto LABEL_115;
        }
      }
LABEL_67:
      unsigned int v76 = sub_100031BE8(v108, (unsigned __int8 *)v119);
      uint64_t v77 = v66;
      if (!sub_100027D30(v66, v102, v76, 0))
      {
        if (v105)
        {
          uint64_t v97 = 0;
          do
            sub_100026244(*(void *)(v32 + 8 * v97++));
          while (v105 != v97);
        }
        goto LABEL_79;
      }
      unsigned int v78 = sub_100031BE8(v108, (unsigned __int8 *)v118);
      if (!sub_100027D30(v77, v76, v78, 0))
      {
        if (v105)
        {
          uint64_t v98 = 0;
          do
            sub_100026244(*(void *)(v32 + 8 * v98++));
          while (v105 != v98);
        }
        goto LABEL_79;
      }
      if (!sub_100027D30(v77, v78, v101, 0))
      {
        if (v105)
        {
          uint64_t v99 = 0;
          do
            sub_100026244(*(void *)(v32 + 8 * v99++));
          while (v105 != v99);
        }
        goto LABEL_79;
      }
      uint64_t v63 = v105 + 1;
      int v64 = v103 + 1;
      uint64_t v39 = v115;
      if (v105 + 1 == a5) {
        goto LABEL_85;
      }
    }
    if ((v63 & 0xFFFFFFFE) != 0)
    {
      uint64_t v90 = v103;
      do
      {
        uint64_t v91 = *(void *)v32;
        v32 += 8;
        sub_100026244(v91);
        --v90;
      }
      while (v90);
    }
    goto LABEL_115;
  }
LABEL_85:
  sub_1000CD4D0(v112, v100);
  *(_DWORD *)(a1 + 8756) = a5;
  *(void *)(a1 + 8744) = v32;
  LODWORD(a7) = v113;
  a8 = v106;
  uint64_t v32 = sub_1000398F8(*(void *)(a1 + 520), a3, v39, a5, (unsigned int **)v32, 3, v113, v106, v114);
  if (!v32)
  {
    sub_1000B402C(a1);
    goto LABEL_116;
  }
  unsigned int v40 = HIDWORD(v114);
  int v37 = v116;
  if (!*(_DWORD *)(v18 + 12)) {
    goto LABEL_40;
  }
  if (!qword_100101CC0)
  {
LABEL_37:
    *(_DWORD *)(v18 + 20) = 0;
LABEL_51:
    *(_DWORD *)(a1 + 8736) = a5;
    j__memmove((void *)(a1 + 544), a4, 8 * (int)a5);
    *(void *)uint64_t v18 = 0;
    *(_DWORD *)(a1 + 464) = 0;
    sub_10005A5F0(*(void *)(a1 + 392));
    return v32;
  }
  int v86 = *(_DWORD *)(qword_100101CC0 + 5244);
  *(_DWORD *)(v18 + 20) = v86 != 0;
  int v47 = (_DWORD *)(v18 + 20);
  if (!v86) {
    goto LABEL_51;
  }
LABEL_41:
  if (a5 != v37)
  {
    unsigned int v111 = a5 - v37;
    uint64_t v109 = v47;
    unsigned int v107 = a8;
    *(_DWORD *)(v18 + 16) = 1;
    if ((int)a5 >= 1)
    {
      int v48 = 0;
      int v49 = 0;
      uint64_t v50 = a4;
      uint64_t v51 = a5;
      do
      {
        while (1)
        {
          int v52 = sub_1000268F0(*v50);
          int v53 = *v50;
          if (v52) {
            break;
          }
          *(void *)(a1 + 8 * v48++ + 16952) = v53;
          ++v50;
          if (!--v51) {
            goto LABEL_49;
          }
        }
        *(void *)(a1 + 8 * v49++ + 8760) = v53;
        ++v50;
        --v51;
      }
      while (v51);
    }
LABEL_49:
    if (!sub_1000398F8(*(void *)(a1 + 536), a3, v115, v116, (unsigned int **)(a1 + 8760), 4, v113, v107, v114))
    {
      sub_100039EA8(*(void *)(a1 + 520), 0);
      sub_1000B402C(a1);
      sub_100039FBC(*(void *)(a1 + 536));
      uint64_t v32 = 0;
      _DWORD *v109 = 1;
      return v32;
    }
    uint64_t v32 = sub_1000398F8(*(void *)(a1 + 528), a3, v115, v111, (unsigned int **)(a1 + 16952), 3, v113, v107, v114);
    if (v32) {
      goto LABEL_51;
    }
    sub_100039EA8(*(void *)(a1 + 520), 0);
    sub_100039EA8(*(void *)(a1 + 536), 0);
    sub_1000B402C(a1);
    goto LABEL_54;
  }
  uint64_t v32 = sub_1000398F8(*(void *)(a1 + 536), a3, v39, a5, a4, 4, v113, a8, __SPAIR64__(v40, v114));
  if (v32) {
    goto LABEL_51;
  }
  sub_100039EA8(*(void *)(a1 + 520), 0);
  sub_1000B402C(a1);
  sub_100039FBC(*(void *)(a1 + 536));
  *int v47 = 1;
  return v32;
}

uint64_t sub_1000B2890(void *a1, int a2, int a3)
{
  uint64_t v6 = a1[65];
  uint64_t v7 = a1[66];
  uint64_t v8 = a1[67];
  uint64_t result = sub_100039574((uint64_t)a1, a2, a3);
  if (result)
  {
    uint64_t v10 = a1 + 4169;
    if (!*v10 || (uint64_t result = sub_100039574(v6, a2, a3), result))
    {
      if (!v10[1] || (uint64_t result = sub_100039574(v7, a2, a3), result))
      {
        if (v10[2])
        {
          return sub_100039574(v8, a2, a3);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000B2954(uint64_t result, const void *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = result;
  uint64_t v6 = *(void *)(result + 520);
  uint64_t v7 = *(void *)(result + 528);
  uint64_t v8 = *(void *)(result + 536);
  size_t v9 = *(int *)(result + 8736);
  uint64_t v58 = 0;
  int v10 = *(_DWORD *)(result + 464);
  if (a2 || v10)
  {
    uint64_t v11 = (_DWORD *)(result + 33336);
    if (*(_DWORD *)(result + 33356))
    {
      BOOL v12 = 1;
      int v13 = *(_DWORD *)(result + 33352);
      uint64_t v14 = qword_100101CC0;
      size_t v56 = v9;
      if (!qword_100101CC0) {
        goto LABEL_11;
      }
    }
    else
    {
      BOOL v12 = *(_DWORD *)(result + 33360) != 0;
      int v13 = *(_DWORD *)(result + 33352);
      uint64_t v14 = qword_100101CC0;
      size_t v56 = v9;
      if (!qword_100101CC0) {
        goto LABEL_11;
      }
    }
    if (*(_DWORD *)(v14 + 5232))
    {
      if (a2)
      {
        if (v13)
        {
          int v13 = 1;
          goto LABEL_24;
        }
        if (!v10)
        {
          int v13 = 0;
          uint64_t v15 = (uint64_t)a2;
          if (v12) {
            goto LABEL_15;
          }
LABEL_24:
          uint64_t result = sub_10005A600(*(void *)(v5 + 392), v4, a3);
          if (!result) {
            return sub_100039FBC(v5);
          }
          goto LABEL_25;
        }
      }
      else
      {
        if (!v10) {
          goto LABEL_102;
        }
        BOOL v12 = 1;
      }
      uint64_t result = sub_10005A674(*(void **)(result + 392), *(_DWORD *)(result + 33344), &v58);
      a3 = v58;
      if (v12)
      {
        uint64_t v15 = result;
        int v13 = 0;
        int v10 = *(_DWORD *)(v5 + 464);
        if (v4) {
          goto LABEL_13;
        }
        goto LABEL_15;
      }
      int v13 = 0;
LABEL_23:
      if (!v4)
      {
LABEL_25:
        if (!v13) {
          goto LABEL_100;
        }
        sub_100039EBC(v6, (uint64_t)v4, (uint64_t)a3);
        uint64_t result = sub_100067478(v6);
        if (!result) {
          goto LABEL_100;
        }
        uint64_t v54 = v7;
        uint64_t v55 = v8;
        int v23 = (uint64_t *)(v5 + 544);
        uint64_t v24 = v56;
        uint64_t v25 = sub_1000CD454(v56, v16, v17, v18, v19, v20, v21, v22);
        sub_1000678C8(v6, (uint64_t)v25);
        uint64_t result = sub_100039EA8(v6, 0);
        if (*(int *)(v5 + 8756) >= 1)
        {
          uint64_t v26 = 0;
          do
            uint64_t result = sub_100026244(*(void *)(*(void *)(v5 + 8744) + 8 * v26++));
          while (v26 < *(int *)(v5 + 8756));
        }
        *(_DWORD *)(v5 + 8756) = 0;
        *(_DWORD *)(v5 + 33352) = 0;
        if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 5244))
        {
          if ((int)v56 < 1)
          {
            int v27 = 0;
            uint64_t v36 = v55;
            uint64_t v11 = (_DWORD *)(v5 + 33336);
            uint64_t v37 = v54;
          }
          else
          {
            int v27 = 0;
            int v28 = 0;
            do
            {
              int v29 = *(unsigned __int8 *)v25;
              uint64_t v25 = (void *)((char *)v25 + 1);
              if (v29)
              {
                uint64_t result = sub_10002A5D8(*v23);
                if (result) {
                  int v28 = 1;
                }
                else {
                  int v27 = 1;
                }
              }
              ++v23;
              --v24;
            }
            while (v24);
            uint64_t v36 = v55;
            uint64_t v11 = (_DWORD *)(v5 + 33336);
            uint64_t v37 = v54;
            if (v28) {
              goto LABEL_76;
            }
          }
          if (v11[6])
          {
            uint64_t result = sub_100039EA8(v36, 0);
            v11[6] = 0;
            if (v11[5]) {
              uint64_t result = sub_100039F40(v37);
            }
          }
LABEL_76:
          if (!v27 && v11[5] && (!qword_100101CC0 || !*(_DWORD *)(qword_100101CC0 + 5256)))
          {
            uint64_t result = sub_100039EA8(v37, 0);
            v11[5] = 0;
            if (v11[6]) {
              uint64_t result = sub_100039F40(v36);
            }
          }
          goto LABEL_100;
        }
        int v53 = v4;
        uint64_t v57 = (unsigned int **)(v5 + 25144);
        if ((int)v56 < 1)
        {
          uint64_t v31 = 0;
          int v30 = 0;
        }
        else
        {
          int v30 = 0;
          uint64_t v31 = 0;
          uint64_t v32 = v56;
          unsigned int v33 = (unsigned __int8 *)v25;
          uint64_t v34 = (uint64_t *)(v5 + 544);
          do
          {
            if (*v33++)
            {
              v57[(int)v31] = (unsigned int *)*v34;
              if (sub_10002A5D8(*v34)) {
                int v30 = 1;
              }
              uint64_t v31 = (v31 + 1);
            }
            ++v34;
            --v32;
          }
          while (v32);
        }
        uint64_t result = (uint64_t)sub_1000CD4D0(v25, v56);
        uint64_t v11 = (_DWORD *)(v5 + 33336);
        *(_DWORD *)(v5 + 33336) = v31;
        *(_DWORD *)(v5 + 33352) = 0;
        *(_DWORD *)(v5 + 33364) = v30;
        if (v30)
        {
          uint64_t v4 = v53;
          if (!qword_100101CC0)
          {
            *(_DWORD *)(v5 + 33360) = v30;
            uint64_t v41 = (_DWORD *)(v5 + 33360);
            *(_DWORD *)(v5 + 33356) = 0;
            uint64_t v42 = v54;
            uint64_t v43 = v55;
LABEL_87:
            LODWORD(v52) = 0;
            HIDWORD(v52) = *(_DWORD *)(v5 + 33348);
            uint64_t result = sub_1000398F8(v43, *(unsigned int *)(v5 + 33372), v5 + 33368, v31, v57, 4, 0, 1u, v52);
            if (result) {
              goto LABEL_88;
            }
            if (*(_DWORD *)(v5 + 33356)) {
              sub_100039EA8(v42, 0);
            }
            return sub_100039FBC(v5);
          }
          int v38 = *(_DWORD *)(qword_100101CC0 + 5256);
          BOOL v39 = v38 == 0;
          if (v38) {
            uint64_t v31 = v56;
          }
          else {
            uint64_t v31 = v31;
          }
          unsigned int v40 = (unsigned int **)(v5 + 25144);
          if (!v39) {
            unsigned int v40 = (unsigned int **)(v5 + 544);
          }
          uint64_t v57 = v40;
          *(_DWORD *)(v5 + 33360) = v30;
          uint64_t v41 = (_DWORD *)(v5 + 33360);
          *(_DWORD *)(v5 + 33356) = 0;
          uint64_t v42 = v54;
          goto LABEL_57;
        }
        uint64_t v4 = v53;
        if (!qword_100101CC0
          || ((v44 = *(_DWORD *)(qword_100101CC0 + 5260)) != 0 ? (uint64_t v31 = 0) : (uint64_t v31 = v31),
              v44 ? (BOOL v45 = (int)v56 < 1) : (BOOL v45 = 1),
              v45))
        {
          uint64_t v42 = v54;
          uint64_t v43 = v55;
          uint64_t v41 = (_DWORD *)(v5 + 33360);
          *(void *)(v5 + 33356) = 1;
        }
        else
        {
          uint64_t v31 = 0;
          do
          {
            uint64_t result = sub_10002A5D8(*v23);
            if (!result)
            {
              v57[(int)v31] = (unsigned int *)*v23;
              uint64_t v31 = (v31 + 1);
            }
            ++v23;
            --v24;
          }
          while (v24);
          int v50 = *(_DWORD *)(v5 + 33364);
          *(_DWORD *)(v5 + 33360) = v50;
          uint64_t v41 = (_DWORD *)(v5 + 33360);
          *(_DWORD *)(v5 + 33356) = v50 == 0;
          uint64_t v42 = v54;
          uint64_t v43 = v55;
          if (v50)
          {
LABEL_57:
            if (qword_100101CC0)
            {
              uint64_t v43 = v55;
              if (*(_DWORD *)(qword_100101CC0 + 5236)) {
                uint64_t result = sub_1000393F8(v42);
              }
            }
            else
            {
              uint64_t v43 = v55;
            }
LABEL_86:
            if (!*v41)
            {
              if (qword_100101CC0 && *(_DWORD *)(qword_100101CC0 + 5236)) {
                uint64_t result = sub_1000393F8(v43);
              }
LABEL_88:
              if ((*(_DWORD *)(v5 + 33340) & 0x80000000) == 0)
              {
                int v46 = -1;
                do
                {
                  uint64_t v47 = sub_10005A674(*(void **)(v5 + 392), v46 + 1, &v58);
                  sub_1000B407C(v5, v47, (uint64_t)v58);
                  int v48 = (uint64_t *)(v5 + 520);
                  if (*(_DWORD *)(v5 + 33352)) {
                    goto LABEL_97;
                  }
                  if (*(_DWORD *)(v5 + 33356))
                  {
                    uint64_t result = sub_100039F98(*(void *)(v5 + 528));
                    if (*(_DWORD *)(v5 + 33356) && result) {
                      return sub_100039FBC(v5);
                    }
                  }
                  else
                  {
                    uint64_t result = 1;
                  }
                  int v48 = (uint64_t *)(v5 + 536);
                  if (*v41) {
LABEL_97:
                  }
                    uint64_t result = sub_100039F98(*v48);
                  if (result) {
                    return sub_100039FBC(v5);
                  }
                  ++v46;
                }
                while (v46 < *(_DWORD *)(v5 + 33340));
              }
LABEL_100:
              if (v4)
              {
                int v49 = v11[1] + 1;
                v11[1] = v49;
LABEL_103:
                *(_DWORD *)(v5 + 464) = v11[2] < v49;
                return result;
              }
LABEL_102:
              int v49 = v11[1];
              goto LABEL_103;
            }
            goto LABEL_87;
          }
        }
        LODWORD(v51) = 0;
        HIDWORD(v51) = *(_DWORD *)(v5 + 33348);
        uint64_t result = sub_1000398F8(v42, *(unsigned int *)(v5 + 33372), v5 + 33368, v31, v57, 3, 0, 1u, v51);
        if (result) {
          goto LABEL_86;
        }
        return sub_100039FBC(v5);
      }
      goto LABEL_24;
    }
LABEL_11:
    uint64_t v15 = (uint64_t)a2;
    if (v12)
    {
      if (a2)
      {
LABEL_13:
        if (v10 && !sub_10005A600(*(void *)(v5 + 392), v4, a3)) {
          return sub_100039FBC(v5);
        }
      }
LABEL_15:
      uint64_t result = sub_1000B407C(v5, v15, (uint64_t)a3);
      goto LABEL_25;
    }
    goto LABEL_23;
  }
  return result;
}

uint64_t sub_1000B2F60(uint64_t a1)
{
  uint64_t v1 = a1 + 33352;
  uint64_t v2 = *(void *)(a1 + 528);
  uint64_t v3 = *(void *)(a1 + 536);
  if (*(_DWORD *)(a1 + 33352))
  {
    uint64_t v4 = *(void *)(a1 + 520);
    if (!qword_100101CC0 || !*(_DWORD *)(qword_100101CC0 + 5244)) {
      goto LABEL_15;
    }
  }
  int v6 = *(_DWORD *)(v1 + 4);
  int v5 = *(_DWORD *)(v1 + 8);
  if (!v6)
  {
    uint64_t v4 = v3;
    if (v5)
    {
LABEL_15:
      return sub_100039EB4(v4);
    }
    return 3;
  }
  if (!v5)
  {
    uint64_t v4 = v2;
    return sub_100039EB4(v4);
  }
  int v7 = sub_100039EB4(v2);
  int v8 = sub_100039EB4(v3);
  if (v7 == 3 || v8 == 3) {
    return 3;
  }
  int v10 = v8;
  uint64_t result = 2;
  if (v7 != 2 && v10 != 2)
  {
    int v12 = sub_100039670(v2);
    if (v12 >= (int)sub_100039670(v3)) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = v2;
    }
    goto LABEL_15;
  }
  return result;
}

uint64_t sub_1000B3068(uint64_t a1)
{
  return *(__int16 *)(a1 + 33340);
}

uint64_t sub_1000B3074(uint64_t a1)
{
  uint64_t v1 = a1 + 33352;
  if (*(_DWORD *)(a1 + 33352)) {
    return sub_100039F50(*(void *)(a1 + 520));
  }
  uint64_t v3 = *(void *)(a1 + 536);
  if (!*(_DWORD *)(a1 + 33356))
  {
    uint64_t result = 2;
    if (!*(_DWORD *)(v1 + 8)) {
      return result;
    }
    return sub_100039F50(v3);
  }
  uint64_t result = sub_100039F50(*(void *)(a1 + 528));
  if (result != 2 && *(_DWORD *)(v1 + 8)) {
    return sub_100039F50(v3);
  }
  return result;
}

uint64_t sub_1000B3110(uint64_t *a1)
{
  sub_100039FBC(a1[65]);
  sub_100039FBC(a1[66]);
  uint64_t v2 = a1[67];
  return sub_100039FBC(v2);
}

uint64_t sub_1000B3154(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4, uint64_t a5, _DWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14)
{
  uint64_t v19 = (_DWORD *)(a1 + 33352);
  uint64_t v20 = *(void *)(a1 + 520);
  uint64_t v21 = *(void *)(a1 + 528);
  uint64_t v22 = (uint64_t *)(a1 + 536);
  uint64_t v23 = *(void *)(a1 + 536);
  int v24 = *(_DWORD *)(a1 + 33352);
  uint64_t v25 = v20;
  if (!v24)
  {
    if (v19[1])
    {
      BOOL v26 = sub_100039F98(v21);
      if (v19[1]) {
        BOOL v27 = !v26;
      }
      else {
        BOOL v27 = 1;
      }
      if (!v27) {
        return 0;
      }
      if (!v19[2])
      {
LABEL_9:
        if (!v26) {
          goto LABEL_16;
        }
        return 0;
      }
    }
    else
    {
      BOOL v26 = 1;
      if (!v19[2]) {
        goto LABEL_9;
      }
    }
    uint64_t v25 = *v22;
  }
  if (sub_100039F98(v25)) {
    return 0;
  }
LABEL_16:
  if (*v19 && (!qword_100101CC0 || !*(_DWORD *)(qword_100101CC0 + 5244))) {
    return sub_100039D00(v20, a13, a14, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, 0);
  }
  if (v19[1])
  {
    if (v19[2])
    {
      uint64_t v117 = sub_1000CD550();
      int v30 = sub_100039EB4(v21);
      int v31 = sub_100039EB4(v23);
      if (v30 == 5)
      {
        int v132 = 0;
        int v135 = 0;
        uint64_t v130 = 0;
        unint64_t v131 = 0;
        unint64_t v128 = 0;
        unint64_t v129 = 0;
        unint64_t v127 = 0;
        unint64_t v125 = 0;
        unint64_t v126 = 0;
        uint64_t v116 = 0;
        BOOL v39 = (uint64_t *)(a1 + 520);
        if (v31 != 5) {
          goto LABEL_23;
        }
        goto LABEL_51;
      }
      int v134 = v31;
      int v135 = (_DWORD *)sub_1000CD3E8(4 * (int)a2, v32, v33, v34, v35, v36, v37, v38);
      unint64_t v131 = sub_1000CD3E8(2 * (int)a2, v69, v70, v71, v72, v73, v74, v75);
      uint64_t v130 = (_DWORD *)sub_1000CD3E8(4 * (int)a5, v76, v77, v78, v79, v80, v81, v82);
      unint64_t v129 = sub_1000CD3E8((int)a5, v83, v84, v85, v86, v87, v88, v89);
      if (a11)
      {
        unint64_t v128 = sub_1000CD3E8(2 * (int)a5, v90, v91, v92, v93, v94, v95, v96);
        uint64_t v97 = 4 * (int)a5;
        if (a8) {
          goto LABEL_34;
        }
      }
      else
      {
        unint64_t v128 = 0;
        uint64_t v97 = 4 * (int)a5;
        if (a8)
        {
LABEL_34:
          unint64_t v127 = sub_1000CD3E8(v97, v90, v91, v92, v93, v94, v95, v96);
          if (a9) {
            goto LABEL_35;
          }
          goto LABEL_47;
        }
      }
      unint64_t v127 = 0;
      if (a9)
      {
LABEL_35:
        unint64_t v126 = sub_1000CD3E8(v97, v90, v91, v92, v93, v94, v95, v96);
        uint64_t v98 = (int)a5;
        if (a10) {
          goto LABEL_36;
        }
        goto LABEL_48;
      }
LABEL_47:
      unint64_t v126 = 0;
      uint64_t v98 = (int)a5;
      if (a10)
      {
LABEL_36:
        unint64_t v125 = sub_1000CD3E8(v98, v90, v91, v92, v93, v94, v95, v96);
        if (a12)
        {
LABEL_37:
          unint64_t v99 = sub_1000CD3E8(8 * (int)a2, v90, v91, v92, v93, v94, v95, v96);
          goto LABEL_50;
        }
LABEL_49:
        unint64_t v99 = 0;
LABEL_50:
        uint64_t v116 = v99;
        int v132 = sub_100039D00(v21, a13, a14, a2, v135, v131, a5, v130, v129, v127, v126, v125, v128, v99, 0);
        BOOL v39 = (uint64_t *)(a1 + 520);
        if (v134 != 5)
        {
LABEL_23:
          unint64_t v114 = v39;
          char v133 = (_DWORD *)sub_1000CD3E8(4 * (int)a2, v32, v33, v34, v35, v36, v37, v38);
          unint64_t v124 = sub_1000CD3E8(2 * (int)a2, v40, v41, v42, v43, v44, v45, v46);
          unsigned int v123 = (_DWORD *)sub_1000CD3E8(4 * (int)a5, v47, v48, v49, v50, v51, v52, v53);
          unint64_t v122 = sub_1000CD3E8((int)a5, v54, v55, v56, v57, v58, v59, v60);
          if (a11)
          {
            unint64_t v121 = sub_1000CD3E8(2 * (int)a5, v61, v62, v63, v64, v65, v66, v67);
            if (a8) {
              goto LABEL_25;
            }
          }
          else
          {
            unint64_t v121 = 0;
            if (a8)
            {
LABEL_25:
              unint64_t v120 = sub_1000CD3E8(4 * (int)a5, v61, v62, v63, v64, v65, v66, v67);
              if (a9) {
                goto LABEL_26;
              }
              goto LABEL_40;
            }
          }
          unint64_t v120 = 0;
          if (a9)
          {
LABEL_26:
            unint64_t v119 = sub_1000CD3E8(4 * (int)a5, v61, v62, v63, v64, v65, v66, v67);
            if (a10) {
              goto LABEL_27;
            }
            goto LABEL_41;
          }
LABEL_40:
          unint64_t v119 = 0;
          if (a10)
          {
LABEL_27:
            unint64_t v118 = sub_1000CD3E8((int)a5, v61, v62, v63, v64, v65, v66, v67);
            if (a12)
            {
LABEL_28:
              unint64_t v68 = sub_1000CD3E8(8 * (int)a2, v61, v62, v63, v64, v65, v66, v67);
              goto LABEL_43;
            }
LABEL_42:
            unint64_t v68 = 0;
LABEL_43:
            uint64_t v115 = v68;
            int v100 = sub_100039D00(v23, a13, a14, a2, v133, v124, a5, v123, v122, v120, v119, v118, v121, v68, 0);
            BOOL v39 = v114;
            if (*v19) {
              goto LABEL_58;
            }
            goto LABEL_52;
          }
LABEL_41:
          unint64_t v118 = 0;
          if (a12) {
            goto LABEL_28;
          }
          goto LABEL_42;
        }
LABEL_51:
        int v100 = 0;
        char v133 = 0;
        unsigned int v123 = 0;
        unint64_t v124 = 0;
        unint64_t v121 = 0;
        unint64_t v122 = 0;
        unint64_t v119 = 0;
        unint64_t v120 = 0;
        unint64_t v118 = 0;
        uint64_t v115 = 0;
        if (*v19) {
          goto LABEL_58;
        }
LABEL_52:
        if (v19[1])
        {
          BOOL v101 = sub_100039F98(*(void *)(a1 + 528));
          if (v19[1] && v101) {
            goto LABEL_60;
          }
        }
        else
        {
          BOOL v101 = 1;
        }
        BOOL v39 = v22;
        if (!v19[2])
        {
LABEL_59:
          if (v101)
          {
LABEL_60:
            sub_1000CD534(v117);
            return 0;
          }
          uint64_t v141 = 0;
          v142[0] = 0;
          uint64_t v139 = 0;
          int v140 = 0;
          if ((int)a2 < 1)
          {
            uint64_t v28 = 0;
            uint64_t v110 = v117;
LABEL_78:
            sub_1000CD534(v110);
            return v28;
          }
          int v102 = v139;
          int v103 = HIDWORD(v139);
          BOOL v104 = (int)v139 < v100;
          BOOL v105 = SHIDWORD(v139) < v132;
          if (SHIDWORD(v139) >= v132)
          {
            uint64_t v107 = a4;
            uint64_t v106 = (uint64_t)a6;
            uint64_t v108 = a12;
            uint64_t v109 = (uint64_t)a3;
            uint64_t v110 = v117;
            if ((int)v139 < v100) {
              goto LABEL_67;
            }
            uint64_t v28 = 0;
            goto LABEL_78;
          }
          uint64_t v107 = a4;
          uint64_t v106 = (uint64_t)a6;
          uint64_t v108 = a12;
          uint64_t v109 = (uint64_t)a3;
          uint64_t v110 = v117;
          while (1)
          {
LABEL_67:
            if (v105)
            {
              int v111 = v135[v103];
              uint64_t v112 = a11;
              if (!v104) {
                goto LABEL_69;
              }
            }
            else
            {
              int v111 = 0x40000000;
              uint64_t v112 = a11;
              if (!v104)
              {
LABEL_69:
                if (v111 >= 0x40000000) {
                  goto LABEL_70;
                }
                goto LABEL_73;
              }
            }
            if (v111 >= v133[v102])
            {
LABEL_70:
              int v113 = sub_1000B41D0(a5, v109, v107, v106, a7, a8, a9, a10, v112, v108, v142, &v140, (uint64_t)v133, v124, (uint64_t)v123, v122, v120, v119, v118,
                       v121,
                       v115,
                       (int *)&v141,
                       (int *)&v139);
              goto LABEL_74;
            }
LABEL_73:
            int v113 = sub_1000B41D0(a5, v109, v107, v106, a7, a8, a9, a10, v112, v108, v142, &v140, (uint64_t)v135, v131, (uint64_t)v130, v129, v127, v126, v125,
                     v128,
                     v116,
                     (int *)&v141 + 1,
                     (int *)&v139 + 1);
LABEL_74:
            uint64_t v28 = v140;
            if (v113)
            {
              if (v140 < (int)a2)
              {
                int v102 = v139;
                int v103 = HIDWORD(v139);
                BOOL v104 = (int)v139 < v100;
                BOOL v105 = SHIDWORD(v139) < v132;
                uint64_t v108 = a12;
                if (SHIDWORD(v139) < v132 || (int)v139 < v100) {
                  continue;
                }
              }
            }
            goto LABEL_78;
          }
        }
LABEL_58:
        BOOL v101 = sub_100039F98(*v39);
        goto LABEL_59;
      }
LABEL_48:
      unint64_t v125 = 0;
      if (a12) {
        goto LABEL_37;
      }
      goto LABEL_49;
    }
    uint64_t v23 = v21;
  }
  return sub_100039D00(v23, a13, a14, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, 0);
}

uint64_t sub_1000B379C(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 33352))
  {
    uint64_t v1 = *(void *)(a1 + 520);
  }
  else
  {
    uint64_t v1 = *(void *)(a1 + 536);
    if (*(_DWORD *)(a1 + 33356))
    {
      uint64_t v3 = *(void *)(a1 + 528);
      if (*(_DWORD *)(a1 + 33360))
      {
        int v4 = sub_100039670(*(void *)(a1 + 528));
        if (v4 < (int)sub_100039670(v1)) {
          uint64_t v1 = v3;
        }
      }
      else
      {
        uint64_t v1 = *(void *)(a1 + 528);
      }
    }
  }
  return sub_100039EA0(v1);
}

uint64_t sub_1000B3870(uint64_t *a1)
{
  sub_10003A230(a1[65]);
  sub_10003A230(a1[66]);
  uint64_t v2 = a1[67];
  return sub_10003A230(v2);
}

uint64_t sub_1000B38B4(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 33352))
  {
    uint64_t v1 = *(void *)(a1 + 520);
  }
  else
  {
    uint64_t v1 = *(void *)(a1 + 536);
    if (*(_DWORD *)(a1 + 33356))
    {
      uint64_t v3 = *(void *)(a1 + 528);
      if (*(_DWORD *)(a1 + 33360))
      {
        int v4 = sub_100039670(*(void *)(a1 + 528));
        if (v4 < (int)sub_100039670(v1)) {
          uint64_t v1 = v3;
        }
      }
      else
      {
        uint64_t v1 = *(void *)(a1 + 528);
      }
    }
  }
  return sub_10003A064(v1);
}

uint64_t sub_1000B3958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, int a8)
{
  uint64_t v9 = a1 + 33352;
  uint64_t v10 = *(void *)(a1 + 528);
  uint64_t v11 = *(void *)(a1 + 536);
  if (*(_DWORD *)(a1 + 33352))
  {
    int v12 = (uint64_t *)(a1 + 520);
    goto LABEL_14;
  }
  if (!*(_DWORD *)(a1 + 33356))
  {
    BOOL v13 = 1;
    if (!*(_DWORD *)(v9 + 8)) {
      goto LABEL_10;
    }
LABEL_13:
    int v12 = (uint64_t *)(a1 + 536);
LABEL_14:
    if (!sub_100039F98(*v12)) {
      goto LABEL_15;
    }
    return 0;
  }
  BOOL v13 = sub_100039F98(*(void *)(a1 + 528));
  if (*(_DWORD *)(v9 + 4)) {
    BOOL v14 = !v13;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14) {
    return 0;
  }
  if (*(_DWORD *)(v9 + 8)) {
    goto LABEL_13;
  }
LABEL_10:
  if (v13) {
    return 0;
  }
LABEL_15:
  if (*(_DWORD *)(v9 + 4))
  {
    if (*(_DWORD *)(v9 + 8))
    {
      int v16 = sub_100039670(v10);
      if (v16 < (int)sub_100039670(v11)) {
        uint64_t v11 = v10;
      }
    }
    else
    {
      uint64_t v11 = v10;
    }
  }
  return sub_10003A018(v11, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1000B3AB4(uint64_t a1)
{
  uint64_t v1 = a1 + 33352;
  uint64_t v2 = *(void *)(a1 + 528);
  uint64_t v3 = *(void *)(a1 + 536);
  if (*(_DWORD *)(a1 + 33352))
  {
    uint64_t v4 = *(void *)(a1 + 520);
    if (!qword_100101CC0 || !*(_DWORD *)(qword_100101CC0 + 5244))
    {
LABEL_16:
      return sub_10003A078(v4);
    }
  }
  if (!*(_DWORD *)(v1 + 4))
  {
    uint64_t v4 = v3;
    goto LABEL_16;
  }
  if (!*(_DWORD *)(v1 + 8))
  {
    uint64_t v4 = v2;
    goto LABEL_16;
  }
  int v5 = sub_100039670(v2);
  int v8 = sub_100039670(v3);
  if (v5 >= v8) {
    uint64_t v6 = v3;
  }
  else {
    uint64_t v6 = v2;
  }
  uint64_t result = sub_10003A078(v6);
  if (result == -1)
  {
    if (v5 >= v8) {
      uint64_t v4 = v2;
    }
    else {
      uint64_t v4 = v3;
    }
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_1000B3C3C(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = (int *)(result + 33340);
  if (*(_DWORD *)(result + 33352)) {
    uint64_t result = sub_100039EA8(*(void *)(result + 520), a2);
  }
  uint64_t v11 = 0;
  if (*(int *)(v3 + 8756) >= 1)
  {
    uint64_t v5 = 0;
    do
      uint64_t result = sub_100026244(*(void *)(*(void *)(v3 + 8744) + 8 * v5++));
    while (v5 < *(int *)(v3 + 8756));
  }
  *(_DWORD *)(v3 + 8756) = 0;
  uint64_t v6 = (uint64_t *)(v3 + 536);
  while (1)
  {
    int v7 = v4[1];
    if (v7 >= *v4) {
      break;
    }
    uint64_t v8 = sub_10005A674(*(void **)(v3 + 392), v7, &v11);
    sub_1000B407C(v3, v8, v11);
    uint64_t v9 = (uint64_t *)(v3 + 520);
    if (v4[3]) {
      goto LABEL_7;
    }
    if (!v4[4])
    {
      uint64_t result = 1;
      uint64_t v9 = (uint64_t *)(v3 + 536);
      if (!v4[5]) {
        goto LABEL_8;
      }
LABEL_7:
      uint64_t result = sub_100039F98(*v9);
      goto LABEL_8;
    }
    uint64_t result = sub_100039F98(*(void *)(v3 + 528));
    if (v4[4] && result) {
      goto LABEL_27;
    }
    uint64_t v9 = (uint64_t *)(v3 + 536);
    if (v4[5]) {
      goto LABEL_7;
    }
LABEL_8:
    if (result) {
      goto LABEL_27;
    }
  }
  if (v4[4])
  {
    sub_100039EA8(*(void *)(v3 + 528), a2);
    uint64_t result = sub_100039F98(*(void *)(v3 + 528));
    if (result)
    {
      v4[4] = 0;
      if (v4[5])
      {
        uint64_t result = sub_100039F40(*v6);
        goto LABEL_22;
      }
LABEL_27:
      uint64_t v10 = v3;
      return sub_100039FBC(v10);
    }
  }
LABEL_22:
  if (v4[5])
  {
    sub_100039EA8(*v6, a2);
    uint64_t result = sub_100039F98(*v6);
    if (result)
    {
      v4[5] = 0;
      if (!v4[4]) {
        goto LABEL_27;
      }
    }
  }
  if (!v4[3]) {
    return result;
  }
  sub_100039FBC(*(void *)(v3 + 520));
  sub_100039FBC(*(void *)(v3 + 528));
  uint64_t v10 = *(void *)(v3 + 536);
  return sub_100039FBC(v10);
}

uint64_t sub_1000B3DE0(uint64_t a1)
{
  return sub_10003964C(*(void *)(a1 + 536));
}

uint64_t sub_1000B3DE8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 33360);
  if (*(_DWORD *)(a1 + 33356))
  {
    int v3 = sub_100039A88(*(void *)(a1 + 528));
    int v4 = v3;
    if (!v2) {
      return (__int16)v4;
    }
    if (v3 != -1)
    {
      int v5 = sub_100039A88(*(void *)(a1 + 536));
      if (v4 <= v5) {
        __int16 v6 = v5;
      }
      else {
        __int16 v6 = v4;
      }
      if (v5 == -1) {
        LOWORD(v4) = -1;
      }
      else {
        LOWORD(v4) = v6;
      }
      return (__int16)v4;
    }
    return 0xFFFFFFFFLL;
  }
  if (!v2) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v8 = *(void *)(a1 + 536);
  return sub_100039A88(v8);
}

uint64_t sub_1000B3E94(uint64_t a1)
{
  return sub_100039564(*(void *)(a1 + 536));
}

uint64_t sub_1000B3E9C(uint64_t *a1)
{
  sub_1000396A8(a1[65]);
  sub_1000396A8(a1[66]);
  uint64_t v2 = a1[67];
  return sub_1000396A8(v2);
}

uint64_t sub_1000B3EEC(uint64_t a1)
{
  uint64_t result = sub_10003A0B4(*(void *)(a1 + 528));
  if (result) {
    return sub_10003A0B4(*(void *)(a1 + 536)) != 0;
  }
  return result;
}

uint64_t sub_1000B3F30(uint64_t *a1)
{
  uint64_t result = sub_10003A0C8(a1[65]);
  if (result)
  {
    uint64_t result = sub_10003A0C8(a1[66]);
    if (result) {
      return sub_10003A0C8(a1[67]) != 0;
    }
  }
  return result;
}

uint64_t sub_1000B3F84(uint64_t *a1)
{
  uint64_t result = sub_10003A0DC(a1[65]);
  if (result)
  {
    uint64_t result = sub_10003A0DC(a1[66]);
    if (result) {
      return sub_10003A0DC(a1[67]) != 0;
    }
  }
  return result;
}

uint64_t sub_1000B3FD8(uint64_t *a1)
{
  uint64_t result = sub_10003A0F0(a1[65]);
  if (result)
  {
    uint64_t result = sub_10003A0F0(a1[66]);
    if (result) {
      return sub_10003A0F0(a1[67]) != 0;
    }
  }
  return result;
}

uint64_t sub_1000B402C(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8756) >= 1)
  {
    uint64_t v2 = 0;
    do
      uint64_t result = sub_100026244(*(void *)(*(void *)(v1 + 8744) + 8 * v2++));
    while (v2 < *(int *)(v1 + 8756));
  }
  *(_DWORD *)(v1 + 8756) = 0;
  return result;
}

uint64_t sub_1000B407C(uint64_t result, uint64_t a2, uint64_t a3)
{
  int v5 = (int *)(result + 33344);
  uint64_t v6 = *(void *)(result + 536);
  int v7 = *(_DWORD *)(result + 33360);
  if (!*(_DWORD *)(result + 33356))
  {
    if (!v7) {
      goto LABEL_20;
    }
    uint64_t v10 = *(void *)(result + 536);
LABEL_19:
    uint64_t result = sub_100039EBC(v10, a2, a3);
    goto LABEL_20;
  }
  uint64_t v8 = *(void *)(result + 528);
  if (!v7)
  {
    uint64_t v10 = *(void *)(result + 528);
    goto LABEL_19;
  }
  if (*v5 < 1
    || (sub_100039670(*(void *)(result + 528)), sub_100039698(v6),
                                                  sub_100039670(v6),
                                                  uint64_t result = sub_100039698(v8),
                                                  v5[3]))
  {
    sub_100039EBC(v8, a2, a3);
    uint64_t result = sub_100039EB4(v8);
    if (result == 5 || result == 3)
    {
      sub_100039EA8(v8, 0);
      v5[3] = 0;
      uint64_t result = sub_100039F40(v6);
    }
  }
  if (v5[4])
  {
    sub_100039EBC(v6, a2, a3);
    uint64_t result = sub_100039EB4(v6);
    if (result == 5 || result == 3)
    {
      uint64_t result = sub_100039EA8(v6, 0);
      v5[4] = 0;
      if (v5[3]) {
        uint64_t result = sub_100039F40(v8);
      }
    }
  }
LABEL_20:
  ++*v5;
  return result;
}

uint64_t sub_1000B41D0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int *a11, int *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int *a22,int *a23)
{
  uint64_t v23 = 0;
  LODWORD(v24) = 0;
  LODWORD(v25) = 0;
  uint64_t v26 = *a11;
  uint64_t v27 = *a22;
  uint64_t v28 = *a12;
  uint64_t v29 = *a23;
  do
  {
    int v30 = *(_DWORD *)(a15 + 4 * v27 + v23);
    size_t v25 = (v25 + 2);
    size_t v24 = (v24 + 1);
    v23 += 4;
  }
  while (v30 != -1);
  if ((int)v26 + (int)v24 > a1) {
    return 0;
  }
  size_t v34 = v23;
  j__memmove((void *)(a4 + 4 * v26), (const void *)(a15 + 4 * v27), v23);
  *(_DWORD *)(a2 + 4 * v28) = *(_DWORD *)(a13 + 4 * v29);
  if (a3) {
    *(_WORD *)(a3 + 2 * v28) = *(_WORD *)(a14 + 2 * v29);
  }
  if (a10) {
    *(void *)(a10 + 8 * v28) = *(void *)(a21 + 8 * v29);
  }
  j__memmove((void *)(a5 + v26), (const void *)(a16 + v27), v24);
  if (a9) {
    j__memmove((void *)(a9 + 2 * v26), (const void *)(a20 + 2 * v27), v25);
  }
  if (a6) {
    j__memmove((void *)(a6 + 4 * v26), (const void *)(a17 + 4 * v27), v34);
  }
  if (a7) {
    j__memmove((void *)(a7 + 4 * v26), (const void *)(a18 + 4 * v27), v34);
  }
  if (a8) {
    j__memmove((void *)(a8 + v26), (const void *)(a19 + v27), v24);
  }
  ++*a12;
  ++*a23;
  *a11 += v24;
  *a22 += v24;
  return 1;
}

void (**sub_1000B43BC(void (**result)(void)))(void)
{
  if (result)
  {
    uint64_t v1 = (uint64_t)result;
    (*result)();
    return (void (**)(void))sub_1000C321C(v1);
  }
  return result;
}

uint64_t sub_1000B4400(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 8))();
}

uint64_t sub_1000B4408(uint64_t a1, char *a2)
{
  int v3 = 0;
  sub_1000BEDD0(a1, "btt0", a2, &v3);
  return 0;
}

double sub_1000B4440(uint64_t a1, int a2, int a3, int a4, int a5, int a6)
{
  int v6 = a3 / a2;
  if ((a3 / a2) <= 1) {
    int v6 = 1;
  }
  *(_DWORD *)(a1 + 4) = v6;
  *(_DWORD *)(a1 + 8) = a4 / a2;
  *(_DWORD *)(a1 + 36) = a5;
  if (!(a4 / a2)) {
    *(_DWORD *)(a1 + 8) = 1;
  }
  *(_DWORD *)(a1 + 12) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  *(_DWORD *)a1 = 1;
  double result = NAN;
  *(void *)(a1 + 24) = 0xFFFFFFFF00000000;
  *(_DWORD *)(a1 + 32) = -1;
  *(_DWORD *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 44) = a6;
  return result;
}

double sub_1000B4488(uint64_t a1)
{
  *(_DWORD *)(a1 + 12) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  *(_DWORD *)a1 = 1;
  double result = NAN;
  *(void *)(a1 + 24) = 0xFFFFFFFF00000000;
  *(_DWORD *)(a1 + 32) = -1;
  *(_DWORD *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_1000B44AC(unsigned int *a1, int a2)
{
  uint64_t v2 = *a1;
  switch(v2)
  {
    case 3:
      if (a2)
      {
        signed int v4 = a1[3];
        int v5 = a1[4] + 1;
        a1[4] = v5;
        int v6 = a1[2];
        if (v4 >= (int)a1[1])
        {
          if (v5 >= (int)(a1[10] + v6))
          {
            *a1 = 2;
            a1[8] = a1[6] - v5;
            int v9 = a1[6] + 1;
            a1[5] = 0;
            a1[6] = v9;
            return 2;
          }
          else
          {
            ++a1[6];
            return 3;
          }
        }
        else if (v5 >= v6)
        {
          *a1 = 1;
          ++a1[6];
          return 1;
        }
        else
        {
          ++a1[6];
          return 3;
        }
      }
      else
      {
        ++a1[3];
        a1[4] = 0;
        ++a1[6];
        return 3;
      }
    case 2:
      if (a2 || (int v7 = a1[5] + 1, a1[5] = v7, v7 != a1[1]))
      {
        ++a1[6];
        return 2;
      }
      else
      {
        *a1 = 3;
        a1[4] = 0;
        ++a1[6];
        return 3;
      }
    case 1:
      if (a2)
      {
        uint64_t v2 = 1;
        goto LABEL_6;
      }
      *a1 = 3;
      *(void *)(a1 + 3) = 1;
      unsigned int v8 = a1[6];
      a1[6] = v8 + 1;
      a1[7] = v8;
      return 3;
    default:
LABEL_6:
      ++a1[6];
      return v2;
  }
}

BOOL sub_1000B4630(_DWORD *a1)
{
  return *a1 == 2;
}

BOOL sub_1000B4640(_DWORD *a1)
{
  return *a1 == 3 && (int)a1[4] > 0 || *a1 == 2;
}

uint64_t sub_1000B466C(_DWORD *a1)
{
  if (*a1 == 1) {
    return 0xFFFFFFFFLL;
  }
  else {
    return a1[7];
  }
}

uint64_t sub_1000B4688(_DWORD *a1)
{
  if (*a1 == 1) {
    return 0xFFFFFFFFLL;
  }
  if (*a1 != 3) {
    return a1[8];
  }
  int v2 = a1[4];
  if (!v2) {
    return 0xFFFFFFFFLL;
  }
  uint64_t result = a1[8];
  if ((int)result <= 0)
  {
    int v4 = a1[6];
    unsigned int v5 = v4 - v2;
    if (v4 <= 0) {
      return result;
    }
    else {
      return v5;
    }
  }
  return result;
}

uint64_t sub_1000B46DC(unsigned int *a1, int a2, int a3)
{
  uint64_t result = *a1;
  if (result == 3)
  {
    signed int v5 = a1[4];
    if (v5 > (int)a1[9] && v5 + a2 >= (int)(a1[10] + a1[2]) && (int)a1[3] >= (int)a1[1])
    {
      uint64_t result = 2;
      if (a3)
      {
        a1[8] = a1[6] - v5;
        *a1 = 2;
      }
    }
    else
    {
      return 3;
    }
  }
  return result;
}

uint64_t sub_1000B4748(uint64_t result, int a2)
{
  if (*(_DWORD *)(result + 40) != a2) {
    *(_DWORD *)(result + 40) = a2;
  }
  return result;
}

uint64_t sub_1000B475C(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t result = sub_1000C33A0(64);
  if (result)
  {
    *(void *)(result + 8) = a1;
    *(void *)(result + 16) = a2;
    *(_DWORD *)(result + 24) = a3;
    *(_DWORD *)(result + 32) = a4;
    *(_DWORD *)(result + 44) = 0;
    *(_DWORD *)(result + 56) = 0;
    *(_DWORD *)(result + 60) = a4;
  }
  return result;
}

uint64_t sub_1000B47B0(int *a1)
{
  uint64_t v2 = sub_1000C33A0(64);
  uint64_t v3 = v2;
  if (!v2) {
    return v3;
  }
  int v4 = a1[10];
  *(_DWORD *)(v2 + 24) = v4;
  unsigned int v5 = a1[8];
  *(void *)(v2 + 32) = v5;
  int v6 = a1[10];
  *(_DWORD *)(v2 + 40) = v6;
  *(_DWORD *)uint64_t v2 = 0;
  *(_DWORD *)(v2 + 28) = v6;
  int v7 = v5 * v4;
  int v8 = (a1[6] - a1[9]) * v5;
  if (v5 * v4) {
    BOOL v9 = v8 == 0;
  }
  else {
    BOOL v9 = 1;
  }
  if (v9)
  {
    *(_DWORD *)(v2 + 44) = 0;
    *(void *)(v2 + 8) = 0;
    *(void *)(v2 + 16) = 0;
    return v3;
  }
  if (!qword_100101CC0)
  {
    *(_DWORD *)(v2 + 56) = 0;
    uint64_t v10 = (_DWORD *)(v2 + 56);
    goto LABEL_12;
  }
  if (!*(_DWORD *)qword_100101CC0)
  {
    int v32 = *(_DWORD *)(qword_100101CC0 + 4);
    *(_DWORD *)(v2 + 56) = v32 != 0;
    uint64_t v10 = (_DWORD *)(v2 + 56);
    if (v32) {
      goto LABEL_45;
    }
LABEL_12:
    *(_DWORD *)(v2 + 60) = v5;
    *(_DWORD *)(v2 + 44) = 1;
    uint64_t v11 = (char *)sub_1000C33A0(v7);
    *(void *)(v3 + 8) = v11;
    if (!v11)
    {
LABEL_48:
      uint64_t v35 = *(void *)(v3 + 48);
      goto LABEL_60;
    }
    goto LABEL_13;
  }
  *(_DWORD *)(v2 + 56) = 1;
  uint64_t v10 = (_DWORD *)(v2 + 56);
LABEL_45:
  if (v5) {
    goto LABEL_61;
  }
  *(_DWORD *)(v2 + 60) = (int)v5 / 2;
  uint64_t v33 = sub_1000C33A0((int)v5);
  *(void *)(v3 + 48) = v33;
  if (!v33) {
    goto LABEL_61;
  }
  int v34 = *(_DWORD *)(v3 + 24) * *(_DWORD *)(v3 + 60);
  *(_DWORD *)(v3 + 44) = 1;
  uint64_t v11 = (char *)sub_1000C33A0(v34);
  *(void *)(v3 + 8) = v11;
  if (!v11) {
    goto LABEL_48;
  }
LABEL_13:
  int v12 = a1[9];
  if (*v10)
  {
    int v13 = a1[10];
    *a1 = v12;
    a1[7] = v13;
    *(_DWORD *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 28) = 0;
    if (v13 >= 1)
    {
      int v14 = 0;
      int v15 = 0;
      while (1)
      {
        int v17 = a1[7];
        if (v17) {
          break;
        }
        uint64_t v20 = 0;
        int v23 = *(_DWORD *)(v3 + 24);
        if (v14 != v23) {
          goto LABEL_32;
        }
LABEL_18:
        if (++v15 == v13) {
          goto LABEL_53;
        }
      }
      a1[7] = v17 - 1;
      int v18 = *a1;
      int v19 = a1[15];
      uint64_t v20 = (unsigned __int8 *)(*((void *)a1 + 1) + v19 * *a1);
      if (a1[14])
      {
        uint64_t v21 = (unsigned char *)*((void *)a1 + 6);
        if (v19 < 1)
        {
          uint64_t v20 = (unsigned __int8 *)*((void *)a1 + 6);
        }
        else
        {
          uint64_t v22 = 0;
          do
          {
            unsigned char *v21 = v20[v22] & 0xF;
            v21[1] = v20[v22] >> 4;
            v21 += 2;
            ++v22;
          }
          while (v22 < a1[15]);
          uint64_t v20 = (unsigned __int8 *)*((void *)a1 + 6);
          int v18 = *a1;
        }
      }
      if (v18 + 1 == a1[6]) {
        int v24 = 0;
      }
      else {
        int v24 = v18 + 1;
      }
      *a1 = v24;
      int v23 = *(_DWORD *)(v3 + 24);
      int v14 = *(_DWORD *)(v3 + 28);
      if (v14 == v23) {
        goto LABEL_18;
      }
LABEL_32:
      int v25 = *(_DWORD *)v3 + v14;
      if (v25 <= v23) {
        int v23 = 0;
      }
      if (*(_DWORD *)(v3 + 56))
      {
        uint64_t v26 = *(void *)(v3 + 48);
        int v16 = *(_DWORD *)(v3 + 60);
        if (v16 < 1)
        {
          uint64_t v20 = *(unsigned __int8 **)(v3 + 48);
        }
        else
        {
          uint64_t v27 = 0;
          uint64_t v28 = v20 + 1;
          do
          {
            unsigned int v29 = *(v28 - 1);
            if (v29 >= 0xF) {
              LOBYTE(v29) = 15;
            }
            unsigned int v31 = *v28;
            v28 += 2;
            char v30 = v31;
            if (v31 >= 0xF) {
              char v30 = 15;
            }
            *(unsigned char *)(v26 + v27++) = v29 | (16 * v30);
          }
          while (v27 < *(int *)(v3 + 60));
          uint64_t v20 = *(unsigned __int8 **)(v3 + 48);
          int v16 = *(_DWORD *)(v3 + 60);
        }
      }
      else
      {
        int v16 = *(_DWORD *)(v3 + 60);
      }
      memcpy((void *)(*(void *)(v3 + 8) + v16 * (v25 - v23)), v20, v16);
      int v14 = *(_DWORD *)(v3 + 28) + 1;
      *(_DWORD *)(v3 + 28) = v14;
      *(_DWORD *)(v3 + 40) = v14;
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v36 = v11;
    uint64_t v37 = (const void *)(*((void *)a1 + 1) + v12 * (uint64_t)a1[8]);
    if (v7 <= v8)
    {
      size_t v38 = v7;
    }
    else
    {
      memcpy(v11, v37, v8);
      uint64_t v37 = (const void *)*((void *)a1 + 1);
      uint64_t v11 = &v36[v8];
      size_t v38 = v7 - v8;
    }
    memcpy(v11, v37, v38);
  }
LABEL_53:
  *(_DWORD *)(v3 + 44) = 1;
  if (*((void *)a1 + 2))
  {
    int v39 = a1[6];
    int v40 = a1[9];
    uint64_t v41 = a1[10];
    uint64_t v42 = (char *)sub_1000C33A0(4 * v41);
    *(void *)(v3 + 16) = v42;
    if (!v42)
    {
      if (!*(_DWORD *)(v3 + 44))
      {
LABEL_61:
        sub_1000C321C(v3);
        return 0;
      }
      sub_1000C321C(*(void *)(v3 + 48));
      sub_1000C321C(*(void *)(v3 + 8));
      uint64_t v35 = *(void *)(v3 + 16);
LABEL_60:
      sub_1000C321C(v35);
      goto LABEL_61;
    }
    uint64_t v43 = v42;
    int v44 = v39 - v40;
    uint64_t v45 = (const void *)(*((void *)a1 + 2) + 4 * a1[9]);
    if ((int)v41 <= v44)
    {
      memcpy(v42, v45, 4 * v41);
    }
    else
    {
      memcpy(v42, v45, 4 * v44);
      memcpy(&v43[4 * v44], *((const void **)a1 + 2), 4 * ((int)v41 - v44));
    }
  }
  else
  {
    *(void *)(v3 + 16) = 0;
  }
  return v3;
}

_DWORD *sub_1000B4B84(_DWORD *result)
{
  int v1 = result[10];
  *uint64_t result = result[9];
  result[7] = v1;
  return result;
}

uint64_t sub_1000B4B94(int *a1, void *a2)
{
  int v2 = a1[7];
  if (!v2) {
    return 0;
  }
  a1[7] = v2 - 1;
  int v3 = *a1;
  int v4 = a1[15];
  uint64_t v5 = *((void *)a1 + 1) + v4 * *a1;
  if (a1[14])
  {
    int v6 = (unsigned char *)*((void *)a1 + 6);
    if (v4 < 1)
    {
      uint64_t v5 = *((void *)a1 + 6);
      if (!a2) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    uint64_t v7 = 0;
    do
    {
      *int v6 = *(unsigned char *)(v5 + v7) & 0xF;
      v6[1] = *(unsigned char *)(v5 + v7) >> 4;
      v6 += 2;
      ++v7;
    }
    while (v7 < a1[15]);
    uint64_t v5 = *((void *)a1 + 6);
    int v3 = *a1;
  }
  if (a2)
  {
LABEL_8:
    *a2 = *((void *)a1 + 2) + 4 * v3;
    int v3 = *a1;
  }
LABEL_9:
  if (v3 + 1 == a1[6]) {
    int v8 = 0;
  }
  else {
    int v8 = v3 + 1;
  }
  *a1 = v8;
  return v5;
}

uint64_t sub_1000B4C44(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if (*(_DWORD *)(result + 44))
    {
      sub_1000C321C(*(void *)(result + 48));
      sub_1000C321C(*(void *)(v1 + 8));
      sub_1000C321C(*(void *)(v1 + 16));
    }
    return sub_1000C321C(v1);
  }
  return result;
}

_DWORD *sub_1000B4CA0(_DWORD *result, int a2, int a3)
{
  result[9] = a2;
  result[10] = a3;
  *uint64_t result = a2;
  result[7] = a3;
  return result;
}

uint64_t sub_1000B4CB0(uint64_t a1, int a2, void *a3)
{
  if (a2 < 0 || *(_DWORD *)(a1 + 40) <= a2) {
    return 0;
  }
  int v3 = *(_DWORD *)(a1 + 36) + a2;
  int v4 = *(_DWORD *)(a1 + 24);
  if (v3 < v4) {
    int v4 = 0;
  }
  int v5 = v3 - v4;
  int v6 = *(_DWORD *)(a1 + 60);
  uint64_t v7 = *(void *)(a1 + 8) + v6 * (uint64_t)v5;
  if (*(_DWORD *)(a1 + 56))
  {
    int v8 = *(unsigned char **)(a1 + 48);
    if (v6 < 1)
    {
      uint64_t v7 = *(void *)(a1 + 48);
      if (a3) {
        goto LABEL_11;
      }
      return v7;
    }
    uint64_t v9 = 0;
    do
    {
      *int v8 = *(unsigned char *)(v7 + v9) & 0xF;
      v8[1] = *(unsigned char *)(v7 + v9) >> 4;
      v8 += 2;
      ++v9;
    }
    while (v9 < *(int *)(a1 + 60));
    uint64_t v7 = *(void *)(a1 + 48);
  }
  if (a3)
  {
LABEL_11:
    *a3 = *(void *)(a1 + 16) + 4 * v5;
    return v7;
  }
  return v7;
}

uint64_t sub_1000B4D60(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if (*(_DWORD *)(result + 44))
    {
      sub_1000C321C(*(void *)(result + 8));
      sub_1000C321C(*(void *)(v1 + 16));
    }
    return sub_1000C321C(v1);
  }
  return result;
}

uint64_t *sub_1000B4DB4(uint64_t *result)
{
  if (result)
  {
    uint64_t v1 = (uint64_t)result;
    uint64_t v2 = *result;
    if (*(int *)(v1 + 16) >= 1)
    {
      uint64_t v3 = 0;
      int v4 = (uint64_t *)(v2 + 8);
      do
      {
        sub_1000B4C44(*(v4 - 1));
        uint64_t v5 = *v4;
        v4 += 3;
        sub_1000C321C(v5);
        ++v3;
      }
      while (v3 < *(int *)(v1 + 16));
      uint64_t v2 = *(void *)v1;
    }
    sub_1000C321C(v2);
    *(void *)uint64_t v1 = 0;
    *(void *)(v1 + 8) = 0;
    *(void *)(v1 + 16) = 0;
    return (uint64_t *)sub_1000C321C(v1);
  }
  return result;
}

uint64_t sub_1000B4E40(uint64_t *a1)
{
  int v1 = *((_DWORD *)a1 + 3);
  if (v1 >= *((_DWORD *)a1 + 4)) {
    return 0;
  }
  uint64_t v2 = *a1;
  *((_DWORD *)a1 + 3) = v1 + 1;
  return v2 + 24 * v1;
}

uint64_t sub_1000B4E70(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    sub_1000C3670(*(void *)(result + 72));
    *(void *)(v1 + 72) = 0;
    sub_1000C3670(*(void *)(v1 + 80));
    *(void *)(v1 + 80) = 0;
    sub_100052580(*(unsigned int **)(v1 + 64));
    sub_1000B054C(*(void *)(v1 + 56));
    sub_100064BE0(*(void *)(v1 + 48));
    sub_1000760C8(*(void *)(v1 + 16));
    sub_10001EA20(*(void *)(v1 + 8));
    sub_100023E48(*(void **)(v1 + 40));
    sub_10005A68C(*(uint64_t (***)(void))v1);
    sub_10009BF68(*(void *)(v1 + 32));
    sub_1000760C8(*(void *)(v1 + 24));
    *(void *)(v1 + 64) = 0;
    *(_OWORD *)uint64_t v1 = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
    *(_OWORD *)(v1 + 32) = 0u;
    *(void *)(v1 + 48) = 0;
    return sub_1000C321C(v1);
  }
  return result;
}

uint64_t *sub_1000B4F20(uint64_t *result, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    int v4 = sub_1000848B8(*result);
    uint64_t result = (uint64_t *)sub_1000848B8(a2);
    if (v4 == result)
    {
      int v5 = sub_100084674(a2);
      int v6 = sub_100039EB4(a2);
      uint64_t v7 = sub_1000847F4(a2);
      uint64_t v8 = sub_100084804(a2);
      uint64_t v9 = sub_1000C33A0(2 * v5);
      uint64_t v10 = sub_1000C33A0(2 * v6);
      uint64_t v11 = sub_1000C3740(2, v8, v7);
      uint64_t v12 = sub_1000C33A0(4 * (int)v8);
      int v18 = 0;
      while (sub_10008488C(a2) != 0xFFFFFF)
      {
        sub_10008467C(a2);
        int v13 = sub_10008466C(*v3);
        char v14 = sub_1000847EC(a2);
        uint64_t v15 = sub_100084814(a2);
        if (v13 == 0xFFFFFF)
        {
          sub_100084824(*v3, v9, v10, v15, v11, v14 & 2, 0, &v18);
        }
        else if ((int)v15 >= 1)
        {
          uint64_t v16 = v15;
          uint64_t v17 = v11;
          do
          {
            v17 += 8;
            sub_100084884(*v3);
            --v16;
          }
          while (v16);
        }
      }
      sub_1000C321C(v12);
      sub_1000C3670(v11);
      sub_1000C321C(v10);
      return (uint64_t *)sub_1000C321C(v9);
    }
  }
  return result;
}

uint64_t sub_1000B5108(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_1000B5110(uint64_t *a1)
{
  return sub_10005A710(*a1);
}

BOOL sub_1000B5118(uint64_t *a1, int a2, unsigned char *a3)
{
  unint64_t v5 = sub_10005A710(*a1);
  if (!v5) {
    return 0;
  }
  int v6 = (char *)v5;
  if ((int)sub_1000CAD00(v5) >= a2) {
    return 0;
  }
  return sub_1000CAD88(a3, v6, a2);
}

BOOL sub_1000B5190(uint64_t a1)
{
  return *(void *)(a1 + 16) != 0;
}

uint64_t sub_1000B51A0(uint64_t *a1)
{
  int v2 = sub_1000CAD00((unint64_t)"<START_DOCUMENT>");
  LODWORD(result) = sub_100084674(*a1);
  if ((int)result <= v2) {
    return v2;
  }
  else {
    return result;
  }
}

uint64_t sub_1000B51E0(uint64_t *a1)
{
  return sub_100039EB4(*a1);
}

uint64_t sub_1000B51E8(uint64_t a1)
{
  return sub_10001FAD0(*(void *)(a1 + 8));
}

uint64_t sub_1000B51F0(uint64_t a1)
{
  return sub_10001FAEC(*(void *)(a1 + 8));
}

uint64_t sub_1000B51F8(uint64_t *a1)
{
  return sub_1000847FC(*a1);
}

uint64_t sub_1000B5200(uint64_t *a1)
{
  return sub_100084804(*a1);
}

uint64_t sub_1000B5208(uint64_t *a1, _WORD *a2)
{
  if (!a2) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v3 = a2;
  do
  {
    int v4 = (unsigned __int16)*v3;
    if (!*v3) {
      return 0xFFFFFFFFLL;
    }
    ++v3;
  }
  while (sub_1000CDF3C(v4));
  int v5 = sub_10008466C(*a1);
  if (v5 == 0xFFFFFF) {
    return 0xFFFFFFFFLL;
  }
  else {
    return v5 | 0xC0000000;
  }
}

uint64_t sub_1000B529C(uint64_t *a1)
{
  if (sub_1000CDF3C(58)
    && sub_1000CDF3C(71)
    && sub_1000CDF3C(65)
    && sub_1000CDF3C(82)
    && sub_1000CDF3C(66)
    && sub_1000CDF3C(65)
    && sub_1000CDF3C(71)
    && sub_1000CDF3C(69)
    && sub_1000CDF3C(58))
  {
    return 0xFFFFFFFFLL;
  }
  int v3 = sub_10008466C(*a1);
  if (v3 == 0xFFFFFF) {
    return 0xFFFFFFFFLL;
  }
  else {
    return v3 | 0xC0000000;
  }
}

uint64_t sub_1000B5360(uint64_t result, unsigned int a2, uint64_t a3, _WORD *a4)
{
  if (a2 > 0xFFFFFFFA) {
    goto LABEL_10;
  }
  uint64_t v7 = (uint64_t *)result;
  unsigned int v8 = a2 >> 30;
  if (a2 >> 30 == 1)
  {
    if ((~a2 & 0xFFFE) != 0)
    {
      uint64_t result = sub_10001FFAC(*(void *)(result + 8), (unsigned __int16)a2);
      if (result) {
        goto LABEL_21;
      }
    }
LABEL_10:
    if (a2 + 5 < 3)
    {
      if (!a3) {
        goto LABEL_36;
      }
      if (a2 + 5 > 2)
      {
        uint64_t result = (uint64_t)"<NOID>";
        if (!aNoid[0])
        {
LABEL_36:
          if (a4) {
            *a4 = 0;
          }
          return result;
        }
      }
      else
      {
        uint64_t result = (uint64_t)off_1000FE138[a2 + 5];
        if (!*(unsigned char *)result) {
          goto LABEL_36;
        }
      }
LABEL_35:
      uint64_t result = sub_1000D0D30((unsigned char *)result, 0x7FFFFFFF, a3);
      goto LABEL_36;
    }
    if (a2 == -2)
    {
LABEL_16:
      if (!a3) {
        goto LABEL_36;
      }
      uint64_t result = (uint64_t)"<SILENCE>";
      goto LABEL_35;
    }
    goto LABEL_33;
  }
  if (v8 == 2)
  {
    uint64_t result = sub_10001FF54(*(void *)(result + 8), (unsigned __int16)a2);
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    if (v8 != 3) {
      goto LABEL_10;
    }
    if ((a2 & 0xFFFFFF) == 0xFFFFFF)
    {
LABEL_23:
      if ((a2 & 0xFFFFFF) == 0xFFFFFF) {
        goto LABEL_33;
      }
      goto LABEL_24;
    }
    uint64_t result = sub_10008487C(*(void *)result);
    if (!result) {
      goto LABEL_10;
    }
  }
LABEL_21:
  if (v8 != 1)
  {
    if (v8 == 2)
    {
      if ((unsigned __int16)a2 == 65534) {
        goto LABEL_16;
      }
      uint64_t result = sub_10001EBC4(v7[1], (unsigned __int16)a2);
      if (result == 0xFFFFFF) {
        goto LABEL_16;
      }
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if ((unsigned __int16)a2 == 0xFFFF) {
    goto LABEL_33;
  }
  if ((unsigned __int16)a2 == 65534) {
    goto LABEL_16;
  }
  uint64_t result = sub_10001ED14(v7[1], (unsigned __int16)a2, 0);
  if (result == 0xFFFF)
  {
LABEL_33:
    if (!a3) {
      goto LABEL_36;
    }
    uint64_t result = (uint64_t)"<NOID>";
    goto LABEL_35;
  }
  if (result == 65534) {
    goto LABEL_16;
  }
  uint64_t result = sub_10001EBC4(v7[1], result);
  if (result == 0xFFFFFF) {
    goto LABEL_16;
  }
LABEL_24:
  uint64_t v9 = *v7;
  return sub_10008467C(v9);
}

uint64_t sub_1000B5584(uint64_t *a1, unsigned int a2)
{
  if (a2 > 0xFFFFFFFA) {
    return 1;
  }
  unsigned int v3 = a2 >> 30;
  if (a2 >> 30 == 1)
  {
    if ((~a2 & 0xFFFE) != 0) {
      return sub_10001FFAC(a1[1], (unsigned __int16)a2);
    }
    return 0;
  }
  if (v3 == 2) {
    return sub_10001FF54(a1[1], (unsigned __int16)a2);
  }
  if (v3 != 3) {
    return 0;
  }
  if ((a2 & 0xFFFFFF) == 0xFFFFFF) {
    return 1;
  }
  else {
    return sub_10008487C(*a1);
  }
}

uint64_t sub_1000B55FC(uint64_t *a1, _WORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  if (a2)
  {
    uint64_t v10 = a2;
    while (1)
    {
      int v11 = (unsigned __int16)*v10;
      if (!*v10) {
        break;
      }
      ++v10;
      if (!sub_1000CDF3C(v11))
      {
        if (a6 < 1) {
          int v19 = 0;
        }
        else {
          int v19 = (void *)sub_1000CD3E8(4 * a6, v12, v13, v14, v15, v16, v17, v18);
        }
        uint64_t v21 = sub_1000847D4(*a1);
        uint64_t v20 = v21;
        if ((int)v21 >= a6) {
          uint64_t v22 = a6;
        }
        else {
          uint64_t v22 = v21;
        }
        if ((int)v22 < 1)
        {
          if (!v19) {
            return v20;
          }
        }
        else
        {
          uint64_t v23 = 0;
          if (v22 < 8) {
            goto LABEL_18;
          }
          if ((unint64_t)(a7 - (void)v19) < 0x20) {
            goto LABEL_18;
          }
          uint64_t v23 = v22 & 0x7FFFFFF8;
          int v24 = v19 + 2;
          int v25 = (_OWORD *)(a7 + 16);
          uint64_t v26 = v22 & 0xFFFFFFF8;
          do
          {
            *(void *)&long long v27 = __PAIR64__(HIDWORD(*v24), *(_OWORD *)v24) | 0xC0000000C0000000;
            DWORD2(v27) = v24[1] | 0xC0000000;
            HIDWORD(v27) = HIDWORD(*(_OWORD *)v24) | 0xC0000000;
            *(v25 - 1) = *((_OWORD *)v24 - 1) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
            *int v25 = v27;
            v24 += 4;
            v25 += 2;
            v26 -= 8;
          }
          while (v26);
          if (v23 != v22)
          {
LABEL_18:
            uint64_t v28 = (unsigned int *)(a7 + 4 * v23);
            unsigned int v29 = (int *)v19 + v23;
            uint64_t v30 = v22 - v23;
            do
            {
              int v31 = *v29++;
              *v28++ = v31 | 0xC0000000;
              --v30;
            }
            while (v30);
          }
        }
        sub_1000CD4D0(v19, 4 * a6);
        return v20;
      }
    }
  }
  return 0;
}

uint64_t sub_1000B574C(uint64_t *a1, char *a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7)
{
  if (a2)
  {
    uint64_t v14 = a2;
    while (1)
    {
      int v15 = *(unsigned __int16 *)v14;
      if (!*(_WORD *)v14) {
        break;
      }
      v14 += 2;
      if (!sub_1000CDF3C(v15))
      {
        if (a6 < 1) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = (void *)sub_1000CD3E8(4 * a6, v16, v17, v18, v19, v20, v21, v22);
        }
        uint64_t v25 = sub_100084684(*a1, a3, a5, a2, (uint64_t)v23, a6, a4);
        uint64_t v24 = v25;
        if ((int)v25 >= a6) {
          uint64_t v26 = a6;
        }
        else {
          uint64_t v26 = v25;
        }
        if ((int)v26 < 1)
        {
          if (!v23) {
            return v24;
          }
        }
        else
        {
          uint64_t v27 = 0;
          if (v26 < 8) {
            goto LABEL_18;
          }
          if ((unint64_t)(a7 - (void)v23) < 0x20) {
            goto LABEL_18;
          }
          uint64_t v27 = v26 & 0x7FFFFFF8;
          uint64_t v28 = v23 + 2;
          unsigned int v29 = (_OWORD *)(a7 + 16);
          uint64_t v30 = v26 & 0xFFFFFFF8;
          do
          {
            *(void *)&long long v31 = __PAIR64__(HIDWORD(*v28), *(_OWORD *)v28) | 0xC0000000C0000000;
            DWORD2(v31) = v28[1] | 0xC0000000;
            HIDWORD(v31) = HIDWORD(*(_OWORD *)v28) | 0xC0000000;
            *(v29 - 1) = *((_OWORD *)v28 - 1) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
            *unsigned int v29 = v31;
            v28 += 4;
            v29 += 2;
            v30 -= 8;
          }
          while (v30);
          if (v27 != v26)
          {
LABEL_18:
            int v32 = (unsigned int *)(a7 + 4 * v27);
            uint64_t v33 = (int *)v23 + v27;
            uint64_t v34 = v26 - v27;
            do
            {
              int v35 = *v33++;
              *v32++ = v35 | 0xC0000000;
              --v34;
            }
            while (v34);
          }
        }
        sub_1000CD4D0(v23, 4 * a6);
        return v24;
      }
    }
  }
  return 0;
}

uint64_t sub_1000B589C(uint64_t a1, unsigned int a2)
{
  unsigned int v3 = a2 >> 30;
  if (a2 >> 30 == 1)
  {
    a2 = sub_10001ED14(*(void *)(a1 + 8), (unsigned __int16)a2, 0);
    uint64_t v5 = *(void *)(a1 + 8);
    return sub_10001EBC4(v5, a2);
  }
  if (v3 == 2)
  {
    uint64_t v5 = *(void *)(a1 + 8);
    a2 = (unsigned __int16)a2;
    return sub_10001EBC4(v5, a2);
  }
  if (v3 == 3) {
    return a2 & 0xFFFFFF;
  }
  else {
    return 0xFFFFFFLL;
  }
}

uint64_t sub_1000B5938(uint64_t a1, int a2)
{
  if (a2 == 0xFFFFFF) {
    return 0xFFFFFFFFLL;
  }
  else {
    return a2 | 0xC0000000;
  }
}

uint64_t sub_1000B594C(uint64_t a1, unsigned int a2, int16x8_t *a3, int a4)
{
  unsigned int v6 = a2 >> 30;
  if (a2 >> 30 == 1)
  {
    if (a4 >= 1) {
      a3->i16[0] = a2;
    }
    return 1;
  }
  if (a2 >= 0xFFFFFFFB)
  {
    if (a2 + 5 < 4) {
      goto LABEL_17;
    }
    return 0;
  }
  switch(v6)
  {
    case 1u:
      if ((_WORD)a2 == 0xFFFF) {
        return 0;
      }
      __int16 v10 = sub_10001ED14(*(void *)(a1 + 8), (unsigned __int16)a2, 0);
      break;
    case 2u:
      goto LABEL_16;
    case 3u:
      int v9 = a2 & 0xFFFFFF;
      if (v9 == 0xFFFFFF) {
        return 0;
      }
      __int16 v10 = sub_10001EDE8(*(void *)(a1 + 8), v9);
      break;
    default:
      return 0;
  }
  LOWORD(a2) = v10;
LABEL_16:
  if ((_WORD)a2 == 0xFFFF) {
    return 0;
  }
LABEL_17:
  uint64_t v11 = *(void *)(a1 + 8);
  return sub_10001FAFC(v11, (unsigned __int16)a2, a3, a4);
}

uint64_t sub_1000B5A58(uint64_t a1, unsigned int a2)
{
  if (a2 < 0xFFFFFFFB)
  {
    unsigned int v4 = a2 >> 30;
    unsigned __int16 v5 = -1;
    if (a2 >> 30 == 1)
    {
      if ((_WORD)a2 != 0xFFFF) {
        return sub_10001ED14(*(void *)(a1 + 8), (unsigned __int16)a2, 0);
      }
    }
    else if (v4 == 2)
    {
      return (unsigned __int16)a2;
    }
    else if (v4 == 3)
    {
      int v6 = a2 & 0xFFFFFF;
      if (v6 == 0xFFFFFF) {
        return 0xFFFFLL;
      }
      else {
        return sub_10001EDE8(*(void *)(a1 + 8), v6);
      }
    }
    return v5;
  }
  if (a2 + 5 >= 4) {
    return (unsigned __int16)-1;
  }
  else {
    return (unsigned __int16)a2;
  }
}

uint64_t sub_1000B5AE4(uint64_t a1, unsigned int a2, int a3)
{
  if (a2 < 0xFFFFFFFB)
  {
    unsigned int v6 = a2 >> 30;
    LOWORD(result) = -1;
    if (a2 >> 30 == 1)
    {
      if ((_WORD)a2 == 0xFFFF) {
        return (unsigned __int16)result;
      }
      LOWORD(result) = sub_10001ED14(*(void *)(a1 + 8), (unsigned __int16)a2, 0);
      int v8 = (unsigned __int16)result;
      if ((unsigned __int16)result == 0xFFFF) {
        return (unsigned __int16)result;
      }
    }
    else if (v6 == 2)
    {
      LOWORD(result) = a2;
      int v8 = (unsigned __int16)a2;
      if ((unsigned __int16)a2 == 0xFFFF) {
        return (unsigned __int16)result;
      }
    }
    else
    {
      if (v6 != 3) {
        return (unsigned __int16)result;
      }
      int v7 = a2 & 0xFFFFFF;
      if (v7 == 0xFFFFFF) {
        return (unsigned __int16)result;
      }
      LOWORD(result) = sub_10001EDE8(*(void *)(a1 + 8), v7);
      int v8 = (unsigned __int16)result;
      if ((unsigned __int16)result == 0xFFFF) {
        return (unsigned __int16)result;
      }
    }
    if (v8 != 65534)
    {
LABEL_21:
      unsigned int v9 = (unsigned __int16)result;
      uint64_t v10 = *(void *)(a1 + 8);
      return sub_100020020(v10, v9, a3);
    }
LABEL_15:
    if (a3) {
      LOWORD(result) = -1;
    }
    else {
      LOWORD(result) = -2;
    }
    return (unsigned __int16)result;
  }
  LOWORD(result) = -3;
  switch(a2)
  {
    case 0xFFFFFFFB:
      LOWORD(result) = -5;
      goto LABEL_21;
    case 0xFFFFFFFC:
      LOWORD(result) = -4;
      goto LABEL_21;
    case 0xFFFFFFFD:
      goto LABEL_21;
    case 0xFFFFFFFE:
      goto LABEL_15;
    default:
      uint64_t result = 0xFFFFLL;
      break;
  }
  return result;
}

uint64_t sub_1000B5C44(uint64_t *a1, unsigned int a2)
{
  if (a2 == -1) {
    return 0;
  }
  unsigned int v2 = a2 >> 30;
  if (a2 >> 30 == 1) {
    return (_WORD)a2 != 0xFFFF && sub_10001ED14(a1[1], (unsigned __int16)a2, 0) != 0xFFFF;
  }
  if (v2 != 2)
  {
    if (v2 == 3)
    {
      uint64_t v3 = *a1;
      return sub_10008480C(v3);
    }
    return 0;
  }
  uint64_t v5 = a1[1];
  return sub_10001FD90(v5, (unsigned __int16)a2);
}

BOOL sub_1000B5D0C(uint64_t a1, unsigned int a2)
{
  return a2 != 0xFFFF && sub_10001ED14(*(void *)(a1 + 8), a2, 0) != 0xFFFF;
}

uint64_t sub_1000B5D58(uint64_t *a1, unint64_t a2, _WORD *a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8, char *a9, uint64_t a10, uint64_t a11)
{
  uint64_t v12 = a6;
  uint64_t v13 = a5;
  int v14 = a4;
  if (qword_100101CC0)
  {
    int v17 = *(_DWORD *)(qword_100101CC0 + 5508);
    if (!a3) {
      goto LABEL_11;
    }
  }
  else
  {
    int v17 = 0;
    if (!a3)
    {
LABEL_11:
      uint64_t v12 = sub_1000B6E84(a1, a2, a4, a5, a6, a7, (uint64_t)a8, (uint64_t)a9);
      bzero(a8, 4 * (int)v12);
      bzero(a9, 4 * (int)v12);
      return v12;
    }
  }
  if (!*a3) {
    goto LABEL_11;
  }
  int v305 = v17;
  int v18 = sub_1000CED6C(a2);
  int v318 = a3;
  int v331 = sub_1000CED6C((unint64_t)a3);
  int v19 = sub_1000CAD00((unint64_t)"<START_DOCUMENT>");
  int v20 = sub_100084674(*a1);
  if (v20 <= v19) {
    int v21 = v19;
  }
  else {
    int v21 = v20;
  }
  int v22 = sub_100039EB4(*a1);
  int v314 = a8;
  if (qword_100101CC0) {
    unsigned int v341 = *(_DWORD *)(qword_100101CC0 + 5508);
  }
  else {
    unsigned int v341 = 0;
  }
  uint64_t v24 = sub_1000C3740(4, (v18 + 1), (v331 + 1));
  if (v24)
  {
    int v32 = (_DWORD **)v24;
    int v309 = v14;
    uint64_t v33 = 2 * (v21 + 1);
    int v336 = (void *)sub_1000CD3E8(v33, v25, v26, v27, v28, v29, v30, v31);
    uint64_t v301 = 2 * (v22 + 1);
    uint64_t v339 = (_WORD *)sub_1000CD3E8(v301, v34, v35, v36, v37, v38, v39, v40);
    uint64_t v48 = (void *)sub_1000CD3E8(120, v41, v42, v43, v44, v45, v46, v47);
    uint64_t v323 = (uint64_t)v32;
    int v326 = v18;
    int v307 = v12;
    uint64_t v303 = v33;
    if (v18 < 0)
    {
      int v51 = 0;
      int v111 = 0;
      int v112 = 0;
      **int v32 = 0;
      int v113 = v18;
      uint64_t v52 = v314;
      if ((int)v12 <= 0) {
        int v114 = v12;
      }
      else {
        int v114 = 0;
      }
      int v342 = 0;
      if (!v18) {
        goto LABEL_108;
      }
      goto LABEL_183;
    }
    if ((v331 & 0x80000000) == 0)
    {
      uint64_t v49 = 0;
      do
      {
        uint64_t v50 = 0;
        do
          v32[v49][v50++] = -1;
        while (v331 + 1 != v50);
        ++v49;
      }
      while (v49 != v18 + 1);
    }
    int v51 = 0;
    **int v32 = 0;
    uint64_t v52 = a8;
    if (v18 < 1 || v331 < 1)
    {
      int v111 = 0;
      int v112 = 0;
      if ((int)v12 <= 0) {
        int v114 = v12;
      }
      else {
        int v114 = 0;
      }
      int v113 = v18;
      int v342 = 0;
      if (!v18) {
        goto LABEL_108;
      }
      goto LABEL_183;
    }
    if (!a2)
    {
      int v51 = 0;
      int v111 = 0;
      int v112 = 0;
      int v113 = v18;
      if ((int)v12 <= 0) {
        int v114 = v12;
      }
      else {
        int v114 = 0;
      }
      int v342 = 0;
      goto LABEL_183;
    }
    uint64_t v53 = 0;
    int v320 = 0;
    int v321 = 0;
    int v54 = 30;
    unsigned int v334 = v13;
LABEL_26:
    uint64_t v55 = 0;
    uint64_t v56 = (char *)(a2 + 2 * v53);
    uint64_t v328 = v53;
    while (v32[v53][v55] == -1)
    {
LABEL_29:
      if (++v55 == v331)
      {
        if (++v53 != v326) {
          goto LABEL_26;
        }
        int v111 = v321;
        if (v321 >= 1)
        {
          int v112 = 0;
          int v115 = v320;
          do
          {
            sub_1000B5360((uint64_t)a1, v32[v111][v115], (uint64_t)v336, v339);
            int v116 = sub_1000CED6C((unint64_t)v336);
            v115 -= sub_1000CED6C((unint64_t)v339);
            ++v112;
            BOOL v117 = __OFSUB__(v111, v116);
            v111 -= v116;
          }
          while (!((v111 < 0) ^ v117 | (v111 == 0)));
          uint64_t v52 = v314;
          LODWORD(v12) = v307;
          int v51 = v320;
          int v111 = v321;
          if (v112 >= v307) {
            int v114 = v307;
          }
          else {
            int v114 = v112;
          }
          int v113 = v326 - v321;
          int v342 = v112;
          if (v326 != v321) {
            goto LABEL_183;
          }
LABEL_108:
          int v118 = v111;
          int v332 = 0;
          unsigned int v119 = v114 - 1;
          if (v114 < 1)
          {
LABEL_199:
            sub_1000CD4D0(v48, 120);
            sub_1000CD4D0(v339, v301);
            sub_1000CD4D0(v336, v303);
            sub_1000C3670(v323);
            uint64_t v99 = (v332 + v342);
            uint64_t v100 = a7;
            BOOL v101 = (int *)v314;
            int v14 = v309;
            uint64_t v12 = v307;
            unint64_t v102 = (unint64_t)v318;
            int v103 = v307 - v99;
            if (v307 == v99) {
              goto LABEL_200;
            }
            goto LABEL_79;
          }
LABEL_190:
          if (v342 > v307 && v309 == 0) {
            int v211 = v342 - v307;
          }
          else {
            int v211 = 0;
          }
          do
          {
            while (1)
            {
              int v212 = v118;
              unsigned int v213 = *(_DWORD *)(*(void *)(v323 + 8 * v118) + 4 * v51);
              sub_1000B5360((uint64_t)a1, v213, (uint64_t)v336, v339);
              int v214 = sub_1000CED6C((unint64_t)v336);
              int v215 = sub_1000CED6C((unint64_t)v339);
              int v216 = v212 - v214;
              v51 -= v215;
              if (v211 < 1) {
                break;
              }
              int v118 = v216;
              --v211;
              if ((v119 & 0x80000000) != 0) {
                goto LABEL_199;
              }
            }
            uint64_t v217 = 4 * v119;
            int v118 = v216;
            *(_DWORD *)&v314[v217] = v216;
            *(_DWORD *)&a9[v217] = v214;
            *(_DWORD *)(a10 + v217) = v51;
            *(_DWORD *)(a11 + v217) = v215;
            --v119;
            *(_DWORD *)(a7 + v217) = v213;
          }
          while ((v119 & 0x80000000) == 0);
          goto LABEL_199;
        }
        int v112 = 0;
        uint64_t v52 = v314;
        LODWORD(v12) = v307;
        int v51 = v320;
        if (v307 <= 0) {
          int v114 = v307;
        }
        else {
          int v114 = 0;
        }
        int v113 = v326 - v321;
        int v342 = 0;
        if (v326 == v321) {
          goto LABEL_108;
        }
LABEL_183:
        if (v309 || v112 < (int)v12)
        {
          int v208 = v12 - 1;
          if (v112 < (int)v12) {
            int v208 = v112;
          }
          uint64_t v209 = 4 * v208;
          int v118 = v111;
          *(_DWORD *)&v52[v209] = v111;
          *(_DWORD *)&a9[v209] = v113;
          *(_DWORD *)(a10 + v209) = v51;
          *(_DWORD *)(a11 + v209) = v331 - v51;
          *(_DWORD *)(a7 + v209) = -1;
          int v332 = 1;
          unsigned int v119 = v208 - 1;
          if (v208 < 1) {
            goto LABEL_199;
          }
        }
        else
        {
          int v118 = v111;
          int v332 = 1;
          unsigned int v119 = v114 - 1;
          if (v114 < 1) {
            goto LABEL_199;
          }
        }
        goto LABEL_190;
      }
    }
LABEL_34:
    uint64_t v64 = v56;
    do
    {
      int v65 = *(unsigned __int16 *)v64;
      if (!*(_WORD *)v64)
      {
        if (v54 > 0) {
          goto LABEL_28;
        }
LABEL_33:
        sub_1000CD4D0(v48, 4 * v54);
        v54 *= 2;
        uint64_t v48 = (void *)sub_1000CD3E8(4 * v54, v57, v58, v59, v60, v61, v62, v63);
        goto LABEL_34;
      }
      v64 += 2;
    }
    while (sub_1000CDF3C(v65));
    if (v54 < 1) {
      uint64_t v73 = 0;
    }
    else {
      uint64_t v73 = (void *)sub_1000CD3E8(4 * v54, v66, v67, v68, v69, v70, v71, v72);
    }
    int v74 = sub_100084684(*a1, v13, 1, v56, (uint64_t)v73, v54, v341);
    int v75 = v74;
    if (v74 >= v54) {
      uint64_t v76 = v54;
    }
    else {
      uint64_t v76 = v74;
    }
    if ((int)v76 <= 0)
    {
      if (!v73)
      {
LABEL_54:
        if (v75 >= v54) {
          goto LABEL_33;
        }
        if (v75 >= 1)
        {
          uint64_t v87 = 0;
          uint64_t v88 = 4 * v75;
          do
          {
            sub_1000B5360((uint64_t)a1, *(_DWORD *)((char *)v48 + v87), (uint64_t)v336, v339);
            int v90 = sub_1000CED6C((unint64_t)v336);
            int v91 = sub_1000CED6C((unint64_t)v339);
            if (v91)
            {
              int v92 = v91 + v55;
              if (v91 + (int)v55 <= v331 && !sub_1000CFC34(&v318[v55], v339, v91))
              {
                int v93 = v90 + v328;
                if ((v90 + v328 != v326 || v92 >= v331) && (v93 >= v326 || v92 != v331))
                {
                  uint64_t v89 = *(void *)(v323 + 8 * v93);
                  if (*(_DWORD *)(v89 + 4 * v92) == -1)
                  {
                    *(_DWORD *)(v89 + 4 * v92) = *(_DWORD *)((char *)v48 + v87);
                    int v94 = v320;
                    int v95 = v321;
                    if (v92 > v320 && v93 == v321) {
                      int v94 = v92;
                    }
                    BOOL v97 = v93 <= v321;
                    if (v93 > v321) {
                      int v95 = v90 + v328;
                    }
                    int v321 = v95;
                    if (v97) {
                      int v98 = v94;
                    }
                    else {
                      int v98 = v92;
                    }
                    int v320 = v98;
                  }
                }
              }
            }
            v87 += 4;
          }
          while (v88 != v87);
          uint64_t v13 = v334;
          int v32 = (_DWORD **)v323;
        }
LABEL_28:
        uint64_t v53 = v328;
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t v77 = 0;
      if (v76 < 8) {
        goto LABEL_49;
      }
      if ((unint64_t)((char *)v48 - (char *)v73) < 0x20) {
        goto LABEL_49;
      }
      uint64_t v77 = v76 & 0x7FFFFFF8;
      uint64_t v78 = v73 + 2;
      uint64_t v79 = v48 + 2;
      uint64_t v80 = v76 & 0xFFFFFFF8;
      do
      {
        *(void *)&long long v81 = __PAIR64__(HIDWORD(*v78), *(_OWORD *)v78) | 0xC0000000C0000000;
        DWORD2(v81) = v78[1] | 0xC0000000;
        HIDWORD(v81) = HIDWORD(*(_OWORD *)v78) | 0xC0000000;
        *(v79 - 1) = *((_OWORD *)v78 - 1) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
        *uint64_t v79 = v81;
        v78 += 4;
        v79 += 2;
        v80 -= 8;
      }
      while (v80);
      if (v77 != v76)
      {
LABEL_49:
        uint64_t v82 = v76 - v77;
        uint64_t v83 = 4 * v77;
        uint64_t v84 = (unsigned int *)v48 + v77;
        uint64_t v85 = (int *)((char *)v73 + v83);
        do
        {
          int v86 = *v85++;
          *v84++ = v86 | 0xC0000000;
          --v82;
        }
        while (v82);
      }
    }
    sub_1000CD4D0(v73, 4 * v54);
    goto LABEL_54;
  }
  uint64_t v99 = 0;
  uint64_t v100 = a7;
  BOOL v101 = (int *)a8;
  unint64_t v102 = (unint64_t)v318;
  int v103 = v12;
  if (!v12)
  {
LABEL_200:
    if (v305 && *(_DWORD *)(v100 + 4 * ((int)v12 - 1)) == -1)
    {
      uint64_t v218 = (int)v12 - 1;
      uint64_t v219 = 2 * (int)(sub_1000CED6C(a2) + 1);
      unsigned int v227 = (void *)sub_1000CD3E8(v219, v220, v221, v222, v223, v224, v225, v226);
      j__memmove(v227, (const void *)(a2 + 2 * v101[v218]), 2 * *(int *)&a9[4 * v218]);
      *((_WORD *)v227 + *(int *)&a9[4 * v218]) = 0;
      uint64_t v228 = 2 * (int)(sub_1000CED6C(v102) + 1);
      uint64_t v236 = (void *)sub_1000CD3E8(v228, v229, v230, v231, v232, v233, v234, v235);
      unint64_t v237 = v102;
      int v238 = v236;
      j__memmove(v236, (const void *)(v237 + 2 * *(int *)(a10 + 4 * v218)), 2 * *(int *)(a11 + 4 * v218));
      *((_WORD *)v238 + *(int *)(a11 + 4 * v218)) = 0;
      uint64_t v239 = v227;
      do
      {
        int v240 = (unsigned __int16)*v239;
        if (!*v239)
        {
          unsigned int v242 = -1;
          goto LABEL_208;
        }
        ++v239;
      }
      while (sub_1000CDF3C(v240));
      int v241 = sub_10008466C(*a1);
      unsigned int v242 = v241 | 0xC0000000;
      if (v241 == 0xFFFFFF) {
        unsigned int v242 = -1;
      }
LABEL_208:
      *(_DWORD *)(a7 + 4 * v218) = v242;
      sub_1000CD4D0(v238, v228);
      sub_1000CD4D0(v227, v219);
    }
    return v12;
  }
LABEL_79:
  int v104 = v99 - 1;
  uint64_t v12 = v99;
  if (*(_DWORD *)(v100 + 4 * ((int)v99 - 1)) != -1) {
    return v12;
  }
  int v311 = (unsigned int *)(v100 + 4 * ((int)v99 - 1));
  int v313 = v103;
  uint64_t v304 = v104;
  uint64_t v105 = 4 * v104;
  int v308 = &v101[(unint64_t)v105 / 4];
  uint64_t v302 = v105;
  int v306 = (_DWORD *)(a10 + v105);
  uint64_t v297 = *(int *)(a10 + v105);
  uint64_t v298 = v101[(unint64_t)v105 / 4];
  uint64_t v106 = (char *)(v102 + 2 * v297);
  __src = (void *)(a2 + 2 * v298);
  int v319 = sub_1000CED6C((unint64_t)__src);
  int v322 = sub_1000CED6C((unint64_t)v106);
  int v107 = sub_1000CAD00((unint64_t)"<START_DOCUMENT>");
  int v108 = sub_100084674(*a1);
  if (v108 <= v107) {
    int v109 = v107;
  }
  else {
    int v109 = v108;
  }
  int v110 = sub_100039EB4(*a1);
  if (qword_100101CC0) {
    int v337 = *(_DWORD *)(qword_100101CC0 + 5508);
  }
  else {
    int v337 = 0;
  }
  uint64_t v120 = (v319 + 1);
  uint64_t v299 = (v322 + 1);
  uint64_t v121 = sub_1000C3740(4, v120, v299);
  if (!v121)
  {
    int v206 = 0;
    int v207 = v304;
    return (v207 + v206);
  }
  uint64_t v129 = v121;
  uint64_t v296 = 2 * (int)v120;
  uint64_t v325 = (char *)sub_1000CD3E8(v296, v122, v123, v124, v125, v126, v127, v128);
  j__memmove(v325, __src, 2 * (int)v120);
  uint64_t v295 = 2 * (v109 + 1);
  int v137 = (void *)sub_1000CD3E8(v295, v130, v131, v132, v133, v134, v135, v136);
  uint64_t v294 = 2 * (v110 + 1);
  int v152 = (_WORD *)sub_1000CD3E8(v294, v138, v139, v140, v141, v142, v143, v144);
  if ((v319 & 0x80000000) == 0 && (v322 & 0x80000000) == 0)
  {
    uint64_t v153 = 0;
    do
    {
      uint64_t v154 = 0;
      do
      {
        *(_DWORD *)(*(void *)(v129 + 8 * v153) + v154) = -1;
        v154 += 4;
      }
      while (4 * v299 != v154);
      ++v153;
    }
    while (v153 != v120);
  }
  int v310 = v14;
  unsigned int v317 = &a9[v302];
  int v315 = (int *)(a11 + v302);
  int v155 = v313 + 1;
  *(_DWORD *)(*(void *)(v129 + 8 * v319) + 4 * v322) = 0;
  unint64_t v156 = sub_1000CD3E8(120, v145, v146, v147, v148, v149, v150, v151);
  int v157 = v319;
  uint64_t v340 = v129;
  int v343 = (void *)v156;
  if (v319 < 1)
  {
LABEL_219:
    char v247 = 0;
    unsigned int v244 = 0;
    int v159 = 30;
    int v243 = v157;
    goto LABEL_222;
  }
  uint64_t v158 = v319;
  if (!v325)
  {
    if (v319 < 0x10) {
      goto LABEL_218;
    }
    unint64_t v248 = v319 & 0xFFFFFFFFFFFFFFF0;
    do
      v248 -= 16;
    while (v248);
    uint64_t v158 = v319 & 0xFLL;
    int v157 = v319;
    if ((v319 & 0xFFFFFFFFFFFFFFF0) != v319)
    {
LABEL_218:
      do
        BOOL v97 = v158-- <= 1;
      while (!v97);
    }
    goto LABEL_219;
  }
  int v159 = 30;
  int v330 = v322;
  int v333 = v319;
  do
  {
    if (v158 <= 1) {
      uint64_t v160 = 1;
    }
    else {
      uint64_t v160 = v158;
    }
    uint64_t v324 = v160;
    *(_WORD *)&v325[2 * v158] = 0;
    uint64_t v161 = 1;
    do
    {
      uint64_t v327 = v161;
      uint64_t v162 = &v325[2 * (v158 - v161)];
      while (1)
      {
        uint64_t v163 = v162;
        do
        {
          int v164 = *(unsigned __int16 *)v163;
          if (!*(_WORD *)v163)
          {
            int v173 = 0;
            goto LABEL_149;
          }
          v163 += 2;
        }
        while (sub_1000CDF3C(v164));
        int v172 = v159 < 1
             ? 0
             : (void *)sub_1000CD3E8(4 * v159, v165, v166, v167, v168, v169, v170, v171);
        int v174 = sub_1000847D4(*a1);
        int v173 = v174;
        uint64_t v175 = v174 >= v159 ? v159 : v174;
        if ((int)v175 < 1)
        {
          if (!v172) {
            goto LABEL_149;
          }
        }
        else
        {
          uint64_t v176 = 0;
          if (v175 < 8) {
            goto LABEL_144;
          }
          if ((unint64_t)((char *)v343 - (char *)v172) < 0x20) {
            goto LABEL_144;
          }
          uint64_t v176 = v175 & 0x7FFFFFF8;
          uint64_t v177 = v172 + 2;
          int v178 = v343 + 2;
          uint64_t v179 = v175 & 0xFFFFFFF8;
          do
          {
            *(void *)&long long v180 = __PAIR64__(HIDWORD(*v177), *(_OWORD *)v177) | 0xC0000000C0000000;
            DWORD2(v180) = v177[1] | 0xC0000000;
            HIDWORD(v180) = HIDWORD(*(_OWORD *)v177) | 0xC0000000;
            *(v178 - 1) = *((_OWORD *)v177 - 1) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
            *int v178 = v180;
            v177 += 4;
            v178 += 2;
            v179 -= 8;
          }
          while (v179);
          if (v176 != v175)
          {
LABEL_144:
            uint64_t v181 = v175 - v176;
            uint64_t v182 = 4 * v176;
            uint64_t v183 = (unsigned int *)v343 + v176;
            int v184 = (int *)((char *)v172 + v182);
            do
            {
              int v185 = *v184++;
              *v183++ = v185 | 0xC0000000;
              --v181;
            }
            while (v181);
          }
        }
        sub_1000CD4D0(v172, 4 * v159);
LABEL_149:
        if (v173 < v159) {
          break;
        }
        sub_1000CD4D0(v343, 4 * v159);
        v159 *= 2;
        int v343 = (void *)sub_1000CD3E8(4 * v159, v186, v187, v188, v189, v190, v191, v192);
      }
      if (v322 >= 1 && v173 >= 1)
      {
        uint64_t v329 = v173;
        uint64_t v193 = v322;
        uint64_t v194 = v340;
        do
        {
          if (*(_DWORD *)(*(void *)(v194 + 8 * v158) + 4 * v193) != -1)
          {
            uint64_t v195 = (unsigned int *)v343;
            uint64_t v196 = v329;
            do
            {
              sub_1000B5360((uint64_t)a1, *v195, (uint64_t)v137, v152);
              int v198 = sub_1000CED6C((unint64_t)v152);
              if (v198)
              {
                uint64_t v199 = (v193 - v198);
                if ((v199 & 0x80000000) == 0 && !memcmp(&v106[2 * v199], v152, v198))
                {
                  int v200 = v158 - sub_1000CED6C((unint64_t)v137);
                  if ((!v199 || v200) && (v199 || v200 <= 0))
                  {
                    uint64_t v197 = *(void *)(v340 + 8 * v200);
                    if (*(_DWORD *)(v197 + 4 * v199) == -1)
                    {
                      *(_DWORD *)(v197 + 4 * v199) = *v195;
                      int v201 = v330;
                      int v202 = v333;
                      if ((int)v199 < v330 && v200 == v333) {
                        int v201 = v199;
                      }
                      BOOL v204 = v200 < v333;
                      if (v200 < v333) {
                        int v202 = v200;
                      }
                      int v333 = v202;
                      if (v204) {
                        int v205 = v199;
                      }
                      else {
                        int v205 = v201;
                      }
                      int v330 = v205;
                    }
                  }
                }
              }
              ++v195;
              --v196;
            }
            while (v196);
          }
          BOOL v97 = v193-- <= 1;
          uint64_t v194 = v340;
        }
        while (!v97);
      }
      uint64_t v161 = v327 + 1;
    }
    while (v327 != v324);
    BOOL v97 = v158-- <= 1;
  }
  while (!v97);
  int v243 = v333;
  if (v333 >= v319)
  {
    char v247 = 0;
    unsigned int v244 = 0;
    int v322 = v330;
  }
  else
  {
    unsigned int v244 = 0;
    int v245 = v330;
    int v246 = v333;
    do
    {
      sub_1000B5360((uint64_t)a1, *(_DWORD *)(*(void *)(v340 + 8 * v246) + 4 * v245), (uint64_t)v137, v152);
      v246 += sub_1000CED6C((unint64_t)v137);
      v245 += sub_1000CED6C((unint64_t)v152);
      ++v244;
    }
    while (v246 < v319);
    char v247 = 1;
    int v322 = v330;
    int v243 = v333;
  }
  int v155 = v313 + 1;
LABEL_222:
  if (v243) {
    uint64_t v249 = v244 + 1;
  }
  else {
    uint64_t v249 = v244;
  }
  BOOL v250 = (int)v249 <= v155 || v310 == 0;
  int v251 = v243;
  if (v250) {
    int v252 = 0;
  }
  else {
    int v252 = v249 - v155;
  }
  uint64_t v335 = v249;
  if (v243)
  {
    if (v252 < 1)
    {
      int *v308 = 0;
      *(_DWORD *)unsigned int v317 = v243;
      _DWORD *v306 = 0;
      *int v315 = v322;
      if (v337)
      {
        char v338 = v247;
        uint64_t v255 = v325;
        j__memmove(v325, __src, 2 * v243);
        *(_WORD *)&v325[2 * v243] = 0;
        int v263 = (void *)sub_1000CD3E8(2 * (int)v299, v256, v257, v258, v259, v260, v261, v262);
        j__memmove(v263, v106, 2 * v322);
        *((_WORD *)v263 + v322) = 0;
        int v254 = v313;
        do
        {
          int v264 = (unsigned __int16)*v255;
          if (!*v255)
          {
            unsigned int v266 = -1;
            goto LABEL_244;
          }
          ++v255;
        }
        while (sub_1000CDF3C(v264));
        int v265 = sub_10008466C(*a1);
        if (v265 == 0xFFFFFF) {
          unsigned int v266 = -1;
        }
        else {
          unsigned int v266 = v265 | 0xC0000000;
        }
LABEL_244:
        sub_1000CD4D0(v263, 2 * (int)v299);
        int v251 = v243;
        char v247 = v338;
      }
      else
      {
        unsigned int v266 = -1;
        int v254 = v313;
      }
      *int v311 = v266;
      int v253 = 1;
    }
    else
    {
      int v253 = 0;
      --v252;
      int v254 = v313;
    }
  }
  else
  {
    int v253 = 0;
    int v254 = v313;
  }
  char v267 = v247 ^ 1;
  if (v253 > v254) {
    char v267 = 1;
  }
  int v268 = v322;
  if ((v267 & 1) == 0)
  {
    do
    {
      unsigned int v269 = *(_DWORD *)(*(void *)(v340 + 8 * v251) + 4 * v268);
      int v270 = v251;
      sub_1000B5360((uint64_t)a1, v269, (uint64_t)v137, v152);
      int v271 = sub_1000CED6C((unint64_t)v137);
      int v272 = sub_1000CED6C((unint64_t)v152);
      if (v252 < 1)
      {
        uint64_t v276 = v253;
        v308[v276] = v270;
        *(_DWORD *)&v317[v276 * 4] = v271;
        int v273 = v268;
        v306[v276] = v268;
        v315[v276] = v272;
        ++v253;
        v311[v276] = v269;
        int v274 = v271 + v270;
        int v275 = v313;
        if (v274 >= v319) {
          break;
        }
      }
      else
      {
        int v273 = v268;
        --v252;
        int v274 = v271 + v270;
        int v275 = v313;
        if (v274 >= v319) {
          break;
        }
      }
      int v251 = v274;
      int v268 = v272 + v273;
    }
    while (v253 <= v275);
  }
  sub_1000CD4D0(v343, 4 * v159);
  sub_1000CD4D0(v152, v294);
  sub_1000CD4D0(v137, v295);
  sub_1000CD4D0(v325, v296);
  sub_1000C3670(v340);
  int v206 = v335;
  if ((int)v335 < 1)
  {
    int v207 = v304;
  }
  else
  {
    int v207 = v304;
    if (v335 < 8)
    {
      uint64_t v277 = 0;
      uint64_t v278 = v314;
      uint64_t v279 = a10;
      goto LABEL_261;
    }
    uint64_t v278 = v314;
    uint64_t v280 = 4 * (v304 + v335);
    uint64_t v279 = a10;
    if ((unint64_t)&v314[v302] >= a10 + v280 || a10 + v302 >= (unint64_t)&v314[v280])
    {
      uint64_t v277 = v335 & 0x7FFFFFF8;
      int v282 = v297;
      int v281 = v298;
      int32x4_t v287 = vdupq_n_s32(v298);
      int32x4_t v288 = vdupq_n_s32(v297);
      uint64_t v289 = (int32x4_t *)(a10 + v302 + 16);
      uint64_t v290 = (int32x4_t *)&v314[v302 + 16];
      uint64_t v291 = v335 & 0xFFFFFFF8;
      do
      {
        int32x4_t v292 = vaddq_s32(*v290, v287);
        v290[-1] = vaddq_s32(v290[-1], v287);
        *uint64_t v290 = v292;
        int32x4_t v293 = vaddq_s32(*v289, v288);
        v289[-1] = vaddq_s32(v289[-1], v288);
        *uint64_t v289 = v293;
        v289 += 2;
        v290 += 2;
        v291 -= 8;
      }
      while (v291);
      if (v277 != v335) {
        goto LABEL_262;
      }
    }
    else
    {
      uint64_t v277 = 0;
LABEL_261:
      int v282 = v297;
      int v281 = v298;
LABEL_262:
      uint64_t v283 = 4 * (v277 + v304);
      uint64_t v284 = &v278[v283];
      uint64_t v285 = (_DWORD *)(v279 + v283);
      uint64_t v286 = v335 - v277;
      do
      {
        *(_DWORD *)v284 += v281;
        v284 += 4;
        *v285++ += v282;
        --v286;
      }
      while (v286);
    }
  }
  return (v207 + v206);
}

uint64_t sub_1000B6E84(uint64_t *a1, unint64_t a2, int a3, unsigned int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (qword_100101CC0) {
    int v190 = *(_DWORD *)(qword_100101CC0 + 5508);
  }
  else {
    int v190 = 0;
  }
  int v11 = sub_1000CED6C(a2);
  int v12 = sub_1000CAD00((unint64_t)"<START_DOCUMENT>");
  int v13 = sub_100084674(*a1);
  if (v13 <= v12) {
    int v14 = v12;
  }
  else {
    int v14 = v13;
  }
  int v15 = v14 + 1;
  int v23 = sub_100039EB4(*a1) + 1;
  uint64_t v210 = a6;
  if (qword_100101CC0) {
    unsigned int v203 = *(_DWORD *)(qword_100101CC0 + 5508);
  }
  else {
    unsigned int v203 = 0;
  }
  uint64_t v24 = 2 * v15;
  uint64_t v25 = (void *)sub_1000CD3E8(v24, v16, v17, v18, v19, v20, v21, v22);
  uint64_t v26 = 2 * v23;
  uint64_t v34 = (_WORD *)sub_1000CD3E8(v26, v27, v28, v29, v30, v31, v32, v33);
  uint64_t v42 = (_DWORD *)sub_1000CD3E8(4 * (v11 + 1), v35, v36, v37, v38, v39, v40, v41);
  uint64_t v43 = v42;
  int v201 = a5;
  uint64_t v196 = v26;
  __dst = (void *)v24;
  int v192 = v11;
  uint64_t v194 = 4 * (v11 + 1);
  if (v11 > 0)
  {
    memset(v42 + 1, 255, 4 * v11);
    *(_DWORD *)uint64_t v43 = 0;
    if (!a2)
    {
      int v45 = 0;
      int v60 = 0;
      if (a5 <= 0) {
        int v64 = a5;
      }
      else {
        int v64 = 0;
      }
      int v65 = v11;
      goto LABEL_41;
    }
    uint64_t v44 = 0;
    int v45 = 0;
    unsigned int v46 = 0;
    uint64_t v47 = v11;
    while (*((_DWORD *)v43 + v44) == -1)
    {
LABEL_13:
      if (++v44 == v47)
      {
        if (v45 < 1)
        {
          int v60 = 0;
        }
        else
        {
          int v60 = 0;
          int v61 = v45;
          do
          {
            sub_1000B5360((uint64_t)a1, *((_DWORD *)v43 + v61), (uint64_t)v25, v34);
            int v62 = sub_1000CED6C((unint64_t)v25);
            ++v60;
            BOOL v63 = __OFSUB__(v61, v62);
            v61 -= v62;
          }
          while (!((v61 < 0) ^ v63 | (v61 == 0)));
        }
        a5 = v201;
        if (v60 >= v201) {
          int v64 = v201;
        }
        else {
          int v64 = v60;
        }
        int v65 = v192 - v45;
        if (v192 == v45) {
          goto LABEL_53;
        }
LABEL_41:
        if (a3 || v60 < a5)
        {
          int v64 = a5 - 1;
          if (v60 < a5) {
            int v64 = v60;
          }
          uint64_t v66 = 4 * v64;
          *(_DWORD *)(a7 + v66) = v45;
          *(_DWORD *)(a8 + v66) = v65;
          *(_DWORD *)(v210 + v66) = -1;
        }
        int v67 = 1;
        unsigned int v68 = v64 - 1;
        if (v64 < 1) {
          goto LABEL_63;
        }
LABEL_54:
        if (v60 > v201 && a3 == 0) {
          int v70 = v60 - v201;
        }
        else {
          int v70 = 0;
        }
        do
        {
          while (1)
          {
            unsigned int v72 = *((_DWORD *)v43 + v45);
            sub_1000B5360((uint64_t)a1, v72, (uint64_t)v25, v34);
            int v73 = sub_1000CED6C((unint64_t)v25);
            v45 -= v73;
            if (v70 >= 1) {
              break;
            }
            uint64_t v71 = 4 * v68;
            *(_DWORD *)(a7 + v71) = v45;
            *(_DWORD *)(a8 + v71) = v73;
            *(_DWORD *)(v210 + v71) = v72;
            if ((--v68 & 0x80000000) != 0) {
              goto LABEL_63;
            }
          }
          --v70;
        }
        while ((v68 & 0x80000000) == 0);
        goto LABEL_63;
      }
    }
    uint64_t v48 = (_WORD *)(a2 + 2 * v44);
    do
    {
      int v49 = (unsigned __int16)*v48;
      if (!*v48) {
        goto LABEL_13;
      }
      ++v48;
    }
    while (sub_1000CDF3C(v49));
    uint64_t v57 = (void *)sub_1000CD3E8(4, v50, v51, v52, v53, v54, v55, v56);
    int v58 = sub_100084684(*a1, a4, 1, (char *)(a2 + 2 * v44), (uint64_t)v57, 1, v203);
    if (v58 < 1)
    {
      if (!v57)
      {
LABEL_22:
        if (v58)
        {
          sub_1000B5360((uint64_t)a1, v46, (uint64_t)v25, v34);
          int v59 = sub_1000CED6C((unint64_t)v25) + v44;
          if (*((_DWORD *)v43 + v59) == -1)
          {
            *((_DWORD *)v43 + v59) = v46;
            if (v59 > v45) {
              int v45 = v59;
            }
          }
        }
        goto LABEL_13;
      }
    }
    else
    {
      unsigned int v46 = *(_DWORD *)v57 | 0xC0000000;
    }
    sub_1000CD4D0(v57, 4);
    goto LABEL_22;
  }
  int v45 = 0;
  int v60 = 0;
  *uint64_t v42 = 0;
  if (a5 <= 0) {
    int v64 = a5;
  }
  else {
    int v64 = 0;
  }
  int v65 = v11;
  if (v11) {
    goto LABEL_41;
  }
LABEL_53:
  int v67 = 0;
  unsigned int v68 = v64 - 1;
  if (v64 >= 1) {
    goto LABEL_54;
  }
LABEL_63:
  sub_1000CD4D0(v43, v194);
  sub_1000CD4D0(v34, v196);
  sub_1000CD4D0(v25, (uint64_t)__dst);
  uint64_t v74 = (v67 + v60);
  uint64_t v75 = v201;
  int v76 = v201 - v74;
  if (v201 == v74)
  {
    if (v190 && *(_DWORD *)(v210 + 4 * (v201 - 1)) == -1)
    {
      uint64_t v77 = v201 - 1;
      uint64_t v78 = 2 * (int)(sub_1000CED6C(a2) + 1);
      int v86 = (void *)sub_1000CD3E8(v78, v79, v80, v81, v82, v83, v84, v85);
      j__memmove(v86, (const void *)(a2 + 2 * *(int *)(a7 + 4 * v77)), 2 * *(int *)(a8 + 4 * v77));
      *((_WORD *)v86 + *(int *)(a8 + 4 * v77)) = 0;
      uint64_t v87 = v86;
      do
      {
        int v88 = (unsigned __int16)*v87;
        if (!*v87)
        {
          unsigned int v90 = -1;
          goto LABEL_101;
        }
        ++v87;
      }
      while (sub_1000CDF3C(v88));
      int v89 = sub_10008466C(*a1);
      unsigned int v90 = v89 | 0xC0000000;
      if (v89 == 0xFFFFFF) {
        unsigned int v90 = -1;
      }
LABEL_101:
      uint64_t v75 = v201;
      *(_DWORD *)(v210 + 4 * v77) = v90;
      sub_1000CD4D0(v86, v78);
    }
    return v75;
  }
  int v91 = v74 - 1;
  uint64_t v75 = v74;
  if (*(_DWORD *)(v210 + 4 * ((int)v74 - 1)) != -1) {
    return v75;
  }
  uint64_t v191 = v91;
  uint64_t v193 = (unsigned int *)(v210 + 4 * ((int)v74 - 1));
  uint64_t v92 = 4 * v91;
  uint64_t v197 = (_DWORD *)(a7 + v92);
  uint64_t v93 = *(int *)(a7 + v92);
  int v94 = (char *)(a2 + 2 * v93);
  unsigned int v204 = sub_1000CED6C((unint64_t)v94);
  int v95 = sub_1000CAD00((unint64_t)"<START_DOCUMENT>");
  int v96 = sub_100084674(*a1);
  if (v96 <= v95) {
    int v97 = v95;
  }
  else {
    int v97 = v96;
  }
  int v98 = v97 + 1;
  int v106 = sub_100039EB4(*a1) + 1;
  unsigned int v213 = a1;
  if (qword_100101CC0) {
    int v211 = *(_DWORD *)(qword_100101CC0 + 5508);
  }
  else {
    int v211 = 0;
  }
  uint64_t v195 = (signed int *)(a8 + v92);
  int v186 = v76 + 1;
  LODWORD(v92) = v204;
  __dsta = (char *)sub_1000CD3E8(2 * (int)(v204 + 1), v99, v100, v101, v102, v103, v104, v105);
  j__memmove(__dsta, v94, (int)(v204 + 1));
  uint64_t v107 = 2 * v98;
  int v115 = (void *)sub_1000CD3E8(v107, v108, v109, v110, v111, v112, v113, v114);
  uint64_t v116 = 2 * v106;
  uint64_t v124 = (_WORD *)sub_1000CD3E8(v116, v117, v118, v119, v120, v121, v122, v123);
  uint64_t v132 = (char *)sub_1000CD3E8(4 * (int)(v204 + 1), v125, v126, v127, v128, v129, v130, v131);
  uint64_t v133 = v132;
  uint64_t v209 = v132;
  unsigned int v189 = v93;
  uint64_t v187 = v116;
  uint64_t v188 = v107;
  if ((v204 & 0x80000000) != 0)
  {
    char v155 = 0;
    signed int v136 = v204;
    LODWORD(v92) = 0;
    *(_DWORD *)&v132[4 * v204] = 0;
    goto LABEL_113;
  }
  memset(v132, 255, 4 * (v204 + 1));
  *(_DWORD *)&v133[4 * v204] = 0;
  if (!v204)
  {
    char v155 = 0;
    signed int v136 = 0;
    goto LABEL_112;
  }
  uint64_t v134 = v204;
  if (!a2)
  {
    if (v204 < 0xE || __dsta + 2 < &v209[4 * v204 + 4] && v209 + 4 < &__dsta[2 * v204 + 2])
    {
      uint64_t v157 = v204;
      int v158 = v76 + 1;
      goto LABEL_172;
    }
    uint64_t v157 = v204 & 3;
    long long v180 = (int32x2_t *)&v209[4 * v204 - 4];
    uint64_t v181 = &__dsta[2 * v204 - 2];
    uint64_t v182 = v204 & 0xFFFFFFFC;
    int v158 = v76 + 1;
    while (1)
    {
      int32x2_t v183 = vrev64_s32(*v180);
      int32x2_t v184 = v180[-1];
      if (vmvn_s8((int8x8_t)vceq_s32(v183, (int32x2_t)-1)).u8[0])
      {
        *((_WORD *)v181 + 1) = 0;
        if ((vmvn_s8((int8x8_t)vceq_s32(v183, (int32x2_t)-1)).i32[1] & 1) == 0)
        {
LABEL_162:
          int32x2_t v185 = vrev64_s32(v184);
          if ((vmvn_s8((int8x8_t)vceq_s32(v185, (int32x2_t)-1)).u8[0] & 1) == 0) {
            goto LABEL_163;
          }
          goto LABEL_167;
        }
      }
      else if ((vmvn_s8((int8x8_t)vceq_s32(v183, (int32x2_t)-1)).i32[1] & 1) == 0)
      {
        goto LABEL_162;
      }
      *(_WORD *)uint64_t v181 = 0;
      int32x2_t v185 = vrev64_s32(v184);
      if ((vmvn_s8((int8x8_t)vceq_s32(v185, (int32x2_t)-1)).u8[0] & 1) == 0)
      {
LABEL_163:
        if (vmvn_s8((int8x8_t)vceq_s32(v185, (int32x2_t)-1)).i32[1]) {
          goto LABEL_168;
        }
        goto LABEL_159;
      }
LABEL_167:
      *((_WORD *)v181 - 1) = 0;
      if (vmvn_s8((int8x8_t)vceq_s32(v185, (int32x2_t)-1)).i32[1]) {
LABEL_168:
      }
        *((_WORD *)v181 - 2) = 0;
LABEL_159:
      v180 -= 2;
      v181 -= 8;
      v182 -= 4;
      if (!v182)
      {
        if ((v204 & 0xFFFFFFFC) == (unint64_t)v204)
        {
LABEL_170:
          char v155 = 0;
          LODWORD(v92) = 0;
          signed int v136 = v204;
          uint64_t v133 = v209;
          goto LABEL_114;
        }
        do
        {
LABEL_172:
          if (*(_DWORD *)&v209[4 * v157] != -1) {
            *(_WORD *)&__dsta[2 * v157] = 0;
          }
          BOOL v139 = v157-- <= 1;
        }
        while (!v139);
        goto LABEL_170;
      }
    }
  }
  unsigned int v135 = 0;
  signed int v136 = v204;
  int v207 = v76;
  unint64_t v137 = (unint64_t)v115;
  unsigned int v138 = v204 + 1;
  do
  {
    unsigned int v202 = v138;
    if (*(_DWORD *)&v209[4 * v134] != -1)
    {
      *(_WORD *)&__dsta[2 * v134] = 0;
      uint64_t v140 = 1;
      uint64_t v141 = v138;
      while (1)
      {
        uint64_t v142 = v124;
        uint64_t v143 = &v94[2 * (v134 - v140)];
        do
        {
          int v144 = *(unsigned __int16 *)v143;
          if (!*(_WORD *)v143) {
            goto LABEL_85;
          }
          v143 += 2;
        }
        while (sub_1000CDF3C(v144));
        int v152 = (void *)sub_1000CD3E8(4, v145, v146, v147, v148, v149, v150, v151);
        int v153 = sub_1000847D4(*v213);
        if (v153 >= 1) {
          break;
        }
        if (v152) {
          goto LABEL_93;
        }
LABEL_94:
        if (!v153)
        {
LABEL_85:
          uint64_t v124 = v142;
          unint64_t v137 = (unint64_t)v115;
          goto LABEL_86;
        }
        unint64_t v137 = (unint64_t)v115;
        uint64_t v124 = v142;
        sub_1000B5360((uint64_t)v213, v135, (uint64_t)v115, v142);
        signed int v154 = v134 - sub_1000CED6C((unint64_t)v115);
        if (*(_DWORD *)&v209[4 * v154] == -1)
        {
          *(_DWORD *)&v209[4 * v154] = v135;
          if (v154 < v136) {
            signed int v136 = v154;
          }
        }
LABEL_86:
        if (++v140 == v141) {
          goto LABEL_82;
        }
      }
      unsigned int v135 = *(_DWORD *)v152 | 0xC0000000;
LABEL_93:
      sub_1000CD4D0(v152, 4);
      goto LABEL_94;
    }
LABEL_82:
    unsigned int v138 = v202 - 1;
    BOOL v139 = v134-- <= 1;
    int v76 = v207;
  }
  while (!v139);
  if (v136 >= (int)v204)
  {
    char v155 = 0;
    LODWORD(v92) = 0;
  }
  else
  {
    LODWORD(v92) = 0;
    signed int v156 = v136;
    do
    {
      sub_1000B5360((uint64_t)v213, *(_DWORD *)&v209[4 * v156], v137, v124);
      v156 += sub_1000CED6C(v137);
      LODWORD(v92) = v92 + 1;
    }
    while (v156 < (int)v204);
    char v155 = 1;
  }
LABEL_112:
  uint64_t v133 = v209;
LABEL_113:
  int v158 = v186;
LABEL_114:
  if (v136) {
    uint64_t v92 = (v92 + 1);
  }
  else {
    uint64_t v92 = v92;
  }
  if ((int)v92 <= v158 || a3 == 0) {
    int v160 = 0;
  }
  else {
    int v160 = v92 - v158;
  }
  if (v136)
  {
    if (v160 < 1)
    {
      *uint64_t v197 = 0;
      *uint64_t v195 = v136;
      if (v211)
      {
        j__memmove(__dsta, v94, 2 * v136);
        *(_WORD *)&__dsta[2 * v136] = 0;
        int v164 = __dsta;
        uint64_t v133 = v209;
        while (1)
        {
          int v165 = (unsigned __int16)*v164;
          if (!*v164) {
            break;
          }
          ++v164;
          if (!sub_1000CDF3C(v165))
          {
            int v166 = sub_10008466C(*v213);
            unsigned int v167 = v166 | 0xC0000000;
            if (v166 == 0xFFFFFF) {
              unsigned int v167 = -1;
            }
            goto LABEL_140;
          }
        }
      }
      unsigned int v167 = -1;
LABEL_140:
      *uint64_t v193 = v167;
      int v161 = 1;
      char v168 = v155 ^ 1;
      if (v76 < 1) {
        char v168 = 1;
      }
      if ((v168 & 1) == 0) {
        goto LABEL_143;
      }
    }
    else
    {
      int v161 = 0;
      --v160;
      char v162 = v155 ^ 1;
      if (v76 < 0) {
        char v162 = 1;
      }
      if ((v162 & 1) == 0) {
        goto LABEL_143;
      }
    }
  }
  else
  {
    int v161 = 0;
    char v163 = v155 ^ 1;
    if (v76 < 0) {
      char v163 = 1;
    }
    if ((v163 & 1) == 0)
    {
      do
      {
LABEL_143:
        unsigned int v169 = *(_DWORD *)&v133[4 * v136];
        sub_1000B5360((uint64_t)v213, v169, (uint64_t)v115, v124);
        signed int v170 = sub_1000CED6C((unint64_t)v115);
        if (v160 < 1)
        {
          uint64_t v171 = v161;
          v197[v171] = v136;
          v195[v171] = v170;
          v193[v171] = v169;
          ++v161;
          v136 += v170;
          if (v136 >= (int)v204) {
            break;
          }
        }
        else
        {
          --v160;
          v136 += v170;
          if (v136 >= (int)v204) {
            break;
          }
        }
      }
      while (v161 <= v76);
    }
  }
  sub_1000CD4D0(v133, 4 * (int)(v204 + 1));
  sub_1000CD4D0(v124, v187);
  sub_1000CD4D0(v115, v188);
  sub_1000CD4D0(__dsta, 2 * (int)(v204 + 1));
  if ((int)v92 >= 1)
  {
    if (v92 < 8)
    {
      uint64_t v172 = 0;
      goto LABEL_154;
    }
    uint64_t v172 = v92 & 0x7FFFFFF8;
    int32x4_t v173 = vdupq_n_s32(v189);
    int v174 = (int32x4_t *)(a7 + 4 * v191 + 16);
    uint64_t v175 = v92 & 0xFFFFFFF8;
    do
    {
      int32x4_t v176 = vaddq_s32(*v174, v173);
      v174[-1] = vaddq_s32(v174[-1], v173);
      *int v174 = v176;
      v174 += 2;
      v175 -= 8;
    }
    while (v175);
    if (v172 != v92)
    {
LABEL_154:
      uint64_t v177 = (_DWORD *)(a7 + 4 * (v172 + v191));
      uint64_t v178 = v92 - v172;
      do
      {
        *v177++ += v189;
        --v178;
      }
      while (v178);
    }
  }
  return (v191 + v92);
}

uint64_t sub_1000B797C(uint64_t *a1, int a2, unint64_t a3, unsigned int a4, unsigned int a5, uint64_t a6, _DWORD *a7, _DWORD *a8, char *a9, char *a10, unsigned char *a11)
{
  int v15 = a9;
  if (a2 == 1)
  {
    int v16 = sub_100084664(*a1);
    int v15 = a9;
    a2 = v16;
  }
  int v452 = a8;
  uint64_t v462 = a6;
  switch(a2)
  {
    case 2:
      v484 = a10;
      uint64_t v486 = a11;
      uint64_t v17 = a1;
      goto LABEL_24;
    case 3:
      v482[0] = 0;
      int v19 = sub_1000CAD00((unint64_t)"<START_DOCUMENT>");
      int v20 = sub_100084674(*a1);
      if (v20 <= v19) {
        int v21 = v19;
      }
      else {
        int v21 = v20;
      }
      int v22 = sub_100039EB4(*a1);
      int v453 = sub_1000CED6C(a3);
      int v23 = (unsigned __int8 *)sub_10005A710(*a1);
      int v459 = a4;
      if (!sub_1000CAF00(v23, "dede"))
      {
        char v449 = 0;
        uint64_t v39 = L",";
        double v463 = (__int16 *)"K";
        uint64_t v467 = L"Dezimalkomma";
        uint64_t v37 = L"Internetpunkt";
        uint64_t v36 = (char *)L"Punkt";
        goto LABEL_205;
      }
      uint64_t v31 = (unsigned __int8 *)sub_10005A710(*a1);
      if (!sub_1000CAF00(v31, "engb"))
      {
        char v449 = 0;
        uint64_t v39 = L".";
        uint64_t v37 = (__int16 *)"d";
        uint64_t v36 = "f";
LABEL_198:
        uint64_t v38 = "d";
        double v463 = (__int16 *)"p";
        uint64_t v467 = (__int16 *)"p";
        goto LABEL_206;
      }
      uint64_t v32 = (unsigned __int8 *)sub_10005A710(*a1);
      if (!sub_1000CAF00(v32, "enus"))
      {
        char v449 = 0;
        uint64_t v39 = L".";
        uint64_t v37 = (__int16 *)"d";
        uint64_t v36 = "p";
        goto LABEL_198;
      }
      uint64_t v33 = (unsigned __int8 *)sub_10005A710(*a1);
      if (!sub_1000CAF00(v33, "eses"))
      {
        char v449 = 0;
        uint64_t v39 = L",";
        double v463 = L"coma";
        unint64_t v248 = "c";
LABEL_204:
        uint64_t v467 = (__int16 *)v248;
        uint64_t v37 = L"punto-internet";
        uint64_t v36 = (char *)L"punto";
        goto LABEL_205;
      }
      uint64_t v34 = (unsigned __int8 *)sub_10005A710(*a1);
      if (sub_1000CAF00(v34, "frfr"))
      {
        uint64_t v35 = (unsigned __int8 *)sub_10005A710(*a1);
        if (sub_1000CAF00(v35, "itit"))
        {
          uint64_t v36 = 0;
          uint64_t v37 = 0;
          uint64_t v38 = 0;
          double v463 = 0;
          uint64_t v467 = 0;
          uint64_t v39 = 0;
          char v449 = 1;
          goto LABEL_206;
        }
        char v449 = 0;
        uint64_t v39 = L",";
        double v463 = L"virgola";
        unint64_t v248 = (const char *)&unk_1000F590A;
        goto LABEL_204;
      }
      char v449 = 0;
      uint64_t v39 = L",";
      double v463 = (__int16 *)&unk_1000F58FA;
      uint64_t v467 = aVirguleD;
      uint64_t v37 = (__int16 *)"p";
      uint64_t v36 = "p";
LABEL_205:
      uint64_t v38 = v36;
LABEL_206:
      int v249 = v21 + 1;
      int v250 = v22 + 1;
      *a7 = -1;
      if ((int)v462 >= 1 && a10) {
        bzero(a10, v462);
      }
      uint64_t v434 = (void *)sub_1000CD3E8(2 * (v453 + 1), v24, v25, v26, v27, v28, v29, v30);
      uint64_t v251 = 2 * v249;
      int v479 = (void *)sub_1000CD3E8(v251, v252, v253, v254, v255, v256, v257, v258);
      int v473 = (_WORD *)sub_1000CD3E8(2 * v250, v259, v260, v261, v262, v263, v264, v265);
      unint64_t v476 = sub_1000CD3E8(120, v266, v267, v268, v269, v270, v271, v272);
      v438 = v39;
      uint64_t v431 = v251;
      uint64_t v432 = 2 * (v453 + 1);
      uint64_t v430 = 2 * v250;
      if (sub_1000CDF3C(46))
      {
        int v436 = -1;
        int v280 = -1;
        int v281 = -1;
        goto LABEL_211;
      }
      unint64_t v395 = sub_1000CD3E8(120, v273, v274, v275, v276, v277, v278, v279);
      int v396 = sub_1000847D4(*a1);
      if (v396 >= 1)
      {
        unsigned int v397 = v396;
        uint64_t v398 = 0;
        if (v396 >= 30) {
          uint64_t v399 = 30;
        }
        else {
          uint64_t v399 = v396;
        }
        if (v399 < 8)
        {
          unint64_t v400 = v476;
        }
        else
        {
          unint64_t v400 = v476;
          if (v476 - v395 >= 0x20)
          {
            uint64_t v398 = v399 & 0x18;
            *(void *)&long long v401 = __PAIR64__(HIDWORD(*(void *)v395), *(_OWORD *)v395) | 0xC0000000C0000000;
            DWORD2(v401) = *(void *)(v395 + 8) | 0xC0000000;
            HIDWORD(v401) = HIDWORD(*(_OWORD *)v395) | 0xC0000000;
            unsigned long long v402 = *(_OWORD *)(v395 + 16) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
            *(_OWORD *)unint64_t v476 = v401;
            *(_OWORD *)(v476 + 16) = v402;
            if ((v399 & 0xFFFFFFF8) != 8)
            {
              unsigned long long v403 = *(_OWORD *)(v395 + 48) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
              *(_OWORD *)(v476 + 32) = *(_OWORD *)(v395 + 32) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
              *(_OWORD *)(v476 + 48) = v403;
              if (v398 != 16)
              {
                unsigned long long v404 = *(_OWORD *)(v395 + 80) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
                *(_OWORD *)(v476 + 64) = *(_OWORD *)(v395 + 64) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
                *(_OWORD *)(v476 + 80) = v404;
              }
            }
            if (v398 == v399) {
              goto LABEL_417;
            }
          }
        }
        uint64_t v405 = v399 - v398;
        uint64_t v406 = 4 * v398;
        int v407 = (unsigned int *)(v400 + 4 * v398);
        int v408 = (int *)(v395 + v406);
        do
        {
          int v409 = *v408++;
          *v407++ = v409 | 0xC0000000;
          --v405;
        }
        while (v405);
LABEL_417:
        sub_1000CD4D0((void *)v395, 120);
        unint64_t v410 = v476;
        uint64_t v411 = v397 + 1;
        int v281 = -1;
        int v280 = -1;
        int v436 = -1;
        uint64_t v39 = v438;
        while (1)
        {
          while (1)
          {
            uint64_t v413 = (v411 - 2);
            sub_1000B5360((uint64_t)a1, *(_DWORD *)(v410 + 4 * v413), (uint64_t)v479, v473);
            if (sub_1000CF684(v473, v36)) {
              break;
            }
            int v436 = *(_DWORD *)(v476 + 4 * v413);
            if (!sub_1000CF684(v473, v37)) {
              goto LABEL_418;
            }
LABEL_424:
            int v414 = sub_1000CF684(v473, v38);
            unint64_t v410 = v476;
            if (v414) {
              goto LABEL_419;
            }
LABEL_425:
            int v281 = *(_DWORD *)(v410 + 4 * v413);
            if ((unint64_t)--v411 <= 1) {
              goto LABEL_211;
            }
          }
          if (sub_1000CF684(v473, v37)) {
            goto LABEL_424;
          }
LABEL_418:
          int v280 = *(_DWORD *)(v476 + 4 * v413);
          int v412 = sub_1000CF684(v473, v38);
          unint64_t v410 = v476;
          if (!v412) {
            goto LABEL_425;
          }
LABEL_419:
          if ((unint64_t)--v411 <= 1) {
            goto LABEL_211;
          }
        }
      }
      if (v395) {
        sub_1000CD4D0((void *)v395, 120);
      }
      int v436 = -1;
      int v280 = -1;
      int v281 = -1;
      uint64_t v39 = v438;
LABEL_211:
      int v282 = v462;
      if (v449)
      {
LABEL_212:
        if (v280 == -1) {
          int v283 = v281;
        }
        else {
          int v283 = v280;
        }
        int v284 = -1;
        uint64_t v285 = (void *)v476;
        goto LABEL_216;
      }
      uint64_t v376 = v39;
      do
      {
        int v377 = *(unsigned __int16 *)v376;
        if (!*v376) {
          goto LABEL_212;
        }
        ++v376;
      }
      while (sub_1000CDF3C(v377));
      unint64_t v385 = sub_1000CD3E8(120, v378, v379, v380, v381, v382, v383, v384);
      int v386 = sub_1000847D4(*a1);
      if (v386 < 1)
      {
        int v282 = v462;
        if (v385) {
          sub_1000CD4D0((void *)v385, 120);
        }
        goto LABEL_212;
      }
      unsigned int v387 = v386;
      uint64_t v388 = 0;
      if (v386 >= 30) {
        uint64_t v389 = 30;
      }
      else {
        uint64_t v389 = v386;
      }
      if (v389 < 8)
      {
        unint64_t v390 = v476;
      }
      else
      {
        unint64_t v390 = v476;
        if (v476 - v385 >= 0x20)
        {
          uint64_t v388 = v389 & 0x18;
          *(void *)&long long v391 = __PAIR64__(HIDWORD(*(void *)v385), *(_OWORD *)v385) | 0xC0000000C0000000;
          DWORD2(v391) = *(void *)(v385 + 8) | 0xC0000000;
          HIDWORD(v391) = HIDWORD(*(_OWORD *)v385) | 0xC0000000;
          unsigned long long v392 = *(_OWORD *)(v385 + 16) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
          *(_OWORD *)unint64_t v476 = v391;
          *(_OWORD *)(v476 + 16) = v392;
          if ((v389 & 0xFFFFFFF8) != 8)
          {
            unsigned long long v393 = *(_OWORD *)(v385 + 48) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
            *(_OWORD *)(v476 + 32) = *(_OWORD *)(v385 + 32) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
            *(_OWORD *)(v476 + 48) = v393;
            if (v388 != 16)
            {
              unsigned long long v394 = *(_OWORD *)(v385 + 80) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
              *(_OWORD *)(v476 + 64) = *(_OWORD *)(v385 + 64) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
              *(_OWORD *)(v476 + 80) = v394;
            }
          }
          if (v388 == v389) {
            goto LABEL_430;
          }
        }
      }
      uint64_t v415 = v389 - v388;
      uint64_t v416 = 4 * v388;
      v417 = (unsigned int *)(v390 + 4 * v388);
      int v418 = (int *)(v385 + v416);
      do
      {
        int v419 = *v418++;
        *v417++ = v419 | 0xC0000000;
        --v415;
      }
      while (v415);
LABEL_430:
      sub_1000CD4D0((void *)v385, 120);
      uint64_t v285 = (void *)v476;
      unint64_t v420 = v387 + 1;
      int v284 = -1;
      int v421 = -1;
      do
      {
        while (1)
        {
          uint64_t v423 = (v420 - 2);
          sub_1000B5360((uint64_t)a1, *((_DWORD *)v285 + v423), (uint64_t)v479, v473);
          if (sub_1000CF684(v473, v467)) {
            break;
          }
          int v421 = *(_DWORD *)(v476 + 4 * v423);
          int v422 = sub_1000CF684(v473, v463);
          uint64_t v285 = (void *)v476;
          if (!v422) {
            goto LABEL_435;
          }
LABEL_432:
          if (--v420 <= 1) {
            goto LABEL_436;
          }
        }
        int v424 = sub_1000CF684(v473, v463);
        uint64_t v285 = (void *)v476;
        if (v424) {
          goto LABEL_432;
        }
LABEL_435:
        int v284 = *((_DWORD *)v285 + v423);
        --v420;
      }
      while (v420 > 1);
LABEL_436:
      if (v280 == -1) {
        int v283 = v281;
      }
      else {
        int v283 = v280;
      }
      int v286 = v421;
      int v282 = v462;
      if (v421 == -1) {
LABEL_216:
      }
        int v286 = v284;
      if (v436 == -1 || v283 == -1 || v286 == -1)
      {
        sub_1000CD4D0(v285, 120);
        sub_1000CD4D0(v473, v430);
        sub_1000CD4D0(v479, v431);
        sub_1000CD4D0(v434, v432);
        if (v282 < 1) {
          return 1;
        }
        *a7 = -1;
        if (v452) {
          *int v452 = 0;
        }
        if (a9) {
          *(_DWORD *)a9 = v453;
        }
        if (!a11) {
          return 1;
        }
        *a11 = 0;
        return 1;
      }
      int v428 = v283;
      int v426 = v286;
      uint64_t v179 = 0;
      unint64_t v441 = -2 - a3;
      uint64_t v287 = a3;
      while (2)
      {
        while (2)
        {
          unint64_t v289 = 0;
          do
          {
            int v290 = sub_1000CDF3C(*(unsigned __int16 *)(v287 + v289));
            v289 += 2;
          }
          while (v290);
          uint64_t v291 = (unsigned __int16 *)(v287 + v289 - 2);
          if (!*v291) {
            goto LABEL_405;
          }
          int v444 = (_WORD *)(v287 + v289);
          int v292 = 1;
          int32x4_t v293 = (unsigned __int16 *)(v287 + v289 - 2);
          do
          {
            memset(v481, 0, sizeof(v481));
            sub_1000CEA38(*v293, 0, 0, 0, (unsigned int *)&v481[8], 0, 0, &v481[4], v481, 0, 0);
            if (!*(void *)v481) {
              break;
            }
            int v295 = v293[1];
            ++v293;
            int v294 = v295;
            if (!*(_DWORD *)&v481[4]) {
              int v292 = 0;
            }
          }
          while (v294);
          int v470 = v179;
          BOOL v296 = v291 == v293;
          double v466 = &v293[v291 == v293];
          if (!v292) {
            BOOL v296 = 1;
          }
          BOOL v450 = v296;
          if (!v296 && *v466 == *(unsigned __int16 *)v39 && sub_1000CDF18(v466[1]))
          {
            uint64_t v297 = 0;
            while (1)
            {
              uint64_t v298 = &v466[v297];
              BOOL v299 = v466[v297 + 2] != *(unsigned __int16 *)v39 || !sub_1000CDF18(v298[3]);
              memset(v481, 0, sizeof(v481));
              sub_1000CEA38(v298[2], 0, 0, 0, (unsigned int *)v481, 0, 0, &v481[8], &v481[4], 0, 0);
              if (!*(void *)&v481[4]) {
                break;
              }
              if (*(_DWORD *)&v481[8])
              {
                ++v297;
                if (v299) {
                  continue;
                }
              }
              goto LABEL_259;
            }
            if (v299)
            {
              int v300 = v434;
              sub_1000CEE30((uint64_t)v434, v287 + v289 - 2, ((unint64_t)&v466[v289 / 0xFFFFFFFFFFFFFFFELL + 1] - v287) >> 1);
              unint64_t v451 = ((unint64_t)&v466[v289 / 0xFFFFFFFFFFFFFFFELL + 1] - v287) >> 1;
              *((_WORD *)v434 + (int)v451) = 0;
              uint64_t v456 = (uint64_t)&v466[v297 + 2];
              do
              {
                int v301 = (unsigned __int16)*v300;
                if (!*v300) {
                  goto LABEL_333;
                }
                ++v300;
              }
              while (sub_1000CDF3C(v301));
              unint64_t v309 = sub_1000CD3E8(120, v302, v303, v304, v305, v306, v307, v308);
              int v310 = sub_1000847D4(*a1);
              if (v310 >= 1)
              {
                uint64_t v311 = 0;
                if (v310 >= 30) {
                  uint64_t v312 = 30;
                }
                else {
                  uint64_t v312 = v310;
                }
                if (v312 < 8)
                {
                  int v314 = v462;
                  unint64_t v313 = v476;
                }
                else
                {
                  unint64_t v313 = v476;
                  int v314 = v462;
                  if (v476 - v309 >= 0x20)
                  {
                    uint64_t v311 = v312 & 0x18;
                    *(void *)&long long v315 = __PAIR64__(HIDWORD(*(void *)v309), *(_OWORD *)v309) | 0xC0000000C0000000;
                    DWORD2(v315) = *(void *)(v309 + 8) | 0xC0000000;
                    HIDWORD(v315) = HIDWORD(*(_OWORD *)v309) | 0xC0000000;
                    unsigned long long v316 = *(_OWORD *)(v309 + 16) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
                    *(_OWORD *)unint64_t v476 = v315;
                    *(_OWORD *)(v476 + 16) = v316;
                    if ((v312 & 0xFFFFFFF8) != 8)
                    {
                      unsigned long long v317 = *(_OWORD *)(v309 + 48) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
                      *(_OWORD *)(v476 + 32) = *(_OWORD *)(v309 + 32) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
                      *(_OWORD *)(v476 + 48) = v317;
                      if (v311 != 16)
                      {
                        unsigned long long v318 = *(_OWORD *)(v309 + 80) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
                        *(_OWORD *)(v476 + 64) = *(_OWORD *)(v309 + 64) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
                        *(_OWORD *)(v476 + 80) = v318;
                      }
                    }
                    if (v311 == v312)
                    {
LABEL_343:
                      sub_1000CD4D0((void *)v309, 120);
                      int v373 = v482[0];
                      if (v482[0] >= v314 && v459 != 0) {
                        int v373 = 0;
                      }
                      if (v373 < v314)
                      {
                        a7[v373] = *(_DWORD *)v476;
                        if (v452) {
                          v452[v373] = (v441 + v287 + v289) >> 1;
                        }
                        if (a9) {
                          *(_DWORD *)&a9[4 * v373] = v451;
                        }
                        if (a11) {
                          a11[v373] = 1;
                        }
                      }
                      int v366 = v373 + 1;
                      int v365 = v470 + 1;
                      uint64_t v362 = (uint64_t)v452;
                      uint64_t v364 = (uint64_t)a9;
                      uint64_t v361 = a11;
                      if (v366 >= v314 && v459 != 0) {
                        int v366 = 0;
                      }
                      if (v366 < v314) {
                        goto LABEL_361;
                      }
                      goto LABEL_367;
                    }
                  }
                }
                uint64_t v368 = v312 - v311;
                uint64_t v369 = 4 * v311;
                uint64_t v370 = (unsigned int *)(v313 + 4 * v311);
                int v371 = (int *)(v309 + v369);
                do
                {
                  int v372 = *v371++;
                  *v370++ = v372 | 0xC0000000;
                  --v368;
                }
                while (v368);
                goto LABEL_343;
              }
              if (v309) {
                sub_1000CD4D0((void *)v309, 120);
              }
LABEL_333:
              unint64_t v360 = (v441 + v287 + v289) >> 1;
              uint64_t v361 = a11;
              uint64_t v362 = (uint64_t)v452;
              int v314 = v462;
              int v363 = sub_1000BAA4C(a1, (uint64_t)v291, v360, v451, v459, v462, (uint64_t)a7, (uint64_t)v452, (uint64_t)a9, 0, (uint64_t)a11, v482, 1);
              uint64_t v364 = (uint64_t)a9;
              int v365 = v363 + v470;
              int v366 = v482[0];
              if (v482[0] >= (int)v462 && v459 != 0) {
                int v366 = 0;
              }
              if (v366 < (int)v462)
              {
LABEL_361:
                a7[v366] = v426;
                if (v362) {
                  *(_DWORD *)(v362 + 4 * v366) = ((unint64_t)v466 - a3) >> 1;
                }
                if (v364) {
                  *(_DWORD *)(v364 + 4 * v366) = 1;
                }
                if (v361) {
                  v361[v366] = 1;
                }
              }
LABEL_367:
              v482[0] = v366 + 1;
              uint64_t v179 = v365
                   + sub_1000BAA4C(a1, (uint64_t)(v466 + 1), ((unint64_t)v466 - a3 + 2) >> 1, (unint64_t)(v297 * 2 + 2) >> 1, v459, v314, (uint64_t)a7, v362, v364, 0, (uint64_t)v361, v482, 1)+ 1;
              uint64_t v287 = v456;
              uint64_t v39 = v438;
              continue;
            }
          }
          break;
        }
LABEL_259:
        unint64_t v319 = ((unint64_t)&v466[v289 / 0xFFFFFFFFFFFFFFFELL + 1] - v287) >> 1;
        int v320 = (_WORD *)(v287 + v289 - 2);
        int v447 = v319;
        do
        {
          int v321 = (unsigned __int16)*v320;
          if (!*v320)
          {
            BOOL v339 = 0;
            LODWORD(v340) = v319;
            uint64_t v341 = (uint64_t)a9;
            unint64_t v342 = (v441 + v287 + v289) >> 1;
            if (!v450) {
              goto LABEL_289;
            }
            goto LABEL_274;
          }
          ++v320;
        }
        while (sub_1000CDF3C(v321));
        unint64_t v329 = sub_1000CD3E8(120, v322, v323, v324, v325, v326, v327, v328);
        int v330 = sub_100084684(*a1, 0, v319, (char *)(v287 + v289 - 2), v329, 30, 0);
        if (v330 < 1)
        {
          if (v329) {
            sub_1000CD4D0((void *)v329, 120);
          }
          BOOL v339 = 0;
          LODWORD(v340) = v319;
          uint64_t v341 = (uint64_t)a9;
          uint64_t v39 = v438;
          unint64_t v342 = (v441 + v287 + v289) >> 1;
          if (!v450) {
            goto LABEL_289;
          }
          goto LABEL_274;
        }
        unsigned int v331 = v330;
        uint64_t v332 = 0;
        if (v330 >= 30) {
          uint64_t v333 = 30;
        }
        else {
          uint64_t v333 = v330;
        }
        if (v333 < 8)
        {
          unint64_t v334 = v476;
LABEL_291:
          uint64_t v345 = v333 - v332;
          uint64_t v346 = 4 * v332;
          int v347 = (unsigned int *)(v334 + 4 * v332);
          int v348 = (int *)(v329 + v346);
          do
          {
            int v349 = *v348++;
            *v347++ = v349 | 0xC0000000;
            --v345;
          }
          while (v345);
          goto LABEL_293;
        }
        unint64_t v334 = v476;
        if (v476 - v329 < 0x20) {
          goto LABEL_291;
        }
        uint64_t v332 = v333 & 0x18;
        *(void *)&long long v335 = __PAIR64__(HIDWORD(*(void *)v329), *(_OWORD *)v329) | 0xC0000000C0000000;
        DWORD2(v335) = *(void *)(v329 + 8) | 0xC0000000;
        HIDWORD(v335) = HIDWORD(*(_OWORD *)v329) | 0xC0000000;
        unsigned long long v336 = *(_OWORD *)(v329 + 16) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
        *(_OWORD *)unint64_t v476 = v335;
        *(_OWORD *)(v476 + 16) = v336;
        if ((v333 & 0xFFFFFFF8) != 8)
        {
          unsigned long long v337 = *(_OWORD *)(v329 + 48) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
          *(_OWORD *)(v476 + 32) = *(_OWORD *)(v329 + 32) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
          *(_OWORD *)(v476 + 48) = v337;
          if (v332 != 16)
          {
            unsigned long long v338 = *(_OWORD *)(v329 + 80) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
            *(_OWORD *)(v476 + 64) = *(_OWORD *)(v329 + 64) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
            *(_OWORD *)(v476 + 80) = v338;
          }
        }
        if (v332 != v333) {
          goto LABEL_291;
        }
LABEL_293:
        sub_1000CD4D0((void *)v329, 120);
        if (v331 != 30)
        {
          BOOL v457 = 0;
          uint64_t v350 = v331 + 1;
          int v351 = -1;
          unint64_t v340 = ((unint64_t)&v466[v289 / 0xFFFFFFFFFFFFFFFELL + 1] - v287) >> 1;
          unint64_t v352 = v476;
          while (2)
          {
            unint64_t v353 = v340;
            uint64_t v354 = (v350 - 2);
            sub_1000B5360((uint64_t)a1, *(_DWORD *)(v352 + 4 * v354), (uint64_t)v479, v473);
            unint64_t v355 = sub_1000CED6C((unint64_t)v479);
            if ((int)v355 < (int)v340
              || (unint64_t v340 = v355,
                  memset(v481, 0, sizeof(v481)),
                  sub_1000CEA38(*(unsigned __int16 *)(v287 + 2 * ((int)v355 - 1) + v289 - 2), 0, 0, 0, (unsigned int *)&v481[8], 0, 0, &v481[4], v481, 0, 0), *(void *)v481)&& (sub_1000CEA38(*(unsigned __int16 *)(v287 + 2 * (int)v340 + v289 - 2), 0, 0, 0, (unsigned int *)&v481[8], 0,
                    0,
                    &v481[4],
                    v481,
                    0,
                    0),
                  *(void *)v481))
            {
              unint64_t v340 = v353;
              unint64_t v352 = v476;
              goto LABEL_296;
            }
            int v356 = sub_1000CFC34((_WORD *)(v287 + v289 - 2), v479, v340);
            unint64_t v352 = v476;
            if (v351 == -1 || (int)v340 > (int)v353) {
              goto LABEL_307;
            }
            if (v340 != v353)
            {
              unint64_t v340 = v353;
              goto LABEL_296;
            }
            if (v457 && v356)
            {
              BOOL v457 = 1;
              unint64_t v340 = v353;
            }
            else
            {
LABEL_307:
              int v351 = *(_DWORD *)(v476 + 4 * v354);
              BOOL v457 = v356 == 0;
            }
LABEL_296:
            if ((unint64_t)--v350 > 1) {
              continue;
            }
            break;
          }
          uint64_t v341 = (uint64_t)a9;
          if (v351 != -1)
          {
            if (v340 == 1)
            {
              int v357 = v462;
              if (*v291 == 46)
              {
                int v351 = v436;
                if (*v444)
                {
                  if (sub_1000CF020(asc_1000F6510, (unsigned __int16)*v444)) {
                    int v351 = v436;
                  }
                  else {
                    int v351 = v428;
                  }
                }
              }
            }
            else
            {
              int v357 = v462;
            }
            int v358 = v482[0];
            if (v482[0] >= v357 && v459 != 0) {
              int v358 = 0;
            }
            if (v358 < v357)
            {
              a7[v358] = v351;
              if (v452) {
                v452[v358] = (v441 + v287 + v289) >> 1;
              }
              if (a9) {
                *(_DWORD *)&a9[4 * v358] = v340;
              }
              if (a11) {
                a11[v358] = v457;
              }
            }
            v482[0] = v358 + 1;
            uint64_t v287 = v287 + 2 * (int)v340 + v289 - 2;
            uint64_t v179 = (v470 + 1);
            uint64_t v39 = v438;
            continue;
          }
          uint64_t v39 = v438;
          BOOL v339 = v457;
          unint64_t v342 = (v441 + v287 + v289) >> 1;
          if (!v450)
          {
LABEL_289:
            int v288 = sub_1000BAA4C(a1, v287 + v289 - 2, v342, v447, v459, v462, (uint64_t)a7, (uint64_t)v452, v341, 0, (uint64_t)a11, v482, 1);
LABEL_222:
            uint64_t v179 = (v288 + v470);
            uint64_t v287 = (uint64_t)v466;
            continue;
          }
LABEL_274:
          int v343 = v482[0];
          if (v482[0] >= (int)v462 && v459 != 0) {
            int v343 = 0;
          }
          if (v343 < (int)v462)
          {
            a7[v343] = -1;
            if (v452) {
              v452[v343] = v342;
            }
            if (v341) {
              *(_DWORD *)(v341 + 4 * v343) = v340;
            }
            if (a11) {
              a11[v343] = v339;
            }
          }
          v482[0] = v343 + 1;
          int v288 = 1;
          goto LABEL_222;
        }
        break;
      }
      uint64_t v179 = 0;
LABEL_405:
      if ((int)v179 > (int)v462 && v459 && v482[0] < (int)v462) {
        sub_1000BAC1C(v462, (uint64_t)a7, (uint64_t)v452, (uint64_t)a9, 0, (uint64_t)a11, v482[0]);
      }
      sub_1000CD4D0((void *)v476, 120);
      sub_1000CD4D0(v473, v430);
      sub_1000CD4D0(v479, v431);
      uint64_t v247 = v432;
      unsigned int v242 = v434;
LABEL_410:
      sub_1000CD4D0(v242, v247);
      return v179;
    case 4:
      uint64_t v17 = a1;
      if (!a1[7]) {
        goto LABEL_23;
      }
      return sub_1000AC828(a1, (__int16 *)a3, a4, a6, a7, a8, v15, a10, a11);
    case 5:
    case 6:
    case 7:
      uint64_t v17 = a1;
      if (a1[7])
      {
        return sub_1000A6718(a1, (__int16 *)a3, a4, a6, a7, a8, v15, a10, a11);
      }
      else
      {
LABEL_23:
        v484 = a10;
        uint64_t v486 = a11;
LABEL_24:
        return sub_1000B95F4(v17, a3, a4, a5, a6, a7, (uint64_t)a8, (uint64_t)v15, v484, (uint64_t)v486);
      }
    case 8:
      uint64_t v485 = (uint64_t)v15;
      uint64_t v40 = a1;
      unint64_t v41 = a3;
      int v42 = 0;
      goto LABEL_29;
    case 9:
      uint64_t v485 = (uint64_t)v15;
      uint64_t v40 = a1;
      unint64_t v41 = a3;
      int v42 = 1;
LABEL_29:
      return sub_1000B9D78(v40, v41, v42, a4, a5, a6, a7, (uint64_t)a8, v485, a10, (uint64_t)a11);
    case 10:
      unsigned int v460 = a4;
      *a7 = -1;
      uint64_t v43 = (int)a6;
      if (a10) {
        bzero(a10, (int)a6);
      }
      int v44 = sub_1000CED6C(a3);
      int v45 = sub_1000CAD00((unint64_t)"<START_DOCUMENT>");
      int v46 = sub_100084674(*a1);
      if (v46 <= v45) {
        int v47 = v45;
      }
      else {
        int v47 = v46;
      }
      if (v47 <= v44) {
        int v47 = v44;
      }
      int v48 = v47 + 1;
      int v49 = sub_100039EB4(*a1) + 1;
      uint64_t v445 = 2 * v48;
      uint64_t v57 = (_WORD *)sub_1000CD3E8(v445, v50, v51, v52, v53, v54, v55, v56);
      uint64_t v442 = 2 * v49;
      uint64_t v477 = (_WORD *)sub_1000CD3E8(v442, v58, v59, v60, v61, v62, v63, v64);
      unint64_t v72 = sub_1000CD3E8(120, v65, v66, v67, v68, v69, v70, v71);
      uint64_t v439 = 4 * v43;
      unint64_t v464 = sub_1000CD3E8(4 * v43, v73, v74, v75, v76, v77, v78, v79);
      int v80 = 0;
      int v468 = 0;
      uint64_t v454 = -(uint64_t)a3;
      uint64_t v81 = v462;
      while (2)
      {
        unint64_t v82 = a3 - 2;
        uint64_t v83 = (char *)(a3 - 2);
        do
        {
          int v84 = *((unsigned __int16 *)v83 + 1);
          v83 += 2;
          v82 += 2;
        }
        while (sub_1000CDF3C(v84));
        if (*(_WORD *)v83)
        {
          int v474 = sub_1000CD5A8(*(unsigned __int16 *)v83, 0);
          unsigned __int16 v85 = *(_WORD *)v83;
          int v86 = v83;
          if (*(_WORD *)v83)
          {
            int v86 = v83;
            do
            {
              if (sub_1000CDF3C(v85)) {
                break;
              }
              int v87 = *((unsigned __int16 *)v86 + 1);
              v86 += 2;
              unsigned __int16 v85 = v87;
            }
            while (v87);
          }
          uint64_t v88 = 0;
          unint64_t v89 = (unint64_t)&v86[-v82] >> 1;
          int v471 = v80;
          do
          {
            int v90 = *(unsigned __int16 *)&v83[v88];
            if (!*(_WORD *)&v83[v88]) {
              goto LABEL_73;
            }
            v88 += 2;
          }
          while (sub_1000CDF3C(v90));
          unint64_t v98 = sub_1000CD3E8(120, v91, v92, v93, v94, v95, v96, v97);
          int v99 = sub_100084684(*a1, a5, (unint64_t)&v86[-v82] >> 1, v83, v98, 30, 0);
          if (v99 < 1)
          {
            if (v98)
            {
              sub_1000CD4D0((void *)v98, 120);
LABEL_73:
              LOBYTE(v98) = 0;
            }
            int v112 = 0;
            int v114 = -1;
LABEL_75:
            uint64_t v81 = v462;
            if (v471 < (int)v462 || v460 == 0) {
              int v118 = v471;
            }
            else {
              int v118 = 0;
            }
            if (v118 < (int)v462)
            {
              a7[v118] = v114;
              if (v452) {
                v452[v118] = (v454 + v82) >> 1;
              }
              if (a9) {
                *(_DWORD *)&a9[4 * v118] = v89;
              }
              if (v464) {
                *(_DWORD *)(v464 + 4 * v118) = v112;
              }
              if (a11) {
                a11[v118] = v98;
              }
            }
            int v80 = v118 + 1;
            ++v468;
            a3 = (unint64_t)&v83[2 * (int)v89];
            continue;
          }
          unsigned int v100 = v99;
          uint64_t v101 = 0;
          if (v99 >= 30) {
            uint64_t v102 = 30;
          }
          else {
            uint64_t v102 = v99;
          }
          if (v102 < 8 || v72 - v98 < 0x20) {
            goto LABEL_61;
          }
          uint64_t v101 = v102 & 0x18;
          *(void *)&long long v103 = __PAIR64__(HIDWORD(*(void *)v98), *(_OWORD *)v98) | 0xC0000000C0000000;
          DWORD2(v103) = *(void *)(v98 + 8) | 0xC0000000;
          HIDWORD(v103) = HIDWORD(*(_OWORD *)v98) | 0xC0000000;
          unsigned long long v104 = *(_OWORD *)(v98 + 16) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
          *(_OWORD *)unint64_t v72 = v103;
          *(_OWORD *)(v72 + 16) = v104;
          if ((v102 & 0xFFFFFFF8) != 8)
          {
            unsigned long long v105 = *(_OWORD *)(v98 + 48) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
            *(_OWORD *)(v72 + 32) = *(_OWORD *)(v98 + 32) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
            *(_OWORD *)(v72 + 48) = v105;
            if (v101 != 16)
            {
              unsigned long long v106 = *(_OWORD *)(v98 + 80) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
              *(_OWORD *)(v72 + 64) = *(_OWORD *)(v98 + 64) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
              *(_OWORD *)(v72 + 80) = v106;
            }
          }
          if (v101 != v102)
          {
LABEL_61:
            uint64_t v107 = v102 - v101;
            uint64_t v108 = 4 * v101;
            uint64_t v109 = (unsigned int *)(v72 + 4 * v101);
            uint64_t v110 = (int *)(v98 + v108);
            do
            {
              int v111 = *v110++;
              *v109++ = v111 | 0xC0000000;
              --v107;
            }
            while (v107);
          }
          sub_1000CD4D0((void *)v98, 120);
          if (v100 != 30)
          {
            int v112 = 0;
            LODWORD(v98) = 0;
            unint64_t v113 = v100 + 1;
            int v114 = -1;
            do
            {
              uint64_t v115 = (v113 - 2);
              sub_1000B5360((uint64_t)a1, *(_DWORD *)(v72 + 4 * v115), (uint64_t)v57, v477);
              if (sub_1000CED6C((unint64_t)v57) == v89)
              {
                int v116 = sub_1000CFC34(v83, v57, v89);
                if (v114 == -1 || !(v98 | v116))
                {
                  LODWORD(v98) = v116 == 0;
                  int v114 = *(_DWORD *)(v72 + 4 * v115);
                  int v112 = v474;
                }
              }
              --v113;
            }
            while (v113 > 1);
            goto LABEL_75;
          }
          uint64_t v179 = 0;
          uint64_t v222 = (uint64_t)v452;
          uint64_t v223 = (uint64_t)a9;
          uint64_t v224 = a11;
          unsigned int v225 = v460;
          uint64_t v227 = v442;
          uint64_t v226 = v445;
          uint64_t v228 = v439;
          uint64_t v229 = (void *)v464;
          int v80 = v471;
          if ((int)v81 >= 0) {
            goto LABEL_186;
          }
        }
        else
        {
          uint64_t v222 = (uint64_t)v452;
          uint64_t v223 = (uint64_t)a9;
          uint64_t v224 = a11;
          unsigned int v225 = v460;
          uint64_t v179 = v468;
          uint64_t v227 = v442;
          uint64_t v226 = v445;
          uint64_t v228 = v439;
          uint64_t v229 = (void *)v464;
          if (v468 <= (int)v81)
          {
LABEL_186:
            if (a10)
            {
              uint64_t v243 = (int)v179 >= (int)v81 ? v81 : v179;
              if ((int)v243 >= 2)
              {
                uint64_t v244 = v243 - 1;
                int v245 = a10 + 1;
                int v246 = (_DWORD *)v229 + 1;
                do
                {
                  if (*(v246 - 1) != *v246) {
                    *v245 |= 8u;
                  }
                  ++v246;
                  ++v245;
                  --v244;
                }
                while (v244);
              }
            }
            sub_1000CD4D0(v229, v228);
            sub_1000CD4D0((void *)v72, 120);
            sub_1000CD4D0(v477, v227);
            unsigned int v242 = v57;
LABEL_196:
            uint64_t v247 = v226;
            goto LABEL_410;
          }
        }
        break;
      }
      if (v225 && v80 < (int)v81)
      {
        sub_1000BAC1C(v81, (uint64_t)a7, v222, v223, v464, (uint64_t)v224, v80);
        uint64_t v229 = (void *)v464;
      }
      goto LABEL_186;
    case 11:
      *a7 = -1;
      if (a10) {
        bzero(a10, (int)a6);
      }
      unsigned int v461 = a4;
      int v119 = sub_1000CED6C(a3);
      int v120 = sub_1000CAD00((unint64_t)"<START_DOCUMENT>");
      int v121 = sub_100084674(*a1);
      if (v121 <= v120) {
        int v122 = v120;
      }
      else {
        int v122 = v121;
      }
      if (v122 <= v119) {
        int v122 = v119;
      }
      int v443 = v122 + 1;
      int v130 = sub_100039EB4(*a1);
      int v131 = v119;
      if (v130 > v119) {
        int v131 = sub_100039EB4(*a1);
      }
      int v132 = v131 + 1;
      uint64_t v133 = (_WORD *)sub_1000CD3E8(2 * v443, v123, v124, v125, v126, v127, v128, v129);
      int v437 = v132;
      uint64_t v134 = 2 * v132;
      v478 = (_WORD *)sub_1000CD3E8(v134, v135, v136, v137, v138, v139, v140, v141);
      uint64_t v149 = (char *)sub_1000CD3E8(2 * v443, v142, v143, v144, v145, v146, v147, v148);
      uint64_t v429 = v134;
      uint64_t v472 = (_WORD *)sub_1000CD3E8(v134, v150, v151, v152, v153, v154, v155, v156);
      uint64_t v427 = 2 * (v119 + 1);
      uint64_t v440 = (_WORD *)sub_1000CD3E8(v427, v157, v158, v159, v160, v161, v162, v163);
      unint64_t v475 = sub_1000CD3E8(120, v164, v165, v166, v167, v168, v169, v170);
      uint64_t v425 = 4 * (int)a6;
      int v178 = 0;
      uint64_t v179 = 0;
      uint64_t v433 = -(uint64_t)a3;
      unint64_t v435 = sub_1000CD3E8(v425, v171, v172, v173, v174, v175, v176, v177);
      uint64_t v465 = v149;
      while (2)
      {
        unint64_t v180 = a3 - 2;
        uint64_t v181 = (__int16 *)(a3 - 2);
        do
        {
          int v182 = (unsigned __int16)v181[1];
          ++v181;
          v180 += 2;
        }
        while (sub_1000CDF3C(v182));
        if (!*v181)
        {
          uint64_t v230 = (uint64_t)v452;
          uint64_t v231 = (uint64_t)a9;
          uint64_t v232 = a11;
          unsigned int v233 = v461;
          uint64_t v234 = v429;
          uint64_t v226 = 2 * v443;
          uint64_t v236 = v425;
          uint64_t v235 = v427;
          unint64_t v237 = (void *)v435;
          if ((int)v179 <= (int)a6) {
            goto LABEL_170;
          }
          goto LABEL_167;
        }
        int v455 = sub_1000CD5A8((unsigned __int16)*v181, 0);
        unsigned __int16 v183 = *v181;
        a3 = (unint64_t)v181;
        if (*v181)
        {
          a3 = (unint64_t)v181;
          do
          {
            if (sub_1000CDF3C(v183)) {
              break;
            }
            int v184 = *(unsigned __int16 *)(a3 + 2);
            a3 += 2;
            unsigned __int16 v183 = v184;
          }
          while (v184);
        }
        unint64_t v185 = (a3 - v180) >> 1;
        sub_1000CED88(v440, v181, v185 + 1);
        v440[(int)v185] = 0;
        if (!sub_1000D9870((uint64_t)v440, (unint64_t)v149, v443, v472, v437)) {
          return 0;
        }
        int v446 = v178;
        int v186 = sub_1000CED6C((unint64_t)v149);
        int v469 = v179;
        if (v149)
        {
          uint64_t v187 = v149;
          do
          {
            int v188 = *(unsigned __int16 *)v187;
            if (!*(_WORD *)v187) {
              goto LABEL_127;
            }
            v187 += 2;
          }
          while (sub_1000CDF3C(v188));
          unint64_t v196 = sub_1000CD3E8(120, v189, v190, v191, v192, v193, v194, v195);
          int v197 = sub_100084684(*a1, a5, v186, v149, v196, 30, 0);
          if (v197 >= 1)
          {
            unsigned int v198 = v197;
            uint64_t v199 = 0;
            if (v197 >= 30) {
              uint64_t v200 = 30;
            }
            else {
              uint64_t v200 = v197;
            }
            if (v200 < 8)
            {
              unint64_t v201 = v475;
            }
            else
            {
              unint64_t v201 = v475;
              if (v475 - v196 >= 0x20)
              {
                uint64_t v199 = v200 & 0x18;
                *(void *)&long long v202 = __PAIR64__(HIDWORD(*(void *)v196), *(_OWORD *)v196) | 0xC0000000C0000000;
                DWORD2(v202) = *(void *)(v196 + 8) | 0xC0000000;
                HIDWORD(v202) = HIDWORD(*(_OWORD *)v196) | 0xC0000000;
                unsigned long long v203 = *(_OWORD *)(v196 + 16) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
                *(_OWORD *)unint64_t v475 = v202;
                *(_OWORD *)(v475 + 16) = v203;
                if ((v200 & 0xFFFFFFF8) != 8)
                {
                  unsigned long long v204 = *(_OWORD *)(v196 + 48) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
                  *(_OWORD *)(v475 + 32) = *(_OWORD *)(v196 + 32) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
                  *(_OWORD *)(v475 + 48) = v204;
                  if (v199 != 16)
                  {
                    unsigned long long v205 = *(_OWORD *)(v196 + 80) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
                    *(_OWORD *)(v475 + 64) = *(_OWORD *)(v196 + 64) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
                    *(_OWORD *)(v475 + 80) = v205;
                  }
                }
                if (v199 == v200)
                {
LABEL_147:
                  sub_1000CD4D0((void *)v196, 120);
                  if (v198 != 30)
                  {
                    LODWORD(v149) = 0;
                    BOOL v206 = 0;
                    unint64_t v215 = v198 + 1;
                    int v207 = -1;
                    uint64_t v216 = (uint64_t)a1;
                    unint64_t v217 = v475;
                    do
                    {
                      uint64_t v218 = (v215 - 2);
                      sub_1000B5360(v216, *(_DWORD *)(v217 + 4 * v218), (uint64_t)v133, v478);
                      if (sub_1000CED6C((unint64_t)v133) == v186)
                      {
                        int v219 = sub_1000CF684(v465, v133);
                        if (*v472) {
                          BOOL v220 = sub_1000CF684(v472, v478) == 0;
                        }
                        else {
                          BOOL v220 = 1;
                        }
                        unint64_t v217 = v475;
                        if (v219) {
                          BOOL v220 = 0;
                        }
                        BOOL v221 = !v206 && v220;
                        uint64_t v216 = (uint64_t)a1;
                        if (v207 == -1 || v221)
                        {
                          int v207 = *(_DWORD *)(v475 + 4 * v218);
                          BOOL v206 = v220;
                          LODWORD(v149) = v455;
                        }
                      }
                      else
                      {
                        unint64_t v217 = v475;
                      }
                      --v215;
                    }
                    while (v215 > 1);
                    goto LABEL_129;
                  }
                  uint64_t v179 = 0;
                  uint64_t v230 = (uint64_t)v452;
                  a6 = v462;
                  uint64_t v231 = (uint64_t)a9;
                  uint64_t v232 = a11;
                  unsigned int v233 = v461;
                  uint64_t v234 = v429;
                  uint64_t v226 = 2 * v443;
                  uint64_t v236 = v425;
                  uint64_t v235 = v427;
                  unint64_t v237 = (void *)v435;
                  int v178 = v446;
                  if ((int)v462 >= 0)
                  {
LABEL_170:
                    if (a10)
                    {
                      uint64_t v238 = (int)v179 >= (int)a6 ? a6 : v179;
                      if ((int)v238 >= 2)
                      {
                        uint64_t v239 = v238 - 1;
                        int v240 = a10 + 1;
                        int v241 = (_DWORD *)v237 + 1;
                        do
                        {
                          if (*(v241 - 1) != *v241) {
                            *v240 |= 8u;
                          }
                          ++v241;
                          ++v240;
                          --v239;
                        }
                        while (v239);
                      }
                    }
                    sub_1000CD4D0(v237, v236);
                    sub_1000CD4D0((void *)v475, 120);
                    sub_1000CD4D0(v440, v235);
                    sub_1000CD4D0(v472, v234);
                    sub_1000CD4D0(v149, v226);
                    sub_1000CD4D0(v478, v234);
                    unsigned int v242 = v133;
                    goto LABEL_196;
                  }
LABEL_167:
                  if (v233 && v178 < (int)a6) {
                    sub_1000BAC1C(a6, (uint64_t)a7, v230, v231, (uint64_t)v237, (uint64_t)v232, v178);
                  }
                  goto LABEL_170;
                }
              }
            }
            uint64_t v210 = v200 - v199;
            uint64_t v211 = 4 * v199;
            int v212 = (unsigned int *)(v201 + 4 * v199);
            unsigned int v213 = (int *)(v196 + v211);
            do
            {
              int v214 = *v213++;
              *v212++ = v214 | 0xC0000000;
              --v210;
            }
            while (v210);
            goto LABEL_147;
          }
          if (v196) {
            sub_1000CD4D0((void *)v196, 120);
          }
LABEL_127:
          LOBYTE(v206) = 0;
          LODWORD(v149) = 0;
        }
        else
        {
          LOBYTE(v206) = 0;
        }
        int v207 = -1;
LABEL_129:
        a6 = v462;
        if (v446 < (int)v462 || v461 == 0) {
          int v209 = v446;
        }
        else {
          int v209 = 0;
        }
        if (v209 < (int)v462)
        {
          a7[v209] = v207;
          if (v452) {
            v452[v209] = (v433 + v180) >> 1;
          }
          if (a9) {
            *(_DWORD *)&a9[4 * v209] = v186;
          }
          if (v435) {
            *(_DWORD *)(v435 + 4 * v209) = v149;
          }
          if (a11) {
            a11[v209] = v206;
          }
        }
        int v178 = v209 + 1;
        uint64_t v179 = (v469 + 1);
        uint64_t v149 = v465;
        continue;
      }
    default:
      return 0;
  }
}

uint64_t sub_1000B95F4(uint64_t *a1, unint64_t a2, int a3, unsigned int a4, uint64_t a5, _DWORD *a6, uint64_t a7, uint64_t a8, char *a9, uint64_t a10)
{
  *(void *)uint64_t v128 = 0;
  *a6 = -1;
  uint64_t v12 = (int)a5;
  if (a9) {
    bzero(a9, (int)a5);
  }
  int v13 = sub_1000CED6C(a2);
  unint64_t v14 = a2;
  int v15 = sub_1000CAD00((unint64_t)"<START_DOCUMENT>");
  int v16 = sub_100084674(*a1);
  if (v16 <= v15) {
    int v17 = v15;
  }
  else {
    int v17 = v16;
  }
  if (v17 <= v13) {
    int v17 = v13;
  }
  int v18 = v17 + 1;
  int v19 = sub_100039EB4(*a1) + 1;
  uint64_t v106 = 2 * v18;
  uint64_t v27 = (_WORD *)sub_1000CD3E8(v106, v20, v21, v22, v23, v24, v25, v26);
  uint64_t v28 = 2 * v19;
  uint64_t v29 = v14;
  uint64_t v105 = v28;
  uint64_t v37 = (_WORD *)sub_1000CD3E8(v28, v30, v31, v32, v33, v34, v35, v36);
  unint64_t v45 = sub_1000CD3E8(120, v38, v39, v40, v41, v42, v43, v44);
  uint64_t v104 = 4 * v12;
  unint64_t v111 = sub_1000CD3E8(4 * v12, v46, v47, v48, v49, v50, v51, v52);
  uint64_t v53 = 0;
  uint64_t v112 = -2 - v29;
  int v119 = a1;
  while (1)
  {
    unint64_t v55 = 0;
    uint64_t v127 = 0;
    do
    {
      int v56 = sub_1000CDF3C(*(unsigned __int16 *)(v29 + v55));
      v55 += 2;
    }
    while (v56);
    uint64_t v57 = (unsigned __int16 *)(v29 + v55 - 2);
    if (!*v57) {
      break;
    }
    v128[0] = 0;
    int v118 = (char *)(v29 + v55 - 2);
    if (*v57)
    {
      uint64_t v126 = 0;
      int v125 = 0;
      sub_1000CEA38(*v57, 0, 0, 0, (unsigned int *)&v125, 0, 0, (_DWORD *)&v126 + 1, &v126, 0, 0);
      uint64_t v57 = (unsigned __int16 *)(v29 + v55 - 2);
      int v58 = v125;
      v128[0] = v125;
      uint64_t v127 = v126;
      uint64_t v59 = v57;
      int v121 = v57;
      if (v126)
      {
        if (*(_WORD *)(v29 + v55))
        {
          uint64_t v59 = (unsigned __int16 *)(v29 + v55);
          do
          {
            uint64_t v126 = 0;
            int v125 = 0;
            sub_1000CEA38(*v59, v58, 0, 0, (unsigned int *)&v125, 0, 0, (_DWORD *)&v126 + 1, &v126, 0, 0);
            int v58 = v125;
            if (v125 != v128[0]) {
              break;
            }
            if (v126 != v127) {
              break;
            }
            int v60 = v59[1];
            ++v59;
          }
          while (v60);
          int v121 = v59 - 1;
          uint64_t v57 = (unsigned __int16 *)(v29 + v55 - 2);
        }
        else
        {
          uint64_t v59 = (unsigned __int16 *)(v29 + v55);
          int v121 = (unsigned __int16 *)(v29 + v55 - 2);
        }
      }
    }
    else
    {
      int v121 = 0;
      uint64_t v59 = (unsigned __int16 *)(v29 + v55 - 2);
    }
    uint64_t v122 = v29;
    uint64_t v123 = ((uint64_t)&v59[(v57 == v59) + 1 + v55 / 0xFFFFFFFFFFFFFFFELL] - v29) >> 1;
    uint64_t v61 = v57;
    do
    {
      int v62 = *v61;
      if (!*v61) {
        goto LABEL_59;
      }
      ++v61;
    }
    while (sub_1000CDF3C(v62));
    unint64_t v70 = sub_1000CD3E8(120, v63, v64, v65, v66, v67, v68, v69);
    int v71 = sub_100084684(*a1, a4, v123, v118, v70, 30, 0);
    if (v71 < 1)
    {
      if (v70) {
        sub_1000CD4D0((void *)v70, 120);
      }
LABEL_59:
      LOBYTE(v116) = 0;
      int v117 = -1;
      unsigned int v115 = v128[0];
      int v85 = v123;
      goto LABEL_60;
    }
    unsigned int v72 = v71;
    uint64_t v73 = 0;
    if (v71 >= 30) {
      uint64_t v74 = 30;
    }
    else {
      uint64_t v74 = v71;
    }
    if (v74 < 8 || v45 - v70 < 0x20) {
      goto LABEL_37;
    }
    uint64_t v73 = v74 & 0x18;
    *(void *)&long long v75 = __PAIR64__(HIDWORD(*(void *)v70), *(_OWORD *)v70) | 0xC0000000C0000000;
    DWORD2(v75) = *(void *)(v70 + 8) | 0xC0000000;
    HIDWORD(v75) = HIDWORD(*(_OWORD *)v70) | 0xC0000000;
    unsigned long long v76 = *(_OWORD *)(v70 + 16) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
    *(_OWORD *)unint64_t v45 = v75;
    *(_OWORD *)(v45 + 16) = v76;
    if ((v74 & 0xFFFFFFF8) != 8)
    {
      unsigned long long v77 = *(_OWORD *)(v70 + 48) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
      *(_OWORD *)(v45 + 32) = *(_OWORD *)(v70 + 32) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
      *(_OWORD *)(v45 + 48) = v77;
      if (v73 != 16)
      {
        unsigned long long v78 = *(_OWORD *)(v70 + 80) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
        *(_OWORD *)(v45 + 64) = *(_OWORD *)(v70 + 64) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
        *(_OWORD *)(v45 + 80) = v78;
      }
    }
    if (v73 != v74)
    {
LABEL_37:
      uint64_t v79 = v74 - v73;
      uint64_t v80 = 4 * v73;
      uint64_t v81 = (unsigned int *)(v45 + 4 * v73);
      unint64_t v82 = (int *)(v70 + v80);
      do
      {
        int v83 = *v82++;
        *v81++ = v83 | 0xC0000000;
        --v79;
      }
      while (v79);
    }
    sub_1000CD4D0((void *)v70, 120);
    if (v72 == 30)
    {
      uint64_t v53 = 0;
      break;
    }
    BOOL v116 = 0;
    uint64_t v84 = v72;
    int v117 = -1;
    int v120 = v128[0];
    unsigned int v115 = v128[0];
    int v85 = v123;
    do
    {
      uint64_t v126 = 0;
      int v125 = 0;
      sub_1000B5360((uint64_t)a1, *(_DWORD *)(v45 + 4 * (v84 - 1)), (uint64_t)v27, v37);
      int v87 = sub_1000CED6C((unint64_t)v27);
      if (v87 >= v85)
      {
        int v88 = v87;
        int v124 = v85;
        unint64_t v89 = v45;
        int v90 = v37;
        sub_1000CEA38(*v121, v120, 0, 0, v128, 0, 0, (_DWORD *)&v127 + 1, &v127, 0, 0);
        unsigned __int16 v91 = v27[v123];
        if (v91)
        {
          uint64_t v92 = &v27[v123 + 1];
          do
          {
            sub_1000CEA38(v91, v128[0], 0, 0, v128, 0, 0, (_DWORD *)&v127 + 1, &v127, 0, 0);
            int v93 = *v92++;
            unsigned __int16 v91 = v93;
          }
          while (v93);
        }
        sub_1000CEA38(*(unsigned __int16 *)(v122 + 2 * v88 + v55 - 2), v128[0], 0, 0, (unsigned int *)&v125, 0, 0, (_DWORD *)&v126 + 1, &v126, 0, 0);
        if (sub_1000CDF3C((unsigned __int16)v27[v88 - 1]) || v128[0] == v125 && v127 && v127 == v126)
        {
          uint64_t v37 = v90;
          unint64_t v45 = v89;
          a1 = v119;
          int v85 = v124;
        }
        else
        {
          int v94 = sub_1000CFC34(v118, v27, v88);
          uint64_t v37 = v90;
          unint64_t v45 = v89;
          a1 = v119;
          int v85 = v124;
          if (v117 == -1 || v88 > v124 || v88 == v124 && !v116 && !v94)
          {
            int v117 = *(_DWORD *)(v45 + 4 * (v84 - 1));
            unsigned int v115 = v128[0];
            BOOL v116 = v94 == 0;
            int v85 = v88;
          }
        }
      }
    }
    while (v84-- > 1);
LABEL_60:
    unint64_t v95 = (v112 + v122 + v55) >> 1;
    if (v117 == -1 && HIDWORD(v127))
    {
      int v54 = sub_1000BAA4C(a1, (uint64_t)v118, v95, v123, a3, a5, (uint64_t)a6, a7, a8, v111, a10, (int *)&v128[1], 1);
    }
    else
    {
      int v96 = v128[1];
      if ((int)v128[1] >= (int)a5 && a3 != 0) {
        int v96 = 0;
      }
      if (v96 < (int)a5)
      {
        a6[v96] = v117;
        if (a7) {
          *(_DWORD *)(a7 + 4 * v96) = v95;
        }
        if (a8) {
          *(_DWORD *)(a8 + 4 * v96) = v85;
        }
        if (v111) {
          *(_DWORD *)(v111 + 4 * v96) = v115;
        }
        if (a10) {
          *(unsigned char *)(a10 + v96) = v116;
        }
      }
      v128[1] = v96 + 1;
      int v54 = 1;
    }
    uint64_t v53 = (v54 + v53);
    uint64_t v29 = v122 + 2 * v85 + v55 - 2;
  }
  unint64_t v98 = (void *)v111;
  if ((int)v53 > (int)a5 && a3 && (int)v128[1] < (int)a5)
  {
    sub_1000BAC1C(a5, (uint64_t)a6, a7, a8, v111, a10, v128[1]);
    unint64_t v98 = (void *)v111;
  }
  if (a9)
  {
    uint64_t v99 = (int)v53 >= (int)a5 ? a5 : v53;
    if ((int)v99 >= 2)
    {
      unsigned int v100 = (_DWORD *)v98 + 1;
      uint64_t v101 = a9 + 1;
      uint64_t v102 = v99 - 1;
      do
      {
        if (*(v100 - 1) != *v100) {
          *v101 |= 8u;
        }
        ++v100;
        ++v101;
        --v102;
      }
      while (v102);
    }
  }
  sub_1000CD4D0(v98, v104);
  sub_1000CD4D0((void *)v45, 120);
  sub_1000CD4D0(v37, v105);
  sub_1000CD4D0(v27, v106);
  return v53;
}

uint64_t sub_1000B9D78(uint64_t *a1, unint64_t a2, int a3, int a4, unsigned int a5, uint64_t a6, _DWORD *a7, uint64_t a8, uint64_t a9, char *a10, uint64_t a11)
{
  v243[0] = 0;
  *a7 = -1;
  if (a10) {
    bzero(a10, (int)a6);
  }
  int v14 = sub_1000CED6C(a2);
  if (!v14) {
    return 0;
  }
  int v15 = v14;
  uint64_t v217 = a8;
  int v16 = sub_1000CAD00((unint64_t)"<START_DOCUMENT>");
  int v17 = sub_100084674(*a1);
  if (v17 <= v16) {
    int v18 = v16;
  }
  else {
    int v18 = v17;
  }
  if (v18 <= v15) {
    int v18 = v15;
  }
  int v220 = v18;
  int v19 = v18 + 1;
  int v20 = sub_100039EB4(*a1) + 1;
  uint64_t v209 = 2 * v19;
  uint64_t v239 = (_WORD *)sub_1000CD3E8(v209, v21, v22, v23, v24, v25, v26, v27);
  uint64_t v208 = 2 * v20;
  int v241 = (_WORD *)sub_1000CD3E8(v208, v28, v29, v30, v31, v32, v33, v34);
  unint64_t v42 = sub_1000CD3E8(120, v35, v36, v37, v38, v39, v40, v41);
  uint64_t v212 = a6;
  uint64_t v207 = 4 * (int)a6;
  uint64_t v211 = (void *)sub_1000CD3E8(v207, v43, v44, v45, v46, v47, v48, v49);
  uint64_t v57 = (unsigned int *)sub_1000CD3E8(4 * v15, v50, v51, v52, v53, v54, v55, v56);
  uint64_t v65 = (_DWORD *)sub_1000CD3E8(4 * v15, v58, v59, v60, v61, v62, v63, v64);
  uint64_t v73 = (_DWORD *)sub_1000CD3E8(4 * v15, v66, v67, v68, v69, v70, v71, v72);
  uint64_t v81 = (_DWORD *)sub_1000CD3E8(4 * v15, v74, v75, v76, v77, v78, v79, v80);
  uint64_t v206 = 4 * v15;
  unint64_t v89 = (_DWORD *)sub_1000CD3E8(v206, v82, v83, v84, v85, v86, v87, v88);
  uint64_t v90 = *(unsigned __int16 *)a2;
  uint64_t v91 = (v15 - 1);
  unint64_t v216 = a2;
  uint64_t v236 = v57;
  uint64_t v228 = v73;
  uint64_t v229 = v65;
  unint64_t v215 = v81;
  uint64_t v222 = v89;
  int v232 = v15;
  if (v15 <= 1)
  {
    sub_1000CEA38(v90, 0, 0, 0, v57, 0, 0, v65, v73, v81, v89);
  }
  else
  {
    sub_1000CEA38(v90, 0, 0, *(unsigned __int16 *)(a2 + 2), v57, 0, 0, v65, v73, v81, v89);
    unsigned int v92 = v15 - 2;
    int v93 = v81;
    if (v92)
    {
      unint64_t v95 = v89 + 1;
      unint64_t v96 = a2;
      uint64_t v97 = (_DWORD *)v93 + 1;
      unint64_t v98 = v73 + 1;
      uint64_t v99 = v65 + 1;
      unsigned int v100 = v57 + 1;
      uint64_t v101 = v91 - 1;
      uint64_t v102 = (unsigned __int16 *)(v96 + 2);
      do
      {
        uint64_t v103 = *v102;
        uint64_t v104 = *(v102 - 1);
        unsigned int v105 = v102[1];
        ++v102;
        sub_1000CEA38(v103, *(v100 - 1), v104, v105, v100, 0, 0, v99++, v98++, v97++, v95++);
        ++v100;
        --v101;
      }
      while (v101);
      int v93 = v215;
      a2 = v216;
      unint64_t v89 = v222;
    }
    else
    {
      uint64_t v91 = 1;
    }
    sub_1000CEA38(*(unsigned __int16 *)(a2 + 2 * v91), v236[v92], *(unsigned __int16 *)(a2 + 2 * v92), 0, &v236[v91], 0, 0, (_DWORD *)v229 + v91, (_DWORD *)v228 + v91, (_DWORD *)v93 + v91, &v89[v91]);
  }
  unint64_t v106 = (unint64_t)v239;
  int v107 = 0;
  unsigned int v214 = 0;
  uint64_t v108 = a2;
  unint64_t v230 = -2 - a2;
  int v210 = -1;
  int v240 = (_OWORD *)v42;
  while (1)
  {
    unint64_t v109 = 0;
    uint64_t v110 = v108;
    int v237 = v107;
    unint64_t v111 = &_mh_execute_header + 0x4000000 * a2 + -67108864 * v108;
    uint64_t v112 = (char *)(0xFFFFFFFF80000000 * a2 + (v108 << 31));
    uint64_t v113 = 2 - a2 + v108;
    do
    {
      uint64_t v114 = (uint64_t)v112;
      uint64_t v115 = v113;
      int v116 = sub_1000CDF3C(*(unsigned __int16 *)(v108 + v109));
      v109 += 2;
      v111 -= 0x8000000;
      uint64_t v112 = (char *)&_mh_execute_header + v114;
      uint64_t v113 = v115 + 2;
    }
    while (v116);
    int v117 = (_WORD *)(v108 + v109);
    uint64_t v108 = v108 + v109 - 2;
    if (!*(_WORD *)(v110 + v109 - 2)) {
      break;
    }
    uint64_t v225 = v230 + v110 + v109;
    uint64_t v118 = v225 >> 1;
    uint64_t v119 = -(uint64_t)v111 >> 32;
    uint64_t v231 = v119;
    if (!v237)
    {
      int v120 = sub_1000CD564(v236[v119]);
      uint64_t v118 = v225 >> 1;
      uint64_t v108 = v110 + v109 - 2;
      uint64_t v119 = -(uint64_t)v111 >> 32;
      if (!v120)
      {
        unsigned int v233 = &v236[v118];
        LODWORD(v125) = 1;
LABEL_35:
        uint64_t v234 = v118;
        unsigned int v127 = *v233;
        uint64_t v128 = (_WORD *)v108;
        do
        {
          int v129 = (unsigned __int16)*v128;
          if (!*v128) {
            goto LABEL_72;
          }
          ++v128;
        }
        while (sub_1000CDF3C(v129));
        unsigned int v224 = v127;
        unint64_t v137 = sub_1000CD3E8(120, v130, v131, v132, v133, v134, v135, v136);
        int v138 = sub_100084684(*a1, a5, v125, (char *)v108, v137, 30, 1);
        if (v138 < 1)
        {
          int v126 = v125;
          if (v137)
          {
            sub_1000CD4D0((void *)v137, 120);
LABEL_72:
            int v126 = v125;
          }
LABEL_73:
          if (!a3) {
            goto LABEL_75;
          }
          int v107 = 1;
          continue;
        }
        unsigned int v139 = v138;
        uint64_t v140 = 0;
        if (v138 >= 30) {
          uint64_t v141 = 30;
        }
        else {
          uint64_t v141 = v138;
        }
        if (v141 < 8 || v42 - v137 < 0x20) {
          goto LABEL_48;
        }
        uint64_t v140 = v141 & 0x18;
        *(void *)&long long v142 = __PAIR64__(HIDWORD(*(void *)v137), *(_OWORD *)v137) | 0xC0000000C0000000;
        DWORD2(v142) = *(void *)(v137 + 8) | 0xC0000000;
        HIDWORD(v142) = HIDWORD(*(_OWORD *)v137) | 0xC0000000;
        unsigned long long v143 = *(_OWORD *)(v137 + 16) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
        *(_OWORD *)unint64_t v42 = v142;
        *(_OWORD *)(v42 + 16) = v143;
        if ((v141 & 0xFFFFFFF8) != 8)
        {
          unsigned long long v144 = *(_OWORD *)(v137 + 48) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
          *(_OWORD *)(v42 + 32) = *(_OWORD *)(v137 + 32) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
          *(_OWORD *)(v42 + 48) = v144;
          if (v140 != 16)
          {
            unsigned long long v145 = *(_OWORD *)(v137 + 80) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
            *(_OWORD *)(v42 + 64) = *(_OWORD *)(v137 + 64) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
            *(_OWORD *)(v42 + 80) = v145;
          }
        }
        if (v140 != v141)
        {
LABEL_48:
          uint64_t v146 = v141 - v140;
          uint64_t v147 = 4 * v140;
          uint64_t v148 = (unsigned int *)(v42 + 4 * v140);
          uint64_t v149 = (int *)(v137 + v147);
          do
          {
            int v150 = *v149++;
            *v148++ = v150 | 0xC0000000;
            --v146;
          }
          while (v146);
        }
        sub_1000CD4D0((void *)v137, 120);
        uint64_t v223 = v234 - 1;
        uint64_t v227 = -(uint64_t)v111;
        unint64_t v151 = v139 + 1;
        int v235 = -1;
        int v219 = v125;
        int v126 = v125;
        do
        {
          uint64_t v152 = (v151 - 2);
          sub_1000B5360((uint64_t)a1, *(_DWORD *)(v42 + 4 * v152), v106, v241);
          int v153 = sub_1000CED6C(v106);
          if (v153 >= v126)
          {
            int v154 = v153;
            int v155 = v153 - 1;
            if (sub_1000CDF3C(*(unsigned __int16 *)(v106 + 2 * (v153 - 1))))
            {
              unint64_t v42 = (unint64_t)v240;
            }
            else
            {
              uint64_t v156 = (int)((uint64_t)(v230 + v110 + v109 + 2 * v155) >> 1) + 1;
              if ((int)v156 < v232
                && ((uint64_t v157 = (v227 + ((uint64_t)v155 << 32)) >> 32, sub_1000CD564(v236[v157]))
                 && v236[v157] == v236[(int)v156]
                 && (*((_DWORD *)v229 + v157) && *((_DWORD *)v229 + (int)v156)
                  || *((_DWORD *)v228 + v157) && *((_DWORD *)v228 + (int)v156))
                 || *((_DWORD *)v222 + v157)
                 || *((_DWORD *)v215 + v156)))
              {
                unint64_t v106 = (unint64_t)v239;
                unint64_t v42 = (unint64_t)v240;
              }
              else
              {
                unint64_t v106 = (unint64_t)v239;
                unint64_t v42 = (unint64_t)v240;
                if (v235 == -1 || v154 > v126)
                {
                  int v235 = *((_DWORD *)v240 + v152);
                  unsigned int v224 = v236[v223 + v154];
                  int v126 = v154;
                }
              }
            }
          }
          --v151;
        }
        while (v151 > 1);
        if (v235 == -1)
        {
          LODWORD(v125) = v219;
          goto LABEL_73;
        }
        unint64_t v158 = (unint64_t)v225 >> 1;
        int v160 = v243[0];
        if (v243[0] >= (int)v212 && a4 != 0) {
          int v160 = 0;
        }
        if (v160 < (int)v212)
        {
          uint64_t v166 = v160;
          a7[v160] = v235;
          if (v217) {
            *(_DWORD *)(v217 + 4 * v160) = v158;
          }
          if (a9) {
            *(_DWORD *)(a9 + 4 * v160) = v126;
          }
          if (v211) {
            *((_DWORD *)v211 + v160) = v224;
          }
          goto LABEL_116;
        }
        goto LABEL_118;
      }
    }
    if (*((_DWORD *)v229 + v119) || *((_DWORD *)v228 + v119))
    {
      int v121 = v236;
      if (*v117)
      {
        do
        {
          uint64_t v122 = v114 >> 32;
          if (v236[(int)((unint64_t)v115 >> 1)] != v236[v114 >> 32]) {
            break;
          }
          uint64_t v123 = (int)(v115 >> 1);
          if (*((_DWORD *)v229 + v123) != *((_DWORD *)v229 + v122)) {
            break;
          }
          if (*((_DWORD *)v228 + v123) != *((_DWORD *)v228 + v122)) {
            break;
          }
          int v124 = (unsigned __int16)v117[1];
          ++v117;
          v114 += (uint64_t)&_mh_execute_header;
          v115 += 2;
        }
        while (v124);
      }
    }
    else
    {
      int v121 = v236;
    }
    unint64_t v125 = ((unint64_t)&v117[v109 / 0xFFFFFFFFFFFFFFFELL + 1] - v110) >> 1;
    unsigned int v233 = &v121[v118];
    int v126 = v125;
    if (!v237) {
      goto LABEL_35;
    }
LABEL_75:
    unint64_t v158 = (unint64_t)v225 >> 1;
    if (*((_DWORD *)v229 + v231))
    {
      unsigned int v159 = sub_1000BAA4C(a1, v110 + v109 - 2, (unint64_t)v225 >> 1, v125, a4, v212, (uint64_t)a7, v217, a9, (uint64_t)v211, a11, v243, v236[v231])+ v214;
LABEL_119:
      unsigned int v214 = v159;
      goto LABEL_120;
    }
    int v160 = v243[0];
    uint64_t v161 = (v243[0] - 1);
    BOOL v162 = v243[0] >= 1 && v243[0] <= (int)v212;
    if (!v162
      || (a7[v161] == -1 ? (BOOL v163 = v210 == v158 - 1) : (BOOL v163 = 0),
          !v163 || v236[v231] != v236[v210] || !*((_DWORD *)v228 + v231) || !*((_DWORD *)v228 + v210)))
    {
      if (v243[0] >= (int)v212 && a4 != 0) {
        int v160 = 0;
      }
      if (v160 < (int)v212)
      {
        unsigned int v165 = *v233;
        uint64_t v166 = v160;
        a7[v160] = -1;
        if (v217) {
          *(_DWORD *)(v217 + 4 * v160) = v158;
        }
        if (a9) {
          *(_DWORD *)(a9 + 4 * v160) = v125;
        }
        if (v211) {
          *((_DWORD *)v211 + v160) = v165;
        }
LABEL_116:
        if (a11) {
          *(unsigned char *)(a11 + v166) = 0;
        }
      }
LABEL_118:
      v243[0] = v160 + 1;
      unsigned int v159 = v214 + 1;
      goto LABEL_119;
    }
    if (a9) {
      *(_DWORD *)(a9 + 4 * v161) += v125;
    }
LABEL_120:
    int v210 = v158 + v126 - 1;
    int v107 = v237;
    if (a3) {
      int v107 = 1;
    }
    uint64_t v108 = v110 + 2 * v126 + v109 - 2;
  }
  uint64_t v94 = v214;
  uint64_t v168 = a9;
  if ((int)v214 > (int)v212 && a4 && v243[0] < (int)v212) {
    sub_1000BAC1C(v212, (uint64_t)a7, v217, a9, 0, a11, v243[0]);
  }
  if ((int)v214 >= (int)v212) {
    uint64_t v169 = v212;
  }
  else {
    uint64_t v169 = v214;
  }
  uint64_t v238 = v169;
  if ((int)v169 >= 1)
  {
    uint64_t v170 = 0;
    while (1)
    {
      uint64_t v171 = *(int *)(v168 + 4 * v170);
      if ((int)v171 <= v220)
      {
        uint64_t v174 = (_WORD *)(v216 + 2 * *(int *)(v217 + 4 * v170));
        uint64_t v175 = v239;
        sub_1000CEE30((uint64_t)v239, (uint64_t)v174, v171);
        v239[v171] = 0;
        do
        {
          int v176 = (unsigned __int16)*v175;
          if (!*v175)
          {
            LOBYTE(v172) = 0;
            int v173 = -1;
            unint64_t v42 = (unint64_t)v240;
            goto LABEL_160;
          }
          ++v175;
        }
        while (sub_1000CDF3C(v176));
        unint64_t v184 = sub_1000CD3E8(120, v177, v178, v179, v180, v181, v182, v183);
        int v185 = sub_1000847D4(*a1);
        unint64_t v42 = (unint64_t)v240;
        if (v185 >= 1)
        {
          unsigned int v186 = v185;
          uint64_t v187 = 0;
          if (v185 >= 30) {
            uint64_t v188 = 30;
          }
          else {
            uint64_t v188 = v185;
          }
          if (v188 < 8 || (unint64_t)v240 - v184 < 0x20) {
            goto LABEL_148;
          }
          uint64_t v187 = v188 & 0x18;
          *(void *)&long long v189 = __PAIR64__(HIDWORD(*(void *)v184), *(_OWORD *)v184) | 0xC0000000C0000000;
          DWORD2(v189) = *(void *)(v184 + 8) | 0xC0000000;
          HIDWORD(v189) = HIDWORD(*(_OWORD *)v184) | 0xC0000000;
          unsigned long long v190 = *(_OWORD *)(v184 + 16) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
          _OWORD *v240 = v189;
          v240[1] = v190;
          if ((v188 & 0xFFFFFFF8) != 8)
          {
            unsigned long long v191 = *(_OWORD *)(v184 + 48) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
            v240[2] = *(_OWORD *)(v184 + 32) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
            v240[3] = v191;
            if (v187 != 16)
            {
              unsigned long long v192 = *(_OWORD *)(v184 + 80) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
              v240[4] = *(_OWORD *)(v184 + 64) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
              v240[5] = v192;
            }
          }
          if (v187 != v188)
          {
LABEL_148:
            uint64_t v193 = v188 - v187;
            uint64_t v194 = 4 * v187;
            uint64_t v195 = (unsigned int *)v240 + v187;
            unint64_t v196 = (int *)(v184 + v194);
            do
            {
              int v197 = *v196++;
              *v195++ = v197 | 0xC0000000;
              --v193;
            }
            while (v193);
          }
          sub_1000CD4D0((void *)v184, 120);
          BOOL v198 = 0;
          BOOL v172 = 0;
          unint64_t v199 = v186 + 1;
          int v173 = -1;
          do
          {
            uint64_t v200 = (v199 - 2);
            sub_1000B5360((uint64_t)a1, *(_DWORD *)(v42 + 4 * v200), (uint64_t)v239, v241);
            unint64_t v42 = (unint64_t)v240;
            int v201 = sub_1000CFC34(v174, v239, v171);
            if (v173 == -1 || !(v172 | v201) || v172 == (v201 == 0) && !v198 && !*v241)
            {
              int v173 = *((_DWORD *)v240 + v200);
              BOOL v172 = v201 == 0;
              BOOL v198 = *v241 == 0;
            }
            --v199;
          }
          while (v199 > 1);
          goto LABEL_160;
        }
        if (v184) {
          sub_1000CD4D0((void *)v184, 120);
        }
      }
      LOBYTE(v172) = 0;
      int v173 = -1;
LABEL_160:
      a7[v170] = v173;
      if (a11) {
        *(unsigned char *)(a11 + v170) = v172;
      }
      ++v170;
      uint64_t v168 = a9;
      if (v170 == v238)
      {
        uint64_t v94 = v214;
        if (a10 && (int)v238 >= 2)
        {
          long long v202 = (_DWORD *)v211 + 1;
          unsigned long long v203 = a10 + 1;
          uint64_t v204 = v238 - 1;
          do
          {
            if (*(v202 - 1) != *v202) {
              *v203 |= 8u;
            }
            ++v202;
            ++v203;
            --v204;
          }
          while (v204);
        }
        break;
      }
    }
  }
  sub_1000CD4D0(v222, v206);
  sub_1000CD4D0(v215, v206);
  sub_1000CD4D0(v228, v206);
  sub_1000CD4D0(v229, v206);
  sub_1000CD4D0(v236, v206);
  sub_1000CD4D0(v211, v207);
  sub_1000CD4D0((void *)v42, 120);
  sub_1000CD4D0(v241, v208);
  sub_1000CD4D0(v239, v209);
  return v94;
}

uint64_t sub_1000BA9EC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int *a7, int a8, int a9, int a10, int a11, int a12, char a13)
{
  int v13 = *a7;
  if (*a7 >= (int)result && a8 != 0) {
    int v13 = 0;
  }
  if (v13 < (int)result)
  {
    *(_DWORD *)(a2 + 4 * v13) = a9;
    if (a3) {
      *(_DWORD *)(a3 + 4 * v13) = a10;
    }
    if (a4) {
      *(_DWORD *)(a4 + 4 * v13) = a11;
    }
    if (a5) {
      *(_DWORD *)(a5 + 4 * v13) = a12;
    }
    if (a6) {
      *(unsigned char *)(a6 + v13) = a13;
    }
  }
  *a7 = v13 + 1;
  return result;
}

uint64_t sub_1000BAA4C(uint64_t *a1, uint64_t a2, int a3, int a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int *a12, int a13)
{
  if (a4 >= 1)
  {
    uint64_t v15 = 0;
    uint64_t v16 = a4;
    while (1)
    {
      int v41 = 0;
      LOWORD(v41) = *(_WORD *)(a2 + 2 * v15);
      LOWORD(v19) = v41;
      if ((_WORD)v41)
      {
        uint64_t v20 = a9;
        uint64_t v21 = a10;
        uint64_t v22 = 2;
        while (sub_1000CDF3C((unsigned __int16)v19))
        {
          int v19 = *(unsigned __int16 *)((char *)&v41 + v22);
          v22 += 2;
          if (!v19)
          {
            unsigned int v30 = -1;
            a10 = v21;
            a9 = v20;
            goto LABEL_14;
          }
        }
        uint64_t v31 = (void *)sub_1000CD3E8(4, v23, v24, v25, v26, v27, v28, v29);
        if ((int)sub_1000847D4(*a1) >= 1)
        {
          unsigned int v30 = *(_DWORD *)v31 | 0xC0000000;
LABEL_13:
          sub_1000CD4D0(v31, 4);
          a9 = v20;
          a10 = v21;
          goto LABEL_14;
        }
        unsigned int v30 = -1;
        a10 = v21;
        a9 = v20;
        if (v31) {
          goto LABEL_13;
        }
      }
      else
      {
        unsigned int v30 = -1;
      }
LABEL_14:
      int v32 = *a12;
      if (*a12 >= a6 && a5 != 0) {
        int v32 = 0;
      }
      if (v32 < a6)
      {
        *(_DWORD *)(a7 + 4 * v32) = v30;
        if (a8) {
          *(_DWORD *)(a8 + 4 * v32) = a3;
        }
        if (a9) {
          *(_DWORD *)(a9 + 4 * v32) = 1;
        }
        if (a10) {
          *(_DWORD *)(a10 + 4 * v32) = a13;
        }
        if (a11) {
          *(unsigned char *)(a11 + v32) = 1;
        }
      }
      ++a3;
      *a12 = v32 + 1;
      if (++v15 == v16) {
        return a4;
      }
    }
  }
  return 0;
}

uint64_t sub_1000BAC1C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  if ((int)result >= 1)
  {
    uint64_t v7 = 0;
    int v8 = 0;
    char v9 = 0;
    int v10 = 0;
    int v11 = 0;
    int v12 = 0;
    LODWORD(v13) = a7;
    do
    {
      if (a3) {
        int v12 = *(_DWORD *)(a3 + 4 * v7);
      }
      if (a4) {
        int v11 = *(_DWORD *)(a4 + 4 * v7);
      }
      if (a5) {
        int v10 = *(_DWORD *)(a5 + 4 * v7);
      }
      if (a6) {
        char v9 = *(unsigned char *)(a6 + v7);
      }
      int v14 = *(_DWORD *)(a2 + 4 * v7);
      if (v7 == v13)
      {
        uint64_t v15 = (int)v7;
      }
      else
      {
        if (a3)
        {
          int v16 = v7;
          if (a4)
          {
            do
            {
              uint64_t v15 = (int)v13;
              uint64_t v18 = 4 * (int)v13;
              uint64_t v19 = v16;
              uint64_t v20 = 4 * v16;
              *(_DWORD *)(a2 + v20) = *(_DWORD *)(a2 + v18);
              *(_DWORD *)(a3 + v20) = *(_DWORD *)(a3 + v18);
              *(_DWORD *)(a4 + v20) = *(_DWORD *)(a4 + v18);
              if (a5) {
                *(_DWORD *)(a5 + 4 * v19) = *(_DWORD *)(a5 + 4 * (int)v13);
              }
              if (a6) {
                *(unsigned char *)(a6 + v19) = *(unsigned char *)(a6 + (int)v13);
              }
              ++v8;
              if ((int)v13 + a7 >= (int)result) {
                int v17 = result;
              }
              else {
                int v17 = 0;
              }
              int v16 = v13;
              uint64_t v13 = (v13 + a7 - v17);
            }
            while (v7 != v13);
          }
          else
          {
            do
            {
              uint64_t v15 = (int)v13;
              uint64_t v22 = 4 * (int)v13;
              uint64_t v23 = v16;
              uint64_t v24 = 4 * v16;
              *(_DWORD *)(a2 + v24) = *(_DWORD *)(a2 + v22);
              *(_DWORD *)(a3 + v24) = *(_DWORD *)(a3 + v22);
              if (a5) {
                *(_DWORD *)(a5 + 4 * v23) = *(_DWORD *)(a5 + 4 * (int)v13);
              }
              if (a6) {
                *(unsigned char *)(a6 + v23) = *(unsigned char *)(a6 + (int)v13);
              }
              ++v8;
              if ((int)v13 + a7 >= (int)result) {
                int v21 = result;
              }
              else {
                int v21 = 0;
              }
              int v16 = v13;
              uint64_t v13 = (v13 + a7 - v21);
            }
            while (v7 != v13);
          }
          *(_DWORD *)(a2 + 4 * v15) = v14;
LABEL_41:
          *(_DWORD *)(a3 + 4 * v15) = v12;
          if (!a4) {
            goto LABEL_17;
          }
LABEL_16:
          *(_DWORD *)(a4 + 4 * v15) = v11;
          goto LABEL_17;
        }
        int v25 = v7;
        do
        {
          uint64_t v15 = (int)v13;
          *(_DWORD *)(a2 + 4 * v25) = *(_DWORD *)(a2 + 4 * (int)v13);
          if (a4) {
            *(_DWORD *)(a4 + 4 * v25) = *(_DWORD *)(a4 + 4 * (int)v13);
          }
          if (a5) {
            *(_DWORD *)(a5 + 4 * v25) = *(_DWORD *)(a5 + 4 * (int)v13);
          }
          if (a6) {
            *(unsigned char *)(a6 + v25) = *(unsigned char *)(a6 + (int)v13);
          }
          ++v8;
          if ((int)v13 + a7 >= (int)result) {
            int v26 = result;
          }
          else {
            int v26 = 0;
          }
          int v25 = v13;
          uint64_t v13 = (v13 + a7 - v26);
        }
        while (v7 != v13);
      }
      *(_DWORD *)(a2 + 4 * v15) = v14;
      if (a3) {
        goto LABEL_41;
      }
      if (a4) {
        goto LABEL_16;
      }
LABEL_17:
      if (a5) {
        *(_DWORD *)(a5 + 4 * v15) = v10;
      }
      if (a6) {
        *(unsigned char *)(a6 + v15) = v9;
      }
      ++v8;
      LODWORD(v13) = ++v7 + a7;
    }
    while (v8 < (int)result);
  }
  return result;
}

uint64_t sub_1000BAE04(uint64_t a1, uint64_t a2, unint64_t a3, unsigned int a4, _DWORD *a5, uint64_t a6, int a7, void *a8)
{
  return sub_1000AF184(a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1000BAE20(uint64_t *a1, uint64_t a2)
{
  int v4 = sub_1000CAD00((unint64_t)"<START_DOCUMENT>");
  int v5 = sub_100084674(*a1);
  if (v5 <= v4) {
    int v6 = v4;
  }
  else {
    int v6 = v5;
  }
  int v7 = v6 + 1;
  int v8 = sub_100039EB4(*a1) + 1;
  uint64_t v9 = 2 * v7;
  int v17 = (_WORD *)sub_1000CD3E8(v9, v10, v11, v12, v13, v14, v15, v16);
  uint64_t v18 = 2 * v8;
  int v26 = (_WORD *)sub_1000CD3E8(v18, v19, v20, v21, v22, v23, v24, v25);
  sub_1000B5360((uint64_t)a1, a2, (uint64_t)v17, v26);
  uint64_t v34 = (_WORD *)sub_1000CD3E8(v9, v27, v28, v29, v30, v31, v32, v33);
  uint64_t v35 = v34;
  LOWORD(v36) = *v17;
  if (!*v17)
  {
    *uint64_t v34 = 0;
    if (sub_1000CF684(v17, v34)) {
      goto LABEL_8;
    }
LABEL_39:
    sub_1000CD4D0(v35, v9);
    goto LABEL_43;
  }
  uint64_t v37 = 0;
  do
  {
    __int16 v38 = sub_1000CDA88((unsigned __int16)v36);
    uint64_t v39 = v37;
    *(_WORD *)((char *)v35 + v39 * 2) = v38;
    ++v37;
    int v36 = (unsigned __int16)v17[v39 + 1];
  }
  while (v36);
  *((_WORD *)v35 + v37) = 0;
  if (!sub_1000CF684(v17, v35)) {
    goto LABEL_39;
  }
LABEL_8:
  uint64_t v76 = v18;
  int v47 = 30;
  uint64_t v48 = 120;
LABEL_11:
  uint64_t v49 = (void *)sub_1000CD3E8(v48, v40, v41, v42, v43, v44, v45, v46);
  uint64_t v50 = v17;
  do
  {
    int v51 = (unsigned __int16)*v50;
    if (!*v50)
    {
      if (v47 > 0)
      {
        uint64_t v74 = (unsigned int *)v49;
        goto LABEL_41;
      }
LABEL_10:
      sub_1000CD4D0(v49, 4 * v47);
      v47 *= 2;
      uint64_t v48 = 4 * v47;
      goto LABEL_11;
    }
    ++v50;
  }
  while (sub_1000CDF3C(v51));
  if (v47 < 1) {
    uint64_t v59 = 0;
  }
  else {
    uint64_t v59 = (void *)sub_1000CD3E8(4 * v47, v52, v53, v54, v55, v56, v57, v58);
  }
  int v60 = sub_1000847D4(*a1);
  int v61 = v60;
  if (v60 >= v47) {
    uint64_t v62 = v47;
  }
  else {
    uint64_t v62 = v60;
  }
  if ((int)v62 < 1)
  {
    if (v59) {
      goto LABEL_30;
    }
  }
  else
  {
    uint64_t v63 = 0;
    if (v62 < 8) {
      goto LABEL_26;
    }
    if ((unint64_t)((char *)v49 - (char *)v59) < 0x20) {
      goto LABEL_26;
    }
    uint64_t v63 = v62 & 0x7FFFFFF8;
    uint64_t v64 = v59 + 2;
    uint64_t v65 = v49 + 2;
    uint64_t v66 = v62 & 0xFFFFFFF8;
    do
    {
      *(void *)&long long v67 = __PAIR64__(HIDWORD(*v64), *(_OWORD *)v64) | 0xC0000000C0000000;
      DWORD2(v67) = v64[1] | 0xC0000000;
      HIDWORD(v67) = HIDWORD(*(_OWORD *)v64) | 0xC0000000;
      *(v65 - 1) = *((_OWORD *)v64 - 1) | __PAIR128__(0xC0000000C0000000, 0xC0000000C0000000);
      *uint64_t v65 = v67;
      v64 += 4;
      v65 += 2;
      v66 -= 8;
    }
    while (v66);
    if (v63 != v62)
    {
LABEL_26:
      uint64_t v68 = v62 - v63;
      uint64_t v69 = 4 * v63;
      uint64_t v70 = (unsigned int *)v49 + v63;
      uint64_t v71 = (int *)((char *)v59 + v69);
      do
      {
        int v72 = *v71++;
        *v70++ = v72 | 0xC0000000;
        --v68;
      }
      while (v68);
    }
LABEL_30:
    sub_1000CD4D0(v59, 4 * v47);
  }
  if (v61 >= v47) {
    goto LABEL_10;
  }
  if (v61 != 1)
  {
    a2 = *(unsigned int *)v49;
    if (v61 >= 1)
    {
      uint64_t v73 = v61;
      uint64_t v74 = (unsigned int *)v49;
      while (1)
      {
        sub_1000B5360((uint64_t)a1, *v74, (uint64_t)v17, v26);
        if (!sub_1000CF684(v17, v35)) {
          break;
        }
        ++v74;
        if (!--v73) {
          goto LABEL_42;
        }
      }
LABEL_41:
      a2 = *v74;
    }
  }
LABEL_42:
  sub_1000CD4D0(v49, 4 * v47);
  sub_1000CD4D0(v35, v9);
  uint64_t v18 = v76;
LABEL_43:
  sub_1000CD4D0(v26, v18);
  sub_1000CD4D0(v17, v9);
  return a2;
}

unint64_t sub_1000BB100(uint64_t *a1, unsigned int a2, _DWORD *a3)
{
  if (a2 == 65534)
  {
    *a3 = 0;
    return 1;
  }
  int v13 = 0;
  unsigned int v6 = sub_10001ED14(a1[1], a2, (unsigned int *)&v13);
  if (v6 == 0xFFFF) {
    return 0xFFFFFFFFLL;
  }
  unsigned int v7 = v6;
  int v8 = sub_1000847FC(*a1);
  uint64_t v9 = (v8 + 1);
  uint64_t v10 = sub_100084804(*a1);
  sub_10001EBC4(a1[1], v7);
  uint64_t v11 = a1[9];
  if (v11)
  {
    int v12 = sub_1000C3A78(v11);
    uint64_t v11 = a1[9];
    if (v12 >= (int)v10)
    {
      if ((int)sub_1000C3A84(v11) > v8) {
        goto LABEL_9;
      }
      uint64_t v11 = a1[9];
    }
  }
  sub_1000C3670(v11);
  a1[9] = sub_1000C34E8(2, v10, v9);
LABEL_9:
  if (v13 >= (int)v10) {
    return 0;
  }
  sub_10008480C(*a1);
  memcpy(a3, *(const void **)(a1[9] + 8 * v13), 2 * (int)v9);
  return sub_10009BF2C((unint64_t)a3);
}

uint64_t sub_1000BB274(uint64_t *a1, int a2)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = sub_10001EDE8(v4, a2);
  if (v5 == 0xFFFF)
  {
    uint64_t v6 = *a1;
    uint64_t v7 = a1[2];
    uint64_t v8 = sub_10001F04C(v4, a2);
    if (v8 == 0xFFFF) {
      return 0xFFFFLL;
    }
    uint64_t v5 = v8;
    sub_1000847DC(v6);
    sub_1000847E4(v6);
    if (!sub_100076850(v7, v5))
    {
LABEL_12:
      sub_10001F6DC(v4, v5, 1);
      return 0xFFFFLL;
    }
    int v9 = sub_10008480C(v6);
    if (v9 >= 1)
    {
      int v10 = v9;
      while (sub_10001F288(v4, v5) != 0xFFFF)
      {
        if (!--v10) {
          return v5;
        }
      }
      if (!sub_10001F6B8(a1[1], v5) || !sub_100076900(a1[2], v5)) {
        return 0xFFFFLL;
      }
      uint64_t v4 = a1[1];
      goto LABEL_12;
    }
  }
  return v5;
}

uint64_t sub_1000BB3A0(uint64_t a1, unsigned int a2)
{
  uint64_t result = sub_10001F6B8(*(void *)(a1 + 8), a2);
  if (result)
  {
    uint64_t result = sub_100076900(*(void *)(a1 + 16), a2);
    if (result) {
      return sub_10001F6DC(*(void *)(a1 + 8), a2, 1) != 0;
    }
  }
  return result;
}

uint64_t sub_1000BB3F8(uint64_t *a1, unint64_t a2, _WORD *a3, uint64_t a4, unsigned int *a5, _DWORD *a6)
{
  uint64_t v19 = a4;
  *a5 = -1;
  *a6 = 0;
  if (!a2) {
    return 1;
  }
  int v12 = (_WORD *)a2;
  do
  {
    int v13 = (unsigned __int16)*v12;
    if (!*v12) {
      return 1;
    }
    ++v12;
  }
  while (sub_1000CDF3C(v13));
  uint64_t v14 = *a1;
  int v15 = sub_10008466C(*a1);
  int v18 = v15;
  if (v15 != 0xFFFFFF)
  {
LABEL_10:
    uint64_t result = 0;
    *a5 = v15 | 0xC0000000;
    *a6 = 1;
    return result;
  }
  if (!a4)
  {
    uint64_t v17 = a1[3];
    if (a3 && v17)
    {
      if (*a3)
      {
        return sub_1000BB5B0(a1, a2, (unint64_t)a3, a5, a6);
      }
    }
    else if (!v17)
    {
      return 1;
    }
    if (qword_100101CC0 && *(uint64_t *)(qword_100101CC0 + 5496) >= 1)
    {
      return sub_1000BB718(a1, a2, a5, a6);
    }
    return 1;
  }
  if (!sub_10008481C(v14)) {
    return 1;
  }
  uint64_t result = sub_100084824(*a1, a2, (uint64_t)a3, 1, (uint64_t)&v19, 0, 0, &v18);
  if (!result)
  {
    int v15 = v18;
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1000BB5B0(uint64_t *a1, uint64_t a2, unint64_t a3, unsigned int *a4, _DWORD *a5)
{
  int v35 = 0;
  uint64_t v34 = 0;
  int v33 = 0;
  int v10 = sub_1000847F4(*a1);
  if (v10 <= 50) {
    int v18 = 50;
  }
  else {
    int v18 = v10;
  }
  uint64_t v19 = (4 * v18 + 4);
  uint64_t v20 = (void *)sub_1000CD3E8(2 * (int)v19, v11, v12, v13, v14, v15, v16, v17);
  uint64_t v32 = v20;
  int v21 = sub_100096158(a1[3], a3, 0, v20, v19, (uint64_t)&v34, 1, (uint64_t)&v35);
  if (v35 >= 1)
  {
    sub_1000CD4D0(v20, 2 * (int)v19);
    uint64_t v19 = v35;
    uint64_t v20 = (void *)sub_1000CD3E8(2 * v35, v22, v23, v24, v25, v26, v27, v28);
    uint64_t v32 = v20;
    int v21 = sub_100096158(a1[3], a3, 0, v20, v19, (uint64_t)&v34, 1, (uint64_t)&v35);
  }
  if (v21)
  {
    uint64_t v29 = sub_100084824(*a1, a2, a3, 1, (uint64_t)&v32, 0, 1, &v33);
    sub_1000CD4D0(v32, 2 * (int)v19);
    int v30 = v33;
    *a5 = 1;
    *a4 = v30 | 0xC0000000;
  }
  else
  {
    sub_1000CD4D0(v20, 2 * (int)v19);
    *a5 = 0;
    return 1;
  }
  return v29;
}

uint64_t sub_1000BB718(uint64_t *a1, unint64_t a2, unsigned int *a3, _DWORD *a4)
{
  if (qword_100101CC0)
  {
    uint64_t v7 = *(void *)(qword_100101CC0 + 5496);
    uint64_t v249 = *(unsigned int *)(qword_100101CC0 + 5488);
    uint64_t v251 = 8 * (int)v7;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v251 = 0;
    uint64_t v249 = 0;
  }
  int v272 = 0;
  uint64_t v8 = sub_1000CD550();
  uint64_t v9 = sub_1000848C0(*a1);
  uint64_t v17 = (_DWORD *)sub_1000CD3E8(80, v10, v11, v12, v13, v14, v15, v16);
  uint64_t v25 = (_DWORD *)sub_1000CD3E8(80, v18, v19, v20, v21, v22, v23, v24);
  int v33 = (char *)sub_1000CD3E8(80, v26, v27, v28, v29, v30, v31, v32);
  uint64_t v269 = (char *)sub_1000CD3E8(20, v34, v35, v36, v37, v38, v39, v40);
  uint64_t v253 = v33;
  uint64_t v264 = v17;
  uint64_t v254 = v25;
  uint64_t v41 = sub_1000B797C(a1, 1, a2, 0, 0, 20, v17, v25, v33, v269, 0);
  if (!v41)
  {
    *a4 = 0;
    sub_1000CD534(v8);
    return 1;
  }
  uint64_t v42 = v41;
  uint64_t v247 = v8;
  unint64_t v248 = a4;
  uint64_t v250 = v7;
  if ((int)v41 >= 21)
  {
    sub_1000CD4D0(v269, 20);
    sub_1000CD4D0(v33, 80);
    sub_1000CD4D0(v254, 80);
    sub_1000CD4D0(v17, 80);
    uint64_t v50 = (_DWORD *)sub_1000CD3E8(4 * v42, v43, v44, v45, v46, v47, v48, v49);
    uint64_t v58 = (_DWORD *)sub_1000CD3E8(4 * v42, v51, v52, v53, v54, v55, v56, v57);
    uint64_t v66 = (char *)sub_1000CD3E8(4 * v42, v59, v60, v61, v62, v63, v64, v65);
    uint64_t v269 = (char *)sub_1000CD3E8(v42, v67, v68, v69, v70, v71, v72, v73);
    uint64_t v253 = v66;
    uint64_t v264 = v50;
    uint64_t v254 = v58;
    LODWORD(v42) = sub_1000B797C(a1, 1, a2, 0, 0, v42, v50, v58, v66, v269, 0);
  }
  v273[0] = 0;
  int v74 = sub_1000847F4(*a1);
  if (v74 <= 50) {
    int v82 = 50;
  }
  else {
    int v82 = v74;
  }
  unsigned int v259 = v82;
  int v83 = v82 + 1;
  uint64_t v265 = (char *)sub_1000CD3E8((8 * (v82 + 1)), v75, v76, v77, v78, v79, v80, v81);
  int v244 = sub_1000CED6C(a2);
  unint64_t v257 = sub_1000CD3E8(2 * (v244 + 1), v84, v85, v86, v87, v88, v89, v90);
  uint64_t v91 = (int)v42;
  uint64_t v99 = (unsigned __int8 *)sub_1000CD3E8((int)v42, v92, v93, v94, v95, v96, v97, v98);
  uint64_t v100 = 8 * (int)v42;
  unint64_t v108 = sub_1000CD3E8(v100, v101, v102, v103, v104, v105, v106, v107);
  unint64_t v116 = sub_1000CD3E8(v100, v109, v110, v111, v112, v113, v114, v115);
  uint64_t v124 = v116;
  uint64_t v262 = (int)v42;
  uint64_t v263 = a1;
  uint64_t v252 = (_WORD *)a2;
  if ((int)v42 <= 0)
  {
    long long v189 = (void *)sub_1000CD3E8(8 * (int)v42, v117, v118, v119, v120, v121, v122, v123);
    goto LABEL_73;
  }
  unsigned int v245 = v9;
  uint64_t v125 = 0;
  int v255 = v83;
  int v267 = 4 * v83;
  uint64_t v270 = v42;
  int v126 = (void *)v257;
  uint64_t v127 = 2 * v259 + 2;
  unint64_t v256 = v116;
  uint64_t v260 = v100;
  do
  {
    while (1)
    {
      unsigned int v130 = v264[v125];
      if (v130 != -1) {
        break;
      }
      memcpy(v126, &v252[*((int *)v254 + v125)], 2 * *(int *)&v253[4 * v125]);
      *((_WORD *)v126 + *(int *)&v253[4 * v125]) = 0;
      unint64_t v140 = sub_1000CD3E8(v251, v133, v134, v135, v136, v137, v138, v139);
      *(void *)(v124 + 8 * v125) = v140;
      int v141 = sub_100096158(a1[3], (unint64_t)v126, 0, v265, v267, v140, v250, (uint64_t)v273);
      uint64_t v142 = v273[0];
      if (v273[0] >= 1)
      {
        uint64_t v265 = (char *)sub_1000CD3E8(2 * v273[0], v117, v118, v119, v120, v121, v122, v123);
        int v141 = sub_100096158(a1[3], (unint64_t)v126, 0, v265, v142, *(void *)(v124 + 8 * v125), v250, (uint64_t)v273);
        int v267 = v142;
      }
      if (v141 >= 255) {
        uint64_t v143 = 255;
      }
      else {
        uint64_t v143 = v141;
      }
      v99[v125] = v143;
      if ((int)v143 < 1)
      {
        **(void **)(v124 + 8 * v125) = 0;
        *(void *)(v108 + 8 * v125) = 0;
        uint64_t v129 = v260;
        if (++v125 == v270) {
          goto LABEL_63;
        }
      }
      else
      {
        unint64_t v144 = v143 + 1;
        unsigned long long v145 = v265;
        do
          *(void *)(*(void *)(v124 + 8 * v125) + 8 * (v144-- - 2)) -= **(void **)(v124 + 8 * v125);
        while (v144 > 1);
        uint64_t v146 = 8 * v143;
        uint64_t v147 = 0;
        *(void *)(v108 + 8 * v125) = sub_1000CD3E8(8 * v143, v117, v118, v119, v120, v121, v122, v123);
        do
        {
          int v148 = sub_10009BF2C((unint64_t)v145) + 1;
          uint64_t v156 = (void *)sub_1000CD3E8(2 * v148, v149, v150, v151, v152, v153, v154, v155);
          j__memmove(v156, v145, 2 * v148);
          *(void *)(*(void *)(v108 + 8 * v125) + v147) = v156;
          v145 += 2 * (int)(sub_10009BF2C((unint64_t)v145) + 1);
          v147 += 8;
        }
        while (v146 != v147);
        a1 = v263;
        uint64_t v124 = v256;
        int v126 = (void *)v257;
        uint64_t v129 = v260;
        if (++v125 == v270) {
          goto LABEL_63;
        }
      }
    }
    unsigned int v131 = v130 >> 30;
    if (v130 >> 30 == 1)
    {
      if ((_WORD)v130 != 0xFFFF && sub_10001ED14(a1[1], (unsigned __int16)v264[v125], 0) != 0xFFFF)
      {
        int v157 = 1;
        goto LABEL_37;
      }
LABEL_34:
      int v157 = 0;
      goto LABEL_37;
    }
    if (v131 == 2)
    {
      int v132 = sub_10001FD90(a1[1], (unsigned __int16)v264[v125]);
    }
    else
    {
      if (v131 != 3) {
        goto LABEL_34;
      }
      int v132 = sub_10008480C(*a1);
    }
    int v157 = v132;
LABEL_37:
    int v158 = v267;
    if (v157 >= 255) {
      int v159 = 255;
    }
    else {
      int v159 = v157;
    }
    v99[v125] = v159;
    if (v159 * v255 > v267)
    {
      uint64_t v265 = (char *)sub_1000CD3E8(2 * v159 * v255, v117, v118, v119, v120, v121, v122, v123);
      int v158 = v159 * v255;
    }
    int v267 = v158;
    *(void *)(v108 + 8 * v125) = sub_1000CD3E8(8 * v159, v117, v118, v119, v120, v121, v122, v123);
    if (v157 < 1)
    {
      unsigned int v164 = v264[v125];
      uint64_t v165 = *a1;
      unsigned int v166 = v164 >> 30;
      if (v164 >> 30 == 1) {
        goto LABEL_52;
      }
    }
    else
    {
      uint64_t v160 = 0;
      if (v159 <= 1) {
        unsigned int v161 = 1;
      }
      else {
        unsigned int v161 = v159;
      }
      uint64_t v162 = 8 * v161;
      BOOL v163 = v265;
      do
      {
        *(void *)(*(void *)(v108 + 8 * v125) + v160) = v163;
        v160 += 8;
        BOOL v163 = (_WORD *)((char *)v163 + v127);
      }
      while (v162 != v160);
      unsigned int v164 = v264[v125];
      uint64_t v165 = *a1;
      unsigned int v166 = v164 >> 30;
      if (v164 >> 30 == 1)
      {
LABEL_52:
        unsigned int v167 = sub_10001ED14(a1[1], (unsigned __int16)v164, 0);
        uint64_t v168 = a1[1];
LABEL_54:
        sub_10001EBC4(v168, v167);
        goto LABEL_55;
      }
    }
    if (v166 == 2)
    {
      uint64_t v168 = a1[1];
      unsigned int v167 = (unsigned __int16)v164;
      goto LABEL_54;
    }
LABEL_55:
    sub_100084814(v165);
    if (v157 < 1)
    {
      uint64_t v128 = v124;
    }
    else
    {
      uint64_t v169 = 0;
      if (v159 <= 1) {
        unsigned int v170 = 1;
      }
      else {
        unsigned int v170 = v159;
      }
      uint64_t v171 = 8 * v170;
      do
      {
        BOOL v172 = *(const void **)(*(void *)(v108 + 8 * v125) + v169);
        int v173 = sub_10009BF2C((unint64_t)v172) + 1;
        uint64_t v181 = (void *)sub_1000CD3E8(2 * v173, v174, v175, v176, v177, v178, v179, v180);
        j__memmove(v181, v172, 2 * v173);
        *(void *)(*(void *)(v108 + 8 * v125) + v169) = v181;
        v169 += 8;
      }
      while (v171 != v169);
      uint64_t v124 = v256;
      uint64_t v128 = v256;
      a1 = v263;
    }
    uint64_t v129 = v260;
    uint64_t v91 = v262;
    int v126 = (void *)v257;
    *(void *)(v128 + 8 * v125++) = 0;
  }
  while (v125 != v270);
LABEL_63:
  long long v189 = (void *)sub_1000CD3E8(v129, v117, v118, v119, v120, v121, v122, v123);
  uint64_t v190 = 0;
  uint64_t v9 = v245;
  do
  {
    if (v99[v190])
    {
      v189[v190] = sub_1000CD3E8(v99[v190], v182, v183, v184, v185, v186, v187, v188);
      if (v99[v190])
      {
        unint64_t v191 = 0;
        do
          *(unsigned char *)(v189[v190] + v191++) = sub_100084894(*a1);
        while (v191 < v99[v190]);
      }
    }
    else
    {
      v189[v190] = 0;
    }
    ++v190;
  }
  while (v190 != v270);
LABEL_73:
  unint64_t v261 = sub_1000CD3E8(16 * (int)v249, v182, v183, v184, v185, v186, v187, v188);
  if ((int)v249 >= 1)
  {
    uint64_t v200 = (unint64_t *)(v261 + 8);
    uint64_t v201 = v249;
    do
    {
      *uint64_t v200 = sub_1000CD3E8(v91, v193, v194, v195, v196, v197, v198, v199);
      v200 += 2;
      --v201;
    }
    while (v201);
  }
  int v202 = sub_1000BE584(v91, v261, v99, v124, v189, v249);
  if (v202 >= 1)
  {
    uint64_t v258 = v202;
    unint64_t v271 = sub_1000CD3E8(8 * v202, v203, v204, v205, v206, v207, v208, v209);
    uint64_t v217 = 0;
    unsigned int v268 = 0;
    uint64_t v218 = v91;
    int v219 = v269;
    while (1)
    {
      uint64_t v266 = v217;
      if ((int)v91 < 1)
      {
        int v227 = 0;
      }
      else
      {
        unsigned int v224 = (void *)(v261 + 16 * v217 + 8);
        if (v9 == 0xFFFF)
        {
          uint64_t v239 = 0;
          int v227 = 0;
          do
          {
            uint64_t v240 = *(void *)(v108 + 8 * v239);
            if (v240) {
              v227 += sub_10009BF2C(*(void *)(v240 + 8 * *(unsigned __int8 *)(*v224 + v239)));
            }
            ++v239;
          }
          while (v218 != v239);
        }
        else
        {
          uint64_t v225 = 0;
          BOOL v226 = 0;
          int v227 = 0;
          do
          {
            int v228 = v227 - 1;
            if (!v226) {
              int v228 = v227 + 1;
            }
            if ((v219[v225] & 8) != 0)
            {
              int v227 = v228;
              BOOL v226 = !v226;
            }
            uint64_t v229 = *(void *)(v108 + 8 * v225);
            if (v229)
            {
              int v230 = sub_10009BF2C(*(void *)(v229 + 8 * *(unsigned __int8 *)(*v224 + v225)));
              BOOL v226 = 0;
              v227 += v230;
            }
            ++v225;
          }
          while (v218 != v225);
        }
      }
      unint64_t v221 = sub_1000CD3E8(2 * (v227 + 1), v210, v211, v212, v213, v214, v215, v216);
      uint64_t v220 = v271;
      *(void *)(v271 + 8 * v268) = v221;
      if ((int)v91 >= 1) {
        break;
      }
      int v233 = 0;
LABEL_79:
      *(_WORD *)(v221 + 2 * v233) = -1;
      a1 = v263;
      if (sub_10008481C(*v263)) {
        BOOL v222 = v233 < 256;
      }
      else {
        BOOL v222 = 0;
      }
      unsigned int v223 = v268;
      if (v222) {
        unsigned int v223 = v268 + 1;
      }
      unsigned int v268 = v223;
      uint64_t v217 = v266 + 1;
      LODWORD(v91) = v262;
      if (v266 + 1 == v258) {
        goto LABEL_115;
      }
    }
    uint64_t v231 = 0;
    int v232 = 0;
    int v233 = 0;
    while (2)
    {
      if ((v219[v231] & 8) == 0 || v9 == 0xFFFF)
      {
LABEL_105:
        uint64_t v235 = *(void *)(v108 + 8 * v231);
        if (!v235) {
          goto LABEL_98;
        }
      }
      else
      {
        if (!v232)
        {
          *(_WORD *)(*(void *)(v271 + 8 * v268) + 2 * v233++) = v9;
          int v232 = 1;
          goto LABEL_105;
        }
        int v232 = 0;
        --v233;
        uint64_t v235 = *(void *)(v108 + 8 * v231);
        if (!v235)
        {
LABEL_98:
          if (v218 == ++v231)
          {
            uint64_t v220 = v271;
            unint64_t v221 = *(void *)(v271 + 8 * v268);
            goto LABEL_79;
          }
          continue;
        }
      }
      break;
    }
    uint64_t v236 = *(const void **)(v235 + 8 * *(unsigned __int8 *)(*(void *)(v261 + 16 * v266 + 8) + v231));
    uint64_t v237 = v9;
    int v238 = sub_10009BF2C((unint64_t)v236);
    memcpy((void *)(*(void *)(v271 + 8 * v268) + 2 * v233), v236, 2 * v238);
    int v232 = 0;
    v233 += v238;
    uint64_t v9 = v237;
    int v219 = v269;
    goto LABEL_98;
  }
  uint64_t v220 = 0;
  unsigned int v268 = 0;
LABEL_115:
  if (v91 != 1 || *v264 != -1 || v268 != 1)
  {
    if (!v268)
    {
      *unint64_t v248 = 0;
      uint64_t v192 = 1;
      goto LABEL_126;
    }
LABEL_121:
    BOOL v241 = 0;
    goto LABEL_122;
  }
  if (*v252 == 32) {
    goto LABEL_121;
  }
  BOOL v241 = v252[v244 - 1] != 32;
LABEL_122:
  uint64_t v192 = sub_100084824(*a1, (uint64_t)v252, 0, v268, v220, 0, v241, &v272);
  int v242 = v272;
  if (v272 == 0xFFFFFF)
  {
    *unint64_t v248 = 0;
  }
  else
  {
    *unint64_t v248 = 1;
    *a3 = v242 | 0xC0000000;
  }
LABEL_126:
  sub_1000CD534(v247);
  return v192;
}

uint64_t sub_1000BC14C(uint64_t *a1, _WORD *a2, unsigned int a3, uint64_t a4, unsigned int *a5, _DWORD *a6, unsigned char *a7)
{
  if (!a2)
  {
LABEL_17:
    *a6 = 0;
    return 1;
  }
  uint64_t v12 = a2;
  uint64_t v14 = a2;
  do
  {
    int v15 = (unsigned __int16)*v14;
    if (!*v14) {
      goto LABEL_17;
    }
    ++v14;
  }
  while (sub_1000CDF3C(v15));
  if (!qword_100101CC0 || *(uint64_t *)(qword_100101CC0 + 5496) < 1)
  {
    int v38 = sub_10008466C(*a1);
    if (v38 != 0xFFFFFF)
    {
      uint64_t v39 = 0;
      *a6 = 1;
      *a5 = v38 | 0xC0000000;
      return v39;
    }
    goto LABEL_17;
  }
  unsigned int v400 = a3;
  int v407 = a5;
  uint64_t v434 = a1;
  int v408 = a6;
  HIDWORD(v439) = 0;
  uint64_t v399 = a7;
  uint64_t v412 = (int)a4;
  bzero(a7, (int)a4);
  uint64_t v437 = sub_1000CD550();
  int v16 = sub_1000CED6C((unint64_t)v12);
  uint64_t v24 = (void *)sub_1000CD3E8(2 * (v16 + 1), v17, v18, v19, v20, v21, v22, v23);
  uint64_t v32 = (void *)sub_1000CD3E8(8 * (int)a4, v25, v26, v27, v28, v29, v30, v31);
  int v33 = v32;
  __src = v12;
  uint64_t v404 = a4;
  if (v16 <= 0)
  {
    *uint64_t v32 = &v12[v16];
  }
  else
  {
    uint64_t v34 = 0;
    int v35 = 0;
    while (*v12 != 32)
    {
      ++v35;
      ++v12;
      do
      {
        if (v16 == v35)
        {
          uint64_t v41 = 0;
          int v42 = 0;
          v32[v34] = &__src[v16];
          uint64_t v43 = __src;
          while (1)
          {
            uint64_t v44 = v42;
            uint64_t v45 = v34;
            while (1)
            {
              unint64_t v46 = v33[v45] - (void)v43;
              memcpy(v24, v43, (int)v46 & 0xFFFFFFFFFFFFFFFELL);
              *((_WORD *)v24 + (int)(v46 >> 1)) = 0;
              int v47 = sub_10008466C(*v434);
              if (v47 != 0xFFFFFF) {
                break;
              }
              BOOL v48 = v45-- <= v44;
              if (v48) {
                goto LABEL_30;
              }
            }
            int v49 = v41 + 1;
            v407[v41] = v47 | 0xC0000000;
            int v42 = v45 + 1;
            uint64_t v43 = (const void *)(v33[v45] + 2);
            ++v41;
            if ((int)v34 <= (int)v45)
            {
              *int v408 = v49;
              sub_1000CD534(v437);
              return 0;
            }
          }
        }
        int v36 = (unsigned __int16)*v12++;
        ++v35;
      }
      while (v36 != 32);
      if (v34 >= (int)a4 - 1) {
        break;
      }
      int v37 = v34 + 1;
      v32[v34++] = v12 - 1;
      if (v16 == v35)
      {
        v32[v37] = &__src[v16];
        break;
      }
    }
  }
LABEL_30:
  sub_1000CD534(v437);
  uint64_t v50 = qword_100101CC0;
  if (qword_100101CC0)
  {
    int v51 = *(_DWORD *)(qword_100101CC0 + 5496);
    uint64_t v50 = *(void *)(qword_100101CC0 + 5488);
  }
  else
  {
    int v51 = 0;
  }
  uint64_t v52 = v434;
  uint64_t v410 = v50;
  if (v51 <= (int)v50) {
    int v51 = v50;
  }
  int v420 = v51;
  uint64_t v403 = sub_1000CD550();
  int v435 = sub_1000848C0(*v434);
  int v396 = sub_1000CED6C((unint64_t)__src);
  __dst = (void *)sub_1000CD3E8(2 * (v396 + 1), v53, v54, v55, v56, v57, v58, v59);
  uint64_t v60 = 4 * v412;
  uint64_t v68 = (_DWORD *)sub_1000CD3E8(4 * v412, v61, v62, v63, v64, v65, v66, v67);
  uint64_t v76 = (int *)sub_1000CD3E8(4 * ((int)v404 + 1), v69, v70, v71, v72, v73, v74, v75);
  uint64_t v84 = (char *)sub_1000CD3E8(4 * v412, v77, v78, v79, v80, v81, v82, v83);
  uint64_t v92 = (char *)sub_1000CD3E8(v412, v85, v86, v87, v88, v89, v90, v91);
  uint64_t v425 = (unsigned char *)sub_1000CD3E8(v412, v93, v94, v95, v96, v97, v98, v99);
  v438 = v92;
  uint64_t v430 = v68;
  uint64_t v100 = sub_1000B797C(v434, 1, (unint64_t)__src, 0, 0, v404, v68, v76, v84, v92, v425);
  if (!v100)
  {
    *int v408 = 0;
    goto LABEL_195;
  }
  unsigned int v108 = v100;
  uint64_t v413 = v100;
  if ((int)v100 <= (int)v404)
  {
    uint64_t v109 = (int)v100;
    uint64_t v125 = v76;
  }
  else
  {
    sub_1000CD4D0(v425, v412);
    sub_1000CD4D0(v92, v412);
    sub_1000CD4D0(v84, v60);
    sub_1000CD4D0(v76, 4 * ((int)v404 + 1));
    sub_1000CD4D0(v68, v60);
    uint64_t v109 = (int)v413;
    uint64_t v117 = (_DWORD *)sub_1000CD3E8(4 * (int)v413, v110, v111, v112, v113, v114, v115, v116);
    uint64_t v125 = (int *)sub_1000CD3E8(4 * ((int)v413 + 1), v118, v119, v120, v121, v122, v123, v124);
    unsigned int v108 = v413;
    uint64_t v84 = (char *)sub_1000CD3E8(4 * (int)v413, v126, v127, v128, v129, v130, v131, v132);
    unint64_t v140 = (char *)sub_1000CD3E8((int)v413, v133, v134, v135, v136, v137, v138, v139);
    uint64_t v425 = (unsigned char *)sub_1000CD3E8((int)v413, v141, v142, v143, v144, v145, v146, v147);
    v438 = v140;
    uint64_t v430 = v117;
    sub_1000B797C(v434, 1, (unint64_t)__src, 0, 0, v413, v117, v125, v84, v140, v425);
  }
  v417 = v125;
  v125[v109] = *(_DWORD *)&v84[4 * (v108 - 1)] + v125[v108 - 1];
  uint64_t v148 = 8 * v109;
  uint64_t v149 = v109;
  unint64_t v150 = sub_1000CD3E8(8 * v109, v101, v102, v103, v104, v105, v106, v107);
  unint64_t v432 = sub_1000CD3E8(v148, v151, v152, v153, v154, v155, v156, v157);
  uint64_t v409 = v149;
  unint64_t v165 = sub_1000CD3E8(v149, v158, v159, v160, v161, v162, v163, v164);
  int v166 = sub_1000847F4(*v434);
  uint64_t v397 = v148;
  if (qword_100101CC0) {
    unsigned int v411 = *(_DWORD *)(qword_100101CC0 + 5496);
  }
  else {
    unsigned int v411 = 0;
  }
  uint64_t v174 = v108;
  int v175 = v108;
  int v394 = v166 + 1;
  if (v166 + 1 <= 51) {
    unsigned int v176 = 51;
  }
  else {
    unsigned int v176 = v166 + 1;
  }
  if (v420 <= 4) {
    int v177 = 4;
  }
  else {
    int v177 = v420;
  }
  int v178 = v176 * v177;
  int v436 = (_WORD *)sub_1000CD3E8(2 * v176 * v177, v167, v168, v169, v170, v171, v172, v173);
  int v418 = v84;
  unint64_t v433 = v150;
  unint64_t v424 = v165;
  uint64_t v427 = v174;
  if (v175 >= 1)
  {
    unsigned int v415 = v178;
    uint64_t v186 = 0;
    int v428 = 0;
    HIDWORD(v440[0]) = 0;
    uint64_t v422 = 8 * v420;
    BOOL v187 = v400 != 0;
    uint64_t v405 = 2 * v176;
    int v401 = 1;
    while (1)
    {
      while (1)
      {
        *(void *)(v150 + 8 * v186) = sub_1000CD3E8(v422, v179, v180, v181, v182, v183, v184, v185);
        *(void *)(v432 + 8 * v186) = sub_1000CD3E8(v422, v192, v193, v194, v195, v196, v197, v198);
        unsigned int v199 = v430[v186];
        if (v199 == -1) {
          break;
        }
        if (!v425[v186])
        {
          unsigned int v220 = v199 >> 30;
          if (v199 >> 30 == 1)
          {
            unint64_t v221 = v432;
            uint64_t v222 = v405;
            if ((_WORD)v199 == 0xFFFF
              || sub_10001ED14(v52[1], (unsigned __int16)v430[v186], 0) == 0xFFFF)
            {
              goto LABEL_97;
            }
            int v223 = 1;
          }
          else
          {
            unint64_t v221 = v432;
            uint64_t v222 = v405;
            if (v220 == 2)
            {
              int v223 = sub_10001FD90(v52[1], (unsigned __int16)v430[v186]);
            }
            else
            {
              if (v220 == 3)
              {
                int v223 = sub_10008480C(*v52);
                goto LABEL_99;
              }
LABEL_97:
              int v223 = 0;
            }
          }
LABEL_99:
          if (v223 >= v420) {
            int v224 = v420;
          }
          else {
            int v224 = v223;
          }
          if (v224 >= 255) {
            int v225 = 255;
          }
          else {
            int v225 = v224;
          }
          *(unsigned char *)(v165 + v186) = v225;
          if (v224 >= 1)
          {
            uint64_t v226 = 0;
            if (v225 <= 1) {
              unsigned int v227 = 1;
            }
            else {
              unsigned int v227 = v225;
            }
            uint64_t v228 = 8 * v227;
            uint64_t v229 = v436;
            do
            {
              *(void *)(*(void *)(v150 + 8 * v186) + v226) = v229;
              *(void *)(v221 + 8 * v186) = 0;
              v226 += 8;
              uint64_t v229 = (_WORD *)((char *)v229 + v222);
            }
            while (v228 != v226);
          }
          unsigned int v230 = v430[v186];
          uint64_t v231 = *v52;
          if (v230 >> 30 == 1)
          {
            unsigned int v232 = sub_10001ED14(v434[1], (unsigned __int16)v430[v186], 0);
            uint64_t v233 = v434[1];
            unint64_t v150 = v433;
          }
          else
          {
            if (v230 >> 30 != 2) {
              goto LABEL_117;
            }
            uint64_t v233 = v434[1];
            unsigned int v232 = (unsigned __int16)v430[v186];
          }
          sub_10001EBC4(v233, v232);
LABEL_117:
          sub_100084814(v231);
          if (v224 < 1)
          {
            int v188 = 0;
            uint64_t v52 = v434;
            uint64_t v84 = v418;
          }
          else
          {
            unint64_t v234 = v150;
            uint64_t v235 = 0;
            int v188 = 0;
            if (v225 <= 1) {
              unsigned int v236 = 1;
            }
            else {
              unsigned int v236 = v225;
            }
            uint64_t v237 = 8 * v236;
            do
            {
              int v238 = *(const void **)(*(void *)(v234 + 8 * v186) + v235);
              int v239 = sub_10009BF2C((unint64_t)v238);
              int v247 = v239 + 1;
              if (v239 >= v188) {
                int v188 = v239 + 1;
              }
              unint64_t v248 = (void *)sub_1000CD3E8(2 * v247, v240, v241, v242, v243, v244, v245, v246);
              j__memmove(v248, v238, 2 * v247);
              *(void *)(*(void *)(v234 + 8 * v186) + v235) = v248;
              v235 += 8;
            }
            while (v237 != v235);
            uint64_t v52 = v434;
            uint64_t v84 = v418;
            unint64_t v150 = v234;
            unint64_t v165 = v424;
          }
          uint64_t v189 = v427;
          BOOL v187 = v400 != 0;
          goto LABEL_53;
        }
        uint64_t v189 = v427;
        if (++v186 == v427) {
          goto LABEL_127;
        }
      }
      if (!v52[3]) {
        goto LABEL_259;
      }
      memcpy(__dst, &__src[v417[v186]], 2 * *(int *)&v84[4 * v186]);
      *((_WORD *)__dst + *(int *)&v84[4 * v186]) = 0;
      uint64_t v200 = v436;
      unsigned int v201 = v415;
      int v202 = sub_100096158(v52[3], (unint64_t)__dst, v187, v436, v415, *(void *)(v432 + 8 * v186), v411, (uint64_t)v440 + 4);
      uint64_t v203 = HIDWORD(v440[0]);
      if (SHIDWORD(v440[0]) >= 1)
      {
        uint64_t v200 = (_WORD *)sub_1000CD3E8(2 * HIDWORD(v440[0]), v179, v180, v181, v182, v183, v184, v185);
        int v202 = sub_100096158(v52[3], (unint64_t)__dst, v187, v200, v203, *(void *)(v432 + 8 * v186), v411, (uint64_t)v440 + 4);
        unsigned int v201 = v203;
      }
      int v436 = v200;
      int v204 = v202 >= 255 ? 255 : v202;
      *(unsigned char *)(v165 + v186) = v204;
      unsigned int v415 = v201;
      if (v202 < 1) {
        break;
      }
      int v205 = 0;
      int v188 = 0;
      int v206 = 0;
      do
      {
        while (1)
        {
          int v207 = sub_10009BF2C((unint64_t)v436);
          uint64_t v215 = (void *)sub_1000CD3E8(2 * (v207 + 1), v208, v209, v210, v211, v212, v213, v214);
          j__memmove(v215, v436, 2 * (v207 + 1));
          BOOL v216 = v207 < v188;
          if (v207 > 254) {
            BOOL v216 = 1;
          }
          if (!v216) {
            int v188 = v207 + 1;
          }
          int v217 = sub_10008481C(*v434);
          BOOL v48 = v207 <= 254;
          BOOL v218 = v207 > 254;
          if (!v48 || !v217) {
            break;
          }
          *(void *)(*(void *)(v433 + 8 * v186) + 8 * v206) = v215;
          v205 |= v218;
          if (++v206 >= v204) {
            goto LABEL_87;
          }
        }
        --v204;
        --*(unsigned char *)(v165 + v186);
        if (v204 > v206)
        {
          uint64_t v219 = *(void *)(v432 + 8 * v186) + 8 * v206;
          j__memmove((void *)v219, (const void *)(v219 + 8), 8 * (v204 - v206));
        }
        v205 |= v218;
      }
      while (v206 < v204);
LABEL_87:
      uint64_t v189 = v427;
      BOOL v187 = v400 != 0;
      if (!v204)
      {
        uint64_t v52 = v434;
        uint64_t v84 = v418;
        if (v205)
        {
LABEL_259:
          sub_1000CD534(v403);
          *int v408 = 0;
          return 1;
        }
LABEL_92:
        int v401 = 0;
        *(void *)(v432 + 8 * v186) = 0;
LABEL_93:
        unint64_t v150 = v433;
        uint64_t v189 = v427;
        goto LABEL_53;
      }
      unint64_t v150 = v433;
      uint64_t v52 = v434;
      uint64_t v84 = v418;
LABEL_53:
      int v190 = v188 + v428;
      if ((v438[v186] & 8) != 0 && v435 != 0xFFFF) {
        ++v190;
      }
      int v428 = v190;
      if (++v186 == v189) {
        goto LABEL_127;
      }
    }
    int v188 = 0;
    BOOL v187 = v400 != 0;
    uint64_t v84 = v418;
    if (!v204) {
      goto LABEL_92;
    }
    goto LABEL_93;
  }
  uint64_t v189 = v174;
  int v428 = 0;
  int v401 = 1;
LABEL_127:
  uint64_t v249 = v408;
  int v250 = v413;
  if (*__src != 32 && !*v417)
  {
    uint64_t v365 = 0;
    int v366 = 0;
    int v367 = (int)v413 <= 1 ? 1 : v413;
    uint64_t v368 = (v367 - 1);
    while (v367 - 1 != v365)
    {
      if (__src[v366] != 32)
      {
        uint64_t v369 = *(int *)&v84[v365 * 4];
        if (v369)
        {
          uint64_t v370 = v369 + v366;
          int v366 = v370 + 1;
          if (v370 + 1 == v417[v365 + 1] && __src[v370 - 1] != 32)
          {
            ++v365;
            if (__src[v370] == 32) {
              continue;
            }
          }
        }
      }
      goto LABEL_129;
    }
    uint64_t v377 = v417[v368];
    if (__src[v377] != 32)
    {
      uint64_t v378 = *(int *)&v84[4 * v368];
      if (v378)
      {
        uint64_t v379 = v378 + v377;
        if (v379 == v417[v367] && !__src[v379] && (int)v413 <= (int)v404 && __src[v379 - 1] != 32 && v401 != 0)
        {
          v440[0] = 0;
          if ((int)v413 < 1)
          {
LABEL_308:
            uint64_t v39 = 0;
LABEL_315:
            *int v408 = v413;
            sub_1000CD534(v403);
            return v39;
          }
          uint64_t v381 = 0;
          uint64_t v382 = v417;
          uint64_t v383 = v418;
          while (1)
          {
            unsigned int v384 = v430[v381];
            if (v384 != -1 && v425[v381])
            {
              v407[v381] = v384;
            }
            else
            {
              uint64_t v385 = *(int *)&v383[4 * v381];
              if (v381)
              {
                uint64_t v386 = 0;
                uint64_t v387 = v382[v381];
                size_t v388 = 2 * v385;
                while (1)
                {
                  if (v385 == *(_DWORD *)&v418[4 * v386])
                  {
                    int v389 = memcmp(&__src[v387], &__src[v382[v386]], 2 * v385);
                    uint64_t v382 = v417;
                    if (!v389) {
                      break;
                    }
                  }
                  if (v381 == ++v386) {
                    goto LABEL_304;
                  }
                }
                if (v386 != 0xFFFFFFFFLL)
                {
                  v407[v381] = v407[v386];
                  uint64_t v382 = v417;
                  uint64_t v383 = v418;
                  goto LABEL_293;
                }
              }
              else
              {
                uint64_t v387 = *v382;
                size_t v388 = 2 * v385;
              }
LABEL_304:
              memcpy(__dst, &__src[v387], v388);
              BOOL v390 = 0;
              uint64_t v383 = v418;
              *((_WORD *)__dst + *(int *)&v418[4 * v381]) = 0;
              uint64_t v391 = *(unsigned __int8 *)(v424 + v381);
              if (v391 == 1) {
                BOOL v390 = v425[v381] != 0;
              }
              uint64_t v392 = sub_100084824(*v434, (uint64_t)__dst, 0, v391, *(void *)(v433 + 8 * v381), v400, v390, v440);
              if (v392)
              {
                uint64_t v39 = v392;
                if (v381)
                {
                  uint64_t v393 = 0;
                  do
                  {
                    if (v399[v393])
                    {
                      LODWORD(v440[0]) = v407[v393] & 0xFFFFFF;
                      sub_100084864(*v434);
                    }
                    ++v393;
                  }
                  while (v381 != v393);
                }
                LODWORD(v413) = 0;
                goto LABEL_315;
              }
              v407[v381] = LODWORD(v440[0]) | 0xC0000000;
              v399[v381] = 1;
              uint64_t v382 = v417;
            }
LABEL_293:
            if (++v381 == v427) {
              goto LABEL_308;
            }
          }
        }
      }
    }
  }
LABEL_129:
  if ((int)v413 <= 0)
  {
    uint64_t v284 = v189;
    unint64_t v292 = sub_1000CD3E8(v397, v179, v180, v181, v182, v183, v184, v185);
    uint64_t v296 = v409;
    unsigned int v295 = v410;
    if ((int)v410 >= 1) {
      goto LABEL_186;
    }
    goto LABEL_190;
  }
  uint64_t v251 = 0;
  do
  {
    unsigned int v255 = v430[v251];
    if (v255 == -1 || !v425[v251]) {
      goto LABEL_138;
    }
    unsigned int v256 = v255 >> 30;
    if (v255 >> 30 == 1)
    {
      unint64_t v257 = v432;
      uint64_t v258 = v436;
      if ((_WORD)v255 != 0xFFFF && sub_10001ED14(v52[1], (unsigned __int16)v430[v251], 0) != 0xFFFF)
      {
        int v259 = 1;
        goto LABEL_150;
      }
      goto LABEL_148;
    }
    unint64_t v257 = v432;
    uint64_t v258 = v436;
    if (v256 != 2)
    {
      if (v256 == 3)
      {
        int v259 = sub_10008480C(*v52);
        goto LABEL_150;
      }
LABEL_148:
      int v259 = 0;
      goto LABEL_150;
    }
    int v259 = sub_10001FD90(v52[1], (unsigned __int16)v430[v251]);
LABEL_150:
    if (v259 >= v420) {
      int v260 = v420;
    }
    else {
      int v260 = v259;
    }
    if (v260 >= 255) {
      int v261 = 255;
    }
    else {
      int v261 = v260;
    }
    *(unsigned char *)(v424 + v251) = v261;
    if (v260 >= 1)
    {
      uint64_t v262 = 0;
      if (v261 <= 1) {
        unsigned int v263 = 1;
      }
      else {
        unsigned int v263 = v261;
      }
      uint64_t v264 = 8 * v263;
      uint64_t v265 = v258;
      do
      {
        *(void *)(*(void *)(v433 + 8 * v251) + v262) = v265;
        *(void *)(v257 + 8 * v251) = 0;
        v262 += 8;
        v265 += v394;
      }
      while (v264 != v262);
    }
    unsigned int v266 = v430[v251];
    uint64_t v267 = *v52;
    if (v266 >> 30 == 1)
    {
      unsigned int v268 = sub_10001ED14(v52[1], (unsigned __int16)v430[v251], 0);
      uint64_t v269 = v52[1];
    }
    else
    {
      if (v266 >> 30 != 2) {
        goto LABEL_168;
      }
      uint64_t v269 = v52[1];
      unsigned int v268 = (unsigned __int16)v430[v251];
    }
    sub_10001EBC4(v269, v268);
LABEL_168:
    sub_100084814(v267);
    if (v260 < 1)
    {
      int v252 = 0;
    }
    else
    {
      uint64_t v270 = 0;
      int v252 = 0;
      if (v261 <= 1) {
        unsigned int v271 = 1;
      }
      else {
        unsigned int v271 = v261;
      }
      uint64_t v272 = 8 * v271;
      do
      {
        uint64_t v273 = *(const void **)(*(void *)(v433 + 8 * v251) + v270);
        int v274 = sub_10009BF2C((unint64_t)v273);
        int v282 = v274 + 1;
        if (v274 >= v252) {
          int v252 = v274 + 1;
        }
        int v283 = (void *)sub_1000CD3E8(2 * v282, v275, v276, v277, v278, v279, v280, v281);
        j__memmove(v283, v273, 2 * v282);
        *(void *)(*(void *)(v433 + 8 * v251) + v270) = v283;
        v270 += 8;
      }
      while (v272 != v270);
    }
    int v253 = v252 + v428;
    if ((v438[v251] & 8) != 0 && v435 != 0xFFFF) {
      ++v253;
    }
    int v428 = v253;
    uint64_t v52 = v434;
    uint64_t v84 = v418;
    unint64_t v165 = v424;
    uint64_t v189 = v427;
LABEL_138:
    ++v251;
  }
  while (v251 != v189);
  uint64_t v284 = v189;
  unint64_t v292 = sub_1000CD3E8(v397, v179, v180, v181, v182, v183, v184, v185);
  uint64_t v293 = 0;
  do
  {
    if (*(unsigned char *)(v165 + v293))
    {
      *(void *)(v292 + 8 * v293) = sub_1000CD3E8(*(unsigned __int8 *)(v165 + v293), v285, v286, v287, v288, v289, v290, v291);
      if (*(unsigned char *)(v165 + v293))
      {
        unint64_t v294 = 0;
        do
          *(unsigned char *)(*(void *)(v292 + 8 * v293) + v294++) = sub_100084894(*v52);
        while (v294 < *(unsigned __int8 *)(v165 + v293));
      }
    }
    else
    {
      *(void *)(v292 + 8 * v293) = 0;
    }
    ++v293;
  }
  while (v293 != v284);
  uint64_t v249 = v408;
  int v250 = v413;
  uint64_t v296 = v409;
  unsigned int v295 = v410;
  if ((int)v410 >= 1)
  {
LABEL_186:
    unsigned int v297 = v295;
    unint64_t v298 = sub_1000CD3E8(8 * v295, v285, v286, v287, v288, v289, v290, v291);
    uint64_t v299 = 0;
    uint64_t v300 = 8 * v297;
    do
    {
      *(void *)(v298 + v299) = sub_1000CD3E8(2 * (v428 + 1), v285, v286, v287, v288, v289, v290, v291);
      v299 += 8;
    }
    while (v300 != v299);
    uint64_t v426 = v298;
    int v250 = v413;
    uint64_t v249 = v408;
    goto LABEL_191;
  }
LABEL_190:
  uint64_t v426 = 0;
LABEL_191:
  unint64_t v402 = sub_1000CD3E8(4 * v296, v285, v286, v287, v288, v289, v290, v291);
  uint64_t v301 = 0;
  uint64_t v302 = v417;
  while (!*(unsigned char *)(v165 + v301))
  {
    if (v284 == ++v301)
    {
      *uint64_t v249 = 0;
LABEL_195:
      sub_1000CD534(v403);
      return 1;
    }
  }
  if (v250 != 1 || *v430 != -1 || *v417)
  {
    BOOL v406 = 0;
    if (v250 > (int)v301) {
      goto LABEL_200;
    }
LABEL_277:
    int v371 = 0;
LABEL_278:
    sub_1000CD534(v403);
    uint64_t v39 = 0;
    *uint64_t v249 = v371;
    return v39;
  }
  BOOL v406 = v417[1] == v396 - 1;
  if ((int)v301 >= 1) {
    goto LABEL_277;
  }
LABEL_200:
  unint64_t v398 = v292;
  uint64_t v303 = 0;
  int v395 = 0;
  int v304 = 0;
  uint64_t v305 = __src;
  uint64_t v306 = (v404 - 1);
  uint64_t v307 = __src - 1;
  while (2)
  {
    int v308 = v304;
    int v304 = v301;
    uint64_t v416 = v303;
    while (1)
    {
      int v309 = v250 <= v304 + 1 ? v304 + 1 : v250;
      uint64_t v310 = v304 + 1;
      while (v310 < v296)
      {
        int v311 = *(unsigned __int8 *)(v165 + v310);
        ++v304;
        ++v310;
        if (v311) {
          goto LABEL_211;
        }
      }
      int v304 = v309;
LABEL_211:
      if (v303 == v306) {
        int v304 = v250;
      }
      if (v304 >= (int)v284) {
        break;
      }
      uint64_t v312 = v304;
      uint64_t v313 = v302[v312];
      uint64_t v314 = *(int *)&v84[v312 * 4 - 4] + (uint64_t)v302[v312 - 1];
      while (v313 > v314)
      {
        int v315 = v313 - 1;
        int v316 = (unsigned __int16)v307[v313--];
        if (v316 == 32)
        {
          int v317 = v315 - ((unint64_t)(v305 - (unsigned char *)__src) >> 1);
          goto LABEL_219;
        }
      }
      unint64_t v165 = v424;
      LODWORD(v284) = v427;
    }
    int v317 = sub_1000CED6C((unint64_t)__src) - ((unint64_t)(v305 - (unsigned char *)__src) >> 1);
    int v315 = sub_1000CED6C((unint64_t)__src);
LABEL_219:
    memcpy(__dst, v305, 2 * v317);
    *((_WORD *)__dst + v317) = 0;
    if (sub_1000847D4(*v52))
    {
      int v250 = v413;
      goto LABEL_255;
    }
    if ((int)v410 <= 0) {
      goto LABEL_259;
    }
    size_t v325 = v304 - v308;
    uint64_t v326 = (void *)sub_1000CD3E8(v325, v318, v319, v320, v321, v322, v323, v324);
    bzero(v326, v325);
    unint64_t v341 = sub_1000CD3E8(16 * v410, v327, v328, v329, v330, v331, v332, v333);
    uint64_t v342 = 0;
    do
    {
      *(void *)(v341 + v342 + 8) = sub_1000CD3E8(v325, v334, v335, v336, v337, v338, v339, v340);
      v342 += 16;
    }
    while (16 * v410 != v342);
    int v343 = (unsigned __int8 *)(v424 + v308);
    unint64_t v423 = v341;
    uint64_t v344 = sub_1000BE584(v325, v341, v343, v432 + 8 * v308, (void *)(v398 + 8 * v308), v410);
    if ((int)v344 >= 1)
    {
      uint64_t v345 = v344;
      uint64_t v346 = v344;
      if ((int)v325 <= 0)
      {
        unint64_t v360 = (_WORD **)v426;
        do
        {
          uint64_t v361 = *v360++;
          *uint64_t v361 = -1;
          --v346;
        }
        while (v346);
LABEL_247:
        uint64_t v52 = v434;
        if (!v345) {
          break;
        }
        uint64_t v362 = (int)v345 <= 1 && v406;
        HIDWORD(v439) = sub_10008466C(*v434);
        BOOL v406 = v362;
        if (HIDWORD(v439) == 0xFFFFFF)
        {
          uint64_t v363 = sub_100084824(*v434, (uint64_t)__dst, 0, v345, v426, v400, v362, (_DWORD *)&v439 + 1);
          uint64_t v364 = v416;
          v399[v416] = 1;
          uint64_t v84 = v418;
          uint64_t v296 = v409;
          if (HIDWORD(v439) == 0xFFFFFF)
          {
            uint64_t v39 = v363;
            unsigned int v372 = v395;
            int v373 = v408;
            unint64_t v375 = v402;
            uint64_t v374 = v403;
            if (v395 >= 1) {
              goto LABEL_273;
            }
            goto LABEL_275;
          }
          *(_DWORD *)(v402 + 4 * v395++) = HIDWORD(v439);
          int v250 = v413;
        }
        else
        {
          int v250 = v413;
          uint64_t v84 = v418;
LABEL_255:
          uint64_t v296 = v409;
          uint64_t v364 = v416;
        }
        uint64_t v307 = __src - 1;
        uint64_t v302 = v417;
        uint64_t v306 = (v404 - 1);
        if (v364 < v412) {
          v407[v364] = HIDWORD(v439) | 0xC0000000;
        }
        uint64_t v303 = v364 + 1;
        uint64_t v305 = &__src[v315 + 1];
        LODWORD(v301) = v304;
        LODWORD(v284) = v427;
        unint64_t v165 = v424;
        if (v304 >= (int)v427)
        {
          uint64_t v249 = v408;
          int v371 = v303;
          goto LABEL_278;
        }
        continue;
      }
      uint64_t v421 = v344;
      uint64_t v347 = 0;
      uint64_t v345 = 0;
      uint64_t v348 = v325;
      unint64_t v349 = v433 + 8 * v308;
      uint64_t v350 = v426;
      while (1)
      {
        uint64_t v429 = v347;
        uint64_t v431 = v345;
        int v351 = *(_WORD **)(v350 + 8 * (int)v345);
        unint64_t v352 = (void *)(v423 + 16 * v347 + 8);
        if (v435 != 0xFFFF) {
          break;
        }
        for (uint64_t i = 0; i != v348; ++i)
        {
          if (v343[i])
          {
            int v358 = *(const void **)(*(void *)(v349 + 8 * i) + 8 * *(unsigned __int8 *)(*v352 + i));
            int v359 = sub_10009BF2C((unint64_t)v358);
            memcpy(v351, v358, 2 * v359);
            v351 += v359;
          }
        }
LABEL_242:
        uint64_t v345 = v431;
        uint64_t v350 = v426;
        if ((int)(((unint64_t)v351 - *(void *)(v426 + 8 * (int)v431)) >> 1) <= 255)
        {
          uint64_t v345 = (v431 + 1);
          *int v351 = -1;
          uint64_t v347 = v429 + 1;
          if (v429 + 1 == v421) {
            goto LABEL_247;
          }
        }
        else
        {
          uint64_t v347 = v429 + 1;
          if (v429 + 1 == v421) {
            goto LABEL_247;
          }
        }
      }
      uint64_t v353 = 0;
      int v354 = 0;
      while (2)
      {
        if ((v438[v353] & 8) != 0)
        {
          if (!v354)
          {
            *v351++ = v435;
            int v354 = 1;
            goto LABEL_234;
          }
          int v354 = 0;
          --v351;
          if (v343[v353])
          {
LABEL_237:
            unint64_t v355 = *(const void **)(*(void *)(v349 + 8 * v353) + 8 * *(unsigned __int8 *)(*v352 + v353));
            int v356 = sub_10009BF2C((unint64_t)v355);
            memcpy(v351, v355, 2 * v356);
            int v354 = 0;
            v351 += v356;
          }
        }
        else
        {
LABEL_234:
          if (v343[v353]) {
            goto LABEL_237;
          }
        }
        if (v348 == ++v353) {
          goto LABEL_242;
        }
        continue;
      }
    }
    break;
  }
  HIDWORD(v439) = 0xFFFFFF;
  uint64_t v39 = 1;
  unsigned int v372 = v395;
  int v373 = v408;
  unint64_t v375 = v402;
  uint64_t v374 = v403;
  if (v395 >= 1)
  {
LABEL_273:
    uint64_t v376 = v372;
    do
    {
      v375 += 4;
      sub_100084864(*v52);
      --v376;
    }
    while (v376);
  }
LABEL_275:
  sub_1000CD534(v374);
  *int v373 = 0;
  return v39;
}

uint64_t sub_1000BD76C(uint64_t *a1, unsigned int a2, _DWORD *a3)
{
  if (a2 >= 0xFFFFFFFB)
  {
    if (a2 + 5 >= 4) {
      unsigned __int16 v6 = -1;
    }
    else {
      unsigned __int16 v6 = a2;
    }
    int v7 = a2 & 0xFFFFFF;
    uint64_t result = 0;
    *a3 = 0;
    if (a2 == -1) {
      return result;
    }
    goto LABEL_20;
  }
  unsigned int v9 = a2 >> 30;
  if (a2 >> 30 != 1)
  {
    if (v9 == 2)
    {
      int v7 = sub_10001EBC4(a1[1], (unsigned __int16)a2);
      unsigned __int16 v6 = a2;
      uint64_t result = 0;
      *a3 = 0;
      if (a2 == -1) {
        return result;
      }
    }
    else
    {
      if (v9 != 3)
      {
        uint64_t result = 0;
        *a3 = 0;
        return result;
      }
      if ((a2 & 0xFFFFFF) == 0xFFFFFF)
      {
        unsigned __int16 v6 = -1;
        int v7 = a2 & 0xFFFFFF;
        uint64_t result = 0;
        *a3 = 0;
      }
      else
      {
        unsigned __int16 v6 = sub_10001EDE8(a1[1], a2 & 0xFFFFFF);
        int v7 = a2 & 0xFFFFFF;
        uint64_t result = 0;
        *a3 = 0;
        if (a2 == -1) {
          return result;
        }
      }
    }
    goto LABEL_20;
  }
  unsigned __int16 v6 = -1;
  if ((_WORD)a2 != 0xFFFF) {
    unsigned __int16 v6 = sub_10001ED14(a1[1], (unsigned __int16)a2, 0);
  }
  unsigned int v10 = sub_10001ED14(a1[1], (unsigned __int16)a2, 0);
  int v7 = sub_10001EBC4(a1[1], v10);
  uint64_t result = 0;
  *a3 = 0;
  if (a2 != -1)
  {
LABEL_20:
    if (v7 != 0xFFFFFF)
    {
      if (v6 == 0xFFFF
        || (uint64_t result = sub_10001F6B8(a1[1], v6), result)
        && (uint64_t result = sub_100076900(a1[2], v6), result)
        && (uint64_t result = sub_10001F6DC(a1[1], v6, 1), result))
      {
        uint64_t result = sub_100084874(*a1);
        if (result)
        {
          sub_100084864(*a1);
          return 1;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000BD95C(uint64_t *a1)
{
  return sub_10008486C(*a1);
}

uint64_t sub_1000BD964(uint64_t a1, unsigned int a2, unsigned int *a3)
{
  return sub_10001ED14(*(void *)(a1 + 8), a2, a3);
}

uint64_t sub_1000BD96C(uint64_t a1, int a2)
{
  if (a2 == 0xFFFF) {
    return 0xFFFFFFFFLL;
  }
  else {
    return a2 | 0x40000000u;
  }
}

uint64_t sub_1000BD980(uint64_t a1, unsigned int a2)
{
  unsigned int v2 = (unsigned __int16)(a2 + 5);
  if (v2 >= 4) {
    unsigned int v3 = -1;
  }
  else {
    unsigned int v3 = v2 - 5;
  }
  if (a2 >= 0xFFFB) {
    return v3;
  }
  else {
    return a2 | 0x80000000;
  }
}

uint64_t sub_1000BD9AC(uint64_t a1, unsigned int a2)
{
  unsigned int v2 = a2 >> 30;
  if (a2 >> 30 == 1) {
    return (unsigned __int16)a2;
  }
  if (v2 == 2)
  {
    if ((_WORD)a2 != 0xFFFF)
    {
      uint64_t v5 = *(void *)(a1 + 8);
      a2 = (unsigned __int16)a2;
      return sub_100020020(v5, a2, 0);
    }
    return 0xFFFFLL;
  }
  if (v2 != 3) {
    return 0xFFFFLL;
  }
  if ((a2 & 0xFFFFFF) == 0xFFFFFF) {
    return 0xFFFFLL;
  }
  if (a2 < 0xFFFFFFFB)
  {
    int v6 = sub_10001EDE8(*(void *)(a1 + 8), a2 & 0xFFFFFF);
    if (v6 != 0xFFFF)
    {
LABEL_17:
      a2 = (unsigned __int16)v6;
      uint64_t v5 = *(void *)(a1 + 8);
      return sub_100020020(v5, a2, 0);
    }
    return 0xFFFFLL;
  }
  if (a2 + 5 < 4)
  {
    LOWORD(v6) = a2;
    goto LABEL_17;
  }
  return 0xFFFFLL;
}

BOOL sub_1000BDACC(uint64_t a1, unsigned int a2, unsigned int a3)
{
  unsigned int v5 = a2 >> 30;
  unsigned int v6 = a3 >> 30;
  if (a2 >> 30 == 3 || v6 == 3)
  {
    if (v5 == 1)
    {
      unsigned int v12 = sub_10001ED14(*(void *)(a1 + 8), (unsigned __int16)a2, 0);
      int v8 = sub_10001EBC4(*(void *)(a1 + 8), v12);
      if (v6 == 1) {
        goto LABEL_27;
      }
    }
    else
    {
      if (v5 != 2)
      {
        if (v5 == 3) {
          int v8 = a2 & 0xFFFFFF;
        }
        else {
          int v8 = 0xFFFFFF;
        }
        if (v6 != 1) {
          goto LABEL_12;
        }
LABEL_27:
        unsigned int v13 = sub_10001ED14(*(void *)(a1 + 8), (unsigned __int16)a3, 0);
        uint64_t v14 = *(void *)(a1 + 8);
        return v8 == sub_10001EBC4(v14, v13);
      }
      int v8 = sub_10001EBC4(*(void *)(a1 + 8), (unsigned __int16)a2);
      if (v6 == 1) {
        goto LABEL_27;
      }
    }
LABEL_12:
    if (v6 != 2)
    {
      if (v6 == 3) {
        int v9 = a3 & 0xFFFFFF;
      }
      else {
        int v9 = 0xFFFFFF;
      }
      return v8 == v9;
    }
    uint64_t v14 = *(void *)(a1 + 8);
    unsigned int v13 = (unsigned __int16)a3;
    return v8 == sub_10001EBC4(v14, v13);
  }
  if (v5 != 2 && v6 != 2) {
    return (unsigned __int16)a3 == (unsigned __int16)a2;
  }
  if (a2 < 0xFFFFFFFB)
  {
    __int16 v11 = -1;
    if (v5 == 1)
    {
      if ((_WORD)a2 != 0xFFFF) {
        __int16 v11 = sub_10001ED14(*(void *)(a1 + 8), (unsigned __int16)a2, 0);
      }
    }
    else if (v5 == 2)
    {
      __int16 v11 = a2;
    }
    else
    {
      __int16 v11 = -1;
    }
  }
  else if (a2 + 5 >= 4)
  {
    __int16 v11 = -1;
  }
  else
  {
    __int16 v11 = a2;
  }
  if (a3 < 0xFFFFFFFB)
  {
    __int16 v15 = -1;
    if (v6 == 1)
    {
      if ((_WORD)a3 != 0xFFFF) {
        __int16 v15 = sub_10001ED14(*(void *)(a1 + 8), (unsigned __int16)a3, 0);
      }
    }
    else if (v6 == 2)
    {
      __int16 v15 = a3;
    }
    else
    {
      __int16 v15 = -1;
    }
  }
  else if (a3 + 5 >= 4)
  {
    __int16 v15 = -1;
  }
  else
  {
    __int16 v15 = a3;
  }
  return v11 == v15;
}

uint64_t sub_1000BDCC4(uint64_t a1)
{
  return sub_1000201F4(*(void *)(a1 + 8));
}

uint64_t sub_1000BDCCC(uint64_t a1, uint64_t a2, int a3)
{
  return sub_1000201FC(*(void *)(a1 + 8), a2, a3);
}

uint64_t sub_1000BDCD4(uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4)
{
  int v4 = sub_100076120(*(void *)(a1 + 16), a2, a3, a4);
  if (!qword_100101CC0) {
    return (__int16)(v4 & (v4 >> 31));
  }
  uint64_t v5 = *(void *)(qword_100101CC0 + 5456);
  if (v5 >= v4) {
    LOWORD(v5) = v4;
  }
  return (__int16)v5;
}

uint64_t sub_1000BDD20(uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4)
{
  int v4 = sub_100076364(*(void *)(a1 + 16), a2, a3, a4);
  if (!qword_100101CC0) {
    return (__int16)(v4 & (v4 >> 31));
  }
  uint64_t v5 = *(void *)(qword_100101CC0 + 5456);
  if (v5 >= v4) {
    LOWORD(v5) = v4;
  }
  return (__int16)v5;
}

uint64_t sub_1000BDD6C(uint64_t a1, signed int a2, uint64_t a3, uint64_t a4, unsigned __int16 *a5, int a6, __int16 *a7)
{
  int v7 = a7;
  int v8 = a4;
  uint64_t result = sub_10007636C(*(void *)(a1 + 16), a2, a3, a4, a5, a6, a7);
  uint64_t v10 = qword_100101CC0;
  if (qword_100101CC0)
  {
    if (*(uint64_t *)(qword_100101CC0 + 5456) <= 32766 && v8 > 0) {
      goto LABEL_9;
    }
  }
  else if (v8 >= 1)
  {
LABEL_9:
    for (uint64_t i = v8; i; --i)
    {
      uint64_t v14 = *v7;
      if (v10)
      {
        uint64_t v13 = *(void *)(v10 + 5456);
        if (v13 >= v14) {
          goto LABEL_12;
        }
      }
      else
      {
        LOWORD(v13) = 0;
        if ((int)v14 <= 0)
        {
          uint64_t v10 = 0;
          goto LABEL_12;
        }
      }
      *int v7 = v13;
      uint64_t v10 = qword_100101CC0;
LABEL_12:
      ++v7;
    }
  }
  return result;
}