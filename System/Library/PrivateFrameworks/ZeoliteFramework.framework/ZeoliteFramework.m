Swift::OpaquePointer_optional __swiftcall calculatePercentiles(_:percentiles:)(Swift::OpaquePointer _, Swift::OpaquePointer percentiles)
{
  unint64_t v4;
  float v5;
  unint64_t v6;
  Swift::Bool v7;
  char *v8;
  float v9;
  void *v11;
  uint64_t v12;
  float v13;
  char *v14;
  uint64_t v15;
  float v16;
  float v17;
  float v18;
  uint64_t v19;
  unint64_t v20;
  float v21;
  unint64_t v22;
  float v23;
  float v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  char *rawValue;
  Swift::OpaquePointer_optional result;

  v4 = sub_262726E4C((uint64_t)percentiles._rawValue);
  if ((v4 & 0x100000000) != 0) {
    v5 = -INFINITY;
  }
  else {
    v5 = *(float *)&v4;
  }
  v6 = sub_262726EA4((uint64_t)percentiles._rawValue);
  v8 = 0;
  v9 = *(float *)&v6;
  if ((v6 & 0x100000000) != 0) {
    v9 = INFINITY;
  }
  if (!*((void *)_._rawValue + 2)) {
    goto LABEL_35;
  }
  if (v5 < 0.0 || v9 > 100.0) {
    goto LABEL_35;
  }
  rawValue = (char *)_._rawValue;
  swift_bridgeObjectRetain();
  sub_262726EFC((uint64_t *)&rawValue);
  v11 = rawValue;
  v12 = *((void *)percentiles._rawValue + 2);
  if (!v12)
  {
    swift_release();
    v8 = (char *)MEMORY[0x263F8EE78];
LABEL_35:
    v27 = v8;
    goto LABEL_47;
  }
  v13 = (float)(*((void *)rawValue + 2) - 1);
  v14 = rawValue + 32;
  swift_bridgeObjectRetain();
  v15 = 0;
  v8 = (char *)MEMORY[0x263F8EE78];
  while (1)
  {
    v16 = (float)(*((float *)percentiles._rawValue + v15 + 8) * v13) / 100.0;
    v17 = floorf(v16);
    if ((~LODWORD(v17) & 0x7F800000) == 0) {
      break;
    }
    if (v17 <= -9.2234e18) {
      goto LABEL_37;
    }
    if (v17 >= 9.2234e18) {
      goto LABEL_38;
    }
    v18 = ceilf(v16);
    if ((~LODWORD(v18) & 0x7F800000) == 0) {
      goto LABEL_39;
    }
    if (v18 <= -9.2234e18) {
      goto LABEL_40;
    }
    if (v18 >= 9.2234e18) {
      goto LABEL_41;
    }
    v19 = (uint64_t)v17;
    v20 = (uint64_t)v18;
    if ((uint64_t)v17 == (uint64_t)v18)
    {
      if (v19 < 0) {
        goto LABEL_43;
      }
      if (v11[2] <= (unint64_t)v19) {
        goto LABEL_45;
      }
      v21 = *(float *)&v14[4 * v19];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v8 = sub_2627274D8(0, *((void *)v8 + 2) + 1, 1, v8);
      }
    }
    else
    {
      if (v19 < 0) {
        goto LABEL_42;
      }
      v22 = v11[2];
      if (v22 <= v19) {
        goto LABEL_44;
      }
      if (v22 <= v20) {
        goto LABEL_46;
      }
      v23 = *(float *)&v14[4 * v19];
      v24 = *(float *)&v14[4 * v20];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v8 = sub_2627274D8(0, *((void *)v8 + 2) + 1, 1, v8);
      }
      v21 = (float)((float)(1.0 - (float)(v16 - (float)v19)) * v23) + (float)((float)(v16 - (float)v19) * v24);
    }
    v26 = *((void *)v8 + 2);
    v25 = *((void *)v8 + 3);
    if (v26 >= v25 >> 1) {
      v8 = sub_2627274D8((char *)(v25 > 1), v26 + 1, 1, v8);
    }
    ++v15;
    *((void *)v8 + 2) = v26 + 1;
    *(float *)&v8[4 * v26 + 32] = v21;
    if (v12 == v15)
    {
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
  v27 = (void *)swift_release();
  __break(1u);
LABEL_47:
  result.value._rawValue = v27;
  result.is_nil = v7;
  return result;
}

unint64_t sub_262726E4C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    float v2 = *(float *)(a1 + 32);
    uint64_t v3 = v1 - 1;
    if (v1 != 1)
    {
      v4 = (float *)(a1 + 36);
      do
      {
        float v5 = *v4++;
        float v6 = v5;
        if (v5 < v2) {
          float v2 = v6;
        }
        --v3;
      }
      while (v3);
    }
    uint64_t v7 = LODWORD(v2);
  }
  else
  {
    uint64_t v7 = 0;
  }
  return v7 | ((unint64_t)(v1 == 0) << 32);
}

unint64_t sub_262726EA4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    float v2 = *(float *)(a1 + 32);
    uint64_t v3 = v1 - 1;
    if (v1 != 1)
    {
      v4 = (float *)(a1 + 36);
      do
      {
        float v5 = *v4++;
        float v6 = v5;
        if (v2 < v5) {
          float v2 = v6;
        }
        --v3;
      }
      while (v3);
    }
    uint64_t v7 = LODWORD(v2);
  }
  else
  {
    uint64_t v7 = 0;
  }
  return v7 | ((unint64_t)(v1 == 0) << 32);
}

uint64_t sub_262726EFC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_26276CD6C(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_262727D2C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_262726F68(uint64_t a1, uint64_t a2)
{
  return sub_26272726C(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_262726F80(uint64_t a1, id *a2)
{
  uint64_t result = sub_26276F670();
  *a2 = 0;
  return result;
}

uint64_t sub_262726FF8(uint64_t a1, id *a2)
{
  char v3 = sub_26276F680();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_262727078@<X0>(uint64_t *a1@<X8>)
{
  sub_26276F690();
  uint64_t v2 = sub_26276F660();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_2627270BC()
{
  uint64_t v0 = sub_26276F690();
  uint64_t v2 = v1;
  if (v0 == sub_26276F690() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_26276FDA0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_262727148@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_26276F660();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_262727190@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_26276F690();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2627271BC(uint64_t a1)
{
  uint64_t v2 = sub_262727454(&qword_26A9572E0);
  uint64_t v3 = sub_262727454(&qword_26A9572E8);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_262727254(uint64_t a1, uint64_t a2)
{
  return sub_26272726C(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_26272726C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_26276F690();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_2627272B0()
{
  sub_26276F690();
  sub_26276F6C0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_262727304()
{
  sub_26276F690();
  sub_26276FE00();
  sub_26276F6C0();
  uint64_t v0 = sub_26276FE20();
  swift_bridgeObjectRelease();
  return v0;
}

void type metadata accessor for NLLanguage(uint64_t a1)
{
}

void type metadata accessor for AssetsResult(uint64_t a1)
{
}

void sub_2627273A4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_2627273EC()
{
  return sub_262727454(&qword_26A9572C8);
}

uint64_t sub_262727420()
{
  return sub_262727454(&qword_26A9572D0);
}

uint64_t sub_262727454(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for NLLanguage(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_262727498()
{
  return sub_262727454(&qword_26A9572D8);
}

void *sub_2627274CC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_2627275F4(a1, a2, a3, a4, &qword_26A957310);
}

char *sub_2627274D8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A957348);
      v10 = (char *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 29;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 2);
      v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x263F8EE78];
      v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32]) {
          memmove(v13, a4 + 32, 4 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_26272871C(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2627275E8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_2627275F4(a1, a2, a3, a4, &qword_26A957350);
}

void *sub_2627275F4(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v11 = (void *)MEMORY[0x263F8EE78];
      v14 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v9 + 4]) {
          memmove(v14, a4 + 4, 8 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_262728630(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

char *sub_262727700(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A957340);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 29;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 2);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32]) {
          memmove(v13, a4 + 32, 4 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_26272871C(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_262727810(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_262727838(a1, a2, a3, a4, &qword_26A957330, &qword_26A957338);
}

void *sub_262727824(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_262727838(a1, a2, a3, a4, &qword_26A957300, &qword_26A957308);
}

void *sub_262727838(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = _swift_stdlib_malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 25;
      }
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      v16 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4]) {
          memmove(v16, a4 + 4, 8 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_262728808(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_262727954(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_26272796C(a1, a2, a3, a4, &qword_26A957318);
}

void *sub_262727960(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_26272796C(a1, a2, a3, a4, &qword_26A957328);
}

void *sub_26272796C(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 17;
      }
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      int64_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v11 = (void *)MEMORY[0x263F8EE78];
      int64_t v14 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4]) {
          memmove(v14, a4 + 4, 16 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_262728910(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_262727A78(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_262727BB0(a1, a2, a3, a4, &qword_26A957320);
}

void *sub_262727A8C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A9572F8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2627289FC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_262727B9C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_262727BB0(a1, a2, a3, a4, &qword_26A9572F0);
}

void *sub_262727BB0(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (void *)swift_allocObject();
      size_t v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 56);
      uint64_t v13 = v11 + 4;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[7 * v9 + 4]) {
          memmove(v13, a4 + 4, 56 * v9);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v11 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_262728AF0(0, v9, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_262727D2C(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_26276FD50();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v80 = 0;
      uint64_t v81 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        float v83 = *(float *)(v81 + 4 * i);
        uint64_t v84 = v80;
        do
        {
          uint64_t v85 = v81 + 4 * v84;
          if (v83 >= *(float *)v85) {
            break;
          }
          if (!v81) {
            goto LABEL_140;
          }
          *(_DWORD *)(v85 + 4) = *(_DWORD *)v85;
          *(float *)(v81 + 4 * v84--) = v83;
        }
        while (v84 != -1);
        ++v80;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  uint64_t v97 = result;
  uint64_t v98 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (float *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      int64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_102:
      uint64_t v96 = v8;
      if (v12 >= 2)
      {
        uint64_t v86 = *v2;
        do
        {
          unint64_t v87 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_131;
          }
          if (!v86) {
            goto LABEL_144;
          }
          v88 = v11;
          v89 = v11 + 32;
          uint64_t v90 = *(void *)&v11[16 * v87 + 32];
          uint64_t v91 = *(void *)&v11[16 * v12 + 24];
          sub_2627283C0((float *)(v86 + 4 * v90), (float *)(v86 + 4 * *(void *)&v89[16 * v12 - 16]), v86 + 4 * v91, __dst);
          if (v1) {
            break;
          }
          if (v91 < v90) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v88 = sub_26276BD14((uint64_t)v88);
          }
          if (v87 >= *((void *)v88 + 2)) {
            goto LABEL_133;
          }
          v92 = &v88[16 * v87 + 32];
          *(void *)v92 = v90;
          *((void *)v92 + 1) = v91;
          unint64_t v93 = *((void *)v88 + 2);
          if (v12 > v93) {
            goto LABEL_134;
          }
          memmove(&v88[16 * v12 + 16], &v88[16 * v12 + 32], 16 * (v93 - v12));
          int64_t v11 = v88;
          *((void *)v88 + 2) = v93 - 1;
          unint64_t v12 = v93 - 1;
        }
        while (v93 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      *(void *)(v96 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v96 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_26276F830();
    *(void *)(v7 + 16) = v6;
    uint64_t v3 = v98;
    uint64_t v96 = v7;
    __dst = (float *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *v2;
  v94 = v2;
  uint64_t v95 = *v2 - 4;
  int64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v99 = *v2;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 < v3)
    {
      float v14 = *(float *)(v10 + 4 * v9);
      float v15 = *(float *)(v10 + 4 * v13);
      uint64_t v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        float v16 = v14;
        while (1)
        {
          float v17 = v16;
          float v16 = *(float *)(v10 + 4 * v9);
          if (v14 < v15 == v16 >= v17) {
            break;
          }
          if (v3 == ++v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13) {
          goto LABEL_137;
        }
        if (v13 < v9)
        {
          v18 = (int *)(v95 + 4 * v9);
          uint64_t v19 = v9;
          uint64_t v20 = v13;
          v21 = (int *)(v10 + 4 * v13);
          do
          {
            if (v20 != --v19)
            {
              if (!v10) {
                goto LABEL_143;
              }
              int v22 = *v21;
              int *v21 = *v18;
              int *v18 = v22;
            }
            ++v20;
            --v18;
            ++v21;
          }
          while (v20 < v19);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_135;
    }
    if (v9 - v13 >= v97) {
      goto LABEL_46;
    }
    uint64_t v23 = v13 + v97;
    if (__OFADD__(v13, v97)) {
      goto LABEL_138;
    }
    if (v23 >= v3) {
      uint64_t v23 = v3;
    }
    if (v23 < v13) {
      break;
    }
    if (v9 != v23)
    {
      v24 = (float *)(v95 + 4 * v9);
      do
      {
        float v25 = *(float *)(v10 + 4 * v9);
        uint64_t v26 = v13;
        v27 = v24;
        do
        {
          float v28 = *v27;
          if (v25 >= *v27) {
            break;
          }
          if (!v10) {
            goto LABEL_141;
          }
          float *v27 = v25;
          v27[1] = v28;
          --v27;
          ++v26;
        }
        while (v9 != v26);
        ++v9;
        ++v24;
      }
      while (v9 != v23);
      uint64_t v9 = v23;
    }
LABEL_46:
    if (v9 < v13) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v11 = sub_26276B9E4(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v30 = *((void *)v11 + 2);
    unint64_t v29 = *((void *)v11 + 3);
    unint64_t v12 = v30 + 1;
    uint64_t v10 = v99;
    if (v30 >= v29 >> 1)
    {
      v79 = sub_26276B9E4((char *)(v29 > 1), v30 + 1, 1, v11);
      uint64_t v10 = v99;
      int64_t v11 = v79;
    }
    *((void *)v11 + 2) = v12;
    v31 = v11 + 32;
    v32 = &v11[16 * v30 + 32];
    *(void *)v32 = v13;
    *((void *)v32 + 1) = v9;
    if (v30)
    {
      while (1)
      {
        unint64_t v33 = v12 - 1;
        if (v12 >= 4)
        {
          v38 = &v31[16 * v12];
          uint64_t v39 = *((void *)v38 - 8);
          uint64_t v40 = *((void *)v38 - 7);
          BOOL v44 = __OFSUB__(v40, v39);
          uint64_t v41 = v40 - v39;
          if (v44) {
            goto LABEL_119;
          }
          uint64_t v43 = *((void *)v38 - 6);
          uint64_t v42 = *((void *)v38 - 5);
          BOOL v44 = __OFSUB__(v42, v43);
          uint64_t v36 = v42 - v43;
          char v37 = v44;
          if (v44) {
            goto LABEL_120;
          }
          unint64_t v45 = v12 - 2;
          v46 = &v31[16 * v12 - 32];
          uint64_t v48 = *(void *)v46;
          uint64_t v47 = *((void *)v46 + 1);
          BOOL v44 = __OFSUB__(v47, v48);
          uint64_t v49 = v47 - v48;
          if (v44) {
            goto LABEL_122;
          }
          BOOL v44 = __OFADD__(v36, v49);
          uint64_t v50 = v36 + v49;
          if (v44) {
            goto LABEL_125;
          }
          if (v50 >= v41)
          {
            v68 = &v31[16 * v33];
            uint64_t v70 = *(void *)v68;
            uint64_t v69 = *((void *)v68 + 1);
            BOOL v44 = __OFSUB__(v69, v70);
            uint64_t v71 = v69 - v70;
            if (v44) {
              goto LABEL_129;
            }
            BOOL v61 = v36 < v71;
            goto LABEL_83;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v62 = *((void *)v11 + 4);
            uint64_t v63 = *((void *)v11 + 5);
            BOOL v44 = __OFSUB__(v63, v62);
            uint64_t v55 = v63 - v62;
            char v56 = v44;
            goto LABEL_77;
          }
          uint64_t v35 = *((void *)v11 + 4);
          uint64_t v34 = *((void *)v11 + 5);
          BOOL v44 = __OFSUB__(v34, v35);
          uint64_t v36 = v34 - v35;
          char v37 = v44;
        }
        if (v37) {
          goto LABEL_121;
        }
        unint64_t v45 = v12 - 2;
        v51 = &v31[16 * v12 - 32];
        uint64_t v53 = *(void *)v51;
        uint64_t v52 = *((void *)v51 + 1);
        BOOL v54 = __OFSUB__(v52, v53);
        uint64_t v55 = v52 - v53;
        char v56 = v54;
        if (v54) {
          goto LABEL_124;
        }
        v57 = &v31[16 * v33];
        uint64_t v59 = *(void *)v57;
        uint64_t v58 = *((void *)v57 + 1);
        BOOL v44 = __OFSUB__(v58, v59);
        uint64_t v60 = v58 - v59;
        if (v44) {
          goto LABEL_127;
        }
        if (__OFADD__(v55, v60)) {
          goto LABEL_128;
        }
        if (v55 + v60 >= v36)
        {
          BOOL v61 = v36 < v60;
LABEL_83:
          if (v61) {
            unint64_t v33 = v45;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v56) {
          goto LABEL_123;
        }
        v64 = &v31[16 * v33];
        uint64_t v66 = *(void *)v64;
        uint64_t v65 = *((void *)v64 + 1);
        BOOL v44 = __OFSUB__(v65, v66);
        uint64_t v67 = v65 - v66;
        if (v44) {
          goto LABEL_126;
        }
        if (v67 < v55) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v72 = v33 - 1;
        if (v33 - 1 >= v12)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v10) {
          goto LABEL_142;
        }
        v73 = &v31[16 * v72];
        uint64_t v74 = *(void *)v73;
        v75 = v31;
        v76 = &v31[16 * v33];
        uint64_t v77 = *((void *)v76 + 1);
        sub_2627283C0((float *)(v10 + 4 * *(void *)v73), (float *)(v10 + 4 * *(void *)v76), v10 + 4 * v77, __dst);
        if (v1) {
          goto LABEL_113;
        }
        if (v77 < v74) {
          goto LABEL_116;
        }
        if (v33 > *((void *)v11 + 2)) {
          goto LABEL_117;
        }
        *(void *)v73 = v74;
        *(void *)&v75[16 * v72 + 8] = v77;
        unint64_t v78 = *((void *)v11 + 2);
        if (v33 >= v78) {
          goto LABEL_118;
        }
        unint64_t v12 = v78 - 1;
        memmove(v76, v76 + 16, 16 * (v78 - 1 - v33));
        v31 = v75;
        *((void *)v11 + 2) = v78 - 1;
        uint64_t v10 = v99;
        if (v78 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v98;
    if (v9 >= v98)
    {
      uint64_t v8 = v96;
      uint64_t v2 = v94;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  uint64_t result = sub_26276FBA0();
  __break(1u);
  return result;
}

uint64_t sub_2627283C0(float *__src, float *a2, unint64_t a3, float *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 3;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 2;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 3;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 2;
  v24 = __src;
  uint64_t v23 = __dst;
  if (v10 >= v12 >> 2)
  {
    if (v11 >= -3)
    {
      if (__dst != a2 || &a2[v13] <= __dst) {
        memmove(__dst, a2, 4 * v13);
      }
      float v16 = &v4[v13];
      int v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 4)
      {
        float v17 = (float *)(a3 - 4);
        while (1)
        {
          v18 = v17 + 1;
          uint64_t v19 = v6 - 1;
          float v20 = *(v6 - 1);
          if (*(v16 - 1) >= v20)
          {
            int v22 = v16 - 1;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              *float v17 = *(v16 - 1);
            }
            --v16;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              *float v17 = v20;
            }
            v24 = --v6;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          --v17;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -3)
  {
    if (__dst != __src || &__src[v10] <= __dst) {
      memmove(__dst, __src, 4 * v10);
    }
    float v14 = &v4[v10];
    int v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 4)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4) {
            *uint64_t v7 = *v4;
          }
          uint64_t v23 = ++v4;
          float v15 = v6;
        }
        else
        {
          float v15 = v6 + 1;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *uint64_t v7 = *v6;
          }
        }
        ++v7;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_26276BAE0((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_26276FC00();
  __break(1u);
  return result;
}

char *sub_262728630(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_26276FC00();
  __break(1u);
  return result;
}

char *sub_26272871C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 4 * a1 + 32);
    size_t v6 = 4 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_26276FC00();
  __break(1u);
  return result;
}

uint64_t sub_262728808(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 8 * a1 + 32;
    unint64_t v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_26276FC00();
  __break(1u);
  return result;
}

char *sub_262728910(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_26276FC00();
  __break(1u);
  return result;
}

uint64_t sub_2627289FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_26276FC00();
  __break(1u);
  return result;
}

uint64_t sub_262728AF0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_26276FC00();
  __break(1u);
  return result;
}

uint64_t sub_262728BE8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + 32);
  swift_beginAccess();
  if (!*(void *)(*(void *)(v1 + 32) + 16)) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957358);
  uint64_t v4 = (void *)swift_allocObject();
  int64_t v5 = _swift_stdlib_malloc_size(v4);
  uint64_t v6 = v5 - 40;
  if (v5 < 40) {
    uint64_t v6 = v5 - 25;
  }
  v4[2] = v6 >> 4;
  v4[3] = 0;
  v4[4] = 0;
  sub_26272A15C((uint64_t)(v4 + 2), v4 + 5, 1uLL, a1);
  uint64_t v65 = v4;
  if (!v4[3])
  {
    uint64_t v7 = 0;
LABEL_82:
    swift_release();
    return v7;
  }
  uint64_t v7 = 0;
  uint64_t v63 = (uint64_t *)(v1 + 32);
  while (1)
  {
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0) {
      uint64_t result = sub_2627297B8(&qword_26A957358, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_26274F7F0);
    }
    uint64_t v9 = v65[4];
    uint64_t v10 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      break;
    }
    uint64_t v11 = &v65[2 * v9 + 5];
    unint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    if (v10 >= v65[2]) {
      uint64_t v10 = 0;
    }
    v65[4] = v10;
    uint64_t v14 = v65[3];
    BOOL v34 = __OFSUB__(v14, 1);
    uint64_t v15 = v14 - 1;
    if (v34) {
      goto LABEL_85;
    }
    v65[3] = v15;
    if (v13 > v7) {
      uint64_t v7 = v13;
    }
    if ((v12 & 0x8000000000000000) != 0) {
      goto LABEL_86;
    }
    uint64_t v16 = *v3;
    unint64_t v17 = *(void *)(*v3 + 16);
    if (v12 >= v17) {
      goto LABEL_87;
    }
    uint64_t v18 = v16 + 56 * v12;
    if (*(unsigned char *)(v18 + 56))
    {
      uint64_t v19 = (uint64_t)v65;
    }
    else
    {
      if (__OFADD__(v13, 1)) {
        goto LABEL_89;
      }
      uint64_t v20 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        goto LABEL_90;
      }
      uint64_t v64 = *(void *)(v18 + 48);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v21 = v65[2];
      if (v21 >= v20 && (result & 1) != 0)
      {
        uint64_t v19 = (uint64_t)v65;
      }
      else
      {
        if (v21 >= v20)
        {
          uint64_t v19 = swift_allocObject();
          long long v26 = *(_OWORD *)(v65 + 3);
          *(void *)(v19 + 16) = v21;
          *(_OWORD *)(v19 + 24) = v26;
          if ((uint64_t)v65[3] > 0) {
            sub_26274F7F0(v19 + 16, (char *)(v19 + 40), v65 + 2, (char *)v65 + 40);
          }
        }
        else
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A957360);
          sub_26276F500();
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v23 = v65[3];
            uint64_t v19 = swift_allocObject();
            int64_t v24 = _swift_stdlib_malloc_size((const void *)v19);
            uint64_t v25 = v24 - 40;
            if (v24 < 40) {
              uint64_t v25 = v24 - 25;
            }
            *(void *)(v19 + 16) = v25 >> 4;
            *(void *)(v19 + 24) = v23;
            *(void *)(v19 + 32) = 0;
            if (v23 > 0)
            {
              swift_retain();
              sub_26274EE68(v19 + 16, (char *)(v19 + 40), v65 + 2, (char *)v65 + 40);
              v65[3] = 0;
              swift_release();
            }
          }
          else
          {
            uint64_t v19 = swift_allocObject();
            int64_t v27 = _swift_stdlib_malloc_size((const void *)v19);
            uint64_t v28 = v27 - 40;
            if (v27 < 40) {
              uint64_t v28 = v27 - 25;
            }
            uint64_t v29 = v65[3];
            *(void *)(v19 + 16) = v28 >> 4;
            *(void *)(v19 + 24) = v29;
            *(void *)(v19 + 32) = 0;
            if ((uint64_t)v65[3] > 0) {
              sub_26274F350(v19 + 16, (char *)(v19 + 40), v65 + 2, (char *)v65 + 40);
            }
          }
          uint64_t v3 = v63;
        }
        uint64_t result = swift_release();
        uint64_t v65 = (void *)v19;
      }
      uint64_t v31 = *(void *)(v19 + 24);
      uint64_t v30 = *(void *)(v19 + 32);
      BOOL v34 = __OFADD__(v30, v31);
      uint64_t v32 = v30 + v31;
      if (v34) {
        goto LABEL_91;
      }
      if (v31 < 0)
      {
        if (v32 < 0)
        {
          uint64_t v36 = *(void *)(v19 + 16);
          BOOL v34 = __OFADD__(v32, v36);
          v32 += v36;
          if (v34) {
            goto LABEL_99;
          }
        }
      }
      else
      {
        uint64_t v33 = *(void *)(v19 + 16);
        BOOL v34 = __OFSUB__(v32, v33);
        uint64_t v35 = v32 - v33;
        if (v35 < 0 == v34)
        {
          uint64_t v32 = v35;
          if (v34) {
            goto LABEL_97;
          }
        }
      }
      uint64_t v37 = v19 + 16 * v32;
      *(void *)(v37 + 40) = v64;
      *(void *)(v37 + 48) = v13 + 1;
      uint64_t v38 = *(void *)(v19 + 24);
      BOOL v34 = __OFADD__(v38, 1);
      uint64_t v15 = v38 + 1;
      if (v34) {
        goto LABEL_92;
      }
      *(void *)(v19 + 24) = v15;
      uint64_t v16 = *v3;
      unint64_t v17 = *(void *)(*v3 + 16);
    }
    if (v12 >= v17) {
      goto LABEL_88;
    }
    uint64_t v39 = v16 + 56 * v12;
    if (*(unsigned char *)(v39 + 72))
    {
      if (!v15) {
        goto LABEL_82;
      }
    }
    else
    {
      uint64_t v40 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_93;
      }
      uint64_t v41 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        goto LABEL_94;
      }
      uint64_t v42 = *(void *)(v39 + 64);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v43 = *(void *)(v19 + 16);
      if (v43 >= v41 && (result & 1) != 0)
      {
        uint64_t v44 = v19;
      }
      else
      {
        if (v43 >= v41)
        {
          uint64_t v44 = swift_allocObject();
          long long v49 = *(_OWORD *)(v19 + 24);
          *(void *)(v44 + 16) = v43;
          *(_OWORD *)(v44 + 24) = v49;
          if (*(uint64_t *)(v19 + 24) > 0) {
            sub_26274F7F0(v44 + 16, (char *)(v44 + 40), (void *)(v19 + 16), (char *)(v19 + 40));
          }
        }
        else
        {
          char v45 = swift_isUniquelyReferenced_nonNull_native();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A957360);
          sub_26276F500();
          if (v45)
          {
            uint64_t v46 = *(void *)(v19 + 24);
            uint64_t v44 = swift_allocObject();
            int64_t v47 = _swift_stdlib_malloc_size((const void *)v44);
            uint64_t v48 = v47 - 40;
            if (v47 < 40) {
              uint64_t v48 = v47 - 25;
            }
            *(void *)(v44 + 16) = v48 >> 4;
            *(void *)(v44 + 24) = v46;
            *(void *)(v44 + 32) = 0;
            if (v46 > 0)
            {
              swift_retain();
              sub_26274EE68(v44 + 16, (char *)(v44 + 40), (void *)(v19 + 16), (char *)(v19 + 40));
              *(void *)(v19 + 24) = 0;
              swift_release();
            }
          }
          else
          {
            uint64_t v44 = swift_allocObject();
            int64_t v50 = _swift_stdlib_malloc_size((const void *)v44);
            uint64_t v51 = v50 - 40;
            if (v50 < 40) {
              uint64_t v51 = v50 - 25;
            }
            uint64_t v52 = *(void *)(v19 + 24);
            *(void *)(v44 + 16) = v51 >> 4;
            *(void *)(v44 + 24) = v52;
            *(void *)(v44 + 32) = 0;
            if (*(uint64_t *)(v19 + 24) > 0) {
              sub_26274F350(v44 + 16, (char *)(v44 + 40), (void *)(v19 + 16), (char *)(v19 + 40));
            }
          }
          uint64_t v3 = v63;
        }
        uint64_t result = swift_release();
        uint64_t v65 = (void *)v44;
      }
      uint64_t v54 = *(void *)(v44 + 24);
      uint64_t v53 = *(void *)(v44 + 32);
      BOOL v34 = __OFADD__(v53, v54);
      uint64_t v55 = v53 + v54;
      if (v34) {
        goto LABEL_95;
      }
      if (v54 < 0)
      {
        if (v55 < 0)
        {
          uint64_t v59 = *(void *)(v44 + 16);
          BOOL v34 = __OFADD__(v55, v59);
          v55 += v59;
          if (v34) {
            goto LABEL_100;
          }
        }
      }
      else
      {
        uint64_t v56 = *(void *)(v44 + 16);
        BOOL v57 = __OFSUB__(v55, v56);
        uint64_t v58 = v55 - v56;
        if (v58 < 0 == v57)
        {
          uint64_t v55 = v58;
          if (v57) {
            goto LABEL_98;
          }
        }
      }
      uint64_t v60 = v44 + 16 * v55;
      *(void *)(v60 + 40) = v42;
      *(void *)(v60 + 48) = v40;
      uint64_t v61 = *(void *)(v44 + 24);
      BOOL v34 = __OFADD__(v61, 1);
      uint64_t v62 = v61 + 1;
      if (v34) {
        goto LABEL_96;
      }
      *(void *)(v44 + 24) = v62;
      if (!v62) {
        goto LABEL_82;
      }
    }
  }
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
LABEL_92:
  __break(1u);
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
  return result;
}

Swift::Int __swiftcall BinaryMetricTree.maxDepth()()
{
  uint64_t v3 = v0;
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  unint64_t v78 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v79 = v2;
  uint64_t v80 = (char *)&v69 - v9;
  Swift::Int v10 = 0;
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 72))(v3, v4)) {
    return v10;
  }
  uint64_t v71 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957358);
  uint64_t v11 = (void *)swift_allocObject();
  int64_t v12 = _swift_stdlib_malloc_size(v11);
  uint64_t v13 = v12 - 40;
  if (v12 < 40) {
    uint64_t v13 = v12 - 25;
  }
  v11[2] = v13 >> 4;
  v11[3] = 0;
  v11[4] = 0;
  sub_26272A15C((uint64_t)(v11 + 2), v11 + 5, 1uLL, (uint64_t)&unk_270DC5B40);
  uint64_t v85 = v11;
  if (!v11[3])
  {
    swift_release();
    return 0;
  }
  uint64_t v14 = v71;
  uint64_t v15 = AssociatedTypeWitness;
  uint64_t v16 = v71 + 64;
  unint64_t v17 = *(void (**)(void))(v71 + 64);
  uint64_t v18 = v3;
  uint64_t v75 = v15;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  Swift::Int v10 = 0;
  v76 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8);
  uint64_t v77 = AssociatedConformanceWitness + 8;
  v73 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 16);
  uint64_t v74 = AssociatedConformanceWitness + 16;
  uint64_t v20 = (uint64_t (**)(char *, uint64_t))(v6 + 8);
  uint64_t v83 = AssociatedConformanceWitness;
  uint64_t v84 = v16;
  uint64_t v70 = (uint64_t (**)(char *, uint64_t))(v6 + 8);
  unint64_t v72 = v17;
  while (1)
  {
    Swift::Int result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      Swift::Int result = sub_2627297B8(&qword_26A957358, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_26274F7F0);
      uint64_t v11 = v85;
    }
    uint64_t v23 = v11[4];
    uint64_t v24 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    uint64_t v25 = v18;
    Swift::Int v26 = v11[2 * v23 + 6];
    uint64_t v27 = v11[3];
    if (v24 >= v11[2]) {
      uint64_t v24 = 0;
    }
    v11[4] = v24;
    if (__OFSUB__(v27, 1)) {
      goto LABEL_52;
    }
    v11[3] = v27 - 1;
    if (v26 > v10) {
      Swift::Int v10 = v26;
    }
    Swift::Int v81 = v10;
    Swift::Int v82 = v26;
    ((void (*)(uint64_t, uint64_t))v17)(v18, v14);
    uint64_t v28 = v75;
    uint64_t v29 = v80;
    sub_26276F8C0();
    swift_bridgeObjectRelease();
    uint64_t v30 = v76(v28, AssociatedConformanceWitness);
    char v32 = v31;
    uint64_t v33 = v29;
    BOOL v34 = *v20;
    Swift::Int result = (*v20)(v33, v28);
    uint64_t v35 = v14;
    if ((v32 & 1) == 0)
    {
      Swift::Int v36 = v82 + 1;
      if (__OFADD__(v82, 1)) {
        goto LABEL_53;
      }
      uint64_t v37 = v34;
      uint64_t v38 = v85;
      uint64_t v39 = v85[3];
      uint64_t v40 = v39 + 1;
      if (__OFADD__(v39, 1)) {
        goto LABEL_54;
      }
      Swift::Int result = swift_isUniquelyReferenced_nonNull_native();
      if (v38[2] < v40 || (result & 1) == 0)
      {
        Swift::Int result = sub_2627299C4(v40);
        uint64_t v38 = v85;
      }
      uint64_t v42 = v38[3];
      uint64_t v41 = v38[4];
      BOOL v45 = __OFADD__(v41, v42);
      uint64_t v43 = v41 + v42;
      if (v45) {
        goto LABEL_55;
      }
      if (v42 < 0)
      {
        BOOL v34 = v37;
        if (v43 < 0)
        {
          uint64_t v47 = v38[2];
          BOOL v45 = __OFADD__(v43, v47);
          v43 += v47;
          if (v45) {
            goto LABEL_63;
          }
        }
      }
      else
      {
        uint64_t v44 = v38[2];
        BOOL v45 = __OFSUB__(v43, v44);
        uint64_t v46 = v43 - v44;
        BOOL v34 = v37;
        if (v46 < 0 == v45)
        {
          uint64_t v43 = v46;
          if (v45) {
            goto LABEL_61;
          }
        }
      }
      uint64_t v48 = &v38[2 * v43];
      v48[5] = v30;
      v48[6] = v36;
      uint64_t v49 = v38[3];
      BOOL v45 = __OFADD__(v49, 1);
      uint64_t v50 = v49 + 1;
      if (v45) {
        goto LABEL_56;
      }
      v38[3] = v50;
      uint64_t v25 = v18;
      uint64_t v20 = v70;
      uint64_t v35 = v71;
    }
    uint64_t v14 = v35;
    uint64_t v51 = v72;
    v72(v25);
    uint64_t v52 = v34;
    uint64_t v53 = v78;
    sub_26276F8C0();
    swift_bridgeObjectRelease();
    uint64_t v54 = v73(v28, v83);
    char v56 = v55;
    Swift::Int result = v52(v53, v28);
    uint64_t v18 = v25;
    if (v56)
    {
      unint64_t v17 = v51;
      uint64_t v11 = v85;
      uint64_t v21 = v85[3];
    }
    else
    {
      Swift::Int v57 = v82 + 1;
      if (__OFADD__(v82, 1)) {
        goto LABEL_57;
      }
      uint64_t v11 = v85;
      uint64_t v58 = v85[3];
      uint64_t v59 = v58 + 1;
      if (__OFADD__(v58, 1)) {
        goto LABEL_58;
      }
      Swift::Int result = swift_isUniquelyReferenced_nonNull_native();
      if (v11[2] < v59 || (result & 1) == 0)
      {
        Swift::Int result = sub_2627299C4(v59);
        uint64_t v11 = v85;
      }
      uint64_t v61 = v11[3];
      uint64_t v60 = v11[4];
      BOOL v45 = __OFADD__(v60, v61);
      uint64_t v62 = v60 + v61;
      if (v45) {
        goto LABEL_59;
      }
      if (v61 < 0)
      {
        if (v62 < 0)
        {
          uint64_t v66 = v11[2];
          BOOL v45 = __OFADD__(v62, v66);
          v62 += v66;
          if (v45) {
            goto LABEL_64;
          }
        }
      }
      else
      {
        uint64_t v63 = v11[2];
        BOOL v64 = __OFSUB__(v62, v63);
        uint64_t v65 = v62 - v63;
        if (v65 < 0 == v64)
        {
          uint64_t v62 = v65;
          if (v64) {
            goto LABEL_62;
          }
        }
      }
      uint64_t v67 = &v11[2 * v62];
      v67[5] = v54;
      v67[6] = v57;
      uint64_t v68 = v11[3];
      BOOL v45 = __OFADD__(v68, 1);
      uint64_t v21 = v68 + 1;
      if (v45) {
        goto LABEL_60;
      }
      unint64_t v17 = v51;
      v11[3] = v21;
    }
    Swift::Int v10 = v81;
    uint64_t AssociatedConformanceWitness = v83;
    if (!v21)
    {
      swift_release();
      return v10;
    }
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
  return result;
}

uint64_t sub_262729740()
{
  return sub_262728BE8((uint64_t)&unk_270DC5AE0);
}

uint64_t sub_26272976C()
{
  return sub_262728BE8((uint64_t)&unk_270DC5B10);
}

uint64_t sub_262729798()
{
  return sub_2627297B8(&qword_26A957380, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_26274F958);
}

uint64_t sub_2627297B8(uint64_t *a1, void (*a2)(uint64_t, uint64_t, uint64_t *, uint64_t))
{
  uint64_t v4 = *v2;
  int64_t v5 = (uint64_t *)(*v2 + 16);
  uint64_t v6 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v7 = swift_allocObject();
  long long v8 = *(_OWORD *)(v4 + 24);
  *(void *)(v7 + 16) = v6;
  *(_OWORD *)(v7 + 24) = v8;
  if ((uint64_t)v8 >= 1) {
    a2(v7 + 16, v7 + 40, v5, v4 + 40);
  }
  uint64_t result = swift_release();
  *uint64_t v2 = v7;
  return result;
}

uint64_t sub_262729850()
{
  return sub_262729928(&qword_26A957378, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_26274FAC4);
}

uint64_t sub_262729870()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (uint64_t *)(*v0 + 16);
  uint64_t v3 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957370);
  uint64_t v4 = swift_allocObject();
  long long v5 = *(_OWORD *)(v1 + 24);
  *(void *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = v5;
  if ((uint64_t)v5 >= 1) {
    sub_26274FAE4(v4 + 16, (char *)(v4 + 40), v2, (char *)(v1 + 40));
  }
  uint64_t result = swift_release();
  *uint64_t v0 = v4;
  return result;
}

uint64_t sub_262729908()
{
  return sub_262729928(&qword_26A957368, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_26274FC4C);
}

uint64_t sub_262729928(uint64_t *a1, void (*a2)(uint64_t, uint64_t, uint64_t *, uint64_t))
{
  uint64_t v4 = *v2;
  long long v5 = (uint64_t *)(*v2 + 16);
  uint64_t v6 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v7 = swift_allocObject();
  long long v8 = *(_OWORD *)(v4 + 24);
  *(void *)(v7 + 16) = v6;
  *(_OWORD *)(v7 + 24) = v8;
  if ((uint64_t)v8 >= 1) {
    a2(v7 + 16, v7 + 40, v5, v4 + 40);
  }
  uint64_t result = swift_release();
  *uint64_t v2 = v7;
  return result;
}

uint64_t sub_2627299C4(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = (uint64_t *)(*v1 + 16);
  uint64_t v4 = *v3;
  if (*v3 >= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A957358);
    uint64_t v8 = swift_allocObject();
    long long v11 = *(_OWORD *)(v2 + 24);
    *(void *)(v8 + 16) = v4;
    *(_OWORD *)(v8 + 24) = v11;
    if ((uint64_t)v11 >= 1) {
      sub_26274F7F0(v8 + 16, (char *)(v8 + 40), v3, (char *)(v2 + 40));
    }
  }
  else
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A957360);
    sub_26276F500();
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v7 = *(void *)(v6 + 24);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A957358);
      uint64_t v8 = swift_allocObject();
      int64_t v9 = _swift_stdlib_malloc_size((const void *)v8);
      uint64_t v10 = v9 - 40;
      if (v9 < 40) {
        uint64_t v10 = v9 - 25;
      }
      *(void *)(v8 + 16) = v10 >> 4;
      *(void *)(v8 + 24) = v7;
      *(void *)(v8 + 32) = 0;
      if (v7 >= 1)
      {
        swift_retain();
        sub_26274EE68(v8 + 16, (char *)(v8 + 40), (void *)(v6 + 16), (char *)(v6 + 40));
        *(void *)(v6 + 24) = 0;
        swift_release();
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A957358);
      uint64_t v8 = swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size((const void *)v8);
      uint64_t v13 = v12 - 40;
      if (v12 < 40) {
        uint64_t v13 = v12 - 25;
      }
      uint64_t v14 = *(void *)(v6 + 24);
      *(void *)(v8 + 16) = v13 >> 4;
      *(void *)(v8 + 24) = v14;
      *(void *)(v8 + 32) = 0;
      if (v14 >= 1) {
        sub_26274F350(v8 + 16, (char *)(v8 + 40), (void *)(v6 + 16), (char *)(v6 + 40));
      }
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v8;
  return result;
}

uint64_t sub_262729B9C(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = (uint64_t *)(*v1 + 16);
  uint64_t v4 = *v3;
  if (*v3 >= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A957380);
    uint64_t v8 = swift_allocObject();
    long long v11 = *(_OWORD *)(v2 + 24);
    *(void *)(v8 + 16) = v4;
    *(_OWORD *)(v8 + 24) = v11;
    if ((uint64_t)v11 >= 1) {
      sub_26274F958(v8 + 16, (char *)(v8 + 40), v3, (char *)(v2 + 40));
    }
  }
  else
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A957388);
    sub_26276F500();
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v7 = *(void *)(v6 + 24);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A957380);
      uint64_t v8 = swift_allocObject();
      int64_t v9 = _swift_stdlib_malloc_size((const void *)v8);
      uint64_t v10 = v9 - 40;
      if (v9 < 40) {
        uint64_t v10 = v9 - 25;
      }
      *(void *)(v8 + 16) = v10 >> 4;
      *(void *)(v8 + 24) = v7;
      *(void *)(v8 + 32) = 0;
      if (v7 >= 1)
      {
        swift_retain();
        sub_26274EF98(v8 + 16, (char *)(v8 + 40), (void *)(v6 + 16), (char *)(v6 + 40));
        *(void *)(v6 + 24) = 0;
        swift_release();
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A957380);
      uint64_t v8 = swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size((const void *)v8);
      uint64_t v13 = v12 - 40;
      if (v12 < 40) {
        uint64_t v13 = v12 - 25;
      }
      uint64_t v14 = *(void *)(v6 + 24);
      *(void *)(v8 + 16) = v13 >> 4;
      *(void *)(v8 + 24) = v14;
      *(void *)(v8 + 32) = 0;
      if (v14 >= 1) {
        sub_26274F350(v8 + 16, (char *)(v8 + 40), (void *)(v6 + 16), (char *)(v6 + 40));
      }
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v8;
  return result;
}

uint64_t sub_262729D74(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = (uint64_t *)(*v1 + 16);
  uint64_t v4 = *v3;
  if (*v3 >= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A957378);
    uint64_t v8 = swift_allocObject();
    long long v9 = *(_OWORD *)(v2 + 24);
    *(void *)(v8 + 16) = v4;
    *(_OWORD *)(v8 + 24) = v9;
    if ((uint64_t)v9 >= 1) {
      sub_26274FAC4(v8 + 16, v8 + 40, v3, v2 + 40);
    }
  }
  else
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v1;
    sub_26276F500();
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v7 = *(void *)(v6 + 24);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A957378);
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = (uint64_t)(_swift_stdlib_malloc_size((const void *)v8) - 40) / 24;
      *(void *)(v8 + 24) = v7;
      *(void *)(v8 + 32) = 0;
      if (v7 >= 1)
      {
        swift_retain();
        sub_26274F0C8(v8 + 16, (char *)(v8 + 40), (void *)(v6 + 16), (char *)(v6 + 40));
        *(void *)(v6 + 24) = 0;
        swift_release();
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A957378);
      uint64_t v8 = swift_allocObject();
      size_t v10 = _swift_stdlib_malloc_size((const void *)v8);
      uint64_t v11 = *(void *)(v6 + 24);
      *(void *)(v8 + 16) = (uint64_t)(v10 - 40) / 24;
      *(void *)(v8 + 24) = v11;
      *(void *)(v8 + 32) = 0;
      if (v11 >= 1) {
        sub_26274F4C8(v8 + 16, v8 + 40, (void *)(v6 + 16), v6 + 40);
      }
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v8;
  return result;
}

uint64_t sub_262729F68(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = (uint64_t *)(*v1 + 16);
  uint64_t v4 = *v3;
  if (*v3 >= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A957368);
    uint64_t v8 = swift_allocObject();
    long long v9 = *(_OWORD *)(v2 + 24);
    *(void *)(v8 + 16) = v4;
    *(_OWORD *)(v8 + 24) = v9;
    if ((uint64_t)v9 >= 1) {
      sub_26274FC4C(v8 + 16, v8 + 40, v3, v2 + 40);
    }
  }
  else
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v1;
    sub_26276F500();
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v7 = *(void *)(v6 + 24);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A957368);
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = (uint64_t)(_swift_stdlib_malloc_size((const void *)v8) - 40) / 24;
      *(void *)(v8 + 24) = v7;
      *(void *)(v8 + 32) = 0;
      if (v7 >= 1)
      {
        swift_retain();
        sub_26274F0C8(v8 + 16, (char *)(v8 + 40), (void *)(v6 + 16), (char *)(v6 + 40));
        *(void *)(v6 + 24) = 0;
        swift_release();
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A957368);
      uint64_t v8 = swift_allocObject();
      size_t v10 = _swift_stdlib_malloc_size((const void *)v8);
      uint64_t v11 = *(void *)(v6 + 24);
      *(void *)(v8 + 16) = (uint64_t)(v10 - 40) / 24;
      *(void *)(v8 + 24) = v11;
      *(void *)(v8 + 32) = 0;
      if (v11 >= 1) {
        sub_26274F660(v8 + 16, v8 + 40, (void *)(v6 + 16), v6 + 40);
      }
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v8;
  return result;
}

uint64_t sub_26272A15C(uint64_t result, void *__dst, unint64_t a3, uint64_t a4)
{
  if ((a3 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(a4 + 16);
  if (!v6)
  {
LABEL_9:
    *(void *)(v5 + 8) = a3;
    return result;
  }
  if (v6 > a3) {
    goto LABEL_11;
  }
  if (a4 + 32 >= (unint64_t)__dst + 16 * v6 || a4 + 32 + 16 * v6 <= (unint64_t)__dst)
  {
    uint64_t result = (uint64_t)memcpy(__dst, (const void *)(a4 + 32), 16 * v6);
    goto LABEL_9;
  }
LABEL_12:
  uint64_t result = sub_26276FC00();
  __break(1u);
  return result;
}

uint64_t dispatch thunk of BinaryTreeNode.left.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BinaryTreeNode.right.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_26272A290(uint64_t result, void *__dst, unint64_t a3, uint64_t a4)
{
  if ((a3 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(a4 + 16);
  if (!v6)
  {
LABEL_9:
    *(void *)(v5 + 8) = a3;
    return result;
  }
  if (v6 > a3) {
    goto LABEL_11;
  }
  if (a4 + 32 >= (unint64_t)__dst + 8 * v6 || a4 + 32 + 8 * v6 <= (unint64_t)__dst)
  {
    uint64_t result = (uint64_t)memcpy(__dst, (const void *)(a4 + 32), 8 * v6);
    goto LABEL_9;
  }
LABEL_12:
  uint64_t result = sub_26276FC00();
  __break(1u);
  return result;
}

uint64_t JSONLinesLoader.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v19 = sub_26276F130();
  uint64_t v5 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_26276F140();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3[3] = 0;
  uint64_t v12 = type metadata accessor for JSONLinesLoader();
  uint64_t v13 = (char *)a3 + *(int *)(v12 + 52);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957390);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *(void *)((char *)a3 + *(int *)(v12 + 56)) = 0;
  uint64_t v15 = v18;
  *a3 = a1;
  a3[1] = v15;
  sub_26276F190();
  swift_allocObject();
  uint64_t v16 = sub_26276F180();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F060E0], v8);
  sub_26276F160();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F060C0], v19);
  sub_26276F150();
  a3[2] = v16;
  return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a3, 0, 1, v12);
}

uint64_t type metadata accessor for JSONLinesLoader()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t JSONLinesLoader.makeAsyncIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(a2, v2, a1);
}

uint64_t JSONLinesLoader.next()(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  uint64_t v4 = *(void *)(a2 + 16);
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573A0);
  v3[11] = v5;
  v3[12] = *(void *)(v5 - 8);
  v3[13] = swift_task_alloc();
  uint64_t v6 = sub_26276FA10();
  v3[14] = v6;
  v3[15] = *(void *)(v6 - 8);
  v3[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573A8);
  v3[17] = swift_task_alloc();
  uint64_t v7 = sub_26276F250();
  v3[18] = v7;
  v3[19] = *(void *)(v7 - 8);
  v3[20] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573B0);
  v3[21] = swift_task_alloc();
  uint64_t v8 = sub_26276F280();
  v3[22] = v8;
  v3[23] = *(void *)(v8 - 8);
  v3[24] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_26272A8E0, 0, 0);
}

uint64_t sub_26272A8E0()
{
  sub_26276F950();
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(int *)(v1 + 56);
  *(_DWORD *)(v0 + 232) = v3;
  if (!*(void *)(v2 + v3))
  {
    uint64_t v16 = *(void *)(v0 + 184);
    uint64_t v15 = *(void *)(v0 + 192);
    uint64_t v18 = *(void *)(v0 + 168);
    uint64_t v17 = *(void *)(v0 + 176);
    uint64_t v20 = *(void *)(v0 + 152);
    uint64_t v19 = *(void *)(v0 + 160);
    uint64_t v21 = *(void *)(v0 + 144);
    sub_26272C158();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v18, 1, 1, v17);
    (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))(v19, *MEMORY[0x263F06E50], v21);
    swift_bridgeObjectRetain();
    sub_26276F270();
    id v22 = sub_26272B65C(v15);
    id v24 = v22;
    if (!v22)
    {
LABEL_17:
      (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 72) + 56))(*(void *)(v0 + 40), 1, 1, *(void *)(v0 + 64));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      Swift::Int v36 = *(uint64_t (**)(void))(v0 + 8);
      return v36();
    }
    uint64_t v25 = *(void *)(v0 + 128);
    uint64_t v27 = *(void *)(v0 + 112);
    uint64_t v26 = *(void *)(v0 + 120);
    uint64_t v29 = *(void *)(v0 + 96);
    uint64_t v28 = *(void *)(v0 + 104);
    uint64_t v38 = *(void *)(v0 + 88);
    uint64_t v39 = *(void *)(v0 + 136);
    uint64_t v30 = *(void *)(v0 + 56);
    uint64_t v40 = *(void *)(v0 + 48);
    char v31 = *(void **)(v30 + 24);
    id v32 = v22;

    *(void *)(v30 + 24) = v24;
    sub_26276FA20();
    sub_26272C198();
    sub_26276F960();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    sub_26276F220();

    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v38);
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957390);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v39, 0, 1, v33);
    sub_26272C1F0(v39, v30 + *(int *)(v40 + 52));
    uint64_t v1 = *(void *)(v0 + 48);
    uint64_t v2 = *(void *)(v0 + 56);
  }
  uint64_t v4 = v2 + *(int *)(v1 + 52);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957390);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    if (qword_26A9572B0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_26276F530();
    __swift_project_value_buffer(v6, (uint64_t)qword_26A95E208);
    uint64_t v7 = sub_26276F510();
    os_log_type_t v8 = sub_26276FA40();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_262725000, v7, v8, "Reached the end of the file.", v9, 2u);
      MEMORY[0x263E528C0](v9, -1, -1);
    }
    uint64_t v10 = *(void *)(v0 + 56);

    uint64_t v11 = *(void **)(v10 + 24);
    if (v11)
    {
      *(void *)(v0 + 16) = 0;
      unsigned int v12 = objc_msgSend(v11, sel_closeAndReturnError_, v0 + 16);
      uint64_t v13 = *(void **)(v0 + 16);
      if (v12)
      {
        id v14 = v13;
      }
      else
      {
        id v34 = v13;
        uint64_t v35 = (void *)sub_26276F240();

        swift_willThrow();
      }
    }
    goto LABEL_17;
  }
  uint64_t v23 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_26272AE14;
  return MEMORY[0x270EEEE80](v5);
}

uint64_t sub_26272AE14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[26] = a1;
  v4[27] = a2;
  v4[28] = v2;
  swift_task_dealloc();
  if (v2)
  {

    uint64_t v5 = sub_26272B444;
  }
  else
  {
    uint64_t v5 = sub_26272AF60;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_26272AF60()
{
  unint64_t v1 = *(void *)(v0 + 216);
  if (!v1)
  {
    if (qword_26A9572B0 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_26276F530();
    __swift_project_value_buffer(v17, (uint64_t)qword_26A95E208);
    uint64_t v18 = sub_26276F510();
    os_log_type_t v19 = sub_26276FA40();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl(&dword_262725000, v18, v19, "Reached the end of the file.", v20, 2u);
      MEMORY[0x263E528C0](v20, -1, -1);
    }
    uint64_t v21 = *(void *)(v0 + 56);

    id v22 = *(void **)(v21 + 24);
    if (!v22) {
      goto LABEL_25;
    }
    *(void *)(v0 + 16) = 0;
    unsigned int v23 = objc_msgSend(v22, sel_closeAndReturnError_, v0 + 16);
    id v24 = *(void **)(v0 + 16);
    if (v23)
    {
      id v25 = v24;
LABEL_25:
      (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 72) + 56))(*(void *)(v0 + 40), 1, 1, *(void *)(v0 + 64));
      goto LABEL_26;
    }
    id v42 = v24;
    uint64_t v41 = sub_26276F240();

    swift_willThrow();
    goto LABEL_23;
  }
  uint64_t v2 = *(void **)(v0 + 224);
  unint64_t v3 = *(void *)(v0 + 208);
  swift_retain();
  uint64_t v4 = sub_26272B7B4(v3, v1);
  unint64_t v6 = v5;
  sub_26276F170();
  if (v2)
  {
    uint64_t v7 = v2;
    sub_26272C100(v4, v6);
    swift_release();
    if (qword_26A9572B0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_26276F530();
    __swift_project_value_buffer(v8, (uint64_t)qword_26A95E208);
    id v9 = v2;
    id v10 = v2;
    uint64_t v11 = sub_26276F510();
    os_log_type_t v12 = sub_26276FA50();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      id v14 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 138412290;
      id v15 = v7;
      uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 32) = v16;
      sub_26276FA70();
      void *v14 = v16;

      _os_log_impl(&dword_262725000, v11, v12, "Failed at parsing data: %@", v13, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573B8);
      swift_arrayDestroy();
      MEMORY[0x263E528C0](v14, -1, -1);
      MEMORY[0x263E528C0](v13, -1, -1);
    }
    else
    {
    }
    uint64_t v35 = *(void **)(*(void *)(v0 + 56) + 24);
    if (!v35) {
      goto LABEL_20;
    }
    *(void *)(v0 + 24) = 0;
    unsigned int v36 = objc_msgSend(v35, sel_closeAndReturnError_, v0 + 24);
    uint64_t v37 = *(void **)(v0 + 24);
    if (v36)
    {
      id v38 = v37;
LABEL_20:
      uint64_t v39 = v7;
LABEL_24:

      goto LABEL_25;
    }
    id v40 = v37;
    uint64_t v41 = sub_26276F240();

    swift_willThrow();
LABEL_23:
    uint64_t v39 = (void *)v41;
    goto LABEL_24;
  }
  uint64_t v26 = *(int *)(v0 + 232);
  uint64_t v27 = *(void *)(v0 + 56);
  sub_26272C100(v4, v6);
  swift_release();
  uint64_t v28 = *(void *)(v27 + v26);
  BOOL v29 = __OFADD__(v28, 1);
  uint64_t v30 = v28 + 1;
  if (v29) {
    __break(1u);
  }
  uint64_t v32 = *(void *)(v0 + 72);
  uint64_t v31 = *(void *)(v0 + 80);
  uint64_t v33 = *(void *)(v0 + 64);
  uint64_t v34 = *(void *)(v0 + 40);
  *(void *)(*(void *)(v0 + 56) + *(int *)(v0 + 232)) = v30;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v34, v31, v33);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v34, 0, 1, v33);
LABEL_26:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v43 = *(uint64_t (**)(void))(v0 + 8);
  return v43();
}

uint64_t sub_26272B444()
{
  if (qword_26A9572B0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_26276F530();
  __swift_project_value_buffer(v1, (uint64_t)qword_26A95E208);
  uint64_t v2 = sub_26276F510();
  os_log_type_t v3 = sub_26276FA40();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_262725000, v2, v3, "Reached the end of the file.", v4, 2u);
    MEMORY[0x263E528C0](v4, -1, -1);
  }
  uint64_t v5 = v0[7];

  unint64_t v6 = *(void **)(v5 + 24);
  if (v6)
  {
    v0[2] = 0;
    unsigned int v7 = objc_msgSend(v6, sel_closeAndReturnError_, v0 + 2);
    uint64_t v8 = (void *)v0[2];
    if (v7)
    {
      id v9 = v8;
    }
    else
    {
      id v10 = v8;
      uint64_t v11 = (void *)sub_26276F240();

      swift_willThrow();
    }
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[9] + 56))(v0[5], 1, 1, v0[8]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

id sub_26272B65C(uint64_t a1)
{
  v11[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = (void *)sub_26276F260();
  v11[0] = 0;
  id v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fileHandleForReadingFromURL_error_, v2, v11);

  id v4 = v11[0];
  if (v3)
  {
    uint64_t v5 = sub_26276F280();
    unint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    id v7 = v4;
    v6(a1, v5);
  }
  else
  {
    id v8 = v11[0];
    sub_26276F240();

    swift_willThrow();
    uint64_t v9 = sub_26276F280();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

uint64_t sub_26272B7B4(unint64_t a1, unint64_t a2)
{
  uint64_t v44 = *MEMORY[0x263EF8340];
  *(void *)&long long v40 = a1;
  *((void *)&v40 + 1) = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957468);
  if (swift_dynamicCast())
  {
    sub_26272D6E0(v38, (uint64_t)&v41);
    __swift_project_boxed_opaque_existential_1(&v41, v43);
    sub_26276F210();
    swift_bridgeObjectRelease();
    v38[0] = v40;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
    return *(void *)&v38[0];
  }
  uint64_t v39 = 0;
  memset(v38, 0, sizeof(v38));
  sub_26272CE0C((uint64_t)v38);
  unint64_t v2 = a1;
  unint64_t v3 = a2;
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = a1;
      uint64_t v42 = a2 & 0xFFFFFFFFFFFFFFLL;
      unint64_t v6 = (char *)&v41 + (HIBYTE(a2) & 0xF);
      id v7 = &v41;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_26276FB10();
      }
      if (v4) {
        unint64_t v6 = (unsigned char *)(v4 + v5);
      }
      else {
        unint64_t v6 = 0;
      }
      id v7 = (uint64_t *)v4;
    }
    id v8 = sub_26272D55C(v7, v6);
    unint64_t v10 = v9;
    if (v9 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(void *)&v38[0] = v8;
      *((void *)&v38[0] + 1) = v10;
      return *(void *)&v38[0];
    }
    unint64_t v2 = a1;
    unint64_t v3 = a2;
    if ((a2 & 0x1000000000000000) == 0) {
      goto LABEL_14;
    }
LABEL_70:
    uint64_t v11 = sub_26276F6F0();
    goto LABEL_17;
  }
LABEL_69:
  id v8 = 0;
  unint64_t v10 = 0xF000000000000000;
  if ((v3 & 0x1000000000000000) != 0) {
    goto LABEL_70;
  }
LABEL_14:
  if ((v3 & 0x2000000000000000) != 0) {
    uint64_t v11 = HIBYTE(v3) & 0xF;
  }
  else {
    uint64_t v11 = v2 & 0xFFFFFFFFFFFFLL;
  }
LABEL_17:
  *(void *)&v38[0] = sub_26272D5C0(v11);
  *((void *)&v38[0] + 1) = v12;
  MEMORY[0x270FA5388](*(void *)&v38[0]);
  unint64_t v13 = (unint64_t)sub_26272CE6C((void *(*)(uint64_t *__return_ptr, char *, char *))sub_26272D660);
  uint64_t v16 = *((void *)&v38[0] + 1) >> 62;
  uint64_t v17 = v13;
  uint64_t v18 = v3;
  unint64_t v19 = v14;
  switch(*((void *)&v38[0] + 1) >> 62)
  {
    case 1:
      LODWORD(v20) = DWORD1(v38[0]) - LODWORD(v38[0]);
      if (__OFSUB__(DWORD1(v38[0]), v38[0])) {
        goto LABEL_73;
      }
      uint64_t v20 = (int)v20;
LABEL_23:
      if (v15 != v20)
      {
        if (v16)
        {
          if (v16 == 1) {
            uint64_t v24 = *(uint64_t *)&v38[0] >> 32;
          }
          else {
            uint64_t v24 = *(void *)(*(void *)&v38[0] + 24);
          }
        }
        else
        {
          uint64_t v24 = BYTE14(v38[0]);
        }
LABEL_61:
        if (v24 < v15)
        {
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
        }
        sub_26276F2B0();
LABEL_63:
        swift_bridgeObjectRelease();
        goto LABEL_64;
      }
LABEL_29:
      if ((v3 & 0x2000000000000000) != 0) {
        unint64_t v25 = HIBYTE(v3) & 0xF;
      }
      else {
        unint64_t v25 = v13 & 0xFFFFFFFFFFFFLL;
      }
      *(void *)((char *)&v40 + 7) = 0;
      *(void *)&long long v40 = 0;
      if (4 * v25 == v14 >> 14) {
        goto LABEL_58;
      }
      LOBYTE(v26) = 0;
      uint64_t v27 = (v13 >> 59) & 1;
      if ((v3 & 0x1000000000000000) == 0) {
        LOBYTE(v27) = 1;
      }
      uint64_t v28 = 4 << v27;
      uint64_t v35 = v3 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v33 = (uint64_t)v8;
      uint64_t v34 = (v3 & 0xFFFFFFFFFFFFFFFLL) + 32;
      break;
    case 2:
      uint64_t v22 = *(void *)(*(void *)&v38[0] + 16);
      uint64_t v21 = *(void *)(*(void *)&v38[0] + 24);
      BOOL v23 = __OFSUB__(v21, v22);
      uint64_t v20 = v21 - v22;
      if (!v23) {
        goto LABEL_23;
      }
      goto LABEL_74;
    case 3:
      if (!v15) {
        goto LABEL_29;
      }
      uint64_t v24 = 0;
      goto LABEL_61;
    default:
      uint64_t v20 = BYTE14(v38[0]);
      goto LABEL_23;
  }
  do
  {
    unint64_t v29 = v19 & 0xC;
    unint64_t v2 = v19;
    if (v29 == v28) {
      unint64_t v2 = sub_262739584(v19, v17, v18);
    }
    unint64_t v30 = v2 >> 16;
    if (v2 >> 16 >= v25)
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    if ((v18 & 0x1000000000000000) != 0)
    {
      unint64_t v2 = sub_26276F720();
      char v31 = v2;
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else if ((v18 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = v17;
      uint64_t v42 = v35;
      char v31 = *((unsigned char *)&v41 + v30);
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else
    {
      unint64_t v2 = v34;
      if ((v17 & 0x1000000000000000) == 0) {
        unint64_t v2 = sub_26276FB10();
      }
      char v31 = *(unsigned char *)(v2 + v30);
      if (v29 != v28)
      {
LABEL_47:
        if ((v18 & 0x1000000000000000) == 0) {
          goto LABEL_48;
        }
        goto LABEL_51;
      }
    }
    unint64_t v2 = sub_262739584(v19, v17, v18);
    unint64_t v19 = v2;
    if ((v18 & 0x1000000000000000) == 0)
    {
LABEL_48:
      unint64_t v19 = (v19 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_53;
    }
LABEL_51:
    if (v25 <= v19 >> 16) {
      goto LABEL_68;
    }
    unint64_t v2 = sub_26276F700();
    unint64_t v19 = v2;
LABEL_53:
    *((unsigned char *)&v40 + v26) = v31;
    unsigned int v26 = v26 + 1;
    if ((v26 >> 8)) {
      goto LABEL_67;
    }
    BYTE14(v40) = v26;
    if (v26 == 14)
    {
      uint64_t v41 = v40;
      LODWORD(v42) = DWORD2(v40);
      WORD2(v42) = WORD6(v40);
      sub_26276F2C0();
      LOBYTE(v26) = 0;
      BYTE14(v40) = 0;
    }
  }
  while (4 * v25 != v19 >> 14);
  id v8 = (unsigned char *)v33;
  if ((_BYTE)v26)
  {
    uint64_t v41 = v40;
    LODWORD(v42) = DWORD2(v40);
    WORD2(v42) = WORD6(v40);
    sub_26276F2C0();
    sub_26272D6CC(v33, v10);
    goto LABEL_63;
  }
LABEL_58:
  swift_bridgeObjectRelease();
  sub_26272D6CC((uint64_t)v8, v10);
LABEL_64:
  swift_bridgeObjectRelease();
  return *(void *)&v38[0];
}

uint64_t sub_26272BCDC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_26272BD84;
  return JSONLinesLoader.next()(a1, a2);
}

uint64_t sub_26272BD84()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_26272BE78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a4;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 32) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_26272BF58;
  return MEMORY[0x270FA1E90](a1, a2, a3, a5, a6, v6 + 16);
}

uint64_t sub_26272BF58()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0) {
    **(void **)(v2 + 24) = *(void *)(v2 + 16);
  }
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
  return v4();
}

uint64_t sub_26272C068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  JSONLinesLoader.makeAsyncIterator()(a1, a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);
  return v4(v2, a1);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_26272C100(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

unint64_t sub_26272C158()
{
  unint64_t result = qword_26A9573C0;
  if (!qword_26A9573C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A9573C0);
  }
  return result;
}

unint64_t sub_26272C198()
{
  unint64_t result = qword_26A9573C8[0];
  if (!qword_26A9573C8[0])
  {
    sub_26276FA10();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A9573C8);
  }
  return result;
}

uint64_t sub_26272C1F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_26272C258()
{
  return MEMORY[0x263F8E4E0];
}

uint64_t sub_26272C264()
{
  return swift_getWitnessTable();
}

uint64_t sub_26272C280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 48);
}

void sub_26272C288()
{
  sub_26272CD68();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_26272C344(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    id v8 = (void *)a2[3];
    a1[2] = a2[2];
    a1[3] = (uint64_t)v8;
    uint64_t v9 = *(int *)(a3 + 52);
    unint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    swift_bridgeObjectRetain();
    swift_retain();
    id v12 = v8;
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957390);
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573A8);
      memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v10, v11, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 56)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 56));
  }
  return a1;
}

uint64_t sub_26272C4E0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_release();

  uint64_t v4 = a1 + *(int *)(a2 + 52);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957390);
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_26272C5C4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = *(int *)(a3 + 52);
  uint64_t v9 = (char *)a1 + v8;
  unint64_t v10 = (char *)a2 + v8;
  swift_bridgeObjectRetain();
  swift_retain();
  id v11 = v7;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957390);
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573A8);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v9, v10, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 56)) = *(void *)((char *)a2 + *(int *)(a3 + 56));
  return a1;
}

void *sub_26272C710(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  uint64_t v6 = (void *)a1[3];
  uint64_t v7 = (void *)a2[3];
  a1[3] = v7;
  id v8 = v7;

  uint64_t v9 = *(int *)(a3 + 52);
  unint64_t v10 = (char *)a1 + v9;
  id v11 = (char *)a2 + v9;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957390);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573A8);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(void *)((char *)a1 + *(int *)(a3 + 56)) = *(void *)((char *)a2 + *(int *)(a3 + 56));
  return a1;
}

_OWORD *sub_26272C8EC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 52);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957390);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573A8);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 56)) = *(void *)((char *)a2 + *(int *)(a3 + 56));
  return a1;
}

void *sub_26272CA20(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_release();
  uint64_t v7 = (void *)a1[3];
  a1[3] = a2[3];

  uint64_t v8 = *(int *)(a3 + 52);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957390);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573A8);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  *(void *)((char *)a1 + *(int *)(a3 + 56)) = *(void *)((char *)a2 + *(int *)(a3 + 56));
  return a1;
}

uint64_t sub_26272CBE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_26272CBF4);
}

uint64_t sub_26272CBF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573A8);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 52);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_26272CCA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_26272CCBC);
}

uint64_t sub_26272CCBC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573A8);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 52);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_26272CD68()
{
  if (!qword_26A957460)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A957390);
    unint64_t v0 = sub_26276FA60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A957460);
    }
  }
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_26272CE0C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957470);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_26272CE6C(void *(*a1)(uint64_t *__return_ptr, char *, char *))
{
  v16[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *v1;
  unint64_t v3 = v1[1];
  uint64_t v5 = v1;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)uint64_t v1 = xmmword_262770840;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = v4 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_16;
      }
      if (v11 < (int)v4) {
        goto LABEL_23;
      }
      if (sub_26276F1C0() && __OFSUB__((int)v4, sub_26276F1F0())) {
        goto LABEL_24;
      }
      sub_26276F200();
      swift_allocObject();
      uint64_t v13 = sub_26276F1A0();
      swift_release();
      uint64_t v9 = v13;
      uint64_t v11 = v4 >> 32;
LABEL_16:
      if (v11 < (int)v4)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
      }
      uint64_t result = sub_26272D258((int)v4, v11, a1);
      unint64_t v12 = v9 | 0x4000000000000000;
      if (v2)
      {
        *uint64_t v5 = v4;
        goto LABEL_19;
      }
      *uint64_t v5 = v4;
      v5[1] = v12;
      break;
    case 2uLL:
      uint64_t v14 = *v1;
      uint64_t v15 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_26276F290();
      uint64_t result = sub_26272D258(*(void *)(v14 + 16), *(void *)(v14 + 24), a1);
      unint64_t v12 = v15 | 0x8000000000000000;
      if (v2)
      {
        *uint64_t v1 = v14;
LABEL_19:
        v5[1] = v12;
      }
      else
      {
        *uint64_t v1 = v14;
        v1[1] = v12;
      }
      break;
    case 3uLL:
      memset(v16, 0, 15);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16);
      if (!v2) {
        return (char *)v14;
      }
      return result;
    default:
      v16[0] = *v1;
      LOWORD(v16[1]) = v3;
      BYTE2(v16[1]) = BYTE2(v3);
      BYTE3(v16[1]) = BYTE3(v3);
      BYTE4(v16[1]) = BYTE4(v3);
      BYTE5(v16[1]) = BYTE5(v3);
      BYTE6(v16[1]) = BYTE6(v3);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16 + BYTE6(v3));
      if (!v2) {
        uint64_t result = (char *)v14;
      }
      unint64_t v8 = LODWORD(v16[1]) | ((unint64_t)BYTE4(v16[1]) << 32) | ((unint64_t)BYTE5(v16[1]) << 40) | ((unint64_t)BYTE6(v16[1]) << 48);
      *uint64_t v1 = v16[0];
      v1[1] = v8;
      return result;
  }
  return result;
}

unsigned char *sub_26272D170@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_26272D398(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_26272D45C((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_26272D4D8((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

void *sub_26272D1E8(void *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t result = a1(&v6, a3, a4 - a3);
    if (v4) {
      return result;
    }
    return (void *)v6;
  }
  uint64_t result = a1(&v6, 0, 0);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

char *sub_26272D258(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t result = (char *)sub_26276F1C0();
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v8 = result;
  uint64_t result = (char *)sub_26276F1F0();
  uint64_t v9 = a1 - (void)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v12 = sub_26276F1E0();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3) {
    return (char *)v14;
  }
  return result;
}

uint64_t sub_26272D30C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_26276FAE0();
    if ((v3 & 1) == 0)
    {
      uint64_t v4 = result;
      uint64_t result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_26272D398(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_26272D45C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_26276F200();
  swift_allocObject();
  uint64_t result = sub_26276F1B0();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_26276F2A0();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_26272D4D8(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_26276F200();
  swift_allocObject();
  uint64_t result = sub_26276F1B0();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

unsigned char *sub_26272D55C(unsigned char *result, unsigned char *a2)
{
  if (result)
  {
    uint64_t v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (unsigned char *)sub_26272D398(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (unsigned char *)sub_26272D45C((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (unsigned char *)sub_26272D4D8((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_26272D5C0(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_26276F200();
      swift_allocObject();
      sub_26276F1D0();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_26276F2A0();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

void *sub_26272D660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  char v5 = *(uint64_t **)(v3 + 16);
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  v12[2] = v13;
  uint64_t result = sub_26272D1E8((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_26272D78C, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_26272D6CC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_26272C100(a1, a2);
  }
  return a1;
}

uint64_t sub_26272D6E0(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_26272D78C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_26272D30C(a1, a2);
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t EmbeddingItem.itemId.getter()
{
  return *(void *)v0;
}

uint64_t EmbeddingItem.embedding.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EmbeddingItem.embeddingModel.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EmbeddingItem.sourceType.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EmbeddingItem.init(itemId:embedding:embeddingModel:sourceType:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

BOOL sub_26272D85C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_26272D874()
{
  return sub_26276FE10();
}

uint64_t sub_26272D8A4()
{
  uint64_t result = 0x64496D657469;
  switch(*v0)
  {
    case 1:
    case 2:
      uint64_t result = 0x6E69646465626D65;
      break;
    case 3:
      uint64_t result = 0x7954656372756F73;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_26272D934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_262730BC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_26272D95C()
{
  return 0;
}

void sub_26272D968(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_26272D974(uint64_t a1)
{
  unint64_t v2 = sub_26272DC20();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_26272D9B0(uint64_t a1)
{
  unint64_t v2 = sub_26272DC20();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t EmbeddingItem.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957478);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[1];
  v11[3] = v1[2];
  uint64_t v12 = v8;
  uint64_t v9 = v1[3];
  v11[1] = v1[4];
  id v11[2] = v9;
  v11[0] = v1[5];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_26272DC20();
  sub_26276FE40();
  char v17 = 0;
  sub_26276FD30();
  if (!v2)
  {
    uint64_t v13 = v12;
    char v16 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A957308);
    sub_26272E6D4(&qword_26A957488, &qword_26A957308);
    sub_26276FD20();
    char v15 = 2;
    sub_26276FCC0();
    char v14 = 3;
    sub_26276FCC0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_26272DC20()
{
  unint64_t result = qword_26A957480;
  if (!qword_26A957480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957480);
  }
  return result;
}

uint64_t EmbeddingItem.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957490);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_26272DC20();
  sub_26276FE30();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v25 = 0;
  uint64_t v9 = sub_26276FCA0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957308);
  char v24 = 1;
  sub_26272E6D4(&qword_26A957498, &qword_26A957308);
  sub_26276FC90();
  uint64_t v10 = v21;
  char v23 = 2;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_26276FC30();
  uint64_t v20 = v11;
  char v22 = 3;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_26276FC30();
  uint64_t v14 = v13;
  char v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v18 = v12;
  v15(v8, v5);
  swift_bridgeObjectRetain();
  *a2 = v9;
  a2[1] = v10;
  uint64_t v16 = v20;
  a2[2] = v19;
  a2[3] = v16;
  a2[4] = v18;
  a2[5] = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_26272DF68@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return EmbeddingItem.init(from:)(a1, a2);
}

uint64_t sub_26272DF80(void *a1)
{
  return EmbeddingItem.encode(to:)(a1);
}

uint64_t NNScore.topKScores.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t NNScore.topKIndices.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t NNScore.k.getter()
{
  if (*(void *)(v0[1] + 16) >= *(void *)(*v0 + 16)) {
    return *(void *)(*v0 + 16);
  }
  else {
    return *(void *)(v0[1] + 16);
  }
}

BOOL static NNScore.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = (void *)a1[1];
  long long v3 = (void *)a2[1];
  if (!sub_26272E01C(*a1, *a2)) {
    return 0;
  }
  return sub_26272E090(v2, v3);
}

BOOL sub_26272E01C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(float *)(a1 + 32) != *(float *)(a2 + 32)) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  uint64_t v5 = (float *)(a1 + 36);
  uint64_t v6 = (float *)(a2 + 36);
  do
  {
    float v7 = *v5++;
    float v8 = v7;
    float v9 = *v6++;
    float v10 = v9;
    BOOL v12 = v4-- != 0;
    BOOL result = v8 == v10;
  }
  while (v8 == v10 && v12);
  return result;
}

BOOL sub_26272E090(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  uint64_t v5 = a1 + 5;
  uint64_t v6 = a2 + 5;
  do
  {
    uint64_t v8 = *v5++;
    uint64_t v7 = v8;
    uint64_t v10 = *v6++;
    uint64_t v9 = v10;
    BOOL v12 = v4-- != 0;
    BOOL result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

uint64_t sub_26272E104()
{
  if (*v0) {
    return 0x69646E494B706F74;
  }
  else {
    return 0x726F63534B706F74;
  }
}

uint64_t sub_26272E14C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_262730DAC(a1, a2);
  *a3 = result;
  return result;
}

void sub_26272E174(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_26272E180(uint64_t a1)
{
  unint64_t v2 = sub_26272E400();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_26272E1BC(uint64_t a1)
{
  unint64_t v2 = sub_26272E400();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t NNScore.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9574A0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v10 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_26272E400();
  sub_26276FE40();
  uint64_t v12 = v8;
  char v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957308);
  sub_26272E6D4(&qword_26A957488, &qword_26A957308);
  sub_26276FD20();
  if (!v2)
  {
    uint64_t v12 = v10;
    char v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9574B0);
    sub_26272E6D4(&qword_26A9574B8, &qword_26A9574B0);
    sub_26276FD20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_26272E400()
{
  unint64_t result = qword_26A9574A8;
  if (!qword_26A9574A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9574A8);
  }
  return result;
}

uint64_t NNScore.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9574C0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_26272E400();
  sub_26276FE30();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957308);
  char v13 = 0;
  sub_26272E6D4(&qword_26A957498, &qword_26A957308);
  sub_26276FC90();
  uint64_t v9 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9574B0);
  char v13 = 1;
  sub_26272E6D4(&qword_26A9574C8, &qword_26A9574B0);
  swift_bridgeObjectRetain();
  sub_26276FC90();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v10 = v14;
  *a2 = v9;
  a2[1] = v10;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_26272E6D4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_26272E734@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return NNScore.init(from:)(a1, a2);
}

uint64_t sub_26272E74C(void *a1)
{
  return NNScore.encode(to:)(a1);
}

BOOL sub_26272E764(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = (void *)a1[1];
  long long v3 = (void *)a2[1];
  if (!sub_26272E01C(*a1, *a2)) {
    return 0;
  }
  return sub_26272E090(v2, v3);
}

float ScoreStatistics.min.getter()
{
  return *(float *)v0;
}

float ScoreStatistics.max.getter()
{
  return *(float *)(v0 + 4);
}

float ScoreStatistics.mean.getter()
{
  return *(float *)(v0 + 8);
}

float ScoreStatistics.standardDeviation.getter()
{
  return *(float *)(v0 + 12);
}

float ScoreStatistics.median.getter()
{
  return *(float *)(v0 + 16);
}

void __swiftcall ScoreStatistics.init(nnScore:)(ZeoliteFramework::ScoreStatistics *__return_ptr retstr, ZeoliteFramework::NNScore nnScore)
{
  v14[1] = *MEMORY[0x263EF8340];
  uint64_t v3 = *(void *)nnScore.topKScores._rawValue;
  unint64_t v4 = (unint64_t)calculatePercentiles(_:percentiles:)(*(Swift::OpaquePointer *)nnScore.topKScores._rawValue, (Swift::OpaquePointer)&unk_270DC5B70);
  Swift::Float v5 = 0.0;
  if (v4)
  {
    if (!*(void *)(v4 + 16)) {
      __break(1u);
    }
    Swift::Float v5 = *(float *)(v4 + 32);
    swift_bridgeObjectRelease();
  }
  unint64_t v6 = sub_262726E4C(v3);
  if ((v6 & 0x100000000) != 0) {
    float v7 = 0.0;
  }
  else {
    float v7 = *(float *)&v6;
  }
  unint64_t v8 = sub_262726EA4(v3);
  if ((v8 & 0x100000000) != 0) {
    float v9 = 0.0;
  }
  else {
    float v9 = *(float *)&v8;
  }
  vDSP_Length v10 = *(void *)(v3 + 16);
  LODWORD(v14[0]) = 2143289344;
  swift_bridgeObjectRetain();
  vDSP_meanv((const float *)(v3 + 32), 1, (float *)v14, v10);
  swift_bridgeObjectRelease();
  Swift::Float v11 = *(float *)v14;
  v14[0] = v3;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957308);
  sub_26272E94C();
  sub_26276F100();
  Swift::Float v13 = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  retstr->min = v7;
  retstr->max = v9;
  retstr->mean = v11;
  retstr->standardDeviation = v13;
  retstr->median = v5;
}

unint64_t sub_26272E94C()
{
  unint64_t result = qword_26A9574D0;
  if (!qword_26A9574D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A957308);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9574D0);
  }
  return result;
}

uint64_t sub_26272E9AC()
{
  return sub_26276FE20();
}

uint64_t sub_26272E9F4()
{
  return sub_26276FE20();
}

unint64_t sub_26272EA38()
{
  unint64_t result = 7235949;
  switch(*v0)
  {
    case 1:
      unint64_t result = 7889261;
      break;
    case 2:
      unint64_t result = 1851876717;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x6E616964656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_26272EAC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_262730EC4(a1, a2);
  *a3 = result;
  return result;
}

void sub_26272EAF0(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_26272EAFC(uint64_t a1)
{
  unint64_t v2 = sub_26272F90C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_26272EB38(uint64_t a1)
{
  unint64_t v2 = sub_26272F90C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ScoreStatistics.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9574D8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_26272F90C();
  sub_26276FE40();
  char v13 = 0;
  sub_26276FD00();
  if (!v1)
  {
    char v12 = 1;
    sub_26276FD00();
    char v11 = 2;
    sub_26276FD00();
    char v10 = 3;
    sub_26276FD00();
    char v9 = 4;
    sub_26276FD00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ScoreStatistics.init(from:)@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9574E8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_26272F90C();
  sub_26276FE30();
  if (!v2)
  {
    v20[15] = 0;
    sub_26276FC70();
    int v10 = v9;
    v20[14] = 1;
    sub_26276FC70();
    int v12 = v11;
    v20[13] = 2;
    sub_26276FC70();
    int v14 = v13;
    v20[12] = 3;
    sub_26276FC70();
    int v17 = v16;
    v20[11] = 4;
    sub_26276FC70();
    int v19 = v18;
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
    a2[1] = v12;
    a2[2] = v14;
    a2[3] = v17;
    a2[4] = v19;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_26272EFA0@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return ScoreStatistics.init(from:)(a1, a2);
}

uint64_t sub_26272EFB8(void *a1)
{
  return ScoreStatistics.encode(to:)(a1);
}

uint64_t ConversationScore.conversationId.getter()
{
  return *(void *)v0;
}

uint64_t ConversationScore.nnScore.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  *a1 = *(void *)(v1 + 8);
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 ConversationScore.init(conversationId:nnScore:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = a1;
  __n128 result = *a2;
  *(__n128 *)(a3 + 8) = *a2;
  return result;
}

uint64_t sub_26272F028()
{
  if (*v0) {
    return 0x65726F63536E6ELL;
  }
  else {
    return 0x61737265766E6F63;
  }
}

uint64_t sub_26272F070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2627310A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_26272F098(uint64_t a1)
{
  unint64_t v2 = sub_26272F960();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_26272F0D4(uint64_t a1)
{
  unint64_t v2 = sub_26272F960();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ConversationScore.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9574F0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = *(_OWORD *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_26272F960();
  sub_26276FE40();
  LOBYTE(v10) = 0;
  sub_26276FD30();
  if (!v2)
  {
    long long v10 = v9;
    char v11 = 1;
    sub_26272F9B4();
    sub_26276FD20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ConversationScore.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957508);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_26272F960();
  sub_26276FE30();
  if (!v2)
  {
    LOBYTE(v12) = 0;
    uint64_t v9 = sub_26276FCA0();
    char v13 = 1;
    sub_26272FA08();
    sub_26276FC90();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    long long v10 = v12;
    *(void *)a2 = v9;
    *(_OWORD *)(a2 + 8) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_26272F454@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ConversationScore.init(from:)(a1, a2);
}

uint64_t sub_26272F46C(void *a1)
{
  return ConversationScore.encode(to:)(a1);
}

float PercentileScore.percentile.getter()
{
  return *(float *)v0;
}

float PercentileScore.score.getter()
{
  return *(float *)(v0 + 4);
}

ZeoliteFramework::PercentileScore __swiftcall PercentileScore.init(percentile:score:)(Swift::Float percentile, Swift::Float score)
{
  *uint64_t v2 = percentile;
  v2[1] = score;
  result.score = score;
  result.percentile = percentile;
  return result;
}

BOOL sub_26272F49C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_26272F4B4()
{
  if (*v0) {
    return 0x65726F6373;
  }
  else {
    return 0x69746E6563726570;
  }
}

uint64_t sub_26272F4F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2627311BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_26272F518(uint64_t a1)
{
  unint64_t v2 = sub_26272FA5C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_26272F554(uint64_t a1)
{
  unint64_t v2 = sub_26272FA5C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PercentileScore.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957518);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_26272FA5C();
  sub_26276FE40();
  v8[15] = 0;
  sub_26276FD00();
  if (!v1)
  {
    v8[14] = 1;
    sub_26276FD00();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t PercentileScore.init(from:)@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957528);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_26272FA5C();
  sub_26276FE30();
  if (!v2)
  {
    char v16 = 0;
    sub_26276FC70();
    int v10 = v9;
    char v15 = 1;
    sub_26276FC70();
    int v12 = v11;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_26272F89C@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return PercentileScore.init(from:)(a1, a2);
}

uint64_t sub_26272F8B4(void *a1)
{
  return PercentileScore.encode(to:)(a1);
}

BOOL _s16ZeoliteFramework15ScoreStatisticsV2eeoiySbAC_ACtFZ_0(float32x4_t *a1, float32x4_t *a2)
{
  return (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_f32(*a1, *a2)), 0xFuLL))) & 1) != 0
      && a1[1].f32[0] == a2[1].f32[0];
}

unint64_t sub_26272F90C()
{
  unint64_t result = qword_26A9574E0;
  if (!qword_26A9574E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9574E0);
  }
  return result;
}

unint64_t sub_26272F960()
{
  unint64_t result = qword_26A9574F8;
  if (!qword_26A9574F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9574F8);
  }
  return result;
}

unint64_t sub_26272F9B4()
{
  unint64_t result = qword_26A957500;
  if (!qword_26A957500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957500);
  }
  return result;
}

unint64_t sub_26272FA08()
{
  unint64_t result = qword_26A957510;
  if (!qword_26A957510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957510);
  }
  return result;
}

unint64_t sub_26272FA5C()
{
  unint64_t result = qword_26A957520;
  if (!qword_26A957520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957520);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for EmbeddingItem(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for EmbeddingItem()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for EmbeddingItem(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for EmbeddingItem(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for EmbeddingItem(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EmbeddingItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmbeddingItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmbeddingItem()
{
  return &type metadata for EmbeddingItem;
}

uint64_t destroy for NNScore()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s16ZeoliteFramework7NNScoreVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for NNScore(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

_OWORD *assignWithTake for NNScore(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NNScore(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NNScore(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NNScore()
{
  return &type metadata for NNScore;
}

__n128 __swift_memcpy20_4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ScoreStatistics(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 20)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ScoreStatistics(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 20) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ScoreStatistics()
{
  return &type metadata for ScoreStatistics;
}

uint64_t destroy for ConversationScore()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s16ZeoliteFramework17ConversationScoreVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ConversationScore(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ConversationScore(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ConversationScore(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ConversationScore(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConversationScore()
{
  return &type metadata for ConversationScore;
}

void *__swift_memcpy8_4(void *result, void *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for PercentileScore(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PercentileScore(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PercentileScore()
{
  return &type metadata for PercentileScore;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t sub_2627301A0(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_2627301AC(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PercentileScore.CodingKeys()
{
  return &type metadata for PercentileScore.CodingKeys;
}

ValueMetadata *type metadata accessor for ConversationScore.CodingKeys()
{
  return &type metadata for ConversationScore.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ScoreStatistics.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ScoreStatistics.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x262730334);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScoreStatistics.CodingKeys()
{
  return &type metadata for ScoreStatistics.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ClusterLabels(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s16ZeoliteFramework15PercentileScoreV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2627304C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NNScore.CodingKeys()
{
  return &type metadata for NNScore.CodingKeys;
}

uint64_t getEnumTagSinglePayload for EmbeddingItem.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for EmbeddingItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x26273065CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

unsigned char *sub_262730684(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for EmbeddingItem.CodingKeys()
{
  return &type metadata for EmbeddingItem.CodingKeys;
}

unint64_t sub_2627306A0()
{
  unint64_t result = qword_26A957530;
  if (!qword_26A957530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957530);
  }
  return result;
}

unint64_t sub_2627306F8()
{
  unint64_t result = qword_26A957538;
  if (!qword_26A957538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957538);
  }
  return result;
}

unint64_t sub_262730750()
{
  unint64_t result = qword_26A957540;
  if (!qword_26A957540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957540);
  }
  return result;
}

unint64_t sub_2627307A8()
{
  unint64_t result = qword_26A957548;
  if (!qword_26A957548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957548);
  }
  return result;
}

unint64_t sub_262730800()
{
  unint64_t result = qword_26A957550;
  if (!qword_26A957550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957550);
  }
  return result;
}

unint64_t sub_262730858()
{
  unint64_t result = qword_26A957558;
  if (!qword_26A957558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957558);
  }
  return result;
}

unint64_t sub_2627308B0()
{
  unint64_t result = qword_26A957560;
  if (!qword_26A957560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957560);
  }
  return result;
}

unint64_t sub_262730908()
{
  unint64_t result = qword_26A957568;
  if (!qword_26A957568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957568);
  }
  return result;
}

unint64_t sub_262730960()
{
  unint64_t result = qword_26A957570;
  if (!qword_26A957570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957570);
  }
  return result;
}

unint64_t sub_2627309B8()
{
  unint64_t result = qword_26A957578;
  if (!qword_26A957578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957578);
  }
  return result;
}

unint64_t sub_262730A10()
{
  unint64_t result = qword_26A957580;
  if (!qword_26A957580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957580);
  }
  return result;
}

unint64_t sub_262730A68()
{
  unint64_t result = qword_26A957588;
  if (!qword_26A957588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957588);
  }
  return result;
}

unint64_t sub_262730AC0()
{
  unint64_t result = qword_26A957590;
  if (!qword_26A957590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957590);
  }
  return result;
}

unint64_t sub_262730B18()
{
  unint64_t result = qword_26A957598;
  if (!qword_26A957598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957598);
  }
  return result;
}

unint64_t sub_262730B70()
{
  unint64_t result = qword_26A9575A0;
  if (!qword_26A9575A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9575A0);
  }
  return result;
}

uint64_t sub_262730BC4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64496D657469 && a2 == 0xE600000000000000;
  if (v2 || (sub_26276FDA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E69646465626D65 && a2 == 0xE900000000000067 || (sub_26276FDA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E69646465626D65 && a2 == 0xEE006C65646F4D67 || (sub_26276FDA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7954656372756F73 && a2 == 0xEA00000000006570)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_26276FDA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_262730DAC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726F63534B706F74 && a2 == 0xEA00000000007365;
  if (v2 || (sub_26276FDA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69646E494B706F74 && a2 == 0xEB00000000736563)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_26276FDA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_262730EC4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7235949 && a2 == 0xE300000000000000;
  if (v2 || (sub_26276FDA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7889261 && a2 == 0xE300000000000000 || (sub_26276FDA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1851876717 && a2 == 0xE400000000000000 || (sub_26276FDA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000262773870 || (sub_26276FDA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E616964656DLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_26276FDA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_2627310A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x61737265766E6F63 && a2 == 0xEE0064496E6F6974;
  if (v2 || (sub_26276FDA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65726F63536E6ELL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_26276FDA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2627311BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x69746E6563726570 && a2 == 0xEA0000000000656CLL;
  if (v2 || (sub_26276FDA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_26276FDA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2627312CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  return MEMORY[0x270FA2498](sub_2627312F0, 0, 0);
}

uint64_t sub_2627312F0()
{
  uint64_t v1 = sub_26276F950();
  v0[7] = 0;
  unsigned int v4 = (void *)v0[6];
  uint64_t v6 = *v4;
  uint64_t v5 = v4[1];
  if (v5 >= *(void *)(*v4 + 16))
  {
    uint64_t v8 = sub_26276F4B0();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = 1;
  }
  else
  {
    if (v5 < 0)
    {
      __break(1u);
      return MEMORY[0x270FA2498](v1, v2, v3);
    }
    uint64_t v7 = v0[3];
    uint64_t v8 = sub_26276F4B0();
    uint64_t v9 = *(void *)(v8 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v9 + 16))(v7, v6+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v5, v8);
    uint64_t v10 = 0;
    v4[1] = v5 + 1;
  }
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v9 + 56))(v0[3], v10, 1, v8);
  int v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_2627314FC()
{
  v0[2] = v0[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957690);
  swift_willThrowTypedImpl();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t InMemoryTensorLoader.init(_:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  a2[1] = 0;
  return result;
}

uint64_t InMemoryTensorLoader.makeAsyncIterator()@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

Swift::Int __swiftcall InMemoryTensorLoader.totalTensors()()
{
  return *(void *)(*(void *)v0 + 16);
}

uint64_t InMemoryTensorLoader.next()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_2627315C4, 0, 0);
}

uint64_t sub_2627315C4()
{
  uint64_t result = sub_26276F950();
  uint64_t v2 = (void *)v0[3];
  uint64_t v4 = *v2;
  uint64_t v3 = v2[1];
  if (v3 >= *(void *)(*v2 + 16))
  {
    uint64_t v6 = sub_26276F4B0();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = 1;
  }
  else
  {
    if (v3 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v5 = v0[2];
    uint64_t v6 = sub_26276F4B0();
    uint64_t v7 = *(void *)(v6 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v7 + 16))(v5, v4+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v3, v6);
    uint64_t v8 = 0;
    v2[1] = v3 + 1;
  }
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v7 + 56))(v0[2], v8, 1, v6);
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_26273176C(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_262734B24;
  return MEMORY[0x270FA2498](sub_2627315C4, 0, 0);
}

uint64_t sub_262731818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_26A957688 + dword_26A957688);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_2627318E4;
  return v10(a1, a2, a3);
}

uint64_t sub_2627318E4()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0) {
    **(void **)(v2 + 16) = v0;
  }
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
  return v4();
}

void sub_262731A04(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
}

uint64_t BatchedTensorLoader.filePath.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BatchedTensorLoader.batchSize.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t BatchedTensorLoader.init(filePath:batchSize:fieldKeyPath:scalarType:computeDevice:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  char v16 = (int *)type metadata accessor for BatchedTensorLoader();
  *(void *)((char *)a8 + v16[15]) = 0;
  int v17 = (char *)a8 + v16[16];
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957390);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  *(void *)((char *)a8 + v16[17]) = 0;
  *a8 = a1;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  a8[4] = a5;
  a8[5] = a6;
  uint64_t v19 = (uint64_t)a8 + v16[14];
  return sub_262731B88(a7, v19);
}

uint64_t type metadata accessor for BatchedTensorLoader()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_262731B88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9575B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t BatchedTensorLoader.makeAsyncIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(a2, v2, a1);
}

uint64_t BatchedTensorLoader.next()(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9575B0);
  v3[8] = swift_task_alloc();
  sub_26276F330();
  v3[9] = swift_task_alloc();
  uint64_t v5 = *(void *)(a2 + 16);
  v3[10] = v5;
  uint64_t v6 = sub_26276FA60();
  v3[11] = v6;
  v3[12] = *(void *)(v6 - 8);
  v3[13] = swift_task_alloc();
  v3[14] = *(void *)(v5 - 8);
  v3[15] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573A0);
  v3[16] = v7;
  v3[17] = *(void *)(v7 - 8);
  v3[18] = swift_task_alloc();
  uint64_t v8 = sub_26276FA10();
  v3[19] = v8;
  v3[20] = *(void *)(v8 - 8);
  v3[21] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573A8);
  v3[22] = swift_task_alloc();
  uint64_t v9 = sub_26276F250();
  v3[23] = v9;
  v3[24] = *(void *)(v9 - 8);
  v3[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573B0);
  v3[26] = swift_task_alloc();
  uint64_t v10 = sub_26276F280();
  v3[27] = v10;
  v3[28] = *(void *)(v10 - 8);
  v3[29] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_262731FAC, 0, 0);
}

uint64_t sub_262731FAC()
{
  sub_26276F950();
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(int *)(*(void *)(v0 + 48) + 68);
  *(_DWORD *)(v0 + 328) = v2;
  if (!*(void *)(v1 + v2))
  {
    uint64_t v20 = *(void *)(v0 + 224);
    uint64_t v19 = *(void *)(v0 + 232);
    uint64_t v22 = *(void *)(v0 + 208);
    uint64_t v21 = *(void *)(v0 + 216);
    uint64_t v24 = *(void *)(v0 + 192);
    uint64_t v23 = *(void *)(v0 + 200);
    uint64_t v25 = *(void *)(v0 + 184);
    sub_26272C158();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v22, 1, 1, v21);
    (*(void (**)(uint64_t, void, uint64_t))(v24 + 104))(v23, *MEMORY[0x263F06E50], v25);
    swift_bridgeObjectRetain();
    sub_26276F270();
    id v26 = sub_26272B65C(v19);
    id v31 = v26;
    if (!v26)
    {
LABEL_16:
      uint64_t v41 = *(void *)(v0 + 40);
      uint64_t v42 = sub_26276F4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v41, 1, 1, v42);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v43 = *(uint64_t (**)(void))(v0 + 8);
      return v43();
    }
    uint64_t v32 = *(void *)(v0 + 168);
    uint64_t v33 = *(void *)(v0 + 160);
    uint64_t v45 = *(void *)(v0 + 152);
    uint64_t v35 = *(void *)(v0 + 136);
    uint64_t v34 = *(void *)(v0 + 144);
    uint64_t v46 = *(void *)(v0 + 128);
    uint64_t v47 = *(void *)(v0 + 176);
    uint64_t v36 = *(void *)(v0 + 56);
    uint64_t v48 = *(void *)(v0 + 48);
    uint64_t v37 = *(int *)(v48 + 60);
    id v38 = *(void **)(v36 + v37);
    id v39 = v26;

    *(void *)(v36 + v37) = v31;
    sub_26276FA20();
    sub_262733410(qword_26A9573C8, MEMORY[0x263F07C08]);
    sub_26276F960();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v45);
    sub_26276F220();

    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v46);
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957390);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v47, 0, 1, v40);
    sub_26272C1F0(v47, v36 + *(int *)(v48 + 64));
    uint64_t v1 = *(void *)(v0 + 56);
  }
  *(void *)(v0 + 16) = MEMORY[0x263F8EE78];
  uint64_t v3 = *(void *)(v1 + 16);
  *(void *)(v0 + 240) = v3;
  if (v3 < 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (!v3) {
    goto LABEL_5;
  }
  uint64_t v4 = *(int *)(*(void *)(v0 + 48) + 64);
  *(_DWORD *)(v0 + 332) = v4;
  uint64_t v5 = v1 + v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957390);
  *(void *)(v0 + 248) = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  *(void *)(v0 + 256) = v8;
  *(void *)(v0 + 264) = (v7 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v8(v5, 1, v6))
  {
LABEL_5:
    uint64_t v9 = *(int *)(v0 + 328);
    uint64_t v10 = *(void *)(v1 + v9);
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (!v11)
    {
      *(void *)(v1 + v9) = v12;
      uint64_t v13 = *(void *)(v0 + 48);
      uint64_t v14 = *(void *)(v0 + 56);
      swift_bridgeObjectRelease();
      char v15 = *(void **)(v14 + *(int *)(v13 + 60));
      if (v15)
      {
        *(void *)(v0 + 24) = 0;
        unsigned int v16 = objc_msgSend(v15, sel_closeAndReturnError_, v0 + 24);
        int v17 = *(void **)(v0 + 24);
        if (v16)
        {
          id v18 = v17;
        }
        else
        {
          id v27 = v17;
          uint64_t v28 = (void *)sub_26276F240();

          swift_willThrow();
        }
      }
      goto LABEL_16;
    }
LABEL_20:
    __break(1u);
  }
  *(void *)(v0 + 280) = 0;
  *(void *)(v0 + 288) = 1;
  *(void *)(v0 + 272) = 0;
  unint64_t v29 = (void *)swift_task_alloc();
  *(void *)(v0 + 296) = v29;
  *unint64_t v29 = v0;
  v29[1] = sub_262732540;
  uint64_t v30 = *(void *)(v0 + 248);
  return MEMORY[0x270EEEE80](v30);
}

uint64_t sub_262732540(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[38] = a1;
  v4[39] = a2;
  v4[40] = v2;
  swift_task_dealloc();
  if (v2)
  {

    uint64_t v5 = sub_262732BEC;
  }
  else
  {
    uint64_t v5 = sub_26273268C;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_26273268C()
{
  unint64_t v1 = *(void *)(v0 + 312);
  if (!v1) {
    goto LABEL_4;
  }
  uint64_t v2 = *(void **)(v0 + 320);
  unint64_t v3 = *(void *)(v0 + 304);
  sub_26276F190();
  swift_allocObject();
  sub_26276F180();
  uint64_t v4 = sub_26272B7B4(v3, v1);
  unint64_t v6 = v5;
  sub_26276F170();
  if (v2)
  {
    uint64_t v7 = *(void *)(v0 + 104);
    uint64_t v8 = *(void *)(v0 + 112);
    uint64_t v9 = *(void *)(v0 + 88);
    uint64_t v10 = *(void *)(v0 + 96);
    uint64_t v11 = *(void *)(v0 + 80);

    sub_26272C100(v4, v6);
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v7, 1, 1, v11);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v7, v9);
LABEL_4:
    uint64_t v12 = *(void *)(v0 + 280);
    uint64_t v13 = (uint64_t *)(v0 + 272);
LABEL_5:
    uint64_t v14 = *v13;
LABEL_6:
    uint64_t v15 = *(int *)(v0 + 328);
    uint64_t v16 = *(void *)(v0 + 56);
    uint64_t v17 = *(void *)(v16 + v15);
    BOOL v18 = __OFADD__(v17, 1);
    uint64_t v19 = v17 + 1;
    if (v18) {
      __break(1u);
    }
    *(void *)(v16 + v15) = v19;
    if (v14 < 1)
    {
      uint64_t v26 = *(void *)(v0 + 48);
      uint64_t v27 = *(void *)(v0 + 56);
      swift_bridgeObjectRelease();
      uint64_t v28 = *(void **)(v27 + *(int *)(v26 + 60));
      if (v28)
      {
        *(void *)(v0 + 24) = 0;
        unsigned int v29 = objc_msgSend(v28, sel_closeAndReturnError_, v0 + 24);
        uint64_t v30 = *(void **)(v0 + 24);
        if (v29)
        {
          id v31 = v30;
        }
        else
        {
          id v43 = v30;
          uint64_t v44 = (void *)sub_26276F240();

          swift_willThrow();
        }
      }
      uint64_t v45 = *(void *)(v0 + 40);
      uint64_t v46 = sub_26276F4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
    }
    else
    {
      uint64_t v20 = *(void *)(v0 + 64);
      uint64_t v22 = *(void *)(v0 + 48);
      uint64_t v21 = *(void *)(v0 + 56);
      uint64_t v23 = *(void *)(v0 + 40);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A957310);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_2627710F0;
      *(void *)(v24 + 32) = v14;
      *(void *)(v24 + 40) = v12;
      sub_26276F340();
      sub_262732E88(*(void *)(v0 + 16));
      swift_bridgeObjectRelease();
      sub_262732F7C(v21 + *(int *)(v22 + 56), v20);
      sub_26276F400();
      uint64_t v25 = sub_26276F4B0();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v23, 0, 1, v25);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v47 = *(uint64_t (**)(void))(v0 + 8);
    return v47();
  }
  uint64_t v49 = *(void *)(v0 + 280);
  uint64_t v50 = *(void *)(v0 + 272);
  uint64_t v33 = *(void *)(v0 + 112);
  uint64_t v32 = *(void *)(v0 + 120);
  uint64_t v34 = *(void *)(v0 + 104);
  uint64_t v35 = *(void *)(v0 + 80);
  sub_26272C100(v4, v6);
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56))(v34, 0, 1, v35);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v32, v34, v35);
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  uint64_t v12 = *(void *)(*(void *)(v0 + 32) + 16);
  if (v50 && v49 != v12)
  {
    uint64_t v13 = (uint64_t *)(v0 + 272);
    (*(void (**)(void, void))(*(void *)(v0 + 112) + 8))(*(void *)(v0 + 120), *(void *)(v0 + 80));
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v0 + 280);
    goto LABEL_5;
  }
  uint64_t v13 = (uint64_t *)(v0 + 240);
  uint64_t v36 = *(void *)(v0 + 240);
  uint64_t v37 = *(void *)(v0 + 288);
  uint64_t v39 = *(void *)(v0 + 112);
  uint64_t v38 = *(void *)(v0 + 120);
  uint64_t v40 = *(void *)(v0 + 80);
  sub_2627330EC(*(void *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
  if (v37 == v36) {
    goto LABEL_5;
  }
  uint64_t v14 = *(void *)(v0 + 288);
  if ((*(unsigned int (**)(void, uint64_t, void))(v0 + 256))(*(void *)(v0 + 56) + *(int *)(v0 + 332), 1, *(void *)(v0 + 248)))
  {
    goto LABEL_6;
  }
  *(void *)(v0 + 280) = v12;
  *(void *)(v0 + 288) = v14 + 1;
  *(void *)(v0 + 272) = v14;
  uint64_t v41 = (void *)swift_task_alloc();
  *(void *)(v0 + 296) = v41;
  *uint64_t v41 = v0;
  v41[1] = sub_262732540;
  uint64_t v42 = *(void *)(v0 + 248);
  return MEMORY[0x270EEEE80](v42);
}

uint64_t sub_262732BEC()
{
  uint64_t v1 = *(int *)(v0 + 328);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v2 + v1);
  BOOL v4 = __OFADD__(v3, 1);
  uint64_t v5 = v3 + 1;
  if (v4) {
    __break(1u);
  }
  uint64_t v7 = *(void *)(v0 + 272);
  uint64_t v6 = *(void *)(v0 + 280);
  *(void *)(v2 + v1) = v5;
  if (v7 < 1)
  {
    uint64_t v14 = *(void *)(v0 + 48);
    uint64_t v15 = *(void *)(v0 + 56);
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void **)(v15 + *(int *)(v14 + 60));
    if (v16)
    {
      *(void *)(v0 + 24) = 0;
      unsigned int v17 = objc_msgSend(v16, sel_closeAndReturnError_, v0 + 24);
      BOOL v18 = *(void **)(v0 + 24);
      if (v17)
      {
        id v19 = v18;
      }
      else
      {
        id v20 = v18;
        uint64_t v21 = (void *)sub_26276F240();

        swift_willThrow();
      }
    }
    uint64_t v22 = *(void *)(v0 + 40);
    uint64_t v23 = sub_26276F4B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 64);
    uint64_t v10 = *(void *)(v0 + 48);
    uint64_t v9 = *(void *)(v0 + 56);
    uint64_t v11 = *(void *)(v0 + 40);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A957310);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_2627710F0;
    *(void *)(v12 + 32) = v7;
    *(void *)(v12 + 40) = v6;
    sub_26276F340();
    sub_262732E88(*(void *)(v0 + 16));
    swift_bridgeObjectRelease();
    sub_262732F7C(v9 + *(int *)(v10 + 56), v8);
    sub_26276F400();
    uint64_t v13 = sub_26276F4B0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v11, 0, 1, v13);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_262732E88(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_26273ABE8(0, v1, 0);
    uint64_t v2 = v14;
    BOOL v4 = (int *)(a1 + 32);
    uint64_t v5 = MEMORY[0x263F8D5C8];
    uint64_t v6 = MEMORY[0x263F585A0];
    do
    {
      int v7 = *v4;
      uint64_t v14 = v2;
      unint64_t v9 = *(void *)(v2 + 16);
      unint64_t v8 = *(void *)(v2 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_26273ABE8(v8 > 1, v9 + 1, 1);
        uint64_t v2 = v14;
      }
      uint64_t v12 = v5;
      uint64_t v13 = v6;
      LODWORD(v11) = v7;
      *(void *)(v2 + 16) = v9 + 1;
      sub_26272D6E0(&v11, v2 + 40 * v9 + 32);
      ++v4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_262732F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9575B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_262732FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_26272BD84;
  return BatchedTensorLoader.next()(a1, a2);
}

uint64_t sub_26273308C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  BatchedTensorLoader.makeAsyncIterator()(a1, a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);
  return v4(v2, a1);
}

uint64_t sub_2627330EC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  uint64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    uint64_t v14 = v4 + v2;
  }
  else {
    uint64_t v14 = v4;
  }
  uint64_t v3 = sub_262727378(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  if ((*(void *)(v3 + 24) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (void *)(v3 + 4 * v8 + 32);
  if (a1 + 32 < (unint64_t)v9 + 4 * v2 && (unint64_t)v9 < a1 + 32 + 4 * v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), 4 * v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *int64_t v1 = v3;
    return result;
  }
  uint64_t v11 = *(void *)(v3 + 16);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *(void *)(v3 + 16) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_26276FC00();
  __break(1u);
  return result;
}

unint64_t sub_262733234(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_262733264();
  unint64_t result = sub_2627332B8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_262733264()
{
  unint64_t result = qword_26A9575C0;
  if (!qword_26A9575C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9575C0);
  }
  return result;
}

unint64_t sub_2627332B8()
{
  unint64_t result = qword_26A9575C8[0];
  if (!qword_26A9575C8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A9575C8);
  }
  return result;
}

uint64_t sub_262733310(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_262733370()
{
  return swift_getWitnessTable();
}

uint64_t sub_26273338C(uint64_t a1)
{
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x263F5E5A0];
  *(void *)(a1 + 8) = sub_262733410(&qword_26A9575F0, MEMORY[0x263F5E5A0]);
  uint64_t result = sub_262733410(qword_26A9575F8, v2);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_262733410(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for InMemoryTensorLoader(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for InMemoryTensorLoader()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for InMemoryTensorLoader(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

void *assignWithTake for InMemoryTensorLoader(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for InMemoryTensorLoader()
{
  return &type metadata for InMemoryTensorLoader;
}

uint64_t sub_262733530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 56);
}

void sub_262733538()
{
  sub_262734798();
  if (v0 <= 0x3F)
  {
    sub_26272CD68();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_26273363C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = a2[2];
    uint64_t v8 = a2[5];
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    uint64_t v9 = a3[14];
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (char *)a2 + v9;
    *(void *)(a1 + 40) = v8;
    uint64_t v12 = sub_26276F360();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_retain();
    if (v14(v11, 1, v12))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9575B0);
      memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v17 = a3[15];
    uint64_t v18 = a3[16];
    id v19 = *(void **)((char *)a2 + v17);
    *(void *)((char *)v4 + v17) = v19;
    id v20 = (char *)v4 + v18;
    uint64_t v21 = (char *)a2 + v18;
    id v22 = v19;
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957390);
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v21, 1, v23))
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573A8);
      memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v20, v21, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v20, 0, 1, v23);
    }
    *(void *)((char *)v4 + a3[17]) = *(uint64_t *)((char *)a2 + a3[17]);
  }
  return v4;
}

uint64_t sub_2627338E4(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = a1 + a2[14];
  uint64_t v5 = sub_26276F360();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }

  uint64_t v7 = a1 + a2[16];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957390);
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

uint64_t sub_262733A60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = a3[14];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_26276F360();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_retain();
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9575B0);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v15 = a3[15];
  uint64_t v16 = a3[16];
  uint64_t v17 = *(void **)(a2 + v15);
  *(void *)(a1 + v15) = v17;
  uint64_t v18 = (void *)(a1 + v16);
  id v19 = (const void *)(a2 + v16);
  id v20 = v17;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957390);
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v21))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573A8);
    memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v22 + 16))(v18, v19, v21);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, v21);
  }
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  return a1;
}

uint64_t sub_262733CB8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v6 = a3[14];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_26276F360();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9575B0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[15];
  uint64_t v16 = *(void **)(a1 + v15);
  uint64_t v17 = *(void **)(a2 + v15);
  *(void *)(a1 + v15) = v17;
  id v18 = v17;

  uint64_t v19 = a3[16];
  id v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957390);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v23 + 24))(v20, v21, v22);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v23 + 8))(v20, v22);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573A8);
    memcpy(v20, v21, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v23 + 16))(v20, v21, v22);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
LABEL_13:
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  return a1;
}

uint64_t sub_262733FDC(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = a3[14];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_26276F360();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9575B0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957390);
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573A8);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  return a1;
}

uint64_t sub_262734208(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v8 = a3[14];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_26276F360();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9575B0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v17 = a3[15];
  uint64_t v18 = *(void **)(a1 + v17);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);

  uint64_t v19 = a3[16];
  id v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957390);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v23 + 40))(v20, v21, v22);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v23 + 8))(v20, v22);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573A8);
    memcpy(v20, v21, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v23 + 32))(v20, v21, v22);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
LABEL_13:
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  return a1;
}

uint64_t sub_262734508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_26273451C);
}

uint64_t sub_26273451C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9575B0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 56);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573A8);
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 64);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_262734650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_262734664);
}

uint64_t sub_262734664(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9575B0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 56);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573A8);
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 64);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_262734798()
{
  if (!qword_26A957680)
  {
    sub_26276F360();
    unint64_t v0 = sub_26276FA60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A957680);
    }
  }
}

uint64_t sub_2627347F0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v7 = *v4;
  uint64_t v8 = *(void *)(*v4 + 16);
  uint64_t v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (!result || v9 > *(void *)(v7 + 24) >> 1) {
    goto LABEL_8;
  }
  if (v5 == a3)
  {
    while (v6 > 0)
    {
      __break(1u);
LABEL_8:
      if (v8 <= v9) {
        uint64_t v13 = v8 + v6;
      }
      else {
        uint64_t v13 = v8;
      }
      uint64_t result = sub_262727378(result, v13, 1, v7);
      uint64_t v7 = result;
      if (v5 != a3) {
        goto LABEL_12;
      }
    }
    goto LABEL_22;
  }
LABEL_12:
  uint64_t v14 = *(void *)(v7 + 16);
  if ((*(void *)(v7 + 24) >> 1) - v14 < v6) {
    goto LABEL_25;
  }
  if (v6 < 0) {
    goto LABEL_27;
  }
  uint64_t v15 = (char *)(v7 + 4 * v14 + 32);
  uint64_t v16 = (char *)(a2 + 4 * a3);
  if (v16 < &v15[4 * v6] && v15 < &v16[4 * v6]) {
    goto LABEL_27;
  }
  uint64_t result = (uint64_t)memcpy(v15, v16, 4 * v6);
  if (!v6)
  {
LABEL_22:
    uint64_t *v4 = v7;
    return result;
  }
  uint64_t v18 = *(void *)(v7 + 16);
  BOOL v19 = __OFADD__(v18, v6);
  uint64_t v20 = v18 + v6;
  if (!v19)
  {
    *(void *)(v7 + 16) = v20;
    goto LABEL_22;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  uint64_t result = sub_26276FC00();
  __break(1u);
  return result;
}

char *sub_262734988(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v7 = *v4;
  int64_t v8 = *((void *)*v4 + 2);
  int64_t v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!result || v9 > *((void *)v7 + 3) >> 1) {
    goto LABEL_8;
  }
  if (v5 == a3)
  {
    while (v6 > 0)
    {
      __break(1u);
LABEL_8:
      if (v8 <= v9) {
        int64_t v13 = v8 + v6;
      }
      else {
        int64_t v13 = v8;
      }
      uint64_t result = sub_262727700(result, v13, 1, v7);
      uint64_t v7 = result;
      if (v5 != a3) {
        goto LABEL_12;
      }
    }
    goto LABEL_22;
  }
LABEL_12:
  uint64_t v14 = *((void *)v7 + 2);
  if ((*((void *)v7 + 3) >> 1) - v14 < v6) {
    goto LABEL_25;
  }
  if (v6 < 0) {
    goto LABEL_27;
  }
  uint64_t v15 = &v7[4 * v14 + 32];
  uint64_t v16 = (char *)(a2 + 4 * a3);
  if (v16 < &v15[4 * v6] && v15 < &v16[4 * v6]) {
    goto LABEL_27;
  }
  uint64_t result = (char *)memcpy(v15, v16, 4 * v6);
  if (!v6)
  {
LABEL_22:
    uint64_t *v4 = v7;
    return result;
  }
  uint64_t v18 = *((void *)v7 + 2);
  BOOL v19 = __OFADD__(v18, v6);
  uint64_t v20 = v18 + v6;
  if (!v19)
  {
    *((void *)v7 + 2) = v20;
    goto LABEL_22;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  uint64_t result = (char *)sub_26276FC00();
  __break(1u);
  return result;
}

ZeoliteFramework::ClusterLabels_optional __swiftcall ClusterLabels.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == -2) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (rawValue == -1) {
    char v2 = 0;
  }
  *uint64_t v1 = v2;
  return (ZeoliteFramework::ClusterLabels_optional)rawValue;
}

void *static ClusterLabels.allCases.getter()
{
  return &unk_270DC5B98;
}

uint64_t ClusterLabels.rawValue.getter()
{
  if (*v0) {
    return -2;
  }
  else {
    return -1;
  }
}

uint64_t sub_262734B64()
{
  return sub_26276FE20();
}

uint64_t sub_262734BB4()
{
  return sub_26276FE10();
}

uint64_t sub_262734BEC()
{
  return sub_26276FE20();
}

void *sub_262734C38@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == -2) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result == -1) {
    char v3 = 0;
  }
  else {
    char v3 = v2;
  }
  *a2 = v3;
  return result;
}

void sub_262734C58(uint64_t *a1@<X8>)
{
  uint64_t v2 = -2;
  if (!*v1) {
    uint64_t v2 = -1;
  }
  *a1 = v2;
}

void sub_262734C70(void *a1@<X8>)
{
  *a1 = &unk_270DC5BC0;
}

void DBSCAN.metric.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

float DBSCAN.epsilon.getter()
{
  swift_beginAccess();
  return *(float *)(v0 + 20);
}

uint64_t DBSCAN.epsilon.setter(float a1)
{
  uint64_t result = swift_beginAccess();
  *(float *)(v1 + 20) = a1;
  return result;
}

uint64_t (*DBSCAN.epsilon.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DBSCAN.minSamples.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 24);
}

uint64_t DBSCAN.minSamples.setter(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*DBSCAN.minSamples.modify())()
{
  return j__swift_endAccess;
}

uint64_t DBSCAN.__allocating_init(epsilon:minSamples:metric:)(uint64_t a1, char *a2, float a3)
{
  uint64_t result = swift_allocObject();
  char v7 = *a2;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(float *)(result + 20) = a3;
  *(void *)(result + 24) = a1;
  *(unsigned char *)(result + 16) = v7;
  return result;
}

uint64_t DBSCAN.init(epsilon:minSamples:metric:)(uint64_t a1, char *a2, float a3)
{
  char v4 = *a2;
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(float *)(v3 + 20) = a3;
  *(void *)(v3 + 24) = a1;
  *(unsigned char *)(v3 + 16) = v4;
  return v3;
}

uint64_t DBSCAN.setRangeQueryFunction(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 32);
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  sub_262734EDC(v3);
  return swift_retain();
}

uint64_t sub_262734EDC(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_262734EEC(uint64_t a1, unint64_t a2, float a3)
{
  if ((a2 & 0x8000000000000000) != 0) {
    return MEMORY[0x263F8EE88];
  }
  unint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x263F8EE88];
  if (v6 > a2)
  {
    switch(*(unsigned char *)(v3 + 16))
    {
      case 2:
        swift_bridgeObjectRelease();
        goto LABEL_7;
      default:
        char v9 = sub_26276FDA0();
        swift_bridgeObjectRelease();
        if (v9) {
LABEL_7:
        }
          a3 = a3 * a3;
        uint64_t v26 = v7;
        uint64_t v10 = *(uint64_t (**)(uint64_t, float))(v3 + 32);
        if (v10)
        {
          sub_2627361D4((uint64_t)v10);
          uint64_t v11 = swift_bridgeObjectRetain();
          uint64_t v12 = v10(v11, a3);
          sub_262734EDC((uint64_t)v10);
        }
        else
        {
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v12 = sub_262736034(0, v6, v3, a1, a2);
          swift_release();
        }
        swift_bridgeObjectRelease();
        uint64_t v13 = *(void *)(v12 + 16);
        if (v13)
        {
          uint64_t v14 = (float *)(v12 + 40);
          uint64_t v15 = MEMORY[0x263F8EE78];
          do
          {
            uint64_t v19 = *((void *)v14 - 1);
            float v20 = *v14;
            if (v19 != a2 && v20 <= a3)
            {
              uint64_t v25 = v15;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_26273AC08(0, *(void *)(v15 + 16) + 1, 1);
                uint64_t v15 = v25;
              }
              unint64_t v17 = *(void *)(v15 + 16);
              unint64_t v16 = *(void *)(v15 + 24);
              if (v17 >= v16 >> 1)
              {
                sub_26273AC08(v16 > 1, v17 + 1, 1);
                uint64_t v15 = v25;
              }
              *(void *)(v15 + 16) = v17 + 1;
              uint64_t v18 = v15 + 16 * v17;
              *(void *)(v18 + 32) = v19;
              *(float *)(v18 + 40) = v20;
            }
            v14 += 4;
            --v13;
          }
          while (v13);
        }
        else
        {
          uint64_t v15 = MEMORY[0x263F8EE78];
        }
        swift_bridgeObjectRelease();
        uint64_t v22 = *(void *)(v15 + 16);
        if (v22)
        {
          swift_retain();
          uint64_t v23 = 32;
          do
          {
            sub_262749810(&v25, *(void *)(v15 + v23));
            v23 += 16;
            --v22;
          }
          while (v22);
          swift_release();
        }
        swift_release();
        uint64_t v7 = v26;
        break;
    }
  }
  return v7;
}

Swift::OpaquePointer_optional __swiftcall DBSCAN.cluster(points:)(Swift::OpaquePointer points)
{
  unint64_t v2 = *((void *)points._rawValue + 2);
  if (v2)
  {
    uint64_t v3 = v1;
    char v4 = (void *)sub_262735600(0xFFFFFFFFFFFFFFFELL, v2);
    swift_beginAccess();
    uint64_t isUniquelyReferenced_nonNull_native = swift_beginAccess();
    uint64_t v7 = 0;
    unint64_t v8 = 0;
    unint64_t v25 = v2;
    while (1)
    {
      if (v8 >= v4[2]) {
        goto LABEL_58;
      }
      if (v4[v8 + 4] == -2) {
        break;
      }
LABEL_4:
      if (++v8 == v2) {
        goto LABEL_51;
      }
    }
    uint64_t isUniquelyReferenced_nonNull_native = sub_262734EEC((uint64_t)points._rawValue, v8, *(float *)(v3 + 20));
    uint64_t v9 = isUniquelyReferenced_nonNull_native;
    if (*(void *)(isUniquelyReferenced_nonNull_native + 16) < *(void *)(v3 + 24))
    {
      swift_bridgeObjectRelease();
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_262735D9C(v4);
        char v4 = (void *)isUniquelyReferenced_nonNull_native;
      }
      if (v8 >= v4[2]) {
        goto LABEL_59;
      }
      v4[v8 + 4] = -1;
      goto LABEL_4;
    }
    if (__OFADD__(v7++, 1)) {
      goto LABEL_60;
    }
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_262735D9C(v4);
      char v4 = (void *)isUniquelyReferenced_nonNull_native;
    }
    if (v8 < v4[2])
    {
      uint64_t v11 = v4 + 4;
      v4[v8 + 4] = v7;
      while (1)
      {
        if (!*(void *)(v9 + 16))
        {
          uint64_t isUniquelyReferenced_nonNull_native = swift_bridgeObjectRelease();
          unint64_t v2 = v25;
          goto LABEL_4;
        }
        unint64_t v12 = *(void *)(v9 + 56);
        if (v12) {
          break;
        }
        uint64_t v20 = *(unsigned __int8 *)(v9 + 32);
        unsigned int v21 = v20 & 0x3F;
        unint64_t v14 = 1 << v20;
        if (v21 < 7) {
          goto LABEL_21;
        }
        unint64_t v12 = *(void *)(v9 + 64);
        if (v12)
        {
          uint64_t v13 = 1;
          goto LABEL_20;
        }
        if (v21 < 8) {
          goto LABEL_21;
        }
        unint64_t v12 = *(void *)(v9 + 72);
        if (v12)
        {
          uint64_t v13 = 2;
          goto LABEL_20;
        }
        unint64_t v12 = *(void *)(v9 + 80);
        if (v12)
        {
          uint64_t v13 = 3;
          goto LABEL_20;
        }
        uint64_t v22 = 0;
        unint64_t v23 = (v14 + 63) >> 6;
        if (v23 <= 4) {
          unint64_t v23 = 4;
        }
        unint64_t v24 = v23 - 4;
        while (v24 != v22)
        {
          unint64_t v12 = *(void *)(v9 + 88 + 8 * v22++);
          if (v12)
          {
            uint64_t v13 = v22 + 3;
            goto LABEL_20;
          }
        }
LABEL_21:
        int v15 = *(_DWORD *)(v9 + 36);
        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((v14 & 0x8000000000000000) != 0 || (uint64_t)v14 >= 1 << *(unsigned char *)(v9 + 32))
        {
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
          goto LABEL_61;
        }
        if (((*(void *)(v9 + 56 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          goto LABEL_53;
        }
        if (v15 != *(_DWORD *)(v9 + 36)) {
          goto LABEL_54;
        }
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_262735A90();
        }
        unint64_t v16 = *(void *)(*(void *)(v9 + 48) + 8 * v14);
        sub_262735C14(v14);
        uint64_t isUniquelyReferenced_nonNull_native = swift_bridgeObjectRelease();
        if ((v16 & 0x8000000000000000) != 0) {
          goto LABEL_55;
        }
        unint64_t v17 = v4[2];
        if (v16 >= v17) {
          goto LABEL_56;
        }
        uint64_t v18 = v11[v16];
        if (v18 == -1)
        {
          v11[v16] = v7;
          unint64_t v17 = v4[2];
          uint64_t v18 = v7;
        }
        if (v16 >= v17) {
          goto LABEL_57;
        }
        if (v18 == -2)
        {
          v11[v16] = v7;
          uint64_t v19 = sub_262734EEC((uint64_t)points._rawValue, v16, *(float *)(v3 + 20));
          if (*(void *)(v19 + 16) >= *(void *)(v3 + 24)) {
            sub_2627358DC(v19);
          }
          else {
            swift_bridgeObjectRelease();
          }
        }
      }
      uint64_t v13 = 0;
LABEL_20:
      unint64_t v14 = __clz(__rbit64(v12)) + (v13 << 6);
      goto LABEL_21;
    }
LABEL_61:
    __break(1u);
  }
  else
  {
    char v4 = 0;
LABEL_51:
    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v4;
  }
  result.value._rawValue = (void *)isUniquelyReferenced_nonNull_native;
  result.is_nil = v6;
  return result;
}

uint64_t sub_262735500(unint64_t a1, int32x2_t a2)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_26276FBA0();
    __break(1u);
    return result;
  }
  if (!a1) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t result = sub_26276F830();
  *(void *)(result + 16) = a1;
  char v4 = (__int32 *)(result + 32);
  if (a1 < 8)
  {
    unint64_t v5 = 0;
    __int32 v6 = a2.i32[0];
LABEL_9:
    unint64_t v10 = a1 - v5;
    do
    {
      *v4++ = v6;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  v4 += a1 & 0xFFFFFFFFFFFFFFF8;
  __int32 v6 = a2.i32[0];
  int32x4_t v7 = vdupq_lane_s32(a2, 0);
  unint64_t v8 = (int32x4_t *)(result + 48);
  unint64_t v9 = a1 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    v8[-1] = v7;
    *unint64_t v8 = v7;
    v8 += 2;
    v9 -= 8;
  }
  while (v9);
  if (v5 != a1) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2627355F4(unint64_t a1, unint64_t a2)
{
  return sub_262735600(a1, a2);
}

uint64_t sub_262735600(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_26276FBA0();
    __break(1u);
    return result;
  }
  if (!a2) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t result = sub_26276F830();
  *(void *)(result + 16) = a2;
  unint64_t v5 = (unint64_t *)(result + 32);
  if (a2 < 4)
  {
    unint64_t v6 = 0;
LABEL_9:
    unint64_t v10 = a2 - v6;
    do
    {
      *v5++ = a1;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v6 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  v5 += a2 & 0xFFFFFFFFFFFFFFFCLL;
  int64x2_t v7 = vdupq_n_s64(a1);
  unint64_t v8 = (int64x2_t *)(result + 48);
  unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v8[-1] = v7;
    *unint64_t v8 = v7;
    v8 += 2;
    v9 -= 4;
  }
  while (v9);
  if (v6 != a2) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2627356E8(unsigned int a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_26276FBA0();
    __break(1u);
    return result;
  }
  if (!a2) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t result = sub_26276F830();
  *(void *)(result + 16) = a2;
  unint64_t v5 = (unsigned int *)(result + 32);
  if (a2 < 8)
  {
    unint64_t v6 = 0;
LABEL_9:
    unint64_t v10 = a2 - v6;
    do
    {
      *v5++ = a1;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v6 = a2 & 0xFFFFFFFFFFFFFFF8;
  v5 += a2 & 0xFFFFFFFFFFFFFFF8;
  int32x4_t v7 = vdupq_n_s32(a1);
  unint64_t v8 = (int32x4_t *)(result + 48);
  unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    v8[-1] = v7;
    *unint64_t v8 = v7;
    v8 += 2;
    v9 -= 8;
  }
  while (v9);
  if (v6 != a2) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2627357D4(uint64_t a1, uint64_t a2)
{
  return sub_2627357EC(a1, a2, &qword_26A957308);
}

uint64_t sub_2627357E0(uint64_t a1, uint64_t a2)
{
  return sub_2627357EC(a1, a2, &qword_26A957338);
}

uint64_t sub_2627357EC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  if (a2 < 0)
  {
    uint64_t result = sub_26276FBA0();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      __swift_instantiateConcreteTypeFromMangledName(a3);
      unint64_t v5 = (void *)sub_26276F830();
      unint64_t v6 = v5;
      void v5[2] = a2;
      v5[4] = a1;
      if (a2 != 1)
      {
        v5[5] = a1;
        uint64_t v7 = a2 - 2;
        if (v7)
        {
          unint64_t v8 = v5 + 6;
          do
          {
            *v8++ = a1;
            swift_bridgeObjectRetain();
            --v7;
          }
          while (v7);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x263F8EE78];
    }
    return (uint64_t)v6;
  }
  return result;
}

uint64_t sub_2627358DC(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v10 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    uint64_t result = sub_262749810(&v13, *(void *)(*(void *)(v1 + 48) + 8 * v9));
  }
  int64_t v12 = v10 + 4;
  if (v12 < v7)
  {
    unint64_t v11 = *(void *)(v3 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        int64_t v2 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        ++v12;
        if (v11) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v12;
    goto LABEL_22;
  }
LABEL_23:
  return swift_release();
}

uint64_t DBSCAN.deinit()
{
  sub_262734EDC(*(void *)(v0 + 32));
  return v0;
}

uint64_t DBSCAN.__deallocating_deinit()
{
  sub_262734EDC(*(void *)(v0 + 32));
  return MEMORY[0x270FA0228](v0, 48, 7);
}

void *sub_262735A90()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9576B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_26276FAA0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v16 >= v13) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17) {
        break;
      }
    }
LABEL_25:
    unint64_t v19 = __clz(__rbit64(v17));
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = v19 + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 2;
  if (v18 >= v13) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_262735C14(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_26276FA90();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v10 = *(void *)(v3 + 48);
        uint64_t v11 = (void *)(v10 + 8 * v6);
        uint64_t v12 = sub_26276FDF0() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_16:
            unint64_t v15 = (void *)(v10 + 8 * v2);
            if (v2 != v6 || (int64_t v2 = v6, v15 >= v11 + 1))
            {
              *unint64_t v15 = *v11;
              int64_t v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v16 = *(void *)(v3 + 16);
  BOOL v17 = __OFSUB__(v16, 1);
  uint64_t v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void *sub_262735D9C(void *a1)
{
  return sub_2627274CC(0, a1[2], 0, a1);
}

unint64_t sub_262735DB4()
{
  unint64_t result = qword_26A957698;
  if (!qword_26A957698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957698);
  }
  return result;
}

unint64_t sub_262735E0C()
{
  unint64_t result = qword_26A9576A0;
  if (!qword_26A9576A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9576A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9576A0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ClusterLabels(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x262735F34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClusterLabels()
{
  return &type metadata for ClusterLabels;
}

uint64_t type metadata accessor for DBSCAN()
{
  return self;
}

uint64_t method lookup function for DBSCAN(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DBSCAN);
}

uint64_t dispatch thunk of DBSCAN.__allocating_init(epsilon:minSamples:metric:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_262735FBC(uint64_t a1)
{
  return sub_262727378(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_262735FD0(void *a1)
{
  return sub_2627275E8(0, a1[2], 0, a1);
}

void *sub_262735FE4(void *a1)
{
  return sub_262727810(0, a1[2], 0, a1);
}

void *sub_262735FF8(void *a1)
{
  return sub_262727824(0, a1[2], 0, a1);
}

void *sub_26273600C(void *a1)
{
  return sub_262727954(0, a1[2], 0, a1);
}

void *sub_262736020(void *a1)
{
  return sub_262727960(0, a1[2], 0, a1);
}

uint64_t sub_262736034(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (!v5) {
    return v6;
  }
  uint64_t v11 = result;
  uint64_t v25 = MEMORY[0x263F8EE78];
  unint64_t result = sub_26273AC08(0, v5 & ~(v5 >> 63), 0);
  if (v5 < 0) {
    goto LABEL_19;
  }
  if ((a5 & 0x8000000000000000) != 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (a2 < v11)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v12 = *(void *)(a4 + 16);
  if (v12 > a5)
  {
    uint64_t v24 = a4 + 32;
    uint64_t v13 = *(void *)(a4 + 32 + 8 * a5);
    uint64_t v6 = v25;
    uint64_t v14 = *(char *)(a3 + 16);
    BOOL v15 = v12 >= v11;
    unint64_t v16 = v12 - v11;
    if (v15) {
      unint64_t v17 = v16;
    }
    else {
      unint64_t v17 = 0;
    }
    while (a2 != v11)
    {
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = off_270DC68C8[v14];
      uint64_t v19 = *(void *)(v24 + 8 * v11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      float v20 = ((float (*)(uint64_t, uint64_t))v18)(v13, v19);
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
      unint64_t v22 = *(void *)(v25 + 16);
      unint64_t v21 = *(void *)(v25 + 24);
      if (v22 >= v21 >> 1) {
        unint64_t result = sub_26273AC08(v21 > 1, v22 + 1, 1);
      }
      *(void *)(v25 + 16) = v22 + 1;
      uint64_t v23 = v25 + 16 * v22;
      *(void *)(v23 + 32) = v11;
      *(float *)(v23 + 40) = v20;
      ++v11;
      --v17;
      if (a2 == v11) {
        return v6;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_2627361D4(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t InMemoryMatrixLoader.maxRows.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t InMemoryMatrixLoader.columnCount.getter()
{
  return *(void *)(v0 + 24);
}

ZeoliteFramework::InMemoryMatrixLoader __swiftcall InMemoryMatrixLoader.init(_:columnCount:maxRows:)(Swift::OpaquePointer _, Swift::Int columnCount, Swift::Int maxRows)
{
  v3->_rawValue = _._rawValue;
  v3[1]._rawValue = 0;
  v3[2]._rawValue = (void *)maxRows;
  v3[3]._rawValue = (void *)columnCount;
  result.maxRows = maxRows;
  result.current = columnCount;
  result.matrixValues = _;
  return result;
}

ZeoliteFramework::InMemoryMatrixLoader __swiftcall InMemoryMatrixLoader.makeAsyncIterator()()
{
  uint64_t v2 = *(void *)(v1 + 24);
  *(void *)uint64_t v0 = *(void *)v1;
  *(_OWORD *)(v0 + 8) = *(_OWORD *)(v1 + 8);
  *(void *)(v0 + 24) = v2;
  int v3 = (void *)swift_bridgeObjectRetain();
  result.columnCount = v6;
  result.maxRows = v5;
  result.current = v4;
  result.matrixValues._rawValue = v3;
  return result;
}

uint64_t InMemoryMatrixLoader.next()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_262736240, 0, 0);
}

uint64_t sub_262736240()
{
  uint64_t result = sub_26276F950();
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v4 = *v2;
  int64_t v3 = v2[1];
  int64_t v5 = *(void *)(*v2 + 16);
  if (v3 >= v5)
  {
    uint64_t v12 = 0;
    goto LABEL_12;
  }
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v6 * v7;
  if ((unsigned __int128)(v6 * (__int128)v7) >> 64 != (v6 * v7) >> 63)
  {
    __break(1u);
    goto LABEL_24;
  }
  BOOL v9 = __OFADD__(v3, v8);
  int64_t v10 = v3 + v8;
  if (v9)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v5 >= v10) {
    int64_t v11 = v10;
  }
  else {
    int64_t v11 = *(void *)(*v2 + 16);
  }
  if (v11 < v3) {
    goto LABEL_25;
  }
  if (v11 != v3)
  {
    int64_t v14 = v11 - v3;
    if (v11 > v3)
    {
      if ((v3 & 0x8000000000000000) == 0)
      {
        if (v11 - 1 < (unint64_t)v5)
        {
          uint64_t v12 = sub_262727378(0, 1, 1, MEMORY[0x263F8EE78]);
          unint64_t v15 = *(void *)(v12 + 16);
          unint64_t v16 = (int *)(v4 + 4 * v3 + 32);
          do
          {
            int v17 = *v16;
            unint64_t v18 = *(void *)(v12 + 24);
            if (v15 >= v18 >> 1) {
              uint64_t v12 = sub_262727378(v18 > 1, v15 + 1, 1, v12);
            }
            *(void *)(v12 + 16) = v15 + 1;
            *(_DWORD *)(v12 + 4 * v15 + 32) = v17;
            ++v16;
            ++v15;
            --v14;
          }
          while (v14);
          goto LABEL_10;
        }
LABEL_28:
        __break(1u);
        return result;
      }
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v12 = MEMORY[0x263F8EE78];
LABEL_10:
  v2[1] = v11;
LABEL_12:
  uint64_t v13 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v13(v12);
}

uint64_t sub_262736404()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_26273640C()
{
  return *(void *)(v0 + 24);
}

uint64_t sub_262736414(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  int64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *int64_t v3 = v2;
  v3[1] = sub_26273AD88;
  v3[2] = v1;
  return MEMORY[0x270FA2498](sub_262736240, 0, 0);
}

uint64_t sub_2627364BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a3;
  v5[6] = a4;
  v5[3] = a1;
  v5[4] = a2;
  uint64_t v6 = (void *)swift_task_alloc();
  v5[7] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_262736568;
  v6[2] = v4;
  return MEMORY[0x270FA2498](sub_262736240, 0, 0);
}

uint64_t sub_262736568(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 32);
  *(void *)(*v2 + 64) = v1;
  swift_task_dealloc();
  if (v1)
  {
    if (v5)
    {
      swift_getObjectType();
      uint64_t v6 = sub_26276F8D0();
      uint64_t v8 = v7;
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t v8 = 0;
    }
    int64_t v10 = sub_26273AD8C;
  }
  else
  {
    if (v5)
    {
      swift_getObjectType();
      uint64_t v6 = sub_26276F8D0();
      uint64_t v8 = v9;
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t v8 = 0;
    }
    *(void *)(v4 + 72) = a1;
    int64_t v10 = sub_26273AD84;
  }
  return MEMORY[0x270FA2498](v10, v6, v8);
}

__n128 sub_2627366F4@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *(void *)a1 = *(void *)v1;
  __n128 result = *(__n128 *)(v1 + 8);
  *(__n128 *)(a1 + 8) = result;
  *(void *)(a1 + 24) = v2;
  return result;
}

uint64_t JSONLMatrixLoader.filePath.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JSONLMatrixLoader.maxRows.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t JSONLMatrixLoader.columnCount.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t JSONLMatrixLoader.init(filePath:maxRows:columnCount:fieldKeyPath:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  a6[5] = 0;
  uint64_t v12 = type metadata accessor for JSONLMatrixLoader();
  uint64_t v13 = (char *)a6 + *(int *)(v12 + 60);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957390);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *(void *)((char *)a6 + *(int *)(v12 + 64)) = 0;
  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t JSONLMatrixLoader.makeAsyncIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(a2, v2, a1);
}

uint64_t JSONLMatrixLoader.next()(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  uint64_t v3 = *(void *)(a1 + 16);
  v2[7] = v3;
  uint64_t v4 = sub_26276FA60();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573A0);
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  uint64_t v6 = sub_26276FA10();
  v2[16] = v6;
  v2[17] = *(void *)(v6 - 8);
  v2[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573A8);
  v2[19] = swift_task_alloc();
  uint64_t v7 = sub_26276F250();
  v2[20] = v7;
  v2[21] = *(void *)(v7 - 8);
  v2[22] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573B0);
  v2[23] = swift_task_alloc();
  uint64_t v8 = sub_26276F280();
  v2[24] = v8;
  v2[25] = *(void *)(v8 - 8);
  v2[26] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_262736B98, 0, 0);
}

uint64_t sub_262736B98()
{
  sub_26276F950();
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(int *)(*(void *)(v0 + 40) + 64);
  *(_DWORD *)(v0 + 296) = v2;
  if (!*(void *)(v1 + v2))
  {
    uint64_t v19 = *(void *)(v0 + 200);
    uint64_t v18 = *(void *)(v0 + 208);
    uint64_t v21 = *(void *)(v0 + 184);
    uint64_t v20 = *(void *)(v0 + 192);
    uint64_t v23 = *(void *)(v0 + 168);
    uint64_t v22 = *(void *)(v0 + 176);
    uint64_t v24 = *(void *)(v0 + 160);
    sub_26272C158();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v21, 1, 1, v20);
    (*(void (**)(uint64_t, void, uint64_t))(v23 + 104))(v22, *MEMORY[0x263F06E50], v24);
    swift_bridgeObjectRetain();
    sub_26276F270();
    id v25 = sub_26272B65C(v18);
    id v30 = v25;
    if (!v25)
    {
LABEL_16:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
      return v40(0);
    }
    uint64_t v31 = *(void *)(v0 + 144);
    uint64_t v33 = *(void *)(v0 + 128);
    uint64_t v32 = *(void *)(v0 + 136);
    uint64_t v35 = *(void *)(v0 + 112);
    uint64_t v34 = *(void *)(v0 + 120);
    uint64_t v42 = *(void *)(v0 + 104);
    uint64_t v43 = *(void *)(v0 + 152);
    uint64_t v36 = *(void *)(v0 + 48);
    uint64_t v44 = *(void *)(v0 + 40);
    uint64_t v37 = *(void **)(v36 + 40);
    id v38 = v25;

    *(void *)(v36 + 40) = v30;
    sub_26276FA20();
    sub_26272C198();
    sub_26276F960();
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    sub_26276F220();

    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v42);
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957390);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v43, 0, 1, v39);
    sub_26272C1F0(v43, v36 + *(int *)(v44 + 60));
    uint64_t v1 = *(void *)(v0 + 48);
  }
  *(void *)(v0 + 16) = MEMORY[0x263F8EE78];
  uint64_t v3 = *(void *)(v1 + 16);
  *(void *)(v0 + 216) = v3;
  if (v3 < 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (!v3) {
    goto LABEL_5;
  }
  uint64_t v4 = *(int *)(*(void *)(v0 + 40) + 60);
  *(_DWORD *)(v0 + 300) = v4;
  uint64_t v5 = v1 + v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957390);
  *(void *)(v0 + 224) = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  *(void *)(v0 + 232) = v8;
  *(void *)(v0 + 240) = (v7 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v8(v5, 1, v6))
  {
LABEL_5:
    uint64_t v9 = *(int *)(v0 + 296);
    uint64_t v10 = *(void *)(v1 + v9);
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (!v11)
    {
      *(void *)(v1 + v9) = v12;
      uint64_t v13 = *(void *)(v0 + 48);
      swift_bridgeObjectRelease();
      uint64_t v14 = *(void **)(v13 + 40);
      if (v14)
      {
        *(void *)(v0 + 24) = 0;
        unsigned int v15 = objc_msgSend(v14, sel_closeAndReturnError_, v0 + 24);
        unint64_t v16 = *(void **)(v0 + 24);
        if (v15)
        {
          id v17 = v16;
        }
        else
        {
          id v26 = v16;
          uint64_t v27 = (void *)sub_26276F240();

          swift_willThrow();
        }
      }
      goto LABEL_16;
    }
LABEL_20:
    __break(1u);
  }
  *(_OWORD *)(v0 + 248) = xmmword_262771470;
  uint64_t v28 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v28;
  *uint64_t v28 = v0;
  v28[1] = sub_2627370B4;
  uint64_t v29 = *(void *)(v0 + 224);
  return MEMORY[0x270EEEE80](v29);
}

uint64_t sub_2627370B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[34] = a1;
  v4[35] = a2;
  v4[36] = v2;
  swift_task_dealloc();
  if (v2)
  {

    uint64_t v5 = sub_2627376F8;
  }
  else
  {
    uint64_t v5 = sub_262737200;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_262737200()
{
  uint64_t v1 = (uint64_t *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 280);
  if (v2)
  {
    uint64_t v3 = *(void **)(v0 + 288);
    unint64_t v4 = *(void *)(v0 + 272);
    sub_26276F190();
    swift_allocObject();
    sub_26276F180();
    uint64_t v5 = sub_26272B7B4(v4, v2);
    unint64_t v7 = v6;
    sub_26276F170();
    if (!v3)
    {
      uint64_t v14 = *(void *)(v0 + 88);
      uint64_t v13 = *(void *)(v0 + 96);
      uint64_t v15 = *(void *)(v0 + 80);
      uint64_t v16 = *(void *)(v0 + 48);
      uint64_t v17 = *(void *)(v0 + 56);
      sub_26272C100(v5, v7);
      swift_release();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v15, 0, 1, v17);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v13, v15, v17);
      swift_retain();
      swift_getAtKeyPath();
      swift_release();
      uint64_t v18 = *(void *)(v0 + 32);
      if (*(void *)(v16 + 24) != *(void *)(v18 + 16))
      {
        swift_bridgeObjectRelease();
        uint64_t v1 = (uint64_t *)(v0 + 16);
        if (qword_26A9572B0 == -1) {
          goto LABEL_8;
        }
        goto LABEL_27;
      }
      uint64_t v19 = *(void *)(v0 + 256);
      uint64_t v20 = *(void *)(v0 + 216);
      uint64_t v22 = *(void *)(v0 + 88);
      uint64_t v21 = *(void *)(v0 + 96);
      uint64_t v23 = *(void *)(v0 + 56);
      uint64_t v1 = (uint64_t *)(v0 + 16);
      sub_2627330EC(v18);
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
      if (v19 == v20)
      {
        uint64_t v24 = 1;
        goto LABEL_12;
      }
      uint64_t v24 = 1;
      if ((*(unsigned int (**)(void, uint64_t, void))(v0 + 232))(*(void *)(v0 + 48) + *(int *)(v0 + 300), 1, *(void *)(v0 + 224)))
      {
        goto LABEL_12;
      }
      uint64_t v47 = *(void *)(v0 + 256);
      *(void *)(v0 + 248) = v47;
      *(void *)(v0 + 256) = v47 + 1;
      uint64_t v48 = (void *)swift_task_alloc();
      *(void *)(v0 + 264) = v48;
      *uint64_t v48 = v0;
      v48[1] = sub_2627370B4;
      uint64_t v49 = *(void *)(v0 + 224);
      return MEMORY[0x270EEEE80](v49);
    }
    uint64_t v9 = *(void *)(v0 + 80);
    uint64_t v8 = *(void *)(v0 + 88);
    uint64_t v10 = *(void *)(v0 + 64);
    uint64_t v11 = *(void *)(v0 + 72);
    uint64_t v12 = *(void *)(v0 + 56);

    sub_26272C100(v5, v7);
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v9, 1, 1, v12);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    uint64_t v1 = (uint64_t *)(v0 + 16);
  }
  while (1)
  {
    uint64_t v24 = *(void *)(v0 + 248);
LABEL_12:
    uint64_t v32 = *(int *)(v0 + 296);
    uint64_t v33 = *(void *)(v0 + 48);
    uint64_t v34 = *(void *)(v33 + v32);
    BOOL v35 = __OFADD__(v34, 1);
    uint64_t v36 = v34 + 1;
    if (!v35) {
      break;
    }
    __break(1u);
LABEL_27:
    swift_once();
LABEL_8:
    uint64_t v25 = sub_26276F530();
    __swift_project_value_buffer(v25, (uint64_t)qword_26A95E208);
    id v26 = sub_26276F510();
    os_log_type_t v27 = sub_26276FA50();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl(&dword_262725000, v26, v27, "Vector length mismatched.", v28, 2u);
      MEMORY[0x263E528C0](v28, -1, -1);
    }
    uint64_t v29 = *(void *)(v0 + 88);
    uint64_t v30 = *(void *)(v0 + 96);
    uint64_t v31 = *(void *)(v0 + 56);

    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v31);
  }
  *(void *)(v33 + v32) = v36;
  uint64_t v37 = *v1;
  if (!v24)
  {
    uint64_t v38 = *(void *)(v0 + 48);
    swift_bridgeObjectRelease();
    uint64_t v39 = *(void **)(v38 + 40);
    if (v39)
    {
      *(void *)(v0 + 24) = 0;
      unsigned int v40 = objc_msgSend(v39, sel_closeAndReturnError_, v0 + 24);
      uint64_t v41 = *(void **)(v0 + 24);
      if (v40)
      {
        id v42 = v41;
      }
      else
      {
        id v43 = v41;
        uint64_t v44 = (void *)sub_26276F240();

        swift_willThrow();
      }
    }
    uint64_t v37 = 0;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v45 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v45(v37);
}

uint64_t sub_2627376F8()
{
  uint64_t v1 = *(int *)(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v2 + v1);
  BOOL v4 = __OFADD__(v3, 1);
  uint64_t v5 = v3 + 1;
  if (v4) {
    __break(1u);
  }
  uint64_t v6 = *(void *)(v0 + 248);
  *(void *)(v2 + v1) = v5;
  uint64_t v7 = *(void *)(v0 + 16);
  if (!v6)
  {
    uint64_t v8 = *(void *)(v0 + 48);
    swift_bridgeObjectRelease();
    uint64_t v9 = *(void **)(v8 + 40);
    if (v9)
    {
      *(void *)(v0 + 24) = 0;
      unsigned int v10 = objc_msgSend(v9, sel_closeAndReturnError_, v0 + 24);
      uint64_t v11 = *(void **)(v0 + 24);
      if (v10)
      {
        id v12 = v11;
      }
      else
      {
        id v13 = v11;
        uint64_t v14 = (void *)sub_26276F240();

        swift_willThrow();
      }
    }
    uint64_t v7 = 0;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v15(v7);
}

uint64_t sub_262737890(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  BOOL v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  void *v4 = v2;
  v4[1] = sub_262737928;
  return JSONLMatrixLoader.next()(a2);
}

uint64_t sub_262737928(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_262737A38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  JSONLMatrixLoader.makeAsyncIterator()(a1, a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);
  return v4(v2, a1);
}

uint64_t AsyncMatrixSequence.maxRows.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t AsyncMatrixSequence.columnCount.getter()
{
  return *(void *)(v0 + 48);
}

double AsyncMatrixSequence.init(reader:label:columnCount:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = sub_26276F560();
  char v11 = sub_262737D28(a2, a3, v10);
  swift_bridgeObjectRelease();
  if (v11)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_26276F540();
    sub_26276F550();
    *a5 = a1;
    a5[1] = a2;
    a5[2] = a3;
    a5[3] = v12;
    a5[4] = 0;
    a5[5] = v13;
    a5[6] = a4;
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    if (qword_26A9572B0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_26276F530();
    __swift_project_value_buffer(v15, (uint64_t)qword_26A95E208);
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_26276F510();
    os_log_type_t v17 = sub_26276FA50();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v20 = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      swift_bridgeObjectRetain();
      sub_262738FB4(a2, a3, &v20);
      sub_26276FA70();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_262725000, v16, v17, "Invalid label: %s for AsyncMatrixSequence.", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x263E528C0](v19, -1, -1);
      MEMORY[0x263E528C0](v18, -1, -1);

      swift_release();
    }
    else
    {

      swift_release();
      swift_bridgeObjectRelease_n();
    }
    a5[6] = 0;
    double result = 0.0;
    *((_OWORD *)a5 + 1) = 0u;
    *((_OWORD *)a5 + 2) = 0u;
    *(_OWORD *)a5 = 0u;
  }
  return result;
}

uint64_t sub_262737D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_26276FE00();
    sub_26276F6C0();
    uint64_t v6 = sub_26276FE20();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      char v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_26276FDA0() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_26276FDA0() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t AsyncMatrixSequence.makeAsyncIterator()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 40);
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t AsyncMatrixSequence.next()()
{
  v1[2] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9576D0);
  v1[3] = swift_task_alloc();
  v1[4] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_262737F58, 0, 0);
}

uint64_t sub_262737F58()
{
  if ((sub_26276F940() & 1) != 0 || (uint64_t v1 = v0[2], *(void *)(v1 + 32) >= *(void *)(v1 + 24)))
  {
LABEL_20:
    uint64_t v11 = 0;
    goto LABEL_21;
  }
  uint64_t v2 = v0[4];
  sub_26276F570();
  uint64_t v3 = sub_26276F5A0();
  uint64_t v4 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
LABEL_15:
    if (qword_26A9572B0 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_26276F530();
    __swift_project_value_buffer(v20, (uint64_t)qword_26A95E208);
    uint64_t v21 = sub_26276F510();
    os_log_type_t v22 = sub_26276FA50();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_262725000, v21, v22, "Unsupported field type.", v23, 2u);
      MEMORY[0x263E528C0](v23, -1, -1);
    }
    uint64_t v24 = v0[4];

    sub_262739088(v24);
    goto LABEL_20;
  }
  uint64_t v5 = v0[3];
  sub_2627390E8(v0[4], v5);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v5, v3);
  if (v6 == *MEMORY[0x263F5E5B8])
  {
    uint64_t v7 = sub_26276F580();
    if (v7)
    {
      uint64_t v8 = v7;
      int64_t v9 = *(void *)(v7 + 16);
      if (v9)
      {
        uint64_t v29 = MEMORY[0x263F8EE78];
        sub_262739750(0, v9, 0);
        uint64_t v10 = 0;
        uint64_t v11 = v29;
        unint64_t v12 = *(void *)(v29 + 16);
        do
        {
          _H8 = *(_WORD *)(v8 + 2 * v10 + 32);
          unint64_t v14 = *(void *)(v29 + 24);
          if (v12 >= v14 >> 1) {
            sub_262739750(v14 > 1, v12 + 1, 1);
          }
          ++v10;
          __asm { FCVT            S0, H8 }
          *(void *)(v29 + 16) = v12 + 1;
          *(_DWORD *)(v29 + 4 * v12++ + 32) = _S0;
        }
        while (v9 != v10);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v11 = MEMORY[0x263F8EE78];
      }
    }
    else
    {
      uint64_t v11 = 0;
    }
    goto LABEL_26;
  }
  if (v6 != *MEMORY[0x263F5E5C0])
  {
    (*(void (**)(void, uint64_t))(v4 + 8))(v0[3], v3);
    goto LABEL_15;
  }
  uint64_t v11 = sub_26276F580();
LABEL_26:
  uint64_t result = sub_262739088(v0[4]);
  uint64_t v27 = *(void *)(v1 + 32);
  _VF = __OFADD__(v27, 1);
  uint64_t v28 = v27 + 1;
  if (_VF)
  {
    __break(1u);
    return result;
  }
  *(void *)(v1 + 32) = v28;
LABEL_21:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(uint64_t))v0[1];
  return v25(v11);
}

uint64_t sub_2627382D8()
{
  return *(void *)(v0 + 40);
}

uint64_t sub_2627382E0()
{
  return *(void *)(v0 + 48);
}

uint64_t sub_2627382E8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_26273AD88;
  return AsyncMatrixSequence.next()();
}

uint64_t sub_262738378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = (void *)swift_task_alloc();
  v4[7] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_26273840C;
  return AsyncMatrixSequence.next()();
}

uint64_t sub_26273840C(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 32);
  *(void *)(*v2 + 64) = v1;
  swift_task_dealloc();
  if (v1)
  {
    if (v5)
    {
      swift_getObjectType();
      uint64_t v6 = sub_26276F8D0();
      uint64_t v8 = v7;
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t v8 = 0;
    }
    uint64_t v10 = sub_2627385BC;
  }
  else
  {
    if (v5)
    {
      swift_getObjectType();
      uint64_t v6 = sub_26276F8D0();
      uint64_t v8 = v9;
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t v8 = 0;
    }
    *(void *)(v4 + 72) = a1;
    uint64_t v10 = sub_262738598;
  }
  return MEMORY[0x270FA2498](v10, v6, v8);
}

uint64_t sub_262738598()
{
  **(void **)(v0 + 24) = *(void *)(v0 + 72);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2627385BC()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = (void *)v0[6];
  v0[2] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957690);
  swift_willThrowTypedImpl();
  *uint64_t v2 = v1;
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

__n128 sub_262738654@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(void *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  __n128 result = *(__n128 *)(v1 + 40);
  *(__n128 *)(a1 + 40) = result;
  return result;
}

uint64_t AsyncTransformedMatrixSequence.maxRows.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t AsyncTransformedMatrixSequence.columnCount.getter()
{
  return *(void *)(v0 + 56);
}

double AsyncTransformedMatrixSequence.init(reader:label:columnCount:quantization:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v12 = sub_26276F560();
  char v13 = sub_262737D28(a2, a3, v12);
  swift_bridgeObjectRelease();
  if (v13)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_26276F540();
    sub_26276F550();
    *a6 = a1;
    a6[1] = a2;
    a6[2] = a3;
    a6[3] = v14;
    a6[4] = a5;
    a6[5] = 0;
    a6[6] = v15;
    a6[7] = a4;
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    if (qword_26A9572B0 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_26276F530();
    __swift_project_value_buffer(v17, (uint64_t)qword_26A95E208);
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_26276F510();
    os_log_type_t v19 = sub_26276FA50();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = v21;
      *(_DWORD *)uint64_t v20 = 136315138;
      swift_bridgeObjectRetain();
      sub_262738FB4(a2, a3, &v22);
      sub_26276FA70();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_262725000, v18, v19, "Invalid label: %s for AsyncTransformedMatrixSequence.", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x263E528C0](v21, -1, -1);
      MEMORY[0x263E528C0](v20, -1, -1);

      swift_release();
    }
    else
    {

      swift_release();
      swift_bridgeObjectRelease_n();
    }
    double result = 0.0;
    *((_OWORD *)a6 + 2) = 0u;
    *((_OWORD *)a6 + 3) = 0u;
    *(_OWORD *)a6 = 0u;
    *((_OWORD *)a6 + 1) = 0u;
  }
  return result;
}

uint64_t AsyncTransformedMatrixSequence.makeAsyncIterator()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 56);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 40);
  *(void *)(a1 + 56) = v6;
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t AsyncTransformedMatrixSequence.next()(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9576D0);
  v2[4] = swift_task_alloc();
  v2[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_262738A08, 0, 0);
}

uint64_t sub_262738A08()
{
  if ((sub_26276F940() & 1) != 0 || (uint64_t v1 = v0[3], *(void *)(v1 + 40) >= *(void *)(v1 + 24)))
  {
LABEL_20:
    uint64_t v11 = 0;
    goto LABEL_21;
  }
  uint64_t v2 = v0[5];
  sub_26276F570();
  uint64_t v3 = sub_26276F5A0();
  uint64_t v4 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
LABEL_15:
    if (qword_26A9572B0 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_26276F530();
    __swift_project_value_buffer(v20, (uint64_t)qword_26A95E208);
    uint64_t v21 = sub_26276F510();
    os_log_type_t v22 = sub_26276FA50();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_262725000, v21, v22, "Unsupported field type.", v23, 2u);
      MEMORY[0x263E528C0](v23, -1, -1);
    }
    uint64_t v24 = v0[5];

    sub_262739088(v24);
    goto LABEL_20;
  }
  uint64_t v5 = v0[4];
  sub_2627390E8(v0[5], v5);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v5, v3);
  if (v6 == *MEMORY[0x263F5E5B8])
  {
    sub_2627397C4();
    uint64_t v7 = sub_26276F590();
    if (v7)
    {
      uint64_t v8 = v7;
      int64_t v9 = *(void *)(v7 + 16);
      if (v9)
      {
        uint64_t v29 = MEMORY[0x263F8EE78];
        sub_262739750(0, v9, 0);
        uint64_t v10 = 0;
        uint64_t v11 = v29;
        unint64_t v12 = *(void *)(v29 + 16);
        do
        {
          _H8 = *(_WORD *)(v8 + 2 * v10 + 32);
          unint64_t v14 = *(void *)(v29 + 24);
          if (v12 >= v14 >> 1) {
            sub_262739750(v14 > 1, v12 + 1, 1);
          }
          ++v10;
          __asm { FCVT            S0, H8 }
          *(void *)(v29 + 16) = v12 + 1;
          *(_DWORD *)(v29 + 4 * v12++ + 32) = _S0;
        }
        while (v9 != v10);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v11 = MEMORY[0x263F8EE78];
      }
    }
    else
    {
      uint64_t v11 = 0;
    }
    goto LABEL_26;
  }
  if (v6 != *MEMORY[0x263F5E5C0])
  {
    (*(void (**)(void, uint64_t))(v4 + 8))(v0[4], v3);
    goto LABEL_15;
  }
  sub_262739770();
  uint64_t v11 = sub_26276F590();
LABEL_26:
  uint64_t result = sub_262739088(v0[5]);
  uint64_t v27 = *(void *)(v1 + 40);
  _VF = __OFADD__(v27, 1);
  uint64_t v28 = v27 + 1;
  if (_VF)
  {
    __break(1u);
    return result;
  }
  *(void *)(v1 + 40) = v28;
LABEL_21:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(uint64_t))v0[1];
  return v25(v11);
}

uint64_t sub_262738DE4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  void *v4 = v2;
  v4[1] = sub_26273AD88;
  return AsyncTransformedMatrixSequence.next()(a2);
}

uint64_t sub_262738E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a4;
  unint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 32) = v12;
  *unint64_t v12 = v6;
  v12[1] = sub_26273AD94;
  return MEMORY[0x270FA1E90](a1, a2, a3, a5, a6, v6 + 16);
}

uint64_t sub_262738F5C@<X0>(uint64_t a1@<X8>)
{
  AsyncTransformedMatrixSequence.makeAsyncIterator()(a1);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t type metadata accessor for JSONLMatrixLoader()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_262738FB4(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_262739150(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_26273AD28((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_26273AD28((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_262739088(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9576D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2627390E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9576D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_262739150(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_26276FA80();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_26273930C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_26276FB10();
  if (!v8)
  {
    sub_26276FBA0();
    __break(1u);
LABEL_17:
    uint64_t result = sub_26276FC00();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_26273930C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_2627393A4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_262739600(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_262739600(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_2627393A4(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_26273951C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_26276FAE0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_26276FBA0();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_26276F6F0();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_26276FC00();
    __break(1u);
LABEL_14:
    uint64_t result = sub_26276FBA0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_26273951C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957850);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_262739584(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_26276F730();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x263E51B80](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_262739600(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A957850);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_26276FC00();
  __break(1u);
  return result;
}

uint64_t sub_262739750(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_26276BDD0(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

unint64_t sub_262739770()
{
  unint64_t result = qword_26A9576E0;
  if (!qword_26A9576E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9576E0);
  }
  return result;
}

unint64_t sub_2627397C4()
{
  unint64_t result = qword_26A9576E8;
  if (!qword_26A9576E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9576E8);
  }
  return result;
}

uint64_t sub_262739818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_262739964(a1, a2, a3, (uint64_t (*)(void))sub_262739844, (uint64_t (*)(void))sub_262739898);
}

unint64_t sub_262739844()
{
  unint64_t result = qword_26A9576F0;
  if (!qword_26A9576F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9576F0);
  }
  return result;
}

unint64_t sub_262739898()
{
  unint64_t result = qword_26A9576F8[0];
  if (!qword_26A9576F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A9576F8);
  }
  return result;
}

uint64_t sub_2627398F0(uint64_t a1)
{
  return sub_262739A78(a1);
}

uint64_t sub_26273991C()
{
  return swift_getWitnessTable();
}

uint64_t sub_262739938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_262739964(a1, a2, a3, (uint64_t (*)(void))sub_2627399A0, (uint64_t (*)(void))sub_2627399F4);
}

uint64_t sub_262739964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_2627399A0()
{
  unint64_t result = qword_26A957720;
  if (!qword_26A957720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957720);
  }
  return result;
}

unint64_t sub_2627399F4()
{
  unint64_t result = qword_26A957728[0];
  if (!qword_26A957728[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A957728);
  }
  return result;
}

uint64_t sub_262739A4C(uint64_t a1)
{
  return sub_262739A78(a1);
}

uint64_t sub_262739A78(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_262739AC4()
{
  return swift_getWitnessTable();
}

uint64_t dispatch thunk of MatrixLoader.maxRows.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MatrixLoader.columnCount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t initializeWithCopy for InMemoryMatrixLoader(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for InMemoryMatrixLoader(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for InMemoryMatrixLoader(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for InMemoryMatrixLoader(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InMemoryMatrixLoader(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InMemoryMatrixLoader()
{
  return &type metadata for InMemoryMatrixLoader;
}

void sub_262739C94()
{
  sub_26272CD68();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_262739D54(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)a1 = *a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    int64_t v8 = (void *)a2[5];
    uint64_t v9 = *(int *)(a3 + 60);
    uint64_t v10 = (void *)(a1 + v9);
    size_t v11 = (char *)a2 + v9;
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    swift_bridgeObjectRetain();
    swift_retain();
    id v12 = v8;
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957390);
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573A8);
      memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v10, v11, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
    }
    *(void *)(a1 + *(int *)(a3 + 64)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 64));
  }
  return a1;
}

uint64_t sub_262739EF8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_release();

  uint64_t v4 = a1 + *(int *)(a2 + 60);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957390);
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t sub_262739FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v7 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(int *)(a3 + 60);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_retain();
  id v11 = v7;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957390);
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573A8);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v9, v10, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
  }
  *(void *)(a1 + *(int *)(a3 + 64)) = *(void *)(a2 + *(int *)(a3 + 64));
  return a1;
}

void *sub_26273A130(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  uint64_t v6 = (void *)a1[5];
  uint64_t v7 = (void *)a2[5];
  a1[5] = v7;
  id v8 = v7;

  uint64_t v9 = *(int *)(a3 + 60);
  uint64_t v10 = (char *)a1 + v9;
  id v11 = (char *)a2 + v9;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957390);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573A8);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(void *)((char *)a1 + *(int *)(a3 + 64)) = *(void *)((char *)a2 + *(int *)(a3 + 64));
  return a1;
}

_OWORD *sub_26273A31C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 60);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957390);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573A8);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 64)) = *(void *)((char *)a2 + *(int *)(a3 + 64));
  return a1;
}

uint64_t sub_26273A458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  uint64_t v7 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  uint64_t v8 = *(int *)(a3 + 60);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957390);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573A8);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  *(void *)(a1 + *(int *)(a3 + 64)) = *(void *)(a2 + *(int *)(a3 + 64));
  return a1;
}

uint64_t sub_26273A620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_26273A634);
}

uint64_t sub_26273A634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573A8);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 60);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_26273A6E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_26273A6FC);
}

uint64_t sub_26273A6FC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573A8);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 60);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t destroy for AsyncMatrixSequence()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AsyncMatrixSequence(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AsyncMatrixSequence(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AsyncMatrixSequence(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for AsyncMatrixSequence(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AsyncMatrixSequence(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AsyncMatrixSequence()
{
  return &type metadata for AsyncMatrixSequence;
}

uint64_t sub_26273A9D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 64);
}

uint64_t sub_26273A9DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_26273AA34(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_26273AAD8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t sub_26273AB38(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_26273AB80(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for AsyncTransformedMatrixSequence()
{
  return swift_getGenericMetadata();
}

uint64_t sub_26273ABE8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_26276BF30(a1, a2, a3, (void *)*v3);
  *long long v3 = result;
  return result;
}

uint64_t sub_26273AC08(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_26276C0D4(a1, a2, a3, *v3);
  *long long v3 = (char *)result;
  return result;
}

uint64_t sub_26273AC28(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_26276C0E0(a1, a2, a3, *v3);
  *long long v3 = (char *)result;
  return result;
}

uint64_t sub_26273AC48(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_26276C24C(a1, a2, a3, *v3);
  *long long v3 = (char *)result;
  return result;
}

uint64_t sub_26273AC68(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_26276C258(a1, a2, a3, *v3);
  *long long v3 = (char *)result;
  return result;
}

uint64_t sub_26273AC88(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_26276C3C0(a1, a2, a3, (void *)*v3);
  *long long v3 = result;
  return result;
}

uint64_t sub_26273ACA8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_26276C600(a1, a2, a3, *v3);
  *long long v3 = (char *)result;
  return result;
}

uint64_t sub_26273ACC8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_26276C760(a1, a2, a3, *v3);
  *long long v3 = (char *)result;
  return result;
}

uint64_t sub_26273ACE8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_26276C8C0(a1, a2, a3, *v3);
  *long long v3 = (char *)result;
  return result;
}

uint64_t sub_26273AD08(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_26276CA38(a1, a2, a3, *v3);
  *long long v3 = (char *)result;
  return result;
}

uint64_t sub_26273AD28(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_26273AD9C(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v8 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v9 = v7;
  uint64_t v10 = MEMORY[0x263F8EE78];
  if (!v8) {
    return v10;
  }
  uint64_t v13 = result;
  uint64_t v27 = MEMORY[0x263F8EE78];
  uint64_t result = sub_26273AC28(0, v8 & ~(v8 >> 63), 0);
  if ((v8 & 0x8000000000000000) == 0)
  {
    uint64_t v10 = v27;
    if (a2 <= v13) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = a2;
    }
    char v15 = a3 & 1;
    uint64_t v16 = v13;
    while (a2 != v16)
    {
      uint64_t v25 = v16;
      uint64_t result = (uint64_t)sub_26273D510(&v25, v15, a4, a5, a6, a7, &v26);
      if (v9)
      {
        swift_release();
        return v10;
      }
      uint64_t v9 = 0;
      long long v17 = v26;
      uint64_t v27 = v10;
      unint64_t v19 = *(void *)(v10 + 16);
      unint64_t v18 = *(void *)(v10 + 24);
      if (v19 >= v18 >> 1)
      {
        long long v20 = v26;
        uint64_t result = sub_26273AC28(v18 > 1, v19 + 1, 1);
        long long v17 = v20;
        uint64_t v10 = v27;
      }
      *(void *)(v10 + 16) = v19 + 1;
      *(_OWORD *)(v10 + 16 * v19 + 32) = v17;
      if (a2 < v13) {
        goto LABEL_19;
      }
      if (v14 == v16) {
        goto LABEL_20;
      }
      if (a2 == ++v16) {
        return v10;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t MatrixNNScorer.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v2 + 80) - 8) + 32))(v2 + *(void *)(*(void *)v2 + 96), a1);
  return v2;
}

uint64_t MatrixNNScorer.init(_:)(uint64_t a1)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 32))(v1 + *(void *)(*(void *)v1 + 96), a1);
  return v1;
}

uint64_t sub_26273B008(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 176) = a2;
  *(void *)(v4 + 184) = v3;
  *(unsigned char *)(v4 + 500) = a3;
  *(void *)(v4 + 168) = a1;
  uint64_t v5 = *v3;
  uint64_t v6 = sub_26276F910();
  *(void *)(v4 + 192) = v6;
  *(void *)(v4 + 200) = *(void *)(v6 - 8);
  *(void *)(v4 + 208) = swift_task_alloc();
  uint64_t v7 = sub_26276F120();
  *(void *)(v4 + 216) = v7;
  *(void *)(v4 + 224) = *(void *)(v7 - 8);
  *(void *)(v4 + 232) = swift_task_alloc();
  *(void *)(v4 + 240) = swift_task_alloc();
  *(void *)(v4 + 248) = swift_task_alloc();
  *(void *)(v4 + 256) = swift_task_alloc();
  uint64_t v8 = *(void *)(v5 + 80);
  *(void *)(v4 + 264) = v8;
  *(void *)(v4 + 272) = *(void *)(v8 - 8);
  *(void *)(v4 + 280) = swift_task_alloc();
  uint64_t v9 = *(void *)(v5 + 88);
  *(void *)(v4 + 288) = v9;
  *(void *)(v4 + 296) = *(void *)(v9 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(void *)(v4 + 304) = AssociatedTypeWitness;
  *(void *)(v4 + 312) = *(void *)(AssociatedTypeWitness - 8);
  *(void *)(v4 + 320) = swift_task_alloc();
  *(void *)(v4 + 328) = *(void *)(v9 + 8);
  uint64_t v11 = swift_getAssociatedTypeWitness();
  *(void *)(v4 + 336) = v11;
  *(void *)(v4 + 344) = *(void *)(v11 - 8);
  *(void *)(v4 + 352) = swift_task_alloc();
  *(void *)(v4 + 360) = swift_task_alloc();
  *(void *)(v4 + 368) = swift_task_alloc();
  *(void *)(v4 + 376) = swift_task_alloc();
  *(void *)(v4 + 384) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_26273B334, 0, 0);
}

uint64_t sub_26273B334()
{
  uint64_t v1 = *(void *)(v0 + 176);
  if (*(unsigned char *)(v0 + 500) == 1 && __OFADD__(v1++, 1)) {
    goto LABEL_41;
  }
  *(void *)(v0 + 392) = v1;
  uint64_t v3 = *(void *)(v0 + 288);
  uint64_t v4 = *(void *)(v0 + 264);
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v6 = *(void *)(v0 + 184) + *(void *)(**(void **)(v0 + 184) + 96);
  int64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v4, v3);
  *(void *)(v0 + 400) = v7;
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(v4, v3);
  *(void *)(v0 + 408) = v8;
  uint64_t v9 = *(void *)(v5 + 16);
  *(void *)(v0 + 416) = v9;
  if (!v8)
  {
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (*(uint64_t *)(v0 + 176) < 1)
  {
    if (qword_26A9572B0 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_26276F530();
    __swift_project_value_buffer(v16, (uint64_t)qword_26A95E208);
    uint64_t v12 = sub_26276F510();
    os_log_type_t v13 = sub_26276FA50();
    if (!os_log_type_enabled(v12, v13)) {
      goto LABEL_14;
    }
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    char v15 = "top-k must be positive.";
    goto LABEL_13;
  }
  uint64_t v10 = v9 / v8;
  if (v9 % v8)
  {
    if (qword_26A9572B0 == -1)
    {
LABEL_7:
      uint64_t v11 = sub_26276F530();
      __swift_project_value_buffer(v11, (uint64_t)qword_26A95E208);
      uint64_t v12 = sub_26276F510();
      os_log_type_t v13 = sub_26276FA50();
      if (!os_log_type_enabled(v12, v13))
      {
LABEL_14:

        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        long long v17 = *(uint64_t (**)(void))(v0 + 8);
        return v17(0);
      }
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      char v15 = "testMatrixValues count must be divisible by columnCount.";
LABEL_13:
      _os_log_impl(&dword_262725000, v12, v13, v15, v14, 2u);
      MEMORY[0x263E528C0](v14, -1, -1);
      goto LABEL_14;
    }
LABEL_42:
    swift_once();
    goto LABEL_7;
  }
  if ((unsigned __int128)(v10 * (__int128)v1) >> 64 != (v10 * v1) >> 63)
  {
    __break(1u);
    goto LABEL_44;
  }
  *(void *)(v0 + 160) = sub_262735500(v10 * v1, 0);
  *(void *)(v0 + 152) = sub_2627355F4(0, v10 * v1);
  if ((unsigned __int128)(v10 * (__int128)v7) >> 64 != (v10 * v7) >> 63)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v19 = sub_262735500(v10 * v7, 0);
  if (v1 + 0x4000000000000000 < 0)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  uint64_t v21 = v19;
  uint64_t v43 = v6;
  uint64_t v6 = 2 * v1;
  v20.i32[0] = -1.0;
  uint64_t v22 = sub_262735500(2 * v1, v20);
  if (2 * v1 < 0)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  uint64_t v41 = v22;
  uint64_t v42 = v21;
  uint64_t v23 = sub_26273D9C0(0, 2 * v1);
  int64_t v24 = v23[2];
  uint64_t v25 = MEMORY[0x263F8EE78];
  if (!v24)
  {
    swift_release();
    uint64_t v1 = MEMORY[0x263F8EE78];
    *(void *)(v0 + 424) = MEMORY[0x263F8EE78];
    if ((v7 & 0x8000000000000000) == 0) {
      goto LABEL_27;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v40 = v10;
  uint64_t v44 = (void *)MEMORY[0x263F8EE78];
  sub_26273AC48(0, v24, 0);
  uint64_t v26 = 0;
  uint64_t v1 = (uint64_t)v44;
  unint64_t v27 = v44[2];
  do
  {
    int64_t v28 = v23[v26 + 4];
    unint64_t v29 = v44[3];
    if (v27 >= v29 >> 1) {
      sub_26273AC48(v29 > 1, v27 + 1, 1);
    }
    ++v26;
    v44[2] = v27 + 1;
    v44[v27++ + 4] = v28;
  }
  while (v24 != v26);
  swift_release();
  uint64_t v10 = v40;
  uint64_t v25 = MEMORY[0x263F8EE78];
  *(void *)(v0 + 424) = v44;
  if (v7 < 0) {
    goto LABEL_34;
  }
LABEL_27:
  uint64_t v30 = sub_26273D9C0(0, v7);
  int64_t v31 = v30[2];
  if (!v31)
  {
LABEL_35:
    swift_bridgeObjectRetain();
    goto LABEL_36;
  }
  swift_bridgeObjectRetain();
  sub_26273AC48(0, v31, 0);
  uint64_t v32 = 0;
  unint64_t v33 = *(void *)(v25 + 16);
  do
  {
    int64_t v34 = v30[v32 + 4];
    unint64_t v35 = *(void *)(v25 + 24);
    if (v33 >= v35 >> 1) {
      sub_26273AC48(v35 > 1, v33 + 1, 1);
    }
    ++v32;
    *(void *)(v25 + 16) = v33 + 1;
    *(void *)(v25 + 8 * v33++ + 32) = v34;
  }
  while (v31 != v32);
LABEL_36:
  swift_release();
  *(void *)(v0 + 432) = v25;
  (*(void (**)(void, uint64_t, void))(*(void *)(v0 + 272) + 16))(*(void *)(v0 + 280), v43, *(void *)(v0 + 264));
  sub_26276F970();
  uint64_t v6 = v42;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_47:
  }
    uint64_t v1 = (uint64_t)sub_262735FD0((void *)v1);
  *(_DWORD *)(v0 + 496) = *MEMORY[0x263F8CD10];
  *(void *)(v0 + 440) = v1;
  *(void *)(v0 + 448) = v10 & ~(v10 >> 63);
  *(void *)(v0 + 464) = v41;
  *(void *)(v0 + 472) = v6;
  *(void *)(v0 + 456) = 0;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v37 = (void *)swift_task_alloc();
  *(void *)(v0 + 480) = v37;
  *uint64_t v37 = v0;
  v37[1] = sub_26273B9C4;
  uint64_t v38 = *(void *)(v0 + 376);
  uint64_t v39 = *(void *)(v0 + 304);
  return MEMORY[0x270FA1E88](v0 + 96, 0, 0, v38, v39, AssociatedConformanceWitness);
}

uint64_t sub_26273B9C4()
{
  *(void *)(*(void *)v1 + 488) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_26273CEF0;
  }
  else
  {
    uint64_t v2 = sub_26273BB28;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_26273BB28()
{
  uint64_t v1 = *(void *)(v0 + 96);
  v164 = (uint64_t *)(v0 + 160);
  v165 = (uint64_t *)(v0 + 152);
  if (!v1)
  {
    unint64_t v12 = *(void *)(v0 + 456);
    unint64_t v13 = *(void *)(v0 + 392);
    (*(void (**)(void, void))(*(void *)(v0 + 312) + 8))(*(void *)(v0 + 320), *(void *)(v0 + 304));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 0x8000000000000000) != 0 || v13 < v12)
    {
      int v46 = *(unsigned __int8 *)(v0 + 500);
      uint64_t v47 = *(void *)(v0 + 392);
      uint64_t v48 = v47;
      if (v46 == 1)
      {
        if (v47 == 0x8000000000000000) {
          goto LABEL_249;
        }
        uint64_t v48 = v47 - 1;
      }
      uint64_t v49 = *(void *)(v0 + 416) / *(uint64_t *)(v0 + 408);
      if ((v49 & 0x8000000000000000) == 0)
      {
        uint64_t v176 = sub_26273AD9C(0, v49, v46, v47, v164, v48, v165);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_54;
      }
      __break(1u);
LABEL_248:
      __break(1u);
LABEL_249:
      __break(1u);
    }
    swift_bridgeObjectRelease();
    if (qword_26A9572B0 == -1)
    {
LABEL_11:
      uint64_t v14 = sub_26276F530();
      __swift_project_value_buffer(v14, (uint64_t)qword_26A95E208);
      char v15 = sub_26276F510();
      os_log_type_t v16 = sub_26276FA50();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = *(void *)(v0 + 456);
        uint64_t v18 = *(void *)(v0 + 176);
        uint64_t v19 = swift_slowAlloc();
        *(_DWORD *)uint64_t v19 = 134218240;
        *(void *)(v0 + 112) = v18;
        sub_26276FA70();
        *(_WORD *)(v19 + 12) = 2048;
        *(void *)(v0 + 120) = v17;
        sub_26276FA70();
        _os_log_impl(&dword_262725000, v15, v16, "Not enough samples to score with top-k = %ld, target samples = %lu.", (uint8_t *)v19, 0x16u);
        MEMORY[0x263E528C0](v19, -1, -1);
      }
      swift_bridgeObjectRelease();

      goto LABEL_14;
    }
LABEL_246:
    swift_once();
    goto LABEL_11;
  }
  uint64_t v2 = *(void *)(v0 + 408);
  int64_t v3 = *(void *)(v1 + 16) / v2;
  if (*(void *)(v0 + 400) < v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_26A9572B0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_26276F530();
    __swift_project_value_buffer(v4, (uint64_t)qword_26A95E208);
    uint64_t v5 = sub_26276F510();
    os_log_type_t v6 = sub_26276FA50();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = *(void *)(v0 + 400);
      uint64_t v8 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 134218240;
      *(void *)(v0 + 136) = v3;
      sub_26276FA70();
      *(_WORD *)(v8 + 12) = 2048;
      *(void *)(v0 + 144) = v7;
      sub_26276FA70();
      _os_log_impl(&dword_262725000, v5, v6, "Invalid data size. Number of rows %ld > specified batch size %ld.", (uint8_t *)v8, 0x16u);
      MEMORY[0x263E528C0](v8, -1, -1);
    }
    uint64_t v10 = *(void *)(v0 + 312);
    uint64_t v9 = *(void *)(v0 + 320);
    uint64_t v11 = *(void *)(v0 + 304);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    swift_bridgeObjectRelease();
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v176 = 0;
LABEL_54:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v50 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v50(v176);
  }
  if (v2 < 0) {
    return sub_26276FBA0();
  }
  uint64_t v20 = *(void *)(v0 + 416) / v2;
  uint64_t v21 = sub_26276F830();
  *(void *)(v21 + 16) = v2;
  memset_pattern16((void *)(v21 + 32), &unk_262771880, 4 * v2);
  if (v20 < 0)
  {
    __break(1u);
    goto LABEL_244;
  }
  uint64_t v177 = v1;
  if (!(*(void *)(v0 + 416) / *(uint64_t *)(v0 + 408)))
  {
    swift_bridgeObjectRelease();
    uint64_t v179 = MEMORY[0x263F8EE78];
LABEL_59:
    uint64_t v52 = *(void *)(v0 + 408);
    uint64_t v53 = sub_26276F830();
    *(void *)(v53 + 16) = v52;
    memset_pattern16((void *)(v53 + 32), &unk_262771880, 4 * v52);
    if ((v3 & 0x8000000000000000) == 0)
    {
      uint64_t v181 = v3;
      if (v3)
      {
        uint64_t v54 = 0;
        char v55 = (float *)(v0 + 92);
        uint64_t v56 = *(void *)(v1 + 16);
        uint64_t v174 = v1 + 32;
        __B = (float *)(v0 + 88);
        uint64_t v57 = MEMORY[0x263F8EE78];
        do
        {
          uint64_t v58 = *(void *)(v0 + 408);
          uint64_t v59 = v54 * v58;
          if ((unsigned __int128)(v54 * (__int128)v58) >> 64 != (v54 * v58) >> 63) {
            goto LABEL_207;
          }
          if (v56 < v59) {
            goto LABEL_208;
          }
          if (v59 < 0) {
            goto LABEL_209;
          }
          if (v56 - v59 < 0 || (uint64_t v60 = v56, v56 - v59 >= v58))
          {
            uint64_t v60 = v59 + v58;
            if (__OFADD__(v59, v58)) {
              goto LABEL_217;
            }
          }
          if (v60 < v59) {
            goto LABEL_210;
          }
          if (v56 < v60) {
            goto LABEL_211;
          }
          vDSP_Length v61 = v60 - v59;
          if (v60 - v59 < 0) {
            goto LABEL_212;
          }
          *char v55 = NAN;
          uint64_t v62 = (const float *)(v174 + 4 * v59);
          swift_bridgeObjectRetain();
          vDSP_svesq(v62, 1, v55, v61);
          float v63 = sqrtf(*v55);
          if (v63 > 0.0)
          {
            if (v61 != *(void *)(v53 + 16)) {
              goto LABEL_218;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v53 = sub_262735FBC(v53);
            }
            unint64_t v64 = v53 + 32;
            float *__B = v63;
            vDSP_vsdiv(v62, 1, __B, (float *)(v53 + 32), 1, v61);
            uint64_t v65 = *(void *)(v53 + 16);
            uint64_t v66 = *(void *)(v57 + 16);
            uint64_t v67 = v66 + v65;
            if (__OFADD__(v66, v65)) {
              goto LABEL_219;
            }
            swift_bridgeObjectRetain();
            uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            if (!isUniquelyReferenced_nonNull_native || v67 > *(void *)(v57 + 24) >> 1)
            {
              if (v66 <= v67) {
                uint64_t v69 = v66 + v65;
              }
              else {
                uint64_t v69 = v66;
              }
              uint64_t v57 = sub_262727378(isUniquelyReferenced_nonNull_native, v69, 1, v57);
            }
            int64_t v3 = v181;
            if (*(void *)(v53 + 16))
            {
              uint64_t v70 = *(void *)(v57 + 16);
              if ((*(void *)(v57 + 24) >> 1) - v70 < v65)
              {
                __break(1u);
                goto LABEL_224;
              }
              uint64_t v71 = (void *)(v57 + 4 * v70 + 32);
              size_t v72 = 4 * v65;
              if (v64 < (unint64_t)v71 + 4 * v65 && (unint64_t)v71 < v64 + v72) {
                return sub_26276FC00();
              }
              memcpy(v71, (const void *)(v53 + 32), v72);
              if (v65)
              {
                uint64_t v73 = *(void *)(v57 + 16);
                BOOL v44 = __OFADD__(v73, v65);
                uint64_t v74 = v73 + v65;
                if (v44) {
                  goto LABEL_233;
                }
                *(void *)(v57 + 16) = v74;
              }
            }
            else if (v65)
            {
              goto LABEL_220;
            }
            swift_bridgeObjectRelease();
          }
          ++v54;
          swift_bridgeObjectRelease();
        }
        while (v3 != v54);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v57 = MEMORY[0x263F8EE78];
      }
      int64_t v75 = *(void *)(v0 + 408);
      int64_t v76 = v75 * v3;
      if ((unsigned __int128)(v75 * (__int128)v3) >> 64 == (v75 * v3) >> 63)
      {
        if (v76 < 0) {
          return sub_26276FBA0();
        }
        if (v76)
        {
          uint64_t v77 = sub_26276F830();
          *(void *)(v77 + 16) = v76;
          memset_pattern16((void *)(v77 + 32), &unk_262771890, 4 * v3 * v75);
          int64_t v75 = *(void *)(v0 + 408);
        }
        else
        {
          uint64_t v77 = MEMORY[0x263F8EE78];
        }
        vDSP_mtrans((const float *)(v57 + 32), 1, (float *)(v77 + 32), 1, v75, v3);
        swift_bridgeObjectRelease();
        char v78 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v79 = *(void *)(v0 + 472);
        if ((v78 & 1) == 0) {
          uint64_t v79 = sub_262727378(0, *(void *)(v79 + 16), 0, *(void *)(v0 + 472));
        }
        uint64_t v80 = v79 + 32;
        vDSP_Length v81 = *(void *)(v0 + 416) / *(uint64_t *)(v0 + 408);
        vDSP_mmul((const float *)(v179 + 32), 1, (const float *)(v77 + 32), 1, (float *)(v79 + 32), 1, v81, v3, *(void *)(v0 + 408));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v81)
        {
          uint64_t v162 = 0;
          uint64_t v166 = 0;
          uint64_t v180 = 0;
          uint64_t v82 = 0;
          uint64_t v83 = *(void *)(v0 + 464);
          uint64_t v161 = v79;
          uint64_t v163 = v79 + 32;
          while (v82 != *(void *)(v0 + 448))
          {
            uint64_t v84 = v82 * v181;
            if ((unsigned __int128)(v82 * (__int128)v181) >> 64 != (v82 * v181) >> 63) {
              goto LABEL_225;
            }
            uint64_t v85 = *(void *)(v79 + 16);
            if (v85 < v84) {
              goto LABEL_226;
            }
            if (v84 < 0) {
              goto LABEL_227;
            }
            if (v181 < 1 || v85 - v84 < 0 || (uint64_t v86 = *(void *)(v79 + 16), v85 - v84 >= v181))
            {
              uint64_t v86 = v84 + v181;
              if (__OFADD__(v84, v181)) {
                goto LABEL_234;
              }
            }
            if (v86 < v84) {
              goto LABEL_228;
            }
            if (v85 < v86) {
              goto LABEL_229;
            }
            v168 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 224) + 104);
            v168(*(void *)(v0 + 256), *(unsigned int *)(v0 + 496), *(void *)(v0 + 216));
            vDSP_Length __N = v86 - v84;
            if (v86 - v84 < 0) {
              return sub_26276FBA0();
            }
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            char v87 = swift_isUniquelyReferenced_nonNull_native();
            v178 = *(void **)(v0 + 432);
            uint64_t v169 = v82;
            if ((v87 & 1) == 0) {
              v178 = sub_262735FD0(v178);
            }
            unint64_t v170 = (2 * v86) | 1;
            uint64_t v88 = *(unsigned int *)(v0 + 496);
            uint64_t v90 = *(void *)(v0 + 248);
            uint64_t v89 = *(void *)(v0 + 256);
            uint64_t v91 = (const float *)(v80 + 4 * v84);
            uint64_t v93 = *(void *)(v0 + 216);
            uint64_t v92 = *(void *)(v0 + 224);
            int v94 = sub_26276F110();
            vDSP_vsorti(v91, v178 + 4, 0, __N, v94);
            v167 = *(void (**)(uint64_t, uint64_t))(v92 + 8);
            v167(v89, v93);
            swift_bridgeObjectRelease();
            v168(v90, v88, v93);
            uint64_t v175 = v84;
            if (swift_isUniquelyReferenced_nonNull())
            {
              uint64_t v95 = v163;
              uint64_t v96 = v169;
              unint64_t v97 = v170;
            }
            else
            {
              sub_26273E00C(v163, v84, v170);
              uint64_t v95 = v98;
              uint64_t v84 = v99;
              unint64_t v97 = v100;
              swift_unknownObjectRelease();
              uint64_t v96 = v169;
            }
            uint64_t v101 = *(void *)(v0 + 392);
            uint64_t v102 = *(void *)(v0 + 248);
            uint64_t v103 = *(void *)(v0 + 216);
            int v104 = sub_26276F110();
            vDSP_vsort((float *)(v95 + 4 * v84), __N, v104);
            v167(v102, v103);
            if (v101 < 0)
            {
              __break(1u);
              goto LABEL_232;
            }
            uint64_t v105 = *(void *)(v0 + 392);
            if (v105)
            {
              if ((unsigned __int128)(v96 * (__int128)v105) >> 64 != (v96 * v105) >> 63) {
                goto LABEL_235;
              }
              if ((unint64_t)(v105 - 1) >= *(void *)(v83 + 16)) {
                goto LABEL_236;
              }
              if ((unint64_t)(v105 - 1) >= *(void *)(*(void *)(v0 + 440) + 16)) {
                goto LABEL_237;
              }
              uint64_t v106 = *v164;
              uint64_t v107 = *v165;
              swift_bridgeObjectRetain();
              if ((v180 & 0x8000000000000000) == 0)
              {
                int64_t __Na = v84;
                unint64_t v108 = v97;
                uint64_t v109 = 0;
                int64_t v110 = v108 >> 1;
                uint64_t v111 = v107 + v105 * v166 + 32;
                uint64_t v112 = v105 * v96;
                uint64_t v113 = v106 + v105 * v162 + 32;
                while ((unint64_t)(v112 + v109) < *(void *)(v106 + 16))
                {
                  int v115 = *(_DWORD *)(v113 + 4 * v109);
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    uint64_t v83 = sub_262735FBC(v83);
                  }
                  *(_DWORD *)(v83 + 4 * v109 + 32) = v115;
                  if ((unint64_t)(v112 + v109) >= *(void *)(v107 + 16)) {
                    goto LABEL_183;
                  }
                  uint64_t v116 = v83 + 32;
                  uint64_t v117 = *(void *)(v0 + 392);
                  *(void *)(*(void *)(v0 + 440) + 8 * v109 + 32) = *(void *)(v111 + 8 * v109);
                  unint64_t v118 = v117 + v109;
                  BOOL v119 = __OFADD__(v117, v109);
                  if (v109 >= v181)
                  {
                    if (v119) {
                      goto LABEL_190;
                    }
                    if ((v118 & 0x8000000000000000) != 0) {
                      goto LABEL_192;
                    }
                    if (v118 >= *(void *)(v83 + 16)) {
                      goto LABEL_194;
                    }
                    uint64_t v126 = *(void *)(v0 + 440);
                    *(_DWORD *)(v116 + 4 * v118) = 0;
                    if (v118 >= *(void *)(v126 + 16)) {
                      goto LABEL_196;
                    }
                    uint64_t v124 = 0;
                    uint64_t v125 = *(void *)(v0 + 440);
                  }
                  else
                  {
                    if (v119) {
                      goto LABEL_189;
                    }
                    int64_t v120 = v175 + v109;
                    if (__OFADD__(v175, v109)) {
                      goto LABEL_191;
                    }
                    if (v120 < __Na || v120 >= v110) {
                      goto LABEL_193;
                    }
                    if ((v118 & 0x8000000000000000) != 0) {
                      goto LABEL_195;
                    }
                    if (v118 >= *(void *)(v83 + 16)) {
                      goto LABEL_197;
                    }
                    *(_DWORD *)(v116 + 4 * v118) = *(_DWORD *)(v95 + 4 * v120);
                    if ((unint64_t)v109 >= v178[2]) {
                      goto LABEL_198;
                    }
                    uint64_t v121 = *(void *)(v0 + 456);
                    uint64_t v122 = v178[v109 + 4];
                    BOOL v123 = __CFADD__(v121, v122);
                    uint64_t v124 = v121 + v122;
                    if (v123) {
                      goto LABEL_199;
                    }
                    uint64_t v125 = *(void *)(v0 + 440);
                    if (v118 >= *(void *)(v125 + 16)) {
                      goto LABEL_200;
                    }
                  }
                  ++v109;
                  uint64_t v114 = *(void *)(v0 + 392);
                  *(void *)(v125 + 8 * v118 + 32) = v124;
                  if (v109 == v114) {
                    goto LABEL_153;
                  }
                }
                __break(1u);
LABEL_183:
                __break(1u);
LABEL_184:
                __break(1u);
LABEL_185:
                __break(1u);
LABEL_186:
                __break(1u);
LABEL_187:
                __break(1u);
LABEL_188:
                __break(1u);
LABEL_189:
                __break(1u);
LABEL_190:
                __break(1u);
LABEL_191:
                __break(1u);
LABEL_192:
                __break(1u);
LABEL_193:
                __break(1u);
LABEL_194:
                __break(1u);
LABEL_195:
                __break(1u);
LABEL_196:
                __break(1u);
LABEL_197:
                __break(1u);
LABEL_198:
                __break(1u);
LABEL_199:
                __break(1u);
LABEL_200:
                __break(1u);
                goto LABEL_201;
              }
              goto LABEL_238;
            }
            swift_bridgeObjectRetain();
LABEL_153:
            v168(*(void *)(v0 + 240), *(unsigned int *)(v0 + 496), *(void *)(v0 + 216));
            vDSP_Length v127 = *(void *)(v83 + 16);
            swift_bridgeObjectRetain();
            char v128 = swift_isUniquelyReferenced_nonNull_native();
            v129 = *(void **)(v0 + 424);
            if ((v128 & 1) == 0) {
              v129 = sub_262735FD0(*(void **)(v0 + 424));
            }
            uint64_t v130 = *(unsigned int *)(v0 + 496);
            uint64_t v132 = *(void *)(v0 + 232);
            uint64_t v131 = *(void *)(v0 + 240);
            uint64_t v133 = *(void *)(v0 + 216);
            int v134 = sub_26276F110();
            vDSP_vsorti((const float *)(v83 + 32), v129 + 4, 0, v127, v134);
            v167(v131, v133);
            swift_bridgeObjectRelease();
            v168(v132, v130, v133);
            vDSP_Length v135 = *(void *)(v83 + 16);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v83 = sub_262735FBC(v83);
            }
            uint64_t v80 = v163;
            uint64_t v136 = *(void *)(v0 + 392);
            uint64_t v137 = *(void *)(v0 + 232);
            v138 = (int *)(v83 + 32);
            uint64_t v139 = *(void *)(v0 + 216);
            int v140 = sub_26276F110();
            vDSP_vsort((float *)(v83 + 32), v135, v140);
            v167(v137, v139);
            if (v136)
            {
              uint64_t v141 = *(void *)(v0 + 392);
              if ((unsigned __int128)(v169 * (__int128)v141) >> 64 != (v169 * v141) >> 63) {
                goto LABEL_239;
              }
              uint64_t v142 = *(void *)(v83 + 16);
              if (!v142 || v141 - 1 >= v142) {
                goto LABEL_240;
              }
              uint64_t v143 = v129[2];
              if (!v143 || v141 - 1 >= v143) {
                goto LABEL_241;
              }
              uint64_t v144 = *v164;
              v145 = (void *)*v165;
              uint64_t v146 = v141 * v166;
              uint64_t v147 = 4;
              unint64_t v148 = v141 * v169;
              do
              {
                int v149 = *v138;
                if (swift_isUniquelyReferenced_nonNull_native())
                {
                  if (v180 < 0) {
                    goto LABEL_184;
                  }
                }
                else
                {
                  uint64_t v144 = sub_262735FBC(v144);
                  if (v180 < 0) {
                    goto LABEL_184;
                  }
                }
                if (v148 >= *(void *)(v144 + 16)) {
                  goto LABEL_185;
                }
                *(_DWORD *)(v144 + 4 * v148 + 32) = v149;
                unint64_t v150 = v129[v147];
                if ((v150 & 0x8000000000000000) != 0) {
                  goto LABEL_186;
                }
                uint64_t v151 = *(void *)(v0 + 440);
                if (v150 >= *(void *)(v151 + 16)) {
                  goto LABEL_187;
                }
                uint64_t v152 = *(void *)(v151 + 8 * v150 + 32);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  v145 = sub_262735FD0(v145);
                }
                if (v148 >= v145[2]) {
                  goto LABEL_188;
                }
                uint64_t v153 = *(void *)(v0 + 392);
                *(void *)((char *)&v145[v147] + v146) = v152;
                uint64_t v154 = v147 - 3;
                ++v147;
                ++v138;
                ++v148;
              }
              while (v154 != v153);
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t *v165 = (uint64_t)v145;
              uint64_t v80 = v163;
              uint64_t *v164 = v144;
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease();
            }
            uint64_t v79 = v161;
            uint64_t v82 = v169 + 1;
            v180 += *(void *)(v0 + 392);
            v166 += 8;
            v162 += 4;
            if (v169 + 1 == *(void *)(v0 + 416) / *(uint64_t *)(v0 + 408)) {
              goto LABEL_178;
            }
          }
LABEL_224:
          __break(1u);
LABEL_225:
          __break(1u);
LABEL_226:
          __break(1u);
LABEL_227:
          __break(1u);
LABEL_228:
          __break(1u);
LABEL_229:
          __break(1u);
          return sub_26276FBA0();
        }
        uint64_t v83 = *(void *)(v0 + 464);
LABEL_178:
        uint64_t v155 = *(void *)(v0 + 456);
        BOOL v123 = __CFADD__(v155, v181);
        uint64_t v156 = v155 + v181;
        if (!v123)
        {
          *(void *)(v0 + 464) = v83;
          *(void *)(v0 + 472) = v79;
          *(void *)(v0 + 456) = v156;
          uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
          v158 = (void *)swift_task_alloc();
          *(void *)(v0 + 480) = v158;
          void *v158 = v0;
          v158[1] = sub_26273B9C4;
          uint64_t v159 = *(void *)(v0 + 376);
          uint64_t v160 = *(void *)(v0 + 304);
          return MEMORY[0x270FA1E88](v0 + 96, 0, 0, v159, v160, AssociatedConformanceWitness);
        }
        goto LABEL_248;
      }
      goto LABEL_245;
    }
LABEL_244:
    __break(1u);
LABEL_245:
    __break(1u);
    goto LABEL_246;
  }
  uint64_t v22 = 0;
  uint64_t v179 = MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v25 = *(void *)(v0 + 408);
    uint64_t v26 = v22 * v25;
    if ((unsigned __int128)(v22 * (__int128)v25) >> 64 != (v22 * v25) >> 63) {
      break;
    }
    uint64_t v27 = *(void *)(v0 + 416);
    if (v27 < v26) {
      goto LABEL_202;
    }
    if (v26 < 0) {
      goto LABEL_203;
    }
    if (v27 - v26 < 0 || (uint64_t v28 = *(void *)(v0 + 416), v27 - v26 >= v25))
    {
      uint64_t v28 = v26 + v25;
      if (__OFADD__(v26, v25)) {
        goto LABEL_213;
      }
    }
    if (v28 < v26) {
      goto LABEL_204;
    }
    if (v27 < v28) {
      goto LABEL_205;
    }
    vDSP_Length v29 = v28 - v26;
    if (v28 - v26 < 0) {
      goto LABEL_206;
    }
    uint64_t v30 = *(void *)(v0 + 168) + 4 * v26;
    *(_DWORD *)(v0 + 52) = 2143289344;
    int64_t v31 = (const float *)(v30 + 32);
    swift_bridgeObjectRetain();
    vDSP_svesq(v31, 1, (float *)(v0 + 52), v29);
    float v32 = sqrtf(*(float *)(v0 + 52));
    if (v32 > 0.0)
    {
      if (v29 != *(void *)(v21 + 16)) {
        goto LABEL_214;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v21 = sub_262735FBC(v21);
      }
      unint64_t v33 = v21 + 32;
      *(float *)(v0 + 48) = v32;
      vDSP_vsdiv(v31, 1, (const float *)(v0 + 48), (float *)(v21 + 32), 1, v29);
      uint64_t v34 = *(void *)(v21 + 16);
      uint64_t v35 = *(void *)(v179 + 16);
      uint64_t v36 = v35 + v34;
      if (__OFADD__(v35, v34)) {
        goto LABEL_215;
      }
      swift_bridgeObjectRetain();
      uint64_t v37 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v38 = v179;
      if (!v37 || v36 > *(void *)(v179 + 24) >> 1)
      {
        if (v35 <= v36) {
          uint64_t v39 = v35 + v34;
        }
        else {
          uint64_t v39 = v35;
        }
        uint64_t v38 = sub_262727378(v37, v39, 1, v179);
      }
      uint64_t v179 = v38;
      if (*(void *)(v21 + 16))
      {
        uint64_t v40 = *(void *)(v38 + 16);
        if ((*(void *)(v38 + 24) >> 1) - v40 < v34) {
          goto LABEL_221;
        }
        uint64_t v41 = (void *)(v38 + 4 * v40 + 32);
        size_t v42 = 4 * v34;
        if (v33 < (unint64_t)v41 + 4 * v34 && (unint64_t)v41 < v33 + v42) {
          return sub_26276FC00();
        }
        memcpy(v41, (const void *)(v21 + 32), v42);
        if (v34)
        {
          uint64_t v43 = *(void *)(v179 + 16);
          BOOL v44 = __OFADD__(v43, v34);
          uint64_t v45 = v43 + v34;
          if (v44)
          {
LABEL_232:
            __break(1u);
LABEL_233:
            __break(1u);
LABEL_234:
            __break(1u);
LABEL_235:
            __break(1u);
LABEL_236:
            __break(1u);
LABEL_237:
            __break(1u);
LABEL_238:
            __break(1u);
LABEL_239:
            __break(1u);
LABEL_240:
            __break(1u);
LABEL_241:
            __break(1u);
            return sub_26276FBA0();
          }
          *(void *)(v179 + 16) = v45;
        }
      }
      else if (v34)
      {
        goto LABEL_216;
      }
      swift_bridgeObjectRelease();
    }
    ++v22;
    uint64_t v24 = *(void *)(v0 + 408);
    uint64_t v23 = *(void *)(v0 + 416);
    swift_bridgeObjectRelease();
    uint64_t v1 = v177;
    if (v22 == v23 / v24)
    {
      swift_bridgeObjectRelease();
      goto LABEL_59;
    }
  }
LABEL_201:
  __break(1u);
LABEL_202:
  __break(1u);
LABEL_203:
  __break(1u);
LABEL_204:
  __break(1u);
LABEL_205:
  __break(1u);
LABEL_206:
  __break(1u);
LABEL_207:
  __break(1u);
LABEL_208:
  __break(1u);
LABEL_209:
  __break(1u);
LABEL_210:
  __break(1u);
LABEL_211:
  __break(1u);
LABEL_212:
  __break(1u);
LABEL_213:
  __break(1u);
LABEL_214:
  __break(1u);
LABEL_215:
  __break(1u);
LABEL_216:
  __break(1u);
LABEL_217:
  __break(1u);
LABEL_218:
  __break(1u);
LABEL_219:
  __break(1u);
LABEL_220:
  __break(1u);
LABEL_221:
  __break(1u);
  return sub_26276FC00();
}

uint64_t sub_26273CEF0()
{
  uint64_t v1 = v0[47];
  uint64_t v2 = v0[48];
  uint64_t v3 = v0[42];
  uint64_t v4 = v0[43];
  (*(void (**)(void, void))(v0[39] + 8))(v0[40], v0[38]);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v5(v2, v1, v3);
  if (swift_dynamicCast())
  {
    if (qword_26A9572B0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_26276F530();
    __swift_project_value_buffer(v6, (uint64_t)qword_26A95E208);
    uint64_t v7 = sub_26276F510();
    os_log_type_t v8 = sub_26276FA30();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_262725000, v7, v8, "Task canceled at scoring.", v9, 2u);
      MEMORY[0x263E528C0](v9, -1, -1);
    }
    uint64_t v10 = v0[48];
    uint64_t v11 = v0[42];
    uint64_t v12 = v0[43];
    uint64_t v14 = v0[25];
    uint64_t v13 = v0[26];
    uint64_t v15 = v0[24];

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  else
  {
    os_log_type_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[43] + 16);
    v16(v0[46], v0[48], v0[42]);
    if (qword_26A9572B0 != -1) {
      swift_once();
    }
    uint64_t v17 = v0[45];
    uint64_t v18 = v0[46];
    uint64_t v19 = v0[42];
    uint64_t v20 = sub_26276F530();
    __swift_project_value_buffer(v20, (uint64_t)qword_26A95E208);
    v16(v17, v18, v19);
    uint64_t v21 = sub_26276F510();
    os_log_type_t v22 = sub_26276FA50();
    BOOL v23 = os_log_type_enabled(v21, v22);
    uint64_t v24 = v0[45];
    if (v23)
    {
      os_log_type_t v45 = v22;
      uint64_t v43 = v5;
      uint64_t v25 = v0[44];
      uint64_t v26 = v0[42];
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      BOOL v44 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 138412290;
      v16(v25, v24, v26);
      swift_getAssociatedConformanceWitness();
      uint64_t v28 = sub_26276FD80();
      uint64_t v29 = v0[44];
      if (v28)
      {
        (*(void (**)(void, void))(v0[43] + 8))(v0[44], v0[42]);
      }
      else
      {
        uint64_t v33 = v0[42];
        swift_allocError();
        v43(v34, v29, v33);
      }
      uint64_t v35 = v0[45];
      uint64_t v37 = v0[42];
      uint64_t v36 = v0[43];
      uint64_t v38 = _swift_stdlib_bridgeErrorToNSError();
      v0[13] = v38;
      sub_26276FA70();
      *BOOL v44 = v38;
      float v32 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
      v32(v35, v37);
      _os_log_impl(&dword_262725000, v21, v45, "Error: %@", v27, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573B8);
      swift_arrayDestroy();
      MEMORY[0x263E528C0](v44, -1, -1);
      MEMORY[0x263E528C0](v27, -1, -1);
    }
    else
    {
      uint64_t v30 = v0[42];
      uint64_t v31 = v0[43];

      float v32 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
      v32(v24, v30);
    }
    uint64_t v39 = v0[48];
    uint64_t v40 = v0[42];
    v32(v0[46], v40);
    v32(v39, v40);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v41 = (uint64_t (*)(void))v0[1];
  return v41(0);
}

uint64_t sub_26273D450(uint64_t result, uint64_t a2, uint64_t a3, int64_t a4, unint64_t a5)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  int64_t v5 = a5 >> 1;
  uint64_t v6 = (a5 >> 1) - a4;
  if (__OFSUB__(a5 >> 1, a4))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (!result || v6 < 0 || (int64_t v7 = a5 >> 1, v6 >= result))
  {
    int64_t v7 = a4 + result;
    if (__OFADD__(a4, result)) {
      goto LABEL_18;
    }
  }
  if (v7 < a4) {
    goto LABEL_14;
  }
  if (v5 < a4)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v5 >= v7)
  {
    if ((v7 & 0x8000000000000000) == 0) {
      return a2;
    }
    goto LABEL_17;
  }
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

int64_t sub_26273D4CC(int64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = *(void *)(a2 + 16);
    if ((uint64_t)v2 >= result) {
      unint64_t v3 = result;
    }
    else {
      unint64_t v3 = *(void *)(a2 + 16);
    }
    if (!result) {
      unint64_t v3 = 0;
    }
    if (v2 >= v3) {
      return a2;
    }
  }
  __break(1u);
  return result;
}

uint64_t *sub_26273D510@<X0>(uint64_t *result@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, void *a7@<X8>)
{
  int64_t v7 = *result * a3;
  BOOL v8 = (unsigned __int128)(*result * (__int128)a3) >> 64 != v7 >> 63;
  if ((a2 & 1) == 0)
  {
LABEL_6:
    if (v8)
    {
LABEL_49:
      __break(1u);
      return result;
    }
    goto LABEL_7;
  }
  if ((unsigned __int128)(*result * (__int128)a3) >> 64 != v7 >> 63)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  if (__OFADD__(v7++, 1))
  {
    __break(1u);
    goto LABEL_6;
  }
LABEL_7:
  int64_t v10 = *(void *)(*a4 + 16);
  if (v10 < v7)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v7 < 0)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t result = (uint64_t *)sub_26273D450(a5, *a4, *a4 + 32, v7, (2 * v10) | 1);
  int64_t v14 = v13 >> 1;
  uint64_t v15 = (v13 >> 1) - v12;
  if (__OFSUB__(v13 >> 1, v12))
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (v15)
  {
    uint64_t v16 = v11;
    uint64_t v17 = v12;
    uint64_t v43 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    uint64_t result = (uint64_t *)sub_262739750(0, v15 & ~(v15 >> 63), 0);
    if (v15 < 0)
    {
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    uint64_t v18 = v43;
    if (v17 <= v14) {
      uint64_t v19 = v14;
    }
    else {
      uint64_t v19 = v17;
    }
    uint64_t v20 = v19 - v17;
    uint64_t v21 = (int *)(v16 + 4 * v17);
    while (v20)
    {
      int v22 = *v21;
      unint64_t v24 = *(void *)(v43 + 16);
      unint64_t v23 = *(void *)(v43 + 24);
      if (v24 >= v23 >> 1) {
        uint64_t result = (uint64_t *)sub_262739750(v23 > 1, v24 + 1, 1);
      }
      *(void *)(v43 + 16) = v24 + 1;
      *(_DWORD *)(v43 + 4 * v24 + 32) = v22;
      --v20;
      ++v21;
      if (!--v15)
      {
        swift_unknownObjectRelease();
        goto LABEL_22;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
  swift_bridgeObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v18 = MEMORY[0x263F8EE78];
LABEL_22:
  uint64_t result = (uint64_t *)a5;
  int64_t v25 = *(void *)(*a6 + 16);
  if (v25 < v7) {
    goto LABEL_44;
  }
  uint64_t result = (uint64_t *)sub_26273D450(a5, *a6, *a6 + 32, v7, (2 * v25) | 1);
  int64_t v29 = v28 >> 1;
  uint64_t v30 = (v28 >> 1) - v27;
  if (__OFSUB__(v28 >> 1, v27))
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (v30)
  {
    uint64_t v31 = v26;
    uint64_t v32 = v27;
    uint64_t v44 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    uint64_t result = (uint64_t *)sub_26273AC68(0, v30 & ~(v30 >> 63), 0);
    if (v30 < 0)
    {
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    uint64_t v33 = v44;
    if (v32 <= v29) {
      uint64_t v34 = v29;
    }
    else {
      uint64_t v34 = v32;
    }
    uint64_t v35 = v34 - v32;
    uint64_t v36 = (uint64_t *)(v31 + 8 * v32);
    while (v35)
    {
      uint64_t v37 = *v36;
      if (*v36 < 0) {
        goto LABEL_40;
      }
      unint64_t v39 = *(void *)(v44 + 16);
      unint64_t v38 = *(void *)(v44 + 24);
      if (v39 >= v38 >> 1) {
        uint64_t result = (uint64_t *)sub_26273AC68(v38 > 1, v39 + 1, 1);
      }
      *(void *)(v44 + 16) = v39 + 1;
      *(void *)(v44 + 8 * v39 + 32) = v37;
      --v35;
      ++v36;
      if (!--v30)
      {
        uint64_t result = (uint64_t *)swift_unknownObjectRelease();
        goto LABEL_37;
      }
    }
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  uint64_t result = (uint64_t *)swift_unknownObjectRelease();
  uint64_t v33 = MEMORY[0x263F8EE78];
LABEL_37:
  *a7 = v18;
  a7[1] = v33;
  return result;
}

uint64_t MatrixNNScorer.deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 96));
  return v0;
}

uint64_t MatrixNNScorer.__deallocating_deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 96));
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t sub_26273D910(uint64_t *a1, uint64_t a2, char a3)
{
  uint64_t v6 = *a1;
  int64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *int64_t v7 = v3;
  v7[1] = sub_26273E3F8;
  return sub_26273B008(v6, a2, a3);
}

int64_t *sub_26273D9C0(int64_t *result, int64_t a2)
{
  uint64_t v2 = a2 - (void)result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    if (!v2) {
      return (int64_t *)MEMORY[0x263F8EE78];
    }
    int64_t v4 = (int64_t)result;
    if (v2 <= 0)
    {
      int64_t v5 = (int64_t *)MEMORY[0x263F8EE78];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A957310);
      int64_t v5 = (int64_t *)swift_allocObject();
      int64_t v6 = _swift_stdlib_malloc_size(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      void v5[2] = v2;
      v5[3] = 2 * (v7 >> 3);
    }
    uint64_t result = sub_26273DECC(v8, v5 + 4, v2, v4, a2);
    if (result == (int64_t *)v2) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_26273DA88(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v8 = 8 * v5;
    if (v5 <= 0)
    {
      uint64_t v9 = (char *)MEMORY[0x263F8EE78];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        uint64_t v12 = v9 + 32;
        unint64_t v13 = (char *)(a2 + 8 * a3);
        if (v13 < &v9[v8 + 32] && v12 < &v13[v8]) {
          goto LABEL_19;
        }
        memcpy(v12, v13, 8 * v5);
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A957310);
      uint64_t v9 = (char *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 25;
      }
      *((void *)v9 + 2) = v5;
      *((void *)v9 + 3) = 2 * (v11 >> 3);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_26276FC00();
  __break(1u);
  return result;
}

uint64_t sub_26273DBF4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v8 = 4 * v5;
    if (v5 <= 0)
    {
      uint64_t v9 = (char *)MEMORY[0x263F8EE78];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        uint64_t v12 = v9 + 32;
        unint64_t v13 = (char *)(a2 + 4 * a3);
        if (v13 < &v9[v8 + 32] && v12 < &v13[v8]) {
          goto LABEL_19;
        }
        memcpy(v12, v13, 4 * v5);
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A957348);
      uint64_t v9 = (char *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 29;
      }
      *((void *)v9 + 2) = v5;
      *((void *)v9 + 3) = 2 * (v11 >> 2);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_26276FC00();
  __break(1u);
  return result;
}

uint64_t sub_26273DD60(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v8 = 16 * v5;
    if (v5 <= 0)
    {
      uint64_t v9 = (char *)MEMORY[0x263F8EE78];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        uint64_t v12 = v9 + 32;
        unint64_t v13 = (char *)(a2 + 16 * a3);
        if (v13 < &v9[v8 + 32] && v12 < &v13[v8]) {
          goto LABEL_19;
        }
        memcpy(v12, v13, 16 * v5);
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A957318);
      uint64_t v9 = (char *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 17;
      }
      *((void *)v9 + 2) = v5;
      *((void *)v9 + 3) = 2 * (v11 >> 4);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_26276FC00();
  __break(1u);
  return result;
}

int64_t *sub_26273DECC(int64_t *result, int64_t *a2, uint64_t a3, int64_t a4, int64_t a5)
{
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
LABEL_6:
    int64_t v5 = a4;
LABEL_7:
    *uint64_t result = a4;
    result[1] = a5;
    result[2] = v5;
    return (int64_t *)a3;
  }
  if (a3 < 0) {
    goto LABEL_31;
  }
  if (a5 == a4)
  {
LABEL_5:
    a3 = 0;
    goto LABEL_6;
  }
  if (a5 < a4) {
    goto LABEL_32;
  }
  int64_t v6 = a5 - a4;
  if (a5 > a4)
  {
    int64_t v5 = a4 + 1;
    *a2 = a4;
    if (a3 == 1) {
      goto LABEL_7;
    }
    if (v5 == a5)
    {
      a3 = 1;
      int64_t v5 = a5;
      goto LABEL_7;
    }
    unint64_t v7 = v6 - 2;
    if (v6 - 2 >= (unint64_t)(a3 - 2)) {
      unint64_t v7 = a3 - 2;
    }
    if (v7 >= ~a4 + a5) {
      unint64_t v7 = ~a4 + a5;
    }
    unint64_t v8 = v7 + 1;
    if (v8 >= 5)
    {
      uint64_t v11 = v8 & 3;
      if ((v8 & 3) == 0) {
        uint64_t v11 = 4;
      }
      unint64_t v12 = v8 - v11;
      int64_t v13 = v5 + v8 - v11;
      int64_t v10 = &a2[v8 - v11];
      uint64_t v9 = v12 + 2;
      int64x2_t v14 = vaddq_s64(vdupq_n_s64(v5), (int64x2_t)xmmword_262771470);
      uint64_t v15 = (int64x2_t *)(a2 + 3);
      int64x2_t v16 = vdupq_n_s64(2uLL);
      do
      {
        v15[-1] = v14;
        *uint64_t v15 = vaddq_s64(v14, v16);
        int64x2_t v14 = vaddq_s64(v14, vdupq_n_s64(4uLL));
        v15 += 2;
        v12 -= 4;
      }
      while (v12);
      int64_t v5 = v13;
    }
    else
    {
      uint64_t v9 = 2;
      int64_t v10 = a2;
    }
    uint64_t v17 = v10 + 1;
    while (v5 < a5)
    {
      int64_t v18 = v5 + 1;
      *uint64_t v17 = v5;
      if (a3 == v9)
      {
        ++v5;
        goto LABEL_7;
      }
      ++v9;
      ++v17;
      ++v5;
      if (a5 == v18)
      {
        int64_t v5 = a5;
        a3 = a5 - a4;
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_26273E00C(uint64_t result, uint64_t a2, unint64_t a3)
{
  int64_t v3 = a3 >> 1;
  uint64_t v4 = (a3 >> 1) - a2;
  if (__OFSUB__(a3 >> 1, a2)) {
    goto LABEL_13;
  }
  uint64_t v6 = result;
  if (!v4)
  {
    unint64_t v7 = (void *)MEMORY[0x263F8EE78];
    if (v3 >= a2) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957348);
  unint64_t v7 = (void *)swift_allocObject();
  uint64_t result = _swift_stdlib_malloc_size(v7);
  uint64_t v8 = result - 32;
  if (result < 32) {
    uint64_t v8 = result - 29;
  }
  v7[2] = v4;
  v7[3] = 2 * (v8 >> 2);
  if (v3 < a2)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
LABEL_6:
  uint64_t result = (uint64_t)memcpy(v7 + 4, (const void *)(v6 + 4 * a2), 4 * v4);
  if (__OFSUB__(0, a2))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v9 = v7[2];
  BOOL v10 = __OFADD__(a2, v9);
  uint64_t v11 = a2 + v9;
  if (v10)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v11 < a2)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if ((v11 & 0x8000000000000000) == 0) {
    return (uint64_t)v7;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_26273E108()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for MatrixNNScorer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for MatrixNNScorer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MatrixNNScorer);
}

uint64_t dispatch thunk of MatrixNNScorer.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of MatrixNNScorer.score(_:topK:skipFirst:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v3 + 112)
                                                          + **(int **)(*(void *)v3 + 112));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_26273E2FC;
  return v10(a1, a2, a3);
}

uint64_t sub_26273E2FC(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_26273E3FC(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  int v22 = a1;
  uint64_t v23 = a2;
  uint64_t v21 = sub_26276F4B0();
  uint64_t v8 = *(void *)(v21 - 8);
  uint64_t result = MEMORY[0x270FA5388](v21);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a3;
  uint64_t v12 = a4 - a3;
  if (__OFSUB__(a4, a3))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v13 = MEMORY[0x263F8EE78];
  if (!v12) {
    return v13;
  }
  uint64_t v26 = MEMORY[0x263F8EE78];
  uint64_t result = sub_26273AC88(0, v12 & ~(v12 >> 63), 0);
  if ((v12 & 0x8000000000000000) == 0)
  {
    uint64_t v13 = v26;
    uint64_t v14 = v24;
    if (a4 <= v24) {
      uint64_t v15 = v24;
    }
    else {
      uint64_t v15 = a4;
    }
    uint64_t v19 = v15;
    uint64_t v20 = v8 + 32;
    while (a4 != v14)
    {
      uint64_t v25 = v14;
      v22(&v25);
      if (v5)
      {
        swift_release();
        return v13;
      }
      uint64_t v5 = 0;
      uint64_t v26 = v13;
      unint64_t v17 = *(void *)(v13 + 16);
      unint64_t v16 = *(void *)(v13 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_26273AC88(v16 > 1, v17 + 1, 1);
        uint64_t v13 = v26;
      }
      *(void *)(v13 + 16) = v17 + 1;
      uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v17, v11, v21);
      if (a4 < v24) {
        goto LABEL_19;
      }
      if (v19 == v14) {
        goto LABEL_20;
      }
      if (a4 == ++v14) {
        return v13;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_26273E5F8(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v17 = a1;
  uint64_t v18 = a2;
  uint64_t v16 = sub_26276F4B0();
  uint64_t v6 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
  if (v9)
  {
    uint64_t v20 = MEMORY[0x263F8EE78];
    sub_26273AC88(0, v9, 0);
    uint64_t v10 = v20;
    uint64_t v11 = (uint64_t *)(a3 + 32);
    v15[1] = v6 + 32;
    while (1)
    {
      uint64_t v19 = *v11;
      swift_bridgeObjectRetain();
      v17(&v19);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      swift_bridgeObjectRelease();
      uint64_t v20 = v10;
      unint64_t v13 = *(void *)(v10 + 16);
      unint64_t v12 = *(void *)(v10 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_26273AC88(v12 > 1, v13 + 1, 1);
        uint64_t v10 = v20;
      }
      *(void *)(v10 + 16) = v13 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v13, v8, v16);
      ++v11;
      if (!--v9) {
        return v10;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v10;
}

uint64_t TensorNNScorer.__allocating_init(_:on:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v4 + 80) - 8) + 32))(v4 + *(void *)(*(void *)v4 + 104), a1);
  sub_262731B88(a2, v4 + qword_26A95E200);
  return v4;
}

uint64_t TensorNNScorer.init(_:on:)(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v2 + 80) - 8) + 32))(v2 + *(void *)(*(void *)v2 + 104), a1);
  sub_262731B88(a2, v2 + qword_26A95E200);
  return v2;
}

uint64_t sub_26273E90C(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 168) = a2;
  *(void *)(v4 + 176) = v3;
  *(unsigned char *)(v4 + 624) = a3;
  *(void *)(v4 + 160) = a1;
  uint64_t v5 = *v3;
  uint64_t v6 = sub_26276F910();
  *(void *)(v4 + 184) = v6;
  *(void *)(v4 + 192) = *(void *)(v6 - 8);
  *(void *)(v4 + 200) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9578F8);
  *(void *)(v4 + 208) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957900);
  *(void *)(v4 + 216) = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957908);
  *(void *)(v4 + 224) = v7;
  *(void *)(v4 + 232) = *(void *)(v7 - 8);
  *(void *)(v4 + 240) = swift_task_alloc();
  *(void *)(v4 + 248) = swift_task_alloc();
  *(void *)(v4 + 256) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9575B0);
  *(void *)(v4 + 264) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957910);
  *(void *)(v4 + 272) = swift_task_alloc();
  uint64_t v8 = *(void *)(v5 + 80);
  *(void *)(v4 + 280) = v8;
  *(void *)(v4 + 288) = *(void *)(v8 - 8);
  *(void *)(v4 + 296) = swift_task_alloc();
  uint64_t v9 = *(void *)(v5 + 88);
  *(void *)(v4 + 304) = v9;
  *(void *)(v4 + 312) = *(void *)(v9 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(void *)(v4 + 320) = AssociatedTypeWitness;
  *(void *)(v4 + 328) = *(void *)(AssociatedTypeWitness - 8);
  *(void *)(v4 + 336) = swift_task_alloc();
  *(void *)(v4 + 344) = *(void *)(v9 + 8);
  uint64_t v11 = swift_getAssociatedTypeWitness();
  *(void *)(v4 + 352) = v11;
  *(void *)(v4 + 360) = *(void *)(v11 - 8);
  *(void *)(v4 + 368) = swift_task_alloc();
  *(void *)(v4 + 376) = swift_task_alloc();
  *(void *)(v4 + 384) = swift_task_alloc();
  *(void *)(v4 + 392) = swift_task_alloc();
  *(void *)(v4 + 400) = swift_task_alloc();
  uint64_t v12 = sub_26276F330();
  *(void *)(v4 + 408) = v12;
  *(void *)(v4 + 416) = *(void *)(v12 - 8);
  *(void *)(v4 + 424) = swift_task_alloc();
  *(void *)(v4 + 432) = swift_task_alloc();
  *(void *)(v4 + 440) = swift_task_alloc();
  *(void *)(v4 + 448) = swift_task_alloc();
  uint64_t v13 = sub_26276F310();
  *(void *)(v4 + 456) = v13;
  *(void *)(v4 + 464) = *(void *)(v13 - 8);
  *(void *)(v4 + 472) = swift_task_alloc();
  uint64_t v14 = sub_26276F4B0();
  *(void *)(v4 + 480) = v14;
  *(void *)(v4 + 488) = *(void *)(v14 - 8);
  *(void *)(v4 + 496) = swift_task_alloc();
  *(void *)(v4 + 504) = swift_task_alloc();
  *(void *)(v4 + 512) = swift_task_alloc();
  *(void *)(v4 + 520) = swift_task_alloc();
  *(void *)(v4 + 528) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_26273EE34, 0, 0);
}

uint64_t sub_26273EE34()
{
  uint64_t v1 = *(void *)(v0 + 528);
  uint64_t v2 = *(void *)(v0 + 480);
  uint64_t v3 = *(void *)(v0 + 488);
  uint64_t v5 = *(void *)(v0 + 464);
  uint64_t v4 = *(void *)(v0 + 472);
  uint64_t v6 = *(void *)(v0 + 456);
  uint64_t v7 = *(void *)(v0 + 160);
  uint64_t v8 = *(void *)(v0 + 168);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(void *)(v0 + 536) = v9;
  *(void *)(v0 + 544) = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v9(v1, v7, v2);
  sub_26276F390();
  LOBYTE(v1) = sub_26276F300();
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if ((v1 & 1) != 0 && v8 >= 1)
  {
    uint64_t v16 = *(void *)(v0 + 168);
    if (*(unsigned char *)(v0 + 624) == 1 && (BOOL v17 = __OFADD__(v16, 1), ++v16, v17))
    {
      __break(1u);
    }
    else
    {
      *(void *)(v0 + 552) = v16;
      uint64_t v18 = *(void *)(v0 + 448);
      uint64_t v19 = *(void *)(v0 + 408);
      uint64_t v20 = *(void *)(v0 + 416);
      uint64_t v21 = *(void *)(v0 + 288);
      uint64_t v33 = *(void *)(v0 + 296);
      uint64_t v22 = *(void *)(v0 + 280);
      uint64_t v23 = *(void *)(v0 + 176);
      sub_26276F410();
      uint64_t v24 = sub_26276F350();
      uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      *(void *)(v0 + 560) = v25;
      *(void *)(v0 + 568) = (v20 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v25(v18, v19);
      uint64_t v32 = sub_2627357D4(MEMORY[0x263F8EE78], v24);
      sub_26276F410();
      uint64_t v26 = sub_26276F350();
      v25(v18, v19);
      uint64_t v27 = sub_2627357E0(MEMORY[0x263F8EE78], v26);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v33, v23 + *(void *)(*(void *)v23 + 104), v22);
      sub_26276F970();
      *(void *)(v0 + 576) = qword_26A95E200;
      *(void *)(v0 + 600) = v32;
      *(void *)(v0 + 592) = v27;
      *(void *)(v0 + 584) = 0;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      int64_t v29 = (void *)swift_task_alloc();
      *(void *)(v0 + 608) = v29;
      *int64_t v29 = v0;
      v29[1] = sub_26273F26C;
      uint64_t v13 = *(void *)(v0 + 392);
      uint64_t v14 = *(void *)(v0 + 320);
      uint64_t v10 = *(void *)(v0 + 272);
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v15 = AssociatedConformanceWitness;
    }
    return MEMORY[0x270FA1E88](v10, v11, v12, v13, v14, v15);
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 488) + 8))(*(void *)(v0 + 528), *(void *)(v0 + 480));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
    return v30(0);
  }
}

uint64_t sub_26273F26C()
{
  *(void *)(*(void *)v1 + 616) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_262740608;
  }
  else {
    uint64_t v2 = sub_26273F380;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_26273F380()
{
  uint64_t v1 = *(void *)(v0 + 480);
  uint64_t v2 = *(void *)(v0 + 488);
  uint64_t v3 = *(void *)(v0 + 272);
  v187 = (void *)v0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = *(void *)(v0 + 600);
    uint64_t v5 = *(void *)(v0 + 592);
    uint64_t v184 = *(void *)(v0 + 584);
    uint64_t v180 = *(void *)(v0 + 552);
    uint64_t v6 = *(void *)(v0 + 456);
    uint64_t v7 = *(void *)(v0 + 464);
    uint64_t v8 = *(void *)(v0 + 208);
    uint64_t v9 = *(void *)(v0 + 176);
    (*(void (**)(void, void))(*(void *)(v0 + 328) + 8))(*(void *)(v0 + 336), *(void *)(v0 + 320));
    swift_bridgeObjectRetain();
    sub_26273E5F8((void (*)(uint64_t *))sub_262742110, v9, v4);
    swift_bridgeObjectRelease();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v10(v8, 1, 1, v6);
    sub_26276F490();
    swift_bridgeObjectRetain();
    sub_26273E5F8((void (*)(uint64_t *))sub_262742154, v9, v5);
    swift_bridgeObjectRelease();
    v10(v8, 1, 1, v6);
    sub_26276F490();
    if (v180 < v184)
    {
      uint64_t v11 = *(char **)(v0 + 528);
      uint64_t v13 = *(char **)(v0 + 496);
      uint64_t v12 = *(void *)(v0 + 504);
      uint64_t v14 = *(void *)(v0 + 480);
      uint64_t v15 = *(void *)(v0 + 488);
      uint64_t v164 = sub_262743364(v12, v13, *(unsigned __int8 *)(v0 + 624));
      uint64_t v16 = *(void (**)(char *, uint64_t))(v15 + 8);
      v16(v13, v14);
      v16((char *)v12, v14);
      v16(v11, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL v17 = (void *)v0;
LABEL_20:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v83 = (uint64_t (*)(uint64_t))v17[1];
      return v83(v164);
    }
    if (qword_26A9572B0 == -1) {
      goto LABEL_15;
    }
    goto LABEL_119;
  }
  int64_t v18 = *(void *)(v0 + 584);
  uint64_t v19 = *(void (**)(void))(v2 + 32);
  ((void (*)(void, uint64_t, uint64_t))v19)(*(void *)(v0 + 520), v3, v1);
  if (v18 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_112:
    __break(1u);
    goto LABEL_113;
  }
  uint64_t v20 = *(void *)(v0 + 584);
  if (v20 > 0x7FFFFFFF)
  {
LABEL_113:
    __break(1u);
    goto LABEL_114;
  }
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
  uint64_t v22 = *(void *)(v0 + 448);
  uint64_t v23 = *(void *)(v0 + 408);
  sub_26276F410();
  uint64_t v24 = sub_26276F350();
  v21(v22, v23);
  uint64_t v25 = v20 + v24;
  if (__OFADD__(v20, v24))
  {
LABEL_114:
    __break(1u);
    goto LABEL_115;
  }
  if (v25 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_115:
    __break(1u);
    goto LABEL_116;
  }
  if (v25 > 0x7FFFFFFF)
  {
LABEL_116:
    __break(1u);
    goto LABEL_117;
  }
  uint64_t v169 = (void (*)(uint64_t, uint64_t, uint64_t))v19;
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 536);
  uint64_t v27 = *(void *)(v0 + 520);
  uint64_t v28 = *(void *)(v0 + 512);
  uint64_t v29 = *(void *)(v0 + 480);
  uint64_t v30 = *(void *)(v0 + 176) + *(void *)(v0 + 576);
  uint64_t v31 = *(void *)(v0 + 264);
  uint64_t v32 = *(void *)(v0 + 256);
  uint64_t v173 = *(void *)(v0 + 224);
  *(void *)(v0 + 72) = sub_262742B18(*(unsigned int *)(v0 + 584) | (unint64_t)(v25 << 32), 1);
  sub_262732F7C(v30, v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957338);
  sub_262743D90(&qword_26A957918, &qword_26A957338);
  sub_26276F4C0();
  uint64_t v33 = v32 + *(int *)(v173 + 48);
  v26(v32, v27, v29);
  v26(v33, v28, v29);
  sub_26276F410();
  sub_262743A8C();
  sub_26276F9B0();
  uint64_t v34 = *(void *)(v0 + 88);
  if (v34 < 1)
  {
LABEL_117:
    __break(1u);
    goto LABEL_118;
  }
  uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
  uint64_t v36 = *(void *)(v0 + 448);
  uint64_t v37 = *(void *)(v0 + 408);
  *(void *)(v0 + 32) = 1;
  *(void *)(v0 + 40) = v34;
  sub_26276F9E0();
  v35(v36, v37);
  sub_26276F410();
  sub_26276F9B0();
  uint64_t v38 = *(void *)(v0 + 104);
  if (v38 < 1)
  {
LABEL_118:
    __break(1u);
LABEL_119:
    swift_once();
LABEL_15:
    uint64_t v63 = sub_26276F530();
    __swift_project_value_buffer(v63, (uint64_t)qword_26A95E208);
    unint64_t v64 = sub_26276F510();
    os_log_type_t v65 = sub_26276FA50();
    BOOL v17 = v187;
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = v187[73];
      uint64_t v67 = v187[21];
      uint64_t v68 = swift_slowAlloc();
      *(_DWORD *)uint64_t v68 = 134218240;
      v187[7] = v67;
      sub_26276FA70();
      *(_WORD *)(v68 + 12) = 2048;
      v187[8] = v66;
      sub_26276FA70();
      _os_log_impl(&dword_262725000, v64, v65, "Not enough samples to score with top-k = %ld, target samples = %ld.", (uint8_t *)v68, 0x16u);
      MEMORY[0x263E528C0](v68, -1, -1);
    }
    uint64_t v69 = v187[66];
    uint64_t v71 = v187[62];
    uint64_t v70 = v187[63];
    uint64_t v73 = v187[60];
    uint64_t v72 = v187[61];

    uint64_t v74 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
    v74(v71, v73);
    v74(v70, v73);
    v74(v69, v73);
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  uint64_t v181 = v33;
  unint64_t v39 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
  uint64_t v40 = *(void *)(v0 + 440);
  uint64_t v41 = *(void *)(v0 + 432);
  uint64_t v42 = *(void *)(v0 + 424);
  uint64_t v43 = *(void *)(v0 + 408);
  *(void *)(v0 + 16) = 1;
  *(void *)(v0 + 24) = v38;
  sub_26276F9E0();
  v39(v41, v43);
  uint64_t v44 = sub_26276F320();
  os_log_type_t v45 = (void *)sub_26276F320();
  char v46 = sub_262742E20(v44, v45);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v39(v42, v43);
  v39(v40, v43);
  uint64_t v185 = *(void *)(v0 + 528);
  if ((v46 & 1) == 0)
  {
    uint64_t v75 = *(void *)(v0 + 520);
    uint64_t v76 = *(void *)(v0 + 512);
    uint64_t v78 = *(void *)(v0 + 480);
    uint64_t v77 = *(void *)(v0 + 488);
    uint64_t v79 = v187[42];
    uint64_t v80 = v187[41];
    uint64_t v81 = v187[40];
    sub_262743D34(v187[32], &qword_26A957908);
    uint64_t v82 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
    v82(v76, v78);
    v82(v75, v78);
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v79, v81);
    BOOL v17 = v187;
    v82(v185, v78);
    swift_bridgeObjectRelease();
LABEL_19:
    swift_bridgeObjectRelease();
    uint64_t v164 = 0;
    goto LABEL_20;
  }
  uint64_t v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 536);
  uint64_t v48 = *(void *)(v0 + 480);
  uint64_t v49 = *(void *)(v0 + 488);
  uint64_t v50 = *(void *)(v0 + 232);
  uint64_t v51 = *(void *)(v0 + 240);
  uint64_t v52 = *(void *)(v0 + 216);
  uint64_t v174 = *(char **)(v0 + 552);
  uint64_t v177 = *(void *)(v0 + 224);
  uint64_t v53 = v51 + *(int *)(v177 + 48);
  v47(v51, *(void *)(v0 + 256), v48);
  v47(v53, v181, v48);
  sub_262740F28(v185, v51, v53, v174, v52);
  uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
  v54(v53, v48);
  v54(v51, v48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v52, 1, v177) == 1)
  {
    uint64_t v178 = v187[66];
    uint64_t v55 = v187[65];
    uint64_t v56 = v187[64];
    uint64_t v57 = v187[60];
    uint64_t v58 = v54;
    uint64_t v60 = v187[41];
    uint64_t v59 = v187[42];
    uint64_t v61 = v187[40];
    uint64_t v62 = v187[27];
    sub_262743D34(v187[32], &qword_26A957908);
    v58(v56, v57);
    v58(v55, v57);
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v61);
    v58(v178, v57);
    sub_262743D34(v62, &qword_26A957900);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v164 = 0;
    BOOL v17 = v187;
    goto LABEL_20;
  }
  uint64_t v85 = v187[60];
  uint64_t v86 = *(int *)(v187[28] + 48);
  uint64_t v87 = v187[31] + v86;
  uint64_t v88 = v187[27] + v86;
  ((void (*)(void))v169)(v187[31]);
  v169(v87, v88, v85);
  uint64_t v89 = sub_26276F450();
  int64_t v90 = *(void *)(v89 + 16);
  if (v90)
  {
    uint64_t v91 = v187 + 14;
    v187[14] = MEMORY[0x263F8EE78];
    sub_262739750(0, v90, 0);
    uint64_t v92 = 0;
    uint64_t v93 = v187[14];
    unint64_t v94 = *(void *)(v93 + 16);
    do
    {
      int v95 = *(_DWORD *)(v89 + 4 * v92 + 32);
      *uint64_t v91 = v93;
      unint64_t v96 = *(void *)(v93 + 24);
      if (v94 >= v96 >> 1)
      {
        sub_262739750(v96 > 1, v94 + 1, 1);
        uint64_t v93 = *v91;
      }
      ++v92;
      *(void *)(v93 + 16) = v94 + 1;
      *(_DWORD *)(v93 + 4 * v94++ + 32) = v95;
    }
    while (v90 != v92);
    uint64_t v175 = v93;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v175 = MEMORY[0x263F8EE78];
  }
  uint64_t v97 = sub_26276F450();
  int64_t v98 = *(void *)(v97 + 16);
  v165 = v54;
  if (v98)
  {
    uint64_t v99 = v187 + 15;
    v187[15] = MEMORY[0x263F8EE78];
    sub_26273ACA8(0, v98, 0);
    uint64_t v100 = 0;
    uint64_t v101 = v187[15];
    unint64_t v102 = *(void *)(v101 + 16);
    do
    {
      int v103 = *(_DWORD *)(v97 + 4 * v100 + 32);
      *uint64_t v99 = v101;
      unint64_t v104 = *(void *)(v101 + 24);
      if (v102 >= v104 >> 1)
      {
        sub_26273ACA8(v104 > 1, v102 + 1, 1);
        uint64_t v101 = *v99;
      }
      ++v100;
      *(void *)(v101 + 16) = v102 + 1;
      *(_DWORD *)(v101 + 4 * v102++ + 32) = v103;
    }
    while (v98 != v100);
    uint64_t v179 = v101;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v179 = MEMORY[0x263F8EE78];
  }
  uint64_t v105 = (uint64_t (*)(uint64_t, uint64_t))v187[70];
  uint64_t v106 = v187[56];
  uint64_t v107 = v187[51];
  sub_26276F410();
  uint64_t v108 = sub_26276F350();
  uint64_t v109 = v105(v106, v107);
  if (v108 < 0)
  {
    __break(1u);
    goto LABEL_121;
  }
  uint64_t v115 = v175;
  if (!v108)
  {
    unint64_t v118 = (void *)v187[75];
    v186 = (void *)v187[74];
LABEL_87:
    v183 = v118;
    uint64_t v154 = (void (*)(uint64_t, uint64_t))v187[70];
    uint64_t v155 = v187[65];
    uint64_t v172 = v187[64];
    uint64_t v176 = v187[73];
    uint64_t v156 = v187[60];
    uint64_t v157 = v187[56];
    uint64_t v158 = v187[51];
    uint64_t v160 = v187[31];
    uint64_t v159 = v187[32];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_26276F410();
    uint64_t v161 = sub_26276F350();
    v154(v157, v158);
    sub_262743D34(v160, &qword_26A957908);
    sub_262743D34(v159, &qword_26A957908);
    v165(v172, v156);
    uint64_t v109 = ((uint64_t (*)(uint64_t, uint64_t))v165)(v155, v156);
    if (!__OFADD__(v176, v161))
    {
      v187[75] = v183;
      v187[74] = v186;
      v187[73] = v176 + v161;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v163 = (void *)swift_task_alloc();
      v187[76] = v163;
      *uint64_t v163 = v187;
      v163[1] = sub_26273F26C;
      uint64_t v112 = v187[49];
      uint64_t v113 = v187[40];
      uint64_t v109 = v187[34];
      uint64_t v110 = 0;
      uint64_t v111 = 0;
      uint64_t v114 = AssociatedConformanceWitness;
      return MEMORY[0x270FA1E88](v109, v110, v111, v112, v113, v114);
    }
LABEL_121:
    __break(1u);
    return MEMORY[0x270FA1E88](v109, v110, v111, v112, v113, v114);
  }
  unint64_t v116 = 0;
  uint64_t v168 = v108;
  uint64_t v117 = v187[77];
  uint64_t v166 = v187 + 19;
  v167 = v187 + 18;
  unint64_t v118 = (void *)v187[75];
  unint64_t v170 = v187 + 16;
  v186 = (void *)v187[74];
  while (1)
  {
    uint64_t v119 = v187[69];
    unint64_t v120 = v116 * v119;
    if ((unsigned __int128)((uint64_t)v116 * (__int128)v119) >> 64 != (uint64_t)(v116 * v119) >> 63) {
      goto LABEL_100;
    }
    uint64_t v121 = (v116 + 1) * v119;
    if ((unsigned __int128)((uint64_t)(v116 + 1) * (__int128)v119) >> 64 != v121 >> 63) {
      goto LABEL_101;
    }
    if (v121 < (uint64_t)v120) {
      goto LABEL_102;
    }
    if ((v120 & 0x8000000000000000) != 0) {
      goto LABEL_103;
    }
    unint64_t v122 = *(void *)(v115 + 16);
    if (v122 < v120 || (uint64_t)v122 < v121) {
      goto LABEL_104;
    }
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v118 = sub_262735FF8(v118);
    }
    if (v116 >= v118[2]) {
      goto LABEL_105;
    }
    uint64_t v182 = v118;
    uint64_t v124 = (uint64_t)&v118[v116 + 4];
    sub_2627347F0(v175, v175 + 32, v120, (2 * v121) | 1);
    swift_bridgeObjectRelease();
    unint64_t v125 = *(void *)(v179 + 16);
    if (v125 < v120 || v125 < v121) {
      goto LABEL_106;
    }
    swift_bridgeObjectRetain();
    unint64_t v171 = v116 + 1;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v126 = v186;
    }
    else {
      uint64_t v126 = sub_262735FE4(v186);
    }
    if (v116 >= v126[2]) {
      goto LABEL_107;
    }
    v186 = v126;
    uint64_t v127 = (uint64_t)&v126[v116 + 4];
    sub_262734988(v179, v179 + 32, v120, (2 * v121) | 1);
    swift_bridgeObjectRelease();
    if (v116 >= v118[2]) {
      goto LABEL_108;
    }
    uint64_t v128 = *(void *)v124;
    swift_bridgeObjectRetain_n();
    uint64_t v129 = sub_262742F60(v128);
    swift_bridgeObjectRelease();
    *unint64_t v170 = v129;
    sub_2627420A4(v170);
    if (v117) {
      break;
    }
    uint64_t v130 = v187[69];
    swift_bridgeObjectRelease();
    if (v130 < 0) {
      goto LABEL_109;
    }
    uint64_t v131 = v187[16];
    uint64_t v132 = v187[69];
    if (*(void *)(v131 + 16) < v132) {
      uint64_t v132 = *(void *)(v131 + 16);
    }
    uint64_t v133 = sub_262743238(v131 + 32, 0, (2 * v132) | 1);
    swift_release();
    int64_t v134 = *(void *)(v133 + 16);
    if (v134)
    {
      vDSP_Length v135 = v187 + 18;
      uint64_t *v167 = MEMORY[0x263F8EE78];
      sub_262739750(0, v134, 0);
      uint64_t v136 = *v167;
      uint64_t v137 = (unint64_t *)(v133 + 32);
      v138 = v182;
      while (v116 < v138[2])
      {
        unint64_t v140 = *v137++;
        unint64_t v139 = v140;
        if ((v140 & 0x8000000000000000) != 0) {
          goto LABEL_95;
        }
        if (v139 >= *(void *)(*(void *)v124 + 16)) {
          goto LABEL_96;
        }
        int v141 = *(_DWORD *)(*(void *)v124 + 4 * v139 + 32);
        *vDSP_Length v135 = v136;
        unint64_t v143 = *(void *)(v136 + 16);
        unint64_t v142 = *(void *)(v136 + 24);
        if (v143 >= v142 >> 1)
        {
          sub_262739750(v142 > 1, v143 + 1, 1);
          vDSP_Length v135 = v187 + 18;
          v138 = v182;
          uint64_t v136 = *v167;
        }
        *(void *)(v136 + 16) = v143 + 1;
        *(_DWORD *)(v136 + 4 * v143 + 32) = v141;
        if (!--v134)
        {
          uint64_t v144 = MEMORY[0x263F8EE78];
          goto LABEL_71;
        }
      }
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
      goto LABEL_97;
    }
    uint64_t v144 = MEMORY[0x263F8EE78];
    uint64_t v136 = MEMORY[0x263F8EE78];
LABEL_71:
    if (v116 >= v182[2]) {
      goto LABEL_110;
    }
    *(void *)uint64_t v124 = v136;
    swift_bridgeObjectRelease();
    int64_t v145 = *(void *)(v133 + 16);
    if (v145)
    {
      *uint64_t v166 = v144;
      sub_26273ACA8(0, v145, 0);
      uint64_t v146 = v187 + 19;
      uint64_t v147 = 0;
      uint64_t v148 = *v166;
      int v149 = v186;
      while (v116 < v149[2])
      {
        unint64_t v150 = *(void *)(v133 + 8 * v147 + 32);
        if ((v150 & 0x8000000000000000) != 0) {
          goto LABEL_98;
        }
        if (v150 >= *(void *)(*(void *)v127 + 16)) {
          goto LABEL_99;
        }
        int v151 = *(_DWORD *)(*(void *)v127 + 4 * v150 + 32);
        *uint64_t v146 = v148;
        unint64_t v153 = *(void *)(v148 + 16);
        unint64_t v152 = *(void *)(v148 + 24);
        if (v153 >= v152 >> 1)
        {
          sub_26273ACA8(v152 > 1, v153 + 1, 1);
          uint64_t v146 = v187 + 19;
          int v149 = v186;
          uint64_t v148 = *v166;
        }
        ++v147;
        *(void *)(v148 + 16) = v153 + 1;
        *(_DWORD *)(v148 + 4 * v153 + 32) = v151;
        if (v145 == v147)
        {
          swift_bridgeObjectRelease();
          goto LABEL_82;
        }
      }
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
LABEL_102:
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
      goto LABEL_112;
    }
    swift_bridgeObjectRelease();
    uint64_t v148 = v144;
LABEL_82:
    if (v116 >= v186[2]) {
      goto LABEL_111;
    }
    *(void *)uint64_t v127 = v148;
    swift_bridgeObjectRelease();
    ++v116;
    uint64_t v115 = v175;
    unint64_t v118 = v182;
    if (v171 == v168) {
      goto LABEL_87;
    }
  }
  return swift_release();
}

uint64_t sub_262740608()
{
  uint64_t v1 = v0[49];
  uint64_t v2 = v0[50];
  uint64_t v3 = v0[44];
  uint64_t v4 = v0[45];
  (*(void (**)(void, void))(v0[41] + 8))(v0[42], v0[40]);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v5(v2, v1, v3);
  if (swift_dynamicCast())
  {
    if (qword_26A9572B0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_26276F530();
    __swift_project_value_buffer(v6, (uint64_t)qword_26A95E208);
    uint64_t v7 = sub_26276F510();
    os_log_type_t v8 = sub_26276FA30();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_262725000, v7, v8, "Task canceled at scoring.", v9, 2u);
      MEMORY[0x263E528C0](v9, -1, -1);
    }
    uint64_t v10 = v0[66];
    uint64_t v11 = v0[60];
    uint64_t v12 = v0[61];
    uint64_t v50 = v0[50];
    uint64_t v13 = v0[45];
    uint64_t v49 = v0[44];
    uint64_t v14 = v0[24];
    uint64_t v15 = v0[25];
    uint64_t v16 = v0[23];

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v16);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v50, v49);
  }
  else
  {
    BOOL v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[45] + 16);
    v17(v0[48], v0[50], v0[44]);
    if (qword_26A9572B0 != -1) {
      swift_once();
    }
    uint64_t v18 = v0[47];
    uint64_t v19 = v0[48];
    uint64_t v20 = v0[44];
    uint64_t v21 = sub_26276F530();
    __swift_project_value_buffer(v21, (uint64_t)qword_26A95E208);
    v17(v18, v19, v20);
    uint64_t v22 = sub_26276F510();
    os_log_type_t v23 = sub_26276FA50();
    BOOL v24 = os_log_type_enabled(v22, v23);
    uint64_t v25 = v0[47];
    if (v24)
    {
      os_log_type_t v48 = v23;
      uint64_t v47 = v5;
      uint64_t v26 = v0[46];
      uint64_t v27 = v0[44];
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v51 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 138412290;
      v17(v26, v25, v27);
      swift_getAssociatedConformanceWitness();
      uint64_t v29 = sub_26276FD80();
      uint64_t v30 = v0[46];
      if (v29)
      {
        (*(void (**)(void, void))(v0[45] + 8))(v0[46], v0[44]);
      }
      else
      {
        uint64_t v34 = v0[44];
        swift_allocError();
        v47(v35, v30, v34);
      }
      uint64_t v36 = v0[47];
      uint64_t v38 = v0[44];
      uint64_t v37 = v0[45];
      uint64_t v39 = _swift_stdlib_bridgeErrorToNSError();
      v0[12] = v39;
      sub_26276FA70();
      void *v51 = v39;
      uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
      v33(v36, v38);
      _os_log_impl(&dword_262725000, v22, v48, "Error: %@", v28, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573B8);
      swift_arrayDestroy();
      MEMORY[0x263E528C0](v51, -1, -1);
      MEMORY[0x263E528C0](v28, -1, -1);
    }
    else
    {
      uint64_t v31 = v0[44];
      uint64_t v32 = v0[45];

      uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
      v33(v25, v31);
    }
    uint64_t v40 = v0[66];
    uint64_t v42 = v0[60];
    uint64_t v41 = v0[61];
    uint64_t v43 = v0[50];
    uint64_t v44 = v0[44];
    v33(v0[48], v44);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
    v33(v43, v44);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v45 = (uint64_t (*)(void))v0[1];
  return v45(0);
}

uint64_t sub_262740C38(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5, uint64_t (*a6)(uint64_t *, char *, uint64_t, uint64_t))
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9575B0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *a1;
  sub_262732F7C(a2 + qword_26A95E200, (uint64_t)v13);
  swift_bridgeObjectRetain();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v15 = sub_262743D90(a5, a4);
  return a6(&v18, v13, v14, v15);
}

uint64_t sub_262740D34@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10 = *a1;
  uint64_t v11 = *a1 * a3;
  if ((unsigned __int128)(*a1 * (__int128)a3) >> 64 != v11 >> 63)
  {
    __break(1u);
    goto LABEL_24;
  }
  BOOL v12 = __OFADD__(v10, 1);
  uint64_t v13 = v10 + 1;
  if (v12)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v6 = v13 * a3;
  if ((unsigned __int128)(v13 * (__int128)a3) >> 64 != (v13 * a3) >> 63)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  int64_t v8 = v6 - v11;
  if (v6 < v11)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v11 < 0)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_26273DBF4(v7, v7 + 32, v11, v24);
    goto LABEL_15;
  }
  uint64_t v7 = a2;
  unint64_t v14 = *(void *)(a2 + 16);
  if (v14 < v11 || (uint64_t)v14 < v6) {
    goto LABEL_28;
  }
  uint64_t v5 = a4;
  unint64_t v24 = (2 * v6) | 1;
  sub_26276FDB0();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v16 = swift_dynamicCastClass();
  if (!v16)
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = MEMORY[0x263F8EE78];
  }
  uint64_t v17 = *(void *)(v16 + 16);
  swift_release();
  if (v17 != v8) {
    goto LABEL_29;
  }
  uint64_t v18 = swift_dynamicCastClass();
  if (!v18)
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = MEMORY[0x263F8EE78];
  }
LABEL_15:
  swift_bridgeObjectRelease();
  unint64_t v19 = *(void *)(v5 + 16);
  if (v19 < v11 || v19 < v6)
  {
    __break(1u);
LABEL_31:
    swift_bridgeObjectRelease();
    uint64_t v22 = sub_26273DA88(v5, v5 + 32, v11, v24);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v20 = swift_dynamicCastClass();
  if (!v20)
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = MEMORY[0x263F8EE78];
  }
  uint64_t v21 = *(void *)(v20 + 16);
  swift_release();
  if (v21 != v8) {
    goto LABEL_31;
  }
  uint64_t v22 = swift_dynamicCastClass();
  if (!v22)
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = MEMORY[0x263F8EE78];
  }
LABEL_22:
  uint64_t result = swift_bridgeObjectRelease();
  *a5 = v18;
  a5[1] = v22;
  return result;
}

uint64_t sub_262740F28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v130 = a4;
  uint64_t v131 = a3;
  *(void *)&long long v134 = a1;
  uint64_t v128 = a5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9575B0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v114 = (uint64_t)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9578F8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v119 = (char *)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9579C8);
  uint64_t v10 = MEMORY[0x270FA5388](v121);
  unint64_t v122 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  BOOL v123 = (char *)&v106 - v12;
  uint64_t v129 = sub_26276F330();
  uint64_t v135 = *(void *)(v129 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v129);
  uint64_t v15 = (char *)&v106 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v124 = (char *)&v106 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957910);
  MEMORY[0x270FA5388](v17 - 8);
  unint64_t v19 = (char *)&v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_26276F4B0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  unint64_t v24 = (char *)&v106 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  unint64_t v125 = (char *)&v106 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  unint64_t v118 = (char *)&v106 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v126 = (char *)&v106 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v132 = (char *)&v106 - v32;
  MEMORY[0x270FA5388](v31);
  uint64_t v34 = (char *)&v106 - v33;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957908);
  uint64_t v127 = *(void *)(v35 - 8);
  uint64_t v36 = MEMORY[0x270FA5388](v35);
  uint64_t v115 = (char *)&v106 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = MEMORY[0x270FA5388](v36);
  uint64_t v39 = (char *)&v106 + *(int *)(v133 + 48) - v38;
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  uint64_t v41 = a2;
  uint64_t v42 = (char *)&v106 - v38;
  v40((char *)&v106 - v38, v41, v20);
  unint64_t v120 = v39;
  uint64_t v43 = v39;
  uint64_t v44 = v21;
  v40(v43, v131, v20);
  cosineSimilarityTensor(_:_:)(v134, (uint64_t)v42, (uint64_t)v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_262743D34((uint64_t)v42, &qword_26A957908);
    sub_262743D34((uint64_t)v19, &qword_26A957910);
    uint64_t v45 = 1;
    uint64_t v46 = v128;
    uint64_t v47 = v133;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v127 + 56))(v46, v45, 1, v47);
  }
  uint64_t v107 = v24;
  uint64_t v117 = (void (*)(char *, char *, uint64_t))v40;
  uint64_t v131 = v21 + 16;
  uint64_t v112 = v42;
  uint64_t v48 = v21 + 32;
  unint64_t v116 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
  v116(v34, v19, v20);
  uint64_t v49 = v124;
  sub_26276F410();
  uint64_t v50 = sub_26276F350();
  uint64_t v51 = v135 + 8;
  uint64_t v52 = *(void (**)(char *, uint64_t))(v135 + 8);
  uint64_t v53 = v129;
  v52(v49, v129);
  uint64_t v124 = (char *)v50;
  if (v50 >= (uint64_t)v130) {
    uint64_t v54 = v130;
  }
  else {
    uint64_t v54 = (char *)v50;
  }
  sub_26276F410();
  uint64_t v55 = sub_26276F350();
  v52(v15, v53);
  BOOL v56 = v54 == (char *)v55;
  uint64_t v57 = v34;
  uint64_t v108 = v34;
  uint64_t v111 = v48;
  uint64_t v135 = v51;
  uint64_t v109 = v54;
  uint64_t v110 = v44;
  if (v56)
  {
    uint64_t v58 = v53;
    uint64_t v59 = v132;
    v117(v132, v57, v20);
    sub_26276F410();
    uint64_t v60 = v126;
    sub_26276F380();
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v52)(v15, v58);
    uint64_t v61 = v15;
  }
  else
  {
    uint64_t v62 = v121;
    uint64_t v63 = v123;
    unint64_t v64 = &v123[*(int *)(v121 + 48)];
    sub_26276F3F0();
    uint64_t v65 = *(int *)(v62 + 48);
    uint64_t v66 = v122;
    uint64_t v67 = &v122[v65];
    uint64_t v68 = v63;
    uint64_t v69 = v117;
    v117(v122, v68, v20);
    uint64_t v106 = v64;
    v69(v67, v64, v20);
    v116(v132, v66, v20);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v67, v20);
    sub_26276F410();
    uint64_t v70 = sub_26276F350();
    *(void *)&long long v134 = v15;
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v52)(v15, v129);
    if (v70 < 0)
    {
      __break(1u);
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    uint64_t v72 = (uint64_t)v123;
    uint64_t v73 = (uint64_t)v115;
    uint64_t v74 = &v115[*(int *)(v133 + 48)];
    v69(v115, v112, v20);
    uint64_t v75 = v74;
    uint64_t v59 = v132;
    v69(v75, v120, v20);
    uint64_t v76 = (uint64_t)v122;
    uint64_t v77 = &v122[*(int *)(v121 + 48)];
    v69(v122, (char *)v72, v20);
    uint64_t v78 = ((uint64_t (*)(char *, char *, uint64_t))v69)(v77, v106, v20);
    MEMORY[0x270FA5388](v78);
    *(&v106 - 2) = (char *)v73;
    *(&v106 - 1) = (char *)v76;
    sub_26273E3FC((void (*)(uint64_t *))sub_262743D14, (uint64_t)(&v106 - 4), 0, v70);
    sub_262743D34(v73, &qword_26A957908);
    sub_262743D34(v76, &qword_26A9579C8);
    uint64_t v79 = sub_26276F310();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v119, 1, 1, v79);
    uint64_t v60 = v126;
    sub_26276F490();
    uint64_t result = sub_262743D34(v72, &qword_26A9579C8);
    uint64_t v61 = (char *)v134;
  }
  uint64_t v80 = v125;
  if ((uint64_t)v124 >= (uint64_t)v130)
  {
    (*(void (**)(char *, uint64_t))(v110 + 8))(v108, v20);
    sub_262743D34((uint64_t)v112, &qword_26A957908);
    uint64_t v47 = v133;
    unint64_t v104 = (void (*)(uint64_t, char *, uint64_t))v116;
LABEL_16:
    uint64_t v46 = v128;
    uint64_t v105 = v128 + *(int *)(v47 + 48);
    v104(v128, v59, v20);
    v104(v105, v60, v20);
    uint64_t v45 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v127 + 56))(v46, v45, 1, v47);
  }
  uint64_t v81 = v130 - v109;
  if (__OFSUB__(v130, v109)) {
    goto LABEL_19;
  }
  v117(v125, v59, v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9579D0);
  uint64_t v82 = swift_allocObject();
  long long v134 = xmmword_2627710F0;
  *(_OWORD *)(v82 + 16) = xmmword_2627710F0;
  *(void *)(v82 + 32) = 0;
  *(void *)(v82 + 40) = 0;
  *(void *)(v82 + 48) = 0;
  *(void *)(v82 + 56) = v81;
  uint64_t v83 = v107;
  sub_26276F3A0();
  v136[3] = MEMORY[0x263F8D5C8];
  v136[4] = MEMORY[0x263F585A0];
  sub_26276F440();
  uint64_t v84 = v59;
  uint64_t v86 = (char *)(v110 + 8);
  uint64_t v85 = *(void (**)(char *, uint64_t))(v110 + 8);
  v85(v83, v20);
  uint64_t v130 = (char *)v52;
  uint64_t v87 = v118;
  sub_26276F430();
  swift_bridgeObjectRelease();
  v85(v80, v20);
  uint64_t v124 = (char *)v85;
  unint64_t v122 = v86;
  v85(v84, v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v136);
  v116(v84, v87, v20);
  sub_26276F410();
  uint64_t v88 = sub_26276F350();
  uint64_t v89 = v129;
  int64_t v90 = v130;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v130)(v61, v129);
  BOOL v123 = (char *)v81;
  if ((unsigned __int128)(v88 * (__int128)v81) >> 64 == (v88 * v81) >> 63)
  {
    v136[0] = sub_2627356E8(0x80000000, v88 * v81);
    sub_262732F7C(v113 + qword_26A95E200, v114);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A957338);
    sub_262743D90(&qword_26A957918, &qword_26A957338);
    uint64_t v91 = v125;
    sub_26276F4C0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A957310);
    uint64_t v92 = swift_allocObject();
    *(_OWORD *)(v92 + 16) = v134;
    sub_26276F410();
    uint64_t v93 = sub_26276F350();
    ((void (*)(char *, uint64_t))v90)(v61, v89);
    unint64_t v94 = v123;
    *(void *)(v92 + 32) = v93;
    *(void *)(v92 + 40) = v94;
    sub_26276F340();
    sub_26276F470();
    ((void (*)(char *, uint64_t))v90)(v61, v89);
    int v95 = v124;
    ((void (*)(char *, uint64_t))v124)(v91, v20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9579D8);
    uint64_t v96 = *(void *)(v110 + 72);
    unint64_t v97 = (*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80);
    uint64_t v98 = swift_allocObject();
    *(_OWORD *)(v98 + 16) = v134;
    unint64_t v99 = v98 + v97;
    uint64_t v60 = v126;
    uint64_t v100 = (void (*)(uint64_t, char *, uint64_t))v117;
    v117((char *)v99, v126, v20);
    uint64_t v101 = v99 + v96;
    unint64_t v102 = v118;
    v100(v101, v118, v20);
    uint64_t v103 = sub_26276F310();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v119, 1, 1, v103);
    sub_26276F3B0();
    ((void (*)(char *, uint64_t))v95)(v102, v20);
    ((void (*)(char *, uint64_t))v95)(v60, v20);
    ((void (*)(char *, uint64_t))v95)(v108, v20);
    sub_262743D34((uint64_t)v112, &qword_26A957908);
    unint64_t v104 = (void (*)(uint64_t, char *, uint64_t))v116;
    v116(v60, v91, v20);
    uint64_t v59 = v132;
    uint64_t v47 = v133;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_262741CE0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v27 = a4;
  uint64_t v7 = sub_26276F4B0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9579C8);
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *a1;
  uint64_t v26 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A957908) + 48);
  uint64_t v15 = *(int *)(v12 + 56);
  uint64_t v16 = &v14[v15];
  uint64_t v17 = a3 + v15;
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v18(v14, a3, v7);
  v18(v16, v17, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9579E0);
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = MEMORY[0x263F8D6C8];
  *(_OWORD *)(v19 + 16) = xmmword_2627718D0;
  uint64_t v21 = MEMORY[0x263F585B8];
  *(void *)(v19 + 56) = v20;
  *(void *)(v19 + 64) = v21;
  *(void *)(v19 + 32) = v25;
  sub_26276F4D0();
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v8 + 8);
  v22(v16, v7);
  sub_26276F4A0();
  v22(v10, v7);
  return ((uint64_t (*)(char *, uint64_t))v22)(v14, v7);
}

uint64_t *TensorNNScorer.deinit()
{
  uint64_t v1 = *v0;
  sub_262743D34((uint64_t)v0 + qword_26A95E200, &qword_26A9575B0);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 104));
  return v0;
}

uint64_t TensorNNScorer.__deallocating_deinit()
{
  TensorNNScorer.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t sub_262741FF4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_26273E3F8;
  return sub_26273E90C(a1, a2, a3);
}

uint64_t sub_2627420A4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_26276CD80(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_262742198(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_262742110(uint64_t *a1, uint64_t a2)
{
  return sub_262740C38(a1, v2, a2, &qword_26A957308, &qword_26A9579E8, MEMORY[0x263F58510]);
}

uint64_t sub_262742154(uint64_t *a1, uint64_t a2)
{
  return sub_262740C38(a1, v2, a2, &qword_26A957338, &qword_26A957918, MEMORY[0x263F58518]);
}

uint64_t sub_262742198(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_26276FD50();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_141;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v84 = *a1;
      uint64_t v85 = *a1 + 16;
      uint64_t v86 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v88 = v86;
        uint64_t v89 = v85;
        do
        {
          float v90 = *(float *)(v89 + 8);
          if (*(float *)(v89 - 8) >= v90) {
            break;
          }
          if (!v84) {
            goto LABEL_145;
          }
          uint64_t v91 = *(void *)v89;
          *(_OWORD *)uint64_t v89 = *(_OWORD *)(v89 - 16);
          *(float *)(v89 - 8) = v90;
          *(void *)(v89 - 16) = v91;
          v89 -= 16;
        }
        while (!__CFADD__(v88++, 1));
        v85 += 16;
        --v86;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_150;
  }
  uint64_t v6 = result;
  uint64_t v101 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v12 = (char *)MEMORY[0x263F8EE78];
LABEL_107:
      uint64_t v93 = v12;
      uint64_t v104 = v9;
      if (v13 >= 2)
      {
        uint64_t v94 = *v101;
        do
        {
          unint64_t v95 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_136;
          }
          if (!v94) {
            goto LABEL_149;
          }
          uint64_t v96 = v93;
          uint64_t v97 = *(void *)&v93[16 * v95 + 32];
          uint64_t v98 = *(void *)&v93[16 * v13 + 24];
          sub_26274288C((char *)(v94 + 16 * v97), (char *)(v94 + 16 * *(void *)&v93[16 * v13 + 16]), v94 + 16 * v98, __dst);
          if (v1) {
            break;
          }
          if (v98 < v97) {
            goto LABEL_137;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v96 = sub_26276BD14((uint64_t)v96);
          }
          if (v95 >= *((void *)v96 + 2)) {
            goto LABEL_138;
          }
          unint64_t v99 = &v96[16 * v95 + 32];
          *(void *)unint64_t v99 = v97;
          *((void *)v99 + 1) = v98;
          unint64_t v100 = *((void *)v96 + 2);
          if (v13 > v100) {
            goto LABEL_139;
          }
          memmove(&v96[16 * v13 + 16], &v96[16 * v13 + 32], 16 * (v100 - v13));
          uint64_t v93 = v96;
          *((void *)v96 + 2) = v100 - 1;
          unint64_t v13 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_97:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9579C0);
    uint64_t v8 = sub_26276F830();
    *(void *)(v8 + 16) = v7;
    uint64_t v104 = v8;
    __dst = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v102 = *a1 + 40;
  uint64_t v103 = *a1 + 8;
  uint64_t v12 = (char *)MEMORY[0x263F8EE78];
  uint64_t v105 = v6;
  uint64_t v106 = v3;
  uint64_t v107 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      float v15 = *(float *)(v103 + 16 * v10);
      uint64_t v16 = 16 * v14;
      float v17 = *(float *)(v103 + 16 * v14);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        uint64_t v18 = (float *)(v102 + 16 * v14);
        while (v17 < v15 != *(v18 - 4) >= *v18)
        {
          ++v10;
          v18 += 4;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v17 < v15)
      {
        if (v10 < v14) {
          goto LABEL_142;
        }
        if (v14 < v10)
        {
          uint64_t v19 = 16 * v10 - 16;
          uint64_t v20 = v10;
          uint64_t v21 = v14;
          do
          {
            if (v21 != --v20)
            {
              if (!v11) {
                goto LABEL_148;
              }
              uint64_t v23 = (_OWORD *)(v11 + v16);
              uint64_t v24 = (_OWORD *)(v11 + v19);
              uint64_t v25 = *(void *)(v11 + v16);
              int v26 = *(_DWORD *)(v11 + v16 + 8);
              if (v16 != v19 || v23 >= v24 + 1) {
                *uint64_t v23 = *v24;
              }
              uint64_t v22 = v11 + v19;
              *(void *)uint64_t v22 = v25;
              *(_DWORD *)(v22 + 8) = v26;
            }
            ++v21;
            v19 -= 16;
            v16 += 16;
          }
          while (v21 < v20);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_50;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_140;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_50;
    }
    uint64_t v27 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_143;
    }
    if (v27 >= v3) {
      uint64_t v27 = v3;
    }
    if (v27 < v14) {
      break;
    }
    if (v10 != v27)
    {
      uint64_t v28 = (float *)(v11 + 16 * v10);
      do
      {
        uint64_t v29 = v28;
        uint64_t v30 = v14;
        do
        {
          float v31 = v29[2];
          if (*(v29 - 2) >= v31) {
            break;
          }
          if (!v11) {
            goto LABEL_146;
          }
          uint64_t v32 = *(void *)v29;
          *(_OWORD *)uint64_t v29 = *((_OWORD *)v29 - 1);
          *(v29 - 2) = v31;
          *((void *)v29 - 2) = v32;
          v29 -= 4;
          ++v30;
        }
        while (v10 != v30);
        ++v10;
        v28 += 4;
      }
      while (v10 != v27);
      uint64_t v10 = v27;
    }
LABEL_50:
    if (v10 < v14) {
      goto LABEL_135;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_26276B9E4(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v34 = *((void *)v12 + 2);
    unint64_t v33 = *((void *)v12 + 3);
    unint64_t v13 = v34 + 1;
    uint64_t v11 = v107;
    if (v34 >= v33 >> 1)
    {
      uint64_t v83 = sub_26276B9E4((char *)(v33 > 1), v34 + 1, 1, v12);
      uint64_t v11 = v107;
      uint64_t v12 = v83;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v35 = v12 + 32;
    uint64_t v36 = &v12[16 * v34 + 32];
    *(void *)uint64_t v36 = v14;
    *((void *)v36 + 1) = v10;
    if (v34)
    {
      while (1)
      {
        unint64_t v37 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v42 = &v35[16 * v13];
          uint64_t v43 = *((void *)v42 - 8);
          uint64_t v44 = *((void *)v42 - 7);
          BOOL v48 = __OFSUB__(v44, v43);
          uint64_t v45 = v44 - v43;
          if (v48) {
            goto LABEL_124;
          }
          uint64_t v47 = *((void *)v42 - 6);
          uint64_t v46 = *((void *)v42 - 5);
          BOOL v48 = __OFSUB__(v46, v47);
          uint64_t v40 = v46 - v47;
          char v41 = v48;
          if (v48) {
            goto LABEL_125;
          }
          unint64_t v49 = v13 - 2;
          uint64_t v50 = &v35[16 * v13 - 32];
          uint64_t v52 = *(void *)v50;
          uint64_t v51 = *((void *)v50 + 1);
          BOOL v48 = __OFSUB__(v51, v52);
          uint64_t v53 = v51 - v52;
          if (v48) {
            goto LABEL_127;
          }
          BOOL v48 = __OFADD__(v40, v53);
          uint64_t v54 = v40 + v53;
          if (v48) {
            goto LABEL_130;
          }
          if (v54 >= v45)
          {
            uint64_t v72 = &v35[16 * v37];
            uint64_t v74 = *(void *)v72;
            uint64_t v73 = *((void *)v72 + 1);
            BOOL v48 = __OFSUB__(v73, v74);
            uint64_t v75 = v73 - v74;
            if (v48) {
              goto LABEL_134;
            }
            BOOL v65 = v40 < v75;
            goto LABEL_87;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v66 = *((void *)v12 + 4);
            uint64_t v67 = *((void *)v12 + 5);
            BOOL v48 = __OFSUB__(v67, v66);
            uint64_t v59 = v67 - v66;
            char v60 = v48;
            goto LABEL_81;
          }
          uint64_t v39 = *((void *)v12 + 4);
          uint64_t v38 = *((void *)v12 + 5);
          BOOL v48 = __OFSUB__(v38, v39);
          uint64_t v40 = v38 - v39;
          char v41 = v48;
        }
        if (v41) {
          goto LABEL_126;
        }
        unint64_t v49 = v13 - 2;
        uint64_t v55 = &v35[16 * v13 - 32];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v58 = __OFSUB__(v56, v57);
        uint64_t v59 = v56 - v57;
        char v60 = v58;
        if (v58) {
          goto LABEL_129;
        }
        uint64_t v61 = &v35[16 * v37];
        uint64_t v63 = *(void *)v61;
        uint64_t v62 = *((void *)v61 + 1);
        BOOL v48 = __OFSUB__(v62, v63);
        uint64_t v64 = v62 - v63;
        if (v48) {
          goto LABEL_132;
        }
        if (__OFADD__(v59, v64)) {
          goto LABEL_133;
        }
        if (v59 + v64 >= v40)
        {
          BOOL v65 = v40 < v64;
LABEL_87:
          if (v65) {
            unint64_t v37 = v49;
          }
          goto LABEL_89;
        }
LABEL_81:
        if (v60) {
          goto LABEL_128;
        }
        uint64_t v68 = &v35[16 * v37];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v48 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v48) {
          goto LABEL_131;
        }
        if (v71 < v59) {
          goto LABEL_15;
        }
LABEL_89:
        unint64_t v76 = v37 - 1;
        if (v37 - 1 >= v13)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!v11) {
          goto LABEL_147;
        }
        uint64_t v77 = v12;
        uint64_t v78 = &v35[16 * v76];
        uint64_t v79 = *(void *)v78;
        uint64_t v80 = &v35[16 * v37];
        uint64_t v81 = *((void *)v80 + 1);
        sub_26274288C((char *)(v11 + 16 * *(void *)v78), (char *)(v11 + 16 * *(void *)v80), v11 + 16 * v81, __dst);
        if (v1) {
          goto LABEL_97;
        }
        if (v81 < v79) {
          goto LABEL_121;
        }
        if (v37 > *((void *)v77 + 2)) {
          goto LABEL_122;
        }
        *(void *)uint64_t v78 = v79;
        *(void *)&v35[16 * v76 + 8] = v81;
        unint64_t v82 = *((void *)v77 + 2);
        if (v37 >= v82) {
          goto LABEL_123;
        }
        uint64_t v12 = v77;
        unint64_t v13 = v82 - 1;
        memmove(&v35[16 * v37], v80 + 16, 16 * (v82 - 1 - v37));
        *((void *)v77 + 2) = v82 - 1;
        uint64_t v11 = v107;
        if (v82 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v105;
    uint64_t v3 = v106;
    if (v10 >= v106)
    {
      uint64_t v9 = v104;
      goto LABEL_107;
    }
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  uint64_t result = sub_26276FBA0();
  __break(1u);
  return result;
}

uint64_t sub_26274288C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  int v26 = __dst;
  uint64_t v27 = __src;
  if (v10 >= v13)
  {
    if (v11 >= -15)
    {
      uint64_t v19 = 16 * v13;
      if (__dst != a2 || &a2[v19] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v20 = &v4[v19];
      uint64_t v25 = &v4[v19];
      uint64_t v27 = v6;
      if (v7 < v6 && (unint64_t)(v11 - 16) <= 0xFFFFFFFFFFFFFFE0)
      {
        uint64_t v21 = (char *)(a3 - 16);
        do
        {
          uint64_t v22 = v21 + 16;
          if (*((float *)v6 - 2) >= *((float *)v20 - 2))
          {
            uint64_t v25 = v20 - 16;
            if (v22 < v20 || v21 >= v20 || v22 != v20) {
              *(_OWORD *)uint64_t v21 = *((_OWORD *)v20 - 1);
            }
            uint64_t v23 = v6;
            v20 -= 16;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v23 = v6 - 16;
            if (v22 != v6 || v21 >= v6) {
              *(_OWORD *)uint64_t v21 = *(_OWORD *)v23;
            }
            uint64_t v27 = v6 - 16;
            if (v23 <= v7) {
              break;
            }
          }
          v21 -= 16;
          uint64_t v6 = v23;
        }
        while (v20 > v4);
      }
LABEL_44:
      sub_26276BB9C(&v27, &v26, &v25);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    size_t v14 = 16 * v10;
    if (__dst != __src || &__src[v14] <= __dst) {
      memmove(__dst, __src, v14);
    }
    float v15 = &v4[v14];
    uint64_t v25 = &v4[v14];
    if ((unint64_t)v6 < a3 && (unint64_t)(v8 - 16) <= 0xFFFFFFFFFFFFFFE0)
    {
      uint64_t v16 = v4;
      while (1)
      {
        if (*((float *)v16 + 2) >= *((float *)v6 + 2))
        {
          uint64_t v4 = v16 + 16;
          uint64_t v18 = v16;
          float v17 = v6;
          if (v7 == v16)
          {
            v16 += 16;
            if (v7 < v4) {
              goto LABEL_22;
            }
          }
          else
          {
            v16 += 16;
          }
        }
        else
        {
          float v17 = v6 + 16;
          uint64_t v18 = v6;
          if (v7 == v6 && v7 < v17) {
            goto LABEL_22;
          }
        }
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v18;
LABEL_22:
        v7 += 16;
        if (v16 < v15)
        {
          uint64_t v6 = v17;
          if ((unint64_t)v17 < a3) {
            continue;
          }
        }
        int v26 = v4;
        uint64_t v27 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  uint64_t result = sub_26276FC00();
  __break(1u);
  return result;
}

uint64_t sub_262742B18(unint64_t a1, uint64_t a2)
{
  int v3 = a1;
  unint64_t v4 = HIDWORD(a1);
  uint64_t result = sub_262742EB8(a1, a2);
  uint64_t v6 = result;
  uint64_t v7 = a2 >> 63;
  if (result <= 0)
  {
    if ((result & 0x8000000000000000) == 0)
    {
      int64_t v8 = (int *)MEMORY[0x263F8EE78];
      uint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 24) >> 1;
      uint64_t v11 = (int *)(MEMORY[0x263F8EE78] + 32);
      goto LABEL_22;
    }
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A957340);
    int64_t v8 = (int *)swift_allocObject();
    uint64_t result = _swift_stdlib_malloc_size(v8);
    uint64_t v9 = result - 32;
    if (result < 32) {
      uint64_t v9 = result - 29;
    }
    uint64_t v10 = v9 >> 2;
    *((void *)v8 + 2) = v6;
    *((void *)v8 + 3) = 2 * v10;
    uint64_t v11 = v8 + 8;
    uint64_t v12 = (v10 & 0x7FFFFFFFFFFFFFFFLL) - v6;
    while (1)
    {
      BOOL v13 = v3 <= (int)v4;
      if (a2 > 0) {
        BOOL v13 = v3 >= (int)v4;
      }
      if (v13)
      {
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
        goto LABEL_69;
      }
      if (a2 < 0 != v3 >= 0)
      {
        if (a2 < (uint64_t)0xFFFFFFFF80000000) {
          goto LABEL_59;
        }
        if (a2 > 0x7FFFFFFF) {
          goto LABEL_60;
        }
        LODWORD(v14) = v3 + a2;
        if (__OFADD__(v3, a2)) {
          LODWORD(v14) = v7 ^ 0x7FFFFFFF;
        }
        goto LABEL_5;
      }
      uint64_t v14 = a2 + v3;
      if (__OFADD__(a2, v3)) {
        goto LABEL_61;
      }
      if (v14 < (uint64_t)0xFFFFFFFF80000000) {
        goto LABEL_62;
      }
      if (v14 > 0x7FFFFFFF) {
        break;
      }
LABEL_5:
      *v11++ = v3;
      int v3 = v14;
      if (!--v6) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_19:
    int v3 = v14;
LABEL_22:
    BOOL v15 = v3 <= (int)v4;
    if (a2 > 0) {
      BOOL v15 = v3 >= (int)v4;
    }
    if (!v15)
    {
      int v32 = v7 ^ 0x7FFFFFFF;
      while (a2 < 0 != v3 >= 0)
      {
        if (a2 < (uint64_t)0xFFFFFFFF80000000) {
          goto LABEL_63;
        }
        if (a2 > 0x7FFFFFFF) {
          goto LABEL_64;
        }
        LODWORD(v16) = v3 + a2;
        if (!__OFADD__(v3, a2)) {
          goto LABEL_36;
        }
        LODWORD(v16) = v32;
        if (!v12) {
          goto LABEL_37;
        }
        LODWORD(v16) = v32;
LABEL_49:
        BOOL v27 = __OFSUB__(v12--, 1);
        if (v27) {
          goto LABEL_58;
        }
        *v11++ = v3;
        BOOL v28 = (int)v16 <= (int)v4;
        if (a2 > 0) {
          BOOL v28 = (int)v16 >= (int)v4;
        }
        int v3 = v16;
        if (v28) {
          goto LABEL_53;
        }
      }
      uint64_t v16 = a2 + v3;
      if (__OFADD__(a2, v3)) {
        goto LABEL_65;
      }
      if (v16 < (uint64_t)0xFFFFFFFF80000000) {
        goto LABEL_66;
      }
      if (v16 > 0x7FFFFFFF) {
        goto LABEL_67;
      }
LABEL_36:
      if (!v12)
      {
LABEL_37:
        unint64_t v17 = *((void *)v8 + 3);
        if ((uint64_t)((v17 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_68;
        }
        int64_t v18 = v17 & 0xFFFFFFFFFFFFFFFELL;
        if (v18 <= 1) {
          uint64_t v19 = 1;
        }
        else {
          uint64_t v19 = v18;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A957340);
        uint64_t v20 = (int *)swift_allocObject();
        int64_t v21 = _swift_stdlib_malloc_size(v20);
        uint64_t v22 = v21 - 32;
        if (v21 < 32) {
          uint64_t v22 = v21 - 29;
        }
        uint64_t v23 = v22 >> 2;
        *((void *)v20 + 2) = v19;
        *((void *)v20 + 3) = 2 * (v22 >> 2);
        unint64_t v24 = (unint64_t)(v20 + 8);
        uint64_t v25 = *((void *)v8 + 3) >> 1;
        if (*((void *)v8 + 2))
        {
          int v26 = v8 + 8;
          if (v20 != v8 || v24 >= (unint64_t)v26 + 4 * v25) {
            memmove(v20 + 8, v26, 4 * v25);
          }
          *((void *)v8 + 2) = 0;
        }
        uint64_t v11 = (int *)(v24 + 4 * v25);
        uint64_t v12 = (v23 & 0x7FFFFFFFFFFFFFFFLL) - v25;
        uint64_t result = swift_release();
        int64_t v8 = v20;
        goto LABEL_49;
      }
      goto LABEL_49;
    }
LABEL_53:
    unint64_t v29 = *((void *)v8 + 3);
    if (v29 >= 2)
    {
      unint64_t v30 = v29 >> 1;
      BOOL v27 = __OFSUB__(v30, v12);
      unint64_t v31 = v30 - v12;
      if (v27) {
        goto LABEL_70;
      }
      *((void *)v8 + 2) = v31;
    }
    return (uint64_t)v8;
  }
  return result;
}

uint64_t sub_262742E20(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || (void *)result == a2) {
    return 1;
  }
  if (*(void *)(result + 32) != a2[4]) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  if (*(void *)(result + 40) != a2[5]) {
    return 0;
  }
  if (v2 == 2) {
    return 1;
  }
  uint64_t v3 = 3 - v2;
  unint64_t v4 = (uint64_t *)(result + 48);
  uint64_t v5 = a2 + 6;
  while (v3 != 1)
  {
    uint64_t v7 = *v4++;
    uint64_t v6 = v7;
    uint64_t v8 = *v5++;
    uint64_t result = v6 == v8;
    if (v6 != v8 || v3++ == 0) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_262742EB8(uint64_t a1, uint64_t a2)
{
  uint64_t result = 0;
  unint64_t v4 = HIDWORD(a1);
  while (1)
  {
    BOOL v6 = (int)a1 <= (int)v4;
    if (a2 > 0) {
      BOOL v6 = (int)a1 >= (int)v4;
    }
    if (v6) {
      return result;
    }
    if (a2 < 0 != (int)a1 >= 0)
    {
      if (a2 < (uint64_t)0xFFFFFFFF80000000) {
        goto LABEL_18;
      }
      if (a2 > 0x7FFFFFFF) {
        goto LABEL_19;
      }
      BOOL v5 = __OFADD__(a1, a2);
      LODWORD(a1) = a1 + a2;
      if (v5) {
        LODWORD(a1) = (a2 >> 63) ^ 0x7FFFFFFF;
      }
    }
    else
    {
      BOOL v5 = __OFADD__(a2, (int)a1);
      a1 = a2 + (int)a1;
      if (v5) {
        goto LABEL_20;
      }
      if (a1 < (uint64_t)0xFFFFFFFF80000000) {
        goto LABEL_21;
      }
      if (a1 > 0x7FFFFFFF)
      {
        __break(1u);
        return result;
      }
    }
    BOOL v5 = __OFADD__(result++, 1);
    if (v5)
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
      return result;
    }
  }
}

uint64_t sub_262742F60(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  uint64_t v2 = (void *)MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v3 = result;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    BOOL v6 = v2 + 4;
    while (1)
    {
      int v7 = *(_DWORD *)(v3 + 4 * v5 + 32);
      if (!v4)
      {
        unint64_t v8 = v2[3];
        if ((uint64_t)((v8 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_28;
        }
        int64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
        if (v9 <= 1) {
          uint64_t v10 = 1;
        }
        else {
          uint64_t v10 = v9;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A9579B8);
        uint64_t v11 = (void *)swift_allocObject();
        int64_t v12 = _swift_stdlib_malloc_size(v11);
        uint64_t v13 = v12 - 32;
        if (v12 < 32) {
          uint64_t v13 = v12 - 17;
        }
        uint64_t v14 = v13 >> 4;
        id v11[2] = v10;
        v11[3] = 2 * (v13 >> 4);
        unint64_t v15 = (unint64_t)(v11 + 4);
        uint64_t v16 = v2[3] >> 1;
        size_t v17 = 16 * v16;
        if (v2[2])
        {
          if (v11 != v2 || v15 >= (unint64_t)&v2[v17 / 8 + 4]) {
            memmove(v11 + 4, v2 + 4, v17);
          }
          v2[2] = 0;
        }
        BOOL v6 = (void *)(v15 + v17);
        uint64_t v4 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - v16;
        uint64_t result = swift_release();
        uint64_t v2 = v11;
      }
      BOOL v19 = __OFSUB__(v4--, 1);
      if (v19) {
        break;
      }
      *BOOL v6 = v5;
      *((_DWORD *)v6 + 2) = v7;
      v6 += 2;
      if (v1 == ++v5)
      {
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v4 = 0;
LABEL_23:
  unint64_t v20 = v2[3];
  if (v20 < 2) {
    return (uint64_t)v2;
  }
  unint64_t v21 = v20 >> 1;
  BOOL v19 = __OFSUB__(v21, v4);
  uint64_t v22 = v21 - v4;
  if (!v19)
  {
    v2[2] = v22;
    return (uint64_t)v2;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_2627430E0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v7 = v5;
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (!v6) {
    return v8;
  }
  uint64_t v11 = result;
  uint64_t v22 = MEMORY[0x263F8EE78];
  uint64_t result = sub_26273AC28(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = v22;
    if (a2 <= v11) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = a2;
    }
    uint64_t v13 = v11;
    while (a2 != v13)
    {
      uint64_t v20 = v13;
      uint64_t result = sub_262740D34(&v20, a3, a4, a5, (uint64_t *)&v21);
      if (v7)
      {
        swift_release();
        return v8;
      }
      uint64_t v7 = 0;
      long long v14 = v21;
      uint64_t v22 = v8;
      unint64_t v16 = *(void *)(v8 + 16);
      unint64_t v15 = *(void *)(v8 + 24);
      if (v16 >= v15 >> 1)
      {
        long long v17 = v21;
        uint64_t result = sub_26273AC28(v15 > 1, v16 + 1, 1);
        long long v14 = v17;
        uint64_t v8 = v22;
      }
      *(void *)(v8 + 16) = v16 + 1;
      *(_OWORD *)(v8 + 16 * v16 + 32) = v14;
      if (a2 < v11) {
        goto LABEL_19;
      }
      if (v12 == v13) {
        goto LABEL_20;
      }
      if (a2 == ++v13) {
        return v8;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_262743238(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = (a3 >> 1) - a2;
  if (__OFSUB__(a3 >> 1, a2)) {
    goto LABEL_14;
  }
  uint64_t v4 = result;
  uint64_t result = MEMORY[0x263F8EE78];
  if (v3)
  {
    unint64_t v13 = a3 >> 1;
    uint64_t v14 = MEMORY[0x263F8EE78];
    uint64_t result = sub_26273AC68(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0)
    {
LABEL_15:
      __break(1u);
      return result;
    }
    uint64_t v6 = 0;
    uint64_t result = v14;
    uint64_t v7 = (uint64_t *)(v4 + 16 * a2);
    uint64_t v8 = v13;
    while (1)
    {
      uint64_t v9 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        break;
      }
      if (a2 + v6 >= v8 || v6 >= v3) {
        goto LABEL_13;
      }
      uint64_t v10 = *v7;
      uint64_t v15 = result;
      unint64_t v12 = *(void *)(result + 16);
      unint64_t v11 = *(void *)(result + 24);
      if (v12 >= v11 >> 1)
      {
        sub_26273AC68(v11 > 1, v12 + 1, 1);
        uint64_t v8 = v13;
        uint64_t result = v15;
      }
      *(void *)(result + 16) = v12 + 1;
      *(void *)(result + 8 * v12 + 32) = v10;
      ++v6;
      v7 += 2;
      if (v9 == v3) {
        return result;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  return result;
}

uint64_t sub_262743364(uint64_t a1, char *a2, int a3)
{
  LODWORD(v62) = a3;
  uint64_t v63 = a2;
  uint64_t v64 = sub_26276F330();
  uint64_t v4 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  BOOL v65 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26276F4B0();
  uint64_t v7 = *(void **)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v66 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v67 = (char *)&v55 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957908);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  long long v17 = (char *)&v55 - v16;
  int64_t v18 = (char *)&v55 + *(int *)(v15 + 48) - v16;
  BOOL v19 = (void (*)(char *, uint64_t, uint64_t))v7[2];
  v19((char *)&v55 - v16, a1, v6);
  v19(v18, (uint64_t)v63, v6);
  uint64_t v59 = v11;
  uint64_t v20 = &v14[*(int *)(v11 + 48)];
  v19(v14, (uint64_t)v17, v6);
  uint64_t v63 = v18;
  v19(v20, (uint64_t)v18, v6);
  uint64_t v60 = v4;
  uint64_t v61 = v7;
  uint64_t v57 = v6;
  BOOL v58 = v17;
  if (v62)
  {
    long long v21 = v65;
    uint64_t v55 = v20;
    sub_26276F410();
    uint64_t v62 = (void (*)(char *, uint64_t))v7[1];
    v62(v14, v6);
    sub_26276F320();
    uint64_t v56 = *(void (**)(char *, uint64_t))(v4 + 8);
    v56(v21, v64);
    sub_26276F420();
    swift_bridgeObjectRelease();
    uint64_t v22 = v62;
    v62(v55, v6);
    uint64_t v23 = &v14[*(int *)(v59 + 48)];
    v19(v14, (uint64_t)v17, v6);
    v19(v23, (uint64_t)v63, v6);
    sub_26276F410();
    v22(v23, v6);
    sub_26276F320();
    unint64_t v24 = v21;
    uint64_t v25 = v64;
    v56(v24, v64);
    sub_26276F420();
    swift_bridgeObjectRelease();
    v22(v14, v6);
    uint64_t v26 = v25;
  }
  else
  {
    BOOL v27 = (void (*)(char *, char *, uint64_t))v7[4];
    v27(v67, v14, v6);
    BOOL v28 = (void (*)(char *, uint64_t))v7[1];
    v28(v20, v6);
    unint64_t v29 = &v14[*(int *)(v59 + 48)];
    v19(v14, (uint64_t)v17, v6);
    v19(v29, (uint64_t)v63, v6);
    v27(v66, v29, v6);
    uint64_t v62 = v28;
    v28(v14, v6);
    uint64_t v26 = v64;
  }
  uint64_t v30 = sub_26276F450();
  int64_t v31 = *(void *)(v30 + 16);
  uint64_t v32 = MEMORY[0x263F8EE78];
  if (v31)
  {
    uint64_t v68 = MEMORY[0x263F8EE78];
    sub_262739750(0, v31, 0);
    uint64_t v33 = 0;
    uint64_t v34 = v68;
    unint64_t v35 = *(void *)(v68 + 16);
    do
    {
      int v36 = *(_DWORD *)(v30 + 4 * v33 + 32);
      uint64_t v68 = v34;
      unint64_t v37 = *(void *)(v34 + 24);
      if (v35 >= v37 >> 1)
      {
        sub_262739750(v37 > 1, v35 + 1, 1);
        uint64_t v34 = v68;
      }
      ++v33;
      *(void *)(v34 + 16) = v35 + 1;
      *(_DWORD *)(v34 + 4 * v35++ + 32) = v36;
    }
    while (v31 != v33);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v34 = MEMORY[0x263F8EE78];
  }
  uint64_t v38 = sub_26276F450();
  int64_t v39 = *(void *)(v38 + 16);
  if (v39)
  {
    uint64_t v68 = v32;
    sub_26273AC68(0, v39, 0);
    uint64_t v40 = 0;
    uint64_t v41 = v68;
    unint64_t v42 = *(void *)(v68 + 16);
    uint64_t v43 = v65;
    do
    {
      uint64_t v44 = *(int *)(v38 + 4 * v40 + 32);
      uint64_t v68 = v41;
      unint64_t v45 = *(void *)(v41 + 24);
      if (v42 >= v45 >> 1)
      {
        sub_26273AC68(v45 > 1, v42 + 1, 1);
        uint64_t v41 = v68;
      }
      ++v40;
      *(void *)(v41 + 16) = v42 + 1;
      *(void *)(v41 + 8 * v42++ + 32) = v44;
    }
    while (v39 != v40);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v41 = MEMORY[0x263F8EE78];
    uint64_t v43 = v65;
  }
  uint64_t v46 = v67;
  uint64_t v47 = v43;
  sub_26276F410();
  uint64_t v48 = sub_26276F350();
  unint64_t v49 = *(void (**)(char *, uint64_t))(v60 + 8);
  v49(v43, v26);
  sub_26276F410();
  uint64_t v50 = sub_26276F350();
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v49)(v47, v26);
  if (v50 < 0)
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_2627430E0(0, v50, v34, v48, v41);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v53 = v57;
    uint64_t v54 = v62;
    v62(v66, v57);
    v54(v46, v53);
    sub_262743D34((uint64_t)v58, &qword_26A957908);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v52;
  }
  return result;
}

unint64_t sub_262743A8C()
{
  unint64_t result = qword_26A957920[0];
  if (!qword_26A957920[0])
  {
    sub_26276F330();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A957920);
  }
  return result;
}

void sub_262743AE4()
{
  sub_262734798();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F) {
      swift_initClassMetadata2();
    }
  }
}

uint64_t type metadata accessor for TensorNNScorer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for TensorNNScorer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for TensorNNScorer);
}

uint64_t dispatch thunk of TensorNNScorer.__allocating_init(_:on:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of TensorNNScorer.score(_:topK:skipFirst:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v3 + 120)
                                                          + **(int **)(*(void *)v3 + 120));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_26273E2FC;
  return v10(a1, a2, a3);
}

uint64_t sub_262743D14@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_262741CE0(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_262743D34(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_262743D90(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_262743DE0(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x73726579616CLL;
  }
  else {
    uint64_t v2 = 0x63697274656DLL;
  }
  if (a2) {
    uint64_t v3 = 0x73726579616CLL;
  }
  else {
    uint64_t v3 = 0x63697274656DLL;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_26276FDA0();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_262743E5C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7365646F6ELL;
  }
  else {
    uint64_t v3 = 0x63697274656DLL;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x7365646F6ELL;
  }
  else {
    uint64_t v5 = 0x63697274656DLL;
  }
  if (a2) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_26276FDA0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_262743EFC(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x656572547076;
  }
  else {
    uint64_t v3 = 0x656572546C6C6162;
  }
  if (v2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x656572547076;
  }
  else {
    uint64_t v5 = 0x656572546C6C6162;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_26276FDA0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_262743FA0(char a1, char a2)
{
  unint64_t v3 = 0xE200000000000000;
  uint64_t v4 = 12620;
  switch(a1)
  {
    case 1:
      uint64_t v4 = 12876;
      break;
    case 2:
      uint64_t v4 = 0x657261757153324CLL;
      unint64_t v3 = 0xE900000000000064;
      break;
    case 3:
      uint64_t v4 = 0x6944656E69736F43;
      unint64_t v3 = 0xEE0065636E617473;
      break;
    default:
      break;
  }
  unint64_t v5 = 0xE200000000000000;
  uint64_t v6 = 12620;
  switch(a2)
  {
    case 1:
      if (v4 == 12876) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v6 = 0x657261757153324CLL;
      unint64_t v5 = 0xE900000000000064;
      goto LABEL_9;
    case 3:
      unint64_t v5 = 0xEE0065636E617473;
      if (v4 == 0x6944656E69736F43) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v4 != v6) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v5) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_26276FDA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_26274411C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEA00000000007265;
  unint64_t v3 = 0x646465626D454C4ELL;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD000000000000014;
    }
    else {
      unint64_t v5 = 0x457478655444414DLL;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x80000002627736D0;
    }
    else {
      unint64_t v6 = 0xEF7265646465626DLL;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0x646465626D454C4ELL;
  unint64_t v6 = 0xEA00000000007265;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v3 = 0xD000000000000014;
    }
    else {
      unint64_t v3 = 0x457478655444414DLL;
    }
    if (v7 == 1) {
      unint64_t v2 = 0x80000002627736D0;
    }
    else {
      unint64_t v2 = 0xEF7265646465626DLL;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_26276FDA0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_262744250(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x78697274616DLL;
  }
  else {
    uint64_t v2 = 0x726F736E6574;
  }
  if (a2) {
    uint64_t v3 = 0x78697274616DLL;
  }
  else {
    uint64_t v3 = 0x726F736E6574;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_26276FDA0();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_2627442C8(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_26273AC68(0, v2, 0);
    uint64_t result = v9;
    char v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v6 = *v4;
      v4 += 2;
      uint64_t v5 = v6;
      uint64_t v10 = result;
      unint64_t v8 = *(void *)(result + 16);
      unint64_t v7 = *(void *)(result + 24);
      if (v8 >= v7 >> 1)
      {
        sub_26273AC68(v7 > 1, v8 + 1, 1);
        uint64_t result = v10;
      }
      *(void *)(result + 16) = v8 + 1;
      *(void *)(result + 8 * v8 + 32) = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

void HNSWIndex.metric.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t HNSWIndex.points.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t HNSWIndex.layers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_262744404(char *a1, char *a2)
{
  return sub_262743DE0(*a1, *a2);
}

uint64_t sub_262744410()
{
  return sub_26276FE20();
}

uint64_t sub_262744480()
{
  sub_26276F6C0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2627444D4()
{
  return sub_26276FE20();
}

uint64_t sub_262744540@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_26276FC20();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_2627445A0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x63697274656DLL;
  if (*v1) {
    uint64_t v2 = 0x73726579616CLL;
  }
  *a1 = v2;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_2627445D0()
{
  if (*v0) {
    return 0x73726579616CLL;
  }
  else {
    return 0x63697274656DLL;
  }
}

uint64_t sub_2627445FC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_26276FC20();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_262744660(uint64_t a1)
{
  unint64_t v2 = sub_262747F7C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_26274469C(uint64_t a1)
{
  unint64_t v2 = sub_262747F7C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t HNSWIndex.__allocating_init(points:metric:)(uint64_t a1, char *a2)
{
  uint64_t v4 = swift_allocObject();
  char v5 = *a2;
  uint64_t v6 = MEMORY[0x263F8EE78];
  *(void *)(v4 + 24) = MEMORY[0x263F8EE78];
  *(void *)(v4 + 32) = v6;
  *(unsigned char *)(v4 + 16) = v5;
  swift_beginAccess();
  *(void *)(v4 + 24) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_262744878(a1, 4, 16);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v4 + 32) = v7;
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t HNSWIndex.init(points:metric:)(uint64_t a1, char *a2)
{
  char v4 = *a2;
  uint64_t v5 = MEMORY[0x263F8EE78];
  *(void *)(v2 + 24) = MEMORY[0x263F8EE78];
  *(void *)(v2 + 32) = v5;
  *(unsigned char *)(v2 + 16) = v4;
  swift_beginAccess();
  *(void *)(v2 + 24) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_262744878(a1, 4, 16);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v2 + 32) = v6;
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_262744878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 + 0x4000000000000000 < 0) {
    goto LABEL_318;
  }
  double v7 = log((double)a3);
  unint64_t v251 = MEMORY[0x263F8EE78];
  if (a2 < 0)
  {
LABEL_319:
    __break(1u);
    goto LABEL_320;
  }
  double v8 = v7;
  uint64_t v230 = a3;
  if (a2)
  {
    uint64_t v4 = 0;
    uint64_t v9 = MEMORY[0x263F8EE80];
    uint64_t v3 = MEMORY[0x263F8EE78];
    do
    {
      v250[0] = 0x5F726579616CLL;
      v250[1] = 0xE600000000000000;
      v249[0] = v4;
      sub_26276FD60();
      sub_26276F6E0();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A957A20);
      uint64_t v10 = (void *)swift_allocObject();
      v10[5] = v9;
      v10[4] = sub_26274B8DC((void *)v3);
      uint64_t v11 = v10 + 4;
      v10[2] = 0x5F726579616CLL;
      v10[3] = 0xE600000000000000;
      swift_beginAccess();
      if (!*(void *)(v10[4] + 16) || (sub_26274A550(0), (v12 & 1) == 0))
      {
        swift_beginAccess();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v249[0] = *v11;
        *uint64_t v11 = 0x8000000000000000;
        sub_26274AFA0(v3, 0, isUniquelyReferenced_nonNull_native);
        *uint64_t v11 = v249[0];
        swift_bridgeObjectRelease();
        swift_endAccess();
      }
      uint64_t v14 = swift_retain();
      MEMORY[0x263E51C20](v14);
      if (*(void *)((v251 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v251 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_26276F810();
      }
      ++v4;
      sub_26276F850();
      sub_26276F7F0();
      swift_release();
    }
    while (a2 != v4);
  }
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15 == 1) {
    return v251;
  }
  if (v15)
  {
    uint64_t v16 = 0;
    uint64_t v221 = a1 + 32;
    double v17 = 1.0 / v8;
    uint64_t v4 = 1;
    uint64_t v220 = *(void *)(a1 + 16);
LABEL_14:
    if (v4 == v15) {
      goto LABEL_323;
    }
    unint64_t v18 = v251;
    if (v251 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v218 = sub_26276FBC0();
      swift_bridgeObjectRelease();
      BOOL v20 = __OFSUB__(v218, 1);
      uint64_t v21 = v218 - 1;
      if (v20)
      {
LABEL_278:
        __break(1u);
        return v251;
      }
    }
    else
    {
      uint64_t v19 = *(void *)((v251 & 0xFFFFFFFFFFFFFF8) + 0x10);
      BOOL v20 = __OFSUB__(v19, 1);
      uint64_t v21 = v19 - 1;
      if (v20) {
        goto LABEL_278;
      }
    }
    do
    {
      v250[0] = 0;
      uint64_t v3 = 0x1FFFFFFFFFF801;
      MEMORY[0x263E528E0](v250, 8);
    }
    while ((unint64_t)(0x20000000000001 * v250[0]) < 0x1FFFFFFFFFF801);
    double v22 = floor(-(log((double)(((unint64_t)v250[0] * (unsigned __int128)0x20000000000001uLL) >> 64)* 1.11022302e-16+ 0.0)* v17));
    if ((~*(void *)&v22 & 0x7FF0000000000000) == 0) {
      goto LABEL_324;
    }
    if (v22 <= -9.22337204e18) {
      goto LABEL_325;
    }
    if (v22 >= 9.22337204e18) {
      goto LABEL_326;
    }
    uint64_t v3 = v21 & ~(v21 >> 63);
    if (v3 >= (uint64_t)v22) {
      unint64_t v23 = (uint64_t)v22;
    }
    else {
      unint64_t v23 = v21 & ~(v21 >> 63);
    }
    uint64_t v232 = v4;
    if (v3 > (uint64_t)v22)
    {
      uint64_t v24 = *(void *)(v221 + 8 * v4);
      uint64_t v4 = v18 & 0xFFFFFFFFFFFFFF8;
      uint64_t v25 = &unk_270DC5CE8;
      uint64_t v26 = v23;
      while (1)
      {
        if ((v18 & 0xC000000000000001) != 0)
        {
          uint64_t v28 = MEMORY[0x263E51F70](v3, v18);
        }
        else
        {
          if (v3 < 0) {
            goto LABEL_299;
          }
          if ((unint64_t)v3 >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_300;
          }
          uint64_t v28 = *(void *)(v18 + 8 * v3 + 32);
          swift_retain();
        }
        swift_bridgeObjectRetain();
        uint64_t v29 = sub_262746264(a1, v28, v24, (uint64_t)v25, 1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A957310);
        uint64_t v25 = (_OWORD *)swift_allocObject();
        v25[1] = xmmword_2627718D0;
        if (*(void *)(v29 + 16)) {
          uint64_t v27 = *(void *)(v29 + 32);
        }
        else {
          uint64_t v27 = 0;
        }
        --v3;
        swift_bridgeObjectRelease();
        *((void *)v25 + 4) = v27;
        unint64_t v23 = v26;
        if (v26 >= v3) {
          goto LABEL_36;
        }
      }
    }
    uint64_t v25 = &unk_270DC5CE8;
LABEL_36:
    if ((v23 & 0x8000000000000000) != 0)
    {
      uint64_t v4 = v232;
      goto LABEL_274;
    }
    uint64_t v4 = v232;
    if (v230 < 0) {
      goto LABEL_327;
    }
LABEL_38:
    int64_t v239 = v23;
    if ((v251 & 0xC000000000000001) != 0)
    {
      uint64_t v30 = MEMORY[0x263E51F70]();
    }
    else
    {
      if (v23 >= *(void *)((v251 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_321;
      }
      uint64_t v30 = *(void *)(v251 + 8 * v23 + 32);
      swift_retain();
    }
    uint64_t v3 = *(void *)(v221 + 8 * v4);
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_262746264(a1, v30, v3, (uint64_t)v25, 100);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if (v230)
    {
      uint64_t v32 = *(void *)(v31 + 16);
      if (v32 >= v230) {
        uint64_t v32 = v230;
      }
    }
    else
    {
      uint64_t v32 = 0;
    }
    uint64_t v33 = v239;
    uint64_t v225 = v32;
    unint64_t v34 = v251;
    uint64_t v223 = v31;
    if ((v251 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v35 = MEMORY[0x263E51F70](v239, v34);
    }
    else
    {
      if ((unint64_t)v239 >= *(void *)((v251 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_322;
      }
      uint64_t v35 = *(void *)(v251 + 8 * v239 + 32);
      swift_bridgeObjectRetain();
      swift_retain();
    }
    v250[0] = v4;
    (*(void (**)(uint64_t *))(*(void *)v35 + 216))(v250);
    swift_release();
    if (!v225) {
      goto LABEL_269;
    }
    swift_bridgeObjectRetain();
    uint64_t v36 = v225;
    uint64_t v37 = 0;
    while (1)
    {
      if (v37 == v36) {
        goto LABEL_310;
      }
      uint64_t v38 = v223 + 32 + 16 * v37;
      uint64_t v242 = *(void *)v38;
      float v39 = *(float *)(v38 + 8);
      unint64_t v40 = v251;
      unint64_t v41 = v251 & 0xC000000000000001;
      uint64_t v229 = v37;
      if ((v251 & 0xC000000000000001) != 0)
      {
        MEMORY[0x263E51F70](v239, v251);
      }
      else
      {
        if (v239 >= *(void *)((v251 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_311;
        }
        swift_retain();
      }
      sub_262747C94(v4, v242, v39);
      swift_release();
      if (v41)
      {
        MEMORY[0x263E51F70](v239, v40);
      }
      else
      {
        if (v239 >= *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_312;
        }
        swift_retain();
      }
      sub_262747C94(v242, v4, v39);
      swift_release();
      if (v41)
      {
        uint64_t v42 = MEMORY[0x263E51F70](v239, v40);
      }
      else
      {
        if (v239 >= *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_313;
        }
        uint64_t v42 = *(void *)(v40 + 8 * v239 + 32);
        swift_retain();
      }
      swift_beginAccess();
      uint64_t v43 = *(void *)(v42 + 32);
      if (*(void *)(v43 + 16)
        && (unint64_t v44 = sub_26274A550(v242), (v45 & 1) != 0)
        && (v46 = *(void *)(*(void *)(v43 + 56) + 8 * v44), (uint64_t v47 = *(void *)(v46 + 16)) != 0))
      {
        uint64_t v3 = v42 + 40;
        swift_bridgeObjectRetain();
        swift_beginAccess();
        uint64_t v48 = 0;
        unint64_t v49 = (void *)MEMORY[0x263F8EE78];
        do
        {
          uint64_t v51 = *(void *)v3;
          if (*(void *)(*(void *)v3 + 16))
          {
            uint64_t v52 = *(void *)(v46 + 8 * v48 + 32);
            unint64_t v53 = sub_26274A594(v242, v52);
            if (v54)
            {
              int v55 = *(_DWORD *)(*(void *)(v51 + 56) + 4 * v53);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v49 = sub_262727960(0, v49[2] + 1, 1, v49);
              }
              unint64_t v57 = v49[2];
              unint64_t v56 = v49[3];
              if (v57 >= v56 >> 1) {
                unint64_t v49 = sub_262727960((void *)(v56 > 1), v57 + 1, 1, v49);
              }
              v49[2] = v57 + 1;
              uint64_t v50 = &v49[2 * v57];
              v50[4] = v52;
              *((_DWORD *)v50 + 10) = v55;
              uint64_t v4 = v232;
            }
          }
          ++v48;
        }
        while (v47 != v48);
        swift_release();
        swift_bridgeObjectRelease();
        BOOL v58 = v49;
      }
      else
      {
        swift_release();
        BOOL v58 = (void *)MEMORY[0x263F8EE78];
      }
      if (v58[2] > v230) {
        break;
      }
      swift_bridgeObjectRelease();
LABEL_52:
      uint64_t v37 = v229 + 1;
      uint64_t v36 = v225;
      if (v229 + 1 == v225)
      {
        swift_bridgeObjectRelease();
        uint64_t v33 = v239;
LABEL_269:
        unint64_t v216 = v33 - 1;
        uint64_t v3 = v223;
        uint64_t v217 = v33;
        uint64_t v25 = (_OWORD *)sub_2627442C8(v223);
        swift_bridgeObjectRelease_n();
        unint64_t v23 = v216;
        if (v217 > 0) {
          goto LABEL_38;
        }
LABEL_274:
        ++v4;
        swift_bridgeObjectRelease();
        uint64_t v15 = v220;
        if (v4 == v220) {
          return v251;
        }
        goto LABEL_14;
      }
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      BOOL v58 = sub_262736020(v58);
    }
    int64_t v59 = v58[2];
    uint64_t v243 = (uint64_t)(v58 + 4);
    uint64_t v60 = sub_26276FD50();
    v238 = v58;
    if (v60 >= v59)
    {
      unint64_t v63 = v230 << (v239 == 0);
      if ((unint64_t)v59 >= 2)
      {
        uint64_t v64 = -1;
        BOOL v65 = (float *)(v58 + 4);
        for (uint64_t i = 1; i != v59; ++i)
        {
          uint64_t v67 = v65;
          uint64_t v68 = v64;
          do
          {
            float v69 = v67[6];
            if (v69 >= v67[2]) {
              break;
            }
            uint64_t v70 = *((void *)v67 + 2);
            *((_OWORD *)v67 + 1) = *(_OWORD *)v67;
            *(void *)uint64_t v67 = v70;
            v67[2] = v69;
            v67 -= 4;
          }
          while (!__CFADD__(v68++, 1));
          --v64;
          v65 += 4;
        }
      }
    }
    else
    {
      uint64_t v61 = v60;
      int64_t v233 = v59;
      if ((unint64_t)v59 >= 2)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A957A60);
        uint64_t v72 = sub_26276F830();
        *(void *)(v72 + 16) = (unint64_t)v59 >> 1;
        uint64_t v231 = v72;
        uint64_t v3 = v72 + 32;
        v250[0] = MEMORY[0x263F8EE78];
      }
      else
      {
        uint64_t v62 = MEMORY[0x263F8EE78];
        v250[0] = MEMORY[0x263F8EE78];
        uint64_t v3 = MEMORY[0x263F8EE78] + 32;
        uint64_t v231 = MEMORY[0x263F8EE78];
        if (!v59)
        {
          uint64_t v231 = MEMORY[0x263F8EE78];
          goto LABEL_159;
        }
      }
      uint64_t v4 = 0;
      uint64_t v226 = v61;
      v227 = v58 + 5;
      v224 = v58 + 9;
      v222 = v58 + 3;
      uint64_t v240 = v3;
      while (2)
      {
        int64_t v73 = v4 + 1;
        if (v4 + 1 < v59)
        {
          float v74 = *(float *)&v227[2 * v73];
          uint64_t v75 = 2 * v4;
          float v76 = *(float *)&v227[2 * v4];
          int64_t v73 = v4 + 2;
          if (v4 + 2 < v59)
          {
            uint64_t v77 = (float *)&v224[2 * v4];
            while (v74 < v76 == *v77 < *(v77 - 4))
            {
              ++v73;
              v77 += 4;
              if (v59 == v73)
              {
                int64_t v73 = v59;
                break;
              }
            }
          }
          if (v74 < v76)
          {
            if (v73 < v4) {
              goto LABEL_314;
            }
            if (v4 < v73)
            {
              uint64_t v78 = 2 * v73;
              int64_t v79 = v73;
              uint64_t v80 = v4;
              do
              {
                if (v80 != --v79)
                {
                  uint64_t v81 = &v238[v78];
                  uint64_t v82 = v238[v75 + 4];
                  int v83 = v238[v75 + 5];
                  *(_OWORD *)&v238[v75 + 4] = *(_OWORD *)&v238[v78 + 2];
                  v81[2] = v82;
                  *((_DWORD *)v81 + 6) = v83;
                }
                ++v80;
                v78 -= 2;
                v75 += 2;
              }
              while (v80 < v79);
            }
          }
        }
        if (v73 < v59)
        {
          if (__OFSUB__(v73, v4)) {
            goto LABEL_309;
          }
          if (v73 - v4 < v226)
          {
            int64_t v84 = v4 + v226;
            if (__OFADD__(v4, v226)) {
              goto LABEL_315;
            }
            if (v84 >= v59) {
              int64_t v84 = v59;
            }
            if (v84 < v4)
            {
LABEL_316:
              __break(1u);
LABEL_317:
              __break(1u);
LABEL_318:
              __break(1u);
              goto LABEL_319;
            }
            if (v73 != v84)
            {
              uint64_t v85 = &v222[2 * v73];
              do
              {
                uint64_t v86 = v4;
                uint64_t v87 = v85;
                do
                {
                  float v88 = *((float *)v87 + 4);
                  if (v88 >= *(float *)v87) {
                    break;
                  }
                  uint64_t v89 = v87[1];
                  *(_OWORD *)(v87 + 1) = *(_OWORD *)(v87 - 1);
                  *(v87 - 1) = v89;
                  *(float *)uint64_t v87 = v88;
                  v87 -= 2;
                  ++v86;
                }
                while (v73 != v86);
                ++v73;
                v85 += 2;
              }
              while (v73 != v84);
              int64_t v73 = v84;
            }
          }
        }
        if (v73 < v4) {
          goto LABEL_301;
        }
        uint64_t v90 = v73;
        sub_26276B310();
        uint64_t v91 = *(char **)(v250[0] + 16);
        sub_26276B360(v91);
        uint64_t v236 = v90;
        uint64_t v92 = sub_26276B3A4((uint64_t)v91, v4, v90);
        nullsub_1(v92);
        uint64_t v62 = v250[0];
        if (sub_26276B3BC(v250[0]) < 2) {
          goto LABEL_94;
        }
        while (1)
        {
          uint64_t v93 = sub_26276B3BC(v62);
          uint64_t v4 = v93 - 1;
          if (__OFSUB__(v93, 1))
          {
            __break(1u);
LABEL_281:
            __break(1u);
LABEL_282:
            __break(1u);
LABEL_283:
            __break(1u);
LABEL_284:
            __break(1u);
LABEL_285:
            __break(1u);
LABEL_286:
            __break(1u);
LABEL_287:
            __break(1u);
LABEL_288:
            __break(1u);
LABEL_289:
            __break(1u);
LABEL_290:
            __break(1u);
LABEL_291:
            __break(1u);
LABEL_292:
            __break(1u);
LABEL_293:
            __break(1u);
LABEL_294:
            __break(1u);
LABEL_295:
            __break(1u);
LABEL_296:
            __break(1u);
LABEL_297:
            __break(1u);
LABEL_298:
            __break(1u);
LABEL_299:
            __break(1u);
LABEL_300:
            __break(1u);
LABEL_301:
            __break(1u);
LABEL_302:
            __break(1u);
LABEL_303:
            __break(1u);
LABEL_304:
            __break(1u);
LABEL_305:
            __break(1u);
LABEL_306:
            __break(1u);
LABEL_307:
            __break(1u);
            goto LABEL_308;
          }
          uint64_t v244 = v16;
          uint64_t v94 = v93 - 4;
          uint64_t v95 = v62;
          if (v4 >= 3)
          {
            sub_26276B3C4(v93 - 4, 1, v62);
            uint64_t v97 = v62 + 32;
            uint64_t v98 = (uint64_t *)(v62 + 32 + 16 * v94);
            uint64_t v100 = *v98;
            uint64_t v99 = v98[1];
            uint64_t v101 = v99 - v100;
            if (__OFSUB__(v99, v100)) {
              goto LABEL_283;
            }
            unint64_t v96 = v4 - 2;
            sub_26276B3C4(v4 - 2, 1, v62);
            uint64_t v102 = v62;
            uint64_t v103 = (void *)(v97 + 16 * (v4 - 2));
            uint64_t v104 = v103[1];
            uint64_t v3 = (uint64_t)(v103 + 1);
            uint64_t v105 = v104 - *v103;
            if (__OFSUB__(v104, *v103)) {
              goto LABEL_284;
            }
            sub_26276B3C4(v4 - 1, 1, v102);
            uint64_t v106 = (uint64_t *)(v97 + 16 * (v4 - 1));
            uint64_t v108 = *v106;
            uint64_t v107 = v106[1];
            BOOL v20 = __OFSUB__(v107, v108);
            uint64_t v109 = v107 - v108;
            if (v20) {
              goto LABEL_286;
            }
            BOOL v20 = __OFADD__(v105, v109);
            uint64_t v110 = v105 + v109;
            if (v20) {
              goto LABEL_289;
            }
            if (v110 >= v101)
            {
              sub_26276B3C4(v4 - 2, 1, v95);
              uint64_t v133 = *(void *)v3 - *v103;
              if (__OFSUB__(*(void *)v3, *v103)) {
                goto LABEL_294;
              }
              sub_26276B3C4(v4, 1, v95);
              long long v134 = (uint64_t *)(v97 + 16 * v4);
              uint64_t v136 = *v134;
              uint64_t v135 = v134[1];
              BOOL v20 = __OFSUB__(v135, v136);
              uint64_t v137 = v135 - v136;
              if (v20) {
                goto LABEL_295;
              }
              uint64_t v62 = v95;
              if (v133 < v137) {
                --v4;
              }
              uint64_t v3 = v240;
              goto LABEL_155;
            }
          }
          else
          {
            if (v93 != 3) {
              break;
            }
            unint64_t v96 = 0;
          }
          sub_26276B3C4(v96, 1, v95);
          uint64_t v111 = v95 + 32;
          uint64_t v112 = (void *)(v95 + 32 + 16 * v96);
          uint64_t v114 = v112[1];
          uint64_t v113 = v112 + 1;
          uint64_t v3 = v114 - *v112;
          if (__OFSUB__(v114, *v112)) {
            goto LABEL_285;
          }
          sub_26276B3C4(v4 - 1, 1, v95);
          uint64_t v115 = (uint64_t *)(v111 + 16 * (v4 - 1));
          uint64_t v117 = *v115;
          uint64_t v116 = v115[1];
          uint64_t v118 = v116 - v117;
          if (__OFSUB__(v116, v117)) {
            goto LABEL_288;
          }
          sub_26276B3C4(v4, 1, v95);
          uint64_t v119 = (void *)(v111 + 16 * v4);
          uint64_t v121 = v119 + 1;
          uint64_t v120 = v119[1];
          uint64_t v122 = v120 - *v119;
          if (__OFSUB__(v120, *v119)) {
            goto LABEL_291;
          }
          BOOL v20 = __OFADD__(v118, v122);
          uint64_t v123 = v118 + v122;
          if (v20) {
            goto LABEL_293;
          }
          BOOL v124 = v123 < v3;
          uint64_t v3 = v240;
          if (v124) {
            break;
          }
          sub_26276B3C4(v96, 1, v95);
          uint64_t v138 = *v113 - *v112;
          if (__OFSUB__(*v113, *v112)) {
            goto LABEL_296;
          }
          sub_26276B3C4(v4, 1, v95);
          if (__OFSUB__(*v121, *v119)) {
            goto LABEL_297;
          }
          if (v138 < *v121 - *v119) {
            --v4;
          }
          uint64_t v62 = v95;
LABEL_155:
          sub_26276B3C4(v4 - 1, 1, v62);
          uint64_t v139 = *(void *)(v62 + 32 + 16 * (v4 - 1));
          sub_26276B3C4(v4, 1, v62);
          unint64_t v140 = (void *)(v62 + 32 + 16 * v4);
          uint64_t v141 = v140[1];
          uint64_t v16 = v244;
          sub_26274956C((char *)(v243 + 16 * v139), (char *)(v243 + 16 * *v140), v243 + 16 * v141, (char *)v3, (void (*)(char **, char **, char **))sub_26276BB9C);
          if (v141 < v139) {
            goto LABEL_281;
          }
          sub_26276B8FC();
          uint64_t v142 = v250[0];
          unint64_t v143 = sub_26276B93C(v4 - 1, v250[0]);
          uint64_t v144 = v142 + 16 * (v4 - 1);
          *(void *)(v144 + 32) = v139;
          *(void *)(v144 + 40) = v141;
          nullsub_1(v143);
          sub_26276B958(v4);
          uint64_t v62 = v250[0];
          if (sub_26276B3BC(v250[0]) <= 1) {
            goto LABEL_94;
          }
        }
        if (__OFSUB__(v4, 1)) {
          goto LABEL_287;
        }
        uint64_t v62 = v95;
        sub_26276B3C4(v4 - 1, 1, v95);
        unint64_t v125 = (uint64_t *)(v95 + 32 + 16 * (v4 - 1));
        uint64_t v127 = *v125;
        uint64_t v126 = v125[1];
        uint64_t v128 = v126 - v127;
        if (__OFSUB__(v126, v127)) {
          goto LABEL_290;
        }
        sub_26276B3C4(v4, 1, v95);
        uint64_t v129 = (uint64_t *)(v95 + 32 + 16 * v4);
        uint64_t v131 = *v129;
        uint64_t v130 = v129[1];
        BOOL v20 = __OFSUB__(v130, v131);
        uint64_t v132 = v130 - v131;
        if (v20) {
          goto LABEL_292;
        }
        if (v132 >= v128) {
          goto LABEL_155;
        }
        uint64_t v16 = v244;
LABEL_94:
        int64_t v59 = v233;
        uint64_t v4 = v236;
        if (v236 < v233) {
          continue;
        }
        break;
      }
      BOOL v58 = v238;
LABEL_159:
      if (*(void *)(v62 + 16) >= 2uLL)
      {
        v228 = v58 + 2;
        do
        {
          uint64_t v145 = sub_26276F0CC(v62);
          unint64_t v146 = v145 - 1;
          if (__OFSUB__(v145, 1)) {
            goto LABEL_302;
          }
          unint64_t v147 = v145 - 2;
          if (__OFSUB__(v146, 1)) {
            goto LABEL_303;
          }
          if ((v147 & 0x8000000000000000) != 0) {
            goto LABEL_304;
          }
          unint64_t v148 = *(void *)(v62 + 16);
          if (v147 >= v148) {
            goto LABEL_305;
          }
          if (v146 >= v148) {
            goto LABEL_306;
          }
          unint64_t v234 = v145 - 2;
          unint64_t v237 = v145 - 1;
          int v149 = (void *)(v62 + 32 + 16 * v146);
          uint64_t v150 = v149[1];
          int v151 = (float *)v3;
          uint64_t v245 = *(void *)(v62 + 32 + 16 * v147);
          uint64_t v3 = 16 * v245;
          uint64_t v4 = v243 + 16 * v245;
          uint64_t v152 = 16 * *v149;
          unint64_t v153 = (float *)(v243 + v152);
          uint64_t v241 = v150;
          uint64_t v154 = 16 * v150;
          unint64_t v155 = v243 + 16 * v150;
          uint64_t v156 = v152 - 16 * v245;
          uint64_t v157 = v156 + 15;
          if (v156 >= 0) {
            uint64_t v157 = (uint64_t)v153 - v4;
          }
          uint64_t v158 = v157 >> 4;
          uint64_t v159 = v155 - (void)v153;
          uint64_t v160 = v155 - (void)v153 + 15;
          if ((uint64_t)(v155 - (void)v153) >= 0) {
            uint64_t v160 = v155 - (void)v153;
          }
          uint64_t v161 = v160 >> 4;
          v248 = v151;
          v249[0] = v243 + 16 * v245;
          uint64_t v162 = v151;
          if (v158 >= v161)
          {
            if (v159 < -15) {
              goto LABEL_328;
            }
            uint64_t v171 = 16 * v161;
            if (v151 != v153 || v151 >= &v153[(unint64_t)v171 / 4])
            {
              uint64_t v172 = 16 * v150;
              uint64_t v173 = v152;
              memmove(v151, v153, 16 * v161);
              uint64_t v152 = v173;
              uint64_t v154 = v172;
            }
            uint64_t v174 = v171 + 32;
            uint64_t v247 = v231 + v171 + 32;
            v249[0] = (uint64_t)v153;
            if (v3 >= v152)
            {
              uint64_t v3 = (uint64_t)v162;
            }
            else
            {
              uint64_t v3 = (uint64_t)v162;
              if ((unint64_t)(v159 - 16) <= 0xFFFFFFFFFFFFFFE0)
              {
                uint64_t v175 = (float *)((char *)v228 + v154);
                uint64_t v168 = v245;
                while (1)
                {
                  uint64_t v176 = v175 + 4;
                  unint64_t v177 = v231 + v174;
                  if (*(float *)(v231 + v174 - 8) >= *(v153 - 2))
                  {
                    v174 -= 16;
                    uint64_t v179 = (float *)(v231 + v174);
                    uint64_t v247 = v231 + v174;
                    if ((unint64_t)v176 < v177 || (unint64_t)v175 >= v177 || v175 != v179) {
                      *(_OWORD *)uint64_t v175 = *(_OWORD *)v179;
                    }
                    uint64_t v178 = v153;
                    if (v4 >= (unint64_t)v153) {
                      goto LABEL_212;
                    }
                  }
                  else
                  {
                    uint64_t v178 = v153 - 4;
                    if (v176 != v153 || v175 >= v153) {
                      *(_OWORD *)uint64_t v175 = *(_OWORD *)v178;
                    }
                    v249[0] = (uint64_t)(v153 - 4);
                    if (v4 >= (unint64_t)v178) {
                      goto LABEL_212;
                    }
                  }
                  v175 -= 4;
                  unint64_t v153 = v178;
                  if (v174 <= 32) {
                    goto LABEL_212;
                  }
                }
              }
            }
          }
          else
          {
            if (v156 < -15) {
              goto LABEL_328;
            }
            size_t v163 = 16 * v158;
            uint64_t v3 = (uint64_t)v151;
            if (v151 != (float *)v4 || (unint64_t)v151 >= v4 + v163)
            {
              uint64_t v164 = 16 * v150;
              uint64_t v165 = v152;
              memmove(v151, (const void *)v4, v163);
              uint64_t v152 = v165;
              uint64_t v154 = v164;
            }
            uint64_t v247 = v163 + v231 + 32;
            if (v152 < v154 && (unint64_t)(v156 - 16) <= 0xFFFFFFFFFFFFFFE0)
            {
              unint64_t v166 = v3;
              unint64_t v167 = v3;
              uint64_t v168 = v245;
              while (1)
              {
                if (v153[2] >= *(float *)(v166 + 8))
                {
                  unint64_t v167 = v166 + 16;
                  unint64_t v170 = (_OWORD *)v166;
                  uint64_t v169 = v153;
                  if (v4 == v166)
                  {
                    v166 += 16;
                    if (v4 < v167) {
                      goto LABEL_187;
                    }
                  }
                  else
                  {
                    v166 += 16;
                  }
                }
                else
                {
                  uint64_t v169 = v153 + 4;
                  unint64_t v170 = v153;
                  if ((float *)v4 == v153 && v4 < (unint64_t)v169) {
                    goto LABEL_187;
                  }
                }
                *(_OWORD *)uint64_t v4 = *v170;
LABEL_187:
                v4 += 16;
                if (v166 < v163 + v231 + 32)
                {
                  unint64_t v153 = v169;
                  if ((unint64_t)v169 < v155) {
                    continue;
                  }
                }
                v248 = (float *)v167;
                v249[0] = v4;
                goto LABEL_212;
              }
            }
          }
          uint64_t v168 = v245;
LABEL_212:
          sub_26276BB9C(v249, &v248, &v247);
          if (v241 < v168) {
            goto LABEL_307;
          }
          sub_26276B8FC();
          uint64_t v180 = v250[0];
          unint64_t v181 = sub_26276B93C(v234, v250[0]);
          unint64_t v182 = v180 + 16 * v234;
          *(void *)(v182 + 32) = v168;
          *(void *)(v182 + 40) = v241;
          nullsub_1(v181);
          sub_26276B958(v237);
          uint64_t v62 = v250[0];
          BOOL v58 = v238;
        }
        while (sub_26276B3BC(v250[0]) > 1);
      }
      swift_bridgeObjectRelease();
      *(void *)(v231 + 16) = 0;
      swift_bridgeObjectRelease();
      unint64_t v63 = v230 << (v239 == 0);
    }
    if ((v63 & 0x8000000000000000) == 0)
    {
      if (v63)
      {
        if (v58[2] >= v63) {
          unint64_t v183 = v63;
        }
        else {
          unint64_t v183 = v58[2];
        }
      }
      else
      {
        unint64_t v183 = 0;
      }
      uint64_t v184 = swift_bridgeObjectRetain();
      uint64_t v185 = sub_2627442C8(v184);
      uint64_t v186 = sub_26276F980();
      v250[0] = v186;
      uint64_t v187 = *(void *)(v185 + 16);
      if (v187)
      {
        for (uint64_t j = 0; j != v187; ++j)
        {
          uint64_t v189 = *(void *)(v185 + 8 * j + 32);
          sub_262749810(v249, v189);
        }
        swift_bridgeObjectRelease();
        uint64_t v190 = v250[0];
      }
      else
      {
        uint64_t v190 = v186;
        swift_bridgeObjectRelease();
      }
      uint64_t v3 = 1;
      uint64_t v191 = sub_262743238(v243, 0, (2 * v183) | 1);
      swift_bridgeObjectRelease();
      uint64_t v192 = sub_262749EF0(v191, v190);
      swift_bridgeObjectRelease();
      uint64_t v193 = 0;
      uint64_t v194 = v192 + 56;
      uint64_t v195 = 1 << *(unsigned char *)(v192 + 32);
      if (v195 < 64) {
        uint64_t v196 = ~(-1 << v195);
      }
      else {
        uint64_t v196 = -1;
      }
      unint64_t v197 = v196 & *(void *)(v192 + 56);
      uint64_t v4 = (unint64_t)(v195 + 63) >> 6;
      while (1)
      {
        if (v197)
        {
          unint64_t v198 = __clz(__rbit64(v197));
          v197 &= v197 - 1;
          unint64_t v199 = v198 | (v193 << 6);
        }
        else
        {
          uint64_t v200 = v193 + 1;
          if (__OFADD__(v193, 1)) {
            goto LABEL_298;
          }
          if (v200 >= v4)
          {
LABEL_264:
            swift_bridgeObjectRelease();
            swift_release();
            uint64_t v4 = v232;
            goto LABEL_52;
          }
          unint64_t v201 = *(void *)(v194 + 8 * v200);
          ++v193;
          if (!v201)
          {
            uint64_t v193 = v200 + 1;
            if (v200 + 1 >= v4) {
              goto LABEL_264;
            }
            unint64_t v201 = *(void *)(v194 + 8 * v193);
            if (!v201)
            {
              uint64_t v193 = v200 + 2;
              if (v200 + 2 >= v4) {
                goto LABEL_264;
              }
              unint64_t v201 = *(void *)(v194 + 8 * v193);
              if (!v201)
              {
                uint64_t v202 = v200 + 3;
                if (v202 >= v4) {
                  goto LABEL_264;
                }
                unint64_t v201 = *(void *)(v194 + 8 * v202);
                if (!v201)
                {
                  while (1)
                  {
                    uint64_t v193 = v202 + 1;
                    if (__OFADD__(v202, 1)) {
                      break;
                    }
                    if (v193 >= v4) {
                      goto LABEL_264;
                    }
                    unint64_t v201 = *(void *)(v194 + 8 * v193);
                    ++v202;
                    if (v201) {
                      goto LABEL_247;
                    }
                  }
LABEL_308:
                  __break(1u);
LABEL_309:
                  __break(1u);
LABEL_310:
                  __break(1u);
LABEL_311:
                  __break(1u);
LABEL_312:
                  __break(1u);
LABEL_313:
                  __break(1u);
LABEL_314:
                  __break(1u);
LABEL_315:
                  __break(1u);
                  goto LABEL_316;
                }
                uint64_t v193 = v202;
              }
            }
          }
LABEL_247:
          unint64_t v197 = (v201 - 1) & v201;
          unint64_t v199 = __clz(__rbit64(v201)) + (v193 << 6);
        }
        uint64_t v3 = *(void *)(*(void *)(v192 + 48) + 8 * v199);
        if ((v251 & 0xC000000000000001) != 0)
        {
          uint64_t v203 = MEMORY[0x263E51F70](v239);
        }
        else
        {
          if (v239 >= *(void *)((v251 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_282;
          }
          uint64_t v203 = *(void *)(v251 + 8 * v239 + 32);
          swift_retain();
        }
        swift_beginAccess();
        uint64_t v204 = *(void *)(v203 + 32);
        if (*(void *)(v204 + 16))
        {
          sub_26274A550(v242);
          if (v205)
          {
            sub_26274A550(v3);
            if (v206)
            {
              unint64_t v207 = sub_26274A550(v242);
              if (v208)
              {
                uint64_t v209 = *(void *)(*(void *)(v204 + 56) + 8 * v207);
                uint64_t v210 = *(void *)(v209 + 16);
                if (v210)
                {
                  if (*(void *)(v209 + 32) == v3)
                  {
                    unint64_t v211 = 0;
LABEL_261:
                    v246 = sub_262747AC0();
                    uint64_t v3 = (uint64_t)sub_262747B14(v249, v242);
                    if (*v215) {
                      sub_262747BC0(v211);
                    }
                    ((void (*)(uint64_t *, void))v3)(v249, 0);
                    ((void (*)(uint64_t *, void))v246)(v250, 0);
                  }
                  else
                  {
                    unint64_t v211 = 0;
                    uint64_t v212 = v209 + 40;
                    uint64_t v213 = v210 - 1;
                    while (v213 != v211)
                    {
                      uint64_t v214 = *(void *)(v212 + 8 * v211++);
                      if (v214 == v3) {
                        goto LABEL_261;
                      }
                    }
                  }
                }
              }
            }
          }
        }
        swift_release();
      }
    }
    goto LABEL_317;
  }
LABEL_320:
  __break(1u);
LABEL_321:
  __break(1u);
LABEL_322:
  __break(1u);
LABEL_323:
  __break(1u);
LABEL_324:
  __break(1u);
LABEL_325:
  __break(1u);
LABEL_326:
  __break(1u);
LABEL_327:
  __break(1u);
LABEL_328:
  sub_26276FC00();
  __break(1u);
  v248 = (float *)v3;
  v249[0] = v4;
  sub_26276BB9C(v249, &v248, &v247);
  swift_bridgeObjectRelease();
  *(void *)(v231 + 16) = 0;
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t HNSWIndex.search(query:k:)(uint64_t a1, uint64_t a2)
{
  return HNSWIndex.search(query:k:ef:)(a1, a2, 10);
}

uint64_t HNSWIndex.search(query:k:ef:)(uint64_t a1, uint64_t inited, uint64_t a3)
{
  unint64_t v6 = v3 + 32;
  swift_beginAccess();
  unint64_t v7 = *(void *)(v3 + 32);
  if (v7 >> 62)
  {
LABEL_28:
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_26276FBC0();
    swift_bridgeObjectRelease();
    uint64_t v9 = v27 - 1;
    if (!__OFSUB__(v27, 1)) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v9 = v8 - 1;
    if (!__OFSUB__(v8, 1))
    {
LABEL_3:
      uint64_t v28 = a3;
      int64_t v29 = inited;
      unint64_t v10 = v9 & ~(v9 >> 63);
      unint64_t v7 = v3 + 24;
      swift_beginAccess();
      a3 = 0;
      char v11 = 0;
      long long v30 = xmmword_2627718D0;
      while (1)
      {
        unint64_t v12 = v10 - 1;
        if (v10 <= 1)
        {
          if ((v10 != 1) | v11 & 1)
          {
            unint64_t v7 = *(void *)v7;
            swift_beginAccess();
            unint64_t v6 = *(void *)v6;
            if ((v6 & 0xC000000000000001) != 0) {
              goto LABEL_31;
            }
            if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              uint64_t v17 = *(void *)(v6 + 32);
              swift_bridgeObjectRetain();
              swift_retain();
              goto LABEL_18;
            }
            __break(1u);
LABEL_33:
            __break(1u);
            goto LABEL_34;
          }
          char v11 = 1;
          unint64_t v12 = 1;
        }
        uint64_t v13 = *(void *)v7;
        swift_beginAccess();
        unint64_t v14 = *(void *)v6;
        if ((*(void *)v6 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v15 = MEMORY[0x263E51F70](v10, v14);
        }
        else
        {
          if (v10 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_28;
          }
          uint64_t v15 = *(void *)(v14 + 8 * v10 + 32);
          swift_bridgeObjectRetain();
          swift_retain();
        }
        swift_endAccess();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A957310);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_2627718D0;
        *(void *)(inited + 32) = a3;
        uint64_t v16 = sub_262746264(v13, v15, a1, inited, 1);
        swift_bridgeObjectRelease();
        swift_setDeallocating();
        swift_release();
        if (*(void *)(v16 + 16)) {
          a3 = *(void *)(v16 + 32);
        }
        else {
          a3 = 0;
        }
        swift_bridgeObjectRelease();
        unint64_t v10 = v12;
      }
    }
  }
  __break(1u);
LABEL_31:
  swift_bridgeObjectRetain();
  uint64_t v17 = MEMORY[0x263E51F70](0, v6);
LABEL_18:
  swift_endAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957310);
  uint64_t v18 = swift_initStackObject();
  *(_OWORD *)(v18 + 16) = v30;
  *(void *)(v18 + 32) = a3;
  uint64_t v19 = sub_262746264(v7, v17, a1, v18, v28);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_release();
  inited = sub_26273D4CC(v29, v19);
  uint64_t v3 = v20;
  a3 = v21;
  unint64_t v12 = v22;
  if ((v22 & 1) == 0) {
    goto LABEL_19;
  }
  sub_26276FDB0();
  swift_unknownObjectRetain_n();
  uint64_t v24 = swift_dynamicCastClass();
  if (!v24)
  {
    swift_unknownObjectRelease();
    uint64_t v24 = MEMORY[0x263F8EE78];
  }
  uint64_t v25 = *(void *)(v24 + 16);
  swift_release();
  if (__OFSUB__(v12 >> 1, a3)) {
    goto LABEL_33;
  }
  if (v25 != (v12 >> 1) - a3)
  {
LABEL_34:
    swift_unknownObjectRelease();
LABEL_19:
    uint64_t v23 = sub_26273DD60(inited, v3, a3, v12);
    goto LABEL_26;
  }
  uint64_t v23 = swift_dynamicCastClass();
  if (!v23)
  {
    swift_unknownObjectRelease();
    uint64_t v23 = MEMORY[0x263F8EE78];
  }
LABEL_26:
  swift_unknownObjectRelease();
  return v23;
}

uint64_t sub_262746264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_26274B798(a4, v6, a3, a1);
  uint64_t v108 = v6;
  swift_release();
  uint64_t v107 = a3;
  swift_bridgeObjectRelease();
  uint64_t v109 = a1;
  swift_bridgeObjectRelease();
  uint64_t v116 = (void *)v12;
  sub_2627473FC((uint64_t *)&v116, (uint64_t (*)(uint64_t))sub_26273600C);
  uint64_t v13 = v116;
  unint64_t v14 = v116[2];
  if (v14)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A957380);
    uint64_t v15 = (void *)swift_allocObject();
    int64_t v16 = _swift_stdlib_malloc_size(v15);
    uint64_t v17 = v16 - 40;
    if (v16 < 40) {
      uint64_t v17 = v16 - 25;
    }
    void v15[2] = v17 >> 4;
    v15[3] = 0;
    v15[4] = 0;
    sub_26272A15C((uint64_t)(v15 + 2), v15 + 5, v14, (uint64_t)v13);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = *(void **)sub_26276F4F0();
    swift_retain();
    swift_bridgeObjectRelease();
  }
  uint64_t v115 = v15;
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = sub_26274B9DC(v18);
  swift_bridgeObjectRelease();
  uint64_t v20 = v15[3];
  if (!v20)
  {
LABEL_123:
    swift_bridgeObjectRelease();
    swift_release();
    return (uint64_t)v116;
  }
  uint64_t v101 = (uint64_t *)(a2 + 32);
  uint64_t v102 = a5;
  uint64_t v106 = a1 + 32;
LABEL_9:
  while (v20 >= 1)
  {
    uint64_t v21 = v15[4];
    uint64_t v22 = v15[2];
    if (v21 < v22) {
      uint64_t v22 = 0;
    }
    uint64_t v23 = v13[2];
    if (v23) {
      float v24 = *(float *)&v13[2 * v23 + 3];
    }
    else {
      float v24 = INFINITY;
    }
    uint64_t v25 = (float *)&v15[2 * (v21 - v22)];
    uint64_t v26 = *((void *)v25 + 5);
    float v27 = v25[12];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_262729798();
    }
    uint64_t v15 = v115;
    uint64_t v28 = v115[4];
    BOOL v59 = __OFADD__(v28, 1);
    uint64_t v29 = v28 + 1;
    if (v59) {
      goto LABEL_146;
    }
    uint64_t v30 = v115[3];
    if (v29 >= v115[2]) {
      uint64_t v29 = 0;
    }
    v115[4] = v29;
    if (__OFSUB__(v30, 1)) {
      goto LABEL_147;
    }
    v15[3] = v30 - 1;
    if (v24 < v27) {
      goto LABEL_123;
    }
    swift_beginAccess();
    uint64_t v31 = *v101;
    if (*(void *)(*v101 + 16))
    {
      unint64_t v32 = sub_26274A550(v26);
      uint64_t v33 = MEMORY[0x263F8EE78];
      if (v34)
      {
        uint64_t v33 = *(void *)(*(void *)(v31 + 56) + 8 * v32);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      uint64_t v33 = MEMORY[0x263F8EE78];
    }
    uint64_t v112 = *(void *)(v33 + 16);
    if (v112)
    {
      unint64_t v35 = 0;
      uint64_t v110 = v33;
      uint64_t v111 = v33 + 32;
      while (1)
      {
        if (v35 >= *(void *)(v33 + 16)) {
          goto LABEL_126;
        }
        unint64_t v36 = *(void *)(v111 + 8 * v35);
        if (!*(void *)(v19 + 16)) {
          goto LABEL_38;
        }
        uint64_t v37 = sub_26276FDF0();
        uint64_t v38 = -1 << *(unsigned char *)(v19 + 32);
        unint64_t v39 = v37 & ~v38;
        if (((*(void *)(v19 + 56 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39) & 1) == 0) {
          goto LABEL_38;
        }
        uint64_t v40 = *(void *)(v19 + 48);
        if (*(void *)(v40 + 8 * v39) != v36) {
          break;
        }
LABEL_29:
        if (++v35 == v112)
        {
          swift_bridgeObjectRelease();
          uint64_t v15 = v115;
          uint64_t v20 = v115[3];
          if (!v20) {
            goto LABEL_123;
          }
          goto LABEL_9;
        }
      }
      uint64_t v41 = ~v38;
      while (1)
      {
        unint64_t v39 = (v39 + 1) & v41;
        if (((*(void *)(v19 + 56 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39) & 1) == 0) {
          break;
        }
        if (*(void *)(v40 + 8 * v39) == v36) {
          goto LABEL_29;
        }
      }
LABEL_38:
      uint64_t v42 = sub_26276FDF0();
      uint64_t v43 = -1 << *(unsigned char *)(v19 + 32);
      unint64_t v44 = v42 & ~v43;
      if ((*(void *)(v19 + 56 + ((v44 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v44))
      {
        uint64_t v45 = *(void *)(v19 + 48);
        if (*(void *)(v45 + 8 * v44) != v36)
        {
          uint64_t v46 = ~v43;
          do
          {
            unint64_t v44 = (v44 + 1) & v46;
            if (((*(void *)(v19 + 56 + ((v44 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v44) & 1) == 0) {
              goto LABEL_44;
            }
          }
          while (*(void *)(v45 + 8 * v44) != v36);
        }
      }
      else
      {
LABEL_44:
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v113 = (void *)v19;
        sub_262749B7C(v36, v44, isUniquelyReferenced_nonNull_native);
        uint64_t v19 = (uint64_t)v113;
        swift_bridgeObjectRelease();
      }
      if ((v36 & 0x8000000000000000) != 0) {
        goto LABEL_127;
      }
      if (v36 >= *(void *)(v109 + 16)) {
        goto LABEL_128;
      }
      uint64_t v48 = off_270DC6D78[*(char *)(v108 + 16)];
      uint64_t v49 = *(void *)(v106 + 8 * v36);
      swift_bridgeObjectRetain();
      float v50 = ((float (*)(uint64_t, uint64_t))v48)(v107, v49);
      swift_bridgeObjectRelease();
      if (v50 >= v24)
      {
        uint64_t v13 = v116;
        if (v116[2] >= a5) {
          goto LABEL_28;
        }
      }
      uint64_t v51 = v115;
      uint64_t v52 = v115[3];
      uint64_t v53 = v52 + 1;
      if (__OFADD__(v52, 1)) {
        goto LABEL_129;
      }
      char v54 = swift_isUniquelyReferenced_nonNull_native();
      if (v51[2] < v53 || (v54 & 1) == 0)
      {
        sub_262729B9C(v53);
        uint64_t v51 = v115;
      }
      uint64_t v56 = v51[3];
      uint64_t v55 = v51[4];
      BOOL v59 = __OFADD__(v55, v56);
      uint64_t v57 = v55 + v56;
      if (v59) {
        goto LABEL_130;
      }
      if (v56 < 0)
      {
        if (v57 < 0)
        {
          uint64_t v61 = v51[2];
          BOOL v59 = __OFADD__(v57, v61);
          v57 += v61;
          if (v59) {
            goto LABEL_144;
          }
        }
      }
      else
      {
        uint64_t v58 = v51[2];
        BOOL v59 = __OFSUB__(v57, v58);
        uint64_t v60 = v57 - v58;
        if (v60 < 0 == v59)
        {
          uint64_t v57 = v60;
          if (v59) {
            goto LABEL_140;
          }
        }
      }
      uint64_t v62 = (float *)&v51[2 * v57];
      *((void *)v62 + 5) = v36;
      v62[12] = v50;
      uint64_t v63 = v51[3];
      BOOL v59 = __OFADD__(v63, 1);
      uint64_t v64 = v63 + 1;
      if (v59) {
        goto LABEL_131;
      }
      v51[3] = v64;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_262729798();
        uint64_t v51 = v115;
      }
      int64_t v65 = v51[3];
      uint64_t v66 = v51[4];
      uint64_t v67 = v51[2];
      uint64_t v68 = v65 + v66;
      if (v67 >= v65 + v66)
      {
        if (v68 < v66) {
          goto LABEL_133;
        }
        if (__OFSUB__(v68, v66)) {
          goto LABEL_134;
        }
        uint64_t v113 = &v51[2 * v66 + 5];
        unint64_t v114 = v65;
        sub_262748AE0((uint64_t (*)(uint64_t *, uint64_t *))sub_262747474, 0);
      }
      else
      {
        if (v65 < 0) {
          goto LABEL_148;
        }
        swift_retain();
        if (v65)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A957388);
          uint64_t v69 = sub_26276F830();
          *(void *)(v69 + 16) = v65;
          uint64_t v70 = v51[2];
          uint64_t v66 = v51[4];
          uint64_t v71 = v70 - v66;
          if (__OFSUB__(v70, v66)) {
            goto LABEL_132;
          }
        }
        else
        {
          uint64_t v69 = MEMORY[0x263F8EE78];
          uint64_t v71 = v67 - v66;
          if (__OFSUB__(v67, v66)) {
            goto LABEL_132;
          }
        }
        uint64_t v72 = v51[3];
        if (v71 >= v72)
        {
          uint64_t v75 = 0;
          uint64_t v73 = 0;
          uint64_t v74 = v51[3];
        }
        else
        {
          uint64_t v73 = v72 - v71;
          if (__OFSUB__(v72, v71)) {
            goto LABEL_141;
          }
          uint64_t v74 = v71;
          uint64_t v75 = (char *)(v51 + 5);
        }
        if (v74 < 0) {
          goto LABEL_135;
        }
        uint64_t v105 = v19;
        unint64_t v76 = v69 + 32;
        if (v74)
        {
          uint64_t v103 = v75;
          uint64_t v104 = v69;
          uint64_t v77 = &v51[2 * v66 + 5];
          size_t v78 = 2 * v74;
          if ((unint64_t)v77 < v76 + 16 * v74 && v76 < (unint64_t)&v77[v78]) {
            goto LABEL_149;
          }
          memcpy((void *)(v69 + 32), v77, v78 * 8);
          uint64_t v75 = v103;
          uint64_t v69 = v104;
        }
        if (v71 >= v72)
        {
          uint64_t v79 = v74;
          uint64_t v19 = v105;
          if (v65 < v74) {
            goto LABEL_136;
          }
        }
        else
        {
          uint64_t v79 = v74 + v73;
          if (__OFADD__(v74, v73)) {
            goto LABEL_142;
          }
          if (v79 < v74) {
            goto LABEL_143;
          }
          if (v75 && v73)
          {
            if (v73 < 0) {
              goto LABEL_149;
            }
            uint64_t v80 = v69;
            uint64_t v81 = (char *)(v76 + 16 * v74);
            size_t v82 = 16 * v73;
            if (&v81[16 * v73] > v75 && v81 < &v75[v82]) {
              goto LABEL_149;
            }
            memcpy(v81, v75, v82);
            uint64_t v19 = v105;
            uint64_t v69 = v80;
            if (v65 < v79) {
              goto LABEL_136;
            }
          }
          else
          {
            uint64_t v19 = v105;
            if (v65 < v79) {
              goto LABEL_136;
            }
          }
        }
        *(void *)(v69 + 16) = v79;
        uint64_t v83 = v69;
        swift_release();
        uint64_t v113 = (void *)v83;
        sub_2627473FC((uint64_t *)&v113, sub_26276CDB0);
        uint64_t v84 = (uint64_t)v113;
        uint64_t v85 = v51[3];
        if (v85 < 0) {
          goto LABEL_137;
        }
        if (v85)
        {
          uint64_t v86 = v113[2];
          if (v86)
          {
            unint64_t v87 = 0;
            uint64_t v88 = v85 - 1;
            uint64_t v89 = v113 + 5;
            while (v87 < *(void *)(v84 + 16))
            {
              if ((int64_t)v87 >= v51[3]) {
                goto LABEL_125;
              }
              uint64_t v90 = *((void *)v89 - 1);
              int v91 = *v89;
              uint64_t v51 = v115;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_262729798();
                uint64_t v51 = v115;
              }
              uint64_t v92 = v51[4];
              if ((int64_t)(v87 + v92) >= v51[2]) {
                uint64_t v93 = v51[2];
              }
              else {
                uint64_t v93 = 0;
              }
              uint64_t v94 = &v51[2 * v87 + 2 * (v92 - v93)];
              v94[5] = v90;
              *((_DWORD *)v94 + 12) = v91;
              if (v88 != v87)
              {
                ++v87;
                v89 += 4;
                if (v86 != v87) {
                  continue;
                }
              }
              swift_release();
              a5 = v102;
              uint64_t v19 = v105;
              goto LABEL_111;
            }
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
            break;
          }
        }
        swift_release();
        a5 = v102;
      }
LABEL_111:
      uint64_t v13 = v116;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = sub_262727954(0, v13[2] + 1, 1, v13);
      }
      unint64_t v96 = v13[2];
      unint64_t v95 = v13[3];
      if (v96 >= v95 >> 1) {
        uint64_t v13 = sub_262727954((void *)(v95 > 1), v96 + 1, 1, v13);
      }
      void v13[2] = v96 + 1;
      uint64_t v97 = (uint64_t)&v13[2 * v96 + 4];
      *(void *)uint64_t v97 = v36;
      *(float *)(v97 + 8) = v50;
      uint64_t v113 = v13 + 4;
      unint64_t v114 = v96 + 1;
      sub_2627483C4((uint64_t *)&v113);
      uint64_t v116 = v13;
      uint64_t v98 = v13[2];
      if (v98 <= a5)
      {
LABEL_28:
        uint64_t v33 = v110;
      }
      else
      {
        uint64_t v33 = v110;
        if (!v98) {
          goto LABEL_138;
        }
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          uint64_t v99 = v13[2];
          if (!v99) {
            goto LABEL_139;
          }
        }
        else
        {
          uint64_t v13 = sub_26273600C(v13);
          uint64_t v99 = v13[2];
          if (!v99) {
            goto LABEL_139;
          }
        }
        void v13[2] = v99 - 1;
        uint64_t v116 = v13;
      }
      goto LABEL_29;
    }
    swift_bridgeObjectRelease();
    uint64_t v20 = v15[3];
    if (!v20) {
      goto LABEL_123;
    }
  }
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
  __break(1u);
LABEL_148:
  sub_26276FBA0();
  __break(1u);
LABEL_149:
  uint64_t result = sub_26276FC00();
  __break(1u);
  return result;
}

uint64_t HNSWIndex.search(query:radius:sorted:)(uint64_t a1, char a2, float a3)
{
  switch(*(unsigned char *)(v3 + 16))
  {
    case 2:
      swift_bridgeObjectRelease();
      goto LABEL_4;
    default:
      char v5 = sub_26276FDA0();
      swift_bridgeObjectRelease();
      if (v5) {
LABEL_4:
      }
        a3 = a3 * a3;
      uint64_t v6 = (uint64_t *)(v3 + 32);
      swift_beginAccess();
      unint64_t v7 = *(void *)(v3 + 32);
      if (v7 >> 62) {
        goto LABEL_26;
      }
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v9 = v8 - 1;
      if (__OFSUB__(v8, 1)) {
        goto LABEL_28;
      }
      break;
  }
LABEL_7:
  unint64_t v10 = v9 & ~(v9 >> 63);
  swift_beginAccess();
  unint64_t v7 = 0;
  char v11 = 0;
  while (1)
  {
    uint64_t v12 = v10 - 1;
    if (v10 > 1) {
      goto LABEL_13;
    }
    if ((v10 != 1) | v11 & 1) {
      break;
    }
    char v11 = 1;
    uint64_t v12 = 1;
LABEL_13:
    uint64_t v13 = *(void *)(v3 + 24);
    swift_beginAccess();
    uint64_t v14 = *v6;
    if ((*v6 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = MEMORY[0x263E51F70](v10, v14);
    }
    else
    {
      if (v10 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_26:
        swift_bridgeObjectRetain();
        uint64_t v22 = sub_26276FBC0();
        swift_bridgeObjectRelease();
        uint64_t v9 = v22 - 1;
        if (!__OFSUB__(v22, 1)) {
          goto LABEL_7;
        }
LABEL_28:
        __break(1u);
LABEL_29:
        uint64_t v19 = MEMORY[0x263E51F70](0);
        goto LABEL_22;
      }
      uint64_t v15 = *(void *)(v14 + 8 * v10 + 32);
      swift_bridgeObjectRetain();
      swift_retain();
    }
    swift_endAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A957310);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2627718D0;
    *(void *)(inited + 32) = v7;
    uint64_t v17 = sub_262746264(v13, v15, a1, inited, 1);
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_release();
    if (*(void *)(v17 + 16)) {
      unint64_t v7 = *(void *)(v17 + 32);
    }
    else {
      unint64_t v7 = 0;
    }
    swift_bridgeObjectRelease();
    unint64_t v10 = v12;
  }
  swift_beginAccess();
  uint64_t v18 = *v6;
  if ((*v6 & 0xC000000000000001) != 0) {
    goto LABEL_29;
  }
  if (!*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    JUMPOUT(0x262746F84);
  }
  uint64_t v19 = *(void *)(v18 + 32);
  swift_retain();
LABEL_22:
  swift_endAccess();
  uint64_t v20 = sub_262746F94(v19, a1, v7, a3);
  swift_release();
  v25[0] = (uint64_t)v20;
  if (a2)
  {
    sub_2627473FC(v25, (uint64_t (*)(uint64_t))sub_26273600C);
    return v25[0];
  }
  return (uint64_t)v20;
}

void *sub_262746F94(uint64_t a1, uint64_t a2, unint64_t a3, float a4)
{
  uint64_t v57 = *MEMORY[0x263EF8340];
  uint64_t v8 = off_270DC6D78[*(char *)(v4 + 16)];
  uint64_t v52 = *(char *)(v4 + 16);
  uint64_t v53 = v4 + 24;
  swift_beginAccess();
  if ((a3 & 0x8000000000000000) != 0) {
    goto LABEL_46;
  }
  uint64_t v9 = *(void *)(v4 + 24);
  if (*(void *)(v9 + 16) <= a3) {
LABEL_47:
  }
    __break(1u);
  uint64_t v10 = *(void *)(v9 + 8 * a3 + 32);
  swift_bridgeObjectRetain();
  float v11 = ((float (*)(uint64_t, uint64_t))v8)(a2, v10);
  swift_bridgeObjectRelease();
  uint64_t v56 = MEMORY[0x263F8EE88];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957318);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2627718D0;
  *(void *)(inited + 32) = a3;
  *(float *)(inited + 40) = v11;
  float v50 = (uint64_t *)(a1 + 32);
  uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  uint64_t v14 = 1;
  do
  {
    uint64_t v15 = v14 - 1;
    uint64_t v16 = inited + 16 * v15;
    uint64_t v17 = *(void *)(v16 + 32);
    float v18 = *(float *)(v16 + 40);
    *(void *)(inited + 16) = v15;
    uint64_t v19 = v56;
    if (*(void *)(v56 + 16))
    {
      uint64_t v20 = sub_26276FDF0();
      uint64_t v21 = -1 << *(unsigned char *)(v19 + 32);
      unint64_t v22 = v20 & ~v21;
      if ((*(void *)(v19 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22))
      {
        uint64_t v23 = *(void *)(v19 + 48);
        if (*(void *)(v23 + 8 * v22) == v17) {
          goto LABEL_5;
        }
        uint64_t v24 = ~v21;
        while (1)
        {
          unint64_t v22 = (v22 + 1) & v24;
          if (((*(void *)(v19 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
            break;
          }
          if (*(void *)(v23 + 8 * v22) == v17) {
            goto LABEL_5;
          }
        }
      }
    }
    sub_262749810(&v55, v17);
    if (v18 <= a4)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = sub_262727954(0, v13[2] + 1, 1, v13);
      }
      unint64_t v26 = v13[2];
      unint64_t v25 = v13[3];
      if (v26 >= v25 >> 1) {
        uint64_t v13 = sub_262727954((void *)(v25 > 1), v26 + 1, 1, v13);
      }
      void v13[2] = v26 + 1;
      float v27 = (float *)&v13[2 * v26];
      *((void *)v27 + 4) = v17;
      v27[10] = v18;
    }
    swift_beginAccess();
    uint64_t v28 = *v50;
    if (*(void *)(*v50 + 16))
    {
      unint64_t v29 = sub_26274A550(v17);
      uint64_t v30 = MEMORY[0x263F8EE78];
      if (v31)
      {
        uint64_t v30 = *(void *)(*(void *)(v28 + 56) + 8 * v29);
        swift_bridgeObjectRetain();
      }
      uint64_t v32 = *(void *)(v30 + 16);
      if (v32)
      {
LABEL_23:
        uint64_t v51 = v13;
        unint64_t v33 = 0;
        uint64_t v34 = v56;
        uint64_t v35 = v56 + 56;
        while (1)
        {
          if (v33 >= *(void *)(v30 + 16))
          {
            __break(1u);
LABEL_44:
            __break(1u);
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
            goto LABEL_47;
          }
          unint64_t v36 = *(void *)(v30 + 32 + 8 * v33);
          if (!*(void *)(v34 + 16)) {
            goto LABEL_34;
          }
          uint64_t v37 = sub_26276FDF0();
          uint64_t v38 = -1 << *(unsigned char *)(v34 + 32);
          unint64_t v39 = v37 & ~v38;
          if (((*(void *)(v35 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39) & 1) == 0) {
            goto LABEL_34;
          }
          uint64_t v40 = *(void *)(v34 + 48);
          if (*(void *)(v40 + 8 * v39) != v36) {
            break;
          }
LABEL_25:
          if (++v33 == v32)
          {
            swift_bridgeObjectRelease();
            uint64_t v13 = v51;
            goto LABEL_5;
          }
        }
        uint64_t v41 = ~v38;
        while (1)
        {
          unint64_t v39 = (v39 + 1) & v41;
          if (((*(void *)(v35 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39) & 1) == 0) {
            break;
          }
          if (*(void *)(v40 + 8 * v39) == v36) {
            goto LABEL_25;
          }
        }
LABEL_34:
        if ((v36 & 0x8000000000000000) != 0) {
          goto LABEL_44;
        }
        if (v36 >= *(void *)(*(void *)v53 + 16)) {
          goto LABEL_45;
        }
        uint64_t v42 = (void *)inited;
        uint64_t v43 = off_270DC6D78[v52];
        uint64_t v44 = *(void *)(*(void *)v53 + 8 * v36 + 32);
        swift_bridgeObjectRetain();
        float v45 = ((float (*)(uint64_t, uint64_t))v43)(a2, v44);
        swift_bridgeObjectRelease();
        if (v45 > a4)
        {
          uint64_t inited = (uint64_t)v42;
        }
        else
        {
          uint64_t inited = (uint64_t)v42;
          unint64_t v47 = v42[2];
          unint64_t v46 = v42[3];
          if (v47 >= v46 >> 1) {
            uint64_t inited = (uint64_t)sub_262727954((void *)(v46 > 1), v47 + 1, 1, v42);
          }
          *(void *)(inited + 16) = v47 + 1;
          uint64_t v48 = inited + 16 * v47;
          *(void *)(v48 + 32) = v36;
          *(float *)(v48 + 40) = v45;
        }
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v30 = MEMORY[0x263F8EE78];
      uint64_t v32 = *(void *)(MEMORY[0x263F8EE78] + 16);
      if (v32) {
        goto LABEL_23;
      }
    }
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v14 = *(void *)(inited + 16);
  }
  while (v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_2627473FC(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v4 = a2(v4);
  }
  uint64_t v5 = *(void *)(v4 + 16);
  v7[0] = v4 + 32;
  v7[1] = v5;
  uint64_t result = sub_2627483C4(v7);
  *a1 = v4;
  return result;
}

BOOL sub_262747474(uint64_t a1, uint64_t a2)
{
  return *(float *)(a1 + 8) < *(float *)(a2 + 8);
}

uint64_t HNSWIndex.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t HNSWIndex.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0228](v0, 40, 7);
}

uint64_t HNSWIndex.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9579F0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_262747F7C();
  sub_26276FE40();
  char v12 = *(unsigned char *)(v3 + 16);
  LOBYTE(v11) = 0;
  sub_262747FD0();
  sub_26276FD20();
  if (!v2)
  {
    swift_beginAccess();
    uint64_t v11 = *(void *)(v3 + 32);
    v10[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A957A08);
    sub_262748078(&qword_26A957A10, &qword_26A957A18);
    sub_26276FD20();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t HNSWIndex.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  HNSWIndex.init(from:)(a1);
  return v2;
}

uint64_t HNSWIndex.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957A28);
  uint64_t v15 = *(void *)(v5 - 8);
  uint64_t v16 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x263F8EE78];
  *(void *)(v1 + 24) = MEMORY[0x263F8EE78];
  *(void *)(v1 + 32) = v8;
  uint64_t v9 = (void *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_262747F7C();
  sub_26276FE30();
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v10 = v15;
    LOBYTE(v18) = 0;
    sub_262748024();
    uint64_t v11 = v16;
    sub_26276FC90();
    *(unsigned char *)(v1 + 16) = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A957A08);
    char v17 = 1;
    sub_262748078(&qword_26A957A38, &qword_26A957A40);
    sub_26276FC90();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v11);
    uint64_t v13 = v18;
    swift_beginAccess();
    *uint64_t v9 = v13;
    swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t sub_2627479F0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = HNSWIndex.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_262747A48(void *a1)
{
  return HNSWIndex.encode(to:)(a1);
}

uint64_t sub_262747A6C(uint64_t *a1, uint64_t a2)
{
  return HNSWIndex.search(query:k:ef:)(*a1, a2, 10);
}

uint64_t sub_262747A98(uint64_t *a1, char a2, float a3)
{
  return HNSWIndex.search(query:radius:sorted:)(*a1, a2, a3);
}

uint64_t (*sub_262747AC0())()
{
  return j__swift_endAccess;
}

void (*sub_262747B14(void *a1, uint64_t a2))(void *a1)
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_26274B414(v4, a2);
  return sub_262747B74;
}

void sub_262747B74(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);
  free(v1);
}

uint64_t sub_262747BC0(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_262735D9C(v3);
  }
  unint64_t v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      uint64_t v7 = &v3[a1];
      uint64_t v8 = v7[4];
      memmove(v7 + 4, v7 + 5, 8 * v6);
      v3[2] = v5;
      *uint64_t v1 = v3;
      return v8;
    }
  }
  uint64_t result = sub_26276FC00();
  __break(1u);
  return result;
}

uint64_t sub_262747C94(uint64_t a1, uint64_t a2, float a3)
{
  uint64_t v5 = v3;
  uint64_t v9 = (void **)(v3 + 32);
  swift_beginAccess();
  if (!*(void *)(*(void *)(v3 + 32) + 16)) {
    return 0;
  }
  sub_26274A550(a1);
  if ((v10 & 1) == 0) {
    return 0;
  }
  sub_26274A550(a2);
  if ((v11 & 1) == 0) {
    return 0;
  }
  swift_beginAccess();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_262747F70;
  *(void *)(v12 + 24) = 0;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = *v9;
  unint64_t v33 = *v9;
  *uint64_t v9 = (void *)0x8000000000000000;
  unint64_t v16 = sub_26274A550(a1);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_19;
  }
  char v20 = v15;
  if (v14[3] >= v19)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_26274B0DC();
      uint64_t v14 = v33;
    }
  }
  else
  {
    sub_26274A72C(v19, isUniquelyReferenced_nonNull_native);
    uint64_t v14 = v33;
    unint64_t v21 = sub_26274A550(a1);
    if ((v20 & 1) != (v22 & 1))
    {
LABEL_21:
      uint64_t result = sub_26276FDE0();
      __break(1u);
      return result;
    }
    unint64_t v16 = v21;
  }
  *uint64_t v9 = v14;
  swift_bridgeObjectRelease();
  uint64_t v24 = *v9;
  swift_bridgeObjectRetain();
  if (v20) {
    goto LABEL_14;
  }
  uint64_t v25 = sub_262747F70();
  v24[(v16 >> 6) + 8] |= 1 << v16;
  *(void *)(v24[6] + 8 * v16) = a1;
  *(void *)(v24[7] + 8 * v16) = v25;
  uint64_t v26 = v24[2];
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (v27)
  {
    __break(1u);
    goto LABEL_21;
  }
  v24[2] = v28;
LABEL_14:
  uint64_t v4 = v24[7];
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void **)(v4 + 8 * v16);
  char v29 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v4 + 8 * v16) = v14;
  if ((v29 & 1) == 0)
  {
LABEL_19:
    uint64_t v14 = sub_2627274CC(0, v14[2] + 1, 1, v14);
    *(void *)(v4 + 8 * v16) = v14;
  }
  unint64_t v31 = v14[2];
  unint64_t v30 = v14[3];
  if (v31 >= v30 >> 1)
  {
    uint64_t v14 = sub_2627274CC((void *)(v30 > 1), v31 + 1, 1, v14);
    *(void *)(v4 + 8 * v16) = v14;
  }
  void v14[2] = v31 + 1;
  v14[v31 + 4] = a2;
  swift_endAccess();
  swift_beginAccess();
  char v32 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v34 = *(void *)(v5 + 40);
  *(void *)(v5 + 40) = 0x8000000000000000;
  sub_26274AE60(a1, a2, v32, a3);
  *(void *)(v5 + 40) = v34;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  return 1;
}

uint64_t sub_262747F70()
{
  return MEMORY[0x263F8EE78];
}

unint64_t sub_262747F7C()
{
  unint64_t result = qword_26A9579F8;
  if (!qword_26A9579F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9579F8);
  }
  return result;
}

unint64_t sub_262747FD0()
{
  unint64_t result = qword_26A957A00;
  if (!qword_26A957A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957A00);
  }
  return result;
}

unint64_t sub_262748024()
{
  unint64_t result = qword_26A957A30;
  if (!qword_26A957A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957A30);
  }
  return result;
}

uint64_t sub_262748078(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A957A08);
    sub_2627480F8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2627480F8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A957A20);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for HNSWIndex()
{
  return self;
}

uint64_t method lookup function for HNSWIndex(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for HNSWIndex);
}

uint64_t dispatch thunk of HNSWIndex.__allocating_init(points:metric:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of HNSWIndex.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

unsigned char *storeEnumTagSinglePayload for HNSWIndex.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x262748284);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HNSWIndex.CodingKeys()
{
  return &type metadata for HNSWIndex.CodingKeys;
}

unint64_t sub_2627482C0()
{
  unint64_t result = qword_26A957A48;
  if (!qword_26A957A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957A48);
  }
  return result;
}

unint64_t sub_262748318()
{
  unint64_t result = qword_26A957A50;
  if (!qword_26A957A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957A50);
  }
  return result;
}

unint64_t sub_262748370()
{
  unint64_t result = qword_26A957A58;
  if (!qword_26A957A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957A58);
  }
  return result;
}

uint64_t sub_2627483C4(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_26276FD50();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_141;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v84 = *a1;
      uint64_t v85 = *a1 + 16;
      uint64_t v86 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v88 = v86;
        uint64_t v89 = v85;
        do
        {
          float v90 = *(float *)(v89 + 8);
          if (v90 >= *(float *)(v89 - 8)) {
            break;
          }
          if (!v84) {
            goto LABEL_145;
          }
          uint64_t v91 = *(void *)v89;
          *(_OWORD *)uint64_t v89 = *(_OWORD *)(v89 - 16);
          *(float *)(v89 - 8) = v90;
          *(void *)(v89 - 16) = v91;
          v89 -= 16;
        }
        while (!__CFADD__(v88++, 1));
        v85 += 16;
        --v86;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_150;
  }
  uint64_t v6 = result;
  uint64_t v101 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v12 = (char *)MEMORY[0x263F8EE78];
LABEL_107:
      uint64_t v93 = v12;
      uint64_t v104 = v9;
      if (v13 >= 2)
      {
        uint64_t v94 = *v101;
        do
        {
          unint64_t v95 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_136;
          }
          if (!v94) {
            goto LABEL_149;
          }
          unint64_t v96 = v93;
          uint64_t v97 = *(void *)&v93[16 * v95 + 32];
          uint64_t v98 = *(void *)&v93[16 * v13 + 24];
          sub_26274956C((char *)(v94 + 16 * v97), (char *)(v94 + 16 * *(void *)&v93[16 * v13 + 16]), v94 + 16 * v98, __dst, (void (*)(char **, char **, char **))sub_26276BB9C);
          if (v1) {
            break;
          }
          if (v98 < v97) {
            goto LABEL_137;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v96 = sub_26276BD14((uint64_t)v96);
          }
          if (v95 >= *((void *)v96 + 2)) {
            goto LABEL_138;
          }
          uint64_t v99 = &v96[16 * v95 + 32];
          *(void *)uint64_t v99 = v97;
          *((void *)v99 + 1) = v98;
          unint64_t v100 = *((void *)v96 + 2);
          if (v13 > v100) {
            goto LABEL_139;
          }
          memmove(&v96[16 * v13 + 16], &v96[16 * v13 + 32], 16 * (v100 - v13));
          uint64_t v93 = v96;
          *((void *)v96 + 2) = v100 - 1;
          unint64_t v13 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_97:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A957388);
    uint64_t v8 = sub_26276F830();
    *(void *)(v8 + 16) = v7;
    uint64_t v104 = v8;
    __dst = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v102 = *a1 + 40;
  uint64_t v103 = *a1 + 8;
  uint64_t v12 = (char *)MEMORY[0x263F8EE78];
  uint64_t v105 = v6;
  uint64_t v106 = v3;
  uint64_t v107 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      float v15 = *(float *)(v103 + 16 * v10);
      uint64_t v16 = 16 * v14;
      float v17 = *(float *)(v103 + 16 * v14);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        BOOL v18 = (float *)(v102 + 16 * v14);
        while (v15 < v17 != *v18 >= *(v18 - 4))
        {
          ++v10;
          v18 += 4;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v15 < v17)
      {
        if (v10 < v14) {
          goto LABEL_142;
        }
        if (v14 < v10)
        {
          uint64_t v19 = 16 * v10 - 16;
          uint64_t v20 = v10;
          uint64_t v21 = v14;
          do
          {
            if (v21 != --v20)
            {
              if (!v11) {
                goto LABEL_148;
              }
              uint64_t v23 = (_OWORD *)(v11 + v16);
              uint64_t v24 = (_OWORD *)(v11 + v19);
              uint64_t v25 = *(void *)(v11 + v16);
              int v26 = *(_DWORD *)(v11 + v16 + 8);
              if (v16 != v19 || v23 >= v24 + 1) {
                *uint64_t v23 = *v24;
              }
              uint64_t v22 = v11 + v19;
              *(void *)uint64_t v22 = v25;
              *(_DWORD *)(v22 + 8) = v26;
            }
            ++v21;
            v19 -= 16;
            v16 += 16;
          }
          while (v21 < v20);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_50;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_140;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_50;
    }
    uint64_t v27 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_143;
    }
    if (v27 >= v3) {
      uint64_t v27 = v3;
    }
    if (v27 < v14) {
      break;
    }
    if (v10 != v27)
    {
      uint64_t v28 = (float *)(v11 + 16 * v10);
      do
      {
        char v29 = v28;
        uint64_t v30 = v14;
        do
        {
          float v31 = v29[2];
          if (v31 >= *(v29 - 2)) {
            break;
          }
          if (!v11) {
            goto LABEL_146;
          }
          uint64_t v32 = *(void *)v29;
          *(_OWORD *)char v29 = *((_OWORD *)v29 - 1);
          *(v29 - 2) = v31;
          *((void *)v29 - 2) = v32;
          v29 -= 4;
          ++v30;
        }
        while (v10 != v30);
        ++v10;
        v28 += 4;
      }
      while (v10 != v27);
      uint64_t v10 = v27;
    }
LABEL_50:
    if (v10 < v14) {
      goto LABEL_135;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_26276B9E4(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v34 = *((void *)v12 + 2);
    unint64_t v33 = *((void *)v12 + 3);
    unint64_t v13 = v34 + 1;
    uint64_t v11 = v107;
    if (v34 >= v33 >> 1)
    {
      uint64_t v83 = sub_26276B9E4((char *)(v33 > 1), v34 + 1, 1, v12);
      uint64_t v11 = v107;
      uint64_t v12 = v83;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v35 = v12 + 32;
    unint64_t v36 = &v12[16 * v34 + 32];
    *(void *)unint64_t v36 = v14;
    *((void *)v36 + 1) = v10;
    if (v34)
    {
      while (1)
      {
        unint64_t v37 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v42 = &v35[16 * v13];
          uint64_t v43 = *((void *)v42 - 8);
          uint64_t v44 = *((void *)v42 - 7);
          BOOL v48 = __OFSUB__(v44, v43);
          uint64_t v45 = v44 - v43;
          if (v48) {
            goto LABEL_124;
          }
          uint64_t v47 = *((void *)v42 - 6);
          uint64_t v46 = *((void *)v42 - 5);
          BOOL v48 = __OFSUB__(v46, v47);
          uint64_t v40 = v46 - v47;
          char v41 = v48;
          if (v48) {
            goto LABEL_125;
          }
          unint64_t v49 = v13 - 2;
          float v50 = &v35[16 * v13 - 32];
          uint64_t v52 = *(void *)v50;
          uint64_t v51 = *((void *)v50 + 1);
          BOOL v48 = __OFSUB__(v51, v52);
          uint64_t v53 = v51 - v52;
          if (v48) {
            goto LABEL_127;
          }
          BOOL v48 = __OFADD__(v40, v53);
          uint64_t v54 = v40 + v53;
          if (v48) {
            goto LABEL_130;
          }
          if (v54 >= v45)
          {
            uint64_t v72 = &v35[16 * v37];
            uint64_t v74 = *(void *)v72;
            uint64_t v73 = *((void *)v72 + 1);
            BOOL v48 = __OFSUB__(v73, v74);
            uint64_t v75 = v73 - v74;
            if (v48) {
              goto LABEL_134;
            }
            BOOL v65 = v40 < v75;
            goto LABEL_87;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v66 = *((void *)v12 + 4);
            uint64_t v67 = *((void *)v12 + 5);
            BOOL v48 = __OFSUB__(v67, v66);
            uint64_t v59 = v67 - v66;
            char v60 = v48;
            goto LABEL_81;
          }
          uint64_t v39 = *((void *)v12 + 4);
          uint64_t v38 = *((void *)v12 + 5);
          BOOL v48 = __OFSUB__(v38, v39);
          uint64_t v40 = v38 - v39;
          char v41 = v48;
        }
        if (v41) {
          goto LABEL_126;
        }
        unint64_t v49 = v13 - 2;
        uint64_t v55 = &v35[16 * v13 - 32];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v58 = __OFSUB__(v56, v57);
        uint64_t v59 = v56 - v57;
        char v60 = v58;
        if (v58) {
          goto LABEL_129;
        }
        uint64_t v61 = &v35[16 * v37];
        uint64_t v63 = *(void *)v61;
        uint64_t v62 = *((void *)v61 + 1);
        BOOL v48 = __OFSUB__(v62, v63);
        uint64_t v64 = v62 - v63;
        if (v48) {
          goto LABEL_132;
        }
        if (__OFADD__(v59, v64)) {
          goto LABEL_133;
        }
        if (v59 + v64 >= v40)
        {
          BOOL v65 = v40 < v64;
LABEL_87:
          if (v65) {
            unint64_t v37 = v49;
          }
          goto LABEL_89;
        }
LABEL_81:
        if (v60) {
          goto LABEL_128;
        }
        uint64_t v68 = &v35[16 * v37];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v48 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v48) {
          goto LABEL_131;
        }
        if (v71 < v59) {
          goto LABEL_15;
        }
LABEL_89:
        unint64_t v76 = v37 - 1;
        if (v37 - 1 >= v13)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!v11) {
          goto LABEL_147;
        }
        uint64_t v77 = v12;
        size_t v78 = &v35[16 * v76];
        uint64_t v79 = *(void *)v78;
        uint64_t v80 = &v35[16 * v37];
        uint64_t v81 = *((void *)v80 + 1);
        sub_26274956C((char *)(v11 + 16 * *(void *)v78), (char *)(v11 + 16 * *(void *)v80), v11 + 16 * v81, __dst, (void (*)(char **, char **, char **))sub_26276BB9C);
        if (v1) {
          goto LABEL_97;
        }
        if (v81 < v79) {
          goto LABEL_121;
        }
        if (v37 > *((void *)v77 + 2)) {
          goto LABEL_122;
        }
        *(void *)size_t v78 = v79;
        *(void *)&v35[16 * v76 + 8] = v81;
        unint64_t v82 = *((void *)v77 + 2);
        if (v37 >= v82) {
          goto LABEL_123;
        }
        uint64_t v12 = v77;
        unint64_t v13 = v82 - 1;
        memmove(&v35[16 * v37], v80 + 16, 16 * (v82 - 1 - v37));
        *((void *)v77 + 2) = v82 - 1;
        uint64_t v11 = v107;
        if (v82 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v105;
    uint64_t v3 = v106;
    if (v10 >= v106)
    {
      uint64_t v9 = v104;
      goto LABEL_107;
    }
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  uint64_t result = sub_26276FBA0();
  __break(1u);
  return result;
}

uint64_t sub_262748AE0(uint64_t (*a1)(uint64_t *, uint64_t *), uint64_t a2)
{
  uint64_t v116 = a2;
  uint64_t v4 = v2[1];
  uint64_t result = sub_26276FD50();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_138;
    }
    if (v4) {
      return sub_26276B21C(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 <= -2) {
    goto LABEL_147;
  }
  uint64_t v107 = result;
  uint64_t v108 = v4;
  if (v4 < 2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v4 != 1)
    {
      unint64_t v37 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v12 = (char *)MEMORY[0x263F8EE78];
LABEL_104:
      unint64_t v96 = v12;
      if (v37 >= 2)
      {
        uint64_t v97 = *v2;
        do
        {
          unint64_t v98 = v37 - 2;
          if (v37 < 2) {
            goto LABEL_133;
          }
          if (!v97) {
            goto LABEL_146;
          }
          uint64_t v99 = v96;
          uint64_t v100 = *(void *)&v96[16 * v98 + 32];
          uint64_t v101 = *(void *)&v96[16 * v37 + 24];
          sub_262749270((char *)(v97 + 16 * v100), (char *)(v97 + 16 * *(void *)&v96[16 * v37 + 16]), v97 + 16 * v101, __dst, a1);
          if (v3) {
            break;
          }
          if (v101 < v100) {
            goto LABEL_134;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v99 = sub_26276BD14((uint64_t)v99);
          }
          if (v98 >= *((void *)v99 + 2)) {
            goto LABEL_135;
          }
          uint64_t v102 = &v99[16 * v98 + 32];
          *(void *)uint64_t v102 = v100;
          *((void *)v102 + 1) = v101;
          unint64_t v103 = *((void *)v99 + 2);
          if (v37 > v103) {
            goto LABEL_136;
          }
          memmove(&v99[16 * v37 + 16], &v99[16 * v37 + 32], 16 * (v103 - v37));
          unint64_t v96 = v99;
          *((void *)v99 + 2) = v103 - 1;
          unint64_t v37 = v103 - 1;
        }
        while (v103 > 2);
      }
      swift_bridgeObjectRelease();
LABEL_116:
      *(void *)(v9 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v106 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v7 = v6 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A957388);
    uint64_t v8 = sub_26276F830();
    *(void *)(v8 + 16) = v7;
    uint64_t v106 = v8;
    __dst = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *v2;
  uint64_t v104 = v2;
  uint64_t v105 = *v2 + 24;
  uint64_t v12 = (char *)MEMORY[0x263F8EE78];
  uint64_t v13 = v108;
  uint64_t v110 = *v2;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v13)
    {
      float v15 = (uint64_t *)(v11 + 16 * v10);
      int v16 = *((_DWORD *)v15 + 2);
      uint64_t v114 = *v15;
      int v115 = v16;
      float v17 = (uint64_t *)(v11 + 16 * v14);
      int v18 = *((_DWORD *)v17 + 2);
      uint64_t v112 = *v17;
      int v113 = v18;
      int v19 = a1(&v114, &v112);
      if (v3)
      {
LABEL_102:
        swift_bridgeObjectRelease();
        uint64_t v9 = v106;
        goto LABEL_116;
      }
      int v20 = v19;
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v108)
      {
        uint64_t v21 = v105 + 16 * v14;
        uint64_t v22 = v21;
        while (1)
        {
          int v23 = *(_DWORD *)(v22 + 16);
          v22 += 16;
          uint64_t v114 = *(void *)(v21 + 8);
          int v115 = v23;
          int v24 = *(_DWORD *)v21;
          uint64_t v112 = *(void *)(v21 - 8);
          int v113 = v24;
          if ((v20 ^ a1(&v114, &v112))) {
            break;
          }
          ++v10;
          uint64_t v21 = v22;
          if (v108 == v10)
          {
            uint64_t v10 = v108;
            break;
          }
        }
      }
      uint64_t v11 = v110;
      if (v20)
      {
        if (v10 < v14) {
          goto LABEL_142;
        }
        uint64_t v13 = v108;
        if (v14 < v10)
        {
          uint64_t v25 = 16 * v10 - 16;
          uint64_t v26 = 16 * v14;
          uint64_t v27 = v10;
          uint64_t v28 = v14;
          do
          {
            if (v28 != --v27)
            {
              if (!v110) {
                goto LABEL_145;
              }
              uint64_t v30 = (_OWORD *)(v110 + v26);
              float v31 = (_OWORD *)(v110 + v25);
              uint64_t v32 = *(void *)(v110 + v26);
              int v33 = *(_DWORD *)(v110 + v26 + 8);
              if (v26 != v25 || v30 >= v31 + 1) {
                *uint64_t v30 = *v31;
              }
              uint64_t v29 = v110 + v25;
              *(void *)uint64_t v29 = v32;
              *(_DWORD *)(v29 + 8) = v33;
            }
            ++v28;
            v25 -= 16;
            v26 += 16;
          }
          while (v28 < v27);
        }
      }
      else
      {
        uint64_t v13 = v108;
      }
    }
    if (v10 >= v13) {
      goto LABEL_43;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_139;
    }
    if (v10 - v14 >= v107) {
      goto LABEL_43;
    }
    if (__OFADD__(v14, v107)) {
      goto LABEL_140;
    }
    uint64_t v34 = v14 + v107 >= v13 ? v13 : v14 + v107;
    if (v34 < v14) {
      break;
    }
    if (v10 != v34)
    {
      unint64_t v87 = (uint64_t *)(v11 + 16 * v10);
      do
      {
        uint64_t v88 = v87;
        uint64_t v89 = v14;
        do
        {
          int v90 = *((_DWORD *)v88 + 2);
          uint64_t v114 = *v88;
          int v115 = v90;
          int v91 = *((_DWORD *)v88 - 2);
          uint64_t v112 = *(v88 - 2);
          int v113 = v91;
          char v92 = a1(&v114, &v112);
          if (v3) {
            goto LABEL_102;
          }
          if ((v92 & 1) == 0) {
            break;
          }
          if (!v110) {
            goto LABEL_144;
          }
          uint64_t v93 = *v88;
          int v94 = *((_DWORD *)v88 + 2);
          *(_OWORD *)uint64_t v88 = *((_OWORD *)v88 - 1);
          *((_DWORD *)v88 - 2) = v94;
          *(v88 - 2) = v93;
          v88 -= 2;
          ++v89;
        }
        while (v10 != v89);
        ++v10;
        v87 += 2;
      }
      while (v10 != v34);
      uint64_t v10 = v34;
      if (v34 < v14) {
        goto LABEL_137;
      }
      goto LABEL_44;
    }
LABEL_43:
    if (v10 < v14) {
      goto LABEL_137;
    }
LABEL_44:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_26276B9E4(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v36 = *((void *)v12 + 2);
    unint64_t v35 = *((void *)v12 + 3);
    unint64_t v37 = v36 + 1;
    uint64_t v11 = v110;
    if (v36 >= v35 >> 1)
    {
      unint64_t v95 = sub_26276B9E4((char *)(v35 > 1), v36 + 1, 1, v12);
      uint64_t v11 = v110;
      uint64_t v12 = v95;
    }
    *((void *)v12 + 2) = v37;
    uint64_t v38 = v12 + 32;
    uint64_t v39 = &v12[16 * v36 + 32];
    *(void *)uint64_t v39 = v14;
    *((void *)v39 + 1) = v10;
    if (v36)
    {
      while (1)
      {
        unint64_t v40 = v37 - 1;
        if (v37 >= 4)
        {
          uint64_t v45 = &v38[16 * v37];
          uint64_t v46 = *((void *)v45 - 8);
          uint64_t v47 = *((void *)v45 - 7);
          BOOL v51 = __OFSUB__(v47, v46);
          uint64_t v48 = v47 - v46;
          if (v51) {
            goto LABEL_122;
          }
          uint64_t v50 = *((void *)v45 - 6);
          uint64_t v49 = *((void *)v45 - 5);
          BOOL v51 = __OFSUB__(v49, v50);
          uint64_t v43 = v49 - v50;
          char v44 = v51;
          if (v51) {
            goto LABEL_123;
          }
          unint64_t v52 = v37 - 2;
          uint64_t v53 = &v38[16 * v37 - 32];
          uint64_t v55 = *(void *)v53;
          uint64_t v54 = *((void *)v53 + 1);
          BOOL v51 = __OFSUB__(v54, v55);
          uint64_t v56 = v54 - v55;
          if (v51) {
            goto LABEL_125;
          }
          BOOL v51 = __OFADD__(v43, v56);
          uint64_t v57 = v43 + v56;
          if (v51) {
            goto LABEL_128;
          }
          if (v57 >= v48)
          {
            uint64_t v75 = &v38[16 * v40];
            uint64_t v77 = *(void *)v75;
            uint64_t v76 = *((void *)v75 + 1);
            BOOL v51 = __OFSUB__(v76, v77);
            uint64_t v78 = v76 - v77;
            if (v51) {
              goto LABEL_132;
            }
            BOOL v68 = v43 < v78;
            goto LABEL_80;
          }
        }
        else
        {
          if (v37 != 3)
          {
            uint64_t v69 = *((void *)v12 + 4);
            uint64_t v70 = *((void *)v12 + 5);
            BOOL v51 = __OFSUB__(v70, v69);
            uint64_t v62 = v70 - v69;
            char v63 = v51;
            goto LABEL_74;
          }
          uint64_t v42 = *((void *)v12 + 4);
          uint64_t v41 = *((void *)v12 + 5);
          BOOL v51 = __OFSUB__(v41, v42);
          uint64_t v43 = v41 - v42;
          char v44 = v51;
        }
        if (v44) {
          goto LABEL_124;
        }
        unint64_t v52 = v37 - 2;
        BOOL v58 = &v38[16 * v37 - 32];
        uint64_t v60 = *(void *)v58;
        uint64_t v59 = *((void *)v58 + 1);
        BOOL v61 = __OFSUB__(v59, v60);
        uint64_t v62 = v59 - v60;
        char v63 = v61;
        if (v61) {
          goto LABEL_127;
        }
        uint64_t v64 = &v38[16 * v40];
        uint64_t v66 = *(void *)v64;
        uint64_t v65 = *((void *)v64 + 1);
        BOOL v51 = __OFSUB__(v65, v66);
        uint64_t v67 = v65 - v66;
        if (v51) {
          goto LABEL_130;
        }
        if (__OFADD__(v62, v67)) {
          goto LABEL_131;
        }
        if (v62 + v67 >= v43)
        {
          BOOL v68 = v43 < v67;
LABEL_80:
          if (v68) {
            unint64_t v40 = v52;
          }
          goto LABEL_82;
        }
LABEL_74:
        if (v63) {
          goto LABEL_126;
        }
        uint64_t v71 = &v38[16 * v40];
        uint64_t v73 = *(void *)v71;
        uint64_t v72 = *((void *)v71 + 1);
        BOOL v51 = __OFSUB__(v72, v73);
        uint64_t v74 = v72 - v73;
        if (v51) {
          goto LABEL_129;
        }
        if (v74 < v62) {
          goto LABEL_91;
        }
LABEL_82:
        unint64_t v79 = v40 - 1;
        if (v40 - 1 >= v37)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        if (!v11) {
          goto LABEL_143;
        }
        uint64_t v80 = v10;
        uint64_t v81 = v12;
        unint64_t v82 = &v38[16 * v79];
        uint64_t v83 = *(void *)v82;
        uint64_t v84 = &v38[16 * v40];
        uint64_t v85 = *((void *)v84 + 1);
        sub_262749270((char *)(v11 + 16 * *(void *)v82), (char *)(v11 + 16 * *(void *)v84), v11 + 16 * v85, __dst, a1);
        if (v3) {
          goto LABEL_102;
        }
        if (v85 < v83) {
          goto LABEL_119;
        }
        if (v40 > *((void *)v81 + 2)) {
          goto LABEL_120;
        }
        *(void *)unint64_t v82 = v83;
        *(void *)&v38[16 * v79 + 8] = v85;
        unint64_t v86 = *((void *)v81 + 2);
        if (v40 >= v86) {
          goto LABEL_121;
        }
        uint64_t v12 = v81;
        unint64_t v37 = v86 - 1;
        memmove(&v38[16 * v40], v84 + 16, 16 * (v86 - 1 - v40));
        *((void *)v81 + 2) = v86 - 1;
        uint64_t v11 = v110;
        uint64_t v10 = v80;
        if (v86 <= 2) {
          goto LABEL_91;
        }
      }
    }
    unint64_t v37 = 1;
LABEL_91:
    uint64_t v13 = v108;
    if (v10 >= v108)
    {
      uint64_t v9 = v106;
      uint64_t v2 = v104;
      goto LABEL_104;
    }
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  uint64_t result = sub_26276FBA0();
  __break(1u);
  return result;
}

uint64_t sub_262749270(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t (*a5)(uint64_t *, uint64_t *))
{
  uint64_t v6 = __dst;
  uint64_t v8 = a2;
  uint64_t v9 = __src;
  int64_t v10 = a2 - __src;
  int64_t v11 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v11 = a2 - __src;
  }
  uint64_t v12 = v11 >> 4;
  uint64_t v13 = a3 - (void)a2;
  uint64_t v14 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v14 = a3 - (void)a2;
  }
  uint64_t v15 = v14 >> 4;
  uint64_t v39 = __src;
  uint64_t v38 = __dst;
  if (v12 >= v15)
  {
    if (v13 > -16)
    {
      uint64_t v22 = 16 * v15;
      if (__dst != a2 || &a2[v22] <= __dst) {
        memmove(__dst, a2, 16 * v15);
      }
      int v23 = &v6[v22];
      unint64_t v37 = &v6[v22];
      uint64_t v39 = v8;
      if (v9 < v8 && (unint64_t)(v13 - 16) <= 0xFFFFFFFFFFFFFFE0)
      {
        int v24 = (char *)(a3 - 16);
        uint64_t v25 = v8;
        while (1)
        {
          int v26 = *((_DWORD *)v23 - 2);
          uint64_t v35 = *((void *)v23 - 2);
          int v36 = v26;
          uint64_t v27 = *((void *)v25 - 2);
          v25 -= 16;
          int v28 = *((_DWORD *)v25 + 2);
          uint64_t v33 = v27;
          int v34 = v28;
          char v29 = a5(&v35, &v33);
          if (v5) {
            break;
          }
          uint64_t v30 = v24 + 16;
          if (v29)
          {
            if (v30 != v8 || v24 >= v8) {
              *(_OWORD *)int v24 = *(_OWORD *)v25;
            }
            uint64_t v39 = v25;
            if (v25 <= v9) {
              goto LABEL_44;
            }
          }
          else
          {
            unint64_t v37 = v23 - 16;
            if (v30 < v23 || v24 >= v23 || v30 != v23) {
              *(_OWORD *)int v24 = *((_OWORD *)v23 - 1);
            }
            uint64_t v25 = v8;
            v23 -= 16;
            if (v8 <= v9) {
              goto LABEL_44;
            }
          }
          v24 -= 16;
          uint64_t v8 = v25;
          if (v23 <= v6) {
            goto LABEL_44;
          }
        }
      }
      goto LABEL_44;
    }
  }
  else if (v10 > -16)
  {
    size_t v16 = 16 * v12;
    if (__dst != __src || &__src[v16] <= __dst) {
      memmove(__dst, __src, v16);
    }
    float v17 = &v6[v16];
    unint64_t v37 = v17;
    if ((unint64_t)v8 < a3 && (unint64_t)(v10 - 16) <= 0xFFFFFFFFFFFFFFE0)
    {
      do
      {
        int v18 = *((_DWORD *)v8 + 2);
        uint64_t v35 = *(void *)v8;
        int v36 = v18;
        int v19 = *((_DWORD *)v6 + 2);
        uint64_t v33 = *(void *)v6;
        int v34 = v19;
        char v20 = a5(&v35, &v33);
        if (v5) {
          break;
        }
        if (v20)
        {
          uint64_t v21 = v8 + 16;
          if (v9 < v8 || v9 >= v21 || v9 != v8) {
            *(_OWORD *)uint64_t v9 = *(_OWORD *)v8;
          }
        }
        else
        {
          if (v9 != v6) {
            *(_OWORD *)uint64_t v9 = *(_OWORD *)v6;
          }
          v6 += 16;
          uint64_t v38 = v6;
          uint64_t v21 = v8;
        }
        v9 += 16;
        uint64_t v39 = v9;
        if (v6 >= v17) {
          break;
        }
        uint64_t v8 = v21;
      }
      while ((unint64_t)v21 < a3);
    }
LABEL_44:
    sub_26276BB9C(&v39, &v38, &v37);
    return 1;
  }
  uint64_t result = sub_26276FC00();
  __break(1u);
  return result;
}

uint64_t sub_26274956C(char *__src, char *a2, unint64_t a3, char *__dst, void (*a5)(char **, char **, char **))
{
  uint64_t v6 = __dst;
  uint64_t v8 = a2;
  uint64_t v9 = __src;
  int64_t v10 = a2 - __src;
  int64_t v11 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v11 = a2 - __src;
  }
  uint64_t v12 = v11 >> 4;
  uint64_t v13 = a3 - (void)a2;
  uint64_t v14 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v14 = a3 - (void)a2;
  }
  uint64_t v15 = v14 >> 4;
  char v29 = __src;
  int v28 = __dst;
  if (v12 >= v15)
  {
    if (v13 >= -15)
    {
      uint64_t v21 = 16 * v15;
      if (__dst != a2 || &a2[v21] <= __dst) {
        memmove(__dst, a2, 16 * v15);
      }
      uint64_t v22 = &v6[v21];
      uint64_t v27 = &v6[v21];
      char v29 = v8;
      if (v9 < v8 && (unint64_t)(v13 - 16) <= 0xFFFFFFFFFFFFFFE0)
      {
        int v23 = (char *)(a3 - 16);
        do
        {
          int v24 = v23 + 16;
          if (*((float *)v22 - 2) >= *((float *)v8 - 2))
          {
            uint64_t v27 = v22 - 16;
            if (v24 < v22 || v23 >= v22 || v24 != v22) {
              *(_OWORD *)int v23 = *((_OWORD *)v22 - 1);
            }
            uint64_t v25 = v8;
            v22 -= 16;
            if (v8 <= v9) {
              break;
            }
          }
          else
          {
            uint64_t v25 = v8 - 16;
            if (v24 != v8 || v23 >= v8) {
              *(_OWORD *)int v23 = *(_OWORD *)v25;
            }
            char v29 = v8 - 16;
            if (v25 <= v9) {
              break;
            }
          }
          v23 -= 16;
          uint64_t v8 = v25;
        }
        while (v22 > v6);
      }
LABEL_44:
      a5(&v29, &v28, &v27);
      return 1;
    }
  }
  else if (v10 >= -15)
  {
    size_t v16 = 16 * v12;
    if (__dst != __src || &__src[v16] <= __dst) {
      memmove(__dst, __src, v16);
    }
    float v17 = &v6[v16];
    uint64_t v27 = &v6[v16];
    if ((unint64_t)v8 < a3 && (unint64_t)(v10 - 16) <= 0xFFFFFFFFFFFFFFE0)
    {
      int v18 = v6;
      while (1)
      {
        if (*((float *)v8 + 2) >= *((float *)v18 + 2))
        {
          uint64_t v6 = v18 + 16;
          char v20 = v18;
          int v19 = v8;
          if (v9 == v18)
          {
            v18 += 16;
            if (v9 < v6) {
              goto LABEL_22;
            }
          }
          else
          {
            v18 += 16;
          }
        }
        else
        {
          int v19 = v8 + 16;
          char v20 = v8;
          if (v9 == v8 && v9 < v19) {
            goto LABEL_22;
          }
        }
        *(_OWORD *)uint64_t v9 = *(_OWORD *)v20;
LABEL_22:
        v9 += 16;
        if (v18 < v17)
        {
          uint64_t v8 = v19;
          if ((unint64_t)v19 < a3) {
            continue;
          }
        }
        int v28 = v6;
        char v29 = v9;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  uint64_t result = sub_26276FC00();
  __break(1u);
  return result;
}

uint64_t sub_262749810(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_26276FDF0();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_262749B7C(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_26274990C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9576B0);
  uint64_t result = sub_26276FAB0();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    uint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_31;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_31;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v17 = v15 + 2;
            if (v17 >= v10)
            {
LABEL_31:
              if (v28 >= 64) {
                bzero((void *)(v2 + 56), 8 * v10);
              }
              else {
                *uint64_t v6 = v26;
              }
              uint64_t v1 = v27;
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v16 = v6[v17];
            if (!v16)
            {
              while (1)
              {
                int64_t v5 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_37;
                }
                if (v5 >= v10) {
                  goto LABEL_31;
                }
                unint64_t v16 = v6[v5];
                ++v17;
                if (v16) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v5 = v17;
          }
        }
LABEL_21:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_26276FDF0();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_36;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_262749B7C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_26274990C();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_262735A90();
      goto LABEL_14;
    }
    sub_262749CA0();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_26276FDF0();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_26276FDD0();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_262749CA0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9576B0);
  uint64_t result = sub_26276FAB0();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_33:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_22;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    if (v15 >= v10) {
      goto LABEL_31;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_31;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16) {
        break;
      }
    }
LABEL_21:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_22:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_26276FDF0();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_34;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 2;
  if (v17 >= v10)
  {
LABEL_31:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_33;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_31;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_21;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_262749EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  v20[2] = *MEMORY[0x263EF8340];
  if (*(void *)(a2 + 16))
  {
    v20[0] = a1;
    uint64_t v4 = *(void *)(a1 + 16);
    if (v4)
    {
      uint64_t v5 = 0;
      uint64_t v6 = a2 + 56;
      uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
      uint64_t v7 = ~v19;
      while (1)
      {
        uint64_t v8 = *(void *)(a1 + 32 + 8 * v5++);
        uint64_t v9 = sub_26276FDF0();
        unint64_t v10 = v9 & v7;
        if ((*(void *)(v6 + (((v9 & (unint64_t)v7) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (v9 & v7))) {
          break;
        }
LABEL_4:
        if (v5 == v4) {
          return v2;
        }
      }
      while (*(void *)(*(void *)(v2 + 48) + 8 * v10) != v8)
      {
        unint64_t v10 = (v10 + 1) & v7;
        if (((*(void *)(v6 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
          goto LABEL_4;
        }
      }
      v20[1] = v5;
      unint64_t v11 = (unint64_t)(63 - v19) >> 6;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
      if (v11 < 0x81 || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
      {
        MEMORY[0x270FA5388](isStackAllocationSafe);
        unint64_t v14 = (char *)&v18 - v13;
        memcpy((char *)&v18 - v13, (const void *)(v2 + 56), 8 * v11);
        uint64_t v15 = sub_26274A170((uint64_t)v14, v11, v2, v10, v20);
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        unint64_t v16 = (void *)swift_slowAlloc();
        memcpy(v16, (const void *)(v2 + 56), 8 * v11);
        uint64_t v15 = sub_26274A170((uint64_t)v16, v11, v2, v10, v20);
        swift_release();
        swift_bridgeObjectRelease();
        MEMORY[0x263E528C0](v16, -1, -1);
      }
      return v15;
    }
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  return v2;
}

uint64_t sub_26274A170(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v6 = (unint64_t *)result;
  uint64_t v7 = *(void *)(a3 + 16);
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v10 = *a5;
  unint64_t v9 = a5[1];
  unint64_t v11 = *(void *)(*a5 + 16);
  if (v9 == v11)
  {
LABEL_2:
    swift_retain();
    return sub_26274A308(v6, a2, v8, a3);
  }
  else
  {
    uint64_t v13 = a3 + 56;
    uint64_t v14 = ~(-1 << *(unsigned char *)(a3 + 32));
    while (v9 < v11)
    {
      if (__OFADD__(v9, 1)) {
        goto LABEL_19;
      }
      uint64_t v15 = *(void *)(v10 + 32 + 8 * v9);
      a5[1] = v9 + 1;
      uint64_t result = sub_26276FDF0();
      uint64_t v16 = result & v14;
      unint64_t v17 = (result & (unint64_t)v14) >> 6;
      uint64_t v18 = 1 << (result & v14);
      if ((v18 & *(void *)(v13 + 8 * v17)) != 0)
      {
        uint64_t v19 = *(void *)(a3 + 48);
        if (*(void *)(v19 + 8 * v16) == v15)
        {
LABEL_14:
          uint64_t v22 = v17;
          unint64_t v23 = v6[v17];
          v6[v22] = v23 & ~v18;
          if ((v18 & v23) != 0)
          {
            if (__OFSUB__(v8--, 1)) {
              goto LABEL_20;
            }
            if (!v8) {
              return MEMORY[0x263F8EE88];
            }
          }
        }
        else
        {
          for (uint64_t i = v16 + 1; ; uint64_t i = v21 + 1)
          {
            unint64_t v21 = i & v14;
            if (((*(void *)(v13 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
              break;
            }
            if (*(void *)(v19 + 8 * v21) == v15)
            {
              unint64_t v17 = v21 >> 6;
              uint64_t v18 = 1 << v21;
              goto LABEL_14;
            }
          }
        }
      }
      unint64_t v9 = a5[1];
      unint64_t v11 = *(void *)(v10 + 16);
      if (v9 == v11) {
        goto LABEL_2;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
  }
  return result;
}

uint64_t sub_26274A308(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = MEMORY[0x263F8EE88];
LABEL_36:
    swift_release();
    return v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9576B0);
  uint64_t result = sub_26276FAC0();
  uint64_t v9 = result;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = a1[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = a1[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = a1[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = sub_26276FDF0();
    uint64_t v19 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(void *)(*(void *)(v9 + 48) + 8 * v22) = v18;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = a1[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = a1[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

unint64_t sub_26274A550(uint64_t a1)
{
  uint64_t v2 = sub_26276FDF0();
  return sub_26274A614(a1, v2);
}

unint64_t sub_26274A594(uint64_t a1, uint64_t a2)
{
  sub_26276FE00();
  sub_26276FE10();
  sub_26276FE10();
  uint64_t v4 = sub_26276FE20();
  return sub_26274A6B0(a1, a2, v4);
}

unint64_t sub_26274A614(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_26274A6B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t result = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = ~v5;
    do
    {
      uint64_t v8 = (uint64_t *)(*(void *)(v3 + 48) + 16 * result);
      uint64_t v10 = *v8;
      uint64_t v9 = v8[1];
      if (v10 == a1 && v9 == a2) {
        break;
      }
      unint64_t result = (result + 1) & v7;
    }
    while (((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

uint64_t sub_26274A72C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957A68);
  uint64_t result = sub_26276FBE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v10;
    uint64_t v32 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero((void *)(v5 + 64), 8 * v33);
                }
                else {
                  *uint64_t v9 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_26276FDF0();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_26274A9E4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957A78);
  uint64_t result = sub_26276FBE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v33 = a2;
    int64_t v8 = 0;
    int v34 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v18 >= v12) {
          goto LABEL_31;
        }
        unint64_t v19 = v34[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v12) {
            goto LABEL_31;
          }
          unint64_t v19 = v34[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v12)
            {
LABEL_31:
              if ((v33 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_38;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *int v34 = -1 << v32;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v12) {
                  goto LABEL_31;
                }
                unint64_t v19 = v34[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v11 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      int64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      int v24 = *(_DWORD *)(*(void *)(v5 + 56) + 4 * v17);
      sub_26276FE00();
      sub_26276FE10();
      sub_26276FE10();
      uint64_t result = sub_26276FE20();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v13 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *unint64_t v15 = v23;
      v15[1] = v22;
      *(_DWORD *)(*(void *)(v7 + 56) + 4 * v14) = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_26274ACC8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_26276FA90();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        uint64_t v10 = (void *)(v9 + 8 * v6);
        uint64_t result = sub_26276FDF0();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            unint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              void *v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            unint64_t v16 = (void *)(v15 + 8 * v3);
            unint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              void *v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  uint64_t *v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_26274AE60(uint64_t a1, uint64_t a2, char a3, float a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_26274A594(a1, a2);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_26274B280();
LABEL_7:
    int64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(float *)(v18[7] + 4 * v12) = a4;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    uint64_t v20 = (uint64_t *)(v18[6] + 16 * v12);
    *uint64_t v20 = a1;
    v20[1] = a2;
    *(float *)(v18[7] + 4 * v12) = a4;
    uint64_t v21 = v18[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (!v22)
    {
      v18[2] = v23;
      return result;
    }
    goto LABEL_14;
  }
  sub_26274A9E4(result, a3 & 1);
  uint64_t result = sub_26274A594(a1, a2);
  if ((v16 & 1) == (v19 & 1))
  {
    unint64_t v12 = result;
    int64_t v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957A70);
  uint64_t result = sub_26276FDE0();
  __break(1u);
  return result;
}

uint64_t sub_26274AFA0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_26274A550(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_26274B0DC();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v19 = 8 * v10;
    *(void *)(v16[6] + v19) = a2;
    *(void *)(v16[7] + v19) = a1;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_26274A72C(result, a3 & 1);
  uint64_t result = sub_26274A550(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_26276FDE0();
  __break(1u);
  return result;
}

void *sub_26274B0DC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957A68);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_26276FBD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_26274B280()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957A78);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_26276FBD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v22 = __clz(__rbit64(v20));
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = v22 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = 4 * v15;
    int v18 = *(_DWORD *)(*(void *)(v2 + 56) + v17);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    *(_DWORD *)(*(void *)(v4 + 56) + v17) = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void (*sub_26274B414(void *a1, uint64_t a2))(uint64_t a1)
{
  uint64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_26274B75C(v4);
  v4[9] = sub_26274B504(v4 + 4, a2, isUniquelyReferenced_nonNull_native);
  return sub_26274B4A4;
}

void sub_26274B4A4(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 72))();
  v2(v1, 0);
  free(v1);
}

void (*sub_26274B504(void *a1, uint64_t a2, char a3))(uint64_t **a1, char a2)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  v8[2] = v3;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_26274A550(a2);
  *((unsigned char *)v8 + 32) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      int64_t v8[3] = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*(void *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *uint64_t v8 = v17;
        return sub_26274B634;
      }
LABEL_11:
      uint64_t v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_26274B0DC();
      goto LABEL_7;
    }
    sub_26274A72C(v14, a3 & 1);
    unint64_t v18 = sub_26274A550(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      unint64_t v11 = v18;
      int64_t v8[3] = v18;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(uint64_t **, char))sub_26276FDE0();
  __break(1u);
  return result;
}

void sub_26274B634(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = **a1;
  LOBYTE(v4) = *((unsigned char *)*a1 + 32);
  if (a2)
  {
    if (!v3) {
      goto LABEL_10;
    }
    unint64_t v5 = v2[3];
    uint64_t v6 = *(void **)v2[2];
    if ((*a1)[4]) {
      goto LABEL_9;
    }
    uint64_t v7 = v2[1];
    v6[(v5 >> 6) + 8] |= 1 << v5;
    uint64_t v8 = 8 * v5;
    *(void *)(v6[6] + v8) = v7;
    *(void *)(v6[7] + v8) = v3;
    uint64_t v9 = v6[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v4 = v9 + 1;
    if (!v10)
    {
LABEL_13:
      v6[2] = v4;
      goto LABEL_14;
    }
    __break(1u);
  }
  if (!v3)
  {
LABEL_10:
    if (v4) {
      sub_26274ACC8(v2[3], *(void *)v2[2]);
    }
    goto LABEL_14;
  }
  unint64_t v5 = v2[3];
  uint64_t v6 = *(void **)v2[2];
  if ((v4 & 1) == 0)
  {
    uint64_t v11 = v2[1];
    v6[(v5 >> 6) + 8] |= 1 << v5;
    uint64_t v12 = 8 * v5;
    *(void *)(v6[6] + v12) = v11;
    *(void *)(v6[7] + v12) = v3;
    uint64_t v13 = v6[2];
    BOOL v10 = __OFADD__(v13, 1);
    uint64_t v4 = v13 + 1;
    if (v10)
    {
      __break(1u);
      return;
    }
    goto LABEL_13;
  }
LABEL_9:
  *(void *)(v6[7] + 8 * v5) = v3;
LABEL_14:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  free(v2);
}

uint64_t (*sub_26274B75C(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_26274B78C;
}

uint64_t sub_26274B78C(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t sub_26274B798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (!v4) {
    return v5;
  }
  uint64_t v23 = MEMORY[0x263F8EE78];
  uint64_t result = sub_26273AC08(0, v4, 0);
  uint64_t v5 = v23;
  BOOL v10 = (unint64_t *)(a1 + 32);
  uint64_t v21 = a4 + 32;
  uint64_t v11 = *(char *)(a2 + 16);
  unint64_t v12 = *(void *)(a4 + 16);
  while (1)
  {
    unint64_t v14 = *v10++;
    unint64_t v13 = v14;
    if (v14 >= v12) {
      break;
    }
    char v15 = off_270DC6D78[v11];
    uint64_t v16 = *(void *)(v21 + 8 * v13);
    swift_bridgeObjectRetain();
    float v17 = ((float (*)(uint64_t, uint64_t))v15)(a3, v16);
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v19 = *(void *)(v23 + 16);
    unint64_t v18 = *(void *)(v23 + 24);
    if (v19 >= v18 >> 1) {
      uint64_t result = sub_26273AC08(v18 > 1, v19 + 1, 1);
    }
    *(void *)(v23 + 16) = v19 + 1;
    uint64_t v20 = v23 + 16 * v19;
    *(void *)(v20 + 32) = v13;
    *(float *)(v20 + 40) = v17;
    if (!--v4) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_26274B8DC(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957A68);
  uint64_t v3 = (void *)sub_26276FBF0();
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  unint64_t result = sub_26274A550(v5);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v8 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v5;
    *(void *)(v3[7] + v9) = v4;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    unint64_t v13 = v8 + 2;
    uint64_t v5 = *(v8 - 1);
    uint64_t v14 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_26274A550(v5);
    uint64_t v8 = v13;
    uint64_t v4 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_26274B9DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_26276F980();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      sub_262749810(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_26274BA50()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_26274BA60()
{
  uint64_t v0 = sub_26276F530();
  __swift_allocate_value_buffer(v0, qword_26A95E208);
  __swift_project_value_buffer(v0, (uint64_t)qword_26A95E208);
  return sub_26276F520();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t dispatch thunk of SearchIndex.search(query:k:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of SearchIndex.search(query:radius:sorted:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_26274BB70(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_26273600C(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  uint64_t result = sub_26274E4E8(v5);
  *a1 = v2;
  return result;
}

uint64_t VPTree.Node.pointIndex.getter()
{
  return *(void *)v0;
}

uint64_t VPTree.Node.pointIndex.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*VPTree.Node.pointIndex.modify())()
{
  return nullsub_1;
}

float VPTree.Node.threshold.getter()
{
  return *(float *)(v0 + 8);
}

void VPTree.Node.threshold.setter(float a1)
{
  *(float *)(v1 + 8) = a1;
}

uint64_t (*VPTree.Node.threshold.modify())()
{
  return nullsub_1;
}

uint64_t VPTree.Node.left.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t VPTree.Node.left.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 16) = result;
  *(unsigned char *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*VPTree.Node.left.modify())()
{
  return nullsub_1;
}

uint64_t VPTree.Node.right.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t VPTree.Node.right.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 32) = result;
  *(unsigned char *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t (*VPTree.Node.right.modify())()
{
  return nullsub_1;
}

uint64_t VPTree.Node.storedIndices.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VPTree.Node.storedIndices.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = a1;
  return result;
}

uint64_t (*VPTree.Node.storedIndices.modify())()
{
  return nullsub_1;
}

uint64_t sub_26274BD0C()
{
  uint64_t result = 0x646E49746E696F70;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C6F687365726874;
      break;
    case 2:
      uint64_t result = 1952867692;
      break;
    case 3:
      uint64_t result = 0x7468676972;
      break;
    case 4:
      uint64_t result = 0x6E496465726F7473;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_26274BDC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2627501B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_26274BDE8(uint64_t a1)
{
  unint64_t v2 = sub_26274C0D4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_26274BE24(uint64_t a1)
{
  unint64_t v2 = sub_26274C0D4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t VPTree.Node.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957A80);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v1 + 16);
  int v12 = *(unsigned __int8 *)(v1 + 24);
  uint64_t v11 = *(void *)(v1 + 32);
  int v10 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v9 = *(void *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_26274C0D4();
  sub_26276FE40();
  char v19 = 0;
  sub_26276FD10();
  if (!v2)
  {
    char v18 = 1;
    sub_26276FD00();
    char v17 = 2;
    sub_26276FCD0();
    char v16 = 3;
    sub_26276FCD0();
    uint64_t v15 = v9;
    char v14 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9574B0);
    sub_26274C3E8(&qword_26A9574B8);
    sub_26276FCE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_26274C0D4()
{
  unint64_t result = qword_26A957A88;
  if (!qword_26A957A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957A88);
  }
  return result;
}

uint64_t VPTree.Node.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957A90);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_26274C0D4();
  sub_26276FE30();
  if (!v2)
  {
    char v27 = 0;
    uint64_t v9 = sub_26276FC80();
    char v26 = 1;
    sub_26276FC70();
    int v11 = v10;
    char v25 = 2;
    uint64_t v12 = sub_26276FC40();
    int v21 = v13;
    char v24 = 3;
    uint64_t v14 = sub_26276FC40();
    int v19 = v16;
    uint64_t v20 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9574B0);
    char v22 = 4;
    sub_26274C3E8(&qword_26A9574C8);
    sub_26276FC50();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v17 = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)a2 = v9;
    *(_DWORD *)(a2 + 8) = v11;
    *(void *)(a2 + 16) = v12;
    *(unsigned char *)(a2 + 24) = v21 & 1;
    *(void *)(a2 + 32) = v20;
    *(unsigned char *)(a2 + 40) = v19 & 1;
    *(void *)(a2 + 48) = v17;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_26274C3E8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9574B0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_26274C44C()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_26274C458()
{
  return *(void *)(v0 + 32);
}

uint64_t sub_26274C464@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return VPTree.Node.init(from:)(a1, a2);
}

uint64_t sub_26274C47C(void *a1)
{
  return VPTree.Node.encode(to:)(a1);
}

void VPTree.metric.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t VPTree.points.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VPTree.nodes.getter()
{
  return swift_bridgeObjectRetain();
}

float sub_26274C510(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  vDSP_Length v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    __break(1u);
  }
  float __C = NAN;
  vDSP_distancesq((const float *)(a1 + 32), 1, (const float *)(a2 + 32), 1, &__C, v2);
  return sqrtf(__C);
}

uint64_t sub_26274C594(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_262743E58(*a1, *a2);
}

uint64_t sub_26274C5A0()
{
  return sub_26276FE20();
}

uint64_t sub_26274C61C()
{
  sub_26276F6C0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_26274C684()
{
  return sub_26276FE20();
}

uint64_t sub_26274C6FC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_26276FC20();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_26274C75C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x63697274656DLL;
  if (*v1) {
    uint64_t v2 = 0x7365646F6ELL;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xE500000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_26274C794()
{
  if (*v0) {
    return 0x7365646F6ELL;
  }
  else {
    return 0x63697274656DLL;
  }
}

uint64_t sub_26274C7C8@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_26276FC20();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_26274C82C(uint64_t a1)
{
  unint64_t v2 = sub_262750BE8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_26274C868(uint64_t a1)
{
  unint64_t v2 = sub_262750BE8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t VPTree.__allocating_init(points:metric:maxNodePoints:)(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  VPTree.init(points:metric:maxNodePoints:)(a1, a2, a3);
  return v6;
}

uint64_t VPTree.init(points:metric:maxNodePoints:)(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v5 = MEMORY[0x263F8EE78];
  *(void *)(v3 + 24) = MEMORY[0x263F8EE78];
  uint64_t v6 = *a2;
  *(void *)(v3 + 32) = v5;
  *(unsigned char *)(v3 + 16) = v6;
  *(void *)(v3 + 40) = off_270DC6FE8[v6];
  *(void *)(v3 + 48) = 0;
  if (*(void *)(a1 + 16))
  {
    swift_beginAccess();
    *(void *)(v3 + 24) = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v8 = *(float (**)(uint64_t, uint64_t))(v3 + 40);
    uint64_t v9 = *(void *)(v3 + 48);
    swift_retain();
    uint64_t v10 = sub_2627503F8(a1, v8, v9, a3);
    swift_release();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    *(void *)(v3 + 32) = v10;
  }
  swift_bridgeObjectRelease();
  return v3;
}

BOOL VPTree.isEmpty.getter()
{
  swift_beginAccess();
  return *(void *)(*(void *)(v0 + 32) + 16) == 0;
}

uint64_t VPTree.search(query:k:)(uint64_t a1, uint64_t a2)
{
  uint64_t v131 = v2 + 24;
  uint64_t result = swift_beginAccess();
  uint64_t v136 = v2;
  if (!*(void *)(*(void *)(v2 + 24) + 16)) {
    return MEMORY[0x263F8EE78];
  }
  if (__OFADD__(a2, 1)) {
    goto LABEL_210;
  }
  uint64_t v5 = sub_262727954(0, (a2 + 1) & ~((a2 + 1) >> 63), 0, MEMORY[0x263F8EE78]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957370);
  uint64_t v6 = (void *)swift_allocObject();
  int64_t v7 = _swift_stdlib_malloc_size(v6);
  uint64_t v8 = v7 - 40;
  if (v7 < 40) {
    uint64_t v8 = v7 - 33;
  }
  v6[2] = v8 >> 3;
  v6[3] = 0;
  v6[4] = 0;
  sub_26272A290((uint64_t)(v6 + 2), v6 + 5, 1uLL, (uint64_t)&unk_270DC5D60);
  uint64_t v139 = v6;
  if (!v6[3])
  {
LABEL_178:
    swift_release();
    return (uint64_t)v5;
  }
  uint64_t v130 = v136 + 32;
  uint64_t result = swift_beginAccess();
  uint64_t v9 = v6[3];
  float v10 = INFINITY;
  while (1)
  {
    if (!v9) {
      goto LABEL_183;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_262729870();
      uint64_t v6 = v139;
    }
    uint64_t v13 = v6[4];
    uint64_t v14 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    unint64_t v15 = v6[v13 + 5];
    uint64_t v16 = v6[3];
    if (v14 >= v6[2]) {
      uint64_t v14 = 0;
    }
    v6[4] = v14;
    if (__OFSUB__(v16, 1)) {
      goto LABEL_185;
    }
    v6[3] = v16 - 1;
    if ((v15 & 0x8000000000000000) != 0) {
      goto LABEL_186;
    }
    if (v15 >= *(void *)(*(void *)v130 + 16)) {
      goto LABEL_187;
    }
    uint64_t v17 = *(void *)v130 + 56 * v15;
    unint64_t v18 = *(void *)(v17 + 32);
    if ((v18 & 0x8000000000000000) != 0) {
      goto LABEL_188;
    }
    if (v18 >= *(void *)(*(void *)v131 + 16)) {
      goto LABEL_189;
    }
    float v19 = *(float *)(v17 + 40);
    char v20 = *(unsigned char *)(v17 + 56);
    uint64_t v132 = *(void *)(v17 + 48);
    uint64_t v133 = *(void *)(v17 + 64);
    char __dst = *(unsigned char *)(v17 + 72);
    uint64_t v21 = *(void *)(v17 + 80);
    uint64_t v22 = *(void *)(*(void *)v131 + 8 * v18 + 32);
    uint64_t v23 = *(float (**)(uint64_t, uint64_t))(v136 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    float v24 = v23(a1, v22);
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    if (v24 < v10)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v5 = sub_262727954(0, v5[2] + 1, 1, v5);
      }
      unint64_t v26 = v5[2];
      unint64_t v25 = v5[3];
      if (v26 >= v25 >> 1) {
        uint64_t v5 = sub_262727954((void *)(v25 > 1), v26 + 1, 1, v5);
      }
      uint64_t v5[2] = v26 + 1;
      uint64_t v27 = (uint64_t)&v5[2 * v26 + 4];
      *(void *)uint64_t v27 = v18;
      *(float *)(v27 + 8) = v24;
      uint64_t v137 = v5 + 4;
      unint64_t v138 = v26 + 1;
      uint64_t result = sub_26274E4E8((uint64_t *)&v137);
      uint64_t v28 = v5[2];
      if (v28 > a2)
      {
        if (!v28) {
          goto LABEL_190;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if (result)
        {
          uint64_t v29 = v5[2];
          if (!v29) {
            goto LABEL_177;
          }
        }
        else
        {
          uint64_t result = (uint64_t)sub_26273600C(v5);
          uint64_t v5 = (void *)result;
          uint64_t v29 = *(void *)(result + 16);
          if (!v29)
          {
LABEL_177:
            __break(1u);
            goto LABEL_178;
          }
        }
        uint64_t v5[2] = v29 - 1;
        if (v29 == 1) {
          goto LABEL_191;
        }
        unint64_t v30 = v5[2 * v29];
        if ((v30 & 0x8000000000000000) != 0) {
          goto LABEL_192;
        }
        if (v30 >= *(void *)(*(void *)v131 + 16)) {
          goto LABEL_193;
        }
        uint64_t v31 = *(float (**)(uint64_t, uint64_t))(v136 + 40);
        uint64_t v32 = *(void *)(*(void *)v131 + 8 * v30 + 32);
        swift_retain();
        swift_bridgeObjectRetain();
        float v10 = v31(a1, v32);
        swift_bridgeObjectRelease();
        uint64_t result = swift_release();
      }
    }
    if (v21)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_26275005C(v21, v136, a1);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v34 = *(void *)(v33 + 16);
      if (v34)
      {
        char v129 = v20;
        swift_bridgeObjectRetain();
        uint64_t v35 = (_DWORD *)(v33 + 40);
        while (1)
        {
          uint64_t v36 = *((void *)v35 - 1);
          int v37 = *v35;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v5 = sub_262727954(0, v5[2] + 1, 1, v5);
          }
          unint64_t v39 = v5[2];
          unint64_t v38 = v5[3];
          if (v39 >= v38 >> 1) {
            uint64_t v5 = sub_262727954((void *)(v38 > 1), v39 + 1, 1, v5);
          }
          uint64_t v5[2] = v39 + 1;
          uint64_t v40 = (uint64_t)&v5[2 * v39 + 4];
          *(void *)uint64_t v40 = v36;
          *(_DWORD *)(v40 + 8) = v37;
          uint64_t v137 = v5 + 4;
          unint64_t v138 = v39 + 1;
          uint64_t result = sub_26274E4E8((uint64_t *)&v137);
          uint64_t v41 = v5[2];
          if (v41 > a2)
          {
            if (!v41)
            {
              __break(1u);
LABEL_182:
              __break(1u);
LABEL_183:
              __break(1u);
              goto LABEL_184;
            }
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if (result)
            {
              uint64_t v42 = v5[2];
              if (!v42) {
                goto LABEL_182;
              }
            }
            else
            {
              uint64_t result = (uint64_t)sub_26273600C(v5);
              uint64_t v5 = (void *)result;
              uint64_t v42 = *(void *)(result + 16);
              if (!v42) {
                goto LABEL_182;
              }
            }
            uint64_t v5[2] = v42 - 1;
          }
          v35 += 4;
          if (!--v34)
          {
            swift_bridgeObjectRelease();
            char v20 = v129;
            break;
          }
        }
      }
      uint64_t result = swift_bridgeObjectRelease();
    }
    if (v24 >= v19)
    {
      char v49 = __dst;
      if ((float)(v19 - v10) > v24) {
        char v49 = 1;
      }
      if ((v49 & 1) == 0)
      {
        uint64_t v50 = (uint64_t)v139;
        uint64_t v51 = v139[3];
        uint64_t v52 = v51 + 1;
        if (__OFADD__(v51, 1)) {
          goto LABEL_196;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v53 = *(void *)(v50 + 16);
        if (v53 >= v52 && (result & 1) != 0)
        {
          uint64_t v54 = v50;
        }
        else
        {
          if (v53 >= v52)
          {
            uint64_t v54 = swift_allocObject();
            long long v64 = *(_OWORD *)(v50 + 24);
            *(void *)(v54 + 16) = v53;
            *(_OWORD *)(v54 + 24) = v64;
            if (*(uint64_t *)(v50 + 24) > 0) {
              sub_26274FAE4(v54 + 16, (char *)(v54 + 40), (void *)(v50 + 16), (char *)(v50 + 40));
            }
          }
          else
          {
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            sub_26276F500();
            if (isUniquelyReferenced_nonNull_native)
            {
              uint64_t v60 = *(void *)(v50 + 24);
              uint64_t v54 = swift_allocObject();
              int64_t v61 = _swift_stdlib_malloc_size((const void *)v54);
              uint64_t v62 = v61 - 40;
              if (v61 < 40) {
                uint64_t v62 = v61 - 33;
              }
              *(void *)(v54 + 16) = v62 >> 3;
              *(void *)(v54 + 24) = v60;
              *(void *)(v54 + 32) = 0;
              if (v60 > 0)
              {
                swift_retain();
                sub_26274F0E0(v54 + 16, (char *)(v54 + 40), (void *)(v50 + 16), (char *)(v50 + 40));
                *(void *)(v50 + 24) = 0;
                swift_release();
              }
            }
            else
            {
              uint64_t v54 = swift_allocObject();
              int64_t v89 = _swift_stdlib_malloc_size((const void *)v54);
              uint64_t v90 = v89 - 40;
              if (v89 < 40) {
                uint64_t v90 = v89 - 33;
              }
              uint64_t v91 = *(void *)(v50 + 24);
              *(void *)(v54 + 16) = v90 >> 3;
              *(void *)(v54 + 24) = v91;
              *(void *)(v54 + 32) = 0;
              if (*(uint64_t *)(v50 + 24) > 0) {
                sub_26274F4E8(v54 + 16, (char *)(v54 + 40), (void *)(v50 + 16), (char *)(v50 + 40));
              }
            }
          }
          uint64_t result = swift_release();
          uint64_t v139 = (void *)v54;
        }
        uint64_t v93 = *(void *)(v54 + 24);
        uint64_t v92 = *(void *)(v54 + 32);
        BOOL v74 = __OFADD__(v92, v93);
        uint64_t v94 = v92 + v93;
        if (v74) {
          goto LABEL_200;
        }
        if (v93 < 0)
        {
          if (v94 < 0)
          {
            uint64_t v98 = *(void *)(v54 + 16);
            BOOL v74 = __OFADD__(v94, v98);
            v94 += v98;
            if (v74) {
              goto LABEL_213;
            }
          }
        }
        else
        {
          uint64_t v95 = *(void *)(v54 + 16);
          BOOL v96 = __OFSUB__(v94, v95);
          uint64_t v97 = v94 - v95;
          if (v97 < 0 == v96)
          {
            uint64_t v94 = v97;
            if (v96) {
              goto LABEL_207;
            }
          }
        }
        *(void *)(v54 + 8 * v94 + 40) = v133;
        uint64_t v99 = *(void *)(v54 + 24);
        BOOL v74 = __OFADD__(v99, 1);
        uint64_t v100 = v99 + 1;
        if (v74) {
          goto LABEL_201;
        }
        *(void *)(v54 + 24) = v100;
      }
      uint64_t result = swift_bridgeObjectRelease();
      if (v24 >= (float)(v19 + v10)) {
        char v101 = 1;
      }
      else {
        char v101 = v20;
      }
      uint64_t v6 = v139;
      if ((v101 & 1) == 0)
      {
        uint64_t v102 = v139[3];
        uint64_t v103 = v102 + 1;
        if (__OFADD__(v102, 1)) {
          goto LABEL_202;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v104 = v6[2];
        if (v104 >= v103 && (result & 1) != 0)
        {
          uint64_t v83 = (uint64_t)v6;
        }
        else
        {
          if (v104 >= v103)
          {
            uint64_t v83 = swift_allocObject();
            long long v109 = *(_OWORD *)(v6 + 3);
            *(void *)(v83 + 16) = v104;
            *(_OWORD *)(v83 + 24) = v109;
            if ((uint64_t)v6[3] > 0) {
              sub_26274FAE4(v83 + 16, (char *)(v83 + 40), v6 + 2, (char *)v6 + 40);
            }
          }
          else
          {
            char v105 = swift_isUniquelyReferenced_nonNull_native();
            sub_26276F500();
            if (v105)
            {
              uint64_t v106 = v6[3];
              uint64_t v83 = swift_allocObject();
              int64_t v107 = _swift_stdlib_malloc_size((const void *)v83);
              uint64_t v108 = v107 - 40;
              if (v107 < 40) {
                uint64_t v108 = v107 - 33;
              }
              *(void *)(v83 + 16) = v108 >> 3;
              *(void *)(v83 + 24) = v106;
              *(void *)(v83 + 32) = 0;
              if (v106 > 0)
              {
                swift_retain();
                sub_26274F0E0(v83 + 16, (char *)(v83 + 40), v6 + 2, (char *)v6 + 40);
                v6[3] = 0;
                swift_release();
              }
            }
            else
            {
              uint64_t v83 = swift_allocObject();
              int64_t v118 = _swift_stdlib_malloc_size((const void *)v83);
              uint64_t v119 = v118 - 40;
              if (v118 < 40) {
                uint64_t v119 = v118 - 33;
              }
              uint64_t v120 = v6[3];
              *(void *)(v83 + 16) = v119 >> 3;
              *(void *)(v83 + 24) = v120;
              *(void *)(v83 + 32) = 0;
              if ((uint64_t)v6[3] > 0) {
                sub_26274F4E8(v83 + 16, (char *)(v83 + 40), v6 + 2, (char *)v6 + 40);
              }
            }
          }
          uint64_t result = swift_release();
          uint64_t v139 = (void *)v83;
        }
        uint64_t v122 = *(void *)(v83 + 24);
        uint64_t v121 = *(void *)(v83 + 32);
        BOOL v74 = __OFADD__(v121, v122);
        uint64_t v123 = v121 + v122;
        if (v74) {
          goto LABEL_204;
        }
        if (v122 < 0)
        {
          if (v123 < 0)
          {
            uint64_t v127 = *(void *)(v83 + 16);
            BOOL v74 = __OFADD__(v123, v127);
            v123 += v127;
            if (v74) {
              goto LABEL_214;
            }
          }
        }
        else
        {
          uint64_t v124 = *(void *)(v83 + 16);
          BOOL v125 = __OFSUB__(v123, v124);
          uint64_t v126 = v123 - v124;
          if (v126 < 0 == v125)
          {
            uint64_t v123 = v126;
            if (v125) {
              goto LABEL_209;
            }
          }
        }
        *(void *)(v83 + 8 * v123 + 40) = v132;
        uint64_t v128 = *(void *)(v83 + 24);
        BOOL v74 = __OFADD__(v128, 1);
        uint64_t v12 = v128 + 1;
        if (v74) {
          goto LABEL_205;
        }
LABEL_9:
        *(void *)(v83 + 24) = v12;
        uint64_t v6 = (void *)v83;
      }
    }
    else
    {
      if (v24 >= (float)(v19 + v10)) {
        char v43 = 1;
      }
      else {
        char v43 = v20;
      }
      if ((v43 & 1) == 0)
      {
        uint64_t v44 = (uint64_t)v139;
        uint64_t v45 = v139[3];
        uint64_t v46 = v45 + 1;
        if (__OFADD__(v45, 1)) {
          goto LABEL_195;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v47 = *(void *)(v44 + 16);
        if (v47 >= v46 && (result & 1) != 0)
        {
          uint64_t v48 = v44;
        }
        else
        {
          if (v47 >= v46)
          {
            uint64_t v48 = swift_allocObject();
            long long v63 = *(_OWORD *)(v44 + 24);
            *(void *)(v48 + 16) = v47;
            *(_OWORD *)(v48 + 24) = v63;
            if (*(uint64_t *)(v44 + 24) > 0) {
              sub_26274FAE4(v48 + 16, (char *)(v48 + 40), (void *)(v44 + 16), (char *)(v44 + 40));
            }
          }
          else
          {
            char v55 = swift_isUniquelyReferenced_nonNull_native();
            sub_26276F500();
            if (v55)
            {
              uint64_t v56 = *(void *)(v44 + 24);
              uint64_t v48 = swift_allocObject();
              int64_t v57 = _swift_stdlib_malloc_size((const void *)v48);
              uint64_t v58 = v57 - 40;
              if (v57 < 40) {
                uint64_t v58 = v57 - 33;
              }
              *(void *)(v48 + 16) = v58 >> 3;
              *(void *)(v48 + 24) = v56;
              *(void *)(v48 + 32) = 0;
              if (v56 > 0)
              {
                swift_retain();
                sub_26274F0E0(v48 + 16, (char *)(v48 + 40), (void *)(v44 + 16), (char *)(v44 + 40));
                *(void *)(v44 + 24) = 0;
                swift_release();
              }
            }
            else
            {
              uint64_t v48 = swift_allocObject();
              int64_t v67 = _swift_stdlib_malloc_size((const void *)v48);
              uint64_t v68 = v67 - 40;
              if (v67 < 40) {
                uint64_t v68 = v67 - 33;
              }
              uint64_t v69 = *(void *)(v44 + 24);
              *(void *)(v48 + 16) = v68 >> 3;
              *(void *)(v48 + 24) = v69;
              *(void *)(v48 + 32) = 0;
              if (*(uint64_t *)(v44 + 24) > 0) {
                sub_26274F4E8(v48 + 16, (char *)(v48 + 40), (void *)(v44 + 16), (char *)(v44 + 40));
              }
            }
          }
          uint64_t result = swift_release();
          uint64_t v139 = (void *)v48;
        }
        uint64_t v71 = *(void *)(v48 + 24);
        uint64_t v70 = *(void *)(v48 + 32);
        BOOL v74 = __OFADD__(v70, v71);
        uint64_t v72 = v70 + v71;
        if (v74) {
          goto LABEL_197;
        }
        if (v71 < 0)
        {
          if (v72 < 0)
          {
            uint64_t v76 = *(void *)(v48 + 16);
            BOOL v74 = __OFADD__(v72, v76);
            v72 += v76;
            if (v74) {
              goto LABEL_212;
            }
          }
        }
        else
        {
          uint64_t v73 = *(void *)(v48 + 16);
          BOOL v74 = __OFSUB__(v72, v73);
          uint64_t v75 = v72 - v73;
          if (v75 < 0 == v74)
          {
            uint64_t v72 = v75;
            if (v74) {
              goto LABEL_206;
            }
          }
        }
        *(void *)(v48 + 8 * v72 + 40) = v132;
        uint64_t v77 = *(void *)(v48 + 24);
        BOOL v74 = __OFADD__(v77, 1);
        uint64_t v78 = v77 + 1;
        if (v74) {
          goto LABEL_198;
        }
        *(void *)(v48 + 24) = v78;
      }
      uint64_t result = swift_bridgeObjectRelease();
      char v79 = __dst;
      if ((float)(v19 - v10) > v24) {
        char v79 = 1;
      }
      uint64_t v6 = v139;
      if ((v79 & 1) == 0)
      {
        uint64_t v80 = v139[3];
        uint64_t v81 = v80 + 1;
        if (__OFADD__(v80, 1)) {
          goto LABEL_199;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v82 = v6[2];
        if (v82 >= v81 && (result & 1) != 0)
        {
          uint64_t v83 = (uint64_t)v6;
        }
        else
        {
          if (v82 >= v81)
          {
            uint64_t v83 = swift_allocObject();
            long long v88 = *(_OWORD *)(v6 + 3);
            *(void *)(v83 + 16) = v82;
            *(_OWORD *)(v83 + 24) = v88;
            if ((uint64_t)v6[3] > 0) {
              sub_26274FAE4(v83 + 16, (char *)(v83 + 40), v6 + 2, (char *)v6 + 40);
            }
          }
          else
          {
            char v84 = swift_isUniquelyReferenced_nonNull_native();
            sub_26276F500();
            if (v84)
            {
              uint64_t v85 = v6[3];
              uint64_t v83 = swift_allocObject();
              int64_t v86 = _swift_stdlib_malloc_size((const void *)v83);
              uint64_t v87 = v86 - 40;
              if (v86 < 40) {
                uint64_t v87 = v86 - 33;
              }
              *(void *)(v83 + 16) = v87 >> 3;
              *(void *)(v83 + 24) = v85;
              *(void *)(v83 + 32) = 0;
              if (v85 > 0)
              {
                swift_retain();
                sub_26274F0E0(v83 + 16, (char *)(v83 + 40), v6 + 2, (char *)v6 + 40);
                v6[3] = 0;
                swift_release();
              }
            }
            else
            {
              uint64_t v83 = swift_allocObject();
              int64_t v110 = _swift_stdlib_malloc_size((const void *)v83);
              uint64_t v111 = v110 - 40;
              if (v110 < 40) {
                uint64_t v111 = v110 - 33;
              }
              uint64_t v112 = v6[3];
              *(void *)(v83 + 16) = v111 >> 3;
              *(void *)(v83 + 24) = v112;
              *(void *)(v83 + 32) = 0;
              if ((uint64_t)v6[3] > 0) {
                sub_26274F4E8(v83 + 16, (char *)(v83 + 40), v6 + 2, (char *)v6 + 40);
              }
            }
          }
          uint64_t result = swift_release();
          uint64_t v139 = (void *)v83;
        }
        uint64_t v114 = *(void *)(v83 + 24);
        uint64_t v113 = *(void *)(v83 + 32);
        BOOL v74 = __OFADD__(v113, v114);
        uint64_t v66 = v113 + v114;
        if (v74) {
          goto LABEL_203;
        }
        if (v114 < 0)
        {
          if (v66 < 0)
          {
            uint64_t v65 = *(void *)(v83 + 16);
            BOOL v74 = __OFADD__(v66, v65);
            v66 += v65;
            if (v74) {
              goto LABEL_211;
            }
          }
        }
        else
        {
          uint64_t v115 = *(void *)(v83 + 16);
          BOOL v116 = __OFSUB__(v66, v115);
          uint64_t v117 = v66 - v115;
          if (v117 < 0 == v116)
          {
            uint64_t v66 = v117;
            if (v116) {
              goto LABEL_208;
            }
          }
        }
        *(void *)(v83 + 8 * v66 + 40) = v133;
        uint64_t v11 = *(void *)(v83 + 24);
        BOOL v74 = __OFADD__(v11, 1);
        uint64_t v12 = v11 + 1;
        if (v74) {
          goto LABEL_194;
        }
        goto LABEL_9;
      }
    }
    uint64_t v9 = v6[3];
    if (!v9) {
      goto LABEL_178;
    }
  }
LABEL_184:
  __break(1u);
LABEL_185:
  __break(1u);
LABEL_186:
  __break(1u);
LABEL_187:
  __break(1u);
LABEL_188:
  __break(1u);
LABEL_189:
  __break(1u);
LABEL_190:
  __break(1u);
LABEL_191:
  __break(1u);
LABEL_192:
  __break(1u);
LABEL_193:
  __break(1u);
LABEL_194:
  __break(1u);
LABEL_195:
  __break(1u);
LABEL_196:
  __break(1u);
LABEL_197:
  __break(1u);
LABEL_198:
  __break(1u);
LABEL_199:
  __break(1u);
LABEL_200:
  __break(1u);
LABEL_201:
  __break(1u);
LABEL_202:
  __break(1u);
LABEL_203:
  __break(1u);
LABEL_204:
  __break(1u);
LABEL_205:
  __break(1u);
LABEL_206:
  __break(1u);
LABEL_207:
  __break(1u);
LABEL_208:
  __break(1u);
LABEL_209:
  __break(1u);
LABEL_210:
  __break(1u);
LABEL_211:
  __break(1u);
LABEL_212:
  __break(1u);
LABEL_213:
  __break(1u);
LABEL_214:
  __break(1u);
  return result;
}

void *VPTree.search(query:radius:sorted:)(uint64_t a1, char a2, float a3)
{
  uint64_t v4 = (uint64_t)v3;
  v76[12] = *(void **)MEMORY[0x263EF8340];
  swift_beginAccess();
  uint64_t v7 = v3[3];
  unint64_t v8 = *(void *)(v7 + 16);
  uint64_t v67 = MEMORY[0x263F8EE78];
  if (!v8 || a3 <= 0.0) {
    return (void *)v67;
  }
  uint64_t v9 = (float (*)(uint64_t, uint64_t))v3[5];
  uint64_t v69 = v3 + 4;
  swift_beginAccess();
  uint64_t v10 = v3[4];
  if (!*(void *)(v10 + 16)) {
    goto LABEL_75;
  }
  unint64_t v11 = *(void *)(v10 + 32);
  if (v11 >= v8)
  {
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
  }
  uint64_t v12 = *(void *)(v7 + 8 * v11 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  float v13 = v9(a1, v12);
  swift_bridgeObjectRelease();
  swift_release();
  if (!*(void *)(*v69 + 16)) {
    goto LABEL_77;
  }
  uint64_t v67 = MEMORY[0x263F8EE78];
  if ((float)(v13 - *(float *)(*v69 + 40)) > a3) {
    return (void *)v67;
  }
  char v66 = a2;
  uint64_t v14 = (void *)MEMORY[0x263F8EE78];
  v76[0] = (void *)MEMORY[0x263F8EE78];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957310);
  uint64_t inited = swift_initStackObject();
  uint64_t v16 = 0;
  *(_OWORD *)(inited + 16) = xmmword_2627718D0;
  *(void *)(inited + 32) = 0;
  uint64_t v17 = 1;
  uint64_t v18 = a1;
  do
  {
    while (1)
    {
      uint64_t v23 = v17 - 1;
      unint64_t v24 = *(void *)(inited + 8 * (v17 - 1) + 32);
      *(void *)(inited + 16) = v23;
      if ((v24 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
        goto LABEL_76;
      }
      if (v24 >= *(void *)(*v69 + 16)) {
        goto LABEL_72;
      }
      uint64_t v25 = *v69 + 56 * v24;
      unint64_t v26 = *(void *)(v25 + 32);
      if ((v26 & 0x8000000000000000) != 0) {
        goto LABEL_73;
      }
      uint64_t v27 = *(void *)(v4 + 24);
      if (v26 >= *(void *)(v27 + 16)) {
        goto LABEL_74;
      }
      uint64_t v75 = (void *)inited;
      float v28 = *(float *)(v25 + 40);
      char v74 = *(unsigned char *)(v25 + 56);
      uint64_t v71 = *(void *)(v25 + 64);
      uint64_t v72 = *(void *)(v25 + 48);
      char v73 = *(unsigned char *)(v25 + 72);
      uint64_t v29 = *(void *)(v25 + 80);
      unint64_t v30 = *(float (**)(uint64_t, uint64_t))(v4 + 40);
      uint64_t v31 = *(void *)(v27 + 8 * v26 + 32);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      float v32 = v30(v18, v31);
      swift_bridgeObjectRelease();
      swift_release();
      if (v32 <= a3)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v14 = sub_262727954(0, v14[2] + 1, 1, v14);
        }
        unint64_t v34 = v14[2];
        unint64_t v33 = v14[3];
        if (v34 >= v33 >> 1) {
          uint64_t v14 = sub_262727954((void *)(v33 > 1), v34 + 1, 1, v14);
        }
        void v14[2] = v34 + 1;
        uint64_t v35 = (float *)&v14[2 * v34];
        *((void *)v35 + 4) = v26;
        v35[10] = v32;
      }
      if (v29)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v36 = sub_26275005C(v29, v4, v18);
        uint64_t v70 = v16;
        swift_bridgeObjectRelease();
        uint64_t v37 = v4;
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v38 = *(void *)(v36 + 16);
        if (v38)
        {
          unint64_t v39 = (_DWORD *)(v36 + 40);
          uint64_t v40 = MEMORY[0x263F8EE78];
          do
          {
            float v44 = *(float *)v39;
            if (*(float *)v39 <= a3)
            {
              uint64_t v45 = *((void *)v39 - 1);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                sub_26273AC08(0, *(void *)(v40 + 16) + 1, 1);
              }
              unint64_t v42 = *(void *)(v40 + 16);
              unint64_t v41 = *(void *)(v40 + 24);
              if (v42 >= v41 >> 1) {
                sub_26273AC08(v41 > 1, v42 + 1, 1);
              }
              *(void *)(v40 + 16) = v42 + 1;
              uint64_t v43 = v40 + 16 * v42;
              *(void *)(v43 + 32) = v45;
              *(float *)(v43 + 40) = v44;
            }
            v39 += 4;
            --v38;
          }
          while (v38);
        }
        else
        {
          uint64_t v40 = MEMORY[0x263F8EE78];
        }
        swift_bridgeObjectRelease();
        uint64_t v46 = *(void *)(v40 + 16);
        if (v46)
        {
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v14 = sub_262727954(0, v14[2] + 1, 1, v14);
          }
          uint64_t v47 = 0;
          unint64_t v48 = v14[2];
          uint64_t v49 = 2 * v48;
          do
          {
            uint64_t v50 = *(void *)(v40 + v47 * 8 + 32);
            int v51 = *(_DWORD *)(v40 + v47 * 8 + 40);
            unint64_t v52 = v14[3];
            unint64_t v53 = v48 + 1;
            if (v48 >= v52 >> 1) {
              uint64_t v14 = sub_262727954((void *)(v52 > 1), v48 + 1, 1, v14);
            }
            void v14[2] = v53;
            uint64_t v54 = &v14[v49 + v47];
            v54[4] = v50;
            *((_DWORD *)v54 + 10) = v51;
            v47 += 2;
            unint64_t v48 = v53;
            --v46;
          }
          while (v46);
          swift_release();
        }
        uint64_t v18 = a1;
        swift_release();
        uint64_t v4 = v37;
        uint64_t v16 = v70;
      }
      float v55 = v28 + a3;
      if (v32 >= v28) {
        break;
      }
      char v56 = v74;
      if (v32 >= v55) {
        char v56 = 1;
      }
      if ((v56 & 1) == 0)
      {
        unint64_t v58 = v75[2];
        unint64_t v57 = v75[3];
        if (v58 >= v57 >> 1) {
          uint64_t v75 = sub_2627274CC((void *)(v57 > 1), v58 + 1, 1, v75);
        }
        v75[2] = v58 + 1;
        v75[v58 + 4] = v72;
      }
      swift_bridgeObjectRelease();
      char v59 = v73;
      if ((float)(v28 - a3) > v32) {
        char v59 = 1;
      }
      if ((v59 & 1) == 0)
      {
        uint64_t inited = (uint64_t)v75;
        unint64_t v20 = v75[2];
        unint64_t v19 = v75[3];
        unint64_t v21 = v20 + 1;
        if (v20 >= v19 >> 1) {
          uint64_t inited = (uint64_t)sub_2627274CC((void *)(v19 > 1), v20 + 1, 1, v75);
        }
        uint64_t v22 = v71;
        goto LABEL_13;
      }
LABEL_8:
      uint64_t inited = (uint64_t)v75;
      uint64_t v17 = v75[2];
      if (!v17) {
        goto LABEL_67;
      }
    }
    char v60 = v73;
    if ((float)(v28 - a3) > v32) {
      char v60 = 1;
    }
    if ((v60 & 1) == 0)
    {
      unint64_t v62 = v75[2];
      unint64_t v61 = v75[3];
      if (v62 >= v61 >> 1) {
        uint64_t v75 = sub_2627274CC((void *)(v61 > 1), v62 + 1, 1, v75);
      }
      v75[2] = v62 + 1;
      v75[v62 + 4] = v71;
    }
    swift_bridgeObjectRelease();
    char v63 = v74;
    if (v32 >= v55) {
      char v63 = 1;
    }
    if (v63) {
      goto LABEL_8;
    }
    uint64_t inited = (uint64_t)v75;
    unint64_t v20 = v75[2];
    unint64_t v64 = v75[3];
    unint64_t v21 = v20 + 1;
    if (v20 >= v64 >> 1) {
      uint64_t inited = (uint64_t)sub_2627274CC((void *)(v64 > 1), v20 + 1, 1, v75);
    }
    uint64_t v22 = v72;
LABEL_13:
    *(void *)(inited + 16) = v21;
    *(void *)(inited + 8 * v20 + 32) = v22;
    uint64_t v17 = *(void *)(inited + 16);
  }
  while (v17);
LABEL_67:
  v76[0] = v14;
  if (v66) {
    sub_26274BB70(v76);
  }
  swift_bridgeObjectRelease();
  return v76[0];
}

uint64_t VPTree.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t VPTree.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0228](v0, 56, 7);
}

uint64_t VPTree.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957A98);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_262750BE8();
  sub_26276FE40();
  char v12 = *(unsigned char *)(v3 + 16);
  LOBYTE(v11) = 0;
  sub_262747FD0();
  sub_26276FD20();
  if (!v2)
  {
    swift_beginAccess();
    uint64_t v11 = *(void *)(v3 + 32);
    v10[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A957AA8);
    sub_262750C90(&qword_26A957AB0, (void (*)(void))sub_262750C3C);
    sub_26276FD20();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t VPTree.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  VPTree.init(from:)(a1);
  return v2;
}

uint64_t VPTree.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957AC0);
  uint64_t v15 = *(void *)(v5 - 8);
  uint64_t v16 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x263F8EE78];
  *(void *)(v1 + 24) = MEMORY[0x263F8EE78];
  *(void *)(v1 + 32) = v8;
  uint64_t v9 = (void *)(v1 + 32);
  *(void *)(v1 + 40) = sub_26274C510;
  *(void *)(v1 + 48) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_262750BE8();
  sub_26276FE30();
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v10 = v15;
    LOBYTE(v18) = 0;
    sub_262748024();
    uint64_t v11 = v16;
    sub_26276FC90();
    *(unsigned char *)(v1 + 16) = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A957AA8);
    char v17 = 1;
    sub_262750C90(&qword_26A957AC8, (void (*)(void))sub_262750D00);
    sub_26276FC90();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v11);
    uint64_t v13 = v18;
    swift_beginAccess();
    *uint64_t v9 = v13;
    swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t sub_26274E37C(uint64_t *a1, uint64_t a2)
{
  return VPTree.search(query:k:)(*a1, a2);
}

void *sub_26274E3A4(uint64_t *a1, char a2, float a3)
{
  return VPTree.search(query:radius:sorted:)(*a1, a2, a3);
}

void sub_26274E3CC(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(*(void *)v1 + 16);
}

uint64_t sub_26274E3DC()
{
  return swift_bridgeObjectRetain();
}

BOOL sub_26274E420()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  return *(void *)(*(void *)(v1 + 32) + 16) == 0;
}

uint64_t sub_26274E46C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = VPTree.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_26274E4C4(void *a1)
{
  return VPTree.encode(to:)(a1);
}

uint64_t sub_26274E4E8(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_26276FD50();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_141;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v84 = *a1;
      uint64_t v85 = *a1 + 16;
      uint64_t v86 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v88 = v86;
        uint64_t v89 = v85;
        do
        {
          float v90 = *(float *)(v89 + 8);
          if (v90 >= *(float *)(v89 - 8)) {
            break;
          }
          if (!v84) {
            goto LABEL_145;
          }
          uint64_t v91 = *(void *)v89;
          *(_OWORD *)uint64_t v89 = *(_OWORD *)(v89 - 16);
          *(float *)(v89 - 8) = v90;
          *(void *)(v89 - 16) = v91;
          v89 -= 16;
        }
        while (!__CFADD__(v88++, 1));
        v85 += 16;
        --v86;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_150;
  }
  uint64_t v6 = result;
  char v101 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    char __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
      char v12 = (char *)MEMORY[0x263F8EE78];
LABEL_107:
      uint64_t v93 = v12;
      uint64_t v104 = v9;
      if (v13 >= 2)
      {
        uint64_t v94 = *v101;
        do
        {
          unint64_t v95 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_136;
          }
          if (!v94) {
            goto LABEL_149;
          }
          BOOL v96 = v93;
          uint64_t v97 = *(void *)&v93[16 * v95 + 32];
          uint64_t v98 = *(void *)&v93[16 * v13 + 24];
          sub_26274EBDC((char *)(v94 + 16 * v97), (char *)(v94 + 16 * *(void *)&v93[16 * v13 + 16]), v94 + 16 * v98, __dst);
          if (v1) {
            break;
          }
          if (v98 < v97) {
            goto LABEL_137;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            BOOL v96 = sub_26276BD14((uint64_t)v96);
          }
          if (v95 >= *((void *)v96 + 2)) {
            goto LABEL_138;
          }
          uint64_t v99 = &v96[16 * v95 + 32];
          *(void *)uint64_t v99 = v97;
          *((void *)v99 + 1) = v98;
          unint64_t v100 = *((void *)v96 + 2);
          if (v13 > v100) {
            goto LABEL_139;
          }
          memmove(&v96[16 * v13 + 16], &v96[16 * v13 + 32], 16 * (v100 - v13));
          uint64_t v93 = v96;
          *((void *)v96 + 2) = v100 - 1;
          unint64_t v13 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_97:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A957388);
    uint64_t v8 = sub_26276F830();
    *(void *)(v8 + 16) = v7;
    uint64_t v104 = v8;
    char __dst = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v102 = *a1 + 40;
  uint64_t v103 = *a1 + 8;
  char v12 = (char *)MEMORY[0x263F8EE78];
  uint64_t v105 = v6;
  uint64_t v106 = v3;
  uint64_t v107 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      float v15 = *(float *)(v103 + 16 * v10);
      uint64_t v16 = 16 * v14;
      float v17 = *(float *)(v103 + 16 * v14);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        uint64_t v18 = (float *)(v102 + 16 * v14);
        while (v15 < v17 != *v18 >= *(v18 - 4))
        {
          ++v10;
          v18 += 4;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v15 < v17)
      {
        if (v10 < v14) {
          goto LABEL_142;
        }
        if (v14 < v10)
        {
          uint64_t v19 = 16 * v10 - 16;
          uint64_t v20 = v10;
          uint64_t v21 = v14;
          do
          {
            if (v21 != --v20)
            {
              if (!v11) {
                goto LABEL_148;
              }
              uint64_t v23 = (_OWORD *)(v11 + v16);
              unint64_t v24 = (_OWORD *)(v11 + v19);
              uint64_t v25 = *(void *)(v11 + v16);
              int v26 = *(_DWORD *)(v11 + v16 + 8);
              if (v16 != v19 || v23 >= v24 + 1) {
                *uint64_t v23 = *v24;
              }
              uint64_t v22 = v11 + v19;
              *(void *)uint64_t v22 = v25;
              *(_DWORD *)(v22 + 8) = v26;
            }
            ++v21;
            v19 -= 16;
            v16 += 16;
          }
          while (v21 < v20);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_50;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_140;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_50;
    }
    uint64_t v27 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_143;
    }
    if (v27 >= v3) {
      uint64_t v27 = v3;
    }
    if (v27 < v14) {
      break;
    }
    if (v10 != v27)
    {
      float v28 = (float *)(v11 + 16 * v10);
      do
      {
        uint64_t v29 = v28;
        uint64_t v30 = v14;
        do
        {
          float v31 = v29[2];
          if (v31 >= *(v29 - 2)) {
            break;
          }
          if (!v11) {
            goto LABEL_146;
          }
          uint64_t v32 = *(void *)v29;
          *(_OWORD *)uint64_t v29 = *((_OWORD *)v29 - 1);
          *(v29 - 2) = v31;
          *((void *)v29 - 2) = v32;
          v29 -= 4;
          ++v30;
        }
        while (v10 != v30);
        ++v10;
        v28 += 4;
      }
      while (v10 != v27);
      uint64_t v10 = v27;
    }
LABEL_50:
    if (v10 < v14) {
      goto LABEL_135;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v12 = sub_26276B9E4(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v34 = *((void *)v12 + 2);
    unint64_t v33 = *((void *)v12 + 3);
    unint64_t v13 = v34 + 1;
    uint64_t v11 = v107;
    if (v34 >= v33 >> 1)
    {
      uint64_t v83 = sub_26276B9E4((char *)(v33 > 1), v34 + 1, 1, v12);
      uint64_t v11 = v107;
      char v12 = v83;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v35 = v12 + 32;
    uint64_t v36 = &v12[16 * v34 + 32];
    *(void *)uint64_t v36 = v14;
    *((void *)v36 + 1) = v10;
    if (v34)
    {
      while (1)
      {
        unint64_t v37 = v13 - 1;
        if (v13 >= 4)
        {
          unint64_t v42 = &v35[16 * v13];
          uint64_t v43 = *((void *)v42 - 8);
          uint64_t v44 = *((void *)v42 - 7);
          BOOL v48 = __OFSUB__(v44, v43);
          uint64_t v45 = v44 - v43;
          if (v48) {
            goto LABEL_124;
          }
          uint64_t v47 = *((void *)v42 - 6);
          uint64_t v46 = *((void *)v42 - 5);
          BOOL v48 = __OFSUB__(v46, v47);
          uint64_t v40 = v46 - v47;
          char v41 = v48;
          if (v48) {
            goto LABEL_125;
          }
          unint64_t v49 = v13 - 2;
          uint64_t v50 = &v35[16 * v13 - 32];
          uint64_t v52 = *(void *)v50;
          uint64_t v51 = *((void *)v50 + 1);
          BOOL v48 = __OFSUB__(v51, v52);
          uint64_t v53 = v51 - v52;
          if (v48) {
            goto LABEL_127;
          }
          BOOL v48 = __OFADD__(v40, v53);
          uint64_t v54 = v40 + v53;
          if (v48) {
            goto LABEL_130;
          }
          if (v54 >= v45)
          {
            uint64_t v72 = &v35[16 * v37];
            uint64_t v74 = *(void *)v72;
            uint64_t v73 = *((void *)v72 + 1);
            BOOL v48 = __OFSUB__(v73, v74);
            uint64_t v75 = v73 - v74;
            if (v48) {
              goto LABEL_134;
            }
            BOOL v65 = v40 < v75;
            goto LABEL_87;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v66 = *((void *)v12 + 4);
            uint64_t v67 = *((void *)v12 + 5);
            BOOL v48 = __OFSUB__(v67, v66);
            uint64_t v59 = v67 - v66;
            char v60 = v48;
            goto LABEL_81;
          }
          uint64_t v39 = *((void *)v12 + 4);
          uint64_t v38 = *((void *)v12 + 5);
          BOOL v48 = __OFSUB__(v38, v39);
          uint64_t v40 = v38 - v39;
          char v41 = v48;
        }
        if (v41) {
          goto LABEL_126;
        }
        unint64_t v49 = v13 - 2;
        float v55 = &v35[16 * v13 - 32];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v58 = __OFSUB__(v56, v57);
        uint64_t v59 = v56 - v57;
        char v60 = v58;
        if (v58) {
          goto LABEL_129;
        }
        unint64_t v61 = &v35[16 * v37];
        uint64_t v63 = *(void *)v61;
        uint64_t v62 = *((void *)v61 + 1);
        BOOL v48 = __OFSUB__(v62, v63);
        uint64_t v64 = v62 - v63;
        if (v48) {
          goto LABEL_132;
        }
        if (__OFADD__(v59, v64)) {
          goto LABEL_133;
        }
        if (v59 + v64 >= v40)
        {
          BOOL v65 = v40 < v64;
LABEL_87:
          if (v65) {
            unint64_t v37 = v49;
          }
          goto LABEL_89;
        }
LABEL_81:
        if (v60) {
          goto LABEL_128;
        }
        uint64_t v68 = &v35[16 * v37];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v48 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v48) {
          goto LABEL_131;
        }
        if (v71 < v59) {
          goto LABEL_15;
        }
LABEL_89:
        unint64_t v76 = v37 - 1;
        if (v37 - 1 >= v13)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!v11) {
          goto LABEL_147;
        }
        uint64_t v77 = v12;
        uint64_t v78 = &v35[16 * v76];
        uint64_t v79 = *(void *)v78;
        uint64_t v80 = &v35[16 * v37];
        uint64_t v81 = *((void *)v80 + 1);
        sub_26274EBDC((char *)(v11 + 16 * *(void *)v78), (char *)(v11 + 16 * *(void *)v80), v11 + 16 * v81, __dst);
        if (v1) {
          goto LABEL_97;
        }
        if (v81 < v79) {
          goto LABEL_121;
        }
        if (v37 > *((void *)v77 + 2)) {
          goto LABEL_122;
        }
        *(void *)uint64_t v78 = v79;
        *(void *)&v35[16 * v76 + 8] = v81;
        unint64_t v82 = *((void *)v77 + 2);
        if (v37 >= v82) {
          goto LABEL_123;
        }
        char v12 = v77;
        unint64_t v13 = v82 - 1;
        memmove(&v35[16 * v37], v80 + 16, 16 * (v82 - 1 - v37));
        *((void *)v77 + 2) = v82 - 1;
        uint64_t v11 = v107;
        if (v82 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v105;
    uint64_t v3 = v106;
    if (v10 >= v106)
    {
      uint64_t v9 = v104;
      goto LABEL_107;
    }
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  uint64_t result = sub_26276FBA0();
  __break(1u);
  return result;
}

uint64_t sub_26274EBDC(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  int v26 = __dst;
  uint64_t v27 = __src;
  if (v10 >= v13)
  {
    if (v11 >= -15)
    {
      uint64_t v19 = 16 * v13;
      if (__dst != a2 || &a2[v19] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v20 = &v4[v19];
      uint64_t v25 = &v4[v19];
      uint64_t v27 = v6;
      if (v7 < v6 && (unint64_t)(v11 - 16) <= 0xFFFFFFFFFFFFFFE0)
      {
        uint64_t v21 = (char *)(a3 - 16);
        do
        {
          uint64_t v22 = v21 + 16;
          if (*((float *)v20 - 2) >= *((float *)v6 - 2))
          {
            uint64_t v25 = v20 - 16;
            if (v22 < v20 || v21 >= v20 || v22 != v20) {
              *(_OWORD *)uint64_t v21 = *((_OWORD *)v20 - 1);
            }
            uint64_t v23 = v6;
            v20 -= 16;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v23 = v6 - 16;
            if (v22 != v6 || v21 >= v6) {
              *(_OWORD *)uint64_t v21 = *(_OWORD *)v23;
            }
            uint64_t v27 = v6 - 16;
            if (v23 <= v7) {
              break;
            }
          }
          v21 -= 16;
          uint64_t v6 = v23;
        }
        while (v20 > v4);
      }
LABEL_44:
      sub_26276BB9C(&v27, &v26, &v25);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    size_t v14 = 16 * v10;
    if (__dst != __src || &__src[v14] <= __dst) {
      memmove(__dst, __src, v14);
    }
    float v15 = &v4[v14];
    uint64_t v25 = &v4[v14];
    if ((unint64_t)v6 < a3 && (unint64_t)(v8 - 16) <= 0xFFFFFFFFFFFFFFE0)
    {
      uint64_t v16 = v4;
      while (1)
      {
        if (*((float *)v6 + 2) >= *((float *)v16 + 2))
        {
          uint64_t v4 = v16 + 16;
          uint64_t v18 = v16;
          float v17 = v6;
          if (v7 == v16)
          {
            v16 += 16;
            if (v7 < v4) {
              goto LABEL_22;
            }
          }
          else
          {
            v16 += 16;
          }
        }
        else
        {
          float v17 = v6 + 16;
          uint64_t v18 = v6;
          if (v7 == v6 && v7 < v17) {
            goto LABEL_22;
          }
        }
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v18;
LABEL_22:
        v7 += 16;
        if (v16 < v15)
        {
          uint64_t v6 = v17;
          if ((unint64_t)v17 < a3) {
            continue;
          }
        }
        int v26 = v4;
        uint64_t v27 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  uint64_t result = sub_26276FC00();
  __break(1u);
  return result;
}

void sub_26274EE68(int a1, char *__dst, void *a3, char *a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v7 = a3[1];
  if (v5 < v7)
  {
    uint64_t v8 = v7 - v5;
    if (!__OFSUB__(v7, v5))
    {
      uint64_t v9 = *a3 - v4;
      uint64_t v10 = a4;
      goto LABEL_6;
    }
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v10 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = a3[1];
LABEL_6:
  BOOL v11 = v5 < v7;
  BOOL v12 = v8 != 0;
  BOOL v13 = v11 && v12;
  if (v11 && v12) {
    size_t v14 = v10;
  }
  else {
    size_t v14 = 0;
  }
  if (v11 && v12) {
    uint64_t v15 = v8;
  }
  else {
    uint64_t v15 = 0;
  }
  if (v9 < 1)
  {
    uint64_t v9 = 0;
    goto LABEL_18;
  }
  if (!a4)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v16 = &a4[16 * v4];
  if (v16 != __dst || &v16[16 * v9] <= __dst) {
    memmove(__dst, v16, 16 * v9);
  }
LABEL_18:
  if (!v13 || v15 <= 0) {
    return;
  }
  if (!v14)
  {
LABEL_32:
    __break(1u);
    return;
  }
  float v17 = &__dst[16 * v9];
  if (v17 != v14 || v17 >= &v14[16 * v15])
  {
    memmove(v17, v14, 16 * v15);
  }
}

void sub_26274EF98(int a1, char *__dst, void *a3, char *a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v7 = a3[1];
  if (v5 < v7)
  {
    uint64_t v8 = v7 - v5;
    if (!__OFSUB__(v7, v5))
    {
      uint64_t v9 = *a3 - v4;
      uint64_t v10 = a4;
      goto LABEL_6;
    }
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v10 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = a3[1];
LABEL_6:
  BOOL v11 = v5 < v7;
  BOOL v12 = v8 != 0;
  BOOL v13 = v11 && v12;
  if (v11 && v12) {
    size_t v14 = v10;
  }
  else {
    size_t v14 = 0;
  }
  if (v11 && v12) {
    uint64_t v15 = v8;
  }
  else {
    uint64_t v15 = 0;
  }
  if (v9 < 1)
  {
    uint64_t v9 = 0;
    goto LABEL_18;
  }
  if (!a4)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v16 = &a4[16 * v4];
  size_t v17 = 16 * v9;
  if (v16 != __dst || &v16[v17] <= __dst) {
    memmove(__dst, v16, v17);
  }
LABEL_18:
  if (!v13 || v15 <= 0) {
    return;
  }
  if (!v14)
  {
LABEL_32:
    __break(1u);
    return;
  }
  uint64_t v18 = &__dst[16 * v9];
  if (v18 != v14 || v18 >= &v14[16 * v15])
  {
    memmove(v18, v14, 16 * v15);
  }
}

void sub_26274F0C8(int a1, char *a2, void *a3, char *a4)
{
}

void sub_26274F0E0(int a1, char *__dst, void *a3, char *a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v7 = a3[1];
  if (v5 < v7)
  {
    uint64_t v8 = v7 - v5;
    if (!__OFSUB__(v7, v5))
    {
      uint64_t v9 = *a3 - v4;
      uint64_t v10 = a4;
      goto LABEL_6;
    }
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v10 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = a3[1];
LABEL_6:
  BOOL v11 = v5 < v7;
  BOOL v12 = v8 != 0;
  BOOL v13 = v11 && v12;
  if (v11 && v12) {
    size_t v14 = v10;
  }
  else {
    size_t v14 = 0;
  }
  if (v11 && v12) {
    uint64_t v15 = v8;
  }
  else {
    uint64_t v15 = 0;
  }
  if (v9 < 1)
  {
    uint64_t v9 = 0;
    goto LABEL_18;
  }
  if (!a4)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v16 = &a4[8 * v4];
  if (v16 != __dst || &v16[8 * v9] <= __dst) {
    memmove(__dst, v16, 8 * v9);
  }
LABEL_18:
  if (!v13 || v15 <= 0) {
    return;
  }
  if (!v14)
  {
LABEL_32:
    __break(1u);
    return;
  }
  size_t v17 = &__dst[8 * v9];
  if (v17 != v14 || v17 >= &v14[8 * v15])
  {
    memmove(v17, v14, 8 * v15);
  }
}

void sub_26274F210(int a1, char *__dst, void *a3, char *a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v7 = a3[1];
  if (v5 < v7)
  {
    uint64_t v8 = v7 - v5;
    if (!__OFSUB__(v7, v5))
    {
      uint64_t v9 = *a3 - v4;
      uint64_t v10 = a4;
      goto LABEL_6;
    }
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v10 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = a3[1];
LABEL_6:
  BOOL v11 = v5 < v7;
  BOOL v12 = v8 != 0;
  BOOL v13 = v11 && v12;
  if (v11 && v12) {
    size_t v14 = v10;
  }
  else {
    size_t v14 = 0;
  }
  if (v11 && v12) {
    uint64_t v15 = v8;
  }
  else {
    uint64_t v15 = 0;
  }
  if (v9 < 1)
  {
    uint64_t v9 = 0;
    goto LABEL_20;
  }
  if (!a4)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v16 = &a4[24 * v4];
  if (v16 != __dst || &v16[24 * v9] <= __dst) {
    memmove(__dst, v16, 24 * v9);
  }
LABEL_20:
  if (!v13 || v15 <= 0) {
    return;
  }
  if (!v14)
  {
LABEL_31:
    __break(1u);
    return;
  }
  uint64_t v18 = &__dst[24 * v9];
  size_t v19 = 24 * v15;
  if (v18 != v14 || v18 >= &v14[v19])
  {
    memmove(v18, v14, v19);
  }
}

void sub_26274F350(int a1, char *__dst, void *a3, char *__src)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = a3[1];
  if (v5 >= v7)
  {
    uint64_t v10 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = a3[1];
    if (v7 < 1) {
      goto LABEL_5;
    }
    goto LABEL_7;
  }
  uint64_t v8 = v7 - v5;
  if (__OFSUB__(v7, v5))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v9 = *a3 - v4;
  uint64_t v10 = __src;
  if (v5 < 1)
  {
LABEL_5:
    uint64_t v9 = 0;
    goto LABEL_13;
  }
LABEL_7:
  if (!__src)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  BOOL v11 = &__src[16 * v4];
  if (v11 < &__dst[16 * v9] && &v11[16 * v9] > __dst) {
    goto LABEL_29;
  }
  memcpy(__dst, v11, 16 * v9);
LABEL_13:
  if (v5 < v7 && v8 >= 1)
  {
    if (v10)
    {
      size_t v14 = &__dst[16 * v9];
      size_t v15 = 16 * v8;
      if (&v14[16 * v8] <= v10 || v14 >= &v10[v15])
      {
        memcpy(v14, v10, v15);
        return;
      }
LABEL_29:
      sub_26276FC00();
      __break(1u);
      return;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
}

void sub_26274F4C8(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
}

void sub_26274F4E8(int a1, char *__dst, void *a3, char *__src)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = a3[1];
  if (v5 >= v7)
  {
    uint64_t v10 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = a3[1];
    if (v7 < 1) {
      goto LABEL_5;
    }
    goto LABEL_7;
  }
  uint64_t v8 = v7 - v5;
  if (__OFSUB__(v7, v5))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v9 = *a3 - v4;
  uint64_t v10 = __src;
  if (v5 < 1)
  {
LABEL_5:
    uint64_t v9 = 0;
    goto LABEL_13;
  }
LABEL_7:
  if (!__src)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  BOOL v11 = &__src[8 * v4];
  if (v11 < &__dst[8 * v9] && &v11[8 * v9] > __dst) {
    goto LABEL_29;
  }
  memcpy(__dst, v11, 8 * v9);
LABEL_13:
  if (v5 < v7 && v8 >= 1)
  {
    if (v10)
    {
      size_t v14 = &__dst[8 * v9];
      size_t v15 = 8 * v8;
      if (&v14[8 * v8] <= v10 || v14 >= &v10[v15])
      {
        memcpy(v14, v10, v15);
        return;
      }
LABEL_29:
      sub_26276FC00();
      __break(1u);
      return;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
}

void sub_26274F660(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
}

void sub_26274F680(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = a3[1];
  if (v5 >= v7)
  {
    unint64_t v10 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = a3[1];
    if (v7 < 1) {
      goto LABEL_5;
    }
    goto LABEL_7;
  }
  uint64_t v8 = v7 - v5;
  if (__OFSUB__(v7, v5))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v9 = *a3 - v4;
  unint64_t v10 = a4;
  if (v5 < 1)
  {
LABEL_5:
    uint64_t v9 = 0;
    goto LABEL_13;
  }
LABEL_7:
  if (!a4)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v11 = a4 + 24 * v4;
  if (v11 < a2 + 24 * v9 && v11 + 24 * v9 > a2) {
    goto LABEL_29;
  }
  swift_arrayInitWithCopy();
LABEL_13:
  if (v5 >= v7 || v8 < 1) {
    return;
  }
  if (!v10)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    sub_26276FC00();
    __break(1u);
    return;
  }
  unint64_t v14 = a2 + 24 * v9;
  if (v14 + 24 * v8 > v10 && v14 < v10 + 24 * v8) {
    goto LABEL_29;
  }
  swift_arrayInitWithCopy();
}

void sub_26274F7F0(int a1, char *__dst, void *a3, char *__src)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v7 = a3[1];
  if (v5 >= v7)
  {
    unint64_t v10 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = a3[1];
    if (v7 < 1) {
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  uint64_t v8 = v7 - v5;
  if (__OFSUB__(v7, v5))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v9 = *a3 - v4;
  unint64_t v10 = __src;
  if (v5 < 1) {
    goto LABEL_14;
  }
LABEL_7:
  if (!__src)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  unint64_t v11 = &__src[16 * v4];
  BOOL v12 = &__dst[16 * v4];
  size_t v13 = 16 * v9;
  unint64_t v14 = &v12[16 * v9];
  size_t v15 = &v11[16 * v9];
  if (v11 < v14 && v12 < v15) {
    goto LABEL_30;
  }
  memcpy(v12, v11, v13);
LABEL_14:
  if (v5 < v7 && v8 >= 1)
  {
    if (v10)
    {
      size_t v18 = 16 * v8;
      if (&__dst[16 * v8] <= v10 || &v10[v18] <= __dst)
      {
        memcpy(__dst, v10, v18);
        return;
      }
LABEL_30:
      sub_26276FC00();
      __break(1u);
      return;
    }
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
}

void sub_26274F958(int a1, char *__dst, void *a3, char *__src)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v7 = a3[1];
  if (v5 >= v7)
  {
    unint64_t v10 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = a3[1];
    if (v7 < 1) {
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  uint64_t v8 = v7 - v5;
  if (__OFSUB__(v7, v5))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v9 = *a3 - v4;
  unint64_t v10 = __src;
  if (v5 < 1) {
    goto LABEL_14;
  }
LABEL_7:
  if (!__src)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v11 = 16 * v4;
  BOOL v12 = &__src[v11];
  size_t v13 = &__dst[v11];
  size_t v14 = 16 * v9;
  size_t v15 = &__dst[16 * v9 + v11];
  uint64_t v16 = &v12[16 * v9];
  if (v12 < v15 && v13 < v16) {
    goto LABEL_30;
  }
  memcpy(v13, v12, v14);
LABEL_14:
  if (v5 < v7 && v8 >= 1)
  {
    if (v10)
    {
      size_t v19 = 16 * v8;
      if (&__dst[16 * v8] <= v10 || &v10[v19] <= __dst)
      {
        memcpy(__dst, v10, v19);
        return;
      }
LABEL_30:
      sub_26276FC00();
      __break(1u);
      return;
    }
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
}

void sub_26274FAC4(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
}

void sub_26274FAE4(int a1, char *__dst, void *a3, char *__src)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v7 = a3[1];
  if (v5 >= v7)
  {
    unint64_t v10 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = a3[1];
    if (v7 < 1) {
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  uint64_t v8 = v7 - v5;
  if (__OFSUB__(v7, v5))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v9 = *a3 - v4;
  unint64_t v10 = __src;
  if (v5 < 1) {
    goto LABEL_14;
  }
LABEL_7:
  if (!__src)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v11 = &__src[8 * v4];
  BOOL v12 = &__dst[8 * v4];
  size_t v13 = 8 * v9;
  size_t v14 = &v12[8 * v9];
  size_t v15 = &v11[8 * v9];
  if (v11 < v14 && v12 < v15) {
    goto LABEL_30;
  }
  memcpy(v12, v11, v13);
LABEL_14:
  if (v5 < v7 && v8 >= 1)
  {
    if (v10)
    {
      size_t v18 = 8 * v8;
      if (&__dst[8 * v8] <= v10 || &v10[v18] <= __dst)
      {
        memcpy(__dst, v10, v18);
        return;
      }
LABEL_30:
      sub_26276FC00();
      __break(1u);
      return;
    }
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
}

void sub_26274FC4C(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
}

void sub_26274FC6C(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v7 = a3[1];
  if (v5 >= v7)
  {
    unint64_t v10 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = a3[1];
    if (v7 < 1) {
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  uint64_t v8 = v7 - v5;
  if (__OFSUB__(v7, v5))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v9 = *a3 - v4;
  unint64_t v10 = a4;
  if (v5 < 1) {
    goto LABEL_14;
  }
LABEL_7:
  if (!a4)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v11 = 24 * v4;
  unint64_t v12 = a4 + v11;
  unint64_t v13 = a2 + v11;
  unint64_t v14 = a2 + v11 + 24 * v9;
  unint64_t v15 = a4 + v11 + 24 * v9;
  if (v12 < v14 && v13 < v15) {
    goto LABEL_27;
  }
  swift_arrayInitWithCopy();
LABEL_14:
  if (v5 < v7 && v8 >= 1)
  {
    if (v10)
    {
      if (a2 + 24 * v8 <= v10 || v10 + 24 * v8 <= a2)
      {
        swift_arrayInitWithCopy();
        return;
      }
LABEL_27:
      sub_26276FC00();
      __break(1u);
      return;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
}

uint64_t sub_26274FDD8(uint64_t a1, float (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4, unint64_t a5)
{
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (!v5) {
    return v6;
  }
  uint64_t v22 = MEMORY[0x263F8EE78];
  uint64_t result = sub_262739750(0, v5, 0);
  if ((a5 & 0x8000000000000000) != 0) {
    goto LABEL_11;
  }
  unint64_t v11 = *(void *)(a4 + 16);
  if (v11 > a5)
  {
    unint64_t v12 = (unint64_t *)(a1 + 32);
    uint64_t v13 = a4 + 32;
    uint64_t v14 = *(void *)(a4 + 32 + 8 * a5);
    uint64_t v6 = v22;
    while (1)
    {
      unint64_t v16 = *v12++;
      unint64_t v15 = v16;
      if (v16 >= v11) {
        break;
      }
      uint64_t v17 = *(void *)(v13 + 8 * v15);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      float v18 = a2(v14, v17);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v20 = *(void *)(v22 + 16);
      unint64_t v19 = *(void *)(v22 + 24);
      if (v20 >= v19 >> 1) {
        uint64_t result = sub_262739750(v19 > 1, v20 + 1, 1);
      }
      *(void *)(v22 + 16) = v20 + 1;
      *(float *)(v22 + 4 * v20 + 32) = v18;
      if (!--v5) {
        return v6;
      }
    }
    __break(1u);
LABEL_11:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_26274FF30(uint64_t a1, float (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (!v5) {
    return v6;
  }
  uint64_t v22 = MEMORY[0x263F8EE78];
  uint64_t result = sub_26273AC08(0, v5, 0);
  uint64_t v6 = v22;
  unint64_t v10 = (unint64_t *)(a1 + 32);
  uint64_t v11 = a5 + 32;
  unint64_t v12 = *(void *)(a5 + 16);
  while (1)
  {
    unint64_t v14 = *v10++;
    unint64_t v13 = v14;
    if (v14 >= v12) {
      break;
    }
    uint64_t v15 = *(void *)(v11 + 8 * v13);
    swift_bridgeObjectRetain();
    float v16 = a2(a4, v15);
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v18 = *(void *)(v22 + 16);
    unint64_t v17 = *(void *)(v22 + 24);
    if (v18 >= v17 >> 1) {
      uint64_t result = sub_26273AC08(v17 > 1, v18 + 1, 1);
    }
    *(void *)(v22 + 16) = v18 + 1;
    uint64_t v19 = v22 + 16 * v18;
    *(void *)(v19 + 32) = v13;
    *(float *)(v19 + 40) = v16;
    if (!--v5) {
      return v6;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_26275005C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (!v3) {
    return v4;
  }
  uint64_t v19 = MEMORY[0x263F8EE78];
  sub_26273AC08(0, v3, 0);
  uint64_t v4 = v19;
  uint64_t v8 = (unint64_t *)(a1 + 32);
  uint64_t result = swift_beginAccess();
  while (1)
  {
    unint64_t v11 = *v8++;
    unint64_t v10 = v11;
    if ((v11 & 0x8000000000000000) != 0) {
      break;
    }
    uint64_t v12 = *(void *)(a2 + 24);
    if (v10 >= *(void *)(v12 + 16)) {
      goto LABEL_10;
    }
    unint64_t v13 = *(float (**)(uint64_t, uint64_t))(a2 + 40);
    uint64_t v14 = *(void *)(v12 + 8 * v10 + 32);
    swift_retain();
    swift_bridgeObjectRetain();
    float v15 = v13(a3, v14);
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    unint64_t v17 = *(void *)(v19 + 16);
    unint64_t v16 = *(void *)(v19 + 24);
    if (v17 >= v16 >> 1) {
      uint64_t result = sub_26273AC08(v16 > 1, v17 + 1, 1);
    }
    *(void *)(v19 + 16) = v17 + 1;
    uint64_t v18 = v19 + 16 * v17;
    *(void *)(v18 + 32) = v10;
    *(float *)(v18 + 40) = v15;
    if (!--v3) {
      return v4;
    }
  }
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_2627501B4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x646E49746E696F70 && a2 == 0xEA00000000007865;
  if (v2 || (sub_26276FDA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F687365726874 && a2 == 0xE900000000000064 || (sub_26276FDA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1952867692 && a2 == 0xE400000000000000 || (sub_26276FDA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7468676972 && a2 == 0xE500000000000000 || (sub_26276FDA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E496465726F7473 && a2 == 0xED00007365636964)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_26276FDA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_2627503F8(uint64_t a1, float (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  int64_t v4 = *(void *)(a1 + 16);
  if (v4) {
    BOOL v5 = a4 < 1;
  }
  else {
    BOOL v5 = 1;
  }
  if (v5) {
    return MEMORY[0x263F8EE78];
  }
  char v6 = *(void **)sub_26276F4F0();
  unint64_t v95 = v6;
  unint64_t v86 = v4;
  uint64_t result = (uint64_t)sub_26273D9C0(0, v4);
  uint64_t v8 = v6[3];
  uint64_t v9 = v8 + 1;
  if (__OFADD__(v8, 1)) {
    goto LABEL_131;
  }
  uint64_t v10 = result;
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (v6[2] < v9 || (isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_262729D74(v9);
    char v6 = v95;
  }
  sub_26276BD28(v6 + 2, (uint64_t)(v6 + 5), v10, 0, 257);
  swift_release();
  if (!v6[3])
  {
    swift_release();
    return MEMORY[0x263F8EE78];
  }
  uint64_t v92 = 0;
  uint64_t v93 = (void *)MEMORY[0x263F8EE78];
  while (1)
  {
    unint64_t v13 = v95;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_262729850();
      unint64_t v13 = v95;
    }
    uint64_t v14 = v13[4];
    uint64_t v15 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    unint64_t v16 = &v13[3 * v14];
    uint64_t v18 = v16[5];
    unint64_t v17 = v16[6];
    int v19 = *((unsigned __int8 *)v16 + 56);
    int v20 = *((unsigned __int8 *)v16 + 57);
    uint64_t v21 = v13[3];
    if (v15 >= v13[2]) {
      uint64_t v15 = 0;
    }
    v13[4] = v15;
    if (__OFSUB__(v21, 1)) {
      goto LABEL_109;
    }
    v13[3] = v21 - 1;
    unint64_t v22 = *(void *)(v18 + 16);
    if (!v22) {
      goto LABEL_87;
    }
    if ((uint64_t)v22 > a4)
    {
      v94[0] = 0;
      swift_bridgeObjectRetain();
      uint64_t result = MEMORY[0x263E528E0](v94, 8);
      uint64_t v23 = ((unint64_t)v94[0] * (unsigned __int128)v22) >> 64;
      if (v22 > v94[0] * v22)
      {
        unint64_t v24 = -(uint64_t)v22 % v22;
        if (v24 > v94[0] * v22)
        {
          do
          {
            v94[0] = 0;
            uint64_t result = MEMORY[0x263E528E0](v94, 8);
          }
          while (v24 > v94[0] * v22);
          uint64_t v23 = ((unint64_t)v94[0] * (unsigned __int128)v22) >> 64;
        }
      }
      if (v23 >= *(void *)(v18 + 16)) {
        goto LABEL_110;
      }
      unint64_t v25 = *(void *)(v18 + 8 * v23 + 32);
      uint64_t result = swift_bridgeObjectRelease();
      if (v25 >= v86) {
        goto LABEL_111;
      }
      uint64_t v26 = *(void *)(a1 + 32 + 8 * v25);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v27 = (void *)sub_26274FF30(v18, a2, a3, v26, a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v27 = sub_26273600C(v27);
      }
      uint64_t v28 = v27[2];
      v94[0] = (uint64_t)(v27 + 4);
      v94[1] = v28;
      uint64_t result = sub_26274E4E8(v94);
      unint64_t v29 = v27[2];
      unint64_t v30 = v29 >> 1;
      if (v29 >> 1 >= v29) {
        goto LABEL_112;
      }
      if (v29 < 2) {
        goto LABEL_113;
      }
      int v31 = v27[2 * v30 + 5];
      uint64_t result = sub_262743238((uint64_t)(v27 + 4), 1, v29 | 1);
      unint64_t v32 = v27[2];
      if (v32 < v30) {
        goto LABEL_114;
      }
      uint64_t v33 = result;
      uint64_t v90 = sub_262743238((uint64_t)(v27 + 4), v30, (2 * v32) | 1);
      uint64_t v34 = v93[2];
      if (swift_isUniquelyReferenced_nonNull_native()) {
        uint64_t v35 = v93;
      }
      else {
        uint64_t v35 = sub_262727A78(0, v34 + 1, 1, v93);
      }
      unint64_t v37 = v35[2];
      unint64_t v36 = v35[3];
      if (v37 >= v36 >> 1) {
        uint64_t v35 = sub_262727A78((void *)(v36 > 1), v37 + 1, 1, v35);
      }
      v35[2] = v37 + 1;
      uint64_t v93 = v35;
      uint64_t v38 = v35 + 4;
      uint64_t v39 = (uint64_t)&v35[7 * v37 + 4];
      *(void *)uint64_t v39 = v25;
      *(_DWORD *)(v39 + 8) = v31;
      *(void *)(v39 + 16) = 0;
      *(unsigned char *)(v39 + 24) = 1;
      *(void *)(v39 + 32) = 0;
      *(unsigned char *)(v39 + 40) = 1;
      *(void *)(v39 + 48) = 0;
      uint64_t result = swift_bridgeObjectRelease();
      if ((v19 & 1) == 0)
      {
        if (v20)
        {
          if ((v17 & 0x8000000000000000) != 0) {
            goto LABEL_123;
          }
          if (v17 >= v93[2]) {
            goto LABEL_124;
          }
          uint64_t v40 = &v38[7 * v17];
          v40[2] = v34;
          char v41 = v40 + 3;
        }
        else
        {
          if ((v17 & 0x8000000000000000) != 0) {
            goto LABEL_125;
          }
          if (v17 >= v93[2]) {
            goto LABEL_126;
          }
          uint64_t v54 = &v38[7 * v17];
          v54[4] = v34;
          char v41 = v54 + 5;
        }
        *char v41 = 0;
      }
      float v55 = v95;
      uint64_t v56 = v95[3];
      uint64_t v57 = v56 + 1;
      if (__OFADD__(v56, 1)) {
        goto LABEL_115;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if (v55[2] < v57 || (result & 1) == 0)
      {
        uint64_t result = sub_262729D74(v57);
        float v55 = v95;
      }
      uint64_t v59 = v55[3];
      uint64_t v58 = v55[4];
      BOOL v62 = __OFADD__(v58, v59);
      uint64_t v60 = v58 + v59;
      if (v62) {
        goto LABEL_116;
      }
      if (v59 < 0)
      {
        if (v60 < 0)
        {
          uint64_t v64 = v55[2];
          BOOL v62 = __OFADD__(v60, v64);
          v60 += v64;
          if (v62) {
            goto LABEL_132;
          }
        }
      }
      else
      {
        uint64_t v61 = v55[2];
        BOOL v62 = __OFSUB__(v60, v61);
        uint64_t v63 = v60 - v61;
        if (v63 < 0 == v62)
        {
          uint64_t v60 = v63;
          if (v62) {
            goto LABEL_121;
          }
        }
      }
      BOOL v65 = &v55[3 * v60];
      v65[5] = v33;
      v65[6] = v34;
      *((_WORD *)v65 + 28) = 256;
      uint64_t v66 = v55[3];
      BOOL v62 = __OFADD__(v66, 1);
      uint64_t v67 = v66 + 1;
      if (v62) {
        goto LABEL_117;
      }
      v55[3] = v67;
      uint64_t v68 = v67 + 1;
      if (__OFADD__(v67, 1)) {
        goto LABEL_118;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if (v55[2] < v68 || (result & 1) == 0)
      {
        uint64_t result = sub_262729D74(v68);
        float v55 = v95;
      }
      uint64_t v70 = v55[3];
      uint64_t v69 = v55[4];
      BOOL v62 = __OFADD__(v69, v70);
      uint64_t v71 = v69 + v70;
      if (v62) {
        goto LABEL_119;
      }
      if (v70 < 0)
      {
        if (v71 < 0)
        {
          uint64_t v75 = v55[2];
          BOOL v62 = __OFADD__(v71, v75);
          v71 += v75;
          if (v62) {
            goto LABEL_133;
          }
        }
      }
      else
      {
        uint64_t v72 = v55[2];
        BOOL v73 = __OFSUB__(v71, v72);
        uint64_t v74 = v71 - v72;
        if (v74 < 0 == v73)
        {
          uint64_t v71 = v74;
          if (v73) {
            goto LABEL_122;
          }
        }
      }
      unint64_t v76 = &v55[3 * v71];
      v76[5] = v90;
      v76[6] = v34;
      *((_WORD *)v76 + 28) = 0;
      uint64_t v77 = v55[3];
      BOOL v62 = __OFADD__(v77, 1);
      uint64_t v78 = v77 + 1;
      if (v62) {
        goto LABEL_120;
      }
      v55[3] = v78;
LABEL_87:
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    unint64_t v42 = *(void *)(v18 + 32);
    if (v22 == 1)
    {
      uint64_t v43 = 0;
      float v44 = 0.0;
    }
    else
    {
      sub_26276FDB0();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      uint64_t v45 = swift_dynamicCastClass();
      if (!v45)
      {
        swift_bridgeObjectRelease();
        uint64_t v45 = MEMORY[0x263F8EE78];
      }
      uint64_t v46 = *(void *)(v45 + 16);
      swift_release();
      if (v46 == v22 - 1)
      {
        uint64_t v43 = swift_dynamicCastClass();
        uint64_t v47 = v92;
        if (!v43)
        {
          swift_bridgeObjectRelease();
          uint64_t v43 = MEMORY[0x263F8EE78];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v43 = sub_26273DA88(v18, v18 + 32, 1, (2 * v22) | 1);
        uint64_t v47 = v92;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v48 = sub_26274FDD8(v18, a2, a3, a1, v42);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v49 = *(void *)(v48 + 16);
      if (v49)
      {
        float v44 = *(float *)(v48 + 32);
        uint64_t v50 = v49 - 1;
        if (v50)
        {
          uint64_t v51 = (float *)(v48 + 36);
          do
          {
            float v52 = *v51++;
            float v53 = v52;
            if (v44 < v52) {
              float v44 = v53;
            }
            --v50;
          }
          while (v50);
        }
      }
      else
      {
        float v44 = 0.0;
      }
      uint64_t v92 = v47;
      swift_bridgeObjectRelease();
    }
    uint64_t v79 = v93[2];
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v80 = v93;
    }
    else {
      uint64_t v80 = sub_262727A78(0, v79 + 1, 1, v93);
    }
    unint64_t v82 = v80[2];
    unint64_t v81 = v80[3];
    if (v82 >= v81 >> 1) {
      uint64_t v80 = sub_262727A78((void *)(v81 > 1), v82 + 1, 1, v80);
    }
    v80[2] = v82 + 1;
    uint64_t v93 = v80;
    uint64_t v83 = v80 + 4;
    uint64_t v84 = (uint64_t)&v80[7 * v82 + 4];
    *(void *)uint64_t v84 = v42;
    *(float *)(v84 + 8) = v44;
    *(void *)(v84 + 16) = 0;
    *(unsigned char *)(v84 + 24) = 1;
    *(void *)(v84 + 32) = 0;
    *(unsigned char *)(v84 + 40) = 1;
    *(void *)(v84 + 48) = v43;
    uint64_t result = swift_bridgeObjectRelease();
    if (!v19)
    {
      if (v20)
      {
        if ((v17 & 0x8000000000000000) != 0) {
          goto LABEL_127;
        }
        if (v17 >= v93[2]) {
          goto LABEL_128;
        }
        uint64_t v85 = &v83[7 * v17];
        v85[2] = v79;
        *((unsigned char *)v85 + 24) = 0;
      }
      else
      {
        if ((v17 & 0x8000000000000000) != 0) {
          goto LABEL_129;
        }
        if (v17 >= v93[2]) {
          goto LABEL_130;
        }
        uint64_t v12 = &v83[7 * v17];
        void v12[4] = v79;
        *((unsigned char *)v12 + 40) = 0;
      }
    }
LABEL_12:
    if (!v95[3])
    {
      swift_release();
      return (uint64_t)v93;
    }
  }
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  __break(1u);
LABEL_115:
  __break(1u);
LABEL_116:
  __break(1u);
LABEL_117:
  __break(1u);
LABEL_118:
  __break(1u);
LABEL_119:
  __break(1u);
LABEL_120:
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  __break(1u);
LABEL_125:
  __break(1u);
LABEL_126:
  __break(1u);
LABEL_127:
  __break(1u);
LABEL_128:
  __break(1u);
LABEL_129:
  __break(1u);
LABEL_130:
  __break(1u);
LABEL_131:
  __break(1u);
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
  return result;
}

unint64_t sub_262750BE8()
{
  unint64_t result = qword_26A957AA0;
  if (!qword_26A957AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957AA0);
  }
  return result;
}

unint64_t sub_262750C3C()
{
  unint64_t result = qword_26A957AB8;
  if (!qword_26A957AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957AB8);
  }
  return result;
}

uint64_t sub_262750C90(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A957AA8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_262750D00()
{
  unint64_t result = qword_26A957AD0;
  if (!qword_26A957AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957AD0);
  }
  return result;
}

_UNKNOWN **sub_262750D54()
{
  return &protocol witness table for VPTree.Node;
}

uint64_t sub_262750D60(uint64_t a1)
{
  uint64_t result = sub_262750E38(&qword_26A957AD8);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for VPTree()
{
  return self;
}

uint64_t sub_262750DD0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_262750E38(&qword_26A957AE0);
  uint64_t result = sub_262750E38(&qword_26A957AE8);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_262750E38(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for VPTree();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for VPTree(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for VPTree);
}

uint64_t dispatch thunk of VPTree.__allocating_init(points:metric:maxNodePoints:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of VPTree.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t destroy for VPTree.Node()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for VPTree.Node(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VPTree.Node(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for VPTree.Node(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VPTree.Node(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 48);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for VPTree.Node(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)(result + 48) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VPTree.Node()
{
  return &type metadata for VPTree.Node;
}

unsigned char *storeEnumTagSinglePayload for VPTree.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x26275119CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VPTree.CodingKeys()
{
  return &type metadata for VPTree.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for VPTree.Node.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2627512A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VPTree.Node.CodingKeys()
{
  return &type metadata for VPTree.Node.CodingKeys;
}

unint64_t sub_2627512DC()
{
  unint64_t result = qword_26A957AF0;
  if (!qword_26A957AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957AF0);
  }
  return result;
}

unint64_t sub_262751334()
{
  unint64_t result = qword_26A957AF8;
  if (!qword_26A957AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957AF8);
  }
  return result;
}

unint64_t sub_26275138C()
{
  unint64_t result = qword_26A957B00;
  if (!qword_26A957B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957B00);
  }
  return result;
}

unint64_t sub_2627513E4()
{
  unint64_t result = qword_26A957B08;
  if (!qword_26A957B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957B08);
  }
  return result;
}

unint64_t sub_26275143C()
{
  unint64_t result = qword_26A957B10;
  if (!qword_26A957B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957B10);
  }
  return result;
}

unint64_t sub_262751494()
{
  unint64_t result = qword_26A957B18[0];
  if (!qword_26A957B18[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A957B18);
  }
  return result;
}

uint64_t sub_2627514EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VPTree.BuildTask(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for VPTree.BuildTask(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for VPTree.BuildTask(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 18)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VPTree.BuildTask(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 18) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VPTree.BuildTask()
{
  return &type metadata for VPTree.BuildTask;
}

uint64_t cosineSimilarityTensor(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_26276F4B0();
  uint64_t v67 = *(void *)(v6 - 8);
  uint64_t v68 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v60 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  unint64_t v11 = (char *)&v55 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  BOOL v62 = (char *)&v55 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v61 = (char *)&v55 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  BOOL v65 = (char *)&v55 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v64 = (char *)&v55 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v63 = (char *)&v55 - v20;
  uint64_t v21 = sub_26276F330();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  unint64_t v25 = (char *)&v55 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v28 = (char *)&v55 - v27;
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  int v31 = (char *)&v55 - v30;
  MEMORY[0x270FA5388](v29);
  uint64_t v33 = (char *)&v55 - v32;
  uint64_t v66 = a1;
  if (sub_26276F3E0() < 2 || (uint64_t v59 = a2, sub_26276F3E0() < 2))
  {
    uint64_t v38 = 1;
    uint64_t v42 = v67;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56))(a3, v38, 1, v68);
  }
  uint64_t v58 = a3;
  sub_26276F410();
  sub_262743A8C();
  uint64_t result = sub_26276F9B0();
  uint64_t v35 = v69;
  if (v69 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v69 = 1;
    uint64_t v70 = v35;
    sub_26276F9E0();
    unint64_t v36 = *(void (**)(char *, uint64_t))(v22 + 8);
    v36(v33, v21);
    sub_26276F410();
    uint64_t result = sub_26276F9B0();
    uint64_t v37 = v69;
    if (v69 >= 1)
    {
      uint64_t v57 = v11;
      uint64_t v38 = 1;
      uint64_t v69 = 1;
      uint64_t v70 = v37;
      sub_26276F9E0();
      v36(v28, v21);
      uint64_t v39 = sub_26276F320();
      uint64_t v40 = (void *)sub_26276F320();
      char v41 = sub_262742E20(v39, v40);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v36(v25, v21);
      uint64_t v56 = v36;
      v36(v31, v21);
      a3 = v58;
      uint64_t v42 = v67;
      if (v41)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A957310);
        uint64_t v43 = swift_allocObject();
        long long v55 = xmmword_2627710F0;
        *(_OWORD *)(v43 + 16) = xmmword_2627710F0;
        sub_26276F410();
        uint64_t v44 = sub_26276F350();
        uint64_t v45 = v56;
        v56(v33, v21);
        *(void *)(v43 + 32) = v44;
        *(void *)(v43 + 40) = -1;
        sub_26276F340();
        sub_26276F470();
        v45(v33, v21);
        uint64_t v46 = swift_allocObject();
        *(_OWORD *)(v46 + 16) = v55;
        sub_26276F410();
        uint64_t v47 = sub_26276F350();
        v45(v33, v21);
        *(void *)(v46 + 32) = v47;
        *(void *)(v46 + 40) = -1;
        sub_26276F340();
        sub_26276F470();
        v45(v33, v21);
        uint64_t v48 = v62;
        sub_26276F460();
        uint64_t v49 = v61;
        sub_26276F3D0();
        uint64_t v50 = *(void (**)(char *, uint64_t))(v42 + 8);
        uint64_t v51 = v68;
        v50(v48, v68);
        sub_26276F370();
        v50(v49, v51);
        float v52 = v57;
        sub_26276F460();
        sub_26276F3D0();
        v50(v52, v51);
        sub_26276F370();
        v50(v48, v51);
        sub_26276F480();
        sub_26276F3C0();
        v50(v52, v51);
        float v53 = v60;
        sub_26276F480();
        a3 = v58;
        uint64_t v54 = v64;
        sub_26276F3C0();
        v50(v53, v51);
        sub_26276F4E0();
        v50(v52, v51);
        v50(v48, v51);
        v50(v49, v51);
        v50(v65, v51);
        v50(v54, v51);
        v50(v63, v51);
        uint64_t v38 = 0;
      }
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56))(a3, v38, 1, v68);
    }
  }
  __break(1u);
  return result;
}

uint64_t l2Norm(_:alongAxes:)()
{
  uint64_t v0 = sub_26276F4B0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v9 - v5;
  sub_26276F460();
  sub_26276F3D0();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v4, v0);
  sub_26276F370();
  return ((uint64_t (*)(char *, uint64_t))v7)(v6, v0);
}

uint64_t sub_262751EB4(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a5;
  uint64_t v30 = a8;
  uint64_t v10 = v9;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v28 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v40 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v36 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v15 = (char *)&v26 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v33 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v26 - v18;
  uint64_t v34 = v8;
  uint64_t v20 = sub_26276F9A0();
  if (!v20) {
    return sub_26276F820();
  }
  uint64_t v21 = v20;
  uint64_t v27 = v15;
  uint64_t v43 = sub_26276FB40();
  uint64_t v35 = sub_26276FB50();
  sub_26276FB20();
  char v41 = v19;
  uint64_t result = sub_26276F990();
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v23 = (void (**)(char *))(v36 + 2);
    ++v36;
    uint64_t v37 = v23;
    uint64_t v24 = v27;
    while (1)
    {
      unint64_t v25 = (void (*)(char *, void))sub_26276F9F0();
      (*v37)(v24);
      v25(v42, 0);
      v38(v24, v40);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v36)(v24, AssociatedTypeWitness);
      sub_26276FB30();
      sub_26276F9C0();
      if (!--v21)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
        return v43;
      }
    }
    (*v36)(v24, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v40, v29);
  }
  return result;
}

uint64_t DirectedWeightedGraph.__allocating_init(name:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  DirectedWeightedGraph.init(name:)(a1, a2);
  return v4;
}

uint64_t DirectedEdge.from.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t DirectedEdge.from.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*DirectedEdge.from.modify())()
{
  return nullsub_1;
}

uint64_t DirectedEdge.to.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t DirectedEdge.to.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 52), a1);
}

uint64_t (*DirectedEdge.to.modify())()
{
  return nullsub_1;
}

uint64_t DirectedEdge.hash(into:)()
{
  return sub_26276F640();
}

uint64_t static DirectedEdge.== infix(_:_:)()
{
  if (sub_26276F650())
  {
    type metadata accessor for DirectedEdge();
    char v0 = sub_26276F650();
  }
  else
  {
    char v0 = 0;
  }
  return v0 & 1;
}

BOOL sub_262752520(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_262752530()
{
  return sub_26276FE10();
}

uint64_t sub_262752558(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1836020326 && a2 == 0xE400000000000000;
  if (v2 || (sub_26276FDA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 28532 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_26276FDA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_262752624(char a1)
{
  if (a1) {
    return 28532;
  }
  else {
    return 1836020326;
  }
}

uint64_t sub_262752648(unsigned __int8 *a1, unsigned __int8 *a2, void *a3, uint64_t a4)
{
  return sub_262755128(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_262752520);
}

uint64_t sub_262752664(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_262755188(a1, a2, a3, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_262752530);
}

uint64_t sub_26275267C(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_2627551BC(a1, a2, a3, (void (*)(unsigned char *, void, void, void, void, void))sub_262752530);
}

uint64_t sub_262752694(void *a1, uint64_t a2)
{
  return sub_262755230(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_262752624);
}

uint64_t sub_2627526AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_262755264(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void))sub_262752558, a4);
}

uint64_t sub_2627526C4@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_2627552A0(a1, (uint64_t (*)(void, void, void, void))sub_26275934C, a2);
}

uint64_t sub_2627526DC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_262752730(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t DirectedEdge.encode(to:)(void *a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 32);
  v10[0] = *(_OWORD *)(a2 + 16);
  v10[1] = v3;
  long long v11 = v10[0];
  long long v12 = v3;
  type metadata accessor for DirectedEdge.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_26276FD40();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v10 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_26276FE40();
  LOBYTE(v11) = 0;
  uint64_t v8 = v13;
  sub_26276FD20();
  if (!v8)
  {
    LOBYTE(v11) = 1;
    sub_26276FD20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DirectedEdge.hashValue.getter()
{
  return sub_26276FE20();
}

uint64_t DirectedEdge.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v33 = a6;
  uint64_t v35 = *(void *)(a2 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](a1);
  uint64_t v34 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v38 = (char *)&v31 - v13;
  uint64_t v41 = v14;
  uint64_t v42 = v15;
  uint64_t v43 = v16;
  uint64_t v44 = v17;
  type metadata accessor for DirectedEdge.CodingKeys();
  swift_getWitnessTable();
  uint64_t v40 = sub_26276FCB0();
  uint64_t v37 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v19 = (char *)&v31 - v18;
  uint64_t v39 = a2;
  uint64_t v41 = a2;
  uint64_t v42 = a3;
  uint64_t v36 = a3;
  uint64_t v43 = a4;
  uint64_t v44 = a5;
  uint64_t v20 = type metadata accessor for DirectedEdge();
  uint64_t v32 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v31 - v21;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v23 = v45;
  sub_26276FE30();
  if (v23) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v24 = v35;
  LOBYTE(v41) = 0;
  sub_26276FC90();
  unint64_t v25 = *(char **)(v24 + 32);
  uint64_t v45 = v22;
  uint64_t v26 = v38;
  uint64_t v38 = v25;
  ((void (*)(char *, char *, uint64_t))v25)(v22, v26, v39);
  LOBYTE(v41) = 1;
  uint64_t v27 = v34;
  sub_26276FC90();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v19, v40);
  uint64_t v28 = v45;
  ((void (*)(char *, char *, uint64_t))v38)(&v45[*(int *)(v20 + 52)], v27, v39);
  uint64_t v29 = v32;
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v33, v28, v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v28, v20);
}

uint64_t sub_262752DB4()
{
  return sub_26276FE20();
}

uint64_t sub_262752DF8@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return DirectedEdge.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], a3);
}

uint64_t sub_262752E1C(void *a1, uint64_t a2)
{
  return DirectedEdge.encode(to:)(a1, a2);
}

uint64_t sub_262752E34()
{
  return static DirectedEdge.== infix(_:_:)();
}

uint64_t DirectedEdge.description.getter()
{
  return 0;
}

uint64_t sub_262752F08()
{
  uint64_t v0 = sub_262759354();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_262752F40(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_262752F94()
{
  sub_262759318();
  return swift_bridgeObjectRetain();
}

uint64_t sub_262752FBC(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t DirectedIndexGraph.__allocating_init(name:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  DirectedIndexGraph.init(name:)(a1, a2);
  return v4;
}

void *DirectedIndexGraph.init(name:)(uint64_t a1, uint64_t a2)
{
  sub_26276F8A0();
  swift_getTupleTypeMetadata2();
  sub_26276F820();
  uint64_t v5 = sub_26276F5C0();
  v2[3] = a2;
  v2[4] = v5;
  v2[2] = a1;
  return v2;
}

uint64_t sub_262753100()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = sub_26276F8A0();
  uint64_t v4 = *(void *)(v1 + 104);
  uint64_t v5 = swift_bridgeObjectRetain();
  LOBYTE(v4) = MEMORY[0x263E51A50](v5, v2, v3, v4);
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_2627531B0()
{
  return sub_26276F8B0();
}

uint64_t sub_26275327C(uint64_t a1)
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = *(void *)(*v1 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v59 = (char *)&v45 - v5;
  uint64_t v58 = sub_26276F8A0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v62 = sub_26276FA60();
  uint64_t v7 = *(void *)(v62 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v62);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v64 = (char *)&v45 - v11;
  uint64_t v12 = v2[11];
  uint64_t v13 = v2[12];
  uint64_t v14 = v2[13];
  uint64_t v65 = v3;
  uint64_t v68 = v3;
  uint64_t v69 = v12;
  uint64_t v56 = v13;
  uint64_t v57 = v12;
  uint64_t v70 = v13;
  uint64_t v71 = v14;
  uint64_t v55 = v14;
  uint64_t v54 = type metadata accessor for DirectedEdge();
  uint64_t v72 = sub_26276F820();
  swift_beginAccess();
  uint64_t v15 = v1[4];
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v47 = v15 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(v15 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  uint64_t v63 = TupleTypeMetadata2;
  uint64_t v61 = TupleTypeMetadata2 - 8;
  uint64_t v49 = v4 + 16;
  uint64_t v60 = (void (**)(char *, char *, uint64_t))(v7 + 32);
  float v53 = (uint64_t (**)(char *, char *, uint64_t))(v4 + 32);
  uint64_t v50 = v4;
  float v52 = (uint64_t (**)(char *, uint64_t))(v4 + 8);
  int64_t v48 = (unint64_t)(v17 + 63) >> 6;
  int64_t v46 = v48 - 1;
  uint64_t v51 = v15;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v21 = 0;
  uint64_t v22 = v65;
  uint64_t v23 = v58;
  if (!v19) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v24 = __clz(__rbit64(v19));
  uint64_t v25 = (v19 - 1) & v19;
  unint64_t v26 = v24 | (v21 << 6);
  uint64_t v27 = v63;
  uint64_t v28 = v64;
LABEL_5:
  uint64_t v29 = v51;
  (*(void (**)(char *, unint64_t, uint64_t))(v50 + 16))(v10, *(void *)(v51 + 48) + *(void *)(v50 + 72) * v26, v65);
  *(void *)&v10[*(int *)(v27 + 48)] = *(void *)(*(void *)(v29 + 56) + 8 * v26);
  uint64_t v30 = *(void *)(v27 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v10, 0, 1, v27);
  swift_bridgeObjectRetain();
  while (1)
  {
    (*v60)(v28, v10, v62);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v27) == 1)
    {
      swift_release();
      return v72;
    }
    uint64_t v33 = *(int *)(v27 + 48);
    unint64_t v66 = v25;
    int64_t v34 = v21;
    uint64_t v35 = v10;
    uint64_t v36 = *(void *)&v28[v33];
    uint64_t v37 = v59;
    uint64_t v38 = (*v53)(v59, v28, v22);
    uint64_t v67 = v36;
    MEMORY[0x270FA5388](v38);
    uint64_t v39 = v57;
    *(&v45 - 6) = v22;
    *(&v45 - 5) = v39;
    uint64_t v40 = v55;
    *(&v45 - 4) = v56;
    *(&v45 - 3) = v40;
    *(&v45 - 2) = (uint64_t)v37;
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v43 = sub_262751EB4((void (*)(char *, char *))sub_262759388, (uint64_t)(&v45 - 8), v23, v54, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v42);
    uint64_t v10 = v35;
    int64_t v21 = v34;
    unint64_t v19 = v66;
    swift_bridgeObjectRelease();
    uint64_t v67 = v43;
    sub_26276F8A0();
    swift_getWitnessTable();
    sub_26276F860();
    uint64_t result = (*v52)(v37, v22);
    if (v19) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v31 = v21 + 1;
    uint64_t v28 = v64;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    uint64_t v27 = v63;
    if (v31 < v48)
    {
      unint64_t v32 = *(void *)(v47 + 8 * v31);
      if (v32) {
        goto LABEL_9;
      }
      v21 += 2;
      if (v31 + 1 >= v48)
      {
        int64_t v21 = v31;
        goto LABEL_14;
      }
      unint64_t v32 = *(void *)(v47 + 8 * v21);
      if (v32)
      {
        ++v31;
LABEL_9:
        uint64_t v25 = (v32 - 1) & v32;
        unint64_t v26 = __clz(__rbit64(v32)) + (v31 << 6);
        int64_t v21 = v31;
        goto LABEL_5;
      }
      int64_t v44 = v31 + 2;
      if (v31 + 2 < v48) {
        break;
      }
    }
LABEL_14:
    uint64_t v30 = *(void *)(v63 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v10, 1, 1, v63);
    uint64_t v25 = 0;
  }
  unint64_t v32 = *(void *)(v47 + 8 * v44);
  if (v32)
  {
    v31 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v31 = v44 + 1;
    if (__OFADD__(v44, 1)) {
      break;
    }
    if (v31 >= v48)
    {
      int64_t v21 = v46;
      goto LABEL_14;
    }
    unint64_t v32 = *(void *)(v47 + 8 * v31);
    ++v44;
    if (v32) {
      goto LABEL_9;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_26275390C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v20 = a4;
  uint64_t v21 = a5;
  uint64_t v10 = *(void *)(a2 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](a1);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v20 - v14;
  uint64_t v16 = *(void (**)(char *))(v10 + 16);
  v16((char *)&v20 - v14);
  ((void (*)(char *, uint64_t, uint64_t))v16)(v13, a1, a2);
  uint64_t v17 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  v17(a6, v15, a2);
  uint64_t v22 = a2;
  uint64_t v23 = a3;
  uint64_t v24 = v20;
  uint64_t v25 = v21;
  uint64_t v18 = type metadata accessor for DirectedEdge();
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v17)(a6 + *(int *)(v18 + 52), v13, a2);
}

uint64_t sub_262753A7C()
{
  return sub_26276F750() & 1;
}

BOOL sub_262753B58(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = &v9[-v5];
  char v7 = sub_262753A7C();
  if ((v7 & 1) == 0)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    uint64_t v10 = sub_26276F820();
    swift_beginAccess();
    sub_26276F8A0();
    sub_26276F5F0();
    sub_26276F620();
    swift_endAccess();
  }
  return (v7 & 1) == 0;
}

uint64_t sub_262753CD0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v71 = *v1;
  uint64_t v4 = *(void *)(v71 + 80);
  uint64_t v5 = sub_26276FA60();
  uint64_t v65 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v51[-v7];
  uint64_t v9 = *(void *)(v4 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v6);
  uint64_t v12 = &v51[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = &v51[-v14];
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = &v51[-v16];
  int v18 = sub_262753A7C();
  if ((v18 & 1) == 0) {
    return v18 & 1;
  }
  int v52 = v18;
  float v53 = v8;
  uint64_t v58 = v5;
  unint64_t v19 = v1 + 4;
  swift_beginAccess();
  uint64_t v20 = a1;
  uint64_t v21 = sub_26276F8A0();
  uint64_t v22 = *(void *)(v71 + 104);
  uint64_t v23 = sub_26276F5F0();
  uint64_t v62 = v20;
  uint64_t v56 = v23;
  sub_26276F5B0();
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v67 = v19;
  swift_beginAccess();
  uint64_t v59 = v2;
  swift_bridgeObjectRetain();
  uint64_t v69 = v21;
  uint64_t v24 = v22;
  uint64_t result = sub_26276FB70();
  uint64_t v68 = v76;
  uint64_t v61 = v77;
  uint64_t v71 = v79;
  int64_t v63 = (unint64_t)(v78 + 64) >> 6;
  uint64_t v70 = v9 + 16;
  uint64_t v66 = v9 + 32;
  unint64_t v26 = v80;
  uint64_t v64 = (uint64_t (**)(unsigned char *, uint64_t))(v9 + 8);
  uint64_t v55 = (void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  uint64_t v54 = (uint64_t (**)(unsigned char *, uint64_t))(v65 + 8);
  uint64_t v27 = v12;
  uint64_t v57 = v12;
  uint64_t v28 = v9;
  uint64_t v65 = v22;
  if (v80) {
    goto LABEL_5;
  }
LABEL_6:
  int64_t v32 = v71 + 1;
  uint64_t v31 = v69;
  if (!__OFADD__(v71, 1))
  {
    if (v32 < v63)
    {
      unint64_t v33 = *(void *)(v61 + 8 * v32);
      uint64_t v34 = v71 + 1;
      if (v33) {
        goto LABEL_21;
      }
      uint64_t v34 = v71 + 2;
      if (v71 + 2 < v63)
      {
        unint64_t v33 = *(void *)(v61 + 8 * v34);
        if (v33) {
          goto LABEL_21;
        }
        uint64_t v34 = v71 + 3;
        if (v71 + 3 < v63)
        {
          unint64_t v33 = *(void *)(v61 + 8 * v34);
          if (v33) {
            goto LABEL_21;
          }
          uint64_t v34 = v71 + 4;
          if (v71 + 4 < v63)
          {
            unint64_t v33 = *(void *)(v61 + 8 * v34);
            if (v33) {
              goto LABEL_21;
            }
            uint64_t v34 = v71 + 5;
            if (v71 + 5 < v63)
            {
              unint64_t v33 = *(void *)(v61 + 8 * v34);
              if (!v33)
              {
                uint64_t v35 = v71 + 6;
                do
                {
                  if (v63 == v35) {
                    goto LABEL_29;
                  }
                  unint64_t v33 = *(void *)(v61 + 8 * v35++);
                }
                while (!v33);
                uint64_t v34 = v35 - 1;
              }
LABEL_21:
              unint64_t v26 = (v33 - 1) & v33;
              unint64_t v30 = __clz(__rbit64(v33)) + (v34 << 6);
              uint64_t v71 = v34;
              while (1)
              {
                uint64_t v36 = *(void (**)(unsigned char *, unint64_t, uint64_t))(v28 + 16);
                v36(v17, *(void *)(v68 + 48) + *(void *)(v28 + 72) * v30, v4);
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v28 + 32))(v15, v17, v4);
                uint64_t v37 = v67;
                swift_beginAccess();
                uint64_t v38 = *v37;
                swift_bridgeObjectRetain();
                MEMORY[0x263E51A80](v72, v15, v38, v4, v31, v24);
                swift_bridgeObjectRelease();
                if (!v72[0]
                  || (uint64_t v75 = v72[0], swift_getWitnessTable(),
                                    sub_26276F9D0(),
                                    swift_bridgeObjectRelease(),
                                    (v74 & 1) != 0))
                {
                  uint64_t result = (*v64)(v15, v4);
                  uint64_t v24 = v65;
                  if (!v26) {
                    goto LABEL_6;
                  }
                }
                else
                {
                  v36(v27, (unint64_t)v15, v4);
                  uint64_t v39 = sub_262747AC0();
                  uint64_t v40 = (void (*)(void *, void))sub_26276F600();
                  if (*v41)
                  {
                    uint64_t v60 = v39;
                    uint64_t v42 = v15;
                    uint64_t v43 = v17;
                    uint64_t v44 = v28;
                    uint64_t v45 = v27;
                    int64_t v46 = v53;
                    sub_26276F880();
                    v40(v72, 0);
                    uint64_t v47 = *v64;
                    int64_t v48 = v45;
                    uint64_t v28 = v44;
                    uint64_t v17 = v43;
                    uint64_t v15 = v42;
                    (*v64)(v48, v4);
                    ((void (*)(uint64_t *, void))v60)(&v73, 0);
                    v47(v42, v4);
                    uint64_t v49 = 0;
                  }
                  else
                  {
                    v40(v72, 0);
                    uint64_t v50 = *v64;
                    (*v64)(v27, v4);
                    ((void (*)(uint64_t *, void))v39)(&v73, 0);
                    v50(v15, v4);
                    uint64_t v49 = 1;
                    int64_t v46 = v53;
                  }
                  uint64_t v24 = v65;
                  (*v55)(v46, v49, 1, v4);
                  uint64_t result = (*v54)(v46, v58);
                  uint64_t v27 = v57;
                  if (!v26) {
                    goto LABEL_6;
                  }
                }
LABEL_5:
                unint64_t v29 = __clz(__rbit64(v26));
                v26 &= v26 - 1;
                unint64_t v30 = v29 | (v71 << 6);
                uint64_t v31 = v69;
              }
            }
          }
        }
      }
    }
LABEL_29:
    swift_release();
    LOBYTE(v18) = v52;
    return v18 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_262754470(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  uint64_t v4 = v1[4];
  uint64_t v5 = *(void *)(v3 + 80);
  uint64_t v6 = sub_26276F8A0();
  uint64_t v7 = *(void *)(v3 + 104);
  swift_bridgeObjectRetain();
  MEMORY[0x263E51A80](&v9, a1, v4, v5, v6, v7);
  swift_bridgeObjectRelease();
  uint64_t result = v9;
  if (!v9) {
    return sub_26276F820();
  }
  return result;
}

uint64_t sub_262754538()
{
  swift_beginAccess();
  sub_26276F8A0();
  sub_26276F5F0();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  char v0 = sub_26276F740();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_26275469C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = sub_26276F650();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a4, a5);
  if (v11)
  {
    v14[1] = a2;
    sub_26276F8A0();
    swift_getWitnessTable();
    char v12 = sub_26276F750();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, a5);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, a5);
    char v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_262754818(uint64_t a1)
{
  uint64_t v3 = (void *)*v1;
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  char v11 = (char *)&v31 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v31 - v12;
  if ((sub_262753A7C() & 1) == 0 || (sub_262753A7C() & 1) == 0) {
    return 0;
  }
  unint64_t v33 = v8;
  uint64_t v38 = v5;
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v14(v13, a1, v4);
  uint64_t v15 = (void *)swift_allocObject();
  void v15[2] = v4;
  uint64_t v16 = v3[11];
  v15[3] = v16;
  uint64_t v17 = v11;
  uint64_t v18 = v3[12];
  v15[4] = v18;
  uint64_t v19 = v3[13];
  v15[5] = v19;
  uint64_t v36 = v17;
  uint64_t v34 = v5 + 16;
  int64_t v32 = (void (*)(char *, char *, uint64_t))v14;
  ((void (*)(void))v14)();
  uint64_t v20 = v19;
  uint64_t v21 = v1 + 4;
  swift_beginAccess();
  uint64_t v22 = (void *)swift_allocObject();
  v22[2] = v4;
  v22[3] = v16;
  v22[4] = v18;
  v22[5] = v20;
  v22[6] = sub_262759450;
  v22[7] = v15;
  uint64_t v37 = v15;
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v39 = v1[4];
  uint64_t v23 = v39;
  v1[4] = 0x8000000000000000;
  sub_262759134((uint64_t)v13, v4, v20);
  if (__OFADD__(*(void *)(v23 + 16), (v24 & 1) == 0))
  {
    __break(1u);
LABEL_12:
    uint64_t result = sub_26276FDE0();
    __break(1u);
    return result;
  }
  char v25 = v24;
  uint64_t v35 = sub_26276F8A0();
  sub_26276FB90();
  char v26 = sub_26276FB60();
  uint64_t v27 = v39;
  if (v26)
  {
    sub_262759134((uint64_t)v13, v4, v20);
    if ((v25 & 1) != (v28 & 1)) {
      goto LABEL_12;
    }
  }
  uint64_t *v21 = v27;
  swift_bridgeObjectRelease();
  if (v25)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v30 = swift_bridgeObjectRetain();
    uint64_t v39 = ((uint64_t (*)(uint64_t))v22[6])(v30);
    v32(v33, v13, v4);
    sub_26276FB80();
  }
  swift_bridgeObjectRelease();
  sub_26276F870();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v4);
  swift_endAccess();
  swift_release();
  swift_release();
  return 1;
}

uint64_t sub_262754BCC(uint64_t a1)
{
  uint64_t v35 = *v1;
  uint64_t v3 = *(void *)(v35 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v29 - v5;
  uint64_t v7 = sub_26276FA60();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v29 - v9;
  if ((sub_262753A7C() & 1) == 0) {
    return 0;
  }
  unint64_t v33 = v6;
  uint64_t v34 = a1;
  uint64_t v11 = v35;
  uint64_t v31 = v10;
  uint64_t v32 = v8;
  if ((sub_262753A7C() & 1) == 0) {
    return 0;
  }
  uint64_t v30 = v4;
  swift_beginAccess();
  uint64_t v12 = v1[4];
  uint64_t v13 = v3;
  uint64_t v14 = sub_26276F8A0();
  uint64_t v15 = *(void *)(v11 + 104);
  swift_bridgeObjectRetain();
  uint64_t v16 = v34;
  MEMORY[0x263E51A80](&v37, v34, v12, v13, v14, v15);
  swift_bridgeObjectRelease();
  if (!v37) {
    return 0;
  }
  v36[0] = v37;
  swift_getWitnessTable();
  sub_26276F9D0();
  swift_bridgeObjectRelease();
  if (v38) {
    return 0;
  }
  uint64_t v19 = v30;
  uint64_t v20 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v33, v16, v13);
  uint64_t v21 = sub_262747AC0();
  sub_26276F5F0();
  uint64_t v22 = (void (*)(void *, void))sub_26276F600();
  if (*v23)
  {
    char v24 = v31;
    sub_26276F880();
    v22(v36, 0);
    char v25 = v20;
    char v26 = v24;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v25, v13);
    ((void (*)(uint64_t *, void))v21)(&v37, 0);
    uint64_t v27 = 0;
  }
  else
  {
    v22(v36, 0);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v13);
    ((void (*)(uint64_t *, void))v21)(&v37, 0);
    uint64_t v27 = 1;
    char v26 = v31;
  }
  uint64_t v28 = v32;
  uint64_t v17 = 1;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v26, v27, 1, v13);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v26, v7);
  return v17;
}

uint64_t sub_262754FA4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_26276FDA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x636E6563616A6461 && a2 == 0xE900000000000079)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_26276FDA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_262755094()
{
  return sub_26276FE20();
}

uint64_t sub_2627550DC(char a1)
{
  if (a1) {
    return 0x636E6563616A6461;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_262755110(unsigned __int8 *a1, unsigned __int8 *a2, void *a3, uint64_t a4)
{
  return sub_262755128(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_26275A928);
}

uint64_t sub_262755128(unsigned __int8 *a1, unsigned __int8 *a2, void *a3, uint64_t a4, uint64_t (*a5)(void, void, void, void, void, void))
{
  return a5(*a1, *a2, a3[2], a3[3], a3[4], a3[5]);
}

uint64_t sub_262755148()
{
  return sub_262755094();
}

uint64_t sub_262755170(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_262755188(a1, a2, a3, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_26275A920);
}

uint64_t sub_262755188(uint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(uint64_t, void, void, void, void, void))
{
  return a4(a1, *v4, a2[2], a2[3], a2[4], a2[5]);
}

uint64_t sub_2627551A4(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_2627551BC(a1, a2, a3, (void (*)(unsigned char *, void, void, void, void, void))sub_26275A920);
}

uint64_t sub_2627551BC(uint64_t a1, void *a2, uint64_t a3, void (*a4)(unsigned char *, void, void, void, void, void))
{
  sub_26276FE00();
  a4(v8, *v4, a2[2], a2[3], a2[4], a2[5]);
  return sub_26276FE20();
}

uint64_t sub_262755218(void *a1, uint64_t a2)
{
  return sub_262755230(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_2627550DC);
}

uint64_t sub_262755230(void *a1, uint64_t a2, uint64_t (*a3)(void, void, void, void, void))
{
  return a3(*v3, a1[2], a1[3], a1[4], a1[5]);
}

uint64_t sub_26275524C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_262755264(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void))sub_262754FA4, a4);
}

uint64_t sub_262755264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, void, void, void, void)@<X4>, unsigned char *a5@<X8>)
{
  uint64_t result = a4(a1, a2, a3[2], a3[3], a3[4], a3[5]);
  *a5 = result;
  return result;
}

uint64_t sub_2627552A0@<X0>(void *a1@<X1>, uint64_t (*a2)(void, void, void, void)@<X3>, unsigned char *a3@<X8>)
{
  uint64_t result = a2(a1[2], a1[3], a1[4], a1[5]);
  *a3 = result;
  return result;
}

uint64_t sub_2627552DC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_262755330(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t DirectedIndexGraph.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DirectedIndexGraph.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0228](v0, 40, 7);
}

uint64_t sub_2627553EC(void *a1)
{
  BOOL v2 = v1;
  uint64_t v4 = *(void *)(*v2 + 96);
  uint64_t v5 = *(void *)(*v2 + 104);
  long long v15 = *(_OWORD *)(*v2 + 80);
  long long v23 = v15;
  uint64_t v16 = v5;
  uint64_t v17 = v4;
  uint64_t v24 = v4;
  uint64_t v25 = v5;
  type metadata accessor for DirectedIndexGraph.CodingKeys();
  swift_getWitnessTable();
  uint64_t v6 = sub_26276FD40();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_26276FE40();
  swift_beginAccess();
  LOBYTE(v23) = 0;
  swift_bridgeObjectRetain();
  uint64_t v10 = v18;
  sub_26276FCF0();
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = v7;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v26 = v2[4];
    char v22 = 1;
    sub_26276F8A0();
    sub_26276F5F0();
    uint64_t v13 = v17;
    uint64_t v21 = v17;
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v19 = v13;
    uint64_t v20 = WitnessTable;
    swift_getWitnessTable();
    sub_26276FD20();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v9, v6);
  }
}

uint64_t DirectedIndexGraph.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  DirectedIndexGraph.init(from:)(a1);
  return v2;
}

void *DirectedIndexGraph.init(from:)(void *a1)
{
  uint64_t v3 = *(void *)(*v1 + 80);
  uint64_t v4 = *(void *)(*v1 + 88);
  uint64_t v5 = *(void *)(*v1 + 96);
  uint64_t v6 = *(void *)(*v1 + 104);
  uint64_t v41 = v3;
  uint64_t v42 = v4;
  uint64_t v34 = v4;
  uint64_t v32 = v5;
  uint64_t v43 = v5;
  uint64_t v44 = v6;
  type metadata accessor for DirectedIndexGraph.CodingKeys();
  swift_getWitnessTable();
  uint64_t v7 = sub_26276FCB0();
  uint64_t v30 = *(void *)(v7 - 8);
  uint64_t v31 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v29 - v8;
  sub_26276F8A0();
  swift_getTupleTypeMetadata2();
  sub_26276F820();
  uint64_t v33 = v6;
  uint64_t v10 = sub_26276F5C0();
  uint64_t v37 = v1;
  v1[4] = v10;
  uint64_t v11 = v1 + 4;
  uint64_t v12 = a1[3];
  uint64_t v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  uint64_t v13 = v9;
  uint64_t v14 = v36;
  sub_26276FE30();
  if (v14)
  {
    uint64_t v19 = v34;
    uint64_t v18 = (uint64_t)v35;
    uint64_t v21 = v32;
    uint64_t v20 = v33;
    uint64_t v28 = v37;
    swift_bridgeObjectRelease();
    uint64_t v41 = v3;
    uint64_t v42 = v19;
    uint64_t v43 = v21;
    uint64_t v44 = v20;
    type metadata accessor for DirectedIndexGraph();
    swift_deallocPartialClassInstance();
    __swift_destroy_boxed_opaque_existential_1(v18);
  }
  else
  {
    uint64_t v16 = v30;
    uint64_t v15 = v31;
    LOBYTE(v41) = 0;
    uint64_t v17 = sub_26276FC60();
    long long v23 = v37;
    v37[2] = v17;
    v23[3] = v24;
    sub_26276F5F0();
    LOBYTE(v41) = 1;
    uint64_t v25 = v34;
    uint64_t v40 = v34;
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v38 = v25;
    uint64_t v39 = WitnessTable;
    swift_getWitnessTable();
    sub_26276FC90();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    uint64_t v27 = v45;
    swift_beginAccess();
    *uint64_t v11 = v27;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    return v37;
  }
  return v28;
}

uint64_t sub_262755AC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 272))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_262755AFC()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 264))();
}

uint64_t sub_262755B48()
{
  sub_2627594D0();
  return swift_bridgeObjectRetain();
}

uint64_t sub_262755B70(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t DirectedWeightedGraph.init(name:)(uint64_t a1, uint64_t a2)
{
  swift_retain();
  type metadata accessor for DirectedEdge();
  swift_getTupleTypeMetadata2();
  sub_26276F820();
  swift_getWitnessTable();
  *(void *)(v2 + 40) = sub_26276F5C0();
  swift_release();
  DirectedIndexGraph.init(name:)(a1, a2);
  return v2;
}

uint64_t type metadata accessor for DirectedEdge()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for DirectedEdge.CodingKeys()
{
  return swift_getGenericMetadata();
}

BOOL sub_262755D34()
{
  uint64_t v0 = sub_26276FC20();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

uint64_t sub_262755D7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D338];
  return MEMORY[0x270F9F940](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_262755DF0(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v5);
}

uint64_t sub_262755E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_262755ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v7);
}

BOOL sub_262755F3C@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_262755D34();
  *a1 = result;
  return result;
}

void sub_262755F90(void *a1@<X8>)
{
  *a1 = 0x756C615665676465;
  a1[1] = 0xEA00000000007365;
}

uint64_t sub_262755FB0()
{
  return 0x756C615665676465;
}

BOOL sub_262755FCC@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_262755D34();
  *a1 = result;
  return result;
}

uint64_t sub_262756018@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_26275A8B4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_262756058(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_2627560AC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_262756100(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_262756150(a1);
  return v2;
}

void *sub_262756150(void *a1)
{
  uint64_t v2 = v1;
  int64_t v48 = a1;
  uint64_t v4 = *(void *)(*v1 + 288);
  uint64_t v5 = *(void *)(*v1 + 296);
  uint64_t v6 = *(void *)(*v1 + 304);
  uint64_t v7 = *(void *)(*v1 + 312);
  uint64_t v8 = *(void *)(*v1 + 320);
  uint64_t v9 = *(void *)(*v1 + 328);
  uint64_t v41 = *(void *)(*v1 + 280);
  uint64_t v3 = v41;
  uint64_t v42 = v4;
  uint64_t v43 = v5;
  uint64_t v44 = v6;
  uint64_t v45 = v7;
  uint64_t v46 = v8;
  uint64_t v35 = v8;
  uint64_t v30 = v9;
  uint64_t v47 = v9;
  type metadata accessor for DirectedWeightedGraph.CodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v29 = sub_26276FCB0();
  uint64_t v27 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v11 = (char *)&v26 - v10;
  swift_retain();
  uint64_t v33 = v5;
  uint64_t v34 = v3;
  uint64_t v41 = v3;
  uint64_t v42 = v5;
  uint64_t v31 = v7;
  uint64_t v32 = v6;
  uint64_t v43 = v6;
  uint64_t v44 = v7;
  type metadata accessor for DirectedEdge();
  swift_getTupleTypeMetadata2();
  sub_26276F820();
  swift_getWitnessTable();
  uint64_t v36 = v4;
  v1[5] = sub_26276F5C0();
  __swift_project_boxed_opaque_existential_1(v48, v48[3]);
  uint64_t v28 = v11;
  uint64_t v12 = v38;
  sub_26276FE30();
  if (v12)
  {
    swift_release();
    uint64_t v14 = v33;
    uint64_t v13 = v34;
    uint64_t v16 = v35;
    uint64_t v15 = v36;
    uint64_t v21 = v31;
    uint64_t v20 = v32;
    uint64_t v22 = v30;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
    swift_bridgeObjectRelease();
    uint64_t v41 = v13;
    uint64_t v42 = v15;
    uint64_t v43 = v14;
    uint64_t v44 = v20;
    uint64_t v45 = v21;
    uint64_t v46 = v16;
    uint64_t v47 = v22;
    type metadata accessor for DirectedWeightedGraph();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v17 = v27;
    sub_26276F5F0();
    uint64_t v39 = swift_getWitnessTable();
    uint64_t v40 = v35;
    swift_getWitnessTable();
    uint64_t v18 = v29;
    uint64_t v19 = v28;
    sub_26276FC90();
    uint64_t v24 = v41;
    swift_beginAccess();
    v2[5] = v24;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v25 = v48;
    sub_26275A8BC((uint64_t)v48, (uint64_t)&v41);
    DirectedIndexGraph.init(from:)(&v41);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  }
  return v2;
}

uint64_t sub_26275657C(void *a1)
{
  uint64_t v3 = (void *)*v1;
  uint64_t v4 = (void *)*v1;
  uint64_t v20 = *(void *)(*v1 + 280);
  uint64_t v21 = v3[36];
  uint64_t v5 = v3[37];
  uint64_t v6 = v3[38];
  uint64_t v22 = v3[41];
  uint64_t v27 = v20;
  uint64_t v28 = v21;
  uint64_t v29 = v5;
  uint64_t v30 = v6;
  long long v19 = *(_OWORD *)(v4 + 39);
  long long v31 = v19;
  uint64_t v32 = v22;
  type metadata accessor for DirectedWeightedGraph.CodingKeys();
  swift_getWitnessTable();
  uint64_t v7 = sub_26276FD40();
  uint64_t v23 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = a1[3];
  uint64_t v18 = a1;
  uint64_t v11 = a1;
  uint64_t v13 = v12;
  __swift_project_boxed_opaque_existential_1(v11, v10);
  sub_26276FE40();
  swift_beginAccess();
  uint64_t v33 = v1[5];
  uint64_t v27 = v20;
  uint64_t v28 = v5;
  uint64_t v29 = v6;
  uint64_t v30 = v19;
  type metadata accessor for DirectedEdge();
  swift_getWitnessTable();
  sub_26276F5F0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v26 = v22;
  swift_getWitnessTable();
  uint64_t v14 = v24;
  sub_26276FD20();
  if (v14) {
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v9, v13);
  }
  uint64_t v16 = v23;
  sub_2627553EC(v18);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v9, v13);
}

uint64_t sub_26275689C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 280);
  uint64_t v4 = sub_26276F8A0();
  uint64_t v5 = *(void *)(v1 + 312);
  uint64_t v6 = swift_bridgeObjectRetain();
  LOBYTE(v4) = MEMORY[0x263E51A50](v6, v3, v4, v5);
  swift_bridgeObjectRelease();
  if (v4)
  {
    swift_beginAccess();
    uint64_t v7 = v0[5];
    swift_bridgeObjectRetain();
    uint64_t v8 = type metadata accessor for DirectedEdge();
    uint64_t v9 = *(void *)(v2 + 288);
    uint64_t WitnessTable = swift_getWitnessTable();
    char v11 = MEMORY[0x263E51A50](v7, v8, v9, WitnessTable);
    swift_bridgeObjectRelease();
  }
  else
  {
    char v11 = 0;
  }
  return v11 & 1;
}

uint64_t sub_262756A04()
{
  return sub_262754538();
}

uint64_t sub_262756A0C()
{
  return 0;
}

uint64_t sub_262756A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v72 = a3;
  uint64_t v79 = a2;
  char v74 = (void *)*v4;
  uint64_t v6 = v74[36];
  uint64_t v7 = sub_26276FA60();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v73 = (char *)&v58 - v8;
  uint64_t v10 = v74[37];
  uint64_t v11 = v74[38];
  uint64_t v12 = v74[39];
  uint64_t v81 = v74[35];
  uint64_t v9 = v81;
  uint64_t v82 = v10;
  uint64_t v76 = v10;
  uint64_t v83 = v11;
  uint64_t v84 = v12;
  uint64_t v78 = v12;
  uint64_t v13 = type metadata accessor for DirectedEdge();
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v71 = (char *)&v58 - v15;
  uint64_t v16 = *(void *)(v9 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  long long v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v22 = (char *)&v58 - v21;
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v75 = (char *)&v58 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v58 - v25;
  uint64_t v77 = a1;
  if ((sub_262753A7C() & 1) == 0 || (sub_262753A7C() & 1) == 0) {
    return 0;
  }
  uint64_t v62 = v22;
  uint64_t v64 = v19;
  uint64_t v65 = v16;
  uint64_t v66 = v13;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v68 = v26;
  v27(v26, v77, v9);
  uint64_t v28 = (void *)swift_allocObject();
  v28[2] = v9;
  v28[3] = v6;
  uint64_t v70 = v11;
  uint64_t v29 = v76;
  v28[4] = v76;
  v28[5] = v11;
  uint64_t v31 = v78;
  uint64_t v30 = v79;
  v28[6] = v78;
  uint64_t v32 = v74;
  uint64_t v33 = v74[40];
  v28[7] = v33;
  uint64_t v34 = v32[41];
  v28[8] = v34;
  uint64_t v61 = v16 + 16;
  uint64_t v60 = v27;
  v27(v75, v30, v9);
  uint64_t v59 = v4 + 4;
  swift_beginAccess();
  uint64_t v35 = (void *)swift_allocObject();
  v35[2] = v9;
  v35[3] = v6;
  uint64_t v67 = v6;
  v35[4] = v29;
  uint64_t v36 = (uint64_t)v68;
  v35[5] = v70;
  v35[6] = v31;
  v35[7] = v33;
  v35[8] = v34;
  v35[9] = sub_26275A924;
  v35[10] = v28;
  int64_t v63 = v28;
  uint64_t v37 = v35;
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v80 = v4[4];
  uint64_t v38 = v80;
  v4[4] = 0x8000000000000000;
  char v74 = (void *)sub_262759134(v36, v9, v31);
  if (__OFADD__(*(void *)(v38 + 16), (v39 & 1) == 0))
  {
    __break(1u);
  }
  else
  {
    char v40 = v39;
    uint64_t v69 = v37;
    sub_26276F8A0();
    sub_26276FB90();
    char v41 = sub_26276FB60();
    uint64_t v42 = v80;
    if ((v41 & 1) == 0 || (char v74 = (void *)sub_262759134(v36, v9, v31), (v40 & 1) == (v43 & 1)))
    {
      uint64_t v44 = v36;
      *uint64_t v59 = v42;
      swift_bridgeObjectRelease();
      if (v40)
      {
        swift_bridgeObjectRetain();
        uint64_t v45 = v62;
        uint64_t v46 = v60;
      }
      else
      {
        uint64_t v48 = swift_bridgeObjectRetain();
        uint64_t v80 = ((uint64_t (*)(uint64_t))v69[9])(v48);
        uint64_t v45 = v62;
        uint64_t v46 = v60;
        v60(v62, v44, v9);
        sub_26276FB80();
      }
      swift_bridgeObjectRelease();
      sub_26276F870();
      uint64_t v49 = v65;
      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v44, v9);
      swift_endAccess();
      v46(v45, v77, v9);
      uint64_t v50 = v64;
      v46(v64, v79, v9);
      uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
      int v52 = v71;
      v51(v71, v45, v9);
      uint64_t v81 = v9;
      uint64_t v82 = v76;
      uint64_t v83 = v70;
      uint64_t v84 = v78;
      uint64_t v53 = type metadata accessor for DirectedEdge();
      v51(&v52[*(int *)(v53 + 52)], v50, v9);
      uint64_t v54 = v67;
      uint64_t v55 = *(void *)(v67 - 8);
      uint64_t v56 = v73;
      (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v73, v72, v67);
      uint64_t v47 = 1;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v56, 0, 1, v54);
      swift_beginAccess();
      swift_getWitnessTable();
      sub_26276F5F0();
      sub_26276F620();
      swift_endAccess();
      swift_release();
      swift_release();
      return v47;
    }
  }
  uint64_t result = sub_26276FDE0();
  __break(1u);
  return result;
}

uint64_t sub_2627570E0(uint64_t *a1)
{
  uint64_t v3 = (void *)*v1;
  uint64_t v4 = *(void *)(*v1 + 280);
  uint64_t v5 = *(void *)(*v1 + 288);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  int64_t v63 = (char *)&v53 - v7;
  uint64_t v62 = sub_26276FA60();
  uint64_t v55 = *(void (***)(char *, uint64_t))(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v81 = (char *)&v53 - v8;
  uint64_t v9 = v3[37];
  uint64_t v10 = v3[38];
  uint64_t v11 = v3[39];
  uint64_t v84 = v4;
  uint64_t v85 = v9;
  uint64_t v76 = v10;
  uint64_t v77 = v9;
  uint64_t v86 = v10;
  uint64_t v87 = v11;
  uint64_t v74 = type metadata accessor for DirectedEdge();
  uint64_t v67 = *(void (***)(char *, uint64_t))(v74 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v74);
  uint64_t v73 = (char *)&v53 - v13;
  uint64_t v14 = *(void *)(v5 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v61 = (char *)&v53 - v16;
  uint64_t v17 = *(void *)(v4 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v72 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v71 = (char *)&v53 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v80 = (char *)&v53 - v23;
  uint64_t v54 = v24;
  MEMORY[0x270FA5388](v22);
  uint64_t v82 = (char *)&v53 - v25;
  swift_beginAccess();
  uint64_t v26 = v1[4];
  uint64_t v27 = sub_26276F8A0();
  swift_bridgeObjectRetain();
  uint64_t v78 = a1;
  uint64_t v75 = v11;
  MEMORY[0x263E51A80](&v84, a1, v26, v4, v27, v11);
  swift_bridgeObjectRelease();
  uint64_t v28 = v84;
  if (!v84) {
    return sub_26276F820();
  }
  uint64_t v29 = sub_26276F820();
  uint64_t v83 = v29;
  if (!MEMORY[0x263E51D00](v28, v4))
  {
    swift_bridgeObjectRelease();
    return v29;
  }
  uint64_t v60 = TupleTypeMetadata2;
  uint64_t v70 = v5;
  uint64_t v30 = 0;
  uint64_t v31 = (void (**)(char *, uint64_t *, uint64_t))(v17 + 16);
  uint64_t v69 = (void (**)(char *, char *, uint64_t))(v17 + 32);
  uint64_t v68 = v1 + 5;
  ++v67;
  uint64_t v66 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v58 = (void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v57 = (void (**)(char *, char *, uint64_t))(v14 + 16);
  uint64_t v56 = (void (**)(char *, uint64_t))(v14 + 8);
  uint64_t v64 = (void (**)(char *, uint64_t))(v17 + 8);
  ++v55;
  uint64_t v32 = v80;
  uint64_t v79 = (void (**)(char *, uint64_t *, uint64_t))(v17 + 16);
  uint64_t v59 = v17;
  uint64_t v65 = v28;
  while (1)
  {
    char v38 = sub_26276F840();
    sub_26276F800();
    if (v38)
    {
      char v39 = *(void (**)(char *, uint64_t *, uint64_t))(v17 + 16);
      v39(v82, (uint64_t *)(v28+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v30), v4);
      char v40 = (char *)(v30 + 1);
      if (__OFADD__(v30, 1)) {
        goto LABEL_13;
      }
      goto LABEL_8;
    }
    uint64_t result = sub_26276FAF0();
    if (v54 != 8) {
      break;
    }
    uint64_t v84 = result;
    char v39 = *v31;
    (*v31)(v82, &v84, v4);
    swift_unknownObjectRelease();
    char v40 = (char *)(v30 + 1);
    if (__OFADD__(v30, 1))
    {
LABEL_13:
      __break(1u);
LABEL_14:
      swift_bridgeObjectRelease();
      return v83;
    }
LABEL_8:
    uint64_t v80 = v40;
    char v41 = *v69;
    (*v69)(v32, v82, v4);
    uint64_t v42 = v71;
    v39(v71, v78, v4);
    char v43 = v72;
    v39(v72, (uint64_t *)v32, v4);
    uint64_t v44 = v73;
    v41(v73, v42, v4);
    uint64_t v84 = v4;
    uint64_t v85 = v77;
    uint64_t v86 = v76;
    uint64_t v87 = v75;
    uint64_t v45 = type metadata accessor for DirectedEdge();
    v41(&v44[*(int *)(v45 + 52)], v43, v4);
    uint64_t v46 = v68;
    swift_beginAccess();
    uint64_t v47 = *v46;
    swift_bridgeObjectRetain();
    uint64_t v48 = v74;
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v50 = v81;
    uint64_t v51 = v70;
    MEMORY[0x263E51A80](v44, v47, v48, v70, WitnessTable);
    swift_bridgeObjectRelease();
    (*v67)(v44, v48);
    if ((*v66)(v50, 1, v51) == 1)
    {
      (*v64)(v32, v4);
      (*v55)(v81, v62);
    }
    else
    {
      uint64_t v33 = v61;
      (*v58)(v61, v81, v51);
      uint64_t v34 = &v63[*(int *)(v60 + 48)];
      v39(v63, (uint64_t *)v32, v4);
      (*v57)(v34, v33, v51);
      sub_26276F8A0();
      sub_26276F870();
      uint64_t v35 = v33;
      uint64_t v17 = v59;
      (*v56)(v35, v51);
      (*v64)(v32, v4);
    }
    uint64_t v28 = v65;
    uint64_t v36 = v80;
    uint64_t v37 = MEMORY[0x263E51D00](v65, v4);
    ++v30;
    uint64_t v31 = v79;
    if (v36 == (char *)v37) {
      goto LABEL_14;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_262757954()
{
  return swift_bridgeObjectRelease();
}

uint64_t DirectedWeightedGraph.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DirectedWeightedGraph.__deallocating_deinit()
{
  DirectedWeightedGraph.deinit();
  return MEMORY[0x270FA0228](v0, 48, 7);
}

uint64_t sub_2627579C0()
{
  sub_26275949C();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2627579E8(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t DirectedGraph.__allocating_init(name:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  DirectedGraph.init(name:)(a1, a2);
  return v4;
}

uint64_t DirectedGraph.init(name:)(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  swift_retain();
  swift_getTupleTypeMetadata2();
  sub_26276F820();
  swift_getAssociatedConformanceWitness();
  *(void *)(v2 + 48) = sub_26276F5C0();
  swift_release();
  return DirectedWeightedGraph.init(name:)(a1, a2);
}

BOOL sub_262757B8C()
{
  uint64_t v0 = sub_26276FC20();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

uint64_t sub_262757BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D338];
  return MEMORY[0x270F9F940](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_262757C48(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v5);
}

uint64_t sub_262757CB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_262757D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v7);
}

BOOL sub_262757D94@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_262757B8C();
  *a1 = result;
  return result;
}

void sub_262757DD8(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t sub_262757DFC()
{
  return 0x6156786574726576;
}

BOOL sub_262757E1C@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_262757B8C();
  *a1 = result;
  return result;
}

uint64_t sub_262757E58@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_26275A8B4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_262757E94(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_262757EE8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_262757F3C(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_262757F8C(a1);
  return v2;
}

void *sub_262757F8C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(*v1 + 392);
  uint64_t v5 = *(void *)(*v1 + 400);
  uint64_t v6 = *(void *)(*v1 + 408);
  uint64_t v7 = *(void *)(*v1 + 416);
  uint64_t v8 = *(void *)(*v1 + 424);
  uint64_t v36 = v4;
  uint64_t v37 = v5;
  uint64_t v29 = v7;
  uint64_t v30 = v5;
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  uint64_t v28 = v8;
  uint64_t v40 = v8;
  type metadata accessor for DirectedGraph.CodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v9 = sub_26276FCB0();
  uint64_t v26 = *(void *)(v9 - 8);
  uint64_t v27 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v25 - v10;
  swift_getAssociatedTypeWitness();
  swift_retain();
  swift_getTupleTypeMetadata2();
  sub_26276F820();
  uint64_t v31 = v6;
  v25[1] = swift_getAssociatedConformanceWitness();
  v1[6] = sub_26276F5C0();
  uint64_t v12 = a1[3];
  uint64_t v32 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  uint64_t v13 = v41;
  sub_26276FE30();
  if (v13)
  {
    swift_release();
    uint64_t v14 = v31;
    uint64_t v16 = v29;
    uint64_t v15 = v30;
    uint64_t v17 = v28;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    swift_bridgeObjectRelease();
    uint64_t v36 = v4;
    uint64_t v37 = v15;
    uint64_t v38 = v14;
    uint64_t v39 = v16;
    uint64_t v40 = v17;
    type metadata accessor for DirectedGraph();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_26276F5F0();
    uint64_t v18 = v31;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v20 = *(void *)(v18 + 8);
    uint64_t v34 = AssociatedConformanceWitness;
    uint64_t v35 = v20;
    swift_getWitnessTable();
    uint64_t v21 = v27;
    sub_26276FC90();
    uint64_t v23 = v36;
    swift_beginAccess();
    v1[6] = v23;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v24 = (uint64_t)v32;
    sub_26275A8BC((uint64_t)v32, (uint64_t)&v36);
    sub_262756150(&v36);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v21);
    __swift_destroy_boxed_opaque_existential_1(v24);
  }
  return v2;
}

uint64_t sub_262758388(void *a1)
{
  uint64_t v3 = *(void *)(*v1 + 424);
  long long v4 = *(_OWORD *)(*v1 + 408);
  long long v14 = *(_OWORD *)(*v1 + 392);
  long long v15 = v4;
  long long v20 = v14;
  long long v21 = v4;
  uint64_t v22 = v3;
  type metadata accessor for DirectedGraph.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_26276FD40();
  uint64_t v16 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v14 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_26276FE40();
  swift_beginAccess();
  uint64_t v23 = v1[6];
  uint64_t v8 = v15;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_26276F5F0();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v10 = *(void *)(v8 + 16);
  uint64_t v18 = AssociatedConformanceWitness;
  uint64_t v19 = v10;
  swift_getWitnessTable();
  uint64_t v11 = v17;
  sub_26276FD20();
  if (v11) {
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v7, v5);
  }
  uint64_t v13 = v16;
  sub_26275657C(a1);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v7, v5);
}

uint64_t sub_26275864C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 392);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_26276F8A0();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v7 = swift_bridgeObjectRetain();
  LOBYTE(v5) = MEMORY[0x263E51A50](v7, AssociatedTypeWitness, v5, AssociatedConformanceWitness);
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0) {
    goto LABEL_4;
  }
  swift_beginAccess();
  uint64_t v8 = v0[5];
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_bridgeObjectRetain();
  uint64_t v9 = type metadata accessor for DirectedEdge();
  uint64_t v10 = *(void *)(v2 + 400);
  uint64_t WitnessTable = swift_getWitnessTable();
  LOBYTE(v10) = MEMORY[0x263E51A50](v8, v9, v10, WitnessTable);
  swift_bridgeObjectRelease();
  if (v10)
  {
    swift_beginAccess();
    uint64_t v12 = swift_bridgeObjectRetain();
    char v13 = MEMORY[0x263E51A50](v12, AssociatedTypeWitness, v3, AssociatedConformanceWitness);
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_4:
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_262758870(uint64_t a1)
{
  v11[1] = a1;
  uint64_t v2 = *(void *)(*v1 + 408);
  uint64_t v3 = *(void *)(*v1 + 392);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v7 = (char *)v11 - v6;
  swift_beginAccess();
  uint64_t v8 = v1[4];
  sub_26276F8A0();
  swift_getAssociatedConformanceWitness();
  id v11[2] = v8;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v2 + 64);
  swift_bridgeObjectRetain();
  v9(v3, v2);
  sub_26276F5D0();
  swift_getWitnessTable();
  LOBYTE(v8) = sub_26276F750();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  return v8 & 1;
}

BOOL sub_262758A58(uint64_t a1)
{
  uint64_t v12 = *v1;
  uint64_t v3 = *(void *)(v12 + 392);
  uint64_t v4 = sub_26276FA60();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v17 = &v15[-v5];
  uint64_t v6 = *(void *)(v12 + 408);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v10 = &v15[-v9];
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v6 + 64);
  v11(v3, v6);
  LODWORD(v12) = sub_262753A7C();
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  if ((v12 & 1) == 0)
  {
    int v16 = v12;
    v11(v3, v6);
    uint64_t v18 = sub_26276F820();
    swift_beginAccess();
    sub_26276F8A0();
    swift_getAssociatedConformanceWitness();
    sub_26276F5F0();
    sub_26276F620();
    swift_endAccess();
    v11(v3, v6);
    uint64_t v12 = *(void *)(v3 - 8);
    char v13 = v17;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 16))(v17, a1, v3);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v13, 0, 1, v3);
    swift_beginAccess();
    sub_26276F5F0();
    sub_26276F620();
    LOBYTE(v12) = v16;
    swift_endAccess();
  }
  return (v12 & 1) == 0;
}

uint64_t sub_262758D70()
{
  uint64_t v1 = *(void *)(*v0 + 408);
  uint64_t v2 = *(void *)(*v0 + 392);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v6 = (char *)&v11 - v5;
  (*(void (**)(uint64_t, uint64_t))(v1 + 64))(v2, v1);
  swift_beginAccess();
  uint64_t v7 = v0[4];
  uint64_t v8 = sub_26276F8A0();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_bridgeObjectRetain();
  MEMORY[0x263E51A80](&v11, v6, v7, AssociatedTypeWitness, v8, AssociatedConformanceWitness);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, AssociatedTypeWitness);
  uint64_t result = v11;
  if (!v11) {
    return sub_26276F820();
  }
  return result;
}

uint64_t sub_262758F24(uint64_t a1, uint64_t a2)
{
  v16[1] = a2;
  uint64_t v3 = *(void *)(*(void *)v2 + 408);
  uint64_t v4 = *(void *)(*(void *)v2 + 392);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v16 - v10;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v3 + 64);
  v12(v4, v3);
  v12(v4, v3);
  char v13 = sub_262754538();
  long long v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, AssociatedTypeWitness);
  v14(v11, AssociatedTypeWitness);
  return v13 & 1;
}

uint64_t sub_2627590CC()
{
  return swift_bridgeObjectRelease();
}

uint64_t DirectedGraph.deinit()
{
  DirectedWeightedGraph.deinit();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DirectedGraph.__deallocating_deinit()
{
  DirectedWeightedGraph.deinit();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0228](v0, 56, 7);
}

unint64_t sub_262759134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26276F630();
  return sub_262759190(a1, v6, a2, a3);
}

unint64_t sub_262759190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v21[1] = a1;
  v21[2] = a4;
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v4;
  uint64_t v9 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v11 = v10 & ~v9;
  v21[0] = v4 + 64;
  if ((*(void *)(v4 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
  {
    uint64_t v12 = ~v9;
    long long v15 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v13 = v6 + 16;
    long long v14 = v15;
    uint64_t v16 = *(void *)(v13 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v13 - 8);
    do
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v22 + 48) + v16 * v11, a3);
      char v19 = sub_26276F650();
      (*v17)(v8, a3);
      if (v19) {
        break;
      }
      unint64_t v11 = (v11 + 1) & v12;
      uint64_t v13 = v18;
    }
    while (((*(void *)(v21[0] + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  return v11;
}

uint64_t sub_262759318()
{
  swift_beginAccess();
  return *(void *)(v0 + 32);
}

uint64_t sub_26275934C()
{
  return 2;
}

uint64_t sub_262759354()
{
  swift_beginAccess();
  return *(void *)(v0 + 16);
}

uint64_t sub_262759388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_26275390C(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_2627593B0(uint64_t a1, uint64_t a2)
{
  return sub_26275469C(a1, a2, v2[6], v2[7], v2[2]);
}

uint64_t sub_2627593C0(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, void))(v1 + 48);
  sub_26276F8A0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(a1, *(void *)(a1 + *(int *)(TupleTypeMetadata2 + 48))) & 1;
}

uint64_t sub_262759440()
{
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_262759450()
{
  return sub_26276F820();
}

uint64_t sub_26275945C()
{
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t type metadata accessor for DirectedIndexGraph.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for DirectedIndexGraph()
{
  return swift_getGenericMetadata();
}

uint64_t sub_26275949C()
{
  swift_beginAccess();
  return *(void *)(v0 + 48);
}

uint64_t sub_2627594D0()
{
  swift_beginAccess();
  return *(void *)(v0 + 40);
}

uint64_t type metadata accessor for DirectedWeightedGraph.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t sub_26275951C()
{
  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_26275952C()
{
  return MEMORY[0x270FA0238](v0, 88, 7);
}

uint64_t type metadata accessor for DirectedGraph.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t sub_262759554()
{
  return swift_getWitnessTable();
}

uint64_t sub_262759570@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_262759354();
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2627595B0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return sub_262752F40(v1, v2);
}

uint64_t sub_2627595F0()
{
  return 32;
}

__n128 sub_2627595FC(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_262759608@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_262759318();
  return swift_bridgeObjectRetain();
}

uint64_t sub_262759644()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_262752FBC(v0);
}

uint64_t sub_262759670()
{
  return 32;
}

__n128 sub_26275967C(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_262759688@<X0>(void *a1@<X8>)
{
  return keypath_get_15Tm(sub_2627594D0, a1);
}

uint64_t sub_2627596A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_16Tm(a1, a2, a3, a4, sub_262755B70);
}

uint64_t sub_2627596B8()
{
  return 56;
}

__n128 sub_2627596C4(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  long long v4 = *(_OWORD *)(a1 + 32);
  *(void *)(a2 + 48) = *(void *)(a1 + 48);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(__n128 *)a2 = result;
  return result;
}

uint64_t sub_2627596E0@<X0>(void *a1@<X8>)
{
  return keypath_get_15Tm(sub_26275949C, a1);
}

uint64_t keypath_get_15Tm@<X0>(uint64_t (*a1)(void)@<X3>, void *a2@<X8>)
{
  *a2 = a1();
  return swift_bridgeObjectRetain();
}

uint64_t sub_262759738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_16Tm(a1, a2, a3, a4, sub_2627579E8);
}

uint64_t keypath_set_16Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6 = swift_bridgeObjectRetain();
  return a5(v6);
}

uint64_t sub_262759784()
{
  return 40;
}

__n128 sub_262759790(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t dispatch thunk of Vertex.index.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of Edge.from.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of Edge.to.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t sub_2627597E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

uint64_t sub_2627597E8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_262759878(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  long long v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = ~v8;
  uint64_t v10 = v7 + v8;
  unint64_t v11 = ((v7 + v8) & ~v8) + v7;
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v11 > 0x18)
  {
    uint64_t v14 = *a2;
    uint64_t *v4 = *a2;
    long long v4 = (uint64_t *)(v14 + ((v8 + 16) & v9));
    swift_retain();
  }
  else
  {
    long long v15 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v15(a1, a2, v5);
    v15((uint64_t *)(((unint64_t)v4 + v10) & v9), (uint64_t *)(((unint64_t)a2 + v10) & v9), v5);
  }
  return v4;
}

uint64_t sub_262759984(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v3 - 8) + 8;
  uint64_t v7 = *(uint64_t (**)(unint64_t, uint64_t))v6;
  (*(void (**)(uint64_t, uint64_t))v6)(a1, v3);
  unint64_t v4 = (*(void *)(v6 + 56) + a1 + *(unsigned __int8 *)(v6 + 72)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 72);
  return v7(v4, v3);
}

unint64_t sub_262759A20(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
  uint64_t v8 = v6 + 16;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 48) + *(unsigned __int8 *)(v8 + 64) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64), (*(void *)(v8 + 48) + *(unsigned __int8 *)(v8 + 64) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64), v5);
  return a1;
}

unint64_t sub_262759AB4(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 24);
  uint64_t v8 = v6 + 24;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 40) + *(unsigned __int8 *)(v8 + 56) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 56), (*(void *)(v8 + 40) + *(unsigned __int8 *)(v8 + 56) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 56), v5);
  return a1;
}

unint64_t sub_262759B48(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
  uint64_t v8 = v6 + 32;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 32) + *(unsigned __int8 *)(v8 + 48) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 48), (*(void *)(v8 + 32) + *(unsigned __int8 *)(v8 + 48) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 48), v5);
  return a1;
}

unint64_t sub_262759BDC(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 40);
  uint64_t v8 = v6 + 40;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 24) + *(unsigned __int8 *)(v8 + 40) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 40), (*(void *)(v8 + 24) + *(unsigned __int8 *)(v8 + 40) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 40), v5);
  return a1;
}

uint64_t sub_262759C70(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v8 = ((v6 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + v6;
  char v9 = 8 * v8;
  if (v8 <= 3)
  {
    unsigned int v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_19;
  }
LABEL_11:
  int v12 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v12 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v8 | v12) + 1;
}

void sub_262759DDC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = ((*(void *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x26275A004);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t sub_26275A02C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for DirectedIndexGraph(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DirectedIndexGraph);
}

uint64_t dispatch thunk of DirectedIndexGraph.name.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of DirectedIndexGraph.adjacency.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of DirectedIndexGraph.__allocating_init(name:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of DirectedIndexGraph.isEmpty.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of DirectedIndexGraph.vertices.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of DirectedIndexGraph.edges.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of DirectedIndexGraph.hasVertex(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of DirectedIndexGraph.addVertex(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of DirectedIndexGraph.removeVertex(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of DirectedIndexGraph.getNeighbors(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of DirectedIndexGraph.hasEdge(from:to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of DirectedIndexGraph.addEdge(from:to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of DirectedIndexGraph.removeEdge(from:to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of DirectedIndexGraph.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of DirectedIndexGraph.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 272))();
}

uint64_t sub_26275A2C8()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for DirectedWeightedGraph()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for DirectedWeightedGraph(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DirectedWeightedGraph);
}

uint64_t dispatch thunk of DirectedWeightedGraph.edgeValues.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of DirectedWeightedGraph.hasEdge(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of DirectedWeightedGraph.addEdge(from:to:value:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of DirectedWeightedGraph.getNeighborsAndWeights(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t sub_26275A3F0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for DirectedGraph()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for DirectedGraph(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DirectedGraph);
}

uint64_t dispatch thunk of DirectedGraph.vertexValues.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of DirectedGraph.hasVertex(vertex:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 464))();
}

uint64_t dispatch thunk of DirectedGraph.addVertex(vertex:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 472))();
}

uint64_t dispatch thunk of DirectedGraph.getNeighbors(vertex:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 480))();
}

uint64_t dispatch thunk of DirectedGraph.hasEdge(from:to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 488))();
}

uint64_t sub_26275A550(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *sub_26275A5A0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x26275A63CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_26275A664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

unsigned char *sub_26275A670(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x26275A73CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_26275A764()
{
  return swift_getWitnessTable();
}

uint64_t sub_26275A780()
{
  return swift_getWitnessTable();
}

uint64_t sub_26275A79C()
{
  return swift_getWitnessTable();
}

uint64_t sub_26275A7B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_26275A7D4()
{
  return swift_getWitnessTable();
}

uint64_t sub_26275A7F0()
{
  return swift_getWitnessTable();
}

uint64_t sub_26275A80C()
{
  return swift_getWitnessTable();
}

uint64_t sub_26275A828()
{
  return swift_getWitnessTable();
}

uint64_t sub_26275A844()
{
  return swift_getWitnessTable();
}

uint64_t sub_26275A860()
{
  return swift_getWitnessTable();
}

uint64_t sub_26275A87C()
{
  return swift_getWitnessTable();
}

uint64_t sub_26275A898()
{
  return swift_getWitnessTable();
}

uint64_t sub_26275A8B4()
{
  return 1;
}

uint64_t sub_26275A8BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_26275A92C(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x263F8EE78];
    if (!v2) {
      return v3;
    }
    uint64_t v12 = MEMORY[0x263F8EE78];
    uint64_t result = sub_262739750(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v3 = v12;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x263E51F70](v5, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v5 + 32);
      }
      unsigned int v7 = v6;
      objc_msgSend(v6, sel_floatValue);
      int v9 = v8;

      unint64_t v11 = *(void *)(v12 + 16);
      unint64_t v10 = *(void *)(v12 + 24);
      if (v11 >= v10 >> 1) {
        sub_262739750(v10 > 1, v11 + 1, 1);
      }
      ++v5;
      *(void *)(v12 + 16) = v11 + 1;
      *(_DWORD *)(v12 + 4 * v11 + 32) = v9;
      if (v2 == v5) {
        return v3;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_26276FBC0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t Embedder.embeddingModel.getter()
{
  return sub_26276F6A0();
}

ZeoliteFramework::EmbedderName_optional __swiftcall EmbedderName.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_26276FC20();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static EmbedderName.allCases.getter()
{
  return &unk_270DC5E60;
}

uint64_t EmbedderName.rawValue.getter()
{
  unint64_t v1 = 0xD000000000000014;
  if (*v0 != 1) {
    unint64_t v1 = 0x457478655444414DLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x646465626D454C4ELL;
  }
}

uint64_t sub_26275ABBC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_26274411C(*a1, *a2);
}

uint64_t sub_26275ABC8()
{
  return sub_26276FE20();
}

uint64_t sub_26275AC80()
{
  sub_26276F6C0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_26275AD24()
{
  return sub_26276FE20();
}

ZeoliteFramework::EmbedderName_optional sub_26275ADD8(Swift::String *a1)
{
  return EmbedderName.init(rawValue:)(*a1);
}

void sub_26275ADE4(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEA00000000007265;
  unint64_t v4 = 0x8000000262772610;
  unint64_t v5 = 0xD000000000000014;
  if (v2 != 1)
  {
    unint64_t v5 = 0x457478655444414DLL;
    unint64_t v4 = 0xEF7265646465626DLL;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x646465626D454C4ELL;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

void sub_26275AE58(void *a1@<X8>)
{
  *a1 = &unk_270DC5E88;
}

uint64_t sub_26275AE68()
{
  return sub_26276F7A0();
}

uint64_t sub_26275AEC8()
{
  return sub_26276F760();
}

uint64_t sub_26275AF18(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v7 = (HIDWORD(a1) - a1);
      char v6 = SHIDWORD(a1) < (int)a1;
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_16;
      }
      uint64_t v7 = (int)v7;
LABEL_7:
      if (v7 >= 0) {
        uint64_t v11 = v7;
      }
      else {
        uint64_t v11 = v7 + 1;
      }
      if (v7 <= -2) {
        goto LABEL_20;
      }
      uint64_t v5 = v11 >> 1;
      if (v7 < 2)
      {
LABEL_3:
        sub_26275F5EC(a1, a2);
        uint64_t v5 = 0;
        uint64_t v2 = MEMORY[0x263F8EE78];
      }
      else
      {
LABEL_12:
        sub_26275F5EC(a1, a2);
        uint64_t v2 = sub_26276F830();
        *(void *)(v2 + 16) = v5;
      }
      v13[1] = v5;
      uint64_t v14 = 0;
      v13[0] = v2 + 32;
      sub_26275F644(v13, &v14, a1, a2);
      uint64_t v7 = v14;
      char v6 = v5 < v14;
      if (v5 < v14)
      {
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
        if (v6)
        {
          __break(1u);
LABEL_20:
          sub_26276FBA0();
          __break(1u);
        }
        *(void *)(v2 + 16) = v7;
        swift_bridgeObjectRelease();
        __break(1u);
        JUMPOUT(0x26275B0B8);
      }
      *(void *)(v2 + 16) = v14;
      sub_26272C100(a1, a2);
      return v2;
    case 2uLL:
      uint64_t v9 = *(void *)(a1 + 16);
      uint64_t v8 = *(void *)(a1 + 24);
      BOOL v10 = __OFSUB__(v8, v9);
      uint64_t v7 = v8 - v9;
      char v6 = (v7 < 0) ^ v10;
      if (!v10) {
        goto LABEL_7;
      }
      goto LABEL_17;
    case 3uLL:
      goto LABEL_3;
    default:
      uint64_t v5 = (a2 >> 49) & 0x7F;
      if (BYTE6(a2) < 2uLL) {
        goto LABEL_3;
      }
      goto LABEL_12;
  }
}

uint64_t sub_26275B0C8(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v7 = (HIDWORD(a1) - a1);
      char v6 = SHIDWORD(a1) < (int)a1;
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_15;
      }
      uint64_t v7 = (int)v7;
LABEL_7:
      uint64_t v11 = v7 + 3;
      if (v7 >= 0) {
        uint64_t v11 = v7;
      }
      if (v7 <= -4) {
        goto LABEL_19;
      }
      uint64_t v5 = v11 >> 2;
      if (v7 < 4)
      {
LABEL_3:
        sub_26275F5EC(a1, a2);
        uint64_t v5 = 0;
        uint64_t v2 = MEMORY[0x263F8EE78];
      }
      else
      {
LABEL_11:
        sub_26275F5EC(a1, a2);
        uint64_t v2 = sub_26276F830();
        *(void *)(v2 + 16) = v5;
      }
      v13[1] = v5;
      uint64_t v14 = 0;
      v13[0] = v2 + 32;
      sub_26275F79C(v13, &v14, a1, a2);
      uint64_t v7 = v14;
      char v6 = v5 < v14;
      if (v5 < v14)
      {
        __break(1u);
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
        if (v6)
        {
          __break(1u);
LABEL_19:
          sub_26276FBA0();
          __break(1u);
        }
        *(void *)(v2 + 16) = v7;
        swift_bridgeObjectRelease();
        __break(1u);
        JUMPOUT(0x26275B26CLL);
      }
      *(void *)(v2 + 16) = v14;
      sub_26272C100(a1, a2);
      return v2;
    case 2uLL:
      uint64_t v9 = *(void *)(a1 + 16);
      uint64_t v8 = *(void *)(a1 + 24);
      BOOL v10 = __OFSUB__(v8, v9);
      uint64_t v7 = v8 - v9;
      char v6 = (v7 < 0) ^ v10;
      if (!v10) {
        goto LABEL_7;
      }
      goto LABEL_16;
    case 3uLL:
      goto LABEL_3;
    default:
      uint64_t v5 = (a2 >> 50) & 0x3F;
      if (BYTE6(a2) < 4uLL) {
        goto LABEL_3;
      }
      goto LABEL_11;
  }
}

uint64_t MADTextEmbedder.init()(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_26275B29C, 0, 0);
}

uint64_t sub_26275B29C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = objc_msgSend(self, sel_service);
  v1[1] = 0;
  v1[2] = 0;
  *uint64_t v1 = v2;
  unint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t MADTextEmbedder.init(version:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_26275B344, 0, 0);
}

uint64_t sub_26275B344()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  unint64_t v3 = (void *)v0[2];
  *unint64_t v3 = objc_msgSend(self, sel_service);
  v3[1] = v1;
  v3[2] = v2;
  unint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t MADTextEmbedder.embed(text:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 40) = a1;
  *(void *)(v3 + 48) = a2;
  *(void *)(v3 + 56) = *(void *)v2;
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v2 + 8);
  return MEMORY[0x270FA2498](sub_26275B404, 0, 0);
}

uint64_t sub_26275B404()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 40);
  *(void *)(v0 + 16) = *(void *)(v0 + 56);
  *(_OWORD *)(v0 + 24) = *(_OWORD *)(v0 + 64);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957F38);
  uint64_t v3 = swift_allocObject();
  *(void *)(v0 + 80) = v3;
  *(_OWORD *)(v3 + 16) = xmmword_2627718D0;
  *(void *)(v3 + 32) = v2;
  *(void *)(v3 + 40) = v1;
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 88) = v4;
  *(void *)uint64_t v4 = v0;
  *(void *)(v4 + 8) = sub_26275B510;
  uint64_t v5 = *(void *)(v0 + 16);
  *(void *)(v4 + 24) = v3;
  *(void *)(v4 + 32) = v5;
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(v0 + 24);
  return MEMORY[0x270FA2498](sub_26275B6E8, 0, 0);
}

uint64_t sub_26275B510(uint64_t a1)
{
  *(void *)(*(void *)v1 + 96) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_26275B630, 0, 0);
}

void sub_26275B630()
{
  uint64_t v1 = *(void *)(v0 + 96);
  if (v1)
  {
    if (!*(void *)(v1 + 16))
    {
      __break(1u);
      return;
    }
    uint64_t v2 = *(void *)(v1 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v3 = *(void (**)(uint64_t))(v0 + 8);
  v3(v2);
}

uint64_t MADTextEmbedder.embed(texts:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 40) = *(_OWORD *)(v1 + 1);
  return MEMORY[0x270FA2498](sub_26275B6E8, 0, 0);
}

uint64_t sub_26275B6E8()
{
  uint64_t v1 = *(void *)(v0 + 48);
  long long v7 = *(_OWORD *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  *(_OWORD *)(v3 + 16) = v7;
  *(void *)(v3 + 32) = v1;
  *(void *)(v3 + 40) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957F48);
  void *v4 = v0;
  v4[1] = sub_26275B810;
  return MEMORY[0x270FA2318](v0 + 16, 0, 0, 0x6574286465626D65, 0xED0000293A737478, sub_26275BDB4, v3, v5);
}

uint64_t sub_26275B810()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_26275B928, 0, 0);
}

uint64_t sub_26275B928()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (!v1)
  {
    if (qword_26A9572B0 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_26276F530();
    __swift_project_value_buffer(v2, (uint64_t)qword_26A95E208);
    uint64_t v3 = sub_26276F510();
    os_log_type_t v4 = sub_26276FA50();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_262725000, v3, v4, "Failed at generating embeddings.", v5, 2u);
      MEMORY[0x263E528C0](v5, -1, -1);
    }
  }
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v6(v1);
}

void sub_26275BA48(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v24 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A958010);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F54110]), sel_init);
  objc_msgSend(v9, sel_setExtendedContextLength_, 1);
  if (a4)
  {
    uint64_t v11 = sub_26276F6B0();
    uint64_t v12 = v10;
    if (v11 == 3425357 && v10 == 0xE300000000000000 || (sub_26276FDA0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v13 = 4;
LABEL_11:
      objc_msgSend(v9, sel_setVersion_, v13);
      goto LABEL_12;
    }
    if (v11 == 3490893 && v12 == 0xE300000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_10:
      uint64_t v13 = 5;
      goto LABEL_11;
    }
    char v14 = sub_26276FDA0();
    swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_10;
    }
  }
LABEL_12:
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A958018);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_262772600;
  *(void *)(v15 + 32) = v9;
  aBlock[0] = v15;
  sub_26276F7F0();
  sub_26275F5B0(0, &qword_26A958020);
  id v16 = v9;
  uint64_t v17 = (void *)sub_26276F7C0();
  swift_bridgeObjectRelease();
  uint64_t v18 = (void *)sub_26276F7C0();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  *(void *)(v20 + ((v8 + v19 + 7) & 0xFFFFFFFFFFFFFFF8)) = v16;
  aBlock[4] = sub_26275F4E8;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_26275C7E0;
  aBlock[3] = &block_descriptor_26;
  long long v21 = _Block_copy(aBlock);
  id v22 = v16;
  swift_release();
  objc_msgSend(v24, sel_performRequests_text_identifier_completionHandler_, v17, v18, 0, v21);
  _Block_release(v21);
}

void sub_26275BDB4(uint64_t a1)
{
  sub_26275BA48(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

void sub_26275BDC0(int a1, id a2, int a3, id a4)
{
  if (!a2)
  {
    if (a1 == -1 || (id v14 = objc_msgSend(a4, sel_embeddingResults)) == 0)
    {
      if (qword_26A9572B0 != -1) {
        swift_once();
      }
      uint64_t v26 = sub_26276F530();
      __swift_project_value_buffer(v26, (uint64_t)qword_26A95E208);
      uint64_t v27 = sub_26276F510();
      os_log_type_t v28 = sub_26276FA50();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v29 = 0;
        _os_log_impl(&dword_262725000, v27, v28, "No results returned by MAD service.", v29, 2u);
        MEMORY[0x263E528C0](v29, -1, -1);
      }

      uint64_t v38 = 0;
      goto LABEL_37;
    }
    uint64_t v15 = v14;
    uint64_t v37 = sub_26275F5B0(0, &qword_26A958028);
    unint64_t v16 = sub_26276F7D0();

    if (v16 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_26276FBC0();
      if (v17) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v17)
      {
LABEL_10:
        if (v17 < 1)
        {
          __break(1u);
          return;
        }
        uint64_t v18 = 0;
        unint64_t v19 = (void *)MEMORY[0x263F8EE78];
        do
        {
          if ((v16 & 0xC000000000000001) != 0) {
            id v20 = (id)MEMORY[0x263E51F70](v18, v16);
          }
          else {
            id v20 = *(id *)(v16 + 8 * v18 + 32);
          }
          long long v21 = v20;
          uint64_t v22 = sub_26275C364();
          if (v22)
          {
            uint64_t v23 = v22;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v19 = sub_262727824(0, v19[2] + 1, 1, v19);
            }
            unint64_t v25 = v19[2];
            unint64_t v24 = v19[3];
            if (v25 >= v24 >> 1) {
              unint64_t v19 = sub_262727824((void *)(v24 > 1), v25 + 1, 1, v19);
            }
            v19[2] = v25 + 1;
            v19[v25 + 4] = v23;
          }
          ++v18;
        }
        while (v17 != v18);
        goto LABEL_31;
      }
    }
    unint64_t v19 = (void *)MEMORY[0x263F8EE78];
LABEL_31:
    swift_bridgeObjectRelease();
    if (qword_26A9572B0 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_26276F530();
    __swift_project_value_buffer(v30, (uint64_t)qword_26A95E208);
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_26276F510();
    os_log_type_t v32 = sub_26276FA40();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t v38 = (void *)v34;
      *(_DWORD *)uint64_t v33 = 136315138;
      uint64_t v35 = MEMORY[0x263E51C50](v16, v37);
      sub_262738FB4(v35, v36, (uint64_t *)&v38);
      sub_26276FA70();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_262725000, v31, v32, "Found result: %s", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x263E528C0](v34, -1, -1);
      MEMORY[0x263E528C0](v33, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v38 = v19;
LABEL_37:
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A958010);
    sub_26276F900();
    return;
  }
  id v5 = a2;
  if (qword_26A9572B0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_26276F530();
  __swift_project_value_buffer(v6, (uint64_t)qword_26A95E208);
  id v7 = a2;
  id v8 = a2;
  id v9 = sub_26276F510();
  os_log_type_t v10 = sub_26276FA50();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 138412290;
    id v13 = a2;
    uint64_t v38 = (void *)_swift_stdlib_bridgeErrorToNSError();
    sub_26276FA70();
    *uint64_t v12 = v38;

    _os_log_impl(&dword_262725000, v9, v10, "Failed at calling MAD service: %@", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573B8);
    swift_arrayDestroy();
    MEMORY[0x263E528C0](v12, -1, -1);
    MEMORY[0x263E528C0](v11, -1, -1);
  }
  else
  {
  }
  uint64_t v38 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A958010);
  sub_26276F900();
}

uint64_t sub_26275C364()
{
  id v1 = objc_msgSend(v0, sel_embedding);
  id v2 = objc_msgSend(v1, sel_data);

  uint64_t v3 = sub_26276F2E0();
  unint64_t v5 = v4;

  id v6 = objc_msgSend(v0, sel_embedding);
  uint64_t v7 = (uint64_t)objc_msgSend(v6, sel_type);

  if (v7 < 0)
  {
    uint64_t result = sub_26276FBA0();
    __break(1u);
    return result;
  }
  id v8 = objc_msgSend(v0, sel_embedding);
  id v9 = objc_msgSend(v8, sel_count);

  if (qword_26A9572B0 != -1) {
    goto LABEL_33;
  }
  while (1)
  {
    uint64_t v10 = sub_26276F530();
    __swift_project_value_buffer(v10, (uint64_t)qword_26A95E208);
    uint64_t v11 = sub_26276F510();
    os_log_type_t v12 = sub_26276FA40();
    if (os_log_type_enabled(v11, v12))
    {
      id v13 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v13 = 134217984;
      sub_26276FA70();
      _os_log_impl(&dword_262725000, v11, v12, "Embedding type: %lu", v13, 0xCu);
      MEMORY[0x263E528C0](v13, -1, -1);
    }

    if (v7 == 2)
    {
      uint64_t v16 = sub_26275B0C8(v3, v5);
      uint64_t v25 = *(void *)(v16 + 16);
      if (!v25) {
        goto LABEL_30;
      }
      goto LABEL_21;
    }
    if (v7 != 1) {
      break;
    }
    uint64_t v7 = sub_26275AF18(v3, v5);
    int64_t v14 = *(void *)(v7 + 16);
    if (v14)
    {
      uint64_t v35 = MEMORY[0x263F8EE78];
      sub_262739750(0, v14, 0);
      uint64_t v15 = 0;
      uint64_t v16 = v35;
      unint64_t v17 = *(void *)(v35 + 16);
      do
      {
        _H8 = *(_WORD *)(v7 + 2 * v15 + 32);
        unint64_t v19 = *(void *)(v35 + 24);
        if (v17 >= v19 >> 1) {
          sub_262739750(v19 > 1, v17 + 1, 1);
        }
        ++v15;
        __asm { FCVT            S0, H8 }
        *(void *)(v35 + 16) = v17 + 1;
        *(_DWORD *)(v35 + 4 * v17++ + 32) = _S0;
      }
      while (v14 != v15);
      swift_bridgeObjectRelease();
      uint64_t v25 = *(void *)(v35 + 16);
      if (!v25) {
        goto LABEL_30;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v16 = MEMORY[0x263F8EE78];
      uint64_t v25 = *(void *)(MEMORY[0x263F8EE78] + 16);
      if (!v25) {
        goto LABEL_30;
      }
    }
LABEL_21:
    if ((~*(_DWORD *)(v16 + 32) & 0x7F800000) == 0)
    {
LABEL_22:
      swift_bridgeObjectRelease();
      uint64_t v29 = sub_26276F510();
      os_log_type_t v30 = sub_26276FA50();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v31 = 0;
        _os_log_impl(&dword_262725000, v29, v30, "Found embedding with nan values. Return zeros embedding.", v31, 2u);
        MEMORY[0x263E528C0](v31, -1, -1);
      }

      uint64_t v16 = sub_262735500((unint64_t)v9, 0);
LABEL_30:
      sub_26272C100(v3, v5);
      return v16;
    }
    if (v25 == 1) {
      goto LABEL_30;
    }
    uint64_t v32 = 9;
    while (1)
    {
      uint64_t v33 = v32 - 7;
      if (__OFADD__(v32 - 8, 1)) {
        break;
      }
      if ((~*(_DWORD *)(v16 + 4 * v32) & 0x7F800000) == 0) {
        goto LABEL_22;
      }
      ++v32;
      if (v33 == v25) {
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_33:
    swift_once();
  }
  uint64_t v26 = sub_26276F510();
  os_log_type_t v27 = sub_26276FA50();
  if (os_log_type_enabled(v26, v27))
  {
    os_log_type_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v28 = 0;
    _os_log_impl(&dword_262725000, v26, v27, "Embedding type not supported.", v28, 2u);
    MEMORY[0x263E528C0](v28, -1, -1);
  }
  sub_26272C100(v3, v5);

  return 0;
}

void sub_26275C7E0(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_26275C858(uint64_t a1, uint64_t a2)
{
  return sub_26275E99C(a1, a2, &qword_26A957FF8);
}

uint64_t sub_26275C864(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *(void *)uint64_t v6 = v3;
  *(void *)(v6 + 8) = sub_26273E3F8;
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 56) = *(void *)v2;
  *(_OWORD *)(v6 + 64) = *(_OWORD *)(v2 + 8);
  return MEMORY[0x270FA2498](sub_26275B404, 0, 0);
}

uint64_t sub_26275C92C(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_26273E3F8;
  uint64_t v5 = *v1;
  *(void *)(v4 + 24) = a1;
  *(void *)(v4 + 32) = v5;
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(v1 + 1);
  return MEMORY[0x270FA2498](sub_26275B6E8, 0, 0);
}

id NLEmbedder.init(useRecognizer:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (void *)*MEMORY[0x263F13E60];
  uint64_t v5 = self;
  id v6 = v4;
  id result = objc_msgSend(v5, sel_sentenceEmbeddingForLanguage_, v6);
  *(void *)a2 = v6;
  *(unsigned char *)(a2 + 8) = a1;
  *(void *)(a2 + 16) = result;
  return result;
}

uint64_t NLEmbedder.embed(text:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  uint64_t v4 = *v2;
  *(unsigned char *)(v3 + 48) = *((unsigned char *)v2 + 8);
  uint64_t v5 = v2[2];
  *(void *)(v3 + 32) = v4;
  *(void *)(v3 + 40) = v5;
  return MEMORY[0x270FA2498](sub_26275CA90, 0, 0);
}

uint64_t sub_26275CA90()
{
  if (!sub_26276F6D0()) {
    goto LABEL_20;
  }
  if (*(unsigned char *)(v0 + 48) != 1) {
    goto LABEL_12;
  }
  id v1 = self;
  uint64_t v2 = (void *)sub_26276F660();
  id v3 = objc_msgSend(v1, sel_dominantLanguageForString_, v2);

  if (!v3) {
    goto LABEL_21;
  }
  uint64_t v4 = sub_26276F690();
  uint64_t v6 = v5;
  if (v4 == sub_26276F690() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();

LABEL_12:
    id v3 = *(id *)(v0 + 40);
    if (!v3) {
      goto LABEL_21;
    }
    goto LABEL_13;
  }
  uint64_t v9 = *(void *)(v0 + 40);
  char v10 = sub_26276FDA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  id v3 = 0;
  if ((v10 & 1) == 0 || !v9) {
    goto LABEL_21;
  }
LABEL_13:
  uint64_t v11 = sub_26276FA00();
  if (!v11)
  {
LABEL_20:
    id v3 = 0;
    goto LABEL_21;
  }
  uint64_t v12 = v11;
  int64_t v13 = *(void *)(v11 + 16);
  if (v13)
  {
    long long v21 = (void *)MEMORY[0x263F8EE78];
    sub_262739750(0, v13, 0);
    uint64_t v14 = 0;
    id v3 = v21;
    unint64_t v15 = v21[2];
    do
    {
      double v16 = *(double *)(v12 + 8 * v14 + 32);
      unint64_t v17 = v21[3];
      if (v15 >= v17 >> 1) {
        sub_262739750(v17 > 1, v15 + 1, 1);
      }
      ++v14;
      float v18 = v16;
      v21[2] = v15 + 1;
      *((float *)v21 + v15++ + 8) = v18;
    }
    while (v13 != v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    id v3 = (id)MEMORY[0x263F8EE78];
  }
LABEL_21:
  unint64_t v19 = *(uint64_t (**)(id))(v0 + 8);
  return v19(v3);
}

uint64_t NLEmbedder.embed(texts:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = v3;
  *(unsigned char *)(v2 + 112) = *((unsigned char *)v1 + 8);
  *(void *)(v2 + 56) = v1[2];
  return MEMORY[0x270FA2498](sub_26275CCF0, 0, 0);
}

uint64_t sub_26275CCF0()
{
  id v1 = *(void **)(v0 + 40);
  uint64_t v2 = v1[2];
  *(void *)(v0 + 64) = v2;
  if (v2)
  {
    char v3 = *(unsigned char *)(v0 + 112);
    uint64_t v4 = MEMORY[0x263F8EE78];
    *(void *)(v0 + 72) = 0;
    *(void *)(v0 + 80) = v4;
    uint64_t v6 = *(void *)(v0 + 48);
    uint64_t v5 = *(void *)(v0 + 56);
    uint64_t v7 = v1[5];
    *(void *)(v0 + 88) = v7;
    uint64_t v8 = v1[4];
    swift_bridgeObjectRetain();
    *(void *)(v0 + 16) = v6;
    *(unsigned char *)(v0 + 24) = v3;
    *(void *)(v0 + 32) = v5;
    swift_bridgeObjectRetain();
    uint64_t v9 = swift_task_alloc();
    *(void *)(v0 + 96) = v9;
    *(void *)uint64_t v9 = v0;
    *(void *)(v9 + 8) = sub_26275CE48;
    *(void *)(v9 + 16) = v8;
    uint64_t v10 = *(void *)(v0 + 16);
    *(void *)(v9 + 24) = v7;
    *(void *)(v9 + 32) = v10;
    *(unsigned char *)(v9 + 48) = *(unsigned char *)(v0 + 24);
    *(void *)(v9 + 40) = *(void *)(v0 + 32);
    return MEMORY[0x270FA2498](sub_26275CA90, 0, 0);
  }
  else
  {
    uint64_t v11 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v12 = MEMORY[0x263F8EE78];
    return v11(v12);
  }
}

uint64_t sub_26275CE48(uint64_t a1)
{
  *(void *)(*(void *)v1 + 104) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_26275CF68, 0, 0);
}

uint64_t sub_26275CF68()
{
  uint64_t v1 = *(void *)(v0 + 104);
  if (!v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_26A9572B0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_26276F530();
    __swift_project_value_buffer(v8, (uint64_t)qword_26A95E208);
    uint64_t v9 = sub_26276F510();
    os_log_type_t v10 = sub_26276FA50();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_262725000, v9, v10, "Failed to generate embedding.", v11, 2u);
      MEMORY[0x263E528C0](v11, -1, -1);
    }

    uint64_t v3 = 0;
    goto LABEL_13;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v3 = *(void **)(v0 + 80);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v3 = sub_262727824(0, v3[2] + 1, 1, *(void **)(v0 + 80));
  }
  unint64_t v5 = v3[2];
  unint64_t v4 = v3[3];
  if (v5 >= v4 >> 1) {
    uint64_t v3 = sub_262727824((void *)(v4 > 1), v5 + 1, 1, v3);
  }
  uint64_t v6 = *(void *)(v0 + 64);
  uint64_t v7 = *(void *)(v0 + 72) + 1;
  v3[2] = v5 + 1;
  v3[v5 + 4] = v1;
  if (v7 == v6)
  {
    swift_bridgeObjectRelease();
LABEL_13:
    uint64_t v12 = *(uint64_t (**)(void *))(v0 + 8);
    return v12(v3);
  }
  uint64_t v14 = *(void *)(v0 + 72) + 1;
  *(void *)(v0 + 72) = v14;
  *(void *)(v0 + 80) = v3;
  uint64_t v16 = *(void *)(v0 + 48);
  uint64_t v15 = *(void *)(v0 + 56);
  char v17 = *(unsigned char *)(v0 + 112);
  uint64_t v18 = *(void *)(v0 + 40) + 16 * v14;
  uint64_t v19 = *(void *)(v18 + 40);
  *(void *)(v0 + 88) = v19;
  uint64_t v20 = *(void *)(v18 + 32);
  *(void *)(v0 + 16) = v16;
  *(unsigned char *)(v0 + 24) = v17;
  *(void *)(v0 + 32) = v15;
  swift_bridgeObjectRetain();
  uint64_t v21 = swift_task_alloc();
  *(void *)(v0 + 96) = v21;
  *(void *)uint64_t v21 = v0;
  *(void *)(v21 + 8) = sub_26275CE48;
  *(void *)(v21 + 16) = v20;
  uint64_t v22 = *(void *)(v0 + 16);
  *(void *)(v21 + 24) = v19;
  *(void *)(v21 + 32) = v22;
  *(unsigned char *)(v21 + 48) = *(unsigned char *)(v0 + 24);
  *(void *)(v21 + 40) = *(void *)(v0 + 32);
  return MEMORY[0x270FA2498](sub_26275CA90, 0, 0);
}

uint64_t sub_26275D200(uint64_t a1, uint64_t a2)
{
  return sub_26275E99C(a1, a2, &qword_26A957FF0);
}

uint64_t sub_26275D20C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *(void *)uint64_t v6 = v3;
  *(void *)(v6 + 8) = sub_26273E2FC;
  *(void *)(v6 + 16) = a1;
  uint64_t v7 = *v2;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = v7;
  *(unsigned char *)(v6 + 48) = *((unsigned char *)v2 + 8);
  *(void *)(v6 + 40) = v2[2];
  return MEMORY[0x270FA2498](sub_26275CA90, 0, 0);
}

uint64_t sub_26275D2D8(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_26273E3F8;
  uint64_t v5 = *v1;
  *(void *)(v4 + 40) = a1;
  *(void *)(v4 + 48) = v5;
  *(unsigned char *)(v4 + 112) = *((unsigned char *)v1 + 8);
  *(void *)(v4 + 56) = v1[2];
  return MEMORY[0x270FA2498](sub_26275CCF0, 0, 0);
}

uint64_t NLContextualEmbedder.init(useRecognizer:xpcCall:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v2 + 224) = a2;
  *(void *)(v2 + 160) = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957F68);
  *(void *)(v2 + 168) = v3;
  *(void *)(v2 + 176) = *(void *)(v3 - 8);
  *(void *)(v2 + 184) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_26275D460, 0, 0);
}

uint64_t sub_26275D460()
{
  uint64_t v1 = (void *)*MEMORY[0x263F13E60];
  *(void *)(v0 + 192) = *MEMORY[0x263F13E60];
  id v2 = objc_msgSend(self, sel_contextualEmbeddingWithLanguage_, v1);
  *(void *)(v0 + 200) = v2;
  if (!v2)
  {
    if (qword_26A9572B0 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_26276F530();
    __swift_project_value_buffer(v7, (uint64_t)qword_26A95E208);
    uint64_t v8 = sub_26276F510();
    os_log_type_t v9 = sub_26276FA50();
    if (os_log_type_enabled(v8, v9))
    {
      os_log_type_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v10 = 0;
      _os_log_impl(&dword_262725000, v8, v9, "Failed at creating NLContextualEmbedding.", v10, 2u);
      MEMORY[0x263E528C0](v10, -1, -1);
    }
    goto LABEL_21;
  }
  uint64_t v3 = v2;
  if (objc_msgSend(v2, sel_hasAvailableAssets))
  {
    if (objc_msgSend(*(id *)(v0 + 200), sel_hasAvailableAssets))
    {
      uint64_t v4 = *(void *)(v0 + 200);
      uint64_t v5 = *(unsigned __int8 *)(v0 + 224);
      uint64_t v6 = *(void **)(v0 + 160);
      *uint64_t v6 = *(void *)(v0 + 192);
      v6[1] = v5;
      v6[2] = v4;
LABEL_22:
      swift_task_dealloc();
      uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
      return v25();
    }
    if (qword_26A9572B0 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_26276F530();
    __swift_project_value_buffer(v19, (uint64_t)qword_26A95E208);
    uint64_t v20 = sub_26276F510();
    os_log_type_t v21 = sub_26276FA50();
    BOOL v22 = os_log_type_enabled(v20, v21);
    uint64_t v8 = *(NSObject **)(v0 + 200);
    if (v22)
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_262725000, v20, v21, "NLContextualEmbedding doesn't have available assets.", v23, 2u);
      MEMORY[0x263E528C0](v23, -1, -1);
    }
    else
    {

      uint64_t v8 = v20;
    }
LABEL_21:

    unint64_t v24 = *(void **)(v0 + 160);
    void *v24 = 0;
    v24[1] = 0;
    v24[2] = 0;
    goto LABEL_22;
  }
  if (qword_26A9572B0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_26276F530();
  *(void *)(v0 + 208) = __swift_project_value_buffer(v11, (uint64_t)qword_26A95E208);
  uint64_t v12 = sub_26276F510();
  os_log_type_t v13 = sub_26276FA30();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_262725000, v12, v13, "NLContextualEmbedding has no available assets. Requesting assets.", v14, 2u);
    MEMORY[0x263E528C0](v14, -1, -1);
  }
  uint64_t v16 = *(void *)(v0 + 176);
  uint64_t v15 = *(void *)(v0 + 184);
  uint64_t v17 = *(void *)(v0 + 168);

  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 144;
  *(void *)(v0 + 24) = sub_26275D904;
  swift_continuation_init();
  *(void *)(v0 + 136) = v17;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v0 + 112));
  type metadata accessor for AssetsResult(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957690);
  sub_26276F8E0();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v16 + 32))(boxed_opaque_existential_0, v15, v17);
  *(void *)(v0 + 80) = MEMORY[0x263EF8330];
  *(void *)(v0 + 88) = 1107296256;
  *(void *)(v0 + 96) = sub_26275DD44;
  *(void *)(v0 + 104) = &block_descriptor;
  objc_msgSend(v3, sel_requestEmbeddingAssetsWithCompletionHandler_, v0 + 80);
  return MEMORY[0x270FA23F0](v0 + 16);
}

uint64_t sub_26275D904()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 216) = v1;
  if (v1) {
    id v2 = sub_26275DA14;
  }
  else {
    id v2 = sub_26275DB30;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_26275DA14()
{
  uint64_t v1 = *(void **)(v0 + 216);
  swift_willThrow();

  id v2 = sub_26276F510();
  os_log_type_t v3 = sub_26276FA50();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(NSObject **)(v0 + 200);
  if (v4)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_262725000, v2, v3, "NLContextualEmbedder failed at requesting assets.", v6, 2u);
    MEMORY[0x263E528C0](v6, -1, -1);
    uint64_t v7 = v2;
  }
  else
  {
    uint64_t v7 = *(NSObject **)(v0 + 200);
    uint64_t v5 = v2;
  }

  uint64_t v8 = *(void **)(v0 + 160);
  *uint64_t v8 = 0;
  v8[1] = 0;
  v8[2] = 0;
  swift_task_dealloc();
  os_log_type_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_26275DB30()
{
  uint64_t v1 = *(void *)(v0 + 144);
  id v2 = sub_26276F510();
  os_log_type_t v3 = sub_26276FA40();
  if (os_log_type_enabled(v2, v3))
  {
    BOOL v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)BOOL v4 = 134217984;
    *(void *)(v0 + 152) = v1;
    sub_26276FA70();
    _os_log_impl(&dword_262725000, v2, v3, "NLContextualEmbedding.AssetsResult: %ld", v4, 0xCu);
    MEMORY[0x263E528C0](v4, -1, -1);
  }

  if (objc_msgSend(*(id *)(v0 + 200), sel_hasAvailableAssets))
  {
    uint64_t v5 = *(void *)(v0 + 200);
    uint64_t v6 = *(unsigned __int8 *)(v0 + 224);
    uint64_t v7 = *(void **)(v0 + 160);
    *uint64_t v7 = *(void *)(v0 + 192);
    v7[1] = v6;
    uint64_t v7[2] = v5;
  }
  else
  {
    if (qword_26A9572B0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_26276F530();
    __swift_project_value_buffer(v8, (uint64_t)qword_26A95E208);
    os_log_type_t v9 = sub_26276F510();
    os_log_type_t v10 = sub_26276FA50();
    BOOL v11 = os_log_type_enabled(v9, v10);
    uint64_t v12 = *(NSObject **)(v0 + 200);
    if (v11)
    {
      os_log_type_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v13 = 0;
      _os_log_impl(&dword_262725000, v9, v10, "NLContextualEmbedding doesn't have available assets.", v13, 2u);
      MEMORY[0x263E528C0](v13, -1, -1);
      uint64_t v14 = v9;
    }
    else
    {
      uint64_t v14 = *(NSObject **)(v0 + 200);
      uint64_t v12 = v9;
    }

    uint64_t v15 = *(void **)(v0 + 160);
    *uint64_t v15 = 0;
    v15[1] = 0;
    void v15[2] = 0;
  }
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

void sub_26275DD44(uint64_t a1, uint64_t a2, void *a3)
{
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 32), *(void *)(a1 + 56));
  if (a3)
  {
    id v4 = a3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A957F68);
    sub_26276F8F0();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A957F68);
    sub_26276F900();
  }
}

uint64_t NLContextualEmbedder.embed(text:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 160) = a1;
  *(void *)(v3 + 168) = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A957F78);
  *(void *)(v3 + 176) = v4;
  *(void *)(v3 + 184) = *(void *)(v4 - 8);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = *v2;
  *(void *)(v3 + 192) = v5;
  *(void *)(v3 + 200) = v6;
  *(unsigned char *)(v3 + 232) = *((unsigned char *)v2 + 8);
  *(void *)(v3 + 208) = v2[2];
  return MEMORY[0x270FA2498](sub_26275DEB4, 0, 0);
}

uint64_t sub_26275DEB4()
{
  if (!sub_26276F6D0()) {
    goto LABEL_9;
  }
  if (*(unsigned char *)(v0 + 232) != 1) {
    goto LABEL_13;
  }
  uint64_t v1 = self;
  id v2 = (void *)sub_26276F660();
  id v3 = objc_msgSend(v1, sel_dominantLanguageForString_, v2);

  if (!v3)
  {
LABEL_9:
    swift_task_dealloc();
    os_log_type_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10(0);
  }
  uint64_t v4 = sub_26276F690();
  uint64_t v6 = v5;
  if (v4 == sub_26276F690() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v9 = sub_26276FDA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if ((v9 & 1) == 0) {
      goto LABEL_9;
    }
  }
LABEL_13:
  uint64_t v12 = *(void *)(v0 + 192);
  uint64_t v17 = *(void **)(v0 + 208);
  uint64_t v18 = *(void *)(v0 + 200);
  uint64_t v14 = *(void *)(v0 + 176);
  uint64_t v13 = *(void *)(v0 + 184);
  uint64_t v15 = sub_26276F660();
  *(void *)(v0 + 216) = v15;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 144;
  *(void *)(v0 + 24) = sub_26275E184;
  swift_continuation_init();
  *(void *)(v0 + 136) = v14;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v0 + 112));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957F80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957690);
  sub_26276F8E0();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v13 + 32))(boxed_opaque_existential_0, v12, v14);
  *(void *)(v0 + 80) = MEMORY[0x263EF8330];
  *(void *)(v0 + 88) = 1107296256;
  *(void *)(v0 + 96) = sub_26275E3CC;
  *(void *)(v0 + 104) = &block_descriptor_7;
  objc_msgSend(v17, sel_requestSentenceEmbeddingVectorForString_language_completionHandler_, v15, v18, v0 + 80);
  return MEMORY[0x270FA23F0](v0 + 16);
}

uint64_t sub_26275E184()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 224) = v1;
  if (v1) {
    id v2 = sub_26275E348;
  }
  else {
    id v2 = sub_26275E294;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_26275E294()
{
  if (*(void *)(v0 + 144))
  {
    uint64_t v1 = *(void **)(v0 + 216);
    uint64_t v2 = sub_26275A92C(*(void *)(v0 + 144));
    swift_bridgeObjectRelease();
  }
  else
  {

    uint64_t v2 = 0;
  }
  swift_task_dealloc();
  id v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_26275E348()
{
  uint64_t v1 = (void *)v0[27];
  uint64_t v2 = (void *)v0[28];
  swift_willThrow();

  swift_task_dealloc();
  id v3 = (uint64_t (*)(void))v0[1];
  return v3(0);
}

void sub_26275E3CC(uint64_t a1, uint64_t a2, void *a3)
{
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 32), *(void *)(a1 + 56));
  if (a3)
  {
    id v5 = a3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A957F78);
    sub_26276F8F0();
  }
  else
  {
    if (a2)
    {
      sub_26275F5B0(0, &qword_26A958008);
      sub_26276F7D0();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A957F78);
    sub_26276F900();
  }
}

uint64_t NLContextualEmbedder.embed(texts:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = v3;
  *(unsigned char *)(v2 + 112) = *((unsigned char *)v1 + 8);
  *(void *)(v2 + 56) = v1[2];
  return MEMORY[0x270FA2498](sub_26275E4C8, 0, 0);
}

uint64_t sub_26275E4C8()
{
  uint64_t v1 = *(void **)(v0 + 40);
  uint64_t v2 = v1[2];
  *(void *)(v0 + 64) = v2;
  if (v2)
  {
    char v3 = *(unsigned char *)(v0 + 112);
    uint64_t v4 = MEMORY[0x263F8EE78];
    *(void *)(v0 + 72) = 0;
    *(void *)(v0 + 80) = v4;
    uint64_t v6 = *(void *)(v0 + 48);
    uint64_t v5 = *(void *)(v0 + 56);
    uint64_t v7 = v1[5];
    *(void *)(v0 + 88) = v7;
    uint64_t v8 = v1[4];
    swift_bridgeObjectRetain();
    *(void *)(v0 + 16) = v6;
    *(unsigned char *)(v0 + 24) = v3;
    *(void *)(v0 + 32) = v5;
    swift_bridgeObjectRetain();
    char v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v9;
    *char v9 = v0;
    v9[1] = sub_26275E5FC;
    return NLContextualEmbedder.embed(text:)(v8, v7);
  }
  else
  {
    BOOL v11 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v12 = MEMORY[0x263F8EE78];
    return v11(v12);
  }
}

uint64_t sub_26275E5FC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 104) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_26275E71C, 0, 0);
}

uint64_t sub_26275E71C()
{
  uint64_t v1 = *(void *)(v0 + 104);
  if (!v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_26A9572B0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_26276F530();
    __swift_project_value_buffer(v8, (uint64_t)qword_26A95E208);
    char v9 = sub_26276F510();
    os_log_type_t v10 = sub_26276FA50();
    if (os_log_type_enabled(v9, v10))
    {
      BOOL v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v11 = 0;
      _os_log_impl(&dword_262725000, v9, v10, "Failed to generate embedding.", v11, 2u);
      MEMORY[0x263E528C0](v11, -1, -1);
    }

    uint64_t v3 = 0;
    goto LABEL_13;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v3 = *(void **)(v0 + 80);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v3 = sub_262727824(0, v3[2] + 1, 1, *(void **)(v0 + 80));
  }
  unint64_t v5 = v3[2];
  unint64_t v4 = v3[3];
  if (v5 >= v4 >> 1) {
    uint64_t v3 = sub_262727824((void *)(v4 > 1), v5 + 1, 1, v3);
  }
  uint64_t v6 = *(void *)(v0 + 64);
  uint64_t v7 = *(void *)(v0 + 72) + 1;
  v3[2] = v5 + 1;
  v3[v5 + 4] = v1;
  if (v7 == v6)
  {
    swift_bridgeObjectRelease();
LABEL_13:
    uint64_t v12 = *(uint64_t (**)(void *))(v0 + 8);
    return v12(v3);
  }
  uint64_t v14 = *(void *)(v0 + 72) + 1;
  *(void *)(v0 + 72) = v14;
  *(void *)(v0 + 80) = v3;
  uint64_t v16 = *(void *)(v0 + 48);
  uint64_t v15 = *(void *)(v0 + 56);
  char v17 = *(unsigned char *)(v0 + 112);
  uint64_t v18 = *(void *)(v0 + 40) + 16 * v14;
  uint64_t v19 = *(void *)(v18 + 40);
  *(void *)(v0 + 88) = v19;
  uint64_t v20 = *(void *)(v18 + 32);
  *(void *)(v0 + 16) = v16;
  *(unsigned char *)(v0 + 24) = v17;
  *(void *)(v0 + 32) = v15;
  swift_bridgeObjectRetain();
  os_log_type_t v21 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v21;
  void *v21 = v0;
  v21[1] = sub_26275E5FC;
  return NLContextualEmbedder.embed(text:)(v20, v19);
}

uint64_t sub_26275E990(uint64_t a1, uint64_t a2)
{
  return sub_26275E99C(a1, a2, &qword_26A957FE8);
}

uint64_t sub_26275E99C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_26276F6A0();
}

uint64_t sub_26275E9D0(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_26273E3F8;
  return NLContextualEmbedder.embed(text:)(a1, a2);
}

uint64_t sub_26275EA74(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_26273E3F8;
  uint64_t v5 = *v1;
  *(void *)(v4 + 40) = a1;
  *(void *)(v4 + 48) = v5;
  *(unsigned char *)(v4 + 112) = *((unsigned char *)v1 + 8);
  *(void *)(v4 + 56) = v1[2];
  return MEMORY[0x270FA2498](sub_26275E4C8, 0, 0);
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  return sub_26273AD28(a2 + 32, a1 + 32);
}

uint64_t block_destroy_helper(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1 + 32);
}

unint64_t sub_26275EBB4()
{
  unint64_t result = qword_26A957F90;
  if (!qword_26A957F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957F90);
  }
  return result;
}

unint64_t sub_26275EC0C()
{
  unint64_t result = qword_26A957F98;
  if (!qword_26A957F98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A957FA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A957F98);
  }
  return result;
}

uint64_t dispatch thunk of Embedder.embeddingModel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Embedder.embed(text:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 16) + **(int **)(a4 + 16));
  char v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *char v9 = v4;
  v9[1] = sub_26273E3F8;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of Embedder.embed(texts:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_26273E3F8;
  return v9(a1, a2, a3);
}

uint64_t getEnumTagSinglePayload for EmbedderName(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for EmbedderName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x26275EFE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmbedderName()
{
  return &type metadata for EmbedderName;
}

uint64_t destroy for MADTextEmbedder(id *a1)
{
  return swift_bridgeObjectRelease();
}

void *_s16ZeoliteFramework15MADTextEmbedderVwCP_0(void *a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MADTextEmbedder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MADTextEmbedder(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MADTextEmbedder()
{
  return &type metadata for MADTextEmbedder;
}

uint64_t initializeBufferWithCopyOfBuffer for NLEmbedder(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for NLEmbedder(uint64_t a1)
{
  int v2 = *(void **)(a1 + 16);
}

uint64_t assignWithCopy for NLEmbedder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  BOOL v7 = *(void **)(a1 + 16);
  int v8 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v8;
  id v9 = v8;

  return a1;
}

uint64_t assignWithTake for NLEmbedder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  id v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for NLEmbedder()
{
  return &type metadata for NLEmbedder;
}

uint64_t assignWithCopy for NLContextualEmbedder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  BOOL v7 = *(void **)(a2 + 16);
  int v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for NLContextualEmbedder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  id v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

uint64_t _s16ZeoliteFramework15MADTextEmbedderVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_26275F39C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NLContextualEmbedder()
{
  return &type metadata for NLContextualEmbedder;
}

unint64_t sub_26275F3EC()
{
  unint64_t result = qword_26A958000;
  if (!qword_26A958000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A958000);
  }
  return result;
}

uint64_t sub_26275F440()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A958010);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6 + 8, v5);
}

void sub_26275F4E8(int a1, void *a2)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A958010) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  BOOL v7 = *(void **)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_26275BDC0(a1, a2, v2 + v6, v7);
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_25()
{
  return swift_release();
}

uint64_t sub_26275F5B0(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_26275F5EC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_26275F644(uint64_t *a1, void *a2, uint64_t a3, unint64_t a4)
{
  uint64_t result = *a1;
  uint64_t v6 = a1[1];
  unint64_t v7 = a4 >> 62;
  uint64_t v9 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      LODWORD(v10) = HIDWORD(a3) - a3;
      if (__OFSUB__(HIDWORD(a3), a3)) {
        goto LABEL_30;
      }
      uint64_t v10 = (int)v10;
LABEL_6:
      if (v10 < 1) {
        goto LABEL_18;
      }
      if (v7)
      {
        if (v7 == 1) {
          uint64_t v14 = (int)a3;
        }
        else {
          uint64_t v14 = *(void *)(a3 + 16);
        }
      }
      else
      {
        uint64_t v14 = 0;
      }
      if (v6 + 0x4000000000000000 < 0) {
        goto LABEL_27;
      }
      uint64_t v15 = 2 * v6;
      if (v10 < 2 * v6) {
        uint64_t v15 = v10;
      }
      uint64_t v16 = v14 + v15;
      if (__OFADD__(v14, v15)) {
        goto LABEL_28;
      }
      if (v16 < v14) {
        goto LABEL_29;
      }
      if (v14 == v16)
      {
LABEL_18:
        uint64_t v9 = 0;
      }
      else
      {
        if (!result)
        {
LABEL_33:
          __break(1u);
          JUMPOUT(0x26275F78CLL);
        }
        uint64_t result = sub_26276F2D0();
        uint64_t v9 = v16 - v14;
        if (__OFSUB__(v16, v14))
        {
LABEL_32:
          __break(1u);
          goto LABEL_33;
        }
      }
LABEL_21:
      if (v9 >= 0) {
        uint64_t v17 = v9;
      }
      else {
        uint64_t v17 = v9 + 1;
      }
      BOOL v13 = __OFADD__(*a2, v17 >> 1);
      uint64_t v18 = *a2 + (v17 >> 1);
      if (v13)
      {
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      *a2 = v18;
      return result;
    case 2uLL:
      uint64_t v12 = *(void *)(a3 + 16);
      uint64_t v11 = *(void *)(a3 + 24);
      BOOL v13 = __OFSUB__(v11, v12);
      uint64_t v10 = v11 - v12;
      if (!v13) {
        goto LABEL_6;
      }
      goto LABEL_31;
    case 3uLL:
      goto LABEL_21;
    default:
      uint64_t v10 = BYTE6(a4);
      goto LABEL_6;
  }
}

uint64_t sub_26275F79C(uint64_t *a1, void *a2, uint64_t a3, unint64_t a4)
{
  uint64_t result = *a1;
  uint64_t v6 = a1[1];
  unint64_t v7 = a4 >> 62;
  uint64_t v9 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      LODWORD(v10) = HIDWORD(a3) - a3;
      if (__OFSUB__(HIDWORD(a3), a3)) {
        goto LABEL_27;
      }
      uint64_t v10 = (int)v10;
LABEL_6:
      if (v10 < 1) {
        goto LABEL_18;
      }
      if (v7)
      {
        if (v7 == 1) {
          uint64_t v14 = (int)a3;
        }
        else {
          uint64_t v14 = *(void *)(a3 + 16);
        }
      }
      else
      {
        uint64_t v14 = 0;
      }
      if ((unint64_t)(v6 - 0x2000000000000000) >> 62 != 3) {
        goto LABEL_24;
      }
      uint64_t v15 = 4 * v6;
      if (v10 < 4 * v6) {
        uint64_t v15 = v10;
      }
      uint64_t v16 = v14 + v15;
      if (__OFADD__(v14, v15)) {
        goto LABEL_25;
      }
      if (v16 < v14) {
        goto LABEL_26;
      }
      if (v14 == v16)
      {
LABEL_18:
        uint64_t v9 = 0;
      }
      else
      {
        if (!result)
        {
LABEL_30:
          __break(1u);
          JUMPOUT(0x26275F8F0);
        }
        uint64_t result = sub_26276F2D0();
        uint64_t v9 = v16 - v14;
        if (__OFSUB__(v16, v14))
        {
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
      }
LABEL_21:
      if (__OFADD__(*a2, v9 / 4))
      {
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      *a2 += v9 / 4;
      return result;
    case 2uLL:
      uint64_t v12 = *(void *)(a3 + 16);
      uint64_t v11 = *(void *)(a3 + 24);
      BOOL v13 = __OFSUB__(v11, v12);
      uint64_t v10 = v11 - v12;
      if (!v13) {
        goto LABEL_6;
      }
      goto LABEL_28;
    case 3uLL:
      goto LABEL_21;
    default:
      uint64_t v10 = BYTE6(a4);
      goto LABEL_6;
  }
}

ZeoliteFramework::MetricTreeType_optional __swiftcall MetricTreeType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_26276FC20();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static MetricTreeType.allCases.getter()
{
  return &unk_270DC5F00;
}

uint64_t MetricTreeType.rawValue.getter()
{
  if (*v0) {
    return 0x656572547076;
  }
  else {
    return 0x656572546C6C6162;
  }
}

uint64_t sub_26275F9B8(char *a1, char *a2)
{
  return sub_262743EFC(*a1, *a2);
}

unint64_t sub_26275F9C8()
{
  unint64_t result = qword_26A958030;
  if (!qword_26A958030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A958030);
  }
  return result;
}

uint64_t sub_26275FA1C()
{
  return sub_26276FE20();
}

uint64_t sub_26275FA9C()
{
  sub_26276F6C0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_26275FB08()
{
  return sub_26276FE20();
}

ZeoliteFramework::MetricTreeType_optional sub_26275FB84(Swift::String *a1)
{
  return MetricTreeType.init(rawValue:)(*a1);
}

void sub_26275FB90(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x656572546C6C6162;
  if (*v1) {
    uint64_t v2 = 0x656572547076;
  }
  unint64_t v3 = 0xE800000000000000;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_26275FBD0()
{
  unint64_t result = qword_26A958038;
  if (!qword_26A958038)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A958040);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A958038);
  }
  return result;
}

void sub_26275FC2C(void *a1@<X8>)
{
  *a1 = &unk_270DC5F28;
}

uint64_t sub_26275FC3C()
{
  return sub_26276F7A0();
}

uint64_t sub_26275FC9C()
{
  return sub_26276F760();
}

unsigned char *storeEnumTagSinglePayload for MetricTreeType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x26275FDB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricTreeType()
{
  return &type metadata for MetricTreeType;
}

uint64_t dispatch thunk of MetricTree.metric.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of MetricTree.nodes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of MetricTree.isEmpty.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of MetricTree.maxDepth()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

unint64_t sub_26275FE40()
{
  unint64_t result = qword_26A958048;
  if (!qword_26A958048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A958048);
  }
  return result;
}

uint64_t sub_26275FE94(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    sub_262739750(0, v2, 0);
    uint64_t result = v8;
    unsigned int v4 = (int *)(a1 + 40);
    do
    {
      int v5 = *v4;
      uint64_t v9 = result;
      unint64_t v7 = *(void *)(result + 16);
      unint64_t v6 = *(void *)(result + 24);
      if (v7 >= v6 >> 1)
      {
        sub_262739750(v6 > 1, v7 + 1, 1);
        uint64_t result = v9;
      }
      *(void *)(result + 16) = v7 + 1;
      *(_DWORD *)(result + 4 * v7 + 32) = v5;
      v4 += 5;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t NearestNeighborsScorer.scoreBatches<A>(_:topK:skipFirst:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v8 + 64) = a7;
  *(void *)(v8 + 72) = v7;
  *(void *)(v8 + 48) = a5;
  *(void *)(v8 + 56) = a6;
  *(void *)(v8 + 32) = a2;
  *(void *)(v8 + 40) = a4;
  *(unsigned char *)(v8 + 272) = a3;
  *(void *)(v8 + 24) = a1;
  uint64_t v10 = sub_26276F910();
  *(void *)(v8 + 80) = v10;
  *(void *)(v8 + 88) = *(void *)(v10 - 8);
  *(void *)(v8 + 96) = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(void *)(v8 + 104) = AssociatedTypeWitness;
  *(void *)(v8 + 112) = *(void *)(AssociatedTypeWitness - 8);
  *(void *)(v8 + 120) = swift_task_alloc();
  sub_26276FA60();
  *(void *)(v8 + 128) = swift_task_alloc();
  *(void *)(v8 + 136) = *(void *)(a5 - 8);
  *(void *)(v8 + 144) = swift_task_alloc();
  uint64_t v12 = swift_getAssociatedTypeWitness();
  *(void *)(v8 + 152) = v12;
  *(void *)(v8 + 160) = *(void *)(v12 - 8);
  *(void *)(v8 + 168) = swift_task_alloc();
  uint64_t v13 = swift_getAssociatedTypeWitness();
  *(void *)(v8 + 176) = v13;
  *(void *)(v8 + 184) = *(void *)(v13 - 8);
  *(void *)(v8 + 192) = swift_task_alloc();
  *(void *)(v8 + 200) = swift_task_alloc();
  *(void *)(v8 + 208) = swift_task_alloc();
  *(void *)(v8 + 216) = swift_task_alloc();
  *(void *)(v8 + 224) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_262760260, 0, 0);
}

uint64_t sub_262760260()
{
  (*(void (**)(void, void, void))(v0[17] + 16))(v0[18], v0[3], v0[6]);
  sub_26276F970();
  v0[29] = MEMORY[0x263F8EE78];
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v0[30] = AssociatedConformanceWitness;
  int64_t v2 = (void *)swift_task_alloc();
  v0[31] = v2;
  *int64_t v2 = v0;
  v2[1] = sub_26276038C;
  uint64_t v3 = v0[27];
  uint64_t v4 = v0[19];
  uint64_t v5 = v0[16];
  return MEMORY[0x270FA1E88](v5, 0, 0, v3, v4, AssociatedConformanceWitness);
}

uint64_t sub_26276038C()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v1 = sub_262760BD4;
  }
  else
  {
    uint64_t v1 = sub_2627604A4;
  }
  return MEMORY[0x270FA2498](v1, 0, 0);
}

uint64_t sub_2627604A4()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 112);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v13 = *(void *)(v0 + 232);
    (*(void (**)(void, void))(*(void *)(v0 + 160) + 8))(*(void *)(v0 + 168), *(void *)(v0 + 152));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v4(v13);
  }
  else
  {
    uint64_t v14 = *(void *)(v0 + 56);
    (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(*(void *)(v0 + 120), v1, v2);
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 + 16)
                                                                              + **(int **)(v14 + 16));
    unint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 256) = v6;
    *unint64_t v6 = v0;
    v6[1] = sub_2627606D8;
    uint64_t v7 = *(void *)(v0 + 120);
    uint64_t v8 = *(void *)(v0 + 56);
    uint64_t v9 = *(unsigned __int8 *)(v0 + 272);
    uint64_t v10 = *(void *)(v0 + 32);
    uint64_t v11 = *(void *)(v0 + 40);
    return v12(v7, v10, v9, v11, v8);
  }
}

uint64_t sub_2627606D8(uint64_t a1)
{
  *(void *)(*(void *)v1 + 264) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2627607D8, 0, 0);
}

uint64_t sub_2627607D8()
{
  uint64_t v1 = v0[33];
  if (v1)
  {
    uint64_t v2 = *(void *)(v1 + 16);
    int64_t v3 = *(void *)(v0[29] + 16);
    int64_t v4 = v3 + v2;
    if (__OFADD__(v3, v2))
    {
      __break(1u);
    }
    else
    {
      char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
      unint64_t v6 = (void *)v0[29];
      if (isUniquelyReferenced_nonNull_native && v4 <= v6[3] >> 1)
      {
        if (*(void *)(v1 + 16)) {
          goto LABEL_6;
        }
      }
      else
      {
        if (v3 <= v4) {
          int64_t v25 = v3 + v2;
        }
        else {
          int64_t v25 = v3;
        }
        unint64_t v6 = sub_262727A8C(isUniquelyReferenced_nonNull_native, v25, 1, (void *)v0[29]);
        if (*(void *)(v1 + 16))
        {
LABEL_6:
          uint64_t v7 = v6[2];
          if ((v6[3] >> 1) - v7 >= v2)
          {
            unint64_t v8 = (unint64_t)&v6[2 * v7 + 4];
            if (v1 + 32 < v8 + 16 * v2 && v8 < v1 + 32 + 16 * v2) {
              return sub_26276FC00();
            }
            swift_arrayInitWithCopy();
            if (v2)
            {
              uint64_t v10 = v6[2];
              BOOL v11 = __OFADD__(v10, v2);
              uint64_t v12 = v10 + v2;
              if (v11)
              {
                __break(1u);
                return sub_26276FC00();
              }
              v6[2] = v12;
            }
            goto LABEL_26;
          }
          goto LABEL_31;
        }
      }
      if (!v2)
      {
LABEL_26:
        uint64_t v27 = v0[14];
        uint64_t v26 = v0[15];
        uint64_t v28 = v0[13];
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
        v0[29] = v6;
        uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        v0[30] = AssociatedConformanceWitness;
        os_log_type_t v30 = (void *)swift_task_alloc();
        v0[31] = v30;
        *os_log_type_t v30 = v0;
        v30[1] = sub_26276038C;
        uint64_t v31 = v0[27];
        uint64_t v32 = v0[19];
        uint64_t v33 = v0[16];
        return MEMORY[0x270FA1E88](v33, 0, 0, v31, v32, AssociatedConformanceWitness);
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  swift_bridgeObjectRelease();
  if (qword_26A9572B0 != -1) {
LABEL_32:
  }
    swift_once();
  uint64_t v13 = sub_26276F530();
  __swift_project_value_buffer(v13, (uint64_t)qword_26A95E208);
  uint64_t v14 = sub_26276F510();
  os_log_type_t v15 = sub_26276FA50();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_262725000, v14, v15, "Failed to score in batch.", v16, 2u);
    MEMORY[0x263E528C0](v16, -1, -1);
  }
  uint64_t v18 = v0[20];
  uint64_t v17 = v0[21];
  uint64_t v19 = v0[19];
  uint64_t v21 = v0[14];
  uint64_t v20 = v0[15];
  uint64_t v22 = v0[13];

  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
  return v23(0);
}

uint64_t sub_262760BD4()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[28];
  uint64_t v3 = v0[22];
  uint64_t v4 = v0[23];
  (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v5(v2, v1, v3);
  if (swift_dynamicCast())
  {
    if (qword_26A9572B0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_26276F530();
    __swift_project_value_buffer(v6, (uint64_t)qword_26A95E208);
    uint64_t v7 = sub_26276F510();
    os_log_type_t v8 = sub_26276FA30();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_262725000, v7, v8, "Task canceled at scoring.", v9, 2u);
      MEMORY[0x263E528C0](v9, -1, -1);
    }
    uint64_t v10 = v0[28];
    uint64_t v11 = v0[22];
    uint64_t v12 = v0[23];
    uint64_t v14 = v0[11];
    uint64_t v13 = v0[12];
    uint64_t v15 = v0[10];

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  else
  {
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[23] + 16);
    v16(v0[26], v0[28], v0[22]);
    if (qword_26A9572B0 != -1) {
      swift_once();
    }
    uint64_t v17 = v0[25];
    uint64_t v18 = v0[26];
    uint64_t v19 = v0[22];
    uint64_t v20 = sub_26276F530();
    __swift_project_value_buffer(v20, (uint64_t)qword_26A95E208);
    v16(v17, v18, v19);
    uint64_t v21 = sub_26276F510();
    os_log_type_t v22 = sub_26276FA50();
    if (os_log_type_enabled(v21, v22))
    {
      os_log_type_t v45 = v22;
      char v43 = v5;
      uint64_t v24 = v0[24];
      uint64_t v23 = v0[25];
      uint64_t v25 = v0[22];
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v44 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 138412290;
      v16(v24, v23, v25);
      swift_getAssociatedConformanceWitness();
      uint64_t v27 = sub_26276FD80();
      uint64_t v28 = v0[24];
      if (v27)
      {
        (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
      }
      else
      {
        uint64_t v33 = v0[22];
        swift_allocError();
        v43(v34, v28, v33);
      }
      uint64_t v35 = v0[25];
      uint64_t v37 = v0[22];
      uint64_t v36 = v0[23];
      uint64_t v38 = _swift_stdlib_bridgeErrorToNSError();
      v0[2] = v38;
      sub_26276FA70();
      *uint64_t v44 = v38;
      uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
      v32(v35, v37);
      _os_log_impl(&dword_262725000, v21, v45, "Error: %@", v26, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A9573B8);
      swift_arrayDestroy();
      MEMORY[0x263E528C0](v44, -1, -1);
      MEMORY[0x263E528C0](v26, -1, -1);
    }
    else
    {
      uint64_t v29 = v0[25];
      uint64_t v30 = v0[22];
      uint64_t v31 = v0[23];

      uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
      v32(v29, v30);
    }
    uint64_t v39 = v0[28];
    uint64_t v40 = v0[22];
    v32(v0[26], v40);
    v32(v39, v40);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v41 = (uint64_t (*)(void))v0[1];
  return v41(0);
}

ZeoliteFramework::ScorerName_optional __swiftcall ScorerName.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_26276FC20();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static ScorerName.allCases.getter()
{
  return &unk_270DC5FA0;
}

uint64_t ScorerName.rawValue.getter()
{
  if (*v0) {
    return 0x78697274616DLL;
  }
  else {
    return 0x726F736E6574;
  }
}

uint64_t sub_26276115C(char *a1, char *a2)
{
  return sub_262744250(*a1, *a2);
}

uint64_t sub_262761168()
{
  return sub_26276FE20();
}

uint64_t sub_2627611D8()
{
  sub_26276F6C0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_26276122C()
{
  return sub_26276FE20();
}

ZeoliteFramework::ScorerName_optional sub_262761298(Swift::String *a1)
{
  return ScorerName.init(rawValue:)(*a1);
}

void sub_2627612A4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x726F736E6574;
  if (*v1) {
    uint64_t v2 = 0x78697274616DLL;
  }
  *a1 = v2;
  a1[1] = 0xE600000000000000;
}

void sub_2627612D4(void *a1@<X8>)
{
  *a1 = &unk_270DC5FC8;
}

uint64_t sub_2627612E4()
{
  return sub_26276F7A0();
}

uint64_t sub_262761344()
{
  return sub_26276F760();
}

uint64_t calculatePercentilesOfMeanTopK(_:percentiles:)(uint64_t a1, void *a2)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  if (a2)
  {
    v3._rawValue = a2;
    int64_t v4 = *(void *)(a1 + 16);
    if (v4) {
      goto LABEL_3;
    }
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v7 = MEMORY[0x263F8EE78];
    goto LABEL_25;
  }
  v3._rawValue = (void *)sub_2627616F8(0, 100, 10);
  int64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    goto LABEL_24;
  }
LABEL_3:
  rawValue = v3._rawValue;
  uint64_t v31 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  sub_26273ACE8(0, v4, 0);
  uint64_t v5 = 0;
  uint64_t v6 = a1 + 32;
  uint64_t v7 = v31;
  do
  {
    v8._rawValue = *(void **)(v6 + 16 * v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v9 = (unint64_t)calculatePercentiles(_:percentiles:)(v8, (Swift::OpaquePointer)&unk_270DC5B70);
    float v10 = 0.0;
    int v11 = 0;
    if (v9)
    {
      if (!*(void *)(v9 + 16)) {
        __break(1u);
      }
      int v11 = *(_DWORD *)(v9 + 32);
      swift_bridgeObjectRelease();
    }
    vDSP_Length v12 = *((void *)v8._rawValue + 2);
    if (v12)
    {
      float v10 = *((float *)v8._rawValue + 8);
      vDSP_Length v13 = v12 - 1;
      if (v12 == 1)
      {
        float v14 = *((float *)v8._rawValue + 8);
      }
      else
      {
        uint64_t v15 = 0;
        float v14 = *((float *)v8._rawValue + 8);
        do
        {
          if (*((float *)v8._rawValue + v15 + 9) < v14) {
            float v14 = *((float *)v8._rawValue + v15 + 9);
          }
          ++v15;
        }
        while (v13 != v15);
        uint64_t v16 = (float *)((char *)v8._rawValue + 36);
        do
        {
          float v17 = *v16++;
          float v18 = v17;
          if (v10 < v17) {
            float v10 = v18;
          }
          --v13;
        }
        while (v13);
      }
    }
    else
    {
      float v14 = 0.0;
    }
    LODWORD(__C) = 2143289344;
    swift_bridgeObjectRetain();
    vDSP_meanv((const float *)v8._rawValue + 8, 1, (float *)&__C, v12);
    swift_bridgeObjectRelease();
    int v19 = (int)__C;
    float __C = v8._rawValue;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A957308);
    sub_262761C04((unint64_t *)&qword_26A9574D0, &qword_26A957308);
    sub_26276F100();
    int v21 = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v31 = v7;
    unint64_t v23 = *(void *)(v7 + 16);
    unint64_t v22 = *(void *)(v7 + 24);
    if (v23 >= v22 >> 1)
    {
      sub_26273ACE8(v22 > 1, v23 + 1, 1);
      uint64_t v7 = v31;
    }
    ++v5;
    *(void *)(v7 + 16) = v23 + 1;
    uint64_t v24 = v7 + 20 * v23;
    *(float *)(v24 + 32) = v14;
    *(float *)(v24 + 36) = v10;
    *(_DWORD *)(v24 + 40) = v19;
    *(_DWORD *)(v24 + 44) = v21;
    *(_DWORD *)(v24 + 48) = v11;
  }
  while (v5 != v4);
  v3._rawValue = rawValue;
LABEL_25:
  uint64_t v25 = sub_26275FE94(v7);
  swift_bridgeObjectRelease();
  uint64_t v26 = (unint64_t)calculatePercentiles(_:percentiles:)((Swift::OpaquePointer)v25, v3);
  swift_bridgeObjectRelease();
  if (v26)
  {
    uint64_t v27 = sub_262761958((uint64_t)v3._rawValue, v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v27;
  }
  else
  {
    uint64_t result = sub_26276FBB0();
    __break(1u);
  }
  return result;
}

uint64_t sub_2627616F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v5 = a1;
  uint64_t v6 = sub_262761EBC(a1, a2, a3);
  uint64_t v24 = MEMORY[0x263F8EE78];
  uint64_t result = sub_262739750(0, v6 & ~(v6 >> 63), 0);
  if (v6 < 0) {
    goto LABEL_46;
  }
  uint64_t result = v24;
  int v8 = 0;
  unint64_t v9 = 0;
  BOOL v10 = 0;
  if (!v6) {
    goto LABEL_22;
  }
  uint64_t v11 = v5;
  while (1)
  {
    BOOL v12 = v11 <= a2;
    if (a3 > 0) {
      BOOL v12 = v11 >= a2;
    }
    if (!v12)
    {
      BOOL v10 = !__OFADD__(v11, a3);
      if (__OFADD__(v11, a3)) {
        unint64_t v9 = 0x8000000000000000;
      }
      else {
        unint64_t v9 = 0;
      }
      if (__OFADD__(v11, a3)) {
        int64_t v5 = ((v11 + a3) >> 63) ^ 0x8000000000000000;
      }
      else {
        int64_t v5 = v11 + a3;
      }
      goto LABEL_19;
    }
    if (v8 & 1 | (v11 != a2)) {
      break;
    }
    if (!v10 && v9 == 0x8000000000000000) {
      goto LABEL_45;
    }
    int v8 = 1;
    int64_t v5 = a2;
LABEL_19:
    uint64_t v25 = result;
    unint64_t v14 = *(void *)(result + 16);
    unint64_t v13 = *(void *)(result + 24);
    if (v14 >= v13 >> 1)
    {
      unint64_t v22 = v9;
      int v20 = v8;
      sub_262739750(v13 > 1, v14 + 1, 1);
      int v8 = v20;
      unint64_t v9 = v22;
      uint64_t result = v25;
    }
    *(void *)(result + 16) = v14 + 1;
    *(float *)(result + 4 * v14 + 32) = (float)v11;
    uint64_t v11 = v5;
    if (!--v6)
    {
      while (1)
      {
LABEL_22:
        BOOL v15 = v5 <= a2;
        if (a3 > 0) {
          BOOL v15 = v5 >= a2;
        }
        if (v15)
        {
          if ((v5 != a2) | v8 & 1) {
            return result;
          }
          if (v10)
          {
            int v8 = 1;
            uint64_t v16 = a2;
            BOOL v10 = 1;
          }
          else
          {
            if (v9 == 0x8000000000000000) {
              return result;
            }
            BOOL v10 = 0;
            int v8 = 1;
            uint64_t v16 = a2;
          }
        }
        else
        {
          BOOL v17 = __OFADD__(v5, a3);
          if (v17) {
            uint64_t v16 = (a3 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
          }
          else {
            uint64_t v16 = v5 + a3;
          }
          if (v17) {
            unint64_t v9 = 0x8000000000000000;
          }
          else {
            unint64_t v9 = 0;
          }
          BOOL v10 = !v17;
        }
        uint64_t v26 = result;
        unint64_t v19 = *(void *)(result + 16);
        unint64_t v18 = *(void *)(result + 24);
        if (v19 >= v18 >> 1)
        {
          unint64_t v23 = v9;
          int v21 = v8;
          sub_262739750(v18 > 1, v19 + 1, 1);
          int v8 = v21;
          unint64_t v9 = v23;
          uint64_t result = v26;
        }
        *(void *)(result + 16) = v19 + 1;
        *(float *)(result + 4 * v19 + 32) = (float)v5;
        int64_t v5 = v16;
      }
    }
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_262761958(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a2 + 16);
  if (v5 >= v4) {
    int64_t v6 = *(void *)(a1 + 16);
  }
  else {
    int64_t v6 = *(void *)(a2 + 16);
  }
  uint64_t v35 = MEMORY[0x263F8EE78];
  sub_26273ACC8(0, v6, 0);
  int64_t v32 = v5;
  unint64_t v33 = v4;
  uint64_t v34 = a1;
  if (v6)
  {
    uint64_t v7 = (int *)(a1 + 32);
    int v8 = (int *)(a2 + 32);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v10 = v6;
    uint64_t v11 = a2;
    while (v4)
    {
      if (!v5) {
        goto LABEL_26;
      }
      int v12 = *v7;
      int v13 = *v8;
      unint64_t v15 = *(void *)(v35 + 16);
      unint64_t v14 = *(void *)(v35 + 24);
      if (v15 >= v14 >> 1)
      {
        uint64_t v30 = v11;
        uint64_t result = sub_26273ACC8(v14 > 1, v15 + 1, 1);
        uint64_t v11 = v30;
      }
      *(void *)(v35 + 16) = v15 + 1;
      uint64_t v16 = v35 + 8 * v15;
      --v5;
      *(_DWORD *)(v16 + 32) = v12;
      *(_DWORD *)(v16 + 36) = v13;
      --v4;
      ++v8;
      ++v7;
      if (!--v10) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v11 = a2;
LABEL_13:
    if (v33 <= v32)
    {
LABEL_24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v35;
    }
    uint64_t v17 = 0;
    if (v6 <= v32) {
      int64_t v18 = v32;
    }
    else {
      int64_t v18 = v6;
    }
    int64_t v19 = v18 - v6;
    unint64_t v20 = v33 - v6;
    int64_t v21 = v32 - v6;
    uint64_t v22 = 4 * v6 + 32;
    uint64_t v23 = v34 + v22;
    uint64_t v24 = v11 + v22;
    while (v20 != v17)
    {
      if (v21 == v17) {
        goto LABEL_24;
      }
      if (v19 == v17) {
        goto LABEL_28;
      }
      int v25 = *(_DWORD *)(v23 + 4 * v17);
      int v26 = *(_DWORD *)(v24 + 4 * v17);
      unint64_t v28 = *(void *)(v35 + 16);
      unint64_t v27 = *(void *)(v35 + 24);
      if (v28 >= v27 >> 1)
      {
        uint64_t v31 = v11;
        uint64_t result = sub_26273ACC8(v27 > 1, v28 + 1, 1);
        uint64_t v11 = v31;
      }
      *(void *)(v35 + 16) = v28 + 1;
      uint64_t v29 = v35 + 8 * v28;
      *(_DWORD *)(v29 + 32) = v25;
      *(_DWORD *)(v29 + 36) = v26;
      if (v20 == ++v17) {
        goto LABEL_24;
      }
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_262761B74()
{
  unint64_t result = qword_26A958058;
  if (!qword_26A958058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A958058);
  }
  return result;
}

uint64_t sub_262761BC8()
{
  return sub_262761C04(&qword_26A958060, &qword_26A958068);
}

uint64_t sub_262761C04(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of NearestNeighborsScorer.score(_:topK:skipFirst:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 16) + **(int **)(a5 + 16));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_26273E2FC;
  return v13(a1, a2, a3, a4, a5);
}

unsigned char *storeEnumTagSinglePayload for ScorerName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x262761E30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScorerName()
{
  return &type metadata for ScorerName;
}

unint64_t sub_262761E68()
{
  unint64_t result = qword_26A958078;
  if (!qword_26A958078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A958078);
  }
  return result;
}

uint64_t sub_262761EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = 0;
  char v5 = 0;
  unint64_t v6 = 0;
  char v7 = 0;
  do
  {
    BOOL v11 = a1 <= a2;
    if (a3 > 0) {
      BOOL v11 = a1 >= a2;
    }
    if (v11)
    {
      if ((a1 != a2) | v5 & 1) {
        return result;
      }
      if (v7)
      {
        char v5 = 1;
        a1 = a2;
        char v7 = 1;
      }
      else
      {
        if (v6 == 0x8000000000000000) {
          return result;
        }
        char v7 = 0;
        char v5 = 1;
        a1 = a2;
      }
    }
    else
    {
      BOOL v8 = __OFADD__(a1, a3);
      a1 += a3;
      char v9 = v8;
      BOOL v10 = (v9 & 1) == 0;
      if (v9)
      {
        a1 = (a3 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
        unint64_t v6 = 0x8000000000000000;
      }
      else
      {
        unint64_t v6 = 0;
      }
      char v7 = v10;
    }
    BOOL v8 = __OFADD__(result++, 1);
  }
  while (!v8);
  __break(1u);
  return result;
}

uint64_t DistanceMetric.distanceFunction()()
{
  return (uint64_t)*(&off_270DC79C0 + *v0);
}

uint64_t sub_262761F80(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_26276CDE0(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_262762E20(v5);
  *a1 = v2;
  return result;
}

float static DistanceHelper.distanceL2(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  vDSP_Length v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    __break(1u);
  }
  float __C = NAN;
  vDSP_distancesq((const float *)(a1 + 32), 1, (const float *)(a2 + 32), 1, &__C, v2);
  return sqrtf(__C);
}

uint64_t sub_262762070(uint64_t a1)
{
  uint64_t v10 = MEMORY[0x263F8EE78];
  sub_26273AD08(0, 0, 0);
  uint64_t v2 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v2)
  {
    uint64_t v3 = 0;
    uint64_t v4 = *(void *)(v10 + 16);
    uint64_t v5 = 16 * v4;
    do
    {
      int v6 = *(_DWORD *)(a1 + 32 + 4 * v3);
      unint64_t v7 = *(void *)(v10 + 24);
      if (v4 + v3 >= v7 >> 1) {
        sub_26273AD08(v7 > 1, v4 + v3 + 1, 1);
      }
      *(void *)(v10 + 16) = v4 + v3 + 1;
      uint64_t v8 = v10 + v5;
      *(void *)(v8 + 32) = v3;
      *(_DWORD *)(v8 + 40) = v6;
      v5 += 16;
      ++v3;
    }
    while (v2 != v3);
  }
  swift_bridgeObjectRelease();
  return v10;
}

float sub_262762184(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  vDSP_Length v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    __break(1u);
  }
  float __C = NAN;
  vDSP_distancesq((const float *)(a1 + 32), 1, (const float *)(a2 + 32), 1, &__C, v2);
  return __C;
}

float static DistanceHelper.distanceL2Squared(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  vDSP_Length v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    __break(1u);
  }
  float __C = NAN;
  vDSP_distancesq((const float *)(a1 + 32), 1, (const float *)(a2 + 32), 1, &__C, v2);
  return __C;
}

ZeoliteFramework::DistanceMetric_optional __swiftcall DistanceMetric.init(rawValue:)(Swift::String rawValue)
{
  vDSP_Length v2 = v1;
  unint64_t v3 = sub_26276FC20();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *vDSP_Length v2 = v5;
  return result;
}

void *static DistanceMetric.allCases.getter()
{
  return &unk_270DC6070;
}

uint64_t DistanceMetric.rawValue.getter()
{
  uint64_t result = 12620;
  switch(*v0)
  {
    case 1:
      uint64_t result = 12876;
      break;
    case 2:
      uint64_t result = 0x657261757153324CLL;
      break;
    case 3:
      uint64_t result = 0x6944656E69736F43;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_262762378(char *a1, char *a2)
{
  return sub_262743FA0(*a1, *a2);
}

uint64_t sub_262762384()
{
  return sub_26276FE20();
}

uint64_t sub_262762454()
{
  sub_26276F6C0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_26276250C()
{
  return sub_26276FE20();
}

ZeoliteFramework::DistanceMetric_optional sub_2627625D8(Swift::String *a1)
{
  return DistanceMetric.init(rawValue:)(*a1);
}

void sub_2627625E4(uint64_t a1@<X8>)
{
  uint64_t v2 = 12620;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 12876;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x657261757153324CLL;
      *(void *)(a1 + 8) = 0xE900000000000064;
      break;
    case 3:
      strcpy((char *)a1, "CosineDistance");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    default:
LABEL_3:
      *(void *)a1 = v2;
      *(void *)(a1 + 8) = 0xE200000000000000;
      break;
  }
}

void sub_262762674(void *a1@<X8>)
{
  *a1 = &unk_270DC6098;
}

uint64_t sub_262762684()
{
  return sub_26276F7A0();
}

uint64_t sub_2627626E4()
{
  return sub_26276F760();
}

void DistanceHelper.metric.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t DistanceHelper.points.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_262762748(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 48) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2627627A8()
{
  return swift_bridgeObjectRetain();
}

uint64_t DistanceHelper.__allocating_init(points:metric:)(uint64_t a1, char *a2)
{
  uint64_t v4 = swift_allocObject();
  DistanceHelper.init(points:metric:)(a1, a2);
  return v4;
}

uint64_t DistanceHelper.init(points:metric:)(uint64_t a1, char *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = MEMORY[0x263F8EE78];
  *(void *)(v2 + 48) = MEMORY[0x263F8EE78];
  *(void *)(v2 + 56) = v5;
  *(unsigned char *)(v2 + 16) = v4;
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 24) = *(&off_270DC79C0 + v4);
  *(void *)(v2 + 32) = 0;
  unint64_t v6 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v6)
  {
    _s16ZeoliteFramework14DistanceHelperC17buildDistancesLIL6pointsSaySaySfGGAG_tFZ_0(a1);
    uint64_t v8 = v7;
    swift_beginAccess();
    *(void *)(v2 + 56) = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9.i32[0] = 2139095040;
    uint64_t v10 = sub_262735500(v6, v9);
    swift_beginAccess();
    *(void *)(v2 + 48) = v10;
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_26276292C()
{
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_262762070(v0);
  swift_bridgeObjectRelease();
  uint64_t v3 = v1;
  swift_bridgeObjectRetain();
  sub_262761F80(&v3);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_2627629C0()
{
  uint64_t v1 = _s16ZeoliteFramework14DistanceHelperC12computeNorms6pointsSaySfGSayAFG_tFZ_0(*(void *)(v0 + 40));
  swift_beginAccess();
  *(void *)(v0 + 48) = v1;
  return swift_bridgeObjectRelease();
}

void sub_262762A14()
{
  uint64_t v20 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v20 + 16);
  if (v1 != 1)
  {
    if (v1)
    {
      uint64_t v2 = v0;
      uint64_t v3 = (void *)(v0 + 56);
      uint64_t v4 = v20 + 32;
      unint64_t v5 = 1;
      uint64_t v19 = *(void *)(v20 + 16);
      while (v5 != v1)
      {
        unint64_t v6 = *(void *)(v20 + 16);
        if (v5 >= v6 || v5 - 1 >= v6) {
          goto LABEL_23;
        }
        unint64_t v8 = 0;
        unint64_t v9 = v5 + 1;
        do
        {
          uint64_t v10 = *(float (**)(uint64_t, uint64_t))(v2 + 24);
          uint64_t v11 = *(void *)(v4 + 8 * v5);
          uint64_t v12 = *(void *)(v4 + 8 * v8);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          float v13 = v10(v11, v12);
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_beginAccess();
          uint64_t v14 = *(void **)(v2 + 56);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v2 + 56) = v14;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v14 = sub_262735FF8(v14);
            *uint64_t v3 = v14;
          }
          if (v5 >= v14[2])
          {
            __break(1u);
LABEL_21:
            __break(1u);
            goto LABEL_22;
          }
          uint64_t v16 = v14 + 4;
          uint64_t v17 = v14[v5 + 4];
          char v18 = swift_isUniquelyReferenced_nonNull_native();
          v16[v5] = v17;
          if ((v18 & 1) == 0)
          {
            uint64_t v17 = sub_262735FBC(v17);
            v16[v5] = v17;
          }
          if (v8 >= *(void *)(v17 + 16)) {
            goto LABEL_21;
          }
          *(float *)(v17 + 4 * v8 + 32) = v13;
          swift_endAccess();
          ++v8;
        }
        while (v5 != v8);
        ++v5;
        uint64_t v1 = v19;
        if (v9 == v19) {
          return;
        }
      }
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_262762BD8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_262762C10(int64_t a1, int64_t a2)
{
  uint64_t result = swift_beginAccess();
  uint64_t v6 = *(void *)(v2 + 56);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7 > a1 && v7 > a2)
  {
    BOOL v9 = a1 == a2;
    if (a1 >= a2) {
      goto LABEL_12;
    }
    if (a2 < 0)
    {
      __break(1u);
    }
    else if ((a1 & 0x8000000000000000) == 0)
    {
      uint64_t v6 = *(void *)(v6 + 8 * a2 + 32);
      unint64_t v10 = *(void *)(v6 + 16);
      BOOL v9 = v10 == a1;
      if (v10 > a1) {
        return result;
      }
      __break(1u);
LABEL_12:
      if (v9) {
        return result;
      }
      if ((a1 & 0x8000000000000000) == 0)
      {
        if ((a2 & 0x8000000000000000) == 0)
        {
          if (*(void *)(*(void *)(v6 + 8 * a1 + 32) + 16) > (unint64_t)a2) {
            return result;
          }
LABEL_21:
          __break(1u);
          return result;
        }
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    __break(1u);
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_262762CE4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = swift_beginAccess();
  uint64_t v8 = *(void *)(*(void *)(v3 + 48) + 16);
  if (v8 > a1 && v8 > a2)
  {
    if (a3)
    {
      if (a1 < 0)
      {
        __break(1u);
      }
      else if ((a2 & 0x8000000000000000) == 0)
      {
        return result;
      }
      __break(1u);
      goto LABEL_16;
    }
    if (a1 < 0)
    {
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
    if (a2 < 0) {
LABEL_17:
    }
      __break(1u);
  }
  return result;
}

uint64_t DistanceHelper.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DistanceHelper.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0228](v0, 64, 7);
}

uint64_t sub_262762E20(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_26276FD50();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_141;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v84 = *a1;
      uint64_t v85 = *a1 + 16;
      uint64_t v86 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v88 = v86;
        uint64_t v89 = v85;
        do
        {
          float v90 = *(float *)(v89 + 8);
          if (*(float *)(v89 - 8) >= v90) {
            break;
          }
          if (!v84) {
            goto LABEL_145;
          }
          uint64_t v91 = *(void *)v89;
          *(_OWORD *)uint64_t v89 = *(_OWORD *)(v89 - 16);
          *(float *)(v89 - 8) = v90;
          *(void *)(v89 - 16) = v91;
          v89 -= 16;
        }
        while (!__CFADD__(v88++, 1));
        v85 += 16;
        --v86;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_150;
  }
  uint64_t v6 = result;
  char v101 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    char __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v12 = (char *)MEMORY[0x263F8EE78];
LABEL_107:
      uint64_t v93 = v12;
      uint64_t v104 = v9;
      if (v13 >= 2)
      {
        uint64_t v94 = *v101;
        do
        {
          unint64_t v95 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_136;
          }
          if (!v94) {
            goto LABEL_149;
          }
          BOOL v96 = v93;
          uint64_t v97 = *(void *)&v93[16 * v95 + 32];
          uint64_t v98 = *(void *)&v93[16 * v13 + 24];
          sub_26274288C((char *)(v94 + 16 * v97), (char *)(v94 + 16 * *(void *)&v93[16 * v13 + 16]), v94 + 16 * v98, __dst);
          if (v1) {
            break;
          }
          if (v98 < v97) {
            goto LABEL_137;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            BOOL v96 = sub_26276BD14((uint64_t)v96);
          }
          if (v95 >= *((void *)v96 + 2)) {
            goto LABEL_138;
          }
          uint64_t v99 = &v96[16 * v95 + 32];
          *(void *)uint64_t v99 = v97;
          *((void *)v99 + 1) = v98;
          unint64_t v100 = *((void *)v96 + 2);
          if (v13 > v100) {
            goto LABEL_139;
          }
          memmove(&v96[16 * v13 + 16], &v96[16 * v13 + 32], 16 * (v100 - v13));
          uint64_t v93 = v96;
          *((void *)v96 + 2) = v100 - 1;
          unint64_t v13 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_97:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9580A0);
    uint64_t v8 = sub_26276F830();
    *(void *)(v8 + 16) = v7;
    uint64_t v104 = v8;
    char __dst = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v102 = *a1 + 40;
  uint64_t v103 = *a1 + 8;
  uint64_t v12 = (char *)MEMORY[0x263F8EE78];
  uint64_t v105 = v6;
  uint64_t v106 = v3;
  uint64_t v107 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      float v15 = *(float *)(v103 + 16 * v10);
      uint64_t v16 = 16 * v14;
      float v17 = *(float *)(v103 + 16 * v14);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        char v18 = (float *)(v102 + 16 * v14);
        while (v17 < v15 != *(v18 - 4) >= *v18)
        {
          ++v10;
          v18 += 4;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v17 < v15)
      {
        if (v10 < v14) {
          goto LABEL_142;
        }
        if (v14 < v10)
        {
          uint64_t v19 = 16 * v10 - 16;
          uint64_t v20 = v10;
          uint64_t v21 = v14;
          do
          {
            if (v21 != --v20)
            {
              if (!v11) {
                goto LABEL_148;
              }
              uint64_t v23 = (_OWORD *)(v11 + v16);
              uint64_t v24 = (_OWORD *)(v11 + v19);
              uint64_t v25 = *(void *)(v11 + v16);
              int v26 = *(_DWORD *)(v11 + v16 + 8);
              if (v16 != v19 || v23 >= v24 + 1) {
                *uint64_t v23 = *v24;
              }
              uint64_t v22 = v11 + v19;
              *(void *)uint64_t v22 = v25;
              *(_DWORD *)(v22 + 8) = v26;
            }
            ++v21;
            v19 -= 16;
            v16 += 16;
          }
          while (v21 < v20);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_50;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_140;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_50;
    }
    uint64_t v27 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_143;
    }
    if (v27 >= v3) {
      uint64_t v27 = v3;
    }
    if (v27 < v14) {
      break;
    }
    if (v10 != v27)
    {
      unint64_t v28 = (float *)(v11 + 16 * v10);
      do
      {
        uint64_t v29 = v28;
        uint64_t v30 = v14;
        do
        {
          float v31 = v29[2];
          if (*(v29 - 2) >= v31) {
            break;
          }
          if (!v11) {
            goto LABEL_146;
          }
          uint64_t v32 = *(void *)v29;
          *(_OWORD *)uint64_t v29 = *((_OWORD *)v29 - 1);
          *(v29 - 2) = v31;
          *((void *)v29 - 2) = v32;
          v29 -= 4;
          ++v30;
        }
        while (v10 != v30);
        ++v10;
        v28 += 4;
      }
      while (v10 != v27);
      uint64_t v10 = v27;
    }
LABEL_50:
    if (v10 < v14) {
      goto LABEL_135;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_26276B9E4(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v34 = *((void *)v12 + 2);
    unint64_t v33 = *((void *)v12 + 3);
    unint64_t v13 = v34 + 1;
    uint64_t v11 = v107;
    if (v34 >= v33 >> 1)
    {
      uint64_t v83 = sub_26276B9E4((char *)(v33 > 1), v34 + 1, 1, v12);
      uint64_t v11 = v107;
      uint64_t v12 = v83;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v35 = v12 + 32;
    uint64_t v36 = &v12[16 * v34 + 32];
    *(void *)uint64_t v36 = v14;
    *((void *)v36 + 1) = v10;
    if (v34)
    {
      while (1)
      {
        unint64_t v37 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v42 = &v35[16 * v13];
          uint64_t v43 = *((void *)v42 - 8);
          uint64_t v44 = *((void *)v42 - 7);
          BOOL v48 = __OFSUB__(v44, v43);
          uint64_t v45 = v44 - v43;
          if (v48) {
            goto LABEL_124;
          }
          uint64_t v47 = *((void *)v42 - 6);
          uint64_t v46 = *((void *)v42 - 5);
          BOOL v48 = __OFSUB__(v46, v47);
          uint64_t v40 = v46 - v47;
          char v41 = v48;
          if (v48) {
            goto LABEL_125;
          }
          unint64_t v49 = v13 - 2;
          uint64_t v50 = &v35[16 * v13 - 32];
          uint64_t v52 = *(void *)v50;
          uint64_t v51 = *((void *)v50 + 1);
          BOOL v48 = __OFSUB__(v51, v52);
          uint64_t v53 = v51 - v52;
          if (v48) {
            goto LABEL_127;
          }
          BOOL v48 = __OFADD__(v40, v53);
          uint64_t v54 = v40 + v53;
          if (v48) {
            goto LABEL_130;
          }
          if (v54 >= v45)
          {
            uint64_t v72 = &v35[16 * v37];
            uint64_t v74 = *(void *)v72;
            uint64_t v73 = *((void *)v72 + 1);
            BOOL v48 = __OFSUB__(v73, v74);
            uint64_t v75 = v73 - v74;
            if (v48) {
              goto LABEL_134;
            }
            BOOL v65 = v40 < v75;
            goto LABEL_87;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v66 = *((void *)v12 + 4);
            uint64_t v67 = *((void *)v12 + 5);
            BOOL v48 = __OFSUB__(v67, v66);
            uint64_t v59 = v67 - v66;
            char v60 = v48;
            goto LABEL_81;
          }
          uint64_t v39 = *((void *)v12 + 4);
          uint64_t v38 = *((void *)v12 + 5);
          BOOL v48 = __OFSUB__(v38, v39);
          uint64_t v40 = v38 - v39;
          char v41 = v48;
        }
        if (v41) {
          goto LABEL_126;
        }
        unint64_t v49 = v13 - 2;
        uint64_t v55 = &v35[16 * v13 - 32];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v58 = __OFSUB__(v56, v57);
        uint64_t v59 = v56 - v57;
        char v60 = v58;
        if (v58) {
          goto LABEL_129;
        }
        uint64_t v61 = &v35[16 * v37];
        uint64_t v63 = *(void *)v61;
        uint64_t v62 = *((void *)v61 + 1);
        BOOL v48 = __OFSUB__(v62, v63);
        uint64_t v64 = v62 - v63;
        if (v48) {
          goto LABEL_132;
        }
        if (__OFADD__(v59, v64)) {
          goto LABEL_133;
        }
        if (v59 + v64 >= v40)
        {
          BOOL v65 = v40 < v64;
LABEL_87:
          if (v65) {
            unint64_t v37 = v49;
          }
          goto LABEL_89;
        }
LABEL_81:
        if (v60) {
          goto LABEL_128;
        }
        uint64_t v68 = &v35[16 * v37];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v48 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v48) {
          goto LABEL_131;
        }
        if (v71 < v59) {
          goto LABEL_15;
        }
LABEL_89:
        unint64_t v76 = v37 - 1;
        if (v37 - 1 >= v13)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!v11) {
          goto LABEL_147;
        }
        uint64_t v77 = v12;
        uint64_t v78 = &v35[16 * v76];
        uint64_t v79 = *(void *)v78;
        uint64_t v80 = &v35[16 * v37];
        uint64_t v81 = *((void *)v80 + 1);
        sub_26274288C((char *)(v11 + 16 * *(void *)v78), (char *)(v11 + 16 * *(void *)v80), v11 + 16 * v81, __dst);
        if (v1) {
          goto LABEL_97;
        }
        if (v81 < v79) {
          goto LABEL_121;
        }
        if (v37 > *((void *)v77 + 2)) {
          goto LABEL_122;
        }
        *(void *)uint64_t v78 = v79;
        *(void *)&v35[16 * v76 + 8] = v81;
        unint64_t v82 = *((void *)v77 + 2);
        if (v37 >= v82) {
          goto LABEL_123;
        }
        uint64_t v12 = v77;
        unint64_t v13 = v82 - 1;
        memmove(&v35[16 * v37], v80 + 16, 16 * (v82 - 1 - v37));
        *((void *)v77 + 2) = v82 - 1;
        uint64_t v11 = v107;
        if (v82 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v105;
    uint64_t v3 = v106;
    if (v10 >= v106)
    {
      uint64_t v9 = v104;
      goto LABEL_107;
    }
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  uint64_t result = sub_26276FBA0();
  __break(1u);
  return result;
}

float _s16ZeoliteFramework14DistanceHelperC10distanceL1ySfSaySfG_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  __C[10] = *MEMORY[0x263EF8340];
  uint64_t v7 = a2;
  __C[0] = a1;
  uint64_t v2 = *(void *)(a1 + 16);
  __C[7] = __C;
  __C[8] = &v7;
  __C[0] = sub_26276CB9C(v2, (uint64_t (*)(void *, uint64_t *))sub_262763D0C);
  uint64_t v3 = *(void *)(__C[0] + 16);
  __C[3] = __C;
  uint64_t v4 = sub_26276CB9C(v3, (uint64_t (*)(void *, uint64_t *))sub_262763D5C);
  swift_bridgeObjectRelease();
  vDSP_Length v5 = *(void *)(v4 + 16);
  LODWORD(__C[0]) = 2143289344;
  vDSP_sve((const float *)(v4 + 32), 1, (float *)__C, v5);
  swift_bridgeObjectRelease();
  return *(float *)__C;
}

float _s16ZeoliteFramework14DistanceHelperC14distanceCosineySfSaySfG_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  vDSP_Length v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    __break(1u);
  }
  float __C = NAN;
  uint64_t v3 = (const float *)(a1 + 32);
  uint64_t v4 = (const float *)(a2 + 32);
  vDSP_dotpr((const float *)(a1 + 32), 1, (const float *)(a2 + 32), 1, &__C, v2);
  float v5 = __C;
  float __C = NAN;
  vDSP_dotpr(v3, 1, v3, 1, &__C, v2);
  float v6 = __C;
  float __C = NAN;
  vDSP_dotpr(v4, 1, v4, 1, &__C, v2);
  return 1.0 - (float)(v5 / sqrtf(v6 * __C));
}

void _s16ZeoliteFramework14DistanceHelperC17buildDistancesLIL6pointsSaySaySfGGAG_tFZ_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1)
  {
LABEL_8:
    __break(1u);
    return;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957308);
  vDSP_Length v2 = (void *)sub_26276F830();
  uint64_t v3 = v2;
  v2[2] = v1;
  v2[4] = MEMORY[0x263F8EE78];
  uint64_t v4 = v1 - 1;
  if (v1 != 1)
  {
    float v5 = v2 + 5;
    memset_pattern16(v2 + 5, &unk_2655B0070, 8 * v1 - 8);
    uint64_t v6 = 0;
    for (size_t i = 4; ; i += 4)
    {
      uint64_t v8 = v6 + 1;
      uint64_t v9 = sub_26276F830();
      *(void *)(v9 + 16) = v6 + 1;
      memset_pattern16((void *)(v9 + 32), &unk_262772C60, i);
      if ((unint64_t)(v6 + 1) >= v3[2]) {
        break;
      }
      v5[v6] = v9;
      swift_bridgeObjectRelease();
      ++v6;
      if (v4 == v8) {
        return;
      }
    }
    __break(1u);
    goto LABEL_8;
  }
}

uint64_t _s16ZeoliteFramework14DistanceHelperC12computeNorms6pointsSaySfGSayAFG_tFZ_0(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v3 = sub_262727378(0, v1, 0, MEMORY[0x263F8EE78]);
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i != v1; ++i)
  {
    uint64_t v5 = *(void *)(a1 + 8 * i + 32);
    vDSP_Length v6 = *(void *)(v5 + 16);
    float __C = NAN;
    swift_bridgeObjectRetain();
    vDSP_dotpr((const float *)(v5 + 32), 1, (const float *)(v5 + 32), 1, &__C, v6);
    swift_bridgeObjectRelease();
    float v7 = __C;
    unint64_t v9 = *(void *)(v3 + 16);
    unint64_t v8 = *(void *)(v3 + 24);
    if (v9 >= v8 >> 1) {
      uint64_t v3 = sub_262727378(v8 > 1, v9 + 1, 1, v3);
    }
    *(void *)(v3 + 16) = v9 + 1;
    *(float *)(v3 + 4 * v9 + 32) = sqrtf(v7);
  }
  swift_bridgeObjectRelease();
  return v3;
}

unint64_t sub_262763964()
{
  unint64_t result = qword_26A958080;
  if (!qword_26A958080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A958080);
  }
  return result;
}

unint64_t sub_2627639BC()
{
  unint64_t result = qword_26A958088;
  if (!qword_26A958088)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A958090);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A958088);
  }
  return result;
}

uint64_t sub_262763A18@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

unsigned char *storeEnumTagSinglePayload for DistanceMetric(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x262763B34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DistanceMetric()
{
  return &type metadata for DistanceMetric;
}

uint64_t type metadata accessor for DistanceHelper()
{
  return self;
}

uint64_t method lookup function for DistanceHelper(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DistanceHelper);
}

uint64_t dispatch thunk of DistanceHelper.norms.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of DistanceHelper.__allocating_init(points:metric:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of DistanceHelper.sortedNorms.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of DistanceHelper.computeNorms()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of DistanceHelper.computeDistances()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of DistanceHelper.distancesListOfLists()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of DistanceHelper.distance(from:to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of DistanceHelper.estimatedDistance(from:to:bestCase:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

unint64_t sub_262763CB8()
{
  unint64_t result = qword_26A958098;
  if (!qword_26A958098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A958098);
  }
  return result;
}

uint64_t sub_262763D0C(uint64_t a1, void *a2)
{
  unsigned int v4 = *(void **)(v2 + 24);
  uint64_t v5 = **(void **)(v2 + 16);
  uint64_t result = sub_26276CD20(v5, *v4, a1);
  *a2 = *(void *)(v5 + 16);
  return result;
}

void sub_262763D5C(uint64_t a1, vDSP_Length *a2)
{
  sub_26276CC9C(a1, a2, **(void **)(v2 + 16));
}

Swift::Bool __swiftcall pairwiseCosineSimilarity(matrix1:matrix1RowCount:matrix1ColumnCount:matrix2:matrix2RowCount:matrix2ColumnCount:resultMatrix:)(Swift::OpaquePointer matrix1, Swift::Int matrix1RowCount, Swift::Int matrix1ColumnCount, Swift::OpaquePointer matrix2, Swift::Int matrix2RowCount, Swift::Int matrix2ColumnCount, Swift::OpaquePointer *resultMatrix)
{
  if (matrix1ColumnCount == matrix2ColumnCount)
  {
    uint64_t v14 = normalizeMatrix(_:rowCount:columnCount:)((uint64_t)matrix1._rawValue, matrix1RowCount, matrix1ColumnCount, v7);
    uint64_t v16 = normalizeMatrix(_:rowCount:columnCount:)((uint64_t)matrix2._rawValue, matrix2RowCount, matrix1ColumnCount, v15);
    if ((unsigned __int128)(matrix1ColumnCount * (__int128)matrix2RowCount) >> 64 == (matrix1ColumnCount
                                                                                     * matrix2RowCount) >> 63)
    {
      v17.i32[0] = 1.0;
      uint64_t v18 = sub_262735500(matrix1ColumnCount * matrix2RowCount, v17);
      if (((matrix1ColumnCount | matrix2RowCount) & 0x8000000000000000) == 0)
      {
        uint64_t v19 = v18;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v19 = sub_262727378(0, *(void *)(v19 + 16), 0, v19);
        }
        vDSP_mtrans((const float *)(v16 + 32), 1, (float *)(v19 + 32), 1, matrix1ColumnCount, matrix2RowCount);
        swift_bridgeObjectRelease();
        if (((matrix1ColumnCount | matrix1RowCount) & 0x8000000000000000) == 0)
        {
          rawValue = resultMatrix->_rawValue;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            rawValue = (void *)sub_262727378(0, *((void *)rawValue + 2), 0, rawValue);
          }
          resultMatrix->_rawValue = rawValue;
          vDSP_mmul((const float *)(v14 + 32), 1, (const float *)(v19 + 32), 1, (float *)rawValue + 8, 1, matrix1RowCount, matrix2RowCount, matrix1ColumnCount);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return matrix1ColumnCount == matrix2ColumnCount;
        }
        goto LABEL_17;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (qword_26A9572B0 != -1) {
LABEL_18:
  }
    swift_once();
  uint64_t v21 = sub_26276F530();
  __swift_project_value_buffer(v21, (uint64_t)qword_26A95E208);
  uint64_t v22 = sub_26276F510();
  os_log_type_t v23 = sub_26276FA50();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl(&dword_262725000, v22, v23, "Matrix 1 and Matrix 2 must have the same column count.", v24, 2u);
    MEMORY[0x263E528C0](v24, -1, -1);
  }

  return matrix1ColumnCount == matrix2ColumnCount;
}

uint64_t sortWithIndices<A, B>(_:indices:sortOrder:)()
{
  return sub_26276F0E0();
}

Swift::Void __swiftcall multiplyMatrices(matrix1:matrix1RowCount:matrix1ColumnCount:matrix2:matrix2RowCount:matrix2ColumnCount:resultMatrix:)(Swift::OpaquePointer matrix1, Swift::Int matrix1RowCount, Swift::Int matrix1ColumnCount, Swift::OpaquePointer matrix2, Swift::Int matrix2RowCount, Swift::Int matrix2ColumnCount, Swift::OpaquePointer *resultMatrix)
{
  if ((matrix1ColumnCount | matrix1RowCount | matrix2ColumnCount) < 0)
  {
    __break(1u);
  }
  else
  {
    rawValue = resultMatrix->_rawValue;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      rawValue = (void *)sub_262727378(0, *((void *)rawValue + 2), 0, rawValue);
    }
    resultMatrix->_rawValue = rawValue;
    vDSP_mmul((const float *)matrix1._rawValue + 8, 1, (const float *)matrix2._rawValue + 8, 1, (float *)rawValue + 8, 1, matrix1RowCount, matrix2ColumnCount, matrix1ColumnCount);
  }
}

Swift::Void __swiftcall transposeMatrix(matrix:rowCount:columnCount:transposed:)(Swift::OpaquePointer matrix, Swift::Int rowCount, Swift::Int columnCount, Swift::OpaquePointer *transposed)
{
  if ((columnCount | rowCount) < 0)
  {
    __break(1u);
  }
  else
  {
    rawValue = transposed->_rawValue;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      rawValue = (void *)sub_262727378(0, *((void *)rawValue + 2), 0, rawValue);
    }
    transposed->_rawValue = rawValue;
    vDSP_mtrans((const float *)matrix._rawValue + 8, 1, (float *)rawValue + 8, 1, columnCount, rowCount);
  }
}

uint64_t sub_262764170()
{
  uint64_t result = sub_26276F0F0();
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x270FA5388](result);
    return sub_26276F0D0();
  }
  return result;
}

void sub_262764234(vDSP_Length **a1, const float *a2, uint64_t a3, vDSP_Length a4)
{
  if (a2)
  {
    unsigned int v4 = *a1;
    if (*a1)
    {
      int v7 = sub_26276F110();
      vDSP_vsorti(a2, v4, 0, a4, v7);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t normalizeMatrix(_:rowCount:columnCount:)(uint64_t a1, uint64_t a2, int64_t a3, int32x2_t a4)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  uint64_t v19 = MEMORY[0x263F8EE78];
  a4.i32[0] = 2143289344;
  uint64_t v7 = sub_262735500(a3, a4);
  if (a2 < 0) {
    goto LABEL_31;
  }
  uint64_t v8 = v7;
  if (a2)
  {
    if (a3 < 0) {
      goto LABEL_32;
    }
    uint64_t v9 = 0;
    int64_t v10 = *(void *)(a1 + 16);
    while (1)
    {
      int64_t v12 = v9 * a3;
      if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
        break;
      }
      if (v10 < v12) {
        goto LABEL_24;
      }
      if (v12 < 0) {
        goto LABEL_25;
      }
      if (!a3 || v10 - v12 < 0 || (int64_t v13 = v10, v10 - v12 >= a3))
      {
        int64_t v13 = v12 + a3;
        if (__OFADD__(v12, a3)) {
          goto LABEL_29;
        }
      }
      if (v13 < v12) {
        goto LABEL_26;
      }
      if (v10 < v13) {
        goto LABEL_27;
      }
      vDSP_Length v14 = v13 - v12;
      if (v13 - v12 < 0) {
        goto LABEL_28;
      }
      float __C = NAN;
      int32x2_t v15 = (const float *)(a1 + 32 + 4 * v12);
      swift_bridgeObjectRetain();
      vDSP_svesq(v15, 1, &__C, v14);
      float v16 = sqrtf(__C);
      if (v16 > 0.0)
      {
        if (v14 != *(void *)(v8 + 16)) {
          goto LABEL_30;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v8 = sub_262735FBC(v8);
        }
        float v20 = v16;
        vDSP_vsdiv(v15, 1, &v20, (float *)(v8 + 32), 1, v14);
        uint64_t v11 = swift_bridgeObjectRetain();
        sub_2627330EC(v11);
      }
      ++v9;
      swift_bridgeObjectRelease();
      if (a2 == v9)
      {
        swift_bridgeObjectRelease();
        return v19;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

uint64_t sub_2627644AC()
{
  return sub_262764170();
}

void sub_2627644E0(vDSP_Length **a1)
{
  sub_262764234(a1, *(const float **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t ExtractedMessage.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_26276F2F0();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t ExtractedMessage.sender.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ExtractedMessage() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for ExtractedMessage()
{
  uint64_t result = qword_26A958140;
  if (!qword_26A958140) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ExtractedMessage.receiver.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ExtractedMessage() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ExtractedMessage.subject.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ExtractedMessage() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ExtractedMessage.body.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ExtractedMessage() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ExtractedMessage.conversationId.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ExtractedMessage() + 36));
}

uint64_t ExtractedMessage.autoSubmitted.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ExtractedMessage() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

int *ExtractedMessage.init(date:sender:receiver:subject:body:conversationId:autoSubmitted:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v21 = sub_26276F2F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(a9, a1, v21);
  uint64_t result = (int *)type metadata accessor for ExtractedMessage();
  os_log_type_t v23 = (void *)(a9 + result[5]);
  *os_log_type_t v23 = a2;
  v23[1] = a3;
  uint64_t v24 = (void *)(a9 + result[6]);
  void *v24 = a4;
  v24[1] = a5;
  uint64_t v25 = (void *)(a9 + result[7]);
  *uint64_t v25 = a6;
  v25[1] = a7;
  int v26 = (void *)(a9 + result[8]);
  *int v26 = a8;
  v26[1] = a10;
  if (a12) {
    a11 = 0;
  }
  *(void *)(a9 + result[9]) = a11;
  unint64_t v28 = (void *)(a9 + result[10]);
  *unint64_t v28 = a13;
  v28[1] = a14;
  return result;
}

uint64_t sub_262764838()
{
  uint64_t result = 1702125924;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7265646E6573;
      break;
    case 2:
      uint64_t result = 0x7265766965636572;
      break;
    case 3:
      uint64_t result = 0x7463656A627573;
      break;
    case 4:
      uint64_t result = 2036625250;
      break;
    case 5:
      uint64_t result = 0x61737265766E6F63;
      break;
    case 6:
      uint64_t result = 0x6D6275536F747561;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_26276491C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_262767C90(a1, a2);
  *a3 = result;
  return result;
}

void sub_262764944(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_262764950(uint64_t a1)
{
  unint64_t v2 = sub_262764C70();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_26276498C(uint64_t a1)
{
  unint64_t v2 = sub_262764C70();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ExtractedMessage.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9580A8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_262764C70();
  sub_26276FE40();
  v8[15] = 0;
  sub_26276F2F0();
  sub_262765A58(&qword_26A9580B8, MEMORY[0x263F07490]);
  sub_26276FD20();
  if (!v1)
  {
    type metadata accessor for ExtractedMessage();
    v8[14] = 1;
    sub_26276FCF0();
    v8[13] = 2;
    sub_26276FCF0();
    v8[12] = 3;
    sub_26276FCF0();
    v8[11] = 4;
    sub_26276FCF0();
    v8[10] = 5;
    sub_26276FD30();
    v8[9] = 6;
    sub_26276FCC0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_262764C70()
{
  unint64_t result = qword_26A9580B0;
  if (!qword_26A9580B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9580B0);
  }
  return result;
}

uint64_t ExtractedMessage.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v4 = sub_26276F2F0();
  uint64_t v35 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v37 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9580C0);
  uint64_t v36 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for ExtractedMessage();
  MEMORY[0x270FA5388](v8);
  int64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_262764C70();
  uint64_t v39 = v7;
  sub_26276FE30();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v11 = v36;
  unint64_t v33 = a1;
  uint64_t v12 = (uint64_t)v10;
  char v46 = 0;
  sub_262765A58(&qword_26A9580C8, MEMORY[0x263F07490]);
  int64_t v13 = v37;
  uint64_t v14 = v38;
  sub_26276FC90();
  (*(void (**)(uint64_t, char *, uint64_t))(v35 + 32))(v12, v13, v4);
  char v45 = 1;
  uint64_t v15 = sub_26276FC60();
  float v16 = (uint64_t *)(v12 + v8[5]);
  uint64_t *v16 = v15;
  v16[1] = v17;
  char v44 = 2;
  uint64_t v18 = sub_26276FC60();
  uint64_t v19 = (uint64_t *)(v12 + v8[6]);
  *uint64_t v19 = v18;
  v19[1] = v20;
  char v43 = 3;
  uint64_t v21 = sub_26276FC60();
  uint64_t v22 = (uint64_t *)(v12 + v8[7]);
  *uint64_t v22 = v21;
  v22[1] = v23;
  char v42 = 4;
  uint64_t v24 = sub_26276FC60();
  uint64_t v25 = (uint64_t *)(v12 + v8[8]);
  *uint64_t v25 = v24;
  v25[1] = v26;
  char v41 = 5;
  *(void *)(v12 + v8[9]) = sub_26276FCA0();
  char v40 = 6;
  uint64_t v27 = sub_26276FC30();
  uint64_t v29 = v28;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v39, v14);
  uint64_t v30 = (uint64_t *)(v12 + v8[10]);
  *uint64_t v30 = v27;
  v30[1] = v29;
  sub_262765204(v12, v34);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  return sub_262765268(v12);
}

uint64_t sub_262765204(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExtractedMessage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_262765268(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ExtractedMessage();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2627652C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ExtractedMessage.init(from:)(a1, a2);
}

uint64_t sub_2627652DC(void *a1)
{
  return ExtractedMessage.encode(to:)(a1);
}

uint64_t ExtractedConversation.conversationId.getter()
{
  return *(void *)v0;
}

uint64_t ExtractedConversation.count.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t ExtractedConversation.messages.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ExtractedConversation.conversationText.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ExtractedConversation.init(conversationId:count:messages:conversationText:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

unint64_t sub_26276534C()
{
  unint64_t result = 0x61737265766E6F63;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x746E756F63;
      break;
    case 2:
      unint64_t result = 0x736567617373656DLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2627653E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_262767F98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_262765410(uint64_t a1)
{
  unint64_t v2 = sub_2627656B8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_26276544C(uint64_t a1)
{
  unint64_t v2 = sub_2627656B8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ExtractedConversation.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9580D0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[1];
  uint64_t v13 = v1[2];
  uint64_t v14 = v8;
  uint64_t v9 = v1[3];
  v12[1] = v1[4];
  v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2627656B8();
  sub_26276FE40();
  char v19 = 0;
  sub_26276FD30();
  if (!v2)
  {
    uint64_t v10 = v13;
    char v18 = 1;
    sub_26276FD10();
    uint64_t v15 = v10;
    char v17 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9580E0);
    sub_2627659C4(&qword_26A9580E8, &qword_26A9580F0);
    sub_26276FD20();
    char v16 = 3;
    sub_26276FCF0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_2627656B8()
{
  unint64_t result = qword_26A9580D8;
  if (!qword_26A9580D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9580D8);
  }
  return result;
}

uint64_t ExtractedConversation.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9580F8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2627656B8();
  sub_26276FE30();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v24 = 0;
  uint64_t v9 = sub_26276FCA0();
  char v23 = 1;
  uint64_t v10 = sub_26276FC80();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9580E0);
  char v22 = 2;
  sub_2627659C4(&qword_26A958100, &qword_26A958108);
  sub_26276FC90();
  char v21 = 3;
  uint64_t v19 = v20;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_26276FC60();
  uint64_t v13 = v12;
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v18 = v11;
  v14(v8, v5);
  *a2 = v9;
  a2[1] = v10;
  uint64_t v15 = v18;
  a2[2] = v19;
  a2[3] = v15;
  a2[4] = v13;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2627659C4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9580E0);
    sub_262765A58(a2, (void (*)(uint64_t))type metadata accessor for ExtractedMessage);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_262765A58(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_262765AA0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ExtractedConversation.init(from:)(a1, a2);
}

uint64_t sub_262765AB8(void *a1)
{
  return ExtractedConversation.encode(to:)(a1);
}

uint64_t ConversationEmbedding.conversationId.getter()
{
  return *(void *)v0;
}

uint64_t ConversationEmbedding.embedding.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ConversationEmbedding.embeddingModel.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ConversationEmbedding.init(conversationId:embedding:embeddingModel:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t sub_262765B1C()
{
  if (*v0) {
    return 0x6E69646465626D65;
  }
  else {
    return 0x61737265766E6F63;
  }
}

uint64_t sub_262765B94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_26276816C(a1, a2);
  *a3 = result;
  return result;
}

void sub_262765BBC(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_262765BC8(uint64_t a1)
{
  unint64_t v2 = sub_262765E30();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_262765C04(uint64_t a1)
{
  unint64_t v2 = sub_262765E30();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ConversationEmbedding.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A958110);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[1];
  v10[1] = v1[2];
  uint64_t v11 = v8;
  v10[0] = v1[3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_262765E30();
  sub_26276FE40();
  char v15 = 0;
  sub_26276FD30();
  if (!v2)
  {
    uint64_t v12 = v11;
    char v14 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A957308);
    sub_2627660F4(&qword_26A957488);
    sub_26276FD20();
    char v13 = 2;
    sub_26276FCC0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_262765E30()
{
  unint64_t result = qword_26A958118;
  if (!qword_26A958118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A958118);
  }
  return result;
}

uint64_t ConversationEmbedding.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A958120);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_262765E30();
  sub_26276FE30();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v19 = 0;
  uint64_t v9 = sub_26276FCA0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957308);
  char v18 = 1;
  sub_2627660F4(&qword_26A957498);
  sub_26276FC90();
  uint64_t v10 = v16[1];
  char v17 = 2;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_26276FC30();
  uint64_t v13 = v12;
  char v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16[0] = v11;
  v14(v8, v5);
  *a2 = v9;
  a2[1] = v10;
  a2[2] = v16[0];
  a2[3] = v13;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2627660F4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A957308);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_262766158@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ConversationEmbedding.init(from:)(a1, a2);
}

uint64_t sub_262766170(void *a1)
{
  return ConversationEmbedding.encode(to:)(a1);
}

uint64_t ExtractedItem.itemId.getter()
{
  return *(void *)v0;
}

uint64_t ExtractedItem.text.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ExtractedItem.init(itemId:text:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t sub_2627661CC()
{
  if (*v0) {
    return 1954047348;
  }
  else {
    return 0x64496D657469;
  }
}

uint64_t sub_2627661FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_262768310(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_262766224(uint64_t a1)
{
  unint64_t v2 = sub_26276640C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_262766260(uint64_t a1)
{
  unint64_t v2 = sub_26276640C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ExtractedItem.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A958128);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 8);
  v10[0] = *(void *)(v1 + 16);
  v10[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_26276640C();
  sub_26276FE40();
  char v12 = 0;
  sub_26276FD30();
  if (!v2)
  {
    char v11 = 1;
    sub_26276FCF0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_26276640C()
{
  unint64_t result = qword_26A958130;
  if (!qword_26A958130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A958130);
  }
  return result;
}

uint64_t ExtractedItem.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A958138);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_26276640C();
  sub_26276FE30();
  if (!v2)
  {
    char v16 = 0;
    uint64_t v9 = sub_26276FCA0();
    char v15 = 1;
    uint64_t v11 = sub_26276FC60();
    uint64_t v13 = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
    a2[2] = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_262766604@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ExtractedItem.init(from:)(a1, a2);
}

uint64_t sub_26276661C(void *a1)
{
  return ExtractedItem.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for ExtractedMessage(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_26276F2F0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    void *v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    char v18 = (uint64_t *)((char *)a1 + v16);
    char v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    void *v18 = *v19;
    v18[1] = v20;
    char v21 = (uint64_t *)((char *)a1 + v17);
    char v22 = (uint64_t *)((char *)a2 + v17);
    uint64_t v23 = v22[1];
    void *v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    uint64_t v25 = (uint64_t *)((char *)a1 + v24);
    uint64_t v26 = (uint64_t *)((char *)a2 + v24);
    uint64_t v27 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ExtractedMessage(uint64_t a1)
{
  uint64_t v2 = sub_26276F2F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ExtractedMessage(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_26276F2F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v15);
  char v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = (void *)(a1 + v16);
  char v21 = (void *)(a2 + v16);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  uint64_t v26 = v25[1];
  void *v24 = *v25;
  v24[1] = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ExtractedMessage(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_26276F2F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  void *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  char v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v19 = a3[10];
  uint64_t v20 = (void *)(a1 + v19);
  char v21 = (void *)(a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ExtractedMessage(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_26276F2F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  return a1;
}

uint64_t assignWithTake for ExtractedMessage(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_26276F2F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  void *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  char v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  void *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (uint64_t *)(a2 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *uint64_t v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExtractedMessage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_262766C58);
}

uint64_t sub_262766C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26276F2F0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ExtractedMessage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_262766D30);
}

uint64_t sub_262766D30(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_26276F2F0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_262766DF0()
{
  uint64_t result = sub_26276F2F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for ExtractedConversation()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ExtractedConversation(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ExtractedConversation(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ExtractedConversation(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExtractedConversation(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExtractedConversation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExtractedConversation()
{
  return &type metadata for ExtractedConversation;
}

uint64_t destroy for ConversationEmbedding()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ConversationEmbedding(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ConversationEmbedding(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ConversationEmbedding(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ConversationEmbedding(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ConversationEmbedding(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConversationEmbedding()
{
  return &type metadata for ConversationEmbedding;
}

uint64_t initializeBufferWithCopyOfBuffer for ExtractedItem(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ExtractedItem()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for ExtractedItem(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ExtractedItem(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExtractedItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExtractedItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExtractedItem()
{
  return &type metadata for ExtractedItem;
}

unsigned char *storeEnumTagSinglePayload for ExtractedItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x26276749CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExtractedItem.CodingKeys()
{
  return &type metadata for ExtractedItem.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ConversationEmbedding.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2627675A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConversationEmbedding.CodingKeys()
{
  return &type metadata for ConversationEmbedding.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ExtractedConversation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2627676A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExtractedConversation.CodingKeys()
{
  return &type metadata for ExtractedConversation.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ExtractedMessage.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ExtractedMessage.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x262767838);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExtractedMessage.CodingKeys()
{
  return &type metadata for ExtractedMessage.CodingKeys;
}

unint64_t sub_262767874()
{
  unint64_t result = qword_26A958150;
  if (!qword_26A958150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A958150);
  }
  return result;
}

unint64_t sub_2627678CC()
{
  unint64_t result = qword_26A958158;
  if (!qword_26A958158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A958158);
  }
  return result;
}

unint64_t sub_262767924()
{
  unint64_t result = qword_26A958160;
  if (!qword_26A958160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A958160);
  }
  return result;
}

unint64_t sub_26276797C()
{
  unint64_t result = qword_26A958168;
  if (!qword_26A958168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A958168);
  }
  return result;
}

unint64_t sub_2627679D4()
{
  unint64_t result = qword_26A958170;
  if (!qword_26A958170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A958170);
  }
  return result;
}

unint64_t sub_262767A2C()
{
  unint64_t result = qword_26A958178;
  if (!qword_26A958178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A958178);
  }
  return result;
}

unint64_t sub_262767A84()
{
  unint64_t result = qword_26A958180;
  if (!qword_26A958180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A958180);
  }
  return result;
}

unint64_t sub_262767ADC()
{
  unint64_t result = qword_26A958188;
  if (!qword_26A958188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A958188);
  }
  return result;
}

unint64_t sub_262767B34()
{
  unint64_t result = qword_26A958190;
  if (!qword_26A958190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A958190);
  }
  return result;
}

unint64_t sub_262767B8C()
{
  unint64_t result = qword_26A958198;
  if (!qword_26A958198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A958198);
  }
  return result;
}

unint64_t sub_262767BE4()
{
  unint64_t result = qword_26A9581A0;
  if (!qword_26A9581A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9581A0);
  }
  return result;
}

unint64_t sub_262767C3C()
{
  unint64_t result = qword_26A9581A8;
  if (!qword_26A9581A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9581A8);
  }
  return result;
}

uint64_t sub_262767C90(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_26276FDA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265646E6573 && a2 == 0xE600000000000000 || (sub_26276FDA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7265766965636572 && a2 == 0xE800000000000000 || (sub_26276FDA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7463656A627573 && a2 == 0xE700000000000000 || (sub_26276FDA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 2036625250 && a2 == 0xE400000000000000 || (sub_26276FDA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x61737265766E6F63 && a2 == 0xEE0064496E6F6974 || (sub_26276FDA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6D6275536F747561 && a2 == 0xED00006465747469)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_26276FDA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_262767F98(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x61737265766E6F63 && a2 == 0xEE0064496E6F6974;
  if (v2 || (sub_26276FDA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E756F63 && a2 == 0xE500000000000000 || (sub_26276FDA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736567617373656DLL && a2 == 0xE800000000000000 || (sub_26276FDA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000262773D40)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_26276FDA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_26276816C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x61737265766E6F63 && a2 == 0xEE0064496E6F6974;
  if (v2 || (sub_26276FDA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E69646465626D65 && a2 == 0xE900000000000067 || (sub_26276FDA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E69646465626D65 && a2 == 0xEE006C65646F4D67)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_26276FDA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_262768310(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64496D657469 && a2 == 0xE600000000000000;
  if (v2 || (sub_26276FDA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1954047348 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_26276FDA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2627683F0(void **a1)
{
  BOOL v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    BOOL v2 = sub_26273600C(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  uint64_t result = sub_26276AB28(v5);
  *a1 = v2;
  return result;
}

uint64_t BallTree.Node.pointIndex.getter()
{
  return *(void *)v0;
}

uint64_t BallTree.Node.pointIndex.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

uint64_t (*BallTree.Node.pointIndex.modify())()
{
  return nullsub_1;
}

float BallTree.Node.threshold.getter()
{
  return *(float *)(v0 + 8);
}

void BallTree.Node.threshold.setter(float a1)
{
  *(float *)(v1 + 8) = a1;
}

uint64_t (*BallTree.Node.threshold.modify())()
{
  return nullsub_1;
}

uint64_t BallTree.Node.left.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t BallTree.Node.left.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 16) = result;
  *(unsigned char *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*BallTree.Node.left.modify())()
{
  return nullsub_1;
}

uint64_t BallTree.Node.right.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t BallTree.Node.right.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 32) = result;
  *(unsigned char *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t (*BallTree.Node.right.modify())()
{
  return nullsub_1;
}

uint64_t BallTree.Node.storedIndices.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BallTree.Node.storedIndices.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = a1;
  return result;
}

uint64_t (*BallTree.Node.storedIndices.modify())()
{
  return nullsub_1;
}

uint64_t sub_26276858C()
{
  uint64_t result = 0x646E49746E696F70;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C6F687365726874;
      break;
    case 2:
      uint64_t result = 1952867692;
      break;
    case 3:
      uint64_t result = 0x7468676972;
      break;
    case 4:
      uint64_t result = 0x6E496465726F7473;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_262768640(uint64_t a1)
{
  unint64_t v2 = sub_26276892C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_26276867C(uint64_t a1)
{
  unint64_t v2 = sub_26276892C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BallTree.Node.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9581B0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  BOOL v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v1 + 16);
  int v12 = *(unsigned __int8 *)(v1 + 24);
  uint64_t v11 = *(void *)(v1 + 32);
  int v10 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v9 = *(void *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_26276892C();
  sub_26276FE40();
  char v19 = 0;
  sub_26276FD10();
  if (!v2)
  {
    char v18 = 1;
    sub_26276FD00();
    char v17 = 2;
    sub_26276FCD0();
    char v16 = 3;
    sub_26276FCD0();
    uint64_t v15 = v9;
    char v14 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9574B0);
    sub_26274C3E8(&qword_26A9574B8);
    sub_26276FCE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_26276892C()
{
  unint64_t result = qword_26A9581B8;
  if (!qword_26A9581B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9581B8);
  }
  return result;
}

uint64_t BallTree.Node.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9581C0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_26276892C();
  sub_26276FE30();
  if (!v2)
  {
    char v27 = 0;
    uint64_t v9 = sub_26276FC80();
    char v26 = 1;
    sub_26276FC70();
    int v11 = v10;
    char v25 = 2;
    uint64_t v12 = sub_26276FC40();
    int v21 = v13;
    char v24 = 3;
    uint64_t v14 = sub_26276FC40();
    int v19 = v16;
    uint64_t v20 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9574B0);
    char v22 = 4;
    sub_26274C3E8(&qword_26A9574C8);
    sub_26276FC50();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v17 = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)a2 = v9;
    *(_DWORD *)(a2 + 8) = v11;
    *(void *)(a2 + 16) = v12;
    *(unsigned char *)(a2 + 24) = v21 & 1;
    *(void *)(a2 + 32) = v20;
    *(unsigned char *)(a2 + 40) = v19 & 1;
    *(void *)(a2 + 48) = v17;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_262768C40@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BallTree.Node.init(from:)(a1, a2);
}

uint64_t sub_262768C58(void *a1)
{
  return BallTree.Node.encode(to:)(a1);
}

void BallTree.metric.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t BallTree.points.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BallTree.nodes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BallTree.maxNodePoints.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 40);
}

uint64_t sub_262768D20@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_26276FC20();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_262768D80@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_26276FC20();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_262768DE4(uint64_t a1)
{
  unint64_t v2 = sub_26276E940();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_262768E20(uint64_t a1)
{
  unint64_t v2 = sub_26276E940();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BallTree.__allocating_init(points:metric:maxNodePoints:)(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  BallTree.init(points:metric:maxNodePoints:)(a1, a2, a3);
  return v6;
}

uint64_t BallTree.init(points:metric:maxNodePoints:)(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  uint64_t v6 = MEMORY[0x263F8EE78];
  *(void *)(v3 + 24) = MEMORY[0x263F8EE78];
  *(void *)(v3 + 32) = v6;
  *(void *)(v3 + 40) = 16;
  *(unsigned char *)(v3 + 16) = v5;
  *(void *)(v3 + 48) = *(&off_270DC8000 + v5);
  *(void *)(v3 + 56) = 0;
  if (*(void *)(a1 + 16))
  {
    swift_beginAccess();
    *(void *)(v3 + 24) = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    *(void *)(v3 + 40) = a3;
    int v8 = *(float (**)(uint64_t, uint64_t))(v3 + 48);
    uint64_t v9 = *(void *)(v3 + 56);
    swift_retain();
    int v10 = sub_26276DDF4(a1, v8, v9, a3);
    swift_release();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    *(void *)(v3 + 32) = v10;
  }
  swift_bridgeObjectRelease();
  return v3;
}

BOOL BallTree.isEmpty.getter()
{
  swift_beginAccess();
  return *(void *)(*(void *)(v0 + 32) + 16) == 0;
}

void *BallTree.search(query:k:)(uint64_t a1, int64_t a2)
{
  uint64_t v7 = (uint64_t)v3;
  BOOL v58 = v3 + 3;
  swift_beginAccess();
  if (!*(void *)(v3[3] + 16)) {
    return (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v9 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
LABEL_105:
    __break(1u);
    goto LABEL_106;
  }
  char v4 = sub_262727954(0, v9 & ~((uint64_t)v9 >> 63), 0, MEMORY[0x263F8EE78]);
  unint64_t v2 = v3[6];
  uint64_t v3 = (void *)v3[7];
  uint64_t v57 = (unint64_t *)(v7 + 32);
  swift_beginAccess();
  unint64_t v9 = *(void *)(v7 + 32);
  if (!*(void *)(v9 + 16))
  {
LABEL_106:
    __break(1u);
    goto LABEL_107;
  }
  unint64_t v9 = *(void *)(v9 + 32);
  if ((v9 & 0x8000000000000000) != 0)
  {
LABEL_107:
    __break(1u);
    goto LABEL_108;
  }
  if (v9 >= *(void *)(*v58 + 16))
  {
LABEL_108:
    __break(1u);
    goto LABEL_109;
  }
  uint64_t v10 = *(void *)(*v58 + 8 * v9 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  float v6 = ((float (*)(uint64_t, uint64_t))v2)(a1, v10);
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t v9 = *v57;
  if (*(void *)(*v57 + 16))
  {
    if ((float)(v6 - *(float *)(v9 + 40)) > 0.0) {
      float v6 = v6 - *(float *)(v9 + 40);
    }
    else {
      float v6 = 0.0;
    }
    uint64_t v5 = sub_262727954(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v2 = v5[2];
    unint64_t v9 = v5[3];
    uint64_t v3 = (void *)(v2 + 1);
    if (v2 < v9 >> 1) {
      goto LABEL_11;
    }
    goto LABEL_110;
  }
LABEL_109:
  __break(1u);
LABEL_110:
  uint64_t v5 = sub_262727954((void *)(v9 > 1), (int64_t)v3, 1, v5);
LABEL_11:
  uint64_t v5[2] = v3;
  int v11 = (float *)&v5[2 * v2];
  *((void *)v11 + 4) = 0;
  v11[10] = v6;
  uint64_t v52 = v7;
  while (1)
  {
    uint64_t v12 = (float *)&v5[2 * ((void)v3 - 1)];
    unint64_t v13 = *((void *)v12 + 4);
    float v14 = v12[10];
    uint64_t v5[2] = (char *)v3 - 1;
    unint64_t v9 = v4[2];
    if (v9 != a2) {
      break;
    }
    if (!a2) {
      goto LABEL_89;
    }
    unint64_t v9 = v4[4];
    if ((v9 & 0x8000000000000000) != 0)
    {
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
LABEL_102:
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
      goto LABEL_105;
    }
    if (v9 >= *(void *)(*v58 + 16)) {
      goto LABEL_91;
    }
    unint64_t v2 = *(void *)(v7 + 48);
    uint64_t v3 = *(void **)(v7 + 56);
    uint64_t v15 = *(void *)(*v58 + 8 * v9 + 32);
    swift_retain();
    swift_bridgeObjectRetain();
    float v16 = ((float (*)(uint64_t, uint64_t))v2)(a1, v15);
    swift_bridgeObjectRelease();
    swift_release();
    if (v16 > v14) {
      goto LABEL_21;
    }
LABEL_13:
    uint64_t v3 = (void *)v5[2];
    if (!v3) {
      goto LABEL_84;
    }
  }
  unint64_t v9 = 2139095040;
  float v16 = INFINITY;
  if (v14 >= INFINITY) {
    goto LABEL_13;
  }
LABEL_21:
  if ((v13 & 0x8000000000000000) != 0) {
    goto LABEL_92;
  }
  unint64_t v9 = *v57;
  if (v13 >= *(void *)(*v57 + 16)) {
    goto LABEL_93;
  }
  unint64_t v17 = v9 + 56 * v13;
  unint64_t v18 = *(void *)(v17 + 32);
  if ((v18 & 0x8000000000000000) != 0) {
    goto LABEL_94;
  }
  unint64_t v9 = *(void *)(v7 + 24);
  if (v18 >= *(void *)(v9 + 16)) {
    goto LABEL_95;
  }
  float v19 = *(float *)(v17 + 40);
  unsigned int v56 = *(unsigned __int8 *)(v17 + 56);
  unint64_t v53 = *(void *)(v17 + 64);
  unint64_t v54 = *(void *)(v17 + 48);
  unsigned int v55 = *(unsigned __int8 *)(v17 + 72);
  unint64_t v2 = *(void *)(v7 + 48);
  uint64_t v3 = *(void **)(v7 + 56);
  uint64_t v20 = *(void *)(v9 + 8 * v18 + 32);
  uint64_t v59 = *(void *)(v17 + 80);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  float v6 = ((float (*)(uint64_t, uint64_t))v2)(a1, v20);
  swift_bridgeObjectRelease();
  swift_release();
  if (v6 >= v16) {
    goto LABEL_36;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v4 = sub_262727954(0, v4[2] + 1, 1, v4);
  }
  unint64_t v2 = v4[2];
  unint64_t v21 = v4[3];
  uint64_t v3 = (void *)(v2 + 1);
  if (v2 >= v21 >> 1) {
    char v4 = sub_262727954((void *)(v21 > 1), v2 + 1, 1, v4);
  }
  v4[2] = v3;
  uint64_t v22 = (uint64_t)&v4[2 * v2 + 4];
  *(void *)uint64_t v22 = v18;
  *(float *)(v22 + 8) = v6;
  uint64_t v61 = v4 + 4;
  uint64_t v62 = (char *)(v2 + 1);
  sub_26276AB28((uint64_t *)&v61);
  unint64_t v9 = v4[2];
  if ((uint64_t)v9 <= a2)
  {
LABEL_36:
    uint64_t v23 = v59;
    if (!v59)
    {
LABEL_53:
      if (v14 > (float)(v6 - v19)) {
        float v30 = v14;
      }
      else {
        float v30 = v6 - v19;
      }
      uint64_t v31 = (void *)MEMORY[0x263F8EE78];
      unint64_t v9 = v56;
      if ((v56 & 1) == 0)
      {
        if ((v54 & 0x8000000000000000) != 0) {
          goto LABEL_96;
        }
        unint64_t v9 = *v57;
        if (v54 >= *(void *)(*v57 + 16)) {
          goto LABEL_97;
        }
        unint64_t v9 = *(void *)(v9 + 56 * v54 + 32);
        if ((v9 & 0x8000000000000000) != 0) {
          goto LABEL_98;
        }
        if (v9 >= *(void *)(*v58 + 16)) {
          goto LABEL_99;
        }
        uint64_t v32 = *(void *)(*v58 + 8 * v9 + 32);
        unint64_t v33 = *(float (**)(uint64_t, uint64_t))(v7 + 48);
        swift_bridgeObjectRetain();
        swift_retain();
        float v6 = v33(a1, v32);
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v31 = sub_262727954(0, 1, 1, MEMORY[0x263F8EE78]);
        unint64_t v2 = v31[2];
        unint64_t v34 = v31[3];
        uint64_t v3 = (void *)(v2 + 1);
        if (v2 >= v34 >> 1) {
          uint64_t v31 = sub_262727954((void *)(v34 > 1), v2 + 1, 1, v31);
        }
        v31[2] = v3;
        uint64_t v35 = (float *)&v31[2 * v2];
        *((void *)v35 + 4) = v54;
        v35[10] = v6;
      }
      swift_bridgeObjectRelease();
      unint64_t v9 = v55;
      if ((v55 & 1) == 0)
      {
        if ((v53 & 0x8000000000000000) != 0) {
          goto LABEL_100;
        }
        unint64_t v9 = *v57;
        if (v53 >= *(void *)(*v57 + 16)) {
          goto LABEL_101;
        }
        unint64_t v9 = *(void *)(v9 + 56 * v53 + 32);
        if ((v9 & 0x8000000000000000) != 0) {
          goto LABEL_102;
        }
        if (v9 >= *(void *)(*v58 + 16)) {
          goto LABEL_103;
        }
        uint64_t v36 = *(void *)(*v58 + 8 * v9 + 32);
        unint64_t v37 = *(float (**)(uint64_t, uint64_t))(v7 + 48);
        swift_bridgeObjectRetain();
        swift_retain();
        float v6 = v37(a1, v36);
        swift_bridgeObjectRelease();
        swift_release();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v31 = sub_262727954(0, v31[2] + 1, 1, v31);
        }
        unint64_t v2 = v31[2];
        unint64_t v38 = v31[3];
        unint64_t v39 = v53;
        if (v2 >= v38 >> 1)
        {
          uint64_t v50 = sub_262727954((void *)(v38 > 1), v2 + 1, 1, v31);
          unint64_t v39 = v53;
          uint64_t v31 = v50;
        }
        v31[2] = v2 + 1;
        char v40 = (float *)&v31[2 * v2];
        *((void *)v40 + 4) = v39;
        v40[10] = v6;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v31 = sub_26273600C(v31);
      }
      char v41 = (char *)v31[2];
      char v42 = v31 + 4;
      uint64_t v61 = v31 + 4;
      uint64_t v62 = v41;
      sub_26276A434((uint64_t *)&v61);
      uint64_t v43 = v31[2];
      if (v43)
      {
        unint64_t v44 = v5[2];
        uint64_t v45 = 2 * v44;
        do
        {
          char v46 = (float (*)(void, void))*v42;
          v42 += 2;
          unint64_t v2 = (unint64_t)v46;
          unint64_t v47 = v5[3];
          unint64_t v48 = v44 + 1;
          if (v44 >= v47 >> 1) {
            uint64_t v5 = sub_262727954((void *)(v47 > 1), v44 + 1, 1, v5);
          }
          uint64_t v5[2] = v48;
          unint64_t v49 = (float *)&v5[v45];
          *((void *)v49 + 4) = v2;
          v49[10] = v30;
          v45 += 2;
          unint64_t v44 = v48;
          --v43;
        }
        while (v43);
      }
      swift_bridgeObjectRelease();
      uint64_t v7 = v52;
      goto LABEL_13;
    }
LABEL_37:
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t v2 = a1;
    swift_bridgeObjectRetain();
    uint64_t v3 = (void *)sub_26276CF64(v23, v7, a1);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v25 = v3[2];
    if (v25)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = (uint64_t)(v3 + 5);
      while (1)
      {
        unint64_t v2 = *(void *)(v7 - 8);
        int v26 = *(_DWORD *)v7;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v4 = sub_262727954(0, v4[2] + 1, 1, v4);
        }
        unint64_t v28 = v4[2];
        unint64_t v27 = v4[3];
        if (v28 >= v27 >> 1) {
          char v4 = sub_262727954((void *)(v27 > 1), v28 + 1, 1, v4);
        }
        v4[2] = v28 + 1;
        uint64_t v29 = (uint64_t)&v4[2 * v28 + 4];
        *(void *)uint64_t v29 = v2;
        *(_DWORD *)(v29 + 8) = v26;
        uint64_t v61 = v4 + 4;
        uint64_t v62 = (char *)(v28 + 1);
        sub_26276AB28((uint64_t *)&v61);
        unint64_t v9 = v4[2];
        if ((uint64_t)v9 > a2)
        {
          if (!v9)
          {
            __break(1u);
LABEL_88:
            __break(1u);
LABEL_89:
            __break(1u);
            goto LABEL_90;
          }
          if (swift_isUniquelyReferenced_nonNull_native())
          {
            unint64_t v9 = v4[2];
            if (!v9) {
              goto LABEL_88;
            }
          }
          else
          {
            char v4 = sub_26273600C(v4);
            unint64_t v9 = v4[2];
            if (!v9) {
              goto LABEL_88;
            }
          }
          v4[2] = v9 - 1;
        }
        v7 += 16;
        if (!--v25)
        {
          swift_bridgeObjectRelease();
          uint64_t v7 = v52;
          break;
        }
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_53;
  }
  uint64_t v23 = v59;
  if (!v9) {
    goto LABEL_104;
  }
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    uint64_t v24 = v4[2];
    if (!v24) {
      goto LABEL_83;
    }
LABEL_34:
    v4[2] = v24 - 1;
    if (!v59) {
      goto LABEL_53;
    }
    goto LABEL_37;
  }
  char v4 = sub_26273600C(v4);
  uint64_t v24 = v4[2];
  if (v24) {
    goto LABEL_34;
  }
LABEL_83:
  __break(1u);
LABEL_84:
  swift_bridgeObjectRelease();
  return v4;
}

void *BallTree.search(query:radius:sorted:)(uint64_t a1, char a2, float a3)
{
  uint64_t v4 = (uint64_t)v3;
  v63[12] = *(void **)MEMORY[0x263EF8340];
  swift_beginAccess();
  uint64_t v7 = v3[3];
  unint64_t v8 = *(void *)(v7 + 16);
  unint64_t v9 = (void *)MEMORY[0x263F8EE78];
  if (!v8 || a3 <= 0.0) {
    return v9;
  }
  uint64_t v10 = (float (*)(uint64_t, uint64_t))v3[6];
  uint64_t v57 = v3 + 4;
  swift_beginAccess();
  uint64_t v11 = v3[4];
  if (!*(void *)(v11 + 16)) {
    goto LABEL_57;
  }
  unint64_t v12 = *(void *)(v11 + 32);
  if (v12 >= v8)
  {
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
  }
  uint64_t v13 = *(void *)(v7 + 8 * v12 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  float v14 = v10(a1, v13);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v15 = v3 + 4;
  if (!*(void *)(*v57 + 16)) {
    goto LABEL_59;
  }
  if ((float)(v14 - *(float *)(*v57 + 40)) > a3) {
    return v9;
  }
  char v55 = a2;
  v63[0] = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A957310);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2627718D0;
  *(void *)(inited + 32) = 0;
  uint64_t v17 = 1;
  uint64_t v18 = a1;
  unsigned int v56 = v3;
  do
  {
    uint64_t v19 = v17 - 1;
    unint64_t v20 = *(void *)(inited + 8 * (v17 - 1) + 32);
    *(void *)(inited + 16) = v19;
    if ((v20 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
    if (v20 >= *(void *)(*v15 + 16)) {
      goto LABEL_54;
    }
    uint64_t v21 = *v15 + 56 * v20;
    unint64_t v22 = *(void *)(v21 + 32);
    if ((v22 & 0x8000000000000000) != 0) {
      goto LABEL_55;
    }
    uint64_t v23 = *(void *)(v4 + 24);
    if (v22 >= *(void *)(v23 + 16)) {
      goto LABEL_56;
    }
    float v24 = *(float *)(v21 + 40);
    char v61 = *(unsigned char *)(v21 + 56);
    uint64_t v59 = *(void *)(v21 + 48);
    uint64_t v60 = *(void *)(v21 + 64);
    char v62 = *(unsigned char *)(v21 + 72);
    uint64_t v25 = *(void *)(v21 + 80);
    int v26 = *(float (**)(uint64_t, uint64_t))(v4 + 48);
    uint64_t v27 = *(void *)(v23 + 8 * v22 + 32);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    float v28 = v26(v18, v27);
    swift_bridgeObjectRelease();
    swift_release();
    if ((float)(v28 - v24) > a3)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v28 <= a3)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v9 = sub_262727954(0, v9[2] + 1, 1, v9);
        }
        unint64_t v30 = v9[2];
        unint64_t v29 = v9[3];
        if (v30 >= v29 >> 1) {
          unint64_t v9 = sub_262727954((void *)(v29 > 1), v30 + 1, 1, v9);
        }
        v9[2] = v30 + 1;
        uint64_t v31 = (float *)&v9[2 * v30];
        *((void *)v31 + 4) = v22;
        v31[10] = v28;
      }
      if (v25)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v32 = sub_26276CF64(v25, v4, v18);
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v33 = *(void *)(v32 + 16);
        if (v33)
        {
          unint64_t v34 = (_DWORD *)(v32 + 40);
          uint64_t v35 = MEMORY[0x263F8EE78];
          do
          {
            float v39 = *(float *)v34;
            if (*(float *)v34 <= a3)
            {
              uint64_t v40 = *((void *)v34 - 1);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                sub_26273AC08(0, *(void *)(v35 + 16) + 1, 1);
              }
              unint64_t v37 = *(void *)(v35 + 16);
              unint64_t v36 = *(void *)(v35 + 24);
              if (v37 >= v36 >> 1) {
                sub_26273AC08(v36 > 1, v37 + 1, 1);
              }
              *(void *)(v35 + 16) = v37 + 1;
              uint64_t v38 = v35 + 16 * v37;
              *(void *)(v38 + 32) = v40;
              *(float *)(v38 + 40) = v39;
            }
            v34 += 4;
            --v33;
          }
          while (v33);
        }
        else
        {
          uint64_t v35 = MEMORY[0x263F8EE78];
        }
        swift_bridgeObjectRelease();
        uint64_t v41 = *(void *)(v35 + 16);
        if (v41)
        {
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v9 = sub_262727954(0, v9[2] + 1, 1, v9);
          }
          uint64_t v42 = 0;
          unint64_t v43 = v9[2];
          uint64_t v44 = 2 * v43;
          do
          {
            uint64_t v45 = *(void *)(v35 + v42 * 8 + 32);
            int v46 = *(_DWORD *)(v35 + v42 * 8 + 40);
            unint64_t v47 = v9[3];
            unint64_t v48 = v43 + 1;
            if (v43 >= v47 >> 1) {
              unint64_t v9 = sub_262727954((void *)(v47 > 1), v43 + 1, 1, v9);
            }
            v9[2] = v48;
            unint64_t v49 = &v9[v44 + v42];
            v49[4] = v45;
            *((_DWORD *)v49 + 10) = v46;
            v42 += 2;
            unint64_t v43 = v48;
            --v41;
          }
          while (v41);
          swift_release();
        }
        uint64_t v18 = a1;
        swift_release();
        uint64_t v4 = (uint64_t)v56;
        uint64_t v15 = v57;
      }
      if ((v61 & 1) == 0)
      {
        unint64_t v51 = *(void *)(inited + 16);
        unint64_t v50 = *(void *)(inited + 24);
        if (v51 >= v50 >> 1) {
          uint64_t inited = (uint64_t)sub_2627274CC((void *)(v50 > 1), v51 + 1, 1, (void *)inited);
        }
        *(void *)(inited + 16) = v51 + 1;
        *(void *)(inited + 8 * v51 + 32) = v59;
      }
      swift_bridgeObjectRelease();
      if ((v62 & 1) == 0)
      {
        unint64_t v53 = *(void *)(inited + 16);
        unint64_t v52 = *(void *)(inited + 24);
        if (v53 >= v52 >> 1) {
          uint64_t inited = (uint64_t)sub_2627274CC((void *)(v52 > 1), v53 + 1, 1, (void *)inited);
        }
        *(void *)(inited + 16) = v53 + 1;
        *(void *)(inited + 8 * v53 + 32) = v60;
      }
    }
    uint64_t v17 = *(void *)(inited + 16);
  }
  while (v17);
  v63[0] = v9;
  if (v55) {
    sub_2627683F0(v63);
  }
  swift_bridgeObjectRelease();
  return v63[0];
}

uint64_t BallTree.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t BallTree.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0228](v0, 64, 7);
}

uint64_t BallTree.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9581C8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_26276E940();
  sub_26276FE40();
  char v12 = *(unsigned char *)(v3 + 16);
  LOBYTE(v11) = 0;
  sub_262747FD0();
  sub_26276FD20();
  if (!v2)
  {
    swift_beginAccess();
    uint64_t v11 = *(void *)(v3 + 32);
    v10[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9581D8);
    sub_26276E9E8(&qword_26A9581E0, (void (*)(void))sub_26276E994);
    sub_26276FD20();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t BallTree.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  BallTree.init(from:)(a1);
  return v2;
}

uint64_t BallTree.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9581F0);
  uint64_t v15 = *(void *)(v5 - 8);
  uint64_t v16 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x263F8EE78];
  *(void *)(v1 + 24) = MEMORY[0x263F8EE78];
  *(void *)(v1 + 32) = v8;
  unint64_t v9 = (void *)(v1 + 32);
  *(void *)(v1 + 40) = 16;
  *(void *)(v1 + 48) = sub_26274C510;
  *(void *)(v1 + 56) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_26276E940();
  sub_26276FE30();
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v10 = v15;
    LOBYTE(v18) = 0;
    sub_262748024();
    uint64_t v11 = v16;
    sub_26276FC90();
    *(unsigned char *)(v1 + 16) = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9581D8);
    char v17 = 1;
    sub_26276E9E8(&qword_26A9581F8, (void (*)(void))sub_26276EA58);
    sub_26276FC90();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v11);
    uint64_t v13 = v18;
    swift_beginAccess();
    *unint64_t v9 = v13;
    swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

void *sub_26276A368(uint64_t *a1, int64_t a2)
{
  return BallTree.search(query:k:)(*a1, a2);
}

void *sub_26276A390(uint64_t *a1, char a2, float a3)
{
  return BallTree.search(query:radius:sorted:)(*a1, a2, a3);
}

uint64_t sub_26276A3B8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = BallTree.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_26276A410(void *a1)
{
  return BallTree.encode(to:)(a1);
}

uint64_t sub_26276A434(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_26276FD50();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_141;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v84 = *a1;
      uint64_t v85 = *a1 + 16;
      uint64_t v86 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v88 = v86;
        uint64_t v89 = v85;
        do
        {
          float v90 = *(float *)(v89 + 8);
          if (*(float *)(v89 - 8) >= v90) {
            break;
          }
          if (!v84) {
            goto LABEL_145;
          }
          uint64_t v91 = *(void *)v89;
          *(_OWORD *)uint64_t v89 = *(_OWORD *)(v89 - 16);
          *(float *)(v89 - 8) = v90;
          *(void *)(v89 - 16) = v91;
          v89 -= 16;
        }
        while (!__CFADD__(v88++, 1));
        v85 += 16;
        --v86;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_150;
  }
  uint64_t v6 = result;
  char v101 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    char __dst = (float *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
      char v12 = (char *)MEMORY[0x263F8EE78];
LABEL_107:
      uint64_t v93 = v12;
      uint64_t v104 = v9;
      if (v13 >= 2)
      {
        uint64_t v94 = *v101;
        do
        {
          unint64_t v95 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_136;
          }
          if (!v94) {
            goto LABEL_149;
          }
          BOOL v96 = v93;
          uint64_t v97 = *(void *)&v93[16 * v95 + 32];
          uint64_t v98 = *(void *)&v93[16 * v13 + 24];
          sub_26276B3E4((float *)(v94 + 16 * v97), (float *)(v94 + 16 * *(void *)&v93[16 * v13 + 16]), v94 + 16 * v98, __dst);
          if (v1) {
            break;
          }
          if (v98 < v97) {
            goto LABEL_137;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            BOOL v96 = sub_26276BD14((uint64_t)v96);
          }
          if (v95 >= *((void *)v96 + 2)) {
            goto LABEL_138;
          }
          uint64_t v99 = &v96[16 * v95 + 32];
          *(void *)uint64_t v99 = v97;
          *((void *)v99 + 1) = v98;
          unint64_t v100 = *((void *)v96 + 2);
          if (v13 > v100) {
            goto LABEL_139;
          }
          memmove(&v96[16 * v13 + 16], &v96[16 * v13 + 32], 16 * (v100 - v13));
          uint64_t v93 = v96;
          *((void *)v96 + 2) = v100 - 1;
          unint64_t v13 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_97:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A957388);
    uint64_t v8 = sub_26276F830();
    *(void *)(v8 + 16) = v7;
    uint64_t v104 = v8;
    char __dst = (float *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v102 = *a1 + 40;
  uint64_t v103 = *a1 + 8;
  char v12 = (char *)MEMORY[0x263F8EE78];
  uint64_t v105 = v6;
  uint64_t v106 = v3;
  uint64_t v107 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      float v15 = *(float *)(v103 + 16 * v10);
      uint64_t v16 = 16 * v14;
      float v17 = *(float *)(v103 + 16 * v14);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        uint64_t v18 = (float *)(v102 + 16 * v14);
        while (v17 < v15 != *(v18 - 4) >= *v18)
        {
          ++v10;
          v18 += 4;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v17 < v15)
      {
        if (v10 < v14) {
          goto LABEL_142;
        }
        if (v14 < v10)
        {
          uint64_t v19 = 16 * v10 - 16;
          uint64_t v20 = v10;
          uint64_t v21 = v14;
          do
          {
            if (v21 != --v20)
            {
              if (!v11) {
                goto LABEL_148;
              }
              uint64_t v23 = (_OWORD *)(v11 + v16);
              float v24 = (_OWORD *)(v11 + v19);
              uint64_t v25 = *(void *)(v11 + v16);
              int v26 = *(_DWORD *)(v11 + v16 + 8);
              if (v16 != v19 || v23 >= v24 + 1) {
                *uint64_t v23 = *v24;
              }
              uint64_t v22 = v11 + v19;
              *(void *)uint64_t v22 = v25;
              *(_DWORD *)(v22 + 8) = v26;
            }
            ++v21;
            v19 -= 16;
            v16 += 16;
          }
          while (v21 < v20);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_50;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_140;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_50;
    }
    uint64_t v27 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_143;
    }
    if (v27 >= v3) {
      uint64_t v27 = v3;
    }
    if (v27 < v14) {
      break;
    }
    if (v10 != v27)
    {
      float v28 = (float *)(v11 + 16 * v10);
      do
      {
        unint64_t v29 = v28;
        uint64_t v30 = v14;
        do
        {
          float v31 = v29[2];
          if (*(v29 - 2) >= v31) {
            break;
          }
          if (!v11) {
            goto LABEL_146;
          }
          uint64_t v32 = *(void *)v29;
          *(_OWORD *)unint64_t v29 = *((_OWORD *)v29 - 1);
          *(v29 - 2) = v31;
          *((void *)v29 - 2) = v32;
          v29 -= 4;
          ++v30;
        }
        while (v10 != v30);
        ++v10;
        v28 += 4;
      }
      while (v10 != v27);
      uint64_t v10 = v27;
    }
LABEL_50:
    if (v10 < v14) {
      goto LABEL_135;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v12 = sub_26276B9E4(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v34 = *((void *)v12 + 2);
    unint64_t v33 = *((void *)v12 + 3);
    unint64_t v13 = v34 + 1;
    uint64_t v11 = v107;
    if (v34 >= v33 >> 1)
    {
      uint64_t v83 = sub_26276B9E4((char *)(v33 > 1), v34 + 1, 1, v12);
      uint64_t v11 = v107;
      char v12 = v83;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v35 = v12 + 32;
    unint64_t v36 = &v12[16 * v34 + 32];
    *(void *)unint64_t v36 = v14;
    *((void *)v36 + 1) = v10;
    if (v34)
    {
      while (1)
      {
        unint64_t v37 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v42 = &v35[16 * v13];
          uint64_t v43 = *((void *)v42 - 8);
          uint64_t v44 = *((void *)v42 - 7);
          BOOL v48 = __OFSUB__(v44, v43);
          uint64_t v45 = v44 - v43;
          if (v48) {
            goto LABEL_124;
          }
          uint64_t v47 = *((void *)v42 - 6);
          uint64_t v46 = *((void *)v42 - 5);
          BOOL v48 = __OFSUB__(v46, v47);
          uint64_t v40 = v46 - v47;
          char v41 = v48;
          if (v48) {
            goto LABEL_125;
          }
          unint64_t v49 = v13 - 2;
          unint64_t v50 = &v35[16 * v13 - 32];
          uint64_t v52 = *(void *)v50;
          uint64_t v51 = *((void *)v50 + 1);
          BOOL v48 = __OFSUB__(v51, v52);
          uint64_t v53 = v51 - v52;
          if (v48) {
            goto LABEL_127;
          }
          BOOL v48 = __OFADD__(v40, v53);
          uint64_t v54 = v40 + v53;
          if (v48) {
            goto LABEL_130;
          }
          if (v54 >= v45)
          {
            uint64_t v72 = &v35[16 * v37];
            uint64_t v74 = *(void *)v72;
            uint64_t v73 = *((void *)v72 + 1);
            BOOL v48 = __OFSUB__(v73, v74);
            uint64_t v75 = v73 - v74;
            if (v48) {
              goto LABEL_134;
            }
            BOOL v65 = v40 < v75;
            goto LABEL_87;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v66 = *((void *)v12 + 4);
            uint64_t v67 = *((void *)v12 + 5);
            BOOL v48 = __OFSUB__(v67, v66);
            uint64_t v59 = v67 - v66;
            char v60 = v48;
            goto LABEL_81;
          }
          uint64_t v39 = *((void *)v12 + 4);
          uint64_t v38 = *((void *)v12 + 5);
          BOOL v48 = __OFSUB__(v38, v39);
          uint64_t v40 = v38 - v39;
          char v41 = v48;
        }
        if (v41) {
          goto LABEL_126;
        }
        unint64_t v49 = v13 - 2;
        char v55 = &v35[16 * v13 - 32];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v58 = __OFSUB__(v56, v57);
        uint64_t v59 = v56 - v57;
        char v60 = v58;
        if (v58) {
          goto LABEL_129;
        }
        char v61 = &v35[16 * v37];
        uint64_t v63 = *(void *)v61;
        uint64_t v62 = *((void *)v61 + 1);
        BOOL v48 = __OFSUB__(v62, v63);
        uint64_t v64 = v62 - v63;
        if (v48) {
          goto LABEL_132;
        }
        if (__OFADD__(v59, v64)) {
          goto LABEL_133;
        }
        if (v59 + v64 >= v40)
        {
          BOOL v65 = v40 < v64;
LABEL_87:
          if (v65) {
            unint64_t v37 = v49;
          }
          goto LABEL_89;
        }
LABEL_81:
        if (v60) {
          goto LABEL_128;
        }
        uint64_t v68 = &v35[16 * v37];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v48 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v48) {
          goto LABEL_131;
        }
        if (v71 < v59) {
          goto LABEL_15;
        }
LABEL_89:
        unint64_t v76 = v37 - 1;
        if (v37 - 1 >= v13)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!v11) {
          goto LABEL_147;
        }
        uint64_t v77 = v12;
        uint64_t v78 = &v35[16 * v76];
        uint64_t v79 = *(void *)v78;
        uint64_t v80 = &v35[16 * v37];
        uint64_t v81 = *((void *)v80 + 1);
        sub_26276B3E4((float *)(v11 + 16 * *(void *)v78), (float *)(v11 + 16 * *(void *)v80), v11 + 16 * v81, __dst);
        if (v1) {
          goto LABEL_97;
        }
        if (v81 < v79) {
          goto LABEL_121;
        }
        if (v37 > *((void *)v77 + 2)) {
          goto LABEL_122;
        }
        *(void *)uint64_t v78 = v79;
        *(void *)&v35[16 * v76 + 8] = v81;
        unint64_t v82 = *((void *)v77 + 2);
        if (v37 >= v82) {
          goto LABEL_123;
        }
        char v12 = v77;
        unint64_t v13 = v82 - 1;
        memmove(&v35[16 * v37], v80 + 16, 16 * (v82 - 1 - v37));
        *((void *)v77 + 2) = v82 - 1;
        uint64_t v11 = v107;
        if (v82 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v105;
    uint64_t v3 = v106;
    if (v10 >= v106)
    {
      uint64_t v9 = v104;
      goto LABEL_107;
    }
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  uint64_t result = sub_26276FBA0();
  __break(1u);
  return result;
}

uint64_t sub_26276AB28(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_26276FD50();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_141;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v84 = *a1;
      uint64_t v85 = *a1 + 16;
      uint64_t v86 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v88 = v86;
        uint64_t v89 = v85;
        do
        {
          float v90 = *(float *)(v89 + 8);
          if (v90 >= *(float *)(v89 - 8)) {
            break;
          }
          if (!v84) {
            goto LABEL_145;
          }
          uint64_t v91 = *(void *)v89;
          *(_OWORD *)uint64_t v89 = *(_OWORD *)(v89 - 16);
          *(float *)(v89 - 8) = v90;
          *(void *)(v89 - 16) = v91;
          v89 -= 16;
        }
        while (!__CFADD__(v88++, 1));
        v85 += 16;
        --v86;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_150;
  }
  uint64_t v6 = result;
  char v101 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    char __dst = (float *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
      char v12 = (char *)MEMORY[0x263F8EE78];
LABEL_107:
      uint64_t v93 = v12;
      uint64_t v104 = v9;
      if (v13 >= 2)
      {
        uint64_t v94 = *v101;
        do
        {
          unint64_t v95 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_136;
          }
          if (!v94) {
            goto LABEL_149;
          }
          BOOL v96 = v93;
          uint64_t v97 = *(void *)&v93[16 * v95 + 32];
          uint64_t v98 = *(void *)&v93[16 * v13 + 24];
          sub_26276B670((float *)(v94 + 16 * v97), (float *)(v94 + 16 * *(void *)&v93[16 * v13 + 16]), v94 + 16 * v98, __dst);
          if (v1) {
            break;
          }
          if (v98 < v97) {
            goto LABEL_137;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            BOOL v96 = sub_26276BD14((uint64_t)v96);
          }
          if (v95 >= *((void *)v96 + 2)) {
            goto LABEL_138;
          }
          uint64_t v99 = &v96[16 * v95 + 32];
          *(void *)uint64_t v99 = v97;
          *((void *)v99 + 1) = v98;
          unint64_t v100 = *((void *)v96 + 2);
          if (v13 > v100) {
            goto LABEL_139;
          }
          memmove(&v96[16 * v13 + 16], &v96[16 * v13 + 32], 16 * (v100 - v13));
          uint64_t v93 = v96;
          *((void *)v96 + 2) = v100 - 1;
          unint64_t v13 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_97:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A957388);
    uint64_t v8 = sub_26276F830();
    *(void *)(v8 + 16) = v7;
    uint64_t v104 = v8;
    char __dst = (float *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v102 = *a1 + 40;
  uint64_t v103 = *a1 + 8;
  char v12 = (char *)MEMORY[0x263F8EE78];
  uint64_t v105 = v6;
  uint64_t v106 = v3;
  uint64_t v107 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      float v15 = *(float *)(v103 + 16 * v10);
      uint64_t v16 = 16 * v14;
      float v17 = *(float *)(v103 + 16 * v14);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        uint64_t v18 = (float *)(v102 + 16 * v14);
        while (v15 < v17 != *v18 >= *(v18 - 4))
        {
          ++v10;
          v18 += 4;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v15 < v17)
      {
        if (v10 < v14) {
          goto LABEL_142;
        }
        if (v14 < v10)
        {
          uint64_t v19 = 16 * v10 - 16;
          uint64_t v20 = v10;
          uint64_t v21 = v14;
          do
          {
            if (v21 != --v20)
            {
              if (!v11) {
                goto LABEL_148;
              }
              uint64_t v23 = (_OWORD *)(v11 + v16);
              float v24 = (_OWORD *)(v11 + v19);
              uint64_t v25 = *(void *)(v11 + v16);
              int v26 = *(_DWORD *)(v11 + v16 + 8);
              if (v16 != v19 || v23 >= v24 + 1) {
                *uint64_t v23 = *v24;
              }
              uint64_t v22 = v11 + v19;
              *(void *)uint64_t v22 = v25;
              *(_DWORD *)(v22 + 8) = v26;
            }
            ++v21;
            v19 -= 16;
            v16 += 16;
          }
          while (v21 < v20);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_50;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_140;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_50;
    }
    uint64_t v27 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_143;
    }
    if (v27 >= v3) {
      uint64_t v27 = v3;
    }
    if (v27 < v14) {
      break;
    }
    if (v10 != v27)
    {
      float v28 = (float *)(v11 + 16 * v10);
      do
      {
        unint64_t v29 = v28;
        uint64_t v30 = v14;
        do
        {
          float v31 = v29[2];
          if (v31 >= *(v29 - 2)) {
            break;
          }
          if (!v11) {
            goto LABEL_146;
          }
          uint64_t v32 = *(void *)v29;
          *(_OWORD *)unint64_t v29 = *((_OWORD *)v29 - 1);
          *(v29 - 2) = v31;
          *((void *)v29 - 2) = v32;
          v29 -= 4;
          ++v30;
        }
        while (v10 != v30);
        ++v10;
        v28 += 4;
      }
      while (v10 != v27);
      uint64_t v10 = v27;
    }
LABEL_50:
    if (v10 < v14) {
      goto LABEL_135;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v12 = sub_26276B9E4(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v34 = *((void *)v12 + 2);
    unint64_t v33 = *((void *)v12 + 3);
    unint64_t v13 = v34 + 1;
    uint64_t v11 = v107;
    if (v34 >= v33 >> 1)
    {
      uint64_t v83 = sub_26276B9E4((char *)(v33 > 1), v34 + 1, 1, v12);
      uint64_t v11 = v107;
      char v12 = v83;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v35 = v12 + 32;
    unint64_t v36 = &v12[16 * v34 + 32];
    *(void *)unint64_t v36 = v14;
    *((void *)v36 + 1) = v10;
    if (v34)
    {
      while (1)
      {
        unint64_t v37 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v42 = &v35[16 * v13];
          uint64_t v43 = *((void *)v42 - 8);
          uint64_t v44 = *((void *)v42 - 7);
          BOOL v48 = __OFSUB__(v44, v43);
          uint64_t v45 = v44 - v43;
          if (v48) {
            goto LABEL_124;
          }
          uint64_t v47 = *((void *)v42 - 6);
          uint64_t v46 = *((void *)v42 - 5);
          BOOL v48 = __OFSUB__(v46, v47);
          uint64_t v40 = v46 - v47;
          char v41 = v48;
          if (v48) {
            goto LABEL_125;
          }
          unint64_t v49 = v13 - 2;
          unint64_t v50 = &v35[16 * v13 - 32];
          uint64_t v52 = *(void *)v50;
          uint64_t v51 = *((void *)v50 + 1);
          BOOL v48 = __OFSUB__(v51, v52);
          uint64_t v53 = v51 - v52;
          if (v48) {
            goto LABEL_127;
          }
          BOOL v48 = __OFADD__(v40, v53);
          uint64_t v54 = v40 + v53;
          if (v48) {
            goto LABEL_130;
          }
          if (v54 >= v45)
          {
            uint64_t v72 = &v35[16 * v37];
            uint64_t v74 = *(void *)v72;
            uint64_t v73 = *((void *)v72 + 1);
            BOOL v48 = __OFSUB__(v73, v74);
            uint64_t v75 = v73 - v74;
            if (v48) {
              goto LABEL_134;
            }
            BOOL v65 = v40 < v75;
            goto LABEL_87;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v66 = *((void *)v12 + 4);
            uint64_t v67 = *((void *)v12 + 5);
            BOOL v48 = __OFSUB__(v67, v66);
            uint64_t v59 = v67 - v66;
            char v60 = v48;
            goto LABEL_81;
          }
          uint64_t v39 = *((void *)v12 + 4);
          uint64_t v38 = *((void *)v12 + 5);
          BOOL v48 = __OFSUB__(v38, v39);
          uint64_t v40 = v38 - v39;
          char v41 = v48;
        }
        if (v41) {
          goto LABEL_126;
        }
        unint64_t v49 = v13 - 2;
        char v55 = &v35[16 * v13 - 32];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v58 = __OFSUB__(v56, v57);
        uint64_t v59 = v56 - v57;
        char v60 = v58;
        if (v58) {
          goto LABEL_129;
        }
        char v61 = &v35[16 * v37];
        uint64_t v63 = *(void *)v61;
        uint64_t v62 = *((void *)v61 + 1);
        BOOL v48 = __OFSUB__(v62, v63);
        uint64_t v64 = v62 - v63;
        if (v48) {
          goto LABEL_132;
        }
        if (__OFADD__(v59, v64)) {
          goto LABEL_133;
        }
        if (v59 + v64 >= v40)
        {
          BOOL v65 = v40 < v64;
LABEL_87:
          if (v65) {
            unint64_t v37 = v49;
          }
          goto LABEL_89;
        }
LABEL_81:
        if (v60) {
          goto LABEL_128;
        }
        uint64_t v68 = &v35[16 * v37];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v48 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v48) {
          goto LABEL_131;
        }
        if (v71 < v59) {
          goto LABEL_15;
        }
LABEL_89:
        unint64_t v76 = v37 - 1;
        if (v37 - 1 >= v13)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!v11) {
          goto LABEL_147;
        }
        uint64_t v77 = v12;
        uint64_t v78 = &v35[16 * v76];
        uint64_t v79 = *(void *)v78;
        uint64_t v80 = &v35[16 * v37];
        uint64_t v81 = *((void *)v80 + 1);
        sub_26276B670((float *)(v11 + 16 * *(void *)v78), (float *)(v11 + 16 * *(void *)v80), v11 + 16 * v81, __dst);
        if (v1) {
          goto LABEL_97;
        }
        if (v81 < v79) {
          goto LABEL_121;
        }
        if (v37 > *((void *)v77 + 2)) {
          goto LABEL_122;
        }
        *(void *)uint64_t v78 = v79;
        *(void *)&v35[16 * v76 + 8] = v81;
        unint64_t v82 = *((void *)v77 + 2);
        if (v37 >= v82) {
          goto LABEL_123;
        }
        char v12 = v77;
        unint64_t v13 = v82 - 1;
        memmove(&v35[16 * v37], v80 + 16, 16 * (v82 - 1 - v37));
        *((void *)v77 + 2) = v82 - 1;
        uint64_t v11 = v107;
        if (v82 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v105;
    uint64_t v3 = v106;
    if (v10 >= v106)
    {
      uint64_t v9 = v104;
      goto LABEL_107;
    }
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  uint64_t result = sub_26276FBA0();
  __break(1u);
  return result;
}

uint64_t sub_26276B21C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *, uint64_t *))
{
  if (a3 != a2)
  {
    uint64_t v7 = a3;
    uint64_t v9 = *v4;
    uint64_t v10 = *v4 + 16 * a3;
    uint64_t v21 = result;
LABEL_4:
    uint64_t v11 = v10;
    uint64_t v12 = result;
    while (1)
    {
      int v13 = *(_DWORD *)(v11 + 8);
      uint64_t v19 = *(void *)v11;
      int v20 = v13;
      int v14 = *(_DWORD *)(v11 - 8);
      uint64_t v17 = *(void *)(v11 - 16);
      int v18 = v14;
      uint64_t result = a4(&v19, &v17);
      if (v5) {
        break;
      }
      if (result)
      {
        if (!v9)
        {
          __break(1u);
          return result;
        }
        uint64_t v15 = *(void *)v11;
        int v16 = *(_DWORD *)(v11 + 8);
        *(_OWORD *)uint64_t v11 = *(_OWORD *)(v11 - 16);
        *(_DWORD *)(v11 - 8) = v16;
        *(void *)(v11 - 16) = v15;
        v11 -= 16;
        if (v7 != ++v12) {
          continue;
        }
      }
      ++v7;
      v10 += 16;
      uint64_t result = v21;
      if (v7 != a2) {
        goto LABEL_4;
      }
      return result;
    }
  }
  return result;
}

uint64_t sub_26276B310()
{
  uint64_t v1 = *v0;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v0 = v1;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_26276B9E4(0, *(void *)(v1 + 16) + 1, 1, (char *)v1);
    *uint64_t v0 = result;
  }
  return result;
}

char *sub_26276B360(char *result)
{
  unint64_t v2 = *((void *)*v1 + 3);
  if ((uint64_t)(result + 1) > (uint64_t)(v2 >> 1))
  {
    uint64_t result = sub_26276B9E4((char *)(v2 > 1), (int64_t)(result + 1), 1, *v1);
    *uint64_t v1 = result;
  }
  return result;
}

uint64_t sub_26276B3A4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *v3;
  *(void *)(v4 + 16) = result + 1;
  uint64_t v5 = v4 + 16 * result;
  *(void *)(v5 + 32) = a2;
  *(void *)(v5 + 40) = a3;
  return result;
}

uint64_t sub_26276B3BC(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

unint64_t sub_26276B3C4(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)(a3 + 16) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_26276B3E4(float *__src, float *a2, unint64_t a3, float *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  int v26 = __dst;
  uint64_t v27 = __src;
  if (v10 >= v13)
  {
    if (v11 >= -15)
    {
      uint64_t v19 = 4 * v13;
      if (__dst != a2 || &a2[v19] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      int v20 = &v4[v19];
      uint64_t v25 = &v4[v19];
      uint64_t v27 = v6;
      if (v7 < v6 && (unint64_t)(v11 - 16) <= 0xFFFFFFFFFFFFFFE0)
      {
        uint64_t v21 = (float *)(a3 - 16);
        do
        {
          uint64_t v22 = v21 + 4;
          if (*(v6 - 2) >= *(v20 - 2))
          {
            uint64_t v25 = v20 - 4;
            if (v22 < v20 || v21 >= v20 || v22 != v20) {
              *(_OWORD *)uint64_t v21 = *((_OWORD *)v20 - 1);
            }
            uint64_t v23 = v6;
            v20 -= 4;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v23 = v6 - 4;
            if (v22 != v6 || v21 >= v6) {
              *(_OWORD *)uint64_t v21 = *(_OWORD *)v23;
            }
            uint64_t v27 = v6 - 4;
            if (v23 <= v7) {
              break;
            }
          }
          v21 -= 4;
          uint64_t v6 = v23;
        }
        while (v20 > v4);
      }
LABEL_44:
      sub_26276BBA0((void **)&v27, (const void **)&v26, &v25);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    size_t v14 = 4 * v10;
    if (__dst != __src || &__src[v14] <= __dst) {
      memmove(__dst, __src, v14 * 4);
    }
    uint64_t v15 = &v4[v14];
    uint64_t v25 = &v4[v14];
    if ((unint64_t)v6 < a3 && (unint64_t)(v8 - 16) <= 0xFFFFFFFFFFFFFFE0)
    {
      int v16 = v4;
      while (1)
      {
        if (v16[2] >= v6[2])
        {
          uint64_t v4 = v16 + 4;
          int v18 = v16;
          uint64_t v17 = v6;
          if (v7 == v16)
          {
            v16 += 4;
            if (v7 < v4) {
              goto LABEL_22;
            }
          }
          else
          {
            v16 += 4;
          }
        }
        else
        {
          uint64_t v17 = v6 + 4;
          int v18 = v6;
          if (v7 == v6 && v7 < v17) {
            goto LABEL_22;
          }
        }
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v18;
LABEL_22:
        v7 += 4;
        if (v16 < v15)
        {
          uint64_t v6 = v17;
          if ((unint64_t)v17 < a3) {
            continue;
          }
        }
        int v26 = v4;
        uint64_t v27 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  uint64_t result = sub_26276FC00();
  __break(1u);
  return result;
}

uint64_t sub_26276B670(float *__src, float *a2, unint64_t a3, float *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  int v26 = __dst;
  uint64_t v27 = __src;
  if (v10 >= v13)
  {
    if (v11 >= -15)
    {
      uint64_t v19 = 4 * v13;
      if (__dst != a2 || &a2[v19] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      int v20 = &v4[v19];
      uint64_t v25 = &v4[v19];
      uint64_t v27 = v6;
      if (v7 < v6 && (unint64_t)(v11 - 16) <= 0xFFFFFFFFFFFFFFE0)
      {
        uint64_t v21 = (float *)(a3 - 16);
        do
        {
          uint64_t v22 = v21 + 4;
          if (*(v20 - 2) >= *(v6 - 2))
          {
            uint64_t v25 = v20 - 4;
            if (v22 < v20 || v21 >= v20 || v22 != v20) {
              *(_OWORD *)uint64_t v21 = *((_OWORD *)v20 - 1);
            }
            uint64_t v23 = v6;
            v20 -= 4;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v23 = v6 - 4;
            if (v22 != v6 || v21 >= v6) {
              *(_OWORD *)uint64_t v21 = *(_OWORD *)v23;
            }
            uint64_t v27 = v6 - 4;
            if (v23 <= v7) {
              break;
            }
          }
          v21 -= 4;
          uint64_t v6 = v23;
        }
        while (v20 > v4);
      }
LABEL_44:
      sub_26276BBA0((void **)&v27, (const void **)&v26, &v25);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    size_t v14 = 4 * v10;
    if (__dst != __src || &__src[v14] <= __dst) {
      memmove(__dst, __src, v14 * 4);
    }
    uint64_t v15 = &v4[v14];
    uint64_t v25 = &v4[v14];
    if ((unint64_t)v6 < a3 && (unint64_t)(v8 - 16) <= 0xFFFFFFFFFFFFFFE0)
    {
      int v16 = v4;
      while (1)
      {
        if (v6[2] >= v16[2])
        {
          uint64_t v4 = v16 + 4;
          int v18 = v16;
          uint64_t v17 = v6;
          if (v7 == v16)
          {
            v16 += 4;
            if (v7 < v4) {
              goto LABEL_22;
            }
          }
          else
          {
            v16 += 4;
          }
        }
        else
        {
          uint64_t v17 = v6 + 4;
          int v18 = v6;
          if (v7 == v6 && v7 < v17) {
            goto LABEL_22;
          }
        }
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v18;
LABEL_22:
        v7 += 4;
        if (v16 < v15)
        {
          uint64_t v6 = v17;
          if ((unint64_t)v17 < a3) {
            continue;
          }
        }
        int v26 = v4;
        uint64_t v27 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  uint64_t result = sub_26276FC00();
  __break(1u);
  return result;
}

uint64_t sub_26276B8FC()
{
  uint64_t v1 = *v0;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v0 = v1;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_26276BD14(v1);
    *uint64_t v0 = result;
  }
  return result;
}

unint64_t sub_26276B93C(unint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (*(void *)(a2 + 16) <= result) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_26276B958(unint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_26276BD14(v3);
    uint64_t v3 = result;
  }
  unint64_t v5 = *(void *)(v3 + 16);
  if (v5 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v6 = v5 - 1;
    uint64_t v7 = v3 + 16 * a1;
    uint64_t v8 = *(void *)(v7 + 32);
    memmove((void *)(v7 + 32), (const void *)(v7 + 48), 16 * (v5 - 1 - a1));
    *(void *)(v3 + 16) = v6;
    *uint64_t v1 = v3;
    return v8;
  }
  return result;
}

char *sub_26276B9E4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A958250);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_26276BAE0(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 3;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -4)
  {
    uint64_t result = (char *)sub_26276FC00();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 2;
    if (result != v3 || result >= &v3[4 * v7])
    {
      return (char *)memmove(result, v3, 4 * v7);
    }
  }
  return result;
}

char *sub_26276BBA0(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_26276FC00();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    size_t v6 = (v4 + (v4 < 0 ? 0xFuLL : 0)) & 0xFFFFFFFFFFFFFFF0;
    if (result != v3 || result >= &v3[v6])
    {
      return (char *)memmove(result, v3, v6);
    }
  }
  return result;
}

char *sub_26276BC58(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_26276FC00();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_26276BD14(uint64_t a1)
{
  return sub_26276B9E4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_26276BD28(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  return sub_26276BD40(a1, a2, a3, a4, a5);
}

void *sub_26276BD40(void *result, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  uint64_t v6 = result[1];
  uint64_t v5 = result[2];
  BOOL v8 = __OFADD__(v5, v6);
  uint64_t v7 = v5 + v6;
  if (!v8)
  {
    if ((v6 & 0x8000000000000000) == 0)
    {
      BOOL v8 = __OFSUB__(v7, *result);
      if (v7 < *result || (v7 -= *result, !v8))
      {
LABEL_9:
        uint64_t v9 = a2 + 24 * v7;
        *(void *)uint64_t v9 = a3;
        *(void *)(v9 + 8) = a4;
        *(unsigned char *)(v9 + 16) = a5 & 1;
        *(unsigned char *)(v9 + 17) = HIBYTE(a5) & 1;
        uint64_t v10 = result[1];
        BOOL v8 = __OFADD__(v10, 1);
        uint64_t v11 = v10 + 1;
        if (!v8)
        {
          result[1] = v11;
          return (void *)swift_bridgeObjectRetain();
        }
        goto LABEL_12;
      }
      __break(1u);
    }
    if (v7 < 0)
    {
      BOOL v8 = __OFADD__(v7, *result);
      v7 += *result;
      if (v8) {
        goto LABEL_13;
      }
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_12:
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_26276BDD0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A957348);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_26276FC00();
  __break(1u);
  return result;
}

uint64_t sub_26276BF30(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A958270);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A958278);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_26276FC00();
  __break(1u);
  return result;
}

uint64_t sub_26276C0D4(char a1, int64_t a2, char a3, char *a4)
{
  return sub_26276CA44(a1, a2, a3, a4, &qword_26A957318);
}

uint64_t sub_26276C0E0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9572F8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_26276FC00();
  __break(1u);
  return result;
}

uint64_t sub_26276C24C(char a1, int64_t a2, char a3, char *a4)
{
  return sub_26276C264(a1, a2, a3, a4, &qword_26A957350);
}

uint64_t sub_26276C258(char a1, int64_t a2, char a3, char *a4)
{
  return sub_26276C264(a1, a2, a3, a4, &qword_26A957310);
}

uint64_t sub_26276C264(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    int64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  size_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9]) {
      memmove(v14, v15, 8 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    memcpy(v14, v15, 8 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_26276FC00();
  __break(1u);
  return result;
}

uint64_t sub_26276C3C0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9579D8);
  uint64_t v10 = *(void *)(sub_26276F4B0() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  uint64_t v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_26276F4B0() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  int v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_26276FC00();
  __break(1u);
  return result;
}

uint64_t sub_26276C600(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A957340);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_26276FC00();
  __break(1u);
  return result;
}

uint64_t sub_26276C760(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A958260);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_26276FC00();
  __break(1u);
  return result;
}

uint64_t sub_26276C8C0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A958268);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 20);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[20 * v8]) {
      memmove(v12, v13, 20 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[20 * v8] || v12 >= &v13[20 * v8])
  {
    memcpy(v12, v13, 20 * v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_26276FC00();
  __break(1u);
  return result;
}

uint64_t sub_26276CA38(char a1, int64_t a2, char a3, char *a4)
{
  return sub_26276CA44(a1, a2, a3, a4, &qword_26A958258);
}

uint64_t sub_26276CA44(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    size_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    size_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  size_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  size_t v16 = 16 * v9;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[v16]) {
      memmove(v14, v15, v16);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    memcpy(v14, v15, v16);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_26276FC00();
  __break(1u);
  return result;
}

uint64_t sub_26276CB9C(uint64_t result, uint64_t (*a2)(void *, uint64_t *))
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v4 = result;
  if (result)
  {
    uint64_t v5 = sub_26276F830();
    *(void *)(v5 + 16) = v4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
  }
  uint64_t v6 = v5 + 32;
  v7[1] = v4;
  uint64_t v8 = 0;
  v7[0] = v5 + 32;
  uint64_t result = a2(v7, &v8);
  if (v2)
  {
    if (v8 <= v4)
    {
      if (!v7[0])
      {
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      if (v6 == v7[0])
      {
        *(void *)(v5 + 16) = v8;
        swift_bridgeObjectRelease();
        return v5;
      }
      goto LABEL_17;
    }
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v8 > v4)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v7[0])
  {
    if (v6 == v7[0])
    {
      *(void *)(v5 + 16) = v8;
      return v5;
    }
    goto LABEL_19;
  }
LABEL_21:
  __break(1u);
  return result;
}

void sub_26276CC9C(uint64_t a1, vDSP_Length *a2, uint64_t a3)
{
}

void sub_26276CCB4(uint64_t a1, vDSP_Length *a2, uint64_t a3)
{
  vDSP_Length v3 = *(void *)(a1 + 8);
  if (*(void *)(a3 + 16) == v3)
  {
    if (*(void *)a1)
    {
      vDSP_vabs((const float *)(a3 + 32), 1, *(float **)a1, 1, v3);
      *a2 = v3;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_26276CD24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  vDSP_Length v3 = *(void *)(a3 + 8);
  if (*(void *)(a1 + 16) != v3)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (*(void *)(a2 + 16) != v3)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (*(void *)a3)
  {
    vDSP_vsub((const float *)(a2 + 32), 1, (const float *)(a1 + 32), 1, *(float **)a3, 1, v3);
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_26276CD6C(uint64_t a1)
{
  return sub_26276BDD0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_26276CD80(uint64_t a1)
{
  return sub_26276CA44(0, *(void *)(a1 + 16), 0, (char *)a1, &qword_26A9579B8);
}

uint64_t sub_26276CDB0(uint64_t a1)
{
  return sub_26276CA44(0, *(void *)(a1 + 16), 0, (char *)a1, &qword_26A957318);
}

uint64_t sub_26276CDE0(uint64_t a1)
{
  return sub_26276CA44(0, *(void *)(a1 + 16), 0, (char *)a1, &qword_26A958258);
}

uint64_t sub_26276CE10(uint64_t a1)
{
  return sub_26276C264(0, *(void *)(a1 + 16), 0, (char *)a1, &qword_26A957310);
}

uint64_t sub_26276CE40(uint64_t a1, float (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (!v5) {
    return v6;
  }
  uint64_t v21 = MEMORY[0x263F8EE78];
  uint64_t result = sub_262739750(0, v5, 0);
  uint64_t v6 = v21;
  size_t v11 = (unint64_t *)(a1 + 32);
  uint64_t v12 = a5 + 32;
  unint64_t v13 = *(void *)(a5 + 16);
  while (1)
  {
    unint64_t v15 = *v11++;
    unint64_t v14 = v15;
    if (v15 >= v13) {
      break;
    }
    uint64_t v16 = *(void *)(v12 + 8 * v14);
    swift_bridgeObjectRetain();
    float v17 = a2(a4, v16);
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v19 = *(void *)(v21 + 16);
    unint64_t v18 = *(void *)(v21 + 24);
    if (v19 >= v18 >> 1) {
      uint64_t result = sub_262739750(v18 > 1, v19 + 1, 1);
    }
    *(void *)(v21 + 16) = v19 + 1;
    *(float *)(v21 + 4 * v19 + 32) = v17;
    if (!--v5) {
      return v6;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_26276CF64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (!v3) {
    return v4;
  }
  uint64_t v19 = MEMORY[0x263F8EE78];
  sub_26273AC08(0, v3, 0);
  uint64_t v4 = v19;
  uint64_t v8 = (unint64_t *)(a1 + 32);
  uint64_t result = swift_beginAccess();
  while (1)
  {
    unint64_t v11 = *v8++;
    unint64_t v10 = v11;
    if ((v11 & 0x8000000000000000) != 0) {
      break;
    }
    uint64_t v12 = *(void *)(a2 + 24);
    if (v10 >= *(void *)(v12 + 16)) {
      goto LABEL_10;
    }
    unint64_t v13 = *(float (**)(uint64_t, uint64_t))(a2 + 48);
    uint64_t v14 = *(void *)(v12 + 8 * v10 + 32);
    swift_retain();
    swift_bridgeObjectRetain();
    float v15 = v13(a3, v14);
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    unint64_t v17 = *(void *)(v19 + 16);
    unint64_t v16 = *(void *)(v19 + 24);
    if (v17 >= v16 >> 1) {
      uint64_t result = sub_26273AC08(v16 > 1, v17 + 1, 1);
    }
    *(void *)(v19 + 16) = v17 + 1;
    uint64_t v18 = v19 + 16 * v17;
    *(void *)(v18 + 32) = v10;
    *(float *)(v18 + 40) = v15;
    if (!--v3) {
      return v4;
    }
  }
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_26276D0BC(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t a5, uint64_t a6)
{
  unint64_t v7 = (unint64_t *)__dst;
  uint64_t v9 = a2;
  unint64_t v10 = __src;
  int64_t v11 = a2 - __src;
  int64_t v12 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v12 = a2 - __src;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v14 = a3 - (void)a2;
  uint64_t v15 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v15 = a3 - (void)a2;
  }
  uint64_t v16 = v15 >> 3;
  uint64_t v40 = __src;
  uint64_t v39 = (unint64_t *)__dst;
  if (v13 >= v15 >> 3)
  {
    if (v14 >= -7)
    {
      if (__dst != a2 || &a2[8 * v16] <= __dst)
      {
        uint64_t v26 = a5;
        memmove(__dst, a2, 8 * v16);
        a5 = v26;
      }
      uint64_t v27 = &v7[v16];
      uint64_t v38 = v27;
      uint64_t v40 = v9;
      if (v10 < v9 && v14 >= 8)
      {
        if (a6 < 0)
        {
LABEL_63:
          __break(1u);
          goto LABEL_64;
        }
        uint64_t v28 = a5 + 32;
        unint64_t v29 = *(void *)(a5 + 16);
        uint64_t v30 = (unint64_t *)(a3 - 8);
        while (1)
        {
          unint64_t v31 = *(v27 - 1);
          if (v31 >= v29) {
            break;
          }
          uint64_t v32 = *(void *)(v28 + 8 * v31);
          if (*(void *)(v32 + 16) <= a6) {
            goto LABEL_55;
          }
          unint64_t v33 = v9 - 8;
          unint64_t v34 = *((void *)v9 - 1);
          if (v34 >= v29) {
            goto LABEL_56;
          }
          uint64_t v35 = *(void *)(v28 + 8 * v34);
          if (*(void *)(v35 + 16) <= a6) {
            goto LABEL_57;
          }
          unint64_t v36 = (char *)(v30 + 1);
          if (*(float *)(v35 + 4 * a6 + 32) >= *(float *)(v32 + 4 * a6 + 32))
          {
            uint64_t v38 = v27 - 1;
            if (v36 < (char *)v27 || v30 >= v27 || v36 != (char *)v27) {
              *uint64_t v30 = *(v27 - 1);
            }
            --v27;
            if (v9 <= v10) {
              goto LABEL_53;
            }
          }
          else
          {
            if (v36 != v9 || v30 >= (unint64_t *)v9) {
              *uint64_t v30 = v34;
            }
            uint64_t v40 = v9 - 8;
            v9 -= 8;
            if (v33 <= v10) {
              goto LABEL_53;
            }
          }
          --v30;
          if (v27 <= v7) {
            goto LABEL_53;
          }
        }
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
        goto LABEL_58;
      }
LABEL_53:
      sub_26276BC58((void **)&v40, (const void **)&v39, &v38);
      return 1;
    }
  }
  else if (v11 >= -7)
  {
    if (__dst != __src || &__src[8 * v13] <= __dst)
    {
      uint64_t v17 = a5;
      memmove(__dst, __src, 8 * v13);
      a5 = v17;
    }
    uint64_t v18 = &v7[v13];
    uint64_t v38 = v18;
    if ((unint64_t)v9 < a3 && v11 >= 8)
    {
      if (a6 < 0)
      {
LABEL_62:
        __break(1u);
        goto LABEL_63;
      }
      uint64_t v19 = a5 + 32;
      unint64_t v20 = *(void *)(a5 + 16);
      while (1)
      {
        uint64_t v21 = *(void *)v9;
        if (*(void *)v9 >= v20) {
          break;
        }
        uint64_t v22 = *(void *)(v19 + 8 * v21);
        if (*(void *)(v22 + 16) <= a6) {
          goto LABEL_59;
        }
        unint64_t v23 = *v7;
        if (*v7 >= v20) {
          goto LABEL_60;
        }
        uint64_t v24 = *(void *)(v19 + 8 * v23);
        if (*(void *)(v24 + 16) <= a6) {
          goto LABEL_61;
        }
        if (*(float *)(v24 + 4 * a6 + 32) >= *(float *)(v22 + 4 * a6 + 32))
        {
          if (v10 != (char *)v7) {
            *(void *)unint64_t v10 = v23;
          }
          uint64_t v39 = ++v7;
          uint64_t v25 = v9;
        }
        else
        {
          uint64_t v25 = v9 + 8;
          if (v10 < v9 || v10 >= v25 || v10 != v9) {
            *(void *)unint64_t v10 = v21;
          }
        }
        v10 += 8;
        if (v7 < v18)
        {
          uint64_t v9 = v25;
          if ((unint64_t)v25 < a3) {
            continue;
          }
        }
        uint64_t v40 = v10;
        goto LABEL_53;
      }
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
    goto LABEL_53;
  }
LABEL_64:
  swift_bridgeObjectRelease();
  uint64_t result = sub_26276FC00();
  __break(1u);
  return result;
}

uint64_t sub_26276D408(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  if (a3 != a2)
  {
    if ((a6 & 0x8000000000000000) == 0)
    {
      uint64_t v6 = *a4;
      uint64_t v7 = a5 + 32;
      unint64_t v8 = *(void *)(a5 + 16);
      uint64_t v9 = *a4 + 8 * a3 - 8;
LABEL_6:
      unint64_t v10 = *(void *)(v6 + 8 * a3);
      uint64_t v11 = result;
      int64_t v12 = (unint64_t *)v9;
      while (v10 < v8)
      {
        uint64_t v13 = *(void *)(v7 + 8 * v10);
        if (*(void *)(v13 + 16) <= a6) {
          goto LABEL_16;
        }
        unint64_t v14 = *v12;
        if (*v12 >= v8) {
          goto LABEL_17;
        }
        uint64_t v15 = *(void *)(v7 + 8 * v14);
        if (*(void *)(v15 + 16) <= a6) {
          goto LABEL_18;
        }
        if (*(float *)(v15 + 4 * a6 + 32) < *(float *)(v13 + 4 * a6 + 32))
        {
          if (!v6) {
            goto LABEL_20;
          }
          *int64_t v12 = v10;
          v12[1] = v14;
          --v12;
          if (a3 != ++v11) {
            continue;
          }
        }
        ++a3;
        v9 += 8;
        if (a3 == a2) {
          return result;
        }
        goto LABEL_6;
      }
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
    }
    __break(1u);
LABEL_20:
    __break(1u);
  }
  return result;
}

uint64_t sub_26276D4C8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = a1[1];
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_26276FD50();
  if (v8 >= v7)
  {
    if ((v7 & 0x8000000000000000) == 0)
    {
      if (!v7) {
        return swift_bridgeObjectRelease_n();
      }
      swift_bridgeObjectRetain();
      sub_26276D408(0, v7, 1, a1, a2, a3);
      if (!v3) {
        return swift_bridgeObjectRelease_n();
      }
LABEL_126:
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
    goto LABEL_162;
  }
  if (v7 >= 0) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = v7 + 1;
  }
  if (v7 < -1) {
    goto LABEL_171;
  }
  uint64_t v10 = v8;
  uint64_t v115 = a2;
  uint64_t v114 = a3;
  uint64_t v117 = v3;
  uint64_t v105 = a1;
  if (v7 < 2)
  {
    uint64_t v13 = (char *)MEMORY[0x263F8EE78];
    uint64_t v113 = (char *)(MEMORY[0x263F8EE78] + 32);
    uint64_t v106 = MEMORY[0x263F8EE78];
    if (v7 != 1)
    {
      unint64_t v42 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_113:
      if (v42 < 2)
      {
LABEL_124:
        swift_bridgeObjectRelease();
        *(void *)(v106 + 16) = 0;
        swift_bridgeObjectRelease_n();
        return swift_bridgeObjectRelease();
      }
      uint64_t v97 = *v105;
      while (1)
      {
        unint64_t v98 = v42 - 2;
        if (v42 < 2) {
          break;
        }
        if (!v97) {
          goto LABEL_170;
        }
        uint64_t v99 = *(void *)&v13[16 * v98 + 32];
        uint64_t v100 = *(void *)&v13[16 * v42 + 24];
        char v101 = (char *)(v97 + 8 * *(void *)&v13[16 * v42 + 16]);
        swift_bridgeObjectRetain();
        sub_26276D0BC((char *)(v97 + 8 * v99), v101, v97 + 8 * v100, v113, v115, v114);
        if (v117) {
          goto LABEL_125;
        }
        swift_bridgeObjectRelease();
        if (v100 < v99) {
          goto LABEL_151;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v13 = sub_26276BD14((uint64_t)v13);
        }
        if (v98 >= *((void *)v13 + 2)) {
          goto LABEL_152;
        }
        uint64_t v102 = &v13[16 * v98 + 32];
        *(void *)uint64_t v102 = v99;
        *((void *)v102 + 1) = v100;
        unint64_t v103 = *((void *)v13 + 2);
        if (v42 > v103) {
          goto LABEL_153;
        }
        memmove(&v13[16 * v42 + 16], &v13[16 * v42 + 32], 16 * (v103 - v42));
        *((void *)v13 + 2) = v103 - 1;
        unint64_t v42 = v103 - 1;
        if (v103 <= 2) {
          goto LABEL_124;
        }
      }
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
LABEL_162:
      __break(1u);
LABEL_163:
      __break(1u);
LABEL_164:
      __break(1u);
      goto LABEL_165;
    }
  }
  else
  {
    uint64_t v11 = v9 >> 1;
    uint64_t v12 = sub_26276F830();
    *(void *)(v12 + 16) = v11;
    uint64_t v106 = v12;
    uint64_t v113 = (char *)(v12 + 32);
  }
  uint64_t v14 = 0;
  uint64_t v15 = *a1;
  uint64_t v16 = a2 + 32;
  uint64_t v104 = *a1 - 8;
  uint64_t v13 = (char *)MEMORY[0x263F8EE78];
  uint64_t v108 = v10;
  uint64_t v109 = v7;
  uint64_t v112 = *a1;
  uint64_t v107 = a2 + 32;
  while (1)
  {
    uint64_t v17 = v14 + 1;
    if (v14 + 1 >= v7) {
      goto LABEL_39;
    }
    unint64_t v18 = *(void *)(v15 + 8 * v17);
    if ((v18 & 0x8000000000000000) != 0) {
      goto LABEL_155;
    }
    unint64_t v19 = *(void *)(a2 + 16);
    if (v18 >= v19) {
      goto LABEL_156;
    }
    if (a3 < 0) {
      goto LABEL_157;
    }
    uint64_t v20 = *(void *)(v16 + 8 * v18);
    if (*(void *)(v20 + 16) <= (unint64_t)a3) {
      goto LABEL_158;
    }
    unint64_t v21 = *(void *)(v15 + 8 * v14);
    if (v21 >= v19) {
      goto LABEL_159;
    }
    uint64_t v22 = *(void *)(v16 + 8 * v21);
    if (*(void *)(v22 + 16) <= (unint64_t)a3) {
      goto LABEL_160;
    }
    float v23 = *(float *)(v20 + 4 * a3 + 32);
    float v24 = *(float *)(v22 + 4 * a3 + 32);
    uint64_t v17 = v14 + 2;
    if (v14 + 2 >= v7) {
      goto LABEL_29;
    }
    do
    {
      unint64_t v25 = *(void *)(v15 + 8 * v17);
      if (v25 >= v19) {
        goto LABEL_135;
      }
      uint64_t v26 = *(void *)(v16 + 8 * v25);
      if (*(void *)(v26 + 16) <= a3)
      {
LABEL_136:
        __break(1u);
LABEL_137:
        __break(1u);
LABEL_138:
        __break(1u);
LABEL_139:
        __break(1u);
LABEL_140:
        __break(1u);
LABEL_141:
        __break(1u);
LABEL_142:
        __break(1u);
LABEL_143:
        __break(1u);
LABEL_144:
        __break(1u);
LABEL_145:
        __break(1u);
LABEL_146:
        __break(1u);
LABEL_147:
        __break(1u);
LABEL_148:
        __break(1u);
LABEL_149:
        __break(1u);
        goto LABEL_150;
      }
      if (v18 >= v19) {
        goto LABEL_137;
      }
      uint64_t v27 = *(void *)(v16 + 8 * v18);
      if (*(void *)(v27 + 16) <= a3) {
        goto LABEL_138;
      }
      if (v24 < v23 == *(float *)(v27 + 4 * a3 + 32) >= *(float *)(v26 + 4 * a3 + 32)) {
        goto LABEL_29;
      }
      ++v17;
      unint64_t v18 = v25;
    }
    while (v7 != v17);
    uint64_t v17 = v7;
LABEL_29:
    if (v24 < v23) {
      break;
    }
LABEL_39:
    if (v17 < v7)
    {
      if (__OFSUB__(v17, v14)) {
        goto LABEL_161;
      }
      if (v17 - v14 < v10)
      {
        uint64_t v31 = v14 + v10;
        if (__OFADD__(v14, v10)) {
          goto LABEL_163;
        }
        if (v31 >= v7) {
          uint64_t v31 = v7;
        }
        if (v31 < v14) {
          goto LABEL_164;
        }
        if (v17 != v31)
        {
          if (a3 < 0) {
            goto LABEL_166;
          }
          unint64_t v32 = *(void *)(a2 + 16);
          unint64_t v33 = (unint64_t *)(v104 + 8 * v17);
          do
          {
            unint64_t v34 = *(void *)(v15 + 8 * v17);
            uint64_t v35 = v14;
            unint64_t v36 = v33;
            do
            {
              if (v34 >= v32)
              {
                __break(1u);
LABEL_128:
                __break(1u);
LABEL_129:
                __break(1u);
LABEL_130:
                __break(1u);
LABEL_131:
                __break(1u);
LABEL_132:
                __break(1u);
LABEL_133:
                __break(1u);
LABEL_134:
                __break(1u);
LABEL_135:
                __break(1u);
                goto LABEL_136;
              }
              uint64_t v37 = *(void *)(v16 + 8 * v34);
              if (*(void *)(v37 + 16) <= a3) {
                goto LABEL_128;
              }
              unint64_t v38 = *v36;
              if (*v36 >= v32) {
                goto LABEL_129;
              }
              uint64_t v39 = *(void *)(v16 + 8 * v38);
              if (*(void *)(v39 + 16) <= a3) {
                goto LABEL_130;
              }
              if (*(float *)(v39 + 4 * a3 + 32) >= *(float *)(v37 + 4 * a3 + 32)) {
                break;
              }
              if (!v15) {
                goto LABEL_167;
              }
              *unint64_t v36 = v34;
              v36[1] = v38;
              --v36;
              ++v35;
            }
            while (v17 != v35);
            ++v17;
            ++v33;
          }
          while (v17 != v31);
          uint64_t v17 = v31;
        }
      }
    }
    if (v17 < v14) {
      goto LABEL_154;
    }
    uint64_t v110 = v17;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_26276B9E4(0, *((void *)v13 + 2) + 1, 1, v13);
    }
    unint64_t v41 = *((void *)v13 + 2);
    unint64_t v40 = *((void *)v13 + 3);
    unint64_t v42 = v41 + 1;
    uint64_t v15 = v112;
    if (v41 >= v40 >> 1)
    {
      uint64_t v13 = sub_26276B9E4((char *)(v40 > 1), v41 + 1, 1, v13);
      uint64_t v15 = v112;
    }
    *((void *)v13 + 2) = v42;
    uint64_t v43 = v13 + 32;
    uint64_t v44 = &v13[16 * v41 + 32];
    *(void *)uint64_t v44 = v14;
    *((void *)v44 + 1) = v110;
    if (v41)
    {
      BOOL v116 = v13;
      uint64_t v111 = v13 + 32;
      while (1)
      {
        unint64_t v45 = v42 - 1;
        if (v42 >= 4)
        {
          unint64_t v50 = &v43[16 * v42];
          uint64_t v51 = *((void *)v50 - 8);
          uint64_t v52 = *((void *)v50 - 7);
          BOOL v56 = __OFSUB__(v52, v51);
          uint64_t v53 = v52 - v51;
          if (v56) {
            goto LABEL_139;
          }
          uint64_t v55 = *((void *)v50 - 6);
          uint64_t v54 = *((void *)v50 - 5);
          BOOL v56 = __OFSUB__(v54, v55);
          uint64_t v48 = v54 - v55;
          char v49 = v56;
          if (v56) {
            goto LABEL_140;
          }
          unint64_t v57 = v42 - 2;
          BOOL v58 = &v43[16 * v42 - 32];
          uint64_t v60 = *(void *)v58;
          uint64_t v59 = *((void *)v58 + 1);
          BOOL v56 = __OFSUB__(v59, v60);
          uint64_t v61 = v59 - v60;
          if (v56) {
            goto LABEL_142;
          }
          BOOL v56 = __OFADD__(v48, v61);
          uint64_t v62 = v48 + v61;
          if (v56) {
            goto LABEL_145;
          }
          if (v62 >= v53)
          {
            uint64_t v80 = &v43[16 * v45];
            uint64_t v82 = *(void *)v80;
            uint64_t v81 = *((void *)v80 + 1);
            BOOL v56 = __OFSUB__(v81, v82);
            uint64_t v83 = v81 - v82;
            if (v56) {
              goto LABEL_149;
            }
            BOOL v73 = v48 < v83;
            goto LABEL_98;
          }
        }
        else
        {
          if (v42 != 3)
          {
            uint64_t v74 = *((void *)v13 + 4);
            uint64_t v75 = *((void *)v13 + 5);
            BOOL v56 = __OFSUB__(v75, v74);
            uint64_t v67 = v75 - v74;
            char v68 = v56;
            goto LABEL_92;
          }
          uint64_t v47 = *((void *)v13 + 4);
          uint64_t v46 = *((void *)v13 + 5);
          BOOL v56 = __OFSUB__(v46, v47);
          uint64_t v48 = v46 - v47;
          char v49 = v56;
        }
        if (v49) {
          goto LABEL_141;
        }
        unint64_t v57 = v42 - 2;
        uint64_t v63 = &v43[16 * v42 - 32];
        uint64_t v65 = *(void *)v63;
        uint64_t v64 = *((void *)v63 + 1);
        BOOL v66 = __OFSUB__(v64, v65);
        uint64_t v67 = v64 - v65;
        char v68 = v66;
        if (v66) {
          goto LABEL_144;
        }
        uint64_t v69 = &v43[16 * v45];
        uint64_t v71 = *(void *)v69;
        uint64_t v70 = *((void *)v69 + 1);
        BOOL v56 = __OFSUB__(v70, v71);
        uint64_t v72 = v70 - v71;
        if (v56) {
          goto LABEL_147;
        }
        if (__OFADD__(v67, v72)) {
          goto LABEL_148;
        }
        if (v67 + v72 >= v48)
        {
          BOOL v73 = v48 < v72;
LABEL_98:
          if (v73) {
            unint64_t v45 = v57;
          }
          goto LABEL_100;
        }
LABEL_92:
        if (v68) {
          goto LABEL_143;
        }
        unint64_t v76 = &v43[16 * v45];
        uint64_t v78 = *(void *)v76;
        uint64_t v77 = *((void *)v76 + 1);
        BOOL v56 = __OFSUB__(v77, v78);
        uint64_t v79 = v77 - v78;
        if (v56) {
          goto LABEL_146;
        }
        if (v79 < v67) {
          goto LABEL_109;
        }
LABEL_100:
        unint64_t v84 = v45 - 1;
        if (v45 - 1 >= v42) {
          goto LABEL_131;
        }
        if (!v15) {
          goto LABEL_168;
        }
        uint64_t v85 = &v43[16 * v84];
        uint64_t v86 = v43;
        uint64_t v87 = *(void *)v85;
        unint64_t v88 = v45;
        uint64_t v89 = &v86[16 * v45];
        uint64_t v90 = *((void *)v89 + 1);
        uint64_t v91 = (char *)(v15 + 8 * *(void *)v85);
        uint64_t v92 = (char *)(v15 + 8 * *(void *)v89);
        unint64_t v93 = v15 + 8 * v90;
        a2 = v115;
        swift_bridgeObjectRetain();
        unint64_t v94 = v93;
        a3 = v114;
        sub_26276D0BC(v91, v92, v94, v113, v115, v114);
        if (v117)
        {
LABEL_125:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(void *)(v106 + 16) = 0;
          goto LABEL_126;
        }
        swift_bridgeObjectRelease();
        if (v90 < v87) {
          goto LABEL_132;
        }
        if (v88 > *((void *)v116 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v85 = v87;
        uint64_t v43 = v111;
        *(void *)&v111[16 * v84 + 8] = v90;
        unint64_t v95 = *((void *)v116 + 2);
        if (v88 >= v95) {
          goto LABEL_134;
        }
        uint64_t v13 = v116;
        uint64_t v117 = 0;
        unint64_t v42 = v95 - 1;
        memmove(v89, v89 + 16, 16 * (v95 - 1 - v88));
        *((void *)v116 + 2) = v95 - 1;
        uint64_t v15 = v112;
        if (v95 <= 2) {
          goto LABEL_109;
        }
      }
    }
    unint64_t v42 = 1;
LABEL_109:
    uint64_t v7 = v109;
    uint64_t v14 = v110;
    uint64_t v16 = v107;
    uint64_t v10 = v108;
    if (v110 >= v109) {
      goto LABEL_113;
    }
  }
  if (v17 >= v14)
  {
    if (v14 < v17)
    {
      uint64_t v28 = v17 - 1;
      uint64_t v29 = v14;
      while (1)
      {
        if (v29 != v28)
        {
          if (!v15) {
            goto LABEL_169;
          }
          uint64_t v30 = *(void *)(v15 + 8 * v29);
          *(void *)(v15 + 8 * v29) = *(void *)(v15 + 8 * v28);
          *(void *)(v15 + 8 * v28) = v30;
        }
        BOOL v73 = ++v29 < v28--;
        if (!v73) {
          goto LABEL_39;
        }
      }
    }
    goto LABEL_39;
  }
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_168:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_169:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_170:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_171:
  swift_bridgeObjectRelease_n();
  uint64_t result = sub_26276FBA0();
  __break(1u);
  return result;
}

uint64_t sub_26276DD40(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  swift_bridgeObjectRetain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = sub_26276CE10(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  swift_bridgeObjectRetain();
  sub_26276D4C8(v9, a2, a3);
  swift_bridgeObjectRelease();
  *a1 = v6;
  return swift_bridgeObjectRelease_n();
}

void *sub_26276DDF4(uint64_t a1, float (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v110 = *MEMORY[0x263EF8340];
  int64_t v4 = *(void *)(a1 + 16);
  if (v4) {
    BOOL v5 = a4 < 1;
  }
  else {
    BOOL v5 = 1;
  }
  if (v5) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v6 = a4;
  uint64_t v104 = a1 + 32;
  uint64_t v95 = *(void *)(a1 + 32);
  swift_bridgeObjectRetain();
  uint64_t v7 = *(void **)sub_26276F4F0();
  uint64_t v109 = v7;
  unint64_t v105 = v4;
  uint64_t v8 = sub_26273D9C0(0, v4);
  uint64_t v9 = v7[3];
  uint64_t v10 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
LABEL_124:
    __break(1u);
    goto LABEL_125;
  }
  uint64_t v11 = (uint64_t)v8;
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (v7[2] < v10 || (isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_262729F68(v10);
    uint64_t v7 = v109;
  }
  sub_26276BD40(v7 + 2, (uint64_t)(v7 + 5), v11, 0, 257);
  swift_release();
  if (!v7[3])
  {
    swift_bridgeObjectRelease();
    swift_release();
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  uint64_t v94 = v6;
  do
  {
    uint64_t v14 = v109;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_262729908();
      uint64_t v14 = v109;
    }
    uint64_t v16 = v14[4];
    uint64_t v17 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_111;
    }
    unint64_t v18 = &v14[3 * v16];
    vDSP_Length v19 = v18[5];
    unint64_t v20 = v18[6];
    int v21 = *((unsigned __int8 *)v18 + 56);
    int v22 = *((unsigned __int8 *)v18 + 57);
    uint64_t v23 = v14[3];
    if (v17 >= v14[2]) {
      uint64_t v17 = 0;
    }
    v14[4] = v17;
    if (__OFSUB__(v23, 1)) {
      goto LABEL_112;
    }
    unint64_t v103 = v13;
    v14[3] = v23 - 1;
    uint64_t v24 = *(void *)(v19 + 16);
    if (!v24)
    {
      swift_bridgeObjectRelease();
      uint64_t v13 = v103;
      continue;
    }
    vDSP_Length v106 = v19;
    unint64_t v101 = v20;
    int v102 = v21;
    if (v24 > v6)
    {
      int v96 = v22;
      unint64_t v25 = *(void *)(v95 + 16);
      v15.i32[0] = 2139095040;
      uint64_t v26 = sub_262735500(v25, v15);
      v27.i32[0] = -8388608;
      uint64_t v28 = sub_262735500(v25, v27);
      swift_bridgeObjectRetain();
      uint64_t v29 = 0;
      while (1)
      {
        unint64_t v31 = *(void *)(v19 + 8 * v29 + 32);
        if (v31 >= v105) {
          break;
        }
        uint64_t v32 = *(void *)(v104 + 8 * v31);
        vDSP_Length v33 = *(void *)(v26 + 16);
        if (v33 != *(void *)(v32 + 16)) {
          goto LABEL_109;
        }
        swift_bridgeObjectRetain();
        if (v33)
        {
          uint64_t v34 = sub_26276F830();
          *(void *)(v34 + 16) = v33;
        }
        else
        {
          uint64_t v34 = MEMORY[0x263F8EE78];
        }
        vDSP_vmin((const float *)(v26 + 32), 1, (const float *)(v32 + 32), 1, (float *)(v34 + 32), 1, v33);
        *(void *)(v34 + 16) = v33;
        swift_bridgeObjectRelease();
        if (*(void *)(v28 + 16) != v33) {
          goto LABEL_110;
        }
        if (v33)
        {
          vDSP_Length v30 = sub_26276F830();
          *(void *)(v30 + 16) = v33;
        }
        else
        {
          vDSP_Length v30 = MEMORY[0x263F8EE78];
        }
        ++v29;
        vDSP_vmax((const float *)(v28 + 32), 1, (const float *)(v32 + 32), 1, (float *)(v30 + 32), 1, v33);
        *(void *)(v30 + 16) = v33;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v28 = v30;
        uint64_t v26 = v34;
        vDSP_Length v19 = v106;
        if (v24 == v29)
        {
          swift_bridgeObjectRelease();
          uint64_t __C = v34;
          vDSP_Length __I = v30;
          uint64_t v39 = MEMORY[0x270FA5388](*(void *)(v30 + 16));
          vDSP_Length v40 = sub_26276CB9C(v39, (uint64_t (*)(void *, uint64_t *))sub_26276F04C);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          vDSP_Length __I = v40;
          uint64_t v41 = MEMORY[0x270FA5388](*(void *)(v40 + 16));
          uint64_t v42 = sub_26276CB9C(v41, (uint64_t (*)(void *, uint64_t *))sub_26276F09C);
          swift_bridgeObjectRelease();
          vDSP_Length v43 = *(void *)(v42 + 16);
          LODWORD(__C) = 2143289344;
          vDSP_Length __I = 0;
          vDSP_maxvi((const float *)(v42 + 32), 1, (float *)&__C, &__I, v43);
          swift_bridgeObjectRelease();
          vDSP_Length v44 = __I;
          if ((__I & 0x8000000000000000) == 0)
          {
            vDSP_Length __I = v106;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            sub_26276DD40((uint64_t *)&__I, a1, v44);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            vDSP_Length v45 = __I;
            unint64_t v46 = *(void *)(__I + 16);
            unint64_t v47 = v46 >> 1;
            uint64_t v13 = v103;
            if (v46 >> 1 < v46)
            {
              unint64_t v48 = *(void *)(__I + 32 + 8 * v47);
              if (v48 < v105)
              {
                uint64_t v93 = __I + 32;
                uint64_t v49 = *(void *)(v104 + 8 * v48);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                vDSP_Length v50 = sub_26276CE40(v106, a2, a3, v49, a1);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                vDSP_Length __I = v50;
                swift_bridgeObjectRetain();
                sub_262726EFC((uint64_t *)&__I);
                swift_bridgeObjectRelease();
                uint64_t v51 = *(void *)(__I + 16);
                if (v51) {
                  int v52 = *(_DWORD *)(__I + 4 * v51 + 28);
                }
                else {
                  int v52 = 2139095040;
                }
                swift_release();
                if (*(void *)(v45 + 16) >= v47)
                {
                  sub_26276FDB0();
                  swift_retain_n();
                  uint64_t v63 = swift_dynamicCastClass();
                  if (!v63)
                  {
                    swift_release();
                    uint64_t v63 = MEMORY[0x263F8EE78];
                  }
                  uint64_t v64 = *(void *)(v63 + 16);
                  swift_release();
                  if (v64 == v47)
                  {
                    uint64_t v65 = swift_dynamicCastClass();
                    if (!v65)
                    {
                      swift_release();
                      uint64_t v65 = MEMORY[0x263F8EE78];
                    }
                  }
                  else
                  {
                    swift_release();
                    uint64_t v65 = sub_26273DA88(v45, v93, 0, v46 | 1);
                  }
                  swift_release();
                  unint64_t v66 = *(void *)(v45 + 16);
                  if (v66 > v47 && v66 >= v46)
                  {
                    uint64_t v97 = v65;
                    swift_unknownObjectRetain_n();
                    uint64_t v67 = swift_dynamicCastClass();
                    if (!v67)
                    {
                      swift_release();
                      uint64_t v67 = MEMORY[0x263F8EE78];
                    }
                    uint64_t v68 = *(void *)(v67 + 16);
                    swift_release();
                    if (v68 == v46 - (v47 + 1))
                    {
                      uint64_t v69 = swift_dynamicCastClass();
                      if (!v69)
                      {
                        swift_release();
                        uint64_t v69 = MEMORY[0x263F8EE78];
                      }
                    }
                    else
                    {
                      swift_release();
                      uint64_t v69 = sub_26273DA88(v45, v93, v47 + 1, (2 * v46) | 1);
                    }
                    swift_release();
                    uint64_t v70 = v103[2];
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                      uint64_t v13 = sub_262727B9C(0, v70 + 1, 1, v103);
                    }
                    unint64_t v72 = v13[2];
                    unint64_t v71 = v13[3];
                    if (v72 >= v71 >> 1) {
                      uint64_t v13 = sub_262727B9C((void *)(v71 > 1), v72 + 1, 1, v13);
                    }
                    uint64_t v13[2] = v72 + 1;
                    BOOL v73 = v13 + 4;
                    uint64_t v74 = (uint64_t)&v13[7 * v72 + 4];
                    *(void *)uint64_t v74 = v48;
                    *(_DWORD *)(v74 + 8) = v52;
                    *(void *)(v74 + 16) = 0;
                    *(unsigned char *)(v74 + 24) = 1;
                    *(void *)(v74 + 32) = 0;
                    *(unsigned char *)(v74 + 40) = 1;
                    *(void *)(v74 + 48) = 0;
                    swift_bridgeObjectRelease();
                    uint64_t v6 = v94;
                    if (v102) {
                      goto LABEL_78;
                    }
                    if (v96)
                    {
                      if ((v101 & 0x8000000000000000) == 0)
                      {
                        if (v101 < v13[2])
                        {
                          uint64_t v75 = &v73[7 * v101];
                          v75[2] = v70;
                          unint64_t v76 = v75 + 3;
                          goto LABEL_77;
                        }
LABEL_128:
                        __break(1u);
                      }
LABEL_126:
                      __break(1u);
LABEL_127:
                      __break(1u);
                      goto LABEL_128;
                    }
                    if ((v101 & 0x8000000000000000) == 0)
                    {
                      if (v101 >= v13[2]) {
                        goto LABEL_127;
                      }
                      uint64_t v77 = &v73[7 * v101];
                      v77[4] = v70;
                      unint64_t v76 = v77 + 5;
LABEL_77:
                      unsigned char *v76 = 0;
LABEL_78:
                      uint64_t v78 = v109;
                      uint64_t v79 = v109[3];
                      uint64_t v80 = v79 + 1;
                      if (!__OFADD__(v79, 1))
                      {
                        char v81 = swift_isUniquelyReferenced_nonNull_native();
                        if (v78[2] < v80 || (v81 & 1) == 0)
                        {
                          sub_262729F68(v80);
                          uint64_t v78 = v109;
                        }
                        sub_26276BD40(v78 + 2, (uint64_t)(v78 + 5), v97, v70, 256);
                        swift_release();
                        uint64_t v82 = v78[3];
                        uint64_t v83 = v82 + 1;
                        if (!__OFADD__(v82, 1))
                        {
                          char v84 = swift_isUniquelyReferenced_nonNull_native();
                          if (v78[2] < v83 || (v84 & 1) == 0) {
                            sub_262729F68(v83);
                          }
                          sub_26276BD40(v109 + 2, (uint64_t)(v109 + 5), v69, v70, 0);
                          swift_release();
                          goto LABEL_12;
                        }
LABEL_119:
                        __break(1u);
LABEL_120:
                        __break(1u);
LABEL_121:
                        __break(1u);
LABEL_122:
                        __break(1u);
                        goto LABEL_123;
                      }
LABEL_118:
                      __break(1u);
                      goto LABEL_119;
                    }
LABEL_125:
                    __break(1u);
                    goto LABEL_126;
                  }
LABEL_117:
                  __break(1u);
                  goto LABEL_118;
                }
LABEL_116:
                __break(1u);
                goto LABEL_117;
              }
LABEL_115:
              __break(1u);
              goto LABEL_116;
            }
LABEL_114:
            __break(1u);
            goto LABEL_115;
          }
LABEL_113:
          __break(1u);
          goto LABEL_114;
        }
      }
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
      goto LABEL_113;
    }
    uint64_t v35 = v19 + 32;
    unint64_t v36 = *(void *)(v19 + 32);
    if (v24 == 1)
    {
      uint64_t v37 = 0;
      float v38 = 0.0;
      uint64_t v13 = v103;
    }
    else
    {
      sub_26276FDB0();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      uint64_t v53 = swift_dynamicCastClass();
      if (!v53)
      {
        swift_bridgeObjectRelease();
        uint64_t v53 = MEMORY[0x263F8EE78];
      }
      uint64_t v54 = v6;
      uint64_t v55 = *(void *)(v53 + 16);
      swift_release();
      if (v55 == v24 - 1)
      {
        uint64_t v56 = v106;
        uint64_t v37 = swift_dynamicCastClass();
        uint64_t v13 = v103;
        if (!v37)
        {
          swift_bridgeObjectRelease();
          uint64_t v37 = MEMORY[0x263F8EE78];
        }
      }
      else
      {
        uint64_t v56 = v106;
        swift_bridgeObjectRelease();
        uint64_t v37 = sub_26273DA88(v106, v35, 1, (2 * v24) | 1);
        uint64_t v13 = v103;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v57 = sub_26274FDD8(v56, a2, a3, a1, v36);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v58 = *(void *)(v57 + 16);
      if (v58)
      {
        float v38 = *(float *)(v57 + 32);
        uint64_t v59 = v58 - 1;
        uint64_t v6 = v54;
        if (v59)
        {
          uint64_t v60 = (float *)(v57 + 36);
          do
          {
            float v61 = *v60++;
            float v62 = v61;
            if (v38 < v61) {
              float v38 = v62;
            }
            --v59;
          }
          while (v59);
        }
      }
      else
      {
        float v38 = 0.0;
        uint64_t v6 = v54;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v85 = v13[2];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_262727B9C(0, v85 + 1, 1, v13);
    }
    unint64_t v87 = v13[2];
    unint64_t v86 = v13[3];
    if (v87 >= v86 >> 1) {
      uint64_t v13 = sub_262727B9C((void *)(v86 > 1), v87 + 1, 1, v13);
    }
    uint64_t v13[2] = v87 + 1;
    unint64_t v88 = v13 + 4;
    uint64_t v89 = (uint64_t)&v13[7 * v87 + 4];
    *(void *)uint64_t v89 = v36;
    *(float *)(v89 + 8) = v38;
    *(void *)(v89 + 16) = 0;
    *(unsigned char *)(v89 + 24) = 1;
    *(void *)(v89 + 32) = 0;
    *(unsigned char *)(v89 + 40) = 1;
    *(void *)(v89 + 48) = v37;
    swift_bridgeObjectRelease();
    if (!v102)
    {
      if (!v22)
      {
        if ((v101 & 0x8000000000000000) != 0) {
          goto LABEL_120;
        }
        if (v101 < v13[2])
        {
          uint64_t v91 = &v88[7 * v101];
          v91[4] = v85;
          *((unsigned char *)v91 + 40) = 0;
          continue;
        }
        goto LABEL_122;
      }
      if ((v101 & 0x8000000000000000) != 0) {
        goto LABEL_121;
      }
      if (v101 < v13[2])
      {
        uint64_t v90 = &v88[7 * v101];
        v90[2] = v85;
        *((unsigned char *)v90 + 24) = 0;
        continue;
      }
LABEL_123:
      __break(1u);
      goto LABEL_124;
    }
LABEL_12:
    ;
  }
  while (v109[3]);
  swift_bridgeObjectRelease();
  swift_release();
  return v13;
}

unint64_t sub_26276E940()
{
  unint64_t result = qword_26A9581D0;
  if (!qword_26A9581D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9581D0);
  }
  return result;
}

unint64_t sub_26276E994()
{
  unint64_t result = qword_26A9581E8;
  if (!qword_26A9581E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9581E8);
  }
  return result;
}

uint64_t sub_26276E9E8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9581D8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_26276EA58()
{
  unint64_t result = qword_26A958200;
  if (!qword_26A958200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A958200);
  }
  return result;
}

_UNKNOWN **sub_26276EAAC()
{
  return &protocol witness table for BallTree.Node;
}

uint64_t sub_26276EAB8(uint64_t a1)
{
  uint64_t result = sub_26276EB90(&qword_26A958208);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for BallTree()
{
  return self;
}

uint64_t sub_26276EB28(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_26276EB90(&qword_26A958210);
  uint64_t result = sub_26276EB90(&qword_26A958218);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_26276EB90(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for BallTree();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for BallTree(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for BallTree);
}

uint64_t dispatch thunk of BallTree.__allocating_init(points:metric:maxNodePoints:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of BallTree.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

ValueMetadata *type metadata accessor for BallTree.Node()
{
  return &type metadata for BallTree.Node;
}

unsigned char *storeEnumTagSinglePayload for BallTree.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x26276ED00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BallTree.CodingKeys()
{
  return &type metadata for BallTree.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for BallTree.Node.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x26276EE04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BallTree.Node.CodingKeys()
{
  return &type metadata for BallTree.Node.CodingKeys;
}

unint64_t sub_26276EE40()
{
  unint64_t result = qword_26A958220;
  if (!qword_26A958220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A958220);
  }
  return result;
}

unint64_t sub_26276EE98()
{
  unint64_t result = qword_26A958228;
  if (!qword_26A958228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A958228);
  }
  return result;
}

unint64_t sub_26276EEF0()
{
  unint64_t result = qword_26A958230;
  if (!qword_26A958230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A958230);
  }
  return result;
}

unint64_t sub_26276EF48()
{
  unint64_t result = qword_26A958238;
  if (!qword_26A958238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A958238);
  }
  return result;
}

unint64_t sub_26276EFA0()
{
  unint64_t result = qword_26A958240;
  if (!qword_26A958240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A958240);
  }
  return result;
}

unint64_t sub_26276EFF8()
{
  unint64_t result = qword_26A958248;
  if (!qword_26A958248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A958248);
  }
  return result;
}

void sub_26276F04C(uint64_t a1, void *a2)
{
  unsigned int v4 = *(uint64_t **)(v2 + 24);
  uint64_t v5 = **(void **)(v2 + 16);
  sub_26276CD24(v5, *v4, a1);
  *a2 = *(void *)(v5 + 16);
}

void sub_26276F09C(uint64_t a1, vDSP_Length *a2)
{
  sub_26276CCB4(a1, a2, **(void **)(v2 + 16));
}

ValueMetadata *type metadata accessor for BallTree.BuildTask()
{
  return &type metadata for BallTree.BuildTask;
}

uint64_t sub_26276F0D0()
{
  return MEMORY[0x270F9C910]();
}

uint64_t sub_26276F0E0()
{
  return MEMORY[0x270F9C920]();
}

uint64_t sub_26276F0F0()
{
  return MEMORY[0x270F9C928]();
}

uint64_t sub_26276F100()
{
  return MEMORY[0x270F9CC40]();
}

uint64_t sub_26276F110()
{
  return MEMORY[0x270F9CC60]();
}

uint64_t sub_26276F120()
{
  return MEMORY[0x270F9CC68]();
}

uint64_t sub_26276F130()
{
  return MEMORY[0x270EEDD78]();
}

uint64_t sub_26276F140()
{
  return MEMORY[0x270EEDD88]();
}

uint64_t sub_26276F150()
{
  return MEMORY[0x270EEDD90]();
}

uint64_t sub_26276F160()
{
  return MEMORY[0x270EEDDA0]();
}

uint64_t sub_26276F170()
{
  return MEMORY[0x270EEDDD0]();
}

uint64_t sub_26276F180()
{
  return MEMORY[0x270EEDE10]();
}

uint64_t sub_26276F190()
{
  return MEMORY[0x270EEDE18]();
}

uint64_t sub_26276F1A0()
{
  return MEMORY[0x270EEE618]();
}

uint64_t sub_26276F1B0()
{
  return MEMORY[0x270EEE628]();
}

uint64_t sub_26276F1C0()
{
  return MEMORY[0x270EEE638]();
}

uint64_t sub_26276F1D0()
{
  return MEMORY[0x270EEE648]();
}

uint64_t sub_26276F1E0()
{
  return MEMORY[0x270EEE658]();
}

uint64_t sub_26276F1F0()
{
  return MEMORY[0x270EEE670]();
}

uint64_t sub_26276F200()
{
  return MEMORY[0x270EEE688]();
}

uint64_t sub_26276F210()
{
  return MEMORY[0x270EEEA60]();
}

uint64_t sub_26276F220()
{
  return MEMORY[0x270EEEE78]();
}

uint64_t sub_26276F240()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_26276F250()
{
  return MEMORY[0x270EEFC10]();
}

uint64_t sub_26276F260()
{
  return MEMORY[0x270EEFD28]();
}

uint64_t sub_26276F270()
{
  return MEMORY[0x270EEFF18]();
}

uint64_t sub_26276F280()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_26276F290()
{
  return MEMORY[0x270EEFFB0]();
}

uint64_t sub_26276F2A0()
{
  return MEMORY[0x270EF0070]();
}

uint64_t sub_26276F2B0()
{
  return MEMORY[0x270EF0090]();
}

uint64_t sub_26276F2C0()
{
  return MEMORY[0x270EF00B0]();
}

uint64_t sub_26276F2D0()
{
  return MEMORY[0x270EF0108]();
}

uint64_t sub_26276F2E0()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_26276F2F0()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_26276F300()
{
  return MEMORY[0x270F4DD88]();
}

uint64_t sub_26276F310()
{
  return MEMORY[0x270F4DD98]();
}

uint64_t sub_26276F320()
{
  return MEMORY[0x270F4DDA0]();
}

uint64_t sub_26276F330()
{
  return MEMORY[0x270F4DDB0]();
}

uint64_t sub_26276F340()
{
  return MEMORY[0x270F4DDB8]();
}

uint64_t sub_26276F350()
{
  return MEMORY[0x270F4DDC0]();
}

uint64_t sub_26276F360()
{
  return MEMORY[0x270F4DDF0]();
}

uint64_t sub_26276F370()
{
  return MEMORY[0x270F4DF88]();
}

uint64_t sub_26276F380()
{
  return MEMORY[0x270F4E148]();
}

uint64_t sub_26276F390()
{
  return MEMORY[0x270F4E150]();
}

uint64_t sub_26276F3A0()
{
  return MEMORY[0x270F4E168]();
}

uint64_t sub_26276F3B0()
{
  return MEMORY[0x270F4E170]();
}

uint64_t sub_26276F3C0()
{
  return MEMORY[0x270F4E1B8]();
}

uint64_t sub_26276F3D0()
{
  return MEMORY[0x270F4E200]();
}

uint64_t sub_26276F3E0()
{
  return MEMORY[0x270F4E228]();
}

uint64_t sub_26276F3F0()
{
  return MEMORY[0x270F4E230]();
}

uint64_t sub_26276F400()
{
  return MEMORY[0x270F4E240]();
}

uint64_t sub_26276F410()
{
  return MEMORY[0x270F4E250]();
}

uint64_t sub_26276F420()
{
  return MEMORY[0x270F4E258]();
}

uint64_t sub_26276F430()
{
  return MEMORY[0x270F4E298]();
}

uint64_t sub_26276F440()
{
  return MEMORY[0x270F4E2A0]();
}

uint64_t sub_26276F450()
{
  return MEMORY[0x270F4E2B0]();
}

uint64_t sub_26276F460()
{
  return MEMORY[0x270F4E2B8]();
}

uint64_t sub_26276F470()
{
  return MEMORY[0x270F4E2C8]();
}

uint64_t sub_26276F480()
{
  return MEMORY[0x270F4E2D8]();
}

uint64_t sub_26276F490()
{
  return MEMORY[0x270F4E2E0]();
}

uint64_t sub_26276F4A0()
{
  return MEMORY[0x270F4E2E8]();
}

uint64_t sub_26276F4B0()
{
  return MEMORY[0x270F4E2F8]();
}

uint64_t sub_26276F4C0()
{
  return MEMORY[0x270F4E310]();
}

uint64_t sub_26276F4D0()
{
  return MEMORY[0x270F4E318]();
}

uint64_t sub_26276F4E0()
{
  return MEMORY[0x270F4E320]();
}

uint64_t sub_26276F4F0()
{
  return MEMORY[0x270F18248]();
}

uint64_t sub_26276F500()
{
  return MEMORY[0x270F18290]();
}

uint64_t sub_26276F510()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_26276F520()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_26276F530()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_26276F540()
{
  return MEMORY[0x270F54178]();
}

uint64_t sub_26276F550()
{
  return MEMORY[0x270F54180]();
}

uint64_t sub_26276F560()
{
  return MEMORY[0x270F54188]();
}

uint64_t sub_26276F570()
{
  return MEMORY[0x270F54190]();
}

uint64_t sub_26276F580()
{
  return MEMORY[0x270F54198]();
}

uint64_t sub_26276F590()
{
  return MEMORY[0x270F541A0]();
}

uint64_t sub_26276F5A0()
{
  return MEMORY[0x270F541A8]();
}

uint64_t sub_26276F5B0()
{
  return MEMORY[0x270F9D068]();
}

uint64_t sub_26276F5C0()
{
  return MEMORY[0x270F9D0A8]();
}

uint64_t sub_26276F5D0()
{
  return MEMORY[0x270F9D0E8]();
}

uint64_t sub_26276F5E0()
{
  return MEMORY[0x270F9D168]();
}

uint64_t sub_26276F5F0()
{
  return MEMORY[0x270F9D1D0]();
}

uint64_t sub_26276F600()
{
  return MEMORY[0x270F9D200]();
}

uint64_t sub_26276F610()
{
  return MEMORY[0x270F9D208]();
}

uint64_t sub_26276F620()
{
  return MEMORY[0x270F9D210]();
}

uint64_t sub_26276F630()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_26276F640()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_26276F650()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_26276F660()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_26276F670()
{
  return MEMORY[0x270EF19C8]();
}

uint64_t sub_26276F680()
{
  return MEMORY[0x270EF19E0]();
}

uint64_t sub_26276F690()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_26276F6A0()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_26276F6B0()
{
  return MEMORY[0x270F9D610]();
}

uint64_t sub_26276F6C0()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_26276F6D0()
{
  return MEMORY[0x270F9D740]();
}

uint64_t sub_26276F6E0()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_26276F6F0()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_26276F700()
{
  return MEMORY[0x270F9D7E8]();
}

uint64_t sub_26276F710()
{
  return MEMORY[0x270F9D800]();
}

uint64_t sub_26276F720()
{
  return MEMORY[0x270F9D810]();
}

uint64_t sub_26276F730()
{
  return MEMORY[0x270F9D860]();
}

uint64_t sub_26276F740()
{
  return MEMORY[0x270F9D9D8]();
}

uint64_t sub_26276F750()
{
  return MEMORY[0x270F9DA18]();
}

uint64_t sub_26276F760()
{
  return MEMORY[0x270F9DA80]();
}

uint64_t sub_26276F7A0()
{
  return MEMORY[0x270F9DB00]();
}

uint64_t sub_26276F7B0()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_26276F7C0()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_26276F7D0()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_26276F7E0()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_26276F7F0()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_26276F800()
{
  return MEMORY[0x270F9DBD0]();
}

uint64_t sub_26276F810()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_26276F820()
{
  return MEMORY[0x270F9DC10]();
}

uint64_t sub_26276F830()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_26276F840()
{
  return MEMORY[0x270F9DC30]();
}

uint64_t sub_26276F850()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_26276F860()
{
  return MEMORY[0x270F9DC80]();
}

uint64_t sub_26276F870()
{
  return MEMORY[0x270F9DC88]();
}

uint64_t sub_26276F880()
{
  return MEMORY[0x270F9DC98]();
}

uint64_t sub_26276F890()
{
  return MEMORY[0x270F9DCA8]();
}

uint64_t sub_26276F8A0()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_26276F8B0()
{
  return MEMORY[0x270F9DD08]();
}

uint64_t sub_26276F8C0()
{
  return MEMORY[0x270F9DD28]();
}

uint64_t sub_26276F8D0()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_26276F8E0()
{
  return MEMORY[0x270FA1E10]();
}

uint64_t sub_26276F8F0()
{
  return MEMORY[0x270FA1E18]();
}

uint64_t sub_26276F900()
{
  return MEMORY[0x270FA1E20]();
}

uint64_t sub_26276F910()
{
  return MEMORY[0x270FA1E30]();
}

uint64_t sub_26276F940()
{
  return MEMORY[0x270FA1FD8]();
}

uint64_t sub_26276F950()
{
  return MEMORY[0x270FA1FE8]();
}

uint64_t sub_26276F960()
{
  return MEMORY[0x270EF1BF8]();
}

uint64_t sub_26276F970()
{
  return MEMORY[0x270FA2080]();
}

uint64_t sub_26276F980()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_26276F990()
{
  return MEMORY[0x270F9E080]();
}

uint64_t sub_26276F9A0()
{
  return MEMORY[0x270F9E0A0]();
}

uint64_t sub_26276F9B0()
{
  return MEMORY[0x270F9E0D8]();
}

uint64_t sub_26276F9C0()
{
  return MEMORY[0x270F9E0E0]();
}

uint64_t sub_26276F9D0()
{
  return MEMORY[0x270F9E1C0]();
}

uint64_t sub_26276F9E0()
{
  return MEMORY[0x270F9E1D8]();
}

uint64_t sub_26276F9F0()
{
  return MEMORY[0x270F9E1E0]();
}

uint64_t sub_26276FA00()
{
  return MEMORY[0x270FA10C0]();
}

uint64_t sub_26276FA10()
{
  return MEMORY[0x270EF1E28]();
}

uint64_t sub_26276FA20()
{
  return MEMORY[0x270EF1E38]();
}

uint64_t sub_26276FA30()
{
  return MEMORY[0x270FA2E40]();
}

uint64_t sub_26276FA40()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_26276FA50()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_26276FA60()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_26276FA70()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_26276FA80()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_26276FA90()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_26276FAA0()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_26276FAB0()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_26276FAC0()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_26276FAD0()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_26276FAE0()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_26276FAF0()
{
  return MEMORY[0x270F9EA38]();
}

uint64_t sub_26276FB00()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_26276FB10()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_26276FB20()
{
  return MEMORY[0x270F9EBD8]();
}

uint64_t sub_26276FB30()
{
  return MEMORY[0x270F9EC48]();
}

uint64_t sub_26276FB40()
{
  return MEMORY[0x270F9EC88]();
}

uint64_t sub_26276FB50()
{
  return MEMORY[0x270F9EC90]();
}

uint64_t sub_26276FB60()
{
  return MEMORY[0x270F9EF08]();
}

uint64_t sub_26276FB70()
{
  return MEMORY[0x270F9EF10]();
}

uint64_t sub_26276FB80()
{
  return MEMORY[0x270F9EF28]();
}

uint64_t sub_26276FB90()
{
  return MEMORY[0x270F9EF40]();
}

uint64_t sub_26276FBA0()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_26276FBB0()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_26276FBC0()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_26276FBD0()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_26276FBE0()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_26276FBF0()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_26276FC00()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_26276FC20()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_26276FC30()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_26276FC40()
{
  return MEMORY[0x270F9F290]();
}

uint64_t sub_26276FC50()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_26276FC60()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_26276FC70()
{
  return MEMORY[0x270F9F300]();
}

uint64_t sub_26276FC80()
{
  return MEMORY[0x270F9F308]();
}

uint64_t sub_26276FC90()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_26276FCA0()
{
  return MEMORY[0x270F9F338]();
}

uint64_t sub_26276FCB0()
{
  return MEMORY[0x270F9F378]();
}

uint64_t sub_26276FCC0()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_26276FCD0()
{
  return MEMORY[0x270F9F3D0]();
}

uint64_t sub_26276FCE0()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_26276FCF0()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_26276FD00()
{
  return MEMORY[0x270F9F440]();
}

uint64_t sub_26276FD10()
{
  return MEMORY[0x270F9F448]();
}

uint64_t sub_26276FD20()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_26276FD30()
{
  return MEMORY[0x270F9F478]();
}

uint64_t sub_26276FD40()
{
  return MEMORY[0x270F9F4A8]();
}

uint64_t sub_26276FD50()
{
  return MEMORY[0x270F9F4C8]();
}

uint64_t sub_26276FD60()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_26276FD80()
{
  return MEMORY[0x270F9F730]();
}

uint64_t sub_26276FD90()
{
  return MEMORY[0x270F9F770]();
}

uint64_t sub_26276FDA0()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_26276FDB0()
{
  return MEMORY[0x270F9F920]();
}

uint64_t sub_26276FDD0()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_26276FDE0()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_26276FDF0()
{
  return MEMORY[0x270F9FC40]();
}

uint64_t sub_26276FE00()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_26276FE10()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_26276FE20()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_26276FE30()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_26276FE40()
{
  return MEMORY[0x270F9FD98]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

void bzero(void *a1, size_t a2)
{
}

void free(void *a1)
{
}

long double log(long double __x)
{
  MEMORY[0x270EDA0A8](__x);
  return result;
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

void memset_pattern16(void *__b, const void *__pattern16, size_t __len)
{
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x270FA01A0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x270FA23F8]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x270FA0240]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x270FA0268]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x270FA0310]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x270FA0330]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x270FA03C8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x270FA0428]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isUniquelyReferenced_nonNull()
{
  return MEMORY[0x270FA04B8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x270FA0568]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x270FA0570]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x270FA05A8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x270FA0678]();
}

void vDSP_distancesq(const float *__A, vDSP_Stride __IA, const float *__B, vDSP_Stride __IB, float *__C, vDSP_Length __N)
{
}

void vDSP_dotpr(const float *__A, vDSP_Stride __IA, const float *__B, vDSP_Stride __IB, float *__C, vDSP_Length __N)
{
}

void vDSP_maxvi(const float *__A, vDSP_Stride __IA, float *__C, vDSP_Length *__I, vDSP_Length __N)
{
}

void vDSP_meanv(const float *__A, vDSP_Stride __IA, float *__C, vDSP_Length __N)
{
}

void vDSP_mmul(const float *__A, vDSP_Stride __IA, const float *__B, vDSP_Stride __IB, float *__C, vDSP_Stride __IC, vDSP_Length __M, vDSP_Length __N, vDSP_Length __P)
{
}

void vDSP_mtrans(const float *__A, vDSP_Stride __IA, float *__C, vDSP_Stride __IC, vDSP_Length __M, vDSP_Length __N)
{
}

void vDSP_sve(const float *__A, vDSP_Stride __I, float *__C, vDSP_Length __N)
{
}

void vDSP_svesq(const float *__A, vDSP_Stride __IA, float *__C, vDSP_Length __N)
{
}

void vDSP_vabs(const float *__A, vDSP_Stride __IA, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
}

void vDSP_vmax(const float *__A, vDSP_Stride __IA, const float *__B, vDSP_Stride __IB, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
}

void vDSP_vmin(const float *__A, vDSP_Stride __IA, const float *__B, vDSP_Stride __IB, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
}

void vDSP_vsdiv(const float *__A, vDSP_Stride __IA, const float *__B, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
}

void vDSP_vsort(float *__C, vDSP_Length __N, int __Order)
{
}

void vDSP_vsorti(const float *__C, vDSP_Length *__I, vDSP_Length *__Temporary, vDSP_Length __N, int __Order)
{
}