@interface CHXTitle
+ (id)chdTitleFromXmlTitleElement:(_xmlNode *)a3 isChartTitle:(BOOL)a4 state:(id)a5;
@end

@implementation CHXTitle

+ (id)chdTitleFromXmlTitleElement:(_xmlNode *)a3 isChartTitle:(BOOL)a4 state:(id)a5
{
  BOOL v5 = a4;
  id v7 = a5;
  v8 = [CHDTitle alloc];
  v9 = [v7 chart];
  v10 = [(CHDTitle *)v8 initWithChart:v9];

  v11 = [v7 drawingState];
  v12 = [v11 OAXChartNamespace];
  uint64_t v13 = OCXFindChild(a3, v12, "tx");

  if (v13)
  {
    [v7 pushTitleTextProperties:v5];
    id v45 = 0;
    id v46 = 0;
    +[CHXString readFromXmlTxElement:v13 formula:&v46 lastCached:&v45 state:v7];
    id v14 = v46;
    id v15 = v45;
    [v7 popTitleTextProperties];
    [(CHDTitle *)v10 setName:v14];
    [(CHDTitle *)v10 setLastCachedName:v15];
  }
  else
  {
    [(CHDTitle *)v10 setIsAutoGenerated:1];
  }
  v16 = [v7 drawingState];
  v17 = [v16 OAXChartNamespace];
  v18 = (_xmlNode *)OCXFindChild(a3, v17, "txPr");

  if (v18)
  {
    if (!v13)
    {
      v19 = +[CHXFont edRunCollectionFromXmlTextPropertiesElement:v18 state:v7];
      if (v19)
      {
        v20 = +[EDString string];
        [v20 setRuns:v19];
        [(CHDTitle *)v10 setLastCachedName:v20];
      }
    }
    v21 = [v7 drawingState];
    v22 = [v21 OAXMainNamespace];
    uint64_t v23 = OCXFindChild(v18, v22, "bodyPr");

    if (v23)
    {
      +[OAXBaseTypes readOptionalAngleFromXmlNode:v23 name:"rot"];
      -[CHDTitle setTitleRotationAngle:](v10, "setTitleRotationAngle:");
    }
  }
  v24 = objc_alloc_init(OADGraphicProperties);
  +[CHXGraphicProperties setGraphicPropertiesFromXmlElementWithGraphicProperties:v24 element:a3 state:v7];
  v25 = [v7 drawingState];
  v26 = [v25 OAXChartNamespace];
  v27 = (_xmlNode *)OCXFindChild(a3, v26, "layout");

  if (!v27)
  {
    if (a3->children) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  v28 = [v7 drawingState];
  v29 = [v28 OAXChartNamespace];
  v30 = (_xmlNode *)OCXFindChild(v27, v29, "manualLayout");

  if (!v30)
  {
LABEL_18:
    [(CHDTitle *)v10 setIsPositionAutoGenerated:1];
LABEL_19:
    [(CHDTitle *)v10 setIsSizeAutoGenerated:1];
    goto LABEL_20;
  }
  v31 = [(OADDrawableProperties *)v24 orientedBounds];
  [v31 bounds];
  double v33 = v32;
  double v35 = v34;

  if (v33 == 0.0 && v35 == 0.0)
  {
    v36 = [v7 drawingState];
    v37 = [v36 OAXChartNamespace];
    if (OCXFindChild(v30, v37, "w"))
    {

      goto LABEL_20;
    }
    v42 = [v7 drawingState];
    v43 = [v42 OAXChartNamespace];
    uint64_t v44 = OCXFindChild(v30, v43, "h");

    if (!v44) {
      goto LABEL_19;
    }
  }
LABEL_20:
  [(CHDTitle *)v10 setGraphicProperties:v24];
  v38 = [v7 drawingState];
  v39 = [v38 OAXChartNamespace];
  v40 = (_xmlNode *)OCXFindChild(a3, v39, "overlay");

  if (v40) {
    [(CHDTitle *)v10 setIsOverlay:CXRequiredBoolAttribute(v40, (CXNamespace *)CXNoNamespace, (xmlChar *)"val")];
  }

  return v10;
}

@end