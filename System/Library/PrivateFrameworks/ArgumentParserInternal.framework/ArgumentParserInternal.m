uint64_t sub_2486B4028()
{
  return 0x726F727245;
}

uint64_t static ParsableArguments._errorLabel.getter()
{
  return 0x726F727245;
}

unint64_t sub_2486B4050(unint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26931E0A8);
  MEMORY[0x270FA5388](v2 - 8);
  v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v25 = a1;
  swift_getMetatypeMetadata();
  uint64_t v5 = sub_24872C540();
  unint64_t v7 = sub_2486B8604(95, 0xE100000000000000, v5, v6);
  unint64_t v9 = v8;
  swift_bridgeObjectRelease();
  unint64_t v25 = v7;
  unint64_t v26 = v9;
  v24[0] = 0x736E6F6974706F5FLL;
  v24[1] = 0xE800000000000000;
  uint64_t v10 = sub_24872C400();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  sub_2486B71D8();
  sub_24872C980();
  unint64_t v12 = v11;
  char v14 = v13;
  sub_2486B73DC((uint64_t)v4, &qword_26931E0A8);
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
    uint64_t v15 = HIBYTE(v9) & 0xF;
    if ((v9 & 0x2000000000000000) == 0) {
      uint64_t v15 = v7 & 0xFFFFFFFFFFFFLL;
    }
    if (v12 >> 14 == 4 * v15)
    {
      uint64_t v16 = sub_24872C6D0();
      uint64_t v18 = v17;
      uint64_t v20 = v19;
      uint64_t v22 = v21;
      swift_bridgeObjectRelease();
      unint64_t v7 = MEMORY[0x24C57C040](v16, v18, v20, v22);
      swift_bridgeObjectRelease();
    }
  }
  return v7;
}

uint64_t sub_2486B4248@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for OptionGroup();
  return OptionGroup.wrappedValue.getter(v2, a1);
}

uint64_t sub_2486B4288(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24872CEB0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2486B4310()
{
  return 1;
}

uint64_t sub_2486B4318()
{
  return sub_24872D070();
}

uint64_t sub_2486B435C()
{
  return sub_24872D040();
}

uint64_t sub_2486B4384()
{
  return sub_24872D070();
}

uint64_t sub_2486B43C4()
{
  return 0x736E6F6974706FLL;
}

uint64_t sub_2486B43DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2486B4288(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2486B4410()
{
  return 0;
}

uint64_t sub_2486B441C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2486B4310();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2486B444C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_2486B44A0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_2486B44F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v4 = 0;
  return OptionGroup.init(title:visibility:)(0, 0xE000000000000000, &v4, a1, a2, a3);
}

uint64_t sub_2486B452C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v20 = a4;
  uint64_t v7 = type metadata accessor for OptionGroup();
  uint64_t v22 = *(void *)(v7 - 8);
  uint64_t v23 = v7;
  MEMORY[0x270FA5388](v7);
  v24 = (char *)&v20 - v8;
  type metadata accessor for _WrappedParsableCommand.CodingKeys();
  swift_getWitnessTable();
  uint64_t v25 = sub_24872CD50();
  uint64_t v21 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v27 = type metadata accessor for _WrappedParsableCommand();
  uint64_t v11 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  char v13 = (char *)&v20 - v12;
  char v28 = 0;
  OptionGroup.init(title:visibility:)(0, 0xE000000000000000, &v28, a2, a3, (uint64_t)&v20 - v12);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v14 = v26;
  sub_24872D0B0();
  if (v14)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v27);
  }
  else
  {
    uint64_t v15 = v21;
    uint64_t v16 = v22;
    uint64_t v17 = v23;
    swift_getWitnessTable();
    sub_24872CD40();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v25);
    (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v24, v17);
    uint64_t v18 = v27;
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(v20, v13, v27);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v18);
  }
}

unint64_t sub_2486B4874(uint64_t a1)
{
  return sub_2486B4050(*(void *)(a1 + 16));
}

uint64_t sub_2486B487C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2486B44F4(*(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_2486B4888@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2486B452C(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_2486B48A8()
{
  uint64_t v1 = v0;
  if (!swift_conformsToProtocol2()) {
    uint64_t v1 = 0;
  }
  if (!v1)
  {
    uint64_t v1 = type metadata accessor for _WrappedParsableCommand();
    swift_getWitnessTable();
  }
  return v1;
}

uint64_t static ParsableArguments.parse(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v39 = (char *)a4;
  uint64_t v41 = *(void *)(a2 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v37 - v10;
  uint64_t v12 = type metadata accessor for _WrappedParsableCommand();
  uint64_t v40 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v37 - v16;
  sub_2486B48A8();
  uint64_t v18 = v50;
  uint64_t result = static ParsableCommand.parseAsRoot(_:)(a1, v19, (uint64_t)v49);
  if (!v18)
  {
    v38 = v15;
    uint64_t v50 = a2;
    uint64_t v21 = v12;
    uint64_t v23 = v40;
    uint64_t v22 = v41;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FDB8);
    if (swift_dynamicCast())
    {
      uint64_t v24 = v42;
      uint64_t v25 = v43;
      char v26 = v44;
      uint64_t v27 = v45;
      uint64_t v28 = v46;
      char v29 = v47;
      uint64_t v30 = v48;
      sub_2486B4DD4();
      swift_allocError();
      *(void *)uint64_t v31 = v30;
      *(_OWORD *)(v31 + 8) = 0u;
      *(_OWORD *)(v31 + 24) = 0u;
      *(_OWORD *)(v31 + 40) = 0u;
      *(_OWORD *)(v31 + 56) = 0u;
      *(_OWORD *)(v31 + 65) = 0u;
      swift_willThrow();
      sub_2486B4E28(v24, v25, v26);
      sub_2486B4E38(v27, v28, v29);
      swift_bridgeObjectRelease();
    }
    else if (swift_dynamicCast())
    {
      v32 = v38;
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v38, v17, v21);
      uint64_t v33 = type metadata accessor for OptionGroup();
      OptionGroup.wrappedValue.getter(v33, (uint64_t)v39);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v32, v21);
    }
    else
    {
      uint64_t v34 = v50;
      if (swift_dynamicCast())
      {
        v35 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
        v35(v9, v11, v34);
        (*(void (**)(uint64_t, uint64_t))(a3 + 24))(v34, a3);
        v35(v39, v9, v34);
      }
      else
      {
        sub_2486B4DD4();
        swift_allocError();
        *(void *)uint64_t v36 = 3;
        *(_OWORD *)(v36 + 8) = 0u;
        *(_OWORD *)(v36 + 24) = 0u;
        *(_OWORD *)(v36 + 40) = 0u;
        *(_OWORD *)(v36 + 56) = 0u;
        *(void *)(v36 + 72) = 0;
        *(unsigned char *)(v36 + 80) = 15;
        swift_willThrow();
      }
    }
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v49);
  }
  return result;
}

uint64_t type metadata accessor for _WrappedParsableCommand()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_2486B4DD4()
{
  unint64_t result = qword_26B140130;
  if (!qword_26B140130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B140130);
  }
  return result;
}

uint64_t sub_2486B4E28(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_2486B4E38(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  return result;
}

uint64_t static ParsableArguments.message(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x24C57CE60]();
  sub_2486DE338(a1, v3, a3, 0, 1, (uint64_t)v14);
  uint64_t v6 = v14[0];
  uint64_t v7 = v14[1];
  uint64_t v8 = v14[2];
  uint64_t v9 = v14[3];
  uint64_t v10 = v14[4];
  uint64_t v11 = v14[5];
  char v12 = v15;
  swift_bridgeObjectRetain();
  sub_2486B4EEC(v6, v7, v8, v9, v10, v11, v12);
  return v6;
}

uint64_t sub_2486B4EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 && a7 != 2)
  {
    if (a7 != 1) {
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t static ParsableArguments.fullMessage(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  MEMORY[0x24C57CE60]();
  sub_2486DE338(a1, v4, a3, 0, 1, (uint64_t)v16);
  uint64_t v7 = v16[0];
  uint64_t v8 = v16[1];
  uint64_t v9 = v16[2];
  uint64_t v10 = v16[3];
  uint64_t v11 = v16[4];
  uint64_t v12 = v16[5];
  char v13 = v17;
  uint64_t v14 = sub_2486E0354(v4, a3);
  sub_2486B4EEC(v7, v8, v9, v10, v11, v12, v13);
  return v14;
}

uint64_t static ParsableArguments.fullMessage(for:columns:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  char v10 = a3 & 1;
  MEMORY[0x24C57CE60]();
  sub_2486DE338(a1, v6, a5, a2, v10, (uint64_t)v20);
  uint64_t v11 = v20[0];
  uint64_t v12 = v20[1];
  uint64_t v13 = v20[2];
  uint64_t v14 = v20[3];
  uint64_t v15 = v20[4];
  uint64_t v16 = v20[5];
  char v17 = v21;
  uint64_t v18 = sub_2486E0354(v6, a5);
  sub_2486B4EEC(v11, v12, v13, v14, v15, v16, v17);
  return v18;
}

unint64_t static ParsableArguments.helpMessage(columns:)(uint64_t a1, char a2)
{
  return static ParsableArguments.helpMessage(includeHidden:columns:)(0, a1, a2 & 1);
}

unint64_t static ParsableArguments.helpMessage(includeHidden:columns:)(char a1, uint64_t a2, char a3)
{
  char v5 = a3 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400D8);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24872D630;
  *(void *)(v6 + 32) = sub_2486B48A8();
  *(void *)(v6 + 40) = v7;
  char v10 = a1;
  sub_2486D5DE8(v6, &v10, v11);
  swift_bridgeObjectRelease();
  unint64_t v8 = sub_2486D0FDC(a2, v5);
  sub_2486B61F8((uint64_t)v11);
  return v8;
}

uint64_t static ParsableArguments._dumpHelp()()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400D8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_24872D630;
  *(void *)(v0 + 32) = sub_2486B48A8();
  *(void *)(v0 + 40) = v1;
  sub_2486CCD6C(v0, (uint64_t)v12);
  uint64_t v3 = *(void *)&v12[16];
  uint64_t v2 = v13;
  uint64_t v4 = *(void *)&v14[32];
  uint64_t v5 = v15;
  uint64_t v6 = v16;
  long long v9 = *(_OWORD *)v12;
  long long v10 = *(_OWORD *)v14;
  long long v11 = *(_OWORD *)&v14[16];
  *(void *)uint64_t v12 = 0;
  *(_OWORD *)&v12[8] = v9;
  uint64_t v13 = v3;
  *(void *)uint64_t v14 = v2;
  *(_OWORD *)&v14[8] = v10;
  *(_OWORD *)&v14[24] = v11;
  uint64_t v15 = v4;
  uint64_t v16 = v5;
  uint64_t v17 = v6;
  uint64_t v7 = sub_2486CB6A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t static ParsableArguments.exitCode(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, int *a3@<X8>)
{
  MEMORY[0x24C57CE60]();
  sub_2486DE338(a1, v3, a2, 0, 1, (uint64_t)v10);
  if (v15 == 1) {
    int v7 = 64;
  }
  else {
    int v7 = v11;
  }
  if (v15) {
    int v8 = v7;
  }
  else {
    int v8 = 0;
  }
  uint64_t result = sub_2486B4EEC(v10[0], v10[1], v11, v12, v13, v14, v15);
  *a3 = v8;
  return result;
}

uint64_t static ParsableArguments.completionScript(for:)()
{
  return sub_2486C718C();
}

void static ParsableArguments.exit(withError:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1) {
LABEL_21:
  }
    exit(a1);
  uint64_t v5 = a1;
  MEMORY[0x24C57CE60]();
  sub_2486DE338(v5, v3, a3, 0, 1, (uint64_t)v23);
  uint64_t v6 = v23[0];
  uint64_t v7 = v23[1];
  uint64_t v8 = v23[2];
  uint64_t v9 = v23[3];
  uint64_t v10 = v23[4];
  uint64_t v11 = v23[5];
  int v12 = v24;
  uint64_t v13 = sub_2486E0354(v3, a3);
  uint64_t v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0) {
    uint64_t v15 = v13 & 0xFFFFFFFFFFFFLL;
  }
  if (v15)
  {
    uint64_t v16 = v13;
    unint64_t v17 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E018);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_24872D630;
    *(void *)(v18 + 56) = MEMORY[0x263F8D310];
    *(void *)(v18 + 32) = v16;
    *(void *)(v18 + 40) = v17;
    if (!v12)
    {
      sub_24872D020();
      swift_bridgeObjectRelease();
      char v19 = 0;
      int v20 = 0;
LABEL_20:
      sub_2486B4EEC(v6, v7, v8, v9, v10, v11, v19);
      LODWORD(a1) = v20;
      goto LABEL_21;
    }
    sub_2486B6260();
    sub_24872D010();
    swift_bridgeObjectRelease();
  }
  if (v12 == 1) {
    char v21 = 1;
  }
  else {
    char v21 = 2;
  }
  if (v12 == 1) {
    int v22 = 64;
  }
  else {
    int v22 = v8;
  }
  if (v12) {
    char v19 = v21;
  }
  else {
    char v19 = 0;
  }
  if (v12) {
    int v20 = v22;
  }
  else {
    int v20 = 0;
  }
  goto LABEL_20;
}

uint64_t static ParsableArguments.parseOrExit(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return static ParsableArguments.parse(_:)(a1, a2, a3, a4);
}

void sub_2486B559C(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_2486B55A4(uint64_t result, unsigned __int8 a2)
{
  uint64_t v2 = result;
  unint64_t v3 = 0;
  uint64_t v4 = 0;
  unint64_t v5 = 0;
  uint64_t v40 = result + 32;
  uint64_t v6 = result + 56;
  uint64_t v39 = MEMORY[0x263F8EE78];
  unint64_t v7 = 2 - a2;
  unint64_t v38 = v7;
  while (1)
  {
    if (v4)
    {
      unint64_t v8 = *(void *)(v4 + 16);
      if (v3 != v8) {
        goto LABEL_13;
      }
    }
    unint64_t v9 = *(void *)(v2 + 16);
    if (v5 == v9) {
      goto LABEL_20;
    }
    if (v5 >= v9) {
      break;
    }
    uint64_t v10 = 16 * v5;
    uint64_t v11 = *(void *)(v40 + 16 * v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_2486B7698(v4);
    ++v5;
    uint64_t v12 = v6 + v10;
    uint64_t v4 = v11;
    if (!v11) {
      goto LABEL_8;
    }
LABEL_7:
    unint64_t v8 = *(void *)(v4 + 16);
    if (!v8)
    {
LABEL_8:
      while (1)
      {
        unint64_t v13 = *(void *)(v2 + 16);
        if (v5 == v13) {
          break;
        }
        if (v5 >= v13) {
          goto LABEL_21;
        }
        uint64_t v14 = *(void *)(v12 - 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t result = sub_2486B7698(v4);
        ++v5;
        v12 += 16;
        uint64_t v4 = v14;
        if (v14) {
          goto LABEL_7;
        }
      }
LABEL_20:
      swift_bridgeObjectRelease();
      sub_2486B7698(v4);
      return v39;
    }
    unint64_t v3 = 0;
    unint64_t v7 = v38;
LABEL_13:
    if (v3 >= v8) {
      goto LABEL_22;
    }
    uint64_t v15 = (_OWORD *)(v4 + 192 * v3);
    long long v16 = v15[2];
    long long v17 = v15[3];
    long long v18 = v15[5];
    long long v43 = v15[4];
    long long v44 = v18;
    long long v41 = v16;
    long long v42 = v17;
    long long v19 = v15[6];
    long long v20 = v15[7];
    long long v21 = v15[9];
    long long v47 = v15[8];
    long long v48 = v21;
    long long v45 = v19;
    long long v46 = v20;
    long long v22 = v15[10];
    long long v23 = v15[11];
    long long v24 = v15[13];
    long long v51 = v15[12];
    long long v52 = v24;
    long long v49 = v22;
    long long v50 = v23;
    ++v3;
    if (2 - (unint64_t)BYTE8(v47) >= v7)
    {
      sub_2486B76D8((uint64_t)&v41);
      uint64_t v25 = v39;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v53 = v39;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_2486B9CA0(0, *(void *)(v39 + 16) + 1, 1);
        uint64_t v25 = v53;
      }
      unint64_t v27 = *(void *)(v25 + 16);
      unint64_t v26 = *(void *)(v25 + 24);
      if (v27 >= v26 >> 1)
      {
        uint64_t result = (uint64_t)sub_2486B9CA0((char *)(v26 > 1), v27 + 1, 1);
        uint64_t v25 = v53;
      }
      *(void *)(v25 + 16) = v27 + 1;
      uint64_t v39 = v25;
      uint64_t v28 = (_OWORD *)(v25 + 192 * v27);
      long long v29 = v41;
      long long v30 = v42;
      long long v31 = v44;
      v28[4] = v43;
      v28[5] = v31;
      v28[2] = v29;
      v28[3] = v30;
      long long v32 = v45;
      long long v33 = v46;
      long long v34 = v48;
      v28[8] = v47;
      v28[9] = v34;
      v28[6] = v32;
      v28[7] = v33;
      long long v35 = v49;
      long long v36 = v50;
      long long v37 = v52;
      v28[12] = v51;
      v28[13] = v37;
      v28[10] = v35;
      v28[11] = v36;
      unint64_t v7 = v38;
    }
  }
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

void sub_2486B5824(unsigned char *a1@<X8>)
{
}

uint64_t sub_2486B583C(uint64_t a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v86 = a4;
  uint64_t v91 = 0;
  uint64_t v11 = sub_24872D0A0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v84 = *a3;
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(a2 + 16);
  *((void *)&v105 + 1) = a1;
  *(void *)&long long v106 = a2;
  __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v104);
  v15(a1, a2);
  uint64_t v16 = *((void *)&v105 + 1);
  long long v17 = __swift_project_boxed_opaque_existential_1(&v104, *((uint64_t *)&v105 + 1));
  *((void *)&v103[0] + 1) = v16;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v102);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(boxed_opaque_existential_1Tm, v17, v16);
  sub_24872D080();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v104);
  uint64_t v19 = sub_24872D090();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  swift_retain();
  uint64_t v20 = sub_24872CBA0();
  v80[1] = v19;
  swift_release();
  uint64_t v83 = v20;
  sub_24872CCC0();
  if (*((void *)&v106 + 1))
  {
    long long v21 = &v101;
    long long v22 = v103;
    uint64_t v90 = MEMORY[0x263F8EE58] + 8;
    long long v89 = xmmword_24872D630;
    v92 = (char *)MEMORY[0x263F8EE78];
    uint64_t v82 = a6;
    uint64_t v81 = a5;
    v88 = &v101;
    v87 = v103;
    while (1)
    {
      long long v102 = v104;
      v103[0] = v105;
      v103[1] = v106;
      long long v23 = v104;
      long long v100 = v104;
      sub_2486B7330((uint64_t)v22, (uint64_t)v21);
      if (*((void *)&v23 + 1))
      {
        swift_bridgeObjectRetain();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
        long long v100 = v102;
        sub_2486B7330((uint64_t)v22, (uint64_t)v21);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FD90);
        if ((swift_dynamicCast() & 1) == 0)
        {
          uint64_t v96 = 0;
          memset(v95, 0, sizeof(v95));
          sub_2486B73DC((uint64_t)v95, &qword_26B13FC70);
          sub_2486B7330((uint64_t)v22, (uint64_t)&v100);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B140128);
          swift_dynamicCast();
          uint64_t v26 = v98;
          sub_2486B73DC((uint64_t)v97, &qword_26B140128);
          if (v26)
          {
            sub_2486B7330((uint64_t)v22, (uint64_t)&v100);
          }
          else
          {
            long long v100 = 0u;
            long long v101 = 0u;
          }
          uint64_t v27 = v86;
          sub_2486B7438(v86, a5);
          uint64_t v28 = sub_24871B3A0(v23, *((unint64_t *)&v23 + 1), v27, a5, a6);
          uint64_t v30 = v29;
          uint64_t v32 = v31;
          sub_2486B747C((uint64_t)&v100, (uint64_t)v97);
          BOOL v33 = v98 != 0;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B140100);
          uint64_t v34 = swift_allocObject();
          *(_OWORD *)(v34 + 16) = v89;
          *(void *)(v34 + 32) = v28;
          *(void *)(v34 + 40) = v30;
          *(void *)(v34 + 48) = v32;
          long long v35 = (void *)swift_allocObject();
          v35[2] = sub_24870BE20;
          v35[3] = 0;
          v35[4] = v28;
          v35[5] = v30;
          v35[6] = v32;
          sub_2486B747C((uint64_t)v97, (uint64_t)v95);
          long long v36 = (void *)swift_allocObject();
          v36[2] = 1;
          sub_2486B75C0((uint64_t)v95, (uint64_t)(v36 + 3));
          v36[7] = v28;
          v36[8] = v30;
          v36[9] = v32;
          char v94 = 1;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          sub_2486B73DC((uint64_t)v97, &qword_26B140128);
          sub_2486B73DC((uint64_t)&v100, &qword_26B140128);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
          uint64_t v37 = swift_allocObject();
          *(_OWORD *)(v37 + 16) = v89;
          *(void *)(v37 + 32) = 1;
          *(void *)(v37 + 40) = v33;
          *(void *)(v37 + 48) = 0;
          *(void *)(v37 + 56) = 0;
          *(void *)(v37 + 64) = v34;
          uint64_t v38 = MEMORY[0x263F8EE78];
          *(void *)(v37 + 72) = MEMORY[0x263F8EE78];
          *(unsigned char *)(v37 + 80) = 0;
          *(void *)(v37 + 88) = 0;
          *(void *)(v37 + 96) = 0xE000000000000000;
          *(void *)(v37 + 104) = 0;
          *(void *)(v37 + 112) = 0xE000000000000000;
          *(void *)(v37 + 120) = 0;
          *(void *)(v37 + 128) = 0xE000000000000000;
          *(unsigned char *)(v37 + 136) = 2;
          *(void *)(v37 + 144) = 0;
          *(void *)(v37 + 152) = 0xE000000000000000;
          *(void *)(v37 + 160) = 0;
          *(void *)(v37 + 168) = 0;
          *(_WORD *)(v37 + 176) = 4;
          *(void *)(v37 + 184) = sub_2486B752C;
          *(void *)(v37 + 192) = v35;
          *(unsigned char *)(v37 + 200) = v94;
          *(void *)(v37 + 208) = sub_2486B7628;
          *(void *)(v37 + 216) = v36;
          sub_2486CDF94(v38);
          swift_bridgeObjectRelease();
          uint64_t v39 = swift_bridgeObjectRetain();
          uint64_t v40 = v91;
          uint64_t v41 = sub_2486CE574(v39);
          uint64_t v91 = v40;
          swift_bridgeObjectRelease();
          uint64_t v42 = *(void *)(v41 + 16);
          uint64_t v85 = v41;
          if (v42)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400A8);
            long long v43 = (void *)sub_24872CCB0();
            uint64_t v44 = *(void *)(v41 + 16);
            *(void *)&v95[0] = v43;
            uint64_t v93 = v44;
            if (v44)
            {
              uint64_t v45 = 0;
              long long v46 = (void *)(v41 + 56);
              while (1)
              {
                uint64_t v49 = v45 + 1;
                if (__OFADD__(v45, 1)) {
                  break;
                }
                uint64_t v51 = *(v46 - 3);
                uint64_t v50 = *(v46 - 2);
                int v52 = *((unsigned __int8 *)v46 - 8);
                uint64_t v53 = *v46;
                sub_2486B7650(v51, v50, *((unsigned char *)v46 - 8));
                unint64_t v54 = sub_248710538(v51, v50, v52);
                uint64_t v56 = v43[2];
                BOOL v57 = (v55 & 1) == 0;
                BOOL v58 = __OFADD__(v56, v57);
                uint64_t v59 = v56 + v57;
                if (v58) {
                  goto LABEL_38;
                }
                char v60 = v55;
                if (v43[3] < v59)
                {
                  sub_248710E7C(v59, 1);
                  long long v43 = *(void **)&v95[0];
                  unint64_t v54 = sub_248710538(v51, v50, v52);
                  if ((v60 & 1) != (v61 & 1)) {
                    goto LABEL_40;
                  }
                }
                if (v60)
                {
                  uint64_t v47 = 8 * v54;
                  uint64_t v48 = *(void *)(v43[7] + 8 * v54);
                  sub_2486B7668(v51, v50, v52);
                  *(void *)(v43[7] + v47) = v48;
                }
                else
                {
                  v43[(v54 >> 6) + 8] |= 1 << v54;
                  uint64_t v62 = v43[6] + 24 * v54;
                  *(void *)uint64_t v62 = v51;
                  *(void *)(v62 + 8) = v50;
                  *(unsigned char *)(v62 + 16) = v52;
                  *(void *)(v43[7] + 8 * v54) = v53;
                  uint64_t v63 = v43[2];
                  BOOL v58 = __OFADD__(v63, 1);
                  uint64_t v64 = v63 + 1;
                  if (v58) {
                    goto LABEL_39;
                  }
                  v43[2] = v64;
                }
                v46 += 4;
                ++v45;
                if (v49 == v93) {
                  goto LABEL_27;
                }
              }
              __break(1u);
LABEL_38:
              __break(1u);
LABEL_39:
              __break(1u);
LABEL_40:
              uint64_t result = sub_24872CFA0();
              __break(1u);
              return result;
            }
          }
          else
          {
            long long v43 = (void *)MEMORY[0x263F8EE80];
          }
LABEL_27:
          swift_bridgeObjectRelease();
          a6 = v82;
          a5 = v81;
          goto LABEL_30;
        }
        sub_2486B7680(v95, (uint64_t)v97);
        uint64_t v24 = v98;
        uint64_t v25 = v99;
        __swift_project_boxed_opaque_existential_1(v97, v98);
        (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v25 + 16))(&v100, v24, v25);
        if (v84)
        {
          if (v84 != 1 || (v100 & 7) != 2)
          {
LABEL_29:
            uint64_t v65 = v86;
            sub_2486B7438(v86, a5);
            uint64_t v66 = sub_24871B3A0(v23, *((unint64_t *)&v23 + 1), v65, a5, a6);
            uint64_t v68 = v67;
            uint64_t v70 = v69;
            uint64_t v71 = v98;
            uint64_t v72 = v99;
            __swift_project_boxed_opaque_existential_1(v97, v98);
            uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 8))(v66, v68, v70, v71, v72);
            long long v43 = v73;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v97);
LABEL_30:
            sub_2486B73DC((uint64_t)&v102, &qword_26B140088);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              v92 = sub_24871A1E4(0, *((void *)v92 + 2) + 1, 1, v92);
            }
            long long v21 = v88;
            long long v22 = v87;
            unint64_t v75 = *((void *)v92 + 2);
            unint64_t v74 = *((void *)v92 + 3);
            if (v75 >= v74 >> 1) {
              v92 = sub_24871A1E4((char *)(v74 > 1), v75 + 1, 1, v92);
            }
            v76 = v92;
            *((void *)v92 + 2) = v75 + 1;
            v77 = &v76[16 * v75];
            *((void *)v77 + 4) = v37;
            *((void *)v77 + 5) = v43;
            goto LABEL_4;
          }
        }
        else if (((6u >> (v100 & 7)) & 1) == 0)
        {
          goto LABEL_29;
        }
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v97);
        sub_2486B73DC((uint64_t)&v102, &qword_26B140088);
        long long v21 = v88;
        long long v22 = v87;
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
        sub_2486B73DC((uint64_t)&v102, &qword_26B140088);
      }
LABEL_4:
      sub_24872CCC0();
      if (!*((void *)&v106 + 1)) {
        goto LABEL_36;
      }
    }
  }
  v92 = (char *)MEMORY[0x263F8EE78];
LABEL_36:
  swift_release();
  swift_release();
  sub_2486B72EC(v86, a5);
  uint64_t v78 = sub_2486B55A4((uint64_t)v92, v84);
  return sub_2486CDED4(v78);
}

uint64_t sub_2486B61F8(uint64_t a1)
{
  return a1;
}

unint64_t sub_2486B6260()
{
  unint64_t result = qword_26931E020[0];
  if (!qword_26931E020[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26931E020);
  }
  return result;
}

uint64_t dispatch thunk of ParsableArguments.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ParsableArguments.validate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static ParsableArguments._errorLabel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_2486B6304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_2486B6318(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_2486B632C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_2486B6334()
{
  uint64_t result = type metadata accessor for OptionGroup();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_2486B63C4(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v5 + 64) <= 0x10uLL) {
    uint64_t v6 = 16;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 10) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *(void *)a2;
    void *v4 = *(void *)a2;
    uint64_t v4 = (void *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    unsigned int v10 = a2[v6];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v12 = v6;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a2;
          goto LABEL_19;
        case 2:
          int v13 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v13 = *(_DWORD *)a2;
LABEL_19:
          int v14 = (v13 | (v11 << (8 * v6))) + 2;
          unsigned int v10 = v13 + 2;
          if (v6 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v15 = v6 + 1;
    if (v10 == 1)
    {
      uint64_t v16 = *((void *)a2 + 1);
      void *v4 = *(void *)a2;
      v4[1] = v16;
      swift_retain();
      char v17 = 1;
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(a1, a2);
      char v17 = 0;
    }
    *((unsigned char *)v4 + v6) = v17;
    long long v18 = (char *)v4 + v15;
    *long long v18 = a2[v15];
    v18[1] = a2[v15 + 1];
    uint64_t v19 = (void *)(((unint64_t)v4 + v15 + 9) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v20 = (void *)((unint64_t)&a2[v15 + 9] & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v19 = *v20;
    v19[1] = v20[1];
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_2486B6598(unsigned __int8 *a1, uint64_t a2)
{
  if (*(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v2 = 16;
  }
  else {
    uint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_13;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_13;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_13;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_13:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {
    swift_release();
  }
  else {
    (*(void (**)(unsigned __int8 *))(*(void *)(*(void *)(a2 + 16) - 8) + 8))(a1);
  }
  return swift_bridgeObjectRelease();
}

void *sub_2486B66E0(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v5 = 16;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v6 = a2[v5];
  unsigned int v7 = v6 - 2;
  if (v6 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a2;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)a2;
LABEL_13:
        int v10 = (v9 | (v7 << (8 * v5))) + 2;
        unsigned int v6 = v9 + 2;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 1)
  {
    uint64_t v11 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v11;
    swift_retain();
    char v12 = 1;
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1, a2);
    char v12 = 0;
  }
  *((unsigned char *)a1 + v5) = v12;
  int v13 = (unsigned __int8 *)a1 + v5 + 1;
  int v14 = &a2[v5 + 1];
  *int v13 = *v14;
  v13[1] = v14[1];
  uint64_t v15 = (void *)((unint64_t)(v13 + 9) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)((unint64_t)(v14 + 9) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  return a1;
}

unsigned __int8 *sub_2486B686C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (a1 != a2)
  {
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      uint64_t v18 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v18;
      a1[v7] = 1;
      swift_retain();
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      a1[v7] = 0;
    }
  }
  unint64_t v19 = *(void *)(v6 + 64);
  if (v19 <= 0x10) {
    unint64_t v19 = 16;
  }
  unint64_t v20 = v19 + 1;
  long long v21 = &a1[v20];
  long long v22 = &a2[v20];
  *long long v21 = *v22;
  v21[1] = v22[1];
  long long v23 = (void *)((unint64_t)(v21 + 9) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v24 = (void *)((unint64_t)(v22 + 9) & 0xFFFFFFFFFFFFFFF8);
  *long long v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_2486B6AFC(_OWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v5 = 16;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v6 = a2[v5];
  unsigned int v7 = v6 - 2;
  if (v6 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a2;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)a2;
LABEL_13:
        int v10 = (v9 | (v7 << (8 * v5))) + 2;
        unsigned int v6 = v9 + 2;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 1)
  {
    *a1 = *(_OWORD *)a2;
    char v11 = 1;
  }
  else
  {
    (*(void (**)(_OWORD *, unsigned __int8 *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1, a2);
    char v11 = 0;
  }
  *((unsigned char *)a1 + v5) = v11;
  int v12 = (unsigned __int8 *)a1 + v5 + 1;
  unsigned int v13 = &a2[v5 + 1];
  *int v12 = *v13;
  v12[1] = v13[1];
  *(_OWORD *)((unint64_t)(v12 + 9) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)(v13 + 9) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

unsigned __int8 *sub_2486B6C78(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (a1 != a2)
  {
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      char v18 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 0;
    }
    a1[v7] = v18;
  }
  unint64_t v19 = *(void *)(v6 + 64);
  if (v19 <= 0x10) {
    unint64_t v19 = 16;
  }
  unint64_t v20 = v19 + 1;
  long long v21 = &a1[v20];
  long long v22 = &a2[v20];
  *long long v21 = *v22;
  v21[1] = v22[1];
  long long v23 = (void *)((unint64_t)(v21 + 9) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v24 = (void *)((unint64_t)(v22 + 9) & 0xFFFFFFFFFFFFFFF8);
  *long long v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2486B6EFC(_DWORD *a1, int a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (v3 <= 0x10) {
    unint64_t v3 = 16;
  }
  if (!a2) {
    return 0;
  }
  if ((a2 & 0x80000000) == 0) {
    goto LABEL_5;
  }
  unint64_t v6 = ((v3 + 10) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v7 = v6 & 0xFFFFFFF8;
  unsigned int v8 = a2 - 2147483646;
  if ((v6 & 0xFFFFFFF8) != 0) {
    unsigned int v8 = 2;
  }
  if (v8 >= 0x10000) {
    int v9 = 4;
  }
  else {
    int v9 = 2;
  }
  if (v8 < 0x100) {
    int v10 = 1;
  }
  else {
    int v10 = v9;
  }
  if (v10 == 4)
  {
    int v11 = *(_DWORD *)((char *)a1 + v6);
    if (!v11) {
      goto LABEL_5;
    }
  }
  else if (v10 == 2)
  {
    int v11 = *(unsigned __int16 *)((char *)a1 + v6);
    if (!v11) {
      goto LABEL_5;
    }
  }
  else
  {
    int v11 = *((unsigned __int8 *)a1 + v6);
    if (!v11)
    {
LABEL_5:
      unint64_t v4 = *(void *)((((unint64_t)a1 + v3 + 10) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v4 >= 0xFFFFFFFF) {
        LODWORD(v4) = -1;
      }
      return (v4 + 1);
    }
  }
  int v12 = v11 - 1;
  if (v7)
  {
    int v12 = 0;
    LODWORD(v7) = *a1;
  }
  return (v7 | v12) ^ 0x80000000;
}

void sub_2486B6FDC(unsigned char *a1, int a2, int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x10) {
    unint64_t v5 = 16;
  }
  size_t v6 = ((v5 + 10) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (a3 < 0)
  {
    unsigned int v8 = a3 - 2147483646;
    if (((v5 + 10) & 0xFFFFFFF8) != 0xFFFFFFF0) {
      unsigned int v8 = 2;
    }
    if (v8 >= 0x10000) {
      int v9 = 4;
    }
    else {
      int v9 = 2;
    }
    if (v8 < 0x100) {
      int v7 = 1;
    }
    else {
      int v7 = v9;
    }
    if ((a2 & 0x80000000) == 0) {
      goto LABEL_5;
    }
  }
  else
  {
    int v7 = 0;
    if ((a2 & 0x80000000) == 0)
    {
LABEL_5:
      switch(v7)
      {
        case 1:
          a1[v6] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_26;
        case 2:
          *(_WORD *)&a1[v6] = 0;
          goto LABEL_25;
        case 3:
          goto LABEL_32;
        case 4:
          *(_DWORD *)&a1[v6] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_26;
        default:
LABEL_25:
          if (a2) {
LABEL_26:
          }
            *(void *)(((unint64_t)&a1[v5 + 10] & 0xFFFFFFFFFFFFFFF8) + 8) = (a2 - 1);
          break;
      }
      return;
    }
  }
  if (((v5 + 10) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v10 = a2 - 0x7FFFFFFF;
  }
  else {
    int v10 = 1;
  }
  if (((v5 + 10) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    unsigned int v11 = a2 ^ 0x80000000;
    bzero(a1, v6);
    *(_DWORD *)a1 = v11;
  }
  switch(v7)
  {
    case 1:
      a1[v6] = v10;
      break;
    case 2:
      *(_WORD *)&a1[v6] = v10;
      break;
    case 3:
LABEL_32:
      __break(1u);
      JUMPOUT(0x2486B7138);
    case 4:
      *(_DWORD *)&a1[v6] = v10;
      break;
    default:
      return;
  }
}

uint64_t sub_2486B7160(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2486B719C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2486B71D8()
{
  unint64_t result = qword_26931E0B0[0];
  if (!qword_26931E0B0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26931E0B0);
  }
  return result;
}

uint64_t type metadata accessor for _WrappedParsableCommand.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1Tm(uint64_t *a1)
{
  unint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_2486B72EC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2486B7330(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_2486B73DC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2486B7438(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2486B747C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B140128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2486B74E4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

void *sub_2486B752C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_2486CFB54(a1, a2, a3, a4, a5, a6, a7, *(void *(**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16), *(void *)(v7 + 24), *(void *)(v7 + 32), *(void *)(v7 + 40), *(void *)(v7 + 48));
}

uint64_t sub_2486B7560()
{
  if (*(void *)(v0 + 16) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 48)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_2486B75C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B140128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2486B7628(uint64_t a1, uint64_t a2)
{
  return sub_2486CFEB0(a1, a2, v2[2], (uint64_t)(v2 + 3), v2[7], v2[8], v2[9]);
}

uint64_t sub_2486B7650(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0xBFu) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2486B7668(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0xBFu) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2486B7680(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_2486B7698(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2486B76D8(uint64_t a1)
{
  uint64_t v5 = *(void *)(a1 + 128);
  uint64_t v2 = *(void *)(a1 + 136);
  char v3 = *(unsigned char *)(a1 + 144);
  sub_2486B77C8(*(void *)a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2486B77D8(v5, v2, v3);
  sub_2486B7830();
  swift_retain();
  return a1;
}

unint64_t sub_2486B77C8(unint64_t result)
{
  if (result >= 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2486B77D8(uint64_t a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    case 3:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2486B7830()
{
  return swift_retain();
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2486B7868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

uint64_t getEnumTagSinglePayload for ToolInfoHeader.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *sub_2486B78C8(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2486B7964);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2486B798C()
{
  return 0;
}

uint64_t sub_2486B7994()
{
  return swift_getWitnessTable();
}

uint64_t sub_2486B79B0()
{
  return swift_getWitnessTable();
}

uint64_t sub_2486B79CC()
{
  return swift_getWitnessTable();
}

uint64_t sub_2486B79E8@<X0>(uint64_t *a1@<X8>)
{
  return static EnumerableFlag.name(for:)(a1);
}

uint64_t static EnumerableFlag.name(for:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_2486B7AA4((uint64_t)&unk_26FC75B48);
  swift_bridgeObjectRelease();
  uint64_t result = swift_arrayDestroy();
  *a1 = v2;
  return result;
}

double sub_2486B7A78@<D0>(uint64_t a1@<X8>)
{
  return static EnumerableFlag.help(for:)(a1);
}

double static EnumerableFlag.help(for:)@<D0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 48) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_2486B7AA4(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v2 = 0;
  uint64_t v3 = result + 48;
  uint64_t v4 = -(uint64_t)v1;
  uint64_t v5 = MEMORY[0x263F8EE78];
  uint64_t v16 = result + 48;
  unint64_t v17 = *(void *)(result + 16);
  do
  {
    uint64_t v18 = v5;
    if (v2 <= v1) {
      unint64_t v6 = v1;
    }
    else {
      unint64_t v6 = v2;
    }
    uint64_t v7 = -(uint64_t)v6;
    for (i = (char *)(v3 + 24 * v2++); ; i += 24)
    {
      if (v7 + v2 == 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v9 = *((void *)i - 2);
      uint64_t v10 = *((void *)i - 1);
      int v11 = *i;
      sub_2486B7C7C(v9, v10, *i);
      sub_2486B7C7C(v9, v10, v11);
      char v12 = sub_248712790((uint64_t)v19, v9, v10, v11);
      sub_2486B7C8C(v19[0], v19[1], v20);
      if (v12) {
        break;
      }
      double result = sub_2486B7C8C(v9, v10, v11);
      ++v2;
      if (v4 + v2 == 1) {
        return v18;
      }
    }
    uint64_t v5 = v18;
    double result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = v18;
    if ((result & 1) == 0)
    {
      double result = (uint64_t)sub_2486B9C70(0, *(void *)(v18 + 16) + 1, 1);
      uint64_t v5 = v21;
    }
    unint64_t v14 = *(void *)(v5 + 16);
    unint64_t v13 = *(void *)(v5 + 24);
    if (v14 >= v13 >> 1)
    {
      double result = (uint64_t)sub_2486B9C70((char *)(v13 > 1), v14 + 1, 1);
      uint64_t v5 = v21;
    }
    *(void *)(v5 + 16) = v14 + 1;
    uint64_t v15 = v5 + 24 * v14;
    *(void *)(v15 + 32) = v9;
    *(void *)(v15 + 40) = v10;
    *(unsigned char *)(v15 + 48) = v11;
    uint64_t v3 = v16;
    unint64_t v1 = v17;
  }
  while (v4 + v2);
  return v5;
}

uint64_t dispatch thunk of static EnumerableFlag.name(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of static EnumerableFlag.help(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_2486B7C7C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 0x80) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2486B7C8C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 0x80) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2486B7C9C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))() & 1;
}

uint64_t CommandConfiguration.commandName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CommandConfiguration.commandName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*CommandConfiguration.commandName.modify())()
{
  return nullsub_1;
}

uint64_t CommandConfiguration._superCommandName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CommandConfiguration._superCommandName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*CommandConfiguration._superCommandName.modify())()
{
  return nullsub_1;
}

uint64_t CommandConfiguration.abstract.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CommandConfiguration.abstract.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*CommandConfiguration.abstract.modify())()
{
  return nullsub_1;
}

uint64_t CommandConfiguration.usage.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CommandConfiguration.usage.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*CommandConfiguration.usage.modify())()
{
  return nullsub_1;
}

uint64_t CommandConfiguration.discussion.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CommandConfiguration.discussion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

uint64_t (*CommandConfiguration.discussion.modify())()
{
  return nullsub_1;
}

uint64_t CommandConfiguration.version.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CommandConfiguration.version.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return result;
}

uint64_t (*CommandConfiguration.version.modify())()
{
  return nullsub_1;
}

uint64_t CommandConfiguration.shouldDisplay.getter()
{
  return *(unsigned __int8 *)(v0 + 96);
}

uint64_t CommandConfiguration.shouldDisplay.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 96) = result;
  return result;
}

uint64_t (*CommandConfiguration.shouldDisplay.modify())()
{
  return nullsub_1;
}

uint64_t CommandConfiguration.subcommands.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CommandConfiguration.subcommands.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 104) = a1;
  return result;
}

uint64_t (*CommandConfiguration.subcommands.modify())()
{
  return nullsub_1;
}

uint64_t CommandConfiguration.defaultSubcommand.getter()
{
  return *(void *)(v0 + 112);
}

uint64_t CommandConfiguration.defaultSubcommand.setter(uint64_t result, uint64_t a2)
{
  *(void *)(v2 + 112) = result;
  *(void *)(v2 + 120) = a2;
  return result;
}

uint64_t (*CommandConfiguration.defaultSubcommand.modify())()
{
  return nullsub_1;
}

uint64_t CommandConfiguration.helpNames.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 128);
  return swift_bridgeObjectRetain();
}

uint64_t CommandConfiguration.helpNames.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 128) = v2;
  return result;
}

uint64_t (*CommandConfiguration.helpNames.modify())()
{
  return nullsub_1;
}

__n128 CommandConfiguration.init(commandName:abstract:usage:discussion:version:shouldDisplay:subcommands:defaultSubcommand:helpNames:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, char a12, __n128 a13, uint64_t a14, uint64_t *a15)
{
  __n128 result = a13;
  uint64_t v16 = *a15;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = 0;
  *(void *)(a9 + 24) = 0;
  *(void *)(a9 + 32) = a3;
  *(void *)(a9 + 40) = a4;
  *(void *)(a9 + 48) = a5;
  *(void *)(a9 + 56) = a6;
  *(void *)(a9 + 64) = a7;
  *(void *)(a9 + 72) = a8;
  *(void *)(a9 + 80) = a10;
  *(void *)(a9 + 88) = a11;
  *(unsigned char *)(a9 + 96) = a12;
  *(__n128 *)(a9 + 104) = a13;
  *(void *)(a9 + 120) = a14;
  *(void *)(a9 + 128) = v16;
  return result;
}

__n128 CommandConfiguration.init(commandName:_superCommandName:abstract:usage:discussion:version:shouldDisplay:subcommands:defaultSubcommand:helpNames:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, uint64_t a11, uint64_t a12, char a13, __n128 a14, uint64_t a15, uint64_t *a16)
{
  __n128 result = a14;
  uint64_t v17 = *a16;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(void *)(a9 + 80) = a11;
  *(void *)(a9 + 88) = a12;
  *(unsigned char *)(a9 + 96) = a13;
  *(__n128 *)(a9 + 104) = a14;
  *(void *)(a9 + 120) = a15;
  *(void *)(a9 + 128) = v17;
  return result;
}

__n128 CommandConfiguration.init(commandName:abstract:discussion:version:shouldDisplay:subcommands:defaultSubcommand:helpNames:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, __n128 a11, uint64_t a12, uint64_t *a13)
{
  __n128 result = a11;
  uint64_t v14 = *a13;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = 0;
  *(void *)(a9 + 24) = 0;
  *(void *)(a9 + 32) = a3;
  *(void *)(a9 + 40) = a4;
  *(_OWORD *)(a9 + 48) = xmmword_24872D8F0;
  *(void *)(a9 + 64) = a5;
  *(void *)(a9 + 72) = a6;
  *(void *)(a9 + 80) = a7;
  *(void *)(a9 + 88) = a8;
  *(unsigned char *)(a9 + 96) = a10;
  *(__n128 *)(a9 + 104) = a11;
  *(void *)(a9 + 120) = a12;
  *(void *)(a9 + 128) = v14;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ArgumentDefinition.Help(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for CommandConfiguration()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CommandConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CommandConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for CommandConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CommandConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 136)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CommandConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 136) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 136) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CommandConfiguration()
{
  return &type metadata for CommandConfiguration;
}

unint64_t sub_2486B8604(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v34 = a2;
  uint64_t v35 = a1;
  uint64_t v37 = sub_24872D100();
  MEMORY[0x270FA5388](v37);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v9 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v9) {
    return 0;
  }
  uint64_t v41 = 0;
  unint64_t v42 = 0xE000000000000000;
  unint64_t v38 = 4 * v9;
  long long v36 = (void (**)(char *, uint64_t))(v6 + 8);
  swift_bridgeObjectRetain();
  char v10 = 1;
  while (1)
  {
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_24872C5B0();
    swift_bridgeObjectRelease();
    unint64_t v12 = sub_24872C5B0();
    unint64_t v13 = sub_24872C6A0();
    unint64_t v15 = v14;
    if ((sub_24872C4C0() & 1) == 0)
    {
LABEL_11:
      if ((sub_24872C4B0() & 1) == 0) {
        goto LABEL_18;
      }
      if ((sub_24872C4C0() & 1) == 0) {
        goto LABEL_16;
      }
      unint64_t result = sub_2486F2EE0(v13, v15);
      if ((result & 0x100000000) != 0) {
        goto LABEL_54;
      }
      sub_24872D110();
      char v18 = sub_24872D0F0();
      (*v36)(v8, v37);
      if ((v18 & 1) == 0)
      {
LABEL_16:
        if (sub_24872C4B0() & 1) != 0 && (sub_24872C4A0())
        {
LABEL_18:
          if (v13 == v35 && v15 == v34) {
            char v10 = 0;
          }
          else {
            char v10 = sub_24872CEB0() ^ 1;
          }
          goto LABEL_7;
        }
      }
      goto LABEL_20;
    }
    unint64_t result = sub_2486F2EE0(v13, v15);
    if ((result & 0x100000000) != 0) {
      break;
    }
    sub_24872D110();
    char v17 = sub_24872D0E0();
    (*v36)(v8, v37);
    if ((v17 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_20:
    if (v10)
    {
      uint64_t v19 = v41 & 0xFFFFFFFFFFFFLL;
      if ((v42 & 0x2000000000000000) != 0) {
        uint64_t v19 = HIBYTE(v42) & 0xF;
      }
      if (v19)
      {
        uint64_t v39 = 0;
        unint64_t v40 = 0xE000000000000000;
        sub_24872C4E0();
        sub_24872C600();
        swift_bridgeObjectRelease();
      }
    }
    if (v38 <= v12 >> 14) {
      goto LABEL_6;
    }
    swift_bridgeObjectRetain();
    unint64_t v20 = sub_24872C6A0();
    unint64_t v22 = v21;
    if (sub_24872C4C0())
    {
      unint64_t result = sub_2486F2EE0(v20, v22);
      if ((result & 0x100000000) != 0) {
        goto LABEL_53;
      }
      sub_24872D110();
      char v23 = sub_24872D0E0();
      (*v36)(v8, v37);
      if (v23) {
        goto LABEL_36;
      }
    }
    if ((sub_24872C4B0() & 1) == 0) {
      goto LABEL_5;
    }
    if (sub_24872C4C0())
    {
      unint64_t result = sub_2486F2EE0(v20, v22);
      if ((result & 0x100000000) != 0) {
        goto LABEL_56;
      }
      sub_24872D110();
      char v24 = sub_24872D0F0();
      (*v36)(v8, v37);
      if (v24) {
        goto LABEL_36;
      }
    }
    if ((sub_24872C4B0() & 1) == 0)
    {
LABEL_36:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v25 = sub_24872C4A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v25) {
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRetain();
    unint64_t v26 = sub_24872C5B0();
    swift_bridgeObjectRelease();
    if (v38 <= v26 >> 14) {
      goto LABEL_6;
    }
    swift_bridgeObjectRetain();
    sub_24872C5B0();
    unint64_t v27 = sub_24872C6A0();
    unint64_t v29 = v28;
    if (sub_24872C4C0())
    {
      unint64_t result = sub_2486F2EE0(v27, v29);
      if ((result & 0x100000000) != 0) {
        goto LABEL_55;
      }
      sub_24872D110();
      char v30 = sub_24872D0D0();
      (*v36)(v8, v37);
      if (v30)
      {
LABEL_48:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v10 = 1;
        goto LABEL_7;
      }
    }
    if ((sub_24872C4A0() & 1) == 0)
    {
LABEL_5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_6:
      char v10 = 0;
      goto LABEL_7;
    }
    if (sub_24872C4C0())
    {
      unint64_t result = sub_2486F2EE0(v27, v29);
      if ((result & 0x100000000) != 0) {
        goto LABEL_57;
      }
      sub_24872D110();
      char v31 = sub_24872D0F0();
      (*v36)(v8, v37);
      if (v31) {
        goto LABEL_48;
      }
    }
    if ((sub_24872C4B0() & 1) == 0) {
      goto LABEL_48;
    }
    char v32 = sub_24872C4A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v10 = v32 ^ 1;
LABEL_7:
    sub_24872C470();
    swift_bridgeObjectRelease();
    sub_24872C600();
    swift_bridgeObjectRelease();
    if (v38 == v11 >> 14)
    {
      swift_bridgeObjectRelease();
      return v41;
    }
  }
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
  return result;
}

double sub_2486B8BC0@<D0>(uint64_t a1@<X8>)
{
  return static ParsableCommand.configuration.getter(a1);
}

double static ParsableCommand.configuration.getter@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0xE000000000000000;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0xE000000000000000;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0xE000000000000000;
  *(unsigned char *)(a1 + 96) = 1;
  *(void *)(a1 + 104) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  return result;
}

void sub_2486B8C10()
{
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ParsableCommand.run()()
{
  uint64_t v2 = v0;
  uint64_t v9 = v0;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(boxed_opaque_existential_1Tm, v1, v2);
  sub_2486B8F5C();
  swift_allocError();
  uint64_t v5 = v4;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  uint64_t DynamicType = swift_getDynamicType();
  uint64_t v7 = v10;
  *(void *)uint64_t v5 = DynamicType;
  *(void *)(v5 + 8) = v7;
  *(unsigned char *)(v5 + 16) = 0;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  swift_willThrow();
}

uint64_t static ParsableCommand.parseAsRoot(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  unint64_t v40 = sub_248706204(v4, a2);
  uint64_t v41 = v7;
  uint64_t v42 = v8;
  if (a1)
  {
    uint64_t v9 = a1;
  }
  else
  {
    if (qword_26B1401B0 != -1) {
      swift_once();
    }
    uint64_t v10 = qword_26B1412C0;
    uint64_t v11 = *(void *)(qword_26B1412C0 + 16);
    sub_24872CEE0();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain_n();
    uint64_t v12 = swift_dynamicCastClass();
    if (!v12)
    {
      swift_bridgeObjectRelease();
      uint64_t v12 = MEMORY[0x263F8EE78];
    }
    uint64_t v13 = *(void *)(v12 + 16);
    swift_release();
    if (v13 == v11 - (v11 != 0))
    {
      uint64_t v9 = swift_dynamicCastClass();
      swift_bridgeObjectRelease();
      if (!v9)
      {
        swift_bridgeObjectRelease();
        uint64_t v9 = MEMORY[0x263F8EE78];
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_2486B9904(v10, v10 + 32, v11 != 0, (2 * v11) | 1);
      uint64_t v9 = v23;
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRetain();
  sub_2487035E4(v9, (uint64_t)&v28);
  swift_bridgeObjectRelease();
  if (v39)
  {
    long long v14 = v28;
    uint64_t v15 = v29;
    uint64_t v16 = v30;
    uint64_t v17 = v31;
    uint64_t v18 = v32;
    uint64_t v19 = v33;
    uint64_t v43 = v34;
    uint64_t v26 = v36;
    uint64_t v27 = v35;
    uint64_t v25 = v37;
    char v24 = v38;
    sub_2486BAF70();
    swift_willThrowTypedImpl();
    swift_allocError();
    *(_OWORD *)uint64_t v20 = v14;
    *(void *)(v20 + 16) = v15;
    *(void *)(v20 + 24) = v16;
    *(void *)(v20 + 32) = v17;
    *(void *)(v20 + 40) = v18;
    uint64_t v21 = v43;
    *(void *)(v20 + 48) = v19;
    *(void *)(v20 + 56) = v21;
    *(void *)(v20 + 64) = v27;
    *(void *)(v20 + 72) = v26;
    *(void *)(v20 + 80) = v25;
    *(unsigned char *)(v20 + 88) = v24;
  }
  else
  {
    sub_2486B7680(&v28, a3);
  }
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

unint64_t sub_2486B8F5C()
{
  unint64_t result = qword_26931E138;
  if (!qword_26931E138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E138);
  }
  return result;
}

unint64_t static ParsableCommand._commandName.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void *__return_ptr))(a2 + 16))(v7);
  unint64_t v2 = v7[0];
  uint64_t v3 = v7[1];
  swift_bridgeObjectRetain();
  sub_2486BAFC4((uint64_t)v7);
  if (!v3)
  {
    swift_getMetatypeMetadata();
    uint64_t v4 = sub_24872C540();
    unint64_t v2 = sub_2486B8604(45, 0xE100000000000000, v4, v5);
    swift_bridgeObjectRelease();
  }
  return v2;
}

char *static ParsableCommand.helpMessage(for:columns:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  return static ParsableCommand.helpMessage(for:includeHidden:columns:)(a1, a2, 0, a3, a4 & 1, a6, a6);
}

char *static ParsableCommand.helpMessage(for:includeHidden:columns:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = sub_248706204(v7, a7);
  unint64_t v13 = sub_2486E0C40((uint64_t)v12, a1);
  unint64_t v14 = v13;
  if (!(v13 >> 62))
  {
    uint64_t v15 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v15) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v19 = MEMORY[0x263F8EE78];
    if (*(void *)(MEMORY[0x263F8EE78] + 16)) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v15 = sub_24872CC60();
  if (!v15) {
    goto LABEL_15;
  }
LABEL_3:
  v26[0] = MEMORY[0x263F8EE78];
  unint64_t result = sub_2486B9DF0(0, v15 & ~(v15 >> 63), 0);
  if ((v15 & 0x8000000000000000) == 0)
  {
    char v17 = a5;
    uint64_t v18 = 0;
    uint64_t v19 = v26[0];
    do
    {
      if ((v14 & 0xC000000000000001) != 0) {
        uint64_t v20 = MEMORY[0x24C57C5F0](v18, v14);
      }
      else {
        uint64_t v20 = swift_retain();
      }
      long long v24 = *(_OWORD *)(v20 + 16);
      swift_release();
      v26[0] = v19;
      unint64_t v22 = *(void *)(v19 + 16);
      unint64_t v21 = *(void *)(v19 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_2486B9DF0((char *)(v21 > 1), v22 + 1, 1);
        uint64_t v19 = v26[0];
      }
      ++v18;
      *(void *)(v19 + 16) = v22 + 1;
      *(_OWORD *)(v19 + 16 * v22 + 32) = v24;
    }
    while (v15 != v18);
    swift_bridgeObjectRelease();
    a5 = v17;
    if (*(void *)(v19 + 16)) {
      goto LABEL_13;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400D8);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_24872D630;
    *(_OWORD *)(v19 + 32) = *((_OWORD *)v12 + 1);
LABEL_13:
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    char v25 = a3 & 1;
    sub_2486D5DE8(v19, &v25, v26);
    swift_bridgeObjectRelease();
    unint64_t v23 = sub_2486D0FDC(a4, a5 & 1);
    sub_2486B61F8((uint64_t)v26);
    return (char *)v23;
  }
  __break(1u);
  return result;
}

uint64_t static ParsableCommand.main(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  static ParsableCommand.parseAsRoot(_:)(a1, a3, (uint64_t)v6);
  uint64_t v3 = v7;
  uint64_t v4 = v8;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v6);
}

uint64_t static ParsableCommand.main()(uint64_t a1, uint64_t a2)
{
  return static ParsableCommand.main(_:)(0, a1, a2);
}

uint64_t sub_2486B9378(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  unsigned __int8 v11 = 2;
  uint64_t v4 = sub_2486B583C(v2, v3, &v11, 0, 0, 0);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = v5 - 1;
    uint64_t v7 = (unsigned char *)(v4 + 177);
    do
    {
      uint64_t v8 = v6;
      if (*v7 == 4) {
        uint64_t v9 = (*(void *)(v7 - 145) == 0) & (*(v7 - 137) >> 1);
      }
      else {
        uint64_t v9 = 0;
      }
      if (v9) {
        break;
      }
      --v6;
      v7 += 192;
    }
    while (v8);
  }
  else
  {
    uint64_t v9 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_2486B9420(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  unsigned __int8 v11 = 2;
  uint64_t v4 = sub_2486B583C(v2, v3, &v11, 0, 0, 0);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = v5 - 1;
    uint64_t v7 = (unsigned char *)(v4 + 177);
    do
    {
      uint64_t v8 = v6;
      if (*v7 == 6) {
        uint64_t v9 = (*(void *)(v7 - 145) == 0) & (*(v7 - 137) >> 1);
      }
      else {
        uint64_t v9 = 0;
      }
      if (v9) {
        break;
      }
      --v6;
      v7 += 192;
    }
    while (v8);
  }
  else
  {
    uint64_t v9 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_2486B94C8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void *__return_ptr))(a2 + 16))(v5);
  uint64_t v2 = sub_2486BAFC4((uint64_t)v5);
  if (v5[14]) {
    char v3 = sub_2486B9378(v2, v5[15]);
  }
  else {
    char v3 = 0;
  }
  return v3 & 1;
}

unint64_t sub_2486B9528()
{
  if (qword_26931E010 != -1) {
    swift_once();
  }
  if (*((void *)&xmmword_269323DF0 + 1))
  {
    unint64_t v0 = xmmword_269323DF0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E148);
    uint64_t v1 = sub_24872C540();
    unint64_t v0 = sub_2486B8604(45, 0xE100000000000000, v1, v2);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_2486B95F8(uint64_t a1, uint64_t a2)
{
  return sub_2486B9674(a1, a2, &qword_26931E198);
}

uint64_t sub_2486B9604(uint64_t a1, uint64_t a2)
{
  return sub_2486B9754(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_2486BB108);
}

double sub_2486B9630@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0xE000000000000000;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0xE000000000000000;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0xE000000000000000;
  *(unsigned char *)(a1 + 96) = 1;
  *(void *)(a1 + 104) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  return result;
}

unint64_t sub_2486B9668(uint64_t a1, uint64_t a2)
{
  return sub_2486B9674(a1, a2, &qword_26931E1A0);
}

unint64_t sub_2486B9674(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  memset(v8, 0, sizeof(v8));
  uint64_t v9 = 0;
  unint64_t v10 = 0xE000000000000000;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  char v17 = 1;
  uint64_t v18 = MEMORY[0x263F8EE78];
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  sub_2486BAFC4((uint64_t)v8);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v4 = sub_24872C540();
  unint64_t v6 = sub_2486B8604(45, 0xE100000000000000, v4, v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_2486B9728(uint64_t a1, uint64_t a2)
{
  return sub_2486B9754(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_2486BB118);
}

uint64_t sub_2486B9754(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v17 = a2;
  uint64_t v16 = a1;
  uint64_t v6 = *v3;
  uint64_t v7 = v3[1];
  uint64_t v8 = *((unsigned __int8 *)v3 + 16);
  v14[0] = v6;
  v14[1] = v7;
  char v15 = v8;
  sub_2486B8F5C();
  swift_allocError();
  uint64_t v10 = v9;
  __swift_project_boxed_opaque_existential_1(v14, a1);
  uint64_t DynamicType = swift_getDynamicType();
  uint64_t v12 = v17;
  *(void *)uint64_t v10 = DynamicType;
  *(void *)(v10 + 8) = v12;
  *(unsigned char *)(v10 + 16) = 0;
  a3(v6, v7, v8);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return swift_willThrow();
}

uint64_t sub_2486B981C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
  uint64_t v5 = swift_allocObject();
  size_t v6 = _swift_stdlib_malloc_size((const void *)v5);
  *(void *)(v5 + 16) = v2;
  *(void *)(v5 + 24) = 2 * ((uint64_t)(v6 - 32) / 192);
  uint64_t v7 = sub_2486FBF58(&v9, (char *)(v5 + 32), v2, a1, a2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7 != (void *)v2)
  {
    __break(1u);
    return MEMORY[0x263F8EE78];
  }
  return v5;
}

void sub_2486B9904(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
LABEL_11:
    __break(1u);
    return;
  }
  if (v5)
  {
    if (v5 <= 0)
    {
      if (v4 != a3)
      {
LABEL_7:
        swift_arrayInitWithCopy();
        return;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B140108);
      uint64_t v7 = (void *)swift_allocObject();
      int64_t v8 = _swift_stdlib_malloc_size(v7);
      uint64_t v9 = v8 - 32;
      if (v8 < 32) {
        uint64_t v9 = v8 - 17;
      }
      v7[2] = v5;
      v7[3] = 2 * (v9 >> 4);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
    goto LABEL_11;
  }
}

void sub_2486B99D4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
LABEL_11:
    __break(1u);
    return;
  }
  if (v5)
  {
    if (v5 <= 0)
    {
      if (v4 != a3)
      {
LABEL_7:
        swift_arrayInitWithCopy();
        return;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FCC0);
      uint64_t v7 = (void *)swift_allocObject();
      int64_t v8 = _swift_stdlib_malloc_size(v7);
      uint64_t v9 = v8 - 32;
      if (v8 < 32) {
        uint64_t v9 = v8 + 31;
      }
      v7[2] = v5;
      v7[3] = 2 * (v9 >> 6);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
    goto LABEL_11;
  }
}

void *sub_2486B9AA4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FCB8);
  char v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 24);
  uint64_t v5 = sub_2486BADC0(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_2486BB100();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_2486B9B9C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v3 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v2 == -1) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v5 = result;
  if (v3 <= 0)
  {
    size_t v6 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E170);
    size_t v6 = (void *)swift_allocObject();
    int64_t v7 = _swift_stdlib_malloc_size(v6);
    uint64_t v8 = v7 - 32;
    if (v7 < 32) {
      uint64_t v8 = v7 - 25;
    }
    v6[2] = v3;
    v6[3] = 2 * (v8 >> 3);
  }
  double result = sub_2486FC074((uint64_t)&v9, (uint64_t)(v6 + 4), v3, v5, a2);
  if (result == v3) {
    return (uint64_t)v6;
  }
LABEL_14:
  __break(1u);
  return result;
}

char *sub_2486B9C70(char *a1, int64_t a2, char a3)
{
  double result = sub_2486BA1C0(a1, a2, a3, *v3, &qword_26B1400E8);
  *uint64_t v3 = result;
  return result;
}

char *sub_2486B9CA0(char *a1, int64_t a2, char a3)
{
  double result = sub_2486B9E50(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_2486B9CC0(void *a1, int64_t a2, char a3)
{
  double result = sub_2486B9F6C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_2486B9CE0(char *a1, int64_t a2, char a3)
{
  double result = sub_2486BA0A8(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_2486B9D00(char *a1, int64_t a2, char a3)
{
  double result = sub_2486BA2DC(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_2486B9D20(void *a1, int64_t a2, char a3)
{
  double result = sub_2486BA3FC(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_2486B9D40(char *a1, int64_t a2, char a3)
{
  double result = sub_2486BA538(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_2486B9D60(char *a1, int64_t a2, char a3)
{
  double result = sub_2486BA1C0(a1, a2, a3, *v3, &qword_26B1400F0);
  *uint64_t v3 = result;
  return result;
}

char *sub_2486B9D90(char *a1, int64_t a2, char a3)
{
  double result = sub_2486BA63C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_2486B9DB0(char *a1, int64_t a2, char a3)
{
  double result = sub_2486BA754(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_2486B9DD0(char *a1, int64_t a2, char a3)
{
  double result = sub_2486BA858(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_2486B9DF0(char *a1, int64_t a2, char a3)
{
  double result = sub_2486BA978(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_2486B9E10(char *a1, int64_t a2, char a3)
{
  double result = sub_2486BAB80(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_2486B9E30(void *a1, int64_t a2, char a3)
{
  double result = sub_2486BAC9C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_2486B9E50(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 192);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[192 * v8]) {
      memmove(v12, v13, 192 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_2486B9F6C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E188);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[6 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 48 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E190);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_2486BA0A8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FCC0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8]) {
      memmove(v13, v14, v8 << 6);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_2486BA1AC(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2486BA1C0(a1, a2, a3, a4, &qword_26B1400F0);
}

char *sub_2486BA1C0(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    int64_t v11 = (char *)swift_allocObject();
    size_t v12 = _swift_stdlib_malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    int64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v11 + 32;
  unint64_t v14 = a4 + 32;
  if (v6)
  {
    if (v11 != a4 || v13 >= &v14[24 * v9]) {
      memmove(v13, v14, 24 * v9);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v11;
}

char *sub_2486BA2DC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400E0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  size_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_2486BA3FC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E178);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[3 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E180);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_2486BA538(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B140108);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_2486BA63C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E168);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_2486BA754(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E150);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_2486BA858(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E160);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[88 * v8]) {
      memmove(v12, v13, 88 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_2486BA978(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400D8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_release();
  return v10;
}

char *sub_2486BAA74(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FCB8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 24 * v8;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v14);
  }
  swift_release();
  return v10;
}

char *sub_2486BAB80(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E158);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_2486BAC9C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400F8);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    uint64_t v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[4 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B140198);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_2486BADC0(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *double result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    uint64_t v13 = *(void *)(a4 + 48) + 24 * v12;
    char v14 = *(unsigned char *)(v13 + 16);
    char v15 = *(unsigned char *)(v13 + 17);
    *(_OWORD *)a2 = *(_OWORD *)v13;
    *(unsigned char *)(a2 + 16) = v14;
    *(unsigned char *)(a2 + 17) = v15;
    a2 += 24;
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v16 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v16 >= v10) {
    goto LABEL_30;
  }
  unint64_t v17 = *(void *)(v4 + 8 * v16);
  if (v17) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v16 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v16;
    goto LABEL_34;
  }
  unint64_t v17 = *(void *)(v4 + 8 * v8);
  if (v17)
  {
LABEL_15:
    int64_t v16 = v8;
LABEL_19:
    unint64_t v19 = __clz(__rbit64(v17));
    unint64_t v7 = (v17 - 1) & v17;
    unint64_t v12 = v19 + (v16 << 6);
    int64_t v8 = v16;
    goto LABEL_8;
  }
  int64_t v18 = v16 + 2;
  if (v16 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v17 = *(void *)(v4 + 8 * v18);
  if (v17)
  {
LABEL_18:
    int64_t v16 = v18;
    goto LABEL_19;
  }
  int64_t v8 = v16 + 3;
  if (v16 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v16 + 2;
    goto LABEL_34;
  }
  unint64_t v17 = *(void *)(v4 + 8 * v8);
  if (v17) {
    goto LABEL_15;
  }
  int64_t v18 = v16 + 4;
  if (v16 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v4 + 8 * v18);
  if (v17) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v16 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v16 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v17 = *(void *)(v4 + 8 * v16);
    ++v18;
    if (v17) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

unint64_t sub_2486BAF70()
{
  unint64_t result = qword_26931E140;
  if (!qword_26931E140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E140);
  }
  return result;
}

uint64_t sub_2486BAFC4(uint64_t a1)
{
  return a1;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t dispatch thunk of static ParsableCommand.configuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static ParsableCommand._commandName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ParsableCommand.run()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_2486BB100()
{
  return swift_release();
}

uint64_t sub_2486BB108(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_2486BB118(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_2486BB128(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a5;
  uint64_t v30 = a8;
  uint64_t v10 = v9;
  char v38 = a1;
  uint64_t v39 = a2;
  uint64_t v28 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  unint64_t v40 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v36 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  char v15 = (char *)&v26 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v33 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  MEMORY[0x270FA5388](v17);
  unint64_t v19 = (char *)&v26 - v18;
  uint64_t v34 = v8;
  uint64_t v20 = sub_24872C8A0();
  if (!v20) {
    return sub_24872C7C0();
  }
  uint64_t v21 = v20;
  uint64_t v27 = v15;
  uint64_t v43 = sub_24872C440();
  uint64_t v35 = sub_24872CB80();
  sub_24872CB50();
  uint64_t v41 = v19;
  uint64_t result = sub_24872C890();
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v23 = (void (**)(char *))(v36 + 2);
    ++v36;
    uint64_t v37 = v23;
    long long v24 = v27;
    while (1)
    {
      char v25 = (void (*)(char *, void))sub_24872C8D0();
      (*v37)(v24);
      v25(v42, 0);
      v38(v24, v40);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v36)(v24, AssociatedTypeWitness);
      sub_24872CB60();
      sub_24872C8B0();
      if (!--v21)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
        return v43;
      }
    }
    (*v36)(v24, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v40, v29);
  }
  return result;
}

uint64_t ExpressibleByArgument.defaultValueDescription.getter()
{
  return 0;
}

uint64_t sub_2486BB56C()
{
  return MEMORY[0x263F8EE78];
}

uint64_t static ExpressibleByArgument.allValueStrings.getter()
{
  return MEMORY[0x263F8EE78];
}

void sub_2486BB584(uint64_t a1@<X8>)
{
}

void static ExpressibleByArgument.defaultCompletionKind.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 4;
}

uint64_t static ExpressibleByArgument<>.allValueStrings.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v9 = &v14[-v8];
  sub_24872CAE0();
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v12 = sub_2486BB128((void (*)(char *, char *))sub_2486BB7EC, (uint64_t)v14, AssociatedTypeWitness, MEMORY[0x263F8D310], MEMORY[0x263F8E628], AssociatedConformanceWitness, MEMORY[0x263F8E658], v11);
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, AssociatedTypeWitness);
  return v12;
}

uint64_t sub_2486BB71C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = sub_24872C540();
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_2486BB7EC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2486BB71C(a1, a2);
}

uint64_t static ExpressibleByArgument<>.defaultCompletionKind.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(a1 + 24))();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  return result;
}

uint64_t static ExpressibleByArgument<>.allValueStrings.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v13 = &v19[-v12];
  sub_24872CAE0();
  uint64_t v25 = a1;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v29 = a5;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v23 = a5;
  uint64_t v24 = KeyPath;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v17 = sub_2486BB128((void (*)(char *, char *))sub_2486BBAE0, (uint64_t)v19, AssociatedTypeWitness, MEMORY[0x263F8D310], MEMORY[0x263F8E628], AssociatedConformanceWitness, MEMORY[0x263F8E658], v16);
  (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, AssociatedTypeWitness);
  swift_release();
  return v17;
}

uint64_t sub_2486BB9F8()
{
  return sub_24872C750();
}

uint64_t sub_2486BBA2C()
{
  return 40;
}

__n128 sub_2486BBA38(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2486BBA4C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *(void *)(a2 + a1 - 8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t result = v5(AssociatedTypeWitness, v4);
  *a3 = result;
  a3[1] = v8;
  return result;
}

uint64_t sub_2486BBAC0()
{
  return 40;
}

__n128 sub_2486BBACC(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2486BBAE0()
{
  return swift_getAtKeyPath();
}

uint64_t ExpressibleByArgument<>.defaultValueDescription.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v8 = (char *)&v11 - v7;
  sub_24872C750();
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(AssociatedTypeWitness, a4);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
  return v9;
}

uint64_t sub_2486BBC38@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_2486BBC40()
{
  return 0;
}

void sub_2486BBC90(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 4;
}

uint64_t RawRepresentable<>.init(argument:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v36 = a6;
  uint64_t v10 = sub_24872C8E0();
  uint64_t v31 = *(void *)(v10 - 8);
  uint64_t v32 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v34 = (char *)&v30 - v11;
  uint64_t v33 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = sub_24872C8E0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v30 - v16;
  uint64_t v18 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v15);
  uint64_t v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v30 - v22;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 8))(a1, v35, AssociatedTypeWitness, a5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    uint64_t v24 = *(void *)(a3 - 8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v23, v17, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, AssociatedTypeWitness);
    uint64_t v25 = v34;
    sub_24872C760();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v23, AssociatedTypeWitness);
    uint64_t v24 = *(void *)(a3 - 8);
    uint64_t v26 = v24;
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v25, 1, a3))
    {
      uint64_t v28 = v36;
      (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v36, v25, a3);
      uint64_t v27 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v28, v27, 1, a3);
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v25, v32);
  }
  uint64_t v26 = v24;
  uint64_t v27 = 1;
  uint64_t v28 = v36;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v28, v27, 1, a3);
}

uint64_t LosslessStringConvertible<>.init(argument:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24872C8E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - v6;
  sub_24872CE90();
  uint64_t v8 = *(void *)(a1 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, a1))
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v9 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v7, a1);
    uint64_t v9 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v9, 1, a1);
}

uint64_t sub_2486BC200@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_2486C1908(a1, a2, (uint64_t (*)(void))sub_2486BEA08, (uint64_t (*)(void *, uint64_t, uint64_t))sub_2486BEF78);
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = v5 & 1;
  return result;
}

uint64_t sub_2486BC25C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2486C19D4(a1, a2, (uint64_t (*)(void))sub_2486BD148, (uint64_t (*)(void *, uint64_t, uint64_t))sub_2486BD710);
  *a3 = result;
  a3[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_2486BC2B8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_2486C1A84(a1, a2, (uint64_t (*)(void))sub_2486BD9C4, (uint64_t (*)(void *, uint64_t, uint64_t))sub_2486BDF8C);
  *(_WORD *)a3 = result;
  *(unsigned char *)(a3 + 2) = BYTE2(result) & 1;
  return result;
}

unint64_t sub_2486BC314@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t result = sub_2486C1B38(a1, a2, (uint64_t (*)(void))sub_2486BE240, (uint64_t (*)(void *, uint64_t, uint64_t))sub_2486BE788);
  *(_DWORD *)a3 = result;
  *(unsigned char *)(a3 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_2486BC370@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_2486C1908(a1, a2, (uint64_t (*)(void))sub_2486C0E8C, (uint64_t (*)(void *, uint64_t, uint64_t))sub_2486C148C);
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = v5 & 1;
  return result;
}

uint64_t sub_2486BC3C8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2486C19D4(a1, a2, (uint64_t (*)(void))sub_2486BF1F4, (uint64_t (*)(void *, uint64_t, uint64_t))sub_2486BF904);
  *a3 = result;
  a3[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_2486BC420()
{
  BYTE8(v2) = 0;
  *(void *)&long long v2 = *v0;
  sub_24872CBB0();
  return *(void *)((char *)&v2 + 1);
}

uint64_t sub_2486BC470@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_2486C1A84(a1, a2, (uint64_t (*)(void))sub_2486BFBAC, (uint64_t (*)(void *, uint64_t, uint64_t))sub_2486C02B4);
  *(_WORD *)a3 = result;
  *(unsigned char *)(a3 + 2) = BYTE2(result) & 1;
  return result;
}

uint64_t sub_2486BC4C8()
{
  WORD4(v2) = 0;
  *(void *)&long long v2 = *v0;
  sub_24872CBB0();
  return *(void *)((char *)&v2 + 2);
}

unint64_t sub_2486BC518@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t result = sub_2486C1B38(a1, a2, (uint64_t (*)(void))sub_2486C055C, (uint64_t (*)(void *, uint64_t, uint64_t))sub_2486C0C0C);
  *(_DWORD *)a3 = result;
  *(unsigned char *)(a3 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_2486BC570()
{
  uint64_t v2 = *v0;
  sub_24872CBB0();
  return HIDWORD(v2);
}

uint64_t sub_2486BC5C0()
{
  return 0;
}

unint64_t sub_2486BC610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t result = sub_2486BCED4(a1, a2);
  *(_DWORD *)a3 = result;
  *(unsigned char *)(a3 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_2486BC640()
{
  uint64_t v2 = *v0;
  sub_24872CBB0();
  return HIDWORD(v2);
}

uint64_t sub_2486BC690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_2486BCCDC(a1, a2);
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = v5 & 1;
  return result;
}

uint64_t sub_2486BC6C0()
{
  return 0;
}

uint64_t sub_2486BC710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2486C1708(a1, a2);
  *a3 = result;
  return result;
}

uint64_t dispatch thunk of ExpressibleByArgument.init(argument:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ExpressibleByArgument.defaultValueDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static ExpressibleByArgument.allValueStrings.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static ExpressibleByArgument.defaultCompletionKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_2486BC788()
{
  unint64_t v0 = sub_24872C6D0();
  uint64_t v4 = sub_2486BC808(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_2486BC808(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_2486BC960(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = sub_2486BCA60(v9, 0);
      unint64_t v12 = sub_2486BCAC8((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_24872CB30();
LABEL_4:
        JUMPOUT(0x24C57C060);
      }
    }
    else
    {
      uint64_t v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x24C57C060](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x24C57C060]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_2486BC960(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_2486E2E68(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_2486E2E68(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x270F9D808](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x270F9D808](a1, a2, a3, a4);
}

void *sub_2486BCA60(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1A8);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

unint64_t sub_2486BCAC8(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_2486E2E68(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_24872C660();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_24872CB30();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_2486E2E68(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_24872C630();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_2486BCCDC(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    sub_24872CAA0();
    swift_bridgeObjectRelease();
    char v6 = v9;
  }
  else
  {
    MEMORY[0x270FA5388](a1);
    if ((a2 & 0x2000000000000000) != 0)
    {
      char v6 = (v3 > 0x20u || ((0x100003E01uLL >> v3) & 1) == 0)
        && (unint64_t v7 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
        && *v7 == 0;
    }
    else
    {
      if ((v3 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = v3 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_24872CB30();
      }
      char v6 = sub_2486BCE74(v4, v5, (void (*)(uint64_t *__return_ptr))sub_2486C1808);
    }
    swift_bridgeObjectRelease();
  }
  if (v6) {
    return 0;
  }
  else {
    return 0;
  }
}

uint64_t sub_2486BCE74(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

unint64_t sub_2486BCED4(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    sub_24872CAA0();
    swift_bridgeObjectRelease();
    char v6 = v9;
  }
  else
  {
    MEMORY[0x270FA5388](a1);
    if ((a2 & 0x2000000000000000) != 0)
    {
      char v6 = (v3 > 0x20u || ((0x100003E01uLL >> v3) & 1) == 0)
        && (unint64_t v7 = (unsigned char *)_swift_stdlib_strtof_clocale()) != 0
        && *v7 == 0;
    }
    else
    {
      if ((v3 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = v3 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_24872CB30();
      }
      char v6 = sub_2486BCE74(v4, v5, (void (*)(uint64_t *__return_ptr))sub_2486C1808);
    }
    swift_bridgeObjectRelease();
  }
  return (unint64_t)((v6 & 1) == 0) << 32;
}

uint64_t sub_2486BD078(uint64_t *a1, uint64_t a2, uint64_t (*a3)(void *, uint64_t, uint64_t))
{
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    v13[0] = v5;
    v13[1] = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = v13;
    return a3(v7, v8, a2);
  }
  uint64_t v5 = sub_2486BC788();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  *a1 = v5;
  a1[1] = v11;
  unint64_t v6 = v11;
  if ((v11 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (void *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (void *)sub_24872CB30();
  }
  return a3(v7, v8, a2);
}

uint64_t sub_2486BD148(uint64_t result, unint64_t a2, uint64_t a3)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    unsigned __int8 v16 = 0;
    unsigned __int8 v66 = 0;
    goto LABEL_145;
  }
  uint64_t v5 = result;
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
    {
      uint64_t result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v6 = v5 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      uint64_t result = sub_24872CB30();
    }
    int v7 = *(unsigned __int8 *)result;
    if (v7 == 43)
    {
      if (v6 >= 1)
      {
        uint64_t v31 = v6 - 1;
        if (v6 != 1)
        {
          unsigned __int8 v32 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v33 = a3 + 55;
          }
          else
          {
            unsigned __int8 v32 = 97;
            unsigned __int8 v33 = 65;
          }
          if (a3 <= 10) {
            unsigned __int8 v34 = a3 + 48;
          }
          else {
            unsigned __int8 v34 = 58;
          }
          if (result)
          {
            LOBYTE(v12) = 0;
            uint64_t v35 = (unsigned __int8 *)(result + 1);
            do
            {
              unsigned int v36 = *v35;
              if (v36 < 0x30 || v36 >= v34)
              {
                if (v36 < 0x41 || v36 >= v33)
                {
                  unsigned __int8 v16 = 0;
                  char v17 = 1;
                  if (v36 < 0x61 || v36 >= v32) {
                    goto LABEL_144;
                  }
                  char v37 = -87;
                }
                else
                {
                  char v37 = -55;
                }
              }
              else
              {
                char v37 = -48;
              }
              int v38 = (char)v12 * (char)a3;
              char v39 = v38;
              if ((char)v38 != v38) {
                goto LABEL_143;
              }
              int v12 = (char)v38 + (char)(v36 + v37);
              if ((char)(v39 + v36 + v37) != v12) {
                goto LABEL_143;
              }
              ++v35;
              --v31;
            }
            while (v31);
LABEL_76:
            unsigned __int8 v16 = v12;
            unsigned __int8 v66 = 0;
            goto LABEL_145;
          }
          goto LABEL_99;
        }
LABEL_143:
        unsigned __int8 v16 = 0;
        char v17 = 1;
        goto LABEL_144;
      }
      goto LABEL_150;
    }
    if (v7 != 45)
    {
      if (v6)
      {
        unsigned __int8 v40 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v41 = a3 + 55;
        }
        else
        {
          unsigned __int8 v40 = 97;
          unsigned __int8 v41 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v42 = a3 + 48;
        }
        else {
          unsigned __int8 v42 = 58;
        }
        if (result)
        {
          LOBYTE(v43) = 0;
          do
          {
            unsigned int v44 = *(unsigned __int8 *)result;
            if (v44 < 0x30 || v44 >= v42)
            {
              if (v44 < 0x41 || v44 >= v41)
              {
                unsigned __int8 v16 = 0;
                char v17 = 1;
                if (v44 < 0x61 || v44 >= v40) {
                  goto LABEL_144;
                }
                char v45 = -87;
              }
              else
              {
                char v45 = -55;
              }
            }
            else
            {
              char v45 = -48;
            }
            int v46 = (char)v43 * (char)a3;
            char v47 = v46;
            if ((char)v46 != v46) {
              goto LABEL_143;
            }
            int v43 = (char)v46 + (char)(v44 + v45);
            if ((char)(v47 + v44 + v45) != v43) {
              goto LABEL_143;
            }
            ++result;
            --v6;
          }
          while (v6);
          unsigned __int8 v16 = v43;
          unsigned __int8 v66 = 0;
          goto LABEL_145;
        }
        goto LABEL_99;
      }
      goto LABEL_143;
    }
    if (v6 >= 1)
    {
      uint64_t v8 = v6 - 1;
      if (v6 != 1)
      {
        unsigned __int8 v9 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v10 = a3 + 55;
        }
        else
        {
          unsigned __int8 v9 = 97;
          unsigned __int8 v10 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v11 = a3 + 48;
        }
        else {
          unsigned __int8 v11 = 58;
        }
        if (result)
        {
          LOBYTE(v12) = 0;
          uint64_t v13 = (unsigned __int8 *)(result + 1);
          while (1)
          {
            unsigned int v14 = *v13;
            if (v14 < 0x30 || v14 >= v11)
            {
              if (v14 < 0x41 || v14 >= v10)
              {
                unsigned __int8 v16 = 0;
                char v17 = 1;
                if (v14 < 0x61 || v14 >= v9) {
                  goto LABEL_144;
                }
                char v15 = -87;
              }
              else
              {
                char v15 = -55;
              }
            }
            else
            {
              char v15 = -48;
            }
            int v18 = (char)v12 * (char)a3;
            char v19 = v18;
            if ((char)v18 != v18) {
              goto LABEL_143;
            }
            int v12 = (char)v18 - (char)(v14 + v15);
            if ((char)(v19 - (v14 + v15)) != v12) {
              goto LABEL_143;
            }
            ++v13;
            if (!--v8) {
              goto LABEL_76;
            }
          }
        }
LABEL_99:
        unsigned __int8 v16 = 0;
        char v17 = 0;
LABEL_144:
        unsigned __int8 v66 = v17;
LABEL_145:
        LOBYTE(v65[0]) = (a2 & 0x1000000000000000) != 0;
        return v16 | (v66 << 8) | (LOBYTE(v65[0]) << 16);
      }
      goto LABEL_143;
    }
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
    goto LABEL_151;
  }
  uint64_t v20 = HIBYTE(a2) & 0xF;
  v65[0] = result;
  v65[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result != 43)
  {
    if (result != 45)
    {
      if (v20)
      {
        LOBYTE(v22) = 0;
        unsigned __int8 v57 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v58 = a3 + 55;
        }
        else
        {
          unsigned __int8 v57 = 97;
          unsigned __int8 v58 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v59 = a3 + 48;
        }
        else {
          unsigned __int8 v59 = 58;
        }
        char v60 = (unsigned __int8 *)v65;
        while (1)
        {
          unsigned int v61 = *v60;
          if (v61 < 0x30 || v61 >= v59)
          {
            if (v61 < 0x41 || v61 >= v58)
            {
              unsigned __int8 v16 = 0;
              char v17 = 1;
              if (v61 < 0x61 || v61 >= v57) {
                goto LABEL_144;
              }
              char v62 = -87;
            }
            else
            {
              char v62 = -55;
            }
          }
          else
          {
            char v62 = -48;
          }
          int v63 = (char)v22 * (char)a3;
          char v64 = v63;
          if ((char)v63 != v63) {
            goto LABEL_143;
          }
          int v22 = (char)v63 + (char)(v61 + v62);
          if ((char)(v64 + v61 + v62) != v22) {
            goto LABEL_143;
          }
          ++v60;
          if (!--v20) {
            goto LABEL_142;
          }
        }
      }
      goto LABEL_143;
    }
    if (v20)
    {
      uint64_t v21 = v20 - 1;
      if (v21)
      {
        LOBYTE(v22) = 0;
        unsigned __int8 v23 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v24 = a3 + 55;
        }
        else
        {
          unsigned __int8 v23 = 97;
          unsigned __int8 v24 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v25 = a3 + 48;
        }
        else {
          unsigned __int8 v25 = 58;
        }
        uint64_t v26 = (unsigned __int8 *)v65 + 1;
        while (1)
        {
          unsigned int v27 = *v26;
          if (v27 < 0x30 || v27 >= v25)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              unsigned __int8 v16 = 0;
              char v17 = 1;
              if (v27 < 0x61 || v27 >= v23) {
                goto LABEL_144;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          int v29 = (char)v22 * (char)a3;
          char v30 = v29;
          if ((char)v29 != v29) {
            goto LABEL_143;
          }
          int v22 = (char)v29 - (char)(v27 + v28);
          if ((char)(v30 - (v27 + v28)) != v22) {
            goto LABEL_143;
          }
          ++v26;
          if (!--v21) {
            goto LABEL_142;
          }
        }
      }
      goto LABEL_143;
    }
    goto LABEL_149;
  }
  if (v20)
  {
    uint64_t v48 = v20 - 1;
    if (v48)
    {
      LOBYTE(v22) = 0;
      unsigned __int8 v49 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v50 = a3 + 55;
      }
      else
      {
        unsigned __int8 v49 = 97;
        unsigned __int8 v50 = 65;
      }
      if (a3 <= 10) {
        unsigned __int8 v51 = a3 + 48;
      }
      else {
        unsigned __int8 v51 = 58;
      }
      int v52 = (unsigned __int8 *)v65 + 1;
      do
      {
        unsigned int v53 = *v52;
        if (v53 < 0x30 || v53 >= v51)
        {
          if (v53 < 0x41 || v53 >= v50)
          {
            unsigned __int8 v16 = 0;
            char v17 = 1;
            if (v53 < 0x61 || v53 >= v49) {
              goto LABEL_144;
            }
            char v54 = -87;
          }
          else
          {
            char v54 = -55;
          }
        }
        else
        {
          char v54 = -48;
        }
        int v55 = (char)v22 * (char)a3;
        char v56 = v55;
        if ((char)v55 != v55) {
          goto LABEL_143;
        }
        int v22 = (char)v55 + (char)(v53 + v54);
        if ((char)(v56 + v53 + v54) != v22) {
          goto LABEL_143;
        }
        ++v52;
        --v48;
      }
      while (v48);
LABEL_142:
      unsigned __int8 v16 = v22;
      unsigned __int8 v66 = 0;
      goto LABEL_145;
    }
    goto LABEL_143;
  }
LABEL_151:
  __break(1u);
  return result;
}

unsigned __int8 *sub_2486BD710(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }
        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          LOBYTE(v8) = 0;
          uint64_t v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v22 = -87;
              }
              else
              {
                char v22 = -55;
              }
            }
            else
            {
              char v22 = -48;
            }
            int v23 = (char)v8 * (char)a3;
            char v24 = v23;
            if ((char)v23 != v23) {
              goto LABEL_72;
            }
            int v8 = (char)v23 + (char)(v21 + v22);
            if ((char)(v24 + v21 + v22) != v8) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          int v13 = 0;
          unsigned __int8 v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned __int8 v12 = 0;
      int v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 8));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          LOBYTE(v28) = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v30 = -87;
              }
              else
              {
                char v30 = -55;
              }
            }
            else
            {
              char v30 = -48;
            }
            int v31 = (char)v28 * (char)a3;
            char v32 = v31;
            if ((char)v31 != v31) {
              goto LABEL_72;
            }
            int v28 = (char)v31 + (char)(v29 + v30);
            if ((char)(v32 + v29 + v30) != v28) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          int v13 = 0;
          unsigned __int8 v12 = v28;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          LOBYTE(v8) = 0;
          unsigned __int8 v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            int v14 = (char)v8 * (char)a3;
            char v15 = v14;
            if ((char)v14 != v14) {
              goto LABEL_72;
            }
            int v8 = (char)v14 - (char)(v10 + v11);
            if ((char)(v15 - (v10 + v11)) != v8) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned __int8 v12 = 0;
        int v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 8));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2486BD9C4(uint64_t result, unint64_t a2, uint64_t a3)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    unsigned __int16 v16 = 0;
    unsigned __int8 v66 = 0;
    goto LABEL_145;
  }
  uint64_t v5 = result;
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
    {
      uint64_t result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v6 = v5 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      uint64_t result = sub_24872CB30();
    }
    int v7 = *(unsigned __int8 *)result;
    if (v7 == 43)
    {
      if (v6 >= 1)
      {
        uint64_t v31 = v6 - 1;
        if (v6 != 1)
        {
          unsigned __int8 v32 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v33 = a3 + 55;
          }
          else
          {
            unsigned __int8 v32 = 97;
            unsigned __int8 v33 = 65;
          }
          if (a3 <= 10) {
            unsigned __int8 v34 = a3 + 48;
          }
          else {
            unsigned __int8 v34 = 58;
          }
          if (result)
          {
            LOWORD(v12) = 0;
            uint64_t v35 = (unsigned __int8 *)(result + 1);
            do
            {
              unsigned int v36 = *v35;
              if (v36 < 0x30 || v36 >= v34)
              {
                if (v36 < 0x41 || v36 >= v33)
                {
                  unsigned __int16 v16 = 0;
                  char v17 = 1;
                  if (v36 < 0x61 || v36 >= v32) {
                    goto LABEL_144;
                  }
                  char v37 = -87;
                }
                else
                {
                  char v37 = -55;
                }
              }
              else
              {
                char v37 = -48;
              }
              int v38 = (__int16)v12 * (__int16)a3;
              __int16 v39 = v38;
              if ((__int16)v38 != v38) {
                goto LABEL_143;
              }
              int v12 = (__int16)v38 + (v36 + v37);
              if ((__int16)(v39 + (v36 + v37)) != v12) {
                goto LABEL_143;
              }
              ++v35;
              --v31;
            }
            while (v31);
LABEL_76:
            unsigned __int16 v16 = v12;
            unsigned __int8 v66 = 0;
            goto LABEL_145;
          }
          goto LABEL_99;
        }
LABEL_143:
        unsigned __int16 v16 = 0;
        char v17 = 1;
        goto LABEL_144;
      }
      goto LABEL_150;
    }
    if (v7 != 45)
    {
      if (v6)
      {
        unsigned __int8 v40 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v41 = a3 + 55;
        }
        else
        {
          unsigned __int8 v40 = 97;
          unsigned __int8 v41 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v42 = a3 + 48;
        }
        else {
          unsigned __int8 v42 = 58;
        }
        if (result)
        {
          LOWORD(v43) = 0;
          do
          {
            unsigned int v44 = *(unsigned __int8 *)result;
            if (v44 < 0x30 || v44 >= v42)
            {
              if (v44 < 0x41 || v44 >= v41)
              {
                unsigned __int16 v16 = 0;
                char v17 = 1;
                if (v44 < 0x61 || v44 >= v40) {
                  goto LABEL_144;
                }
                char v45 = -87;
              }
              else
              {
                char v45 = -55;
              }
            }
            else
            {
              char v45 = -48;
            }
            int v46 = (__int16)v43 * (__int16)a3;
            __int16 v47 = v46;
            if ((__int16)v46 != v46) {
              goto LABEL_143;
            }
            int v43 = (__int16)v46 + (v44 + v45);
            if ((__int16)(v47 + (v44 + v45)) != v43) {
              goto LABEL_143;
            }
            ++result;
            --v6;
          }
          while (v6);
          unsigned __int16 v16 = v43;
          unsigned __int8 v66 = 0;
          goto LABEL_145;
        }
        goto LABEL_99;
      }
      goto LABEL_143;
    }
    if (v6 >= 1)
    {
      uint64_t v8 = v6 - 1;
      if (v6 != 1)
      {
        unsigned __int8 v9 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v10 = a3 + 55;
        }
        else
        {
          unsigned __int8 v9 = 97;
          unsigned __int8 v10 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v11 = a3 + 48;
        }
        else {
          unsigned __int8 v11 = 58;
        }
        if (result)
        {
          LOWORD(v12) = 0;
          int v13 = (unsigned __int8 *)(result + 1);
          while (1)
          {
            unsigned int v14 = *v13;
            if (v14 < 0x30 || v14 >= v11)
            {
              if (v14 < 0x41 || v14 >= v10)
              {
                unsigned __int16 v16 = 0;
                char v17 = 1;
                if (v14 < 0x61 || v14 >= v9) {
                  goto LABEL_144;
                }
                char v15 = -87;
              }
              else
              {
                char v15 = -55;
              }
            }
            else
            {
              char v15 = -48;
            }
            int v18 = (__int16)v12 * (__int16)a3;
            __int16 v19 = v18;
            if ((__int16)v18 != v18) {
              goto LABEL_143;
            }
            int v12 = (__int16)v18 - (v14 + v15);
            if ((__int16)(v19 - (v14 + v15)) != v12) {
              goto LABEL_143;
            }
            ++v13;
            if (!--v8) {
              goto LABEL_76;
            }
          }
        }
LABEL_99:
        unsigned __int16 v16 = 0;
        char v17 = 0;
LABEL_144:
        unsigned __int8 v66 = v17;
LABEL_145:
        LOBYTE(v65[0]) = (a2 & 0x1000000000000000) != 0;
        return v16 | (v66 << 16) | (LOBYTE(v65[0]) << 24);
      }
      goto LABEL_143;
    }
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
    goto LABEL_151;
  }
  uint64_t v20 = HIBYTE(a2) & 0xF;
  v65[0] = result;
  v65[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result != 43)
  {
    if (result != 45)
    {
      if (v20)
      {
        LOWORD(v22) = 0;
        unsigned __int8 v57 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v58 = a3 + 55;
        }
        else
        {
          unsigned __int8 v57 = 97;
          unsigned __int8 v58 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v59 = a3 + 48;
        }
        else {
          unsigned __int8 v59 = 58;
        }
        char v60 = (unsigned __int8 *)v65;
        while (1)
        {
          unsigned int v61 = *v60;
          if (v61 < 0x30 || v61 >= v59)
          {
            if (v61 < 0x41 || v61 >= v58)
            {
              unsigned __int16 v16 = 0;
              char v17 = 1;
              if (v61 < 0x61 || v61 >= v57) {
                goto LABEL_144;
              }
              char v62 = -87;
            }
            else
            {
              char v62 = -55;
            }
          }
          else
          {
            char v62 = -48;
          }
          int v63 = (__int16)v22 * (__int16)a3;
          __int16 v64 = v63;
          if ((__int16)v63 != v63) {
            goto LABEL_143;
          }
          int v22 = (__int16)v63 + (v61 + v62);
          if ((__int16)(v64 + (v61 + v62)) != v22) {
            goto LABEL_143;
          }
          ++v60;
          if (!--v20) {
            goto LABEL_142;
          }
        }
      }
      goto LABEL_143;
    }
    if (v20)
    {
      uint64_t v21 = v20 - 1;
      if (v21)
      {
        LOWORD(v22) = 0;
        unsigned __int8 v23 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v24 = a3 + 55;
        }
        else
        {
          unsigned __int8 v23 = 97;
          unsigned __int8 v24 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v25 = a3 + 48;
        }
        else {
          unsigned __int8 v25 = 58;
        }
        unsigned __int8 v26 = (unsigned __int8 *)v65 + 1;
        while (1)
        {
          unsigned int v27 = *v26;
          if (v27 < 0x30 || v27 >= v25)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              unsigned __int16 v16 = 0;
              char v17 = 1;
              if (v27 < 0x61 || v27 >= v23) {
                goto LABEL_144;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          int v29 = (__int16)v22 * (__int16)a3;
          __int16 v30 = v29;
          if ((__int16)v29 != v29) {
            goto LABEL_143;
          }
          int v22 = (__int16)v29 - (v27 + v28);
          if ((__int16)(v30 - (v27 + v28)) != v22) {
            goto LABEL_143;
          }
          ++v26;
          if (!--v21) {
            goto LABEL_142;
          }
        }
      }
      goto LABEL_143;
    }
    goto LABEL_149;
  }
  if (v20)
  {
    uint64_t v48 = v20 - 1;
    if (v48)
    {
      LOWORD(v22) = 0;
      unsigned __int8 v49 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v50 = a3 + 55;
      }
      else
      {
        unsigned __int8 v49 = 97;
        unsigned __int8 v50 = 65;
      }
      if (a3 <= 10) {
        unsigned __int8 v51 = a3 + 48;
      }
      else {
        unsigned __int8 v51 = 58;
      }
      int v52 = (unsigned __int8 *)v65 + 1;
      do
      {
        unsigned int v53 = *v52;
        if (v53 < 0x30 || v53 >= v51)
        {
          if (v53 < 0x41 || v53 >= v50)
          {
            unsigned __int16 v16 = 0;
            char v17 = 1;
            if (v53 < 0x61 || v53 >= v49) {
              goto LABEL_144;
            }
            char v54 = -87;
          }
          else
          {
            char v54 = -55;
          }
        }
        else
        {
          char v54 = -48;
        }
        int v55 = (__int16)v22 * (__int16)a3;
        __int16 v56 = v55;
        if ((__int16)v55 != v55) {
          goto LABEL_143;
        }
        int v22 = (__int16)v55 + (v53 + v54);
        if ((__int16)(v56 + (v53 + v54)) != v22) {
          goto LABEL_143;
        }
        ++v52;
        --v48;
      }
      while (v48);
LABEL_142:
      unsigned __int16 v16 = v22;
      unsigned __int8 v66 = 0;
      goto LABEL_145;
    }
    goto LABEL_143;
  }
LABEL_151:
  __break(1u);
  return result;
}

unsigned __int8 *sub_2486BDF8C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }
        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          LOWORD(v8) = 0;
          uint64_t v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned __int16 v12 = 0;
                int v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v22 = -87;
              }
              else
              {
                char v22 = -55;
              }
            }
            else
            {
              char v22 = -48;
            }
            int v23 = (__int16)v8 * (__int16)a3;
            __int16 v24 = v23;
            if ((__int16)v23 != v23) {
              goto LABEL_72;
            }
            int v8 = (__int16)v23 + (v21 + v22);
            if ((__int16)(v24 + (v21 + v22)) != v8) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          int v13 = 0;
          unsigned __int16 v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 16));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned __int16 v12 = 0;
      int v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 16));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          LOWORD(v28) = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned __int16 v12 = 0;
                int v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v30 = -87;
              }
              else
              {
                char v30 = -55;
              }
            }
            else
            {
              char v30 = -48;
            }
            int v31 = (__int16)v28 * (__int16)a3;
            __int16 v32 = v31;
            if ((__int16)v31 != v31) {
              goto LABEL_72;
            }
            int v28 = (__int16)v31 + (v29 + v30);
            if ((__int16)(v32 + (v29 + v30)) != v28) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          int v13 = 0;
          unsigned __int16 v12 = v28;
          return (unsigned __int8 *)(v12 | (v13 << 16));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          LOWORD(v8) = 0;
          unsigned __int8 v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned __int16 v12 = 0;
                int v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            int v14 = (__int16)v8 * (__int16)a3;
            __int16 v15 = v14;
            if ((__int16)v14 != v14) {
              goto LABEL_72;
            }
            int v8 = (__int16)v14 - (v10 + v11);
            if ((__int16)(v15 - (v10 + v11)) != v8) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned __int16 v12 = 0;
        int v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 16));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2486BE240(uint64_t result, unint64_t a2, uint64_t a3)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    unsigned int v16 = 0;
    unsigned __int8 v66 = 0;
    return v16 | ((unint64_t)v66 << 32) | (((a2 >> 60) & 1) << 40);
  }
  uint64_t v5 = result;
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
    {
      uint64_t result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v6 = v5 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      uint64_t result = sub_24872CB30();
    }
    int v7 = *(unsigned __int8 *)result;
    if (v7 == 43)
    {
      if (v6 >= 1)
      {
        uint64_t v31 = v6 - 1;
        if (v6 != 1)
        {
          unsigned __int8 v32 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v33 = a3 + 55;
          }
          else
          {
            unsigned __int8 v32 = 97;
            unsigned __int8 v33 = 65;
          }
          if (a3 <= 10) {
            unsigned __int8 v34 = a3 + 48;
          }
          else {
            unsigned __int8 v34 = 58;
          }
          if (result)
          {
            unsigned int v12 = 0;
            uint64_t v35 = (unsigned __int8 *)(result + 1);
            do
            {
              unsigned int v36 = *v35;
              if (v36 < 0x30 || v36 >= v34)
              {
                if (v36 < 0x41 || v36 >= v33)
                {
                  unsigned int v16 = 0;
                  char v17 = 1;
                  if (v36 < 0x61 || v36 >= v32) {
                    goto LABEL_144;
                  }
                  char v37 = -87;
                }
                else
                {
                  char v37 = -55;
                }
              }
              else
              {
                char v37 = -48;
              }
              uint64_t v38 = (int)v12 * (uint64_t)(int)a3;
              if (v38 != (int)v38) {
                goto LABEL_143;
              }
              unsigned __int8 v39 = v36 + v37;
              unsigned int v12 = v38 + v39;
              if (__OFADD__(v38, v39)) {
                goto LABEL_143;
              }
              ++v35;
              --v31;
            }
            while (v31);
LABEL_76:
            unsigned int v16 = v12;
            unsigned __int8 v66 = 0;
            return v16 | ((unint64_t)v66 << 32) | (((a2 >> 60) & 1) << 40);
          }
          goto LABEL_99;
        }
LABEL_143:
        unsigned int v16 = 0;
        char v17 = 1;
        goto LABEL_144;
      }
      goto LABEL_150;
    }
    if (v7 != 45)
    {
      if (v6)
      {
        unsigned __int8 v40 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v41 = a3 + 55;
        }
        else
        {
          unsigned __int8 v40 = 97;
          unsigned __int8 v41 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v42 = a3 + 48;
        }
        else {
          unsigned __int8 v42 = 58;
        }
        if (result)
        {
          int v43 = 0;
          do
          {
            unsigned int v44 = *(unsigned __int8 *)result;
            if (v44 < 0x30 || v44 >= v42)
            {
              if (v44 < 0x41 || v44 >= v41)
              {
                unsigned int v16 = 0;
                char v17 = 1;
                if (v44 < 0x61 || v44 >= v40) {
                  goto LABEL_144;
                }
                char v45 = -87;
              }
              else
              {
                char v45 = -55;
              }
            }
            else
            {
              char v45 = -48;
            }
            uint64_t v46 = v43 * (uint64_t)(int)a3;
            if (v46 != (int)v46) {
              goto LABEL_143;
            }
            unsigned __int8 v47 = v44 + v45;
            int v43 = v46 + v47;
            if (__OFADD__(v46, v47)) {
              goto LABEL_143;
            }
            ++result;
            --v6;
          }
          while (v6);
          unsigned int v16 = v46 + v47;
          unsigned __int8 v66 = 0;
          return v16 | ((unint64_t)v66 << 32) | (((a2 >> 60) & 1) << 40);
        }
        goto LABEL_99;
      }
      goto LABEL_143;
    }
    if (v6 >= 1)
    {
      uint64_t v8 = v6 - 1;
      if (v6 != 1)
      {
        unsigned __int8 v9 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v10 = a3 + 55;
        }
        else
        {
          unsigned __int8 v9 = 97;
          unsigned __int8 v10 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v11 = a3 + 48;
        }
        else {
          unsigned __int8 v11 = 58;
        }
        if (result)
        {
          unsigned int v12 = 0;
          int v13 = (unsigned __int8 *)(result + 1);
          while (1)
          {
            unsigned int v14 = *v13;
            if (v14 < 0x30 || v14 >= v11)
            {
              if (v14 < 0x41 || v14 >= v10)
              {
                unsigned int v16 = 0;
                char v17 = 1;
                if (v14 < 0x61 || v14 >= v9) {
                  goto LABEL_144;
                }
                char v15 = -87;
              }
              else
              {
                char v15 = -55;
              }
            }
            else
            {
              char v15 = -48;
            }
            uint64_t v18 = (int)v12 * (uint64_t)(int)a3;
            if (v18 != (int)v18) {
              goto LABEL_143;
            }
            unsigned __int8 v19 = v14 + v15;
            unsigned int v12 = v18 - v19;
            if (__OFSUB__(v18, v19)) {
              goto LABEL_143;
            }
            ++v13;
            if (!--v8) {
              goto LABEL_76;
            }
          }
        }
LABEL_99:
        unsigned int v16 = 0;
        char v17 = 0;
LABEL_144:
        unsigned __int8 v66 = v17;
        return v16 | ((unint64_t)v66 << 32) | (((a2 >> 60) & 1) << 40);
      }
      goto LABEL_143;
    }
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
    goto LABEL_151;
  }
  uint64_t v20 = HIBYTE(a2) & 0xF;
  v65[0] = result;
  v65[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result != 43)
  {
    if (result != 45)
    {
      if (v20)
      {
        unsigned int v22 = 0;
        unsigned __int8 v57 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v58 = a3 + 55;
        }
        else
        {
          unsigned __int8 v57 = 97;
          unsigned __int8 v58 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v59 = a3 + 48;
        }
        else {
          unsigned __int8 v59 = 58;
        }
        char v60 = (unsigned __int8 *)v65;
        while (1)
        {
          unsigned int v61 = *v60;
          if (v61 < 0x30 || v61 >= v59)
          {
            if (v61 < 0x41 || v61 >= v58)
            {
              unsigned int v16 = 0;
              char v17 = 1;
              if (v61 < 0x61 || v61 >= v57) {
                goto LABEL_144;
              }
              char v62 = -87;
            }
            else
            {
              char v62 = -55;
            }
          }
          else
          {
            char v62 = -48;
          }
          uint64_t v63 = (int)v22 * (uint64_t)(int)a3;
          if (v63 != (int)v63) {
            goto LABEL_143;
          }
          unsigned __int8 v64 = v61 + v62;
          unsigned int v22 = v63 + v64;
          if (__OFADD__(v63, v64)) {
            goto LABEL_143;
          }
          ++v60;
          if (!--v20) {
            goto LABEL_142;
          }
        }
      }
      goto LABEL_143;
    }
    if (v20)
    {
      uint64_t v21 = v20 - 1;
      if (v21)
      {
        unsigned int v22 = 0;
        unsigned __int8 v23 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v24 = a3 + 55;
        }
        else
        {
          unsigned __int8 v23 = 97;
          unsigned __int8 v24 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v25 = a3 + 48;
        }
        else {
          unsigned __int8 v25 = 58;
        }
        unsigned __int8 v26 = (unsigned __int8 *)v65 + 1;
        while (1)
        {
          unsigned int v27 = *v26;
          if (v27 < 0x30 || v27 >= v25)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              unsigned int v16 = 0;
              char v17 = 1;
              if (v27 < 0x61 || v27 >= v23) {
                goto LABEL_144;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v29 = (int)v22 * (uint64_t)(int)a3;
          if (v29 != (int)v29) {
            goto LABEL_143;
          }
          unsigned __int8 v30 = v27 + v28;
          unsigned int v22 = v29 - v30;
          if (__OFSUB__(v29, v30)) {
            goto LABEL_143;
          }
          ++v26;
          if (!--v21) {
            goto LABEL_142;
          }
        }
      }
      goto LABEL_143;
    }
    goto LABEL_149;
  }
  if (v20)
  {
    uint64_t v48 = v20 - 1;
    if (v48)
    {
      unsigned int v22 = 0;
      unsigned __int8 v49 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v50 = a3 + 55;
      }
      else
      {
        unsigned __int8 v49 = 97;
        unsigned __int8 v50 = 65;
      }
      if (a3 <= 10) {
        unsigned __int8 v51 = a3 + 48;
      }
      else {
        unsigned __int8 v51 = 58;
      }
      int v52 = (unsigned __int8 *)v65 + 1;
      do
      {
        unsigned int v53 = *v52;
        if (v53 < 0x30 || v53 >= v51)
        {
          if (v53 < 0x41 || v53 >= v50)
          {
            unsigned int v16 = 0;
            char v17 = 1;
            if (v53 < 0x61 || v53 >= v49) {
              goto LABEL_144;
            }
            char v54 = -87;
          }
          else
          {
            char v54 = -55;
          }
        }
        else
        {
          char v54 = -48;
        }
        uint64_t v55 = (int)v22 * (uint64_t)(int)a3;
        if (v55 != (int)v55) {
          goto LABEL_143;
        }
        unsigned __int8 v56 = v53 + v54;
        unsigned int v22 = v55 + v56;
        if (__OFADD__(v55, v56)) {
          goto LABEL_143;
        }
        ++v52;
        --v48;
      }
      while (v48);
LABEL_142:
      unsigned int v16 = v22;
      unsigned __int8 v66 = 0;
      return v16 | ((unint64_t)v66 << 32) | (((a2 >> 60) & 1) << 40);
    }
    goto LABEL_143;
  }
LABEL_151:
  __break(1u);
  return result;
}

unsigned __int8 *sub_2486BE788(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }
        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          uint64_t v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v22 = -87;
              }
              else
              {
                char v22 = -55;
              }
            }
            else
            {
              char v22 = -48;
            }
            uint64_t v23 = (int)v8 * (uint64_t)(int)a3;
            if (v23 != (int)v23) {
              goto LABEL_72;
            }
            unsigned __int8 v24 = v21 + v22;
            unsigned int v8 = v23 + v24;
            if (__OFADD__(v23, v24)) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          unsigned __int8 v13 = 0;
          unsigned int v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned int v12 = 0;
      unsigned __int8 v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          unsigned int v28 = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v30 = -87;
              }
              else
              {
                char v30 = -55;
              }
            }
            else
            {
              char v30 = -48;
            }
            uint64_t v31 = (int)v28 * (uint64_t)(int)a3;
            if (v31 != (int)v31) {
              goto LABEL_72;
            }
            unsigned __int8 v32 = v29 + v30;
            unsigned int v28 = v31 + v32;
            if (__OFADD__(v31, v32)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          unsigned __int8 v13 = 0;
          unsigned int v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          unsigned __int8 v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            uint64_t v14 = (int)v8 * (uint64_t)(int)a3;
            if (v14 != (int)v14) {
              goto LABEL_72;
            }
            unsigned __int8 v15 = v10 + v11;
            unsigned int v8 = v14 - v15;
            if (__OFSUB__(v14, v15)) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned int v12 = 0;
        unsigned __int8 v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2486BEA08(uint64_t result, unint64_t a2, uint64_t a3)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    uint64_t result = 0;
    char v65 = 0;
    goto LABEL_128;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
    {
      unsigned __int8 v5 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      uint64_t v6 = result & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      uint64_t result = sub_24872CB30();
      unsigned __int8 v5 = (unsigned __int8 *)result;
    }
    int v7 = *v5;
    if (v7 == 43)
    {
      if (v6 < 1)
      {
LABEL_134:
        __break(1u);
        goto LABEL_135;
      }
      uint64_t v30 = v6 - 1;
      if (v6 != 1)
      {
        unsigned __int8 v31 = a3 + 55;
        unsigned __int8 v32 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v33 = 58;
        }
        else
        {
          unsigned __int8 v32 = 97;
          unsigned __int8 v31 = 65;
          unsigned __int8 v33 = a3 + 48;
        }
        if (v5)
        {
          uint64_t v12 = 0;
          unsigned __int8 v34 = v5 + 1;
          do
          {
            unsigned int v35 = *v34;
            if (v35 < 0x30 || v35 >= v33)
            {
              if (v35 < 0x41 || v35 >= v31)
              {
                uint64_t result = 0;
                char v16 = 1;
                if (v35 < 0x61 || v35 >= v32) {
                  goto LABEL_88;
                }
                char v36 = -87;
              }
              else
              {
                char v36 = -55;
              }
            }
            else
            {
              char v36 = -48;
            }
            uint64_t v37 = v12 * a3;
            if ((unsigned __int128)(v12 * (__int128)a3) >> 64 != (v12 * a3) >> 63) {
              goto LABEL_129;
            }
            unsigned __int8 v38 = v35 + v36;
            uint64_t v12 = v37 + v38;
            if (__OFADD__(v37, v38)) {
              goto LABEL_129;
            }
            ++v34;
            --v30;
          }
          while (v30);
LABEL_67:
          uint64_t result = v12;
          char v65 = 0;
          goto LABEL_128;
        }
        goto LABEL_87;
      }
    }
    else
    {
      if (v7 == 45)
      {
        if (v6 >= 1)
        {
          uint64_t v8 = v6 - 1;
          if (v6 != 1)
          {
            unsigned __int8 v9 = a3 + 55;
            unsigned __int8 v10 = a3 + 87;
            if (a3 > 10)
            {
              unsigned __int8 v11 = 58;
            }
            else
            {
              unsigned __int8 v10 = 97;
              unsigned __int8 v9 = 65;
              unsigned __int8 v11 = a3 + 48;
            }
            if (v5)
            {
              uint64_t v12 = 0;
              unsigned __int8 v13 = v5 + 1;
              while (1)
              {
                unsigned int v14 = *v13;
                if (v14 < 0x30 || v14 >= v11)
                {
                  if (v14 < 0x41 || v14 >= v9)
                  {
                    uint64_t result = 0;
                    char v16 = 1;
                    if (v14 < 0x61 || v14 >= v10) {
                      goto LABEL_88;
                    }
                    char v15 = -87;
                  }
                  else
                  {
                    char v15 = -55;
                  }
                }
                else
                {
                  char v15 = -48;
                }
                uint64_t v17 = v12 * a3;
                if ((unsigned __int128)(v12 * (__int128)a3) >> 64 != (v12 * a3) >> 63) {
                  goto LABEL_129;
                }
                unsigned __int8 v18 = v14 + v15;
                uint64_t v12 = v17 - v18;
                if (__OFSUB__(v17, v18)) {
                  goto LABEL_129;
                }
                ++v13;
                if (!--v8) {
                  goto LABEL_67;
                }
              }
            }
LABEL_87:
            uint64_t result = 0;
            char v16 = 0;
LABEL_88:
            char v65 = v16;
            goto LABEL_128;
          }
          goto LABEL_129;
        }
        __break(1u);
        goto LABEL_133;
      }
      if (v6)
      {
        unsigned __int8 v39 = a3 + 55;
        unsigned __int8 v40 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v41 = 58;
        }
        else
        {
          unsigned __int8 v40 = 97;
          unsigned __int8 v39 = 65;
          unsigned __int8 v41 = a3 + 48;
        }
        if (!v5) {
          goto LABEL_87;
        }
        uint64_t v42 = 0;
        do
        {
          unsigned int v43 = *v5;
          if (v43 < 0x30 || v43 >= v41)
          {
            if (v43 < 0x41 || v43 >= v39)
            {
              uint64_t result = 0;
              char v16 = 1;
              if (v43 < 0x61 || v43 >= v40) {
                goto LABEL_88;
              }
              char v44 = -87;
            }
            else
            {
              char v44 = -55;
            }
          }
          else
          {
            char v44 = -48;
          }
          uint64_t v45 = v42 * a3;
          if ((unsigned __int128)(v42 * (__int128)a3) >> 64 != (v42 * a3) >> 63) {
            goto LABEL_129;
          }
          unsigned __int8 v46 = v43 + v44;
          uint64_t v42 = v45 + v46;
          if (__OFADD__(v45, v46)) {
            goto LABEL_129;
          }
          ++v5;
          --v6;
        }
        while (v6);
        uint64_t result = v45 + v46;
        char v65 = 0;
LABEL_128:
        LOBYTE(v64[0]) = (a2 & 0x1000000000000000) != 0;
        return result;
      }
    }
LABEL_129:
    uint64_t result = 0;
    char v65 = 1;
    goto LABEL_128;
  }
  uint64_t v19 = HIBYTE(a2) & 0xF;
  v64[0] = result;
  v64[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result != 43)
  {
    if (result == 45)
    {
      if (!v19)
      {
LABEL_133:
        __break(1u);
        goto LABEL_134;
      }
      uint64_t v20 = v19 - 1;
      if (v20)
      {
        uint64_t v21 = 0;
        unsigned __int8 v22 = a3 + 55;
        unsigned __int8 v23 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v24 = 58;
        }
        else
        {
          unsigned __int8 v23 = 97;
          unsigned __int8 v22 = 65;
          unsigned __int8 v24 = a3 + 48;
        }
        unsigned __int8 v25 = (unsigned __int8 *)v64 + 1;
        while (1)
        {
          unsigned int v26 = *v25;
          if (v26 < 0x30 || v26 >= v24)
          {
            if (v26 < 0x41 || v26 >= v22)
            {
              uint64_t result = 0;
              if (v26 < 0x61 || v26 >= v23) {
                goto LABEL_127;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v21 * a3;
          if ((unsigned __int128)(v21 * (__int128)a3) >> 64 != (v21 * a3) >> 63) {
            break;
          }
          unsigned __int8 v29 = v26 + v27;
          uint64_t v21 = v28 - v29;
          if (__OFSUB__(v28, v29)) {
            break;
          }
          ++v25;
          if (!--v20) {
            goto LABEL_125;
          }
        }
      }
    }
    else if (v19)
    {
      uint64_t v21 = 0;
      unsigned __int8 v56 = a3 + 55;
      unsigned __int8 v57 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v58 = 58;
      }
      else
      {
        unsigned __int8 v57 = 97;
        unsigned __int8 v56 = 65;
        unsigned __int8 v58 = a3 + 48;
      }
      unsigned __int8 v59 = (unsigned __int8 *)v64;
      while (1)
      {
        unsigned int v60 = *v59;
        if (v60 < 0x30 || v60 >= v58)
        {
          if (v60 < 0x41 || v60 >= v56)
          {
            uint64_t result = 0;
            if (v60 < 0x61 || v60 >= v57) {
              goto LABEL_127;
            }
            char v61 = -87;
          }
          else
          {
            char v61 = -55;
          }
        }
        else
        {
          char v61 = -48;
        }
        uint64_t v62 = v21 * a3;
        if ((unsigned __int128)(v21 * (__int128)a3) >> 64 != (v21 * a3) >> 63) {
          break;
        }
        unsigned __int8 v63 = v60 + v61;
        uint64_t v21 = v62 + v63;
        if (__OFADD__(v62, v63)) {
          break;
        }
        ++v59;
        if (!--v19) {
          goto LABEL_125;
        }
      }
    }
LABEL_126:
    uint64_t result = 0;
LABEL_127:
    char v65 = 1;
    goto LABEL_128;
  }
  if (v19)
  {
    uint64_t v47 = v19 - 1;
    if (v47)
    {
      uint64_t v21 = 0;
      unsigned __int8 v48 = a3 + 55;
      unsigned __int8 v49 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v50 = 58;
      }
      else
      {
        unsigned __int8 v49 = 97;
        unsigned __int8 v48 = 65;
        unsigned __int8 v50 = a3 + 48;
      }
      unsigned __int8 v51 = (unsigned __int8 *)v64 + 1;
      do
      {
        unsigned int v52 = *v51;
        if (v52 < 0x30 || v52 >= v50)
        {
          if (v52 < 0x41 || v52 >= v48)
          {
            uint64_t result = 0;
            if (v52 < 0x61 || v52 >= v49) {
              goto LABEL_127;
            }
            char v53 = -87;
          }
          else
          {
            char v53 = -55;
          }
        }
        else
        {
          char v53 = -48;
        }
        uint64_t v54 = v21 * a3;
        if ((unsigned __int128)(v21 * (__int128)a3) >> 64 != (v21 * a3) >> 63) {
          goto LABEL_126;
        }
        unsigned __int8 v55 = v52 + v53;
        uint64_t v21 = v54 + v55;
        if (__OFADD__(v54, v55)) {
          goto LABEL_126;
        }
        ++v51;
        --v47;
      }
      while (v47);
LABEL_125:
      uint64_t result = v21;
      char v65 = 0;
      goto LABEL_128;
    }
    goto LABEL_126;
  }
LABEL_135:
  __break(1u);
  return result;
}

unsigned __int8 *sub_2486BEF78(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v23 = a3 + 48;
      unsigned __int8 v24 = a3 + 55;
      unsigned __int8 v25 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v23 = 58;
      }
      else
      {
        unsigned __int8 v25 = 97;
        unsigned __int8 v24 = 65;
      }
      if (result)
      {
        uint64_t v26 = 0;
        do
        {
          unsigned int v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              uint64_t v13 = 0;
              if (v27 < 0x61 || v27 >= v25) {
                return (unsigned __int8 *)v13;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
            return 0;
          }
          uint64_t v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v15 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v16 = a3 + 48;
  unsigned __int8 v17 = a3 + 55;
  unsigned __int8 v18 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v16 = 58;
  }
  else
  {
    unsigned __int8 v18 = 97;
    unsigned __int8 v17 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v19 = result + 1;
  do
  {
    unsigned int v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        uint64_t v13 = 0;
        if (v20 < 0x61 || v20 >= v18) {
          return (unsigned __int8 *)v13;
        }
        char v21 = -87;
      }
      else
      {
        char v21 = -55;
      }
    }
    else
    {
      char v21 = -48;
    }
    uint64_t v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21))) {
      return 0;
    }
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_2486BF1F4(uint64_t result, unint64_t a2, uint64_t a3)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    unsigned __int8 v16 = 0;
    unsigned __int8 v54 = 0;
    goto LABEL_145;
  }
  uint64_t v5 = result;
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
    {
      uint64_t result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v6 = v5 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      uint64_t result = sub_24872CB30();
    }
    int v7 = *(unsigned __int8 *)result;
    if (v7 == 43)
    {
      if (v6 >= 1)
      {
        uint64_t v27 = v6 - 1;
        if (v6 != 1)
        {
          unsigned __int8 v28 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v29 = a3 + 55;
          }
          else
          {
            unsigned __int8 v28 = 97;
            unsigned __int8 v29 = 65;
          }
          if (a3 <= 10) {
            unsigned __int8 v30 = a3 + 48;
          }
          else {
            unsigned __int8 v30 = 58;
          }
          if (result)
          {
            LOBYTE(v12) = 0;
            unsigned __int8 v31 = (unsigned __int8 *)(result + 1);
            do
            {
              unsigned int v32 = *v31;
              if (v32 < 0x30 || v32 >= v30)
              {
                if (v32 < 0x41 || v32 >= v29)
                {
                  unsigned __int8 v16 = 0;
                  char v17 = 1;
                  if (v32 < 0x61 || v32 >= v28) {
                    goto LABEL_144;
                  }
                  char v33 = -87;
                }
                else
                {
                  char v33 = -55;
                }
              }
              else
              {
                char v33 = -48;
              }
              if (((v12 * (unsigned __int16)a3) & 0xFF00) != 0) {
                goto LABEL_143;
              }
              unsigned int v12 = (v12 * a3) + (v32 + v33);
              if ((v12 >> 8)) {
                goto LABEL_143;
              }
              ++v31;
              --v27;
            }
            while (v27);
LABEL_76:
            unsigned __int8 v16 = v12;
            unsigned __int8 v54 = 0;
            goto LABEL_145;
          }
          goto LABEL_99;
        }
LABEL_143:
        unsigned __int8 v16 = 0;
        char v17 = 1;
        goto LABEL_144;
      }
      goto LABEL_150;
    }
    if (v7 != 45)
    {
      if (v6)
      {
        unsigned __int8 v34 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v35 = a3 + 55;
        }
        else
        {
          unsigned __int8 v34 = 97;
          unsigned __int8 v35 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v36 = a3 + 48;
        }
        else {
          unsigned __int8 v36 = 58;
        }
        if (result)
        {
          LOBYTE(v37) = 0;
          do
          {
            unsigned int v38 = *(unsigned __int8 *)result;
            if (v38 < 0x30 || v38 >= v36)
            {
              if (v38 < 0x41 || v38 >= v35)
              {
                unsigned __int8 v16 = 0;
                char v17 = 1;
                if (v38 < 0x61 || v38 >= v34) {
                  goto LABEL_144;
                }
                char v39 = -87;
              }
              else
              {
                char v39 = -55;
              }
            }
            else
            {
              char v39 = -48;
            }
            if (((v37 * (unsigned __int16)a3) & 0xFF00) != 0) {
              goto LABEL_143;
            }
            unsigned int v37 = (v37 * a3) + (v38 + v39);
            if ((v37 >> 8)) {
              goto LABEL_143;
            }
            ++result;
            --v6;
          }
          while (v6);
          unsigned __int8 v16 = v37;
          unsigned __int8 v54 = 0;
          goto LABEL_145;
        }
        goto LABEL_99;
      }
      goto LABEL_143;
    }
    if (v6 >= 1)
    {
      uint64_t v8 = v6 - 1;
      if (v6 != 1)
      {
        unsigned __int8 v9 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v10 = a3 + 55;
        }
        else
        {
          unsigned __int8 v9 = 97;
          unsigned __int8 v10 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v11 = a3 + 48;
        }
        else {
          unsigned __int8 v11 = 58;
        }
        if (result)
        {
          LOBYTE(v12) = 0;
          uint64_t v13 = (unsigned __int8 *)(result + 1);
          while (1)
          {
            unsigned int v14 = *v13;
            if (v14 < 0x30 || v14 >= v11)
            {
              if (v14 < 0x41 || v14 >= v10)
              {
                unsigned __int8 v16 = 0;
                char v17 = 1;
                if (v14 < 0x61 || v14 >= v9) {
                  goto LABEL_144;
                }
                char v15 = -87;
              }
              else
              {
                char v15 = -55;
              }
            }
            else
            {
              char v15 = -48;
            }
            if (((v12 * (unsigned __int16)a3) & 0xFF00) != 0) {
              goto LABEL_143;
            }
            unsigned int v12 = (v12 * a3) - (v14 + v15);
            if ((v12 & 0xFFFFFF00) != 0) {
              goto LABEL_143;
            }
            ++v13;
            if (!--v8) {
              goto LABEL_76;
            }
          }
        }
LABEL_99:
        unsigned __int8 v16 = 0;
        char v17 = 0;
LABEL_144:
        unsigned __int8 v54 = v17;
LABEL_145:
        LOBYTE(v53[0]) = (a2 & 0x1000000000000000) != 0;
        return v16 | (v54 << 8) | (LOBYTE(v53[0]) << 16);
      }
      goto LABEL_143;
    }
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
    goto LABEL_151;
  }
  uint64_t v18 = HIBYTE(a2) & 0xF;
  v53[0] = result;
  v53[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result != 43)
  {
    if (result != 45)
    {
      if (v18)
      {
        LOBYTE(v20) = 0;
        unsigned __int8 v47 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v48 = a3 + 55;
        }
        else
        {
          unsigned __int8 v47 = 97;
          unsigned __int8 v48 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v49 = a3 + 48;
        }
        else {
          unsigned __int8 v49 = 58;
        }
        unsigned __int8 v50 = (unsigned __int8 *)v53;
        while (1)
        {
          unsigned int v51 = *v50;
          if (v51 < 0x30 || v51 >= v49)
          {
            if (v51 < 0x41 || v51 >= v48)
            {
              unsigned __int8 v16 = 0;
              char v17 = 1;
              if (v51 < 0x61 || v51 >= v47) {
                goto LABEL_144;
              }
              char v52 = -87;
            }
            else
            {
              char v52 = -55;
            }
          }
          else
          {
            char v52 = -48;
          }
          if (((v20 * (unsigned __int16)a3) & 0xFF00) != 0) {
            goto LABEL_143;
          }
          unsigned int v20 = (v20 * a3) + (v51 + v52);
          if ((v20 >> 8)) {
            goto LABEL_143;
          }
          ++v50;
          if (!--v18) {
            goto LABEL_142;
          }
        }
      }
      goto LABEL_143;
    }
    if (v18)
    {
      uint64_t v19 = v18 - 1;
      if (v19)
      {
        LOBYTE(v20) = 0;
        unsigned __int8 v21 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v22 = a3 + 55;
        }
        else
        {
          unsigned __int8 v21 = 97;
          unsigned __int8 v22 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v23 = a3 + 48;
        }
        else {
          unsigned __int8 v23 = 58;
        }
        unsigned __int8 v24 = (unsigned __int8 *)v53 + 1;
        while (1)
        {
          unsigned int v25 = *v24;
          if (v25 < 0x30 || v25 >= v23)
          {
            if (v25 < 0x41 || v25 >= v22)
            {
              unsigned __int8 v16 = 0;
              char v17 = 1;
              if (v25 < 0x61 || v25 >= v21) {
                goto LABEL_144;
              }
              char v26 = -87;
            }
            else
            {
              char v26 = -55;
            }
          }
          else
          {
            char v26 = -48;
          }
          if (((v20 * (unsigned __int16)a3) & 0xFF00) != 0) {
            goto LABEL_143;
          }
          unsigned int v20 = (v20 * a3) - (v25 + v26);
          if ((v20 & 0xFFFFFF00) != 0) {
            goto LABEL_143;
          }
          ++v24;
          if (!--v19) {
            goto LABEL_142;
          }
        }
      }
      goto LABEL_143;
    }
    goto LABEL_149;
  }
  if (v18)
  {
    uint64_t v40 = v18 - 1;
    if (v40)
    {
      LOBYTE(v20) = 0;
      unsigned __int8 v41 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v42 = a3 + 55;
      }
      else
      {
        unsigned __int8 v41 = 97;
        unsigned __int8 v42 = 65;
      }
      if (a3 <= 10) {
        unsigned __int8 v43 = a3 + 48;
      }
      else {
        unsigned __int8 v43 = 58;
      }
      char v44 = (unsigned __int8 *)v53 + 1;
      do
      {
        unsigned int v45 = *v44;
        if (v45 < 0x30 || v45 >= v43)
        {
          if (v45 < 0x41 || v45 >= v42)
          {
            unsigned __int8 v16 = 0;
            char v17 = 1;
            if (v45 < 0x61 || v45 >= v41) {
              goto LABEL_144;
            }
            char v46 = -87;
          }
          else
          {
            char v46 = -55;
          }
        }
        else
        {
          char v46 = -48;
        }
        if (((v20 * (unsigned __int16)a3) & 0xFF00) != 0) {
          goto LABEL_143;
        }
        unsigned int v20 = (v20 * a3) + (v45 + v46);
        if ((v20 >> 8)) {
          goto LABEL_143;
        }
        ++v44;
        --v40;
      }
      while (v40);
LABEL_142:
      unsigned __int8 v16 = v20;
      unsigned __int8 v54 = 0;
      goto LABEL_145;
    }
    goto LABEL_143;
  }
LABEL_151:
  __break(1u);
  return result;
}

uint64_t sub_2486BF7A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  swift_bridgeObjectRetain();
  v8[0] = sub_24872C6C0();
  v8[1] = v6;
  LOWORD(a4) = sub_2486BF82C(v8, a3, a4);
  swift_bridgeObjectRelease();
  return (unsigned __int16)a4 & 0x1FF;
}

uint64_t sub_2486BF82C(uint64_t *a1, uint64_t a2, uint64_t (*a3)(void *, uint64_t, uint64_t))
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  if ((v7 & 0x1000000000000000) == 0)
  {
    if ((v7 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v9 = HIBYTE(v7) & 0xF;
    v16[0] = v6;
    v16[1] = v7 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v8 = v16;
    goto LABEL_7;
  }
  uint64_t v6 = sub_2486BC788();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  *a1 = v6;
  a1[1] = v12;
  unint64_t v7 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (void *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v8 = (void *)sub_24872CB30();
  }
LABEL_7:
  __int16 v13 = a3(v8, v9, a2);
  if (!v3) {
    return v13 & 0x1FF;
  }
  return v14;
}

unsigned __int8 *sub_2486BF904(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v14 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v15 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v16 = a3 + 55;
        }
        else
        {
          unsigned __int8 v15 = 97;
          unsigned __int8 v16 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v17 = a3 + 48;
        }
        else {
          unsigned __int8 v17 = 58;
        }
        if (result)
        {
          LOBYTE(v8) = 0;
          uint64_t v18 = result + 1;
          do
          {
            unsigned int v19 = *v18;
            if (v19 < 0x30 || v19 >= v17)
            {
              if (v19 < 0x41 || v19 >= v16)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v19 < 0x61 || v19 >= v15) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v20 = -87;
              }
              else
              {
                char v20 = -55;
              }
            }
            else
            {
              char v20 = -48;
            }
            if (((v8 * (unsigned __int16)a3) & 0xFF00) != 0) {
              goto LABEL_72;
            }
            unsigned int v8 = (v8 * a3) + (v19 + v20);
            if ((v8 >> 8)) {
              goto LABEL_72;
            }
            ++v18;
            --v14;
          }
          while (v14);
LABEL_48:
          int v13 = 0;
          unsigned __int8 v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned __int8 v12 = 0;
      int v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 8));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v21 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v22 = a3 + 55;
        }
        else
        {
          unsigned __int8 v21 = 97;
          unsigned __int8 v22 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v23 = a3 + 48;
        }
        else {
          unsigned __int8 v23 = 58;
        }
        if (result)
        {
          LOBYTE(v24) = 0;
          do
          {
            unsigned int v25 = *result;
            if (v25 < 0x30 || v25 >= v23)
            {
              if (v25 < 0x41 || v25 >= v22)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v25 < 0x61 || v25 >= v21) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v26 = -87;
              }
              else
              {
                char v26 = -55;
              }
            }
            else
            {
              char v26 = -48;
            }
            if (((v24 * (unsigned __int16)a3) & 0xFF00) != 0) {
              goto LABEL_72;
            }
            unsigned int v24 = (v24 * a3) + (v25 + v26);
            if ((v24 >> 8)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          int v13 = 0;
          unsigned __int8 v12 = v24;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          LOBYTE(v8) = 0;
          uint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            if (((v8 * (unsigned __int16)a3) & 0xFF00) != 0) {
              goto LABEL_72;
            }
            unsigned int v8 = (v8 * a3) - (v10 + v11);
            if ((v8 & 0xFFFFFF00) != 0) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned __int8 v12 = 0;
        int v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 8));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2486BFBAC(uint64_t result, unint64_t a2, uint64_t a3)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    unsigned __int16 v16 = 0;
    unsigned __int8 v55 = 0;
    goto LABEL_145;
  }
  uint64_t v5 = result;
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
    {
      uint64_t result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v6 = v5 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      uint64_t result = sub_24872CB30();
    }
    int v7 = *(unsigned __int8 *)result;
    if (v7 == 43)
    {
      if (v6 >= 1)
      {
        uint64_t v27 = v6 - 1;
        if (v6 != 1)
        {
          unsigned __int8 v28 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v29 = a3 + 55;
          }
          else
          {
            unsigned __int8 v28 = 97;
            unsigned __int8 v29 = 65;
          }
          if (a3 <= 10) {
            unsigned __int8 v30 = a3 + 48;
          }
          else {
            unsigned __int8 v30 = 58;
          }
          if (result)
          {
            LOWORD(v12) = 0;
            unsigned __int8 v31 = (unsigned __int8 *)(result + 1);
            do
            {
              unsigned int v32 = *v31;
              if (v32 < 0x30 || v32 >= v30)
              {
                if (v32 < 0x41 || v32 >= v29)
                {
                  unsigned __int16 v16 = 0;
                  char v17 = 1;
                  if (v32 < 0x61 || v32 >= v28) {
                    goto LABEL_144;
                  }
                  char v33 = -87;
                }
                else
                {
                  char v33 = -55;
                }
              }
              else
              {
                char v33 = -48;
              }
              if ((((unsigned __int16)v12 * (unsigned __int16)a3) & 0xFFFF0000) != 0) {
                goto LABEL_143;
              }
              int v12 = (unsigned __int16)(v12 * a3) + (v32 + v33);
              if ((v12 & 0x10000) != 0) {
                goto LABEL_143;
              }
              ++v31;
              --v27;
            }
            while (v27);
LABEL_76:
            unsigned __int16 v16 = v12;
            unsigned __int8 v55 = 0;
            goto LABEL_145;
          }
          goto LABEL_99;
        }
LABEL_143:
        unsigned __int16 v16 = 0;
        char v17 = 1;
        goto LABEL_144;
      }
      goto LABEL_150;
    }
    if (v7 != 45)
    {
      if (v6)
      {
        unsigned __int8 v34 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v35 = a3 + 55;
        }
        else
        {
          unsigned __int8 v34 = 97;
          unsigned __int8 v35 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v36 = a3 + 48;
        }
        else {
          unsigned __int8 v36 = 58;
        }
        if (result)
        {
          LOWORD(v37) = 0;
          do
          {
            unsigned int v38 = *(unsigned __int8 *)result;
            if (v38 < 0x30 || v38 >= v36)
            {
              if (v38 < 0x41 || v38 >= v35)
              {
                unsigned __int16 v16 = 0;
                char v17 = 1;
                if (v38 < 0x61 || v38 >= v34) {
                  goto LABEL_144;
                }
                char v39 = -87;
              }
              else
              {
                char v39 = -55;
              }
            }
            else
            {
              char v39 = -48;
            }
            int v40 = (unsigned __int16)v37 * (unsigned __int16)a3;
            if ((v40 & 0xFFFF0000) != 0) {
              goto LABEL_143;
            }
            int v37 = (unsigned __int16)(v37 * a3) + (v38 + v39);
            if ((v37 & 0x10000) != 0) {
              goto LABEL_143;
            }
            ++result;
            --v6;
          }
          while (v6);
          unsigned __int16 v16 = v40 + (v38 + v39);
          unsigned __int8 v55 = 0;
          goto LABEL_145;
        }
        goto LABEL_99;
      }
      goto LABEL_143;
    }
    if (v6 >= 1)
    {
      uint64_t v8 = v6 - 1;
      if (v6 != 1)
      {
        unsigned __int8 v9 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v10 = a3 + 55;
        }
        else
        {
          unsigned __int8 v9 = 97;
          unsigned __int8 v10 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v11 = a3 + 48;
        }
        else {
          unsigned __int8 v11 = 58;
        }
        if (result)
        {
          LOWORD(v12) = 0;
          int v13 = (unsigned __int8 *)(result + 1);
          while (1)
          {
            unsigned int v14 = *v13;
            if (v14 < 0x30 || v14 >= v11)
            {
              if (v14 < 0x41 || v14 >= v10)
              {
                unsigned __int16 v16 = 0;
                char v17 = 1;
                if (v14 < 0x61 || v14 >= v9) {
                  goto LABEL_144;
                }
                char v15 = -87;
              }
              else
              {
                char v15 = -55;
              }
            }
            else
            {
              char v15 = -48;
            }
            if ((((unsigned __int16)v12 * (unsigned __int16)a3) & 0xFFFF0000) != 0) {
              goto LABEL_143;
            }
            int v12 = (unsigned __int16)(v12 * a3) - (v14 + v15);
            if ((v12 & 0xFFFF0000) != 0) {
              goto LABEL_143;
            }
            ++v13;
            if (!--v8) {
              goto LABEL_76;
            }
          }
        }
LABEL_99:
        unsigned __int16 v16 = 0;
        char v17 = 0;
LABEL_144:
        unsigned __int8 v55 = v17;
LABEL_145:
        LOBYTE(v54[0]) = (a2 & 0x1000000000000000) != 0;
        return v16 | (v55 << 16) | (LOBYTE(v54[0]) << 24);
      }
      goto LABEL_143;
    }
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
    goto LABEL_151;
  }
  uint64_t v18 = HIBYTE(a2) & 0xF;
  v54[0] = result;
  v54[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result != 43)
  {
    if (result != 45)
    {
      if (v18)
      {
        LOWORD(v20) = 0;
        unsigned __int8 v48 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v49 = a3 + 55;
        }
        else
        {
          unsigned __int8 v48 = 97;
          unsigned __int8 v49 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v50 = a3 + 48;
        }
        else {
          unsigned __int8 v50 = 58;
        }
        unsigned int v51 = (unsigned __int8 *)v54;
        while (1)
        {
          unsigned int v52 = *v51;
          if (v52 < 0x30 || v52 >= v50)
          {
            if (v52 < 0x41 || v52 >= v49)
            {
              unsigned __int16 v16 = 0;
              char v17 = 1;
              if (v52 < 0x61 || v52 >= v48) {
                goto LABEL_144;
              }
              char v53 = -87;
            }
            else
            {
              char v53 = -55;
            }
          }
          else
          {
            char v53 = -48;
          }
          if ((((unsigned __int16)v20 * (unsigned __int16)a3) & 0xFFFF0000) != 0) {
            goto LABEL_143;
          }
          int v20 = (unsigned __int16)(v20 * a3) + (v52 + v53);
          if ((v20 & 0x10000) != 0) {
            goto LABEL_143;
          }
          ++v51;
          if (!--v18) {
            goto LABEL_142;
          }
        }
      }
      goto LABEL_143;
    }
    if (v18)
    {
      uint64_t v19 = v18 - 1;
      if (v19)
      {
        LOWORD(v20) = 0;
        unsigned __int8 v21 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v22 = a3 + 55;
        }
        else
        {
          unsigned __int8 v21 = 97;
          unsigned __int8 v22 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v23 = a3 + 48;
        }
        else {
          unsigned __int8 v23 = 58;
        }
        unsigned int v24 = (unsigned __int8 *)v54 + 1;
        while (1)
        {
          unsigned int v25 = *v24;
          if (v25 < 0x30 || v25 >= v23)
          {
            if (v25 < 0x41 || v25 >= v22)
            {
              unsigned __int16 v16 = 0;
              char v17 = 1;
              if (v25 < 0x61 || v25 >= v21) {
                goto LABEL_144;
              }
              char v26 = -87;
            }
            else
            {
              char v26 = -55;
            }
          }
          else
          {
            char v26 = -48;
          }
          if ((((unsigned __int16)v20 * (unsigned __int16)a3) & 0xFFFF0000) != 0) {
            goto LABEL_143;
          }
          int v20 = (unsigned __int16)(v20 * a3) - (v25 + v26);
          if ((v20 & 0xFFFF0000) != 0) {
            goto LABEL_143;
          }
          ++v24;
          if (!--v19) {
            goto LABEL_142;
          }
        }
      }
      goto LABEL_143;
    }
    goto LABEL_149;
  }
  if (v18)
  {
    uint64_t v41 = v18 - 1;
    if (v41)
    {
      LOWORD(v20) = 0;
      unsigned __int8 v42 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v43 = a3 + 55;
      }
      else
      {
        unsigned __int8 v42 = 97;
        unsigned __int8 v43 = 65;
      }
      if (a3 <= 10) {
        unsigned __int8 v44 = a3 + 48;
      }
      else {
        unsigned __int8 v44 = 58;
      }
      unsigned int v45 = (unsigned __int8 *)v54 + 1;
      do
      {
        unsigned int v46 = *v45;
        if (v46 < 0x30 || v46 >= v44)
        {
          if (v46 < 0x41 || v46 >= v43)
          {
            unsigned __int16 v16 = 0;
            char v17 = 1;
            if (v46 < 0x61 || v46 >= v42) {
              goto LABEL_144;
            }
            char v47 = -87;
          }
          else
          {
            char v47 = -55;
          }
        }
        else
        {
          char v47 = -48;
        }
        if ((((unsigned __int16)v20 * (unsigned __int16)a3) & 0xFFFF0000) != 0) {
          goto LABEL_143;
        }
        int v20 = (unsigned __int16)(v20 * a3) + (v46 + v47);
        if ((v20 & 0x10000) != 0) {
          goto LABEL_143;
        }
        ++v45;
        --v41;
      }
      while (v41);
LABEL_142:
      unsigned __int16 v16 = v20;
      unsigned __int8 v55 = 0;
      goto LABEL_145;
    }
    goto LABEL_143;
  }
LABEL_151:
  __break(1u);
  return result;
}

uint64_t sub_2486C015C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  swift_bridgeObjectRetain();
  v8[0] = sub_24872C6C0();
  v8[1] = v6;
  LODWORD(a4) = sub_2486C01E4(v8, a3, a4);
  swift_bridgeObjectRelease();
  return a4 & 0x1FFFF;
}

uint64_t sub_2486C01E4(uint64_t *a1, uint64_t a2, uint64_t (*a3)(void *, uint64_t, uint64_t))
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v6 = sub_2486BC788();
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    *a1 = v6;
    a1[1] = v12;
    unint64_t v7 = v12;
    if ((v12 & 0x2000000000000000) == 0)
    {
LABEL_3:
      if ((v6 & 0x1000000000000000) != 0)
      {
        uint64_t v8 = (void *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
        uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v8 = (void *)sub_24872CB30();
      }
      goto LABEL_7;
    }
  }
  else if ((v7 & 0x2000000000000000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v9 = HIBYTE(v7) & 0xF;
  v14[0] = v6;
  v14[1] = v7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v8 = v14;
LABEL_7:
  uint64_t result = a3(v8, v9, a2);
  if (!v3) {
    return result & 0x1FFFF;
  }
  return result;
}

unsigned __int8 *sub_2486C02B4(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v14 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v15 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v16 = a3 + 55;
        }
        else
        {
          unsigned __int8 v15 = 97;
          unsigned __int8 v16 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v17 = a3 + 48;
        }
        else {
          unsigned __int8 v17 = 58;
        }
        if (result)
        {
          LOWORD(v8) = 0;
          uint64_t v18 = result + 1;
          do
          {
            unsigned int v19 = *v18;
            if (v19 < 0x30 || v19 >= v17)
            {
              if (v19 < 0x41 || v19 >= v16)
              {
                unsigned __int16 v12 = 0;
                int v13 = 1;
                if (v19 < 0x61 || v19 >= v15) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v20 = -87;
              }
              else
              {
                char v20 = -55;
              }
            }
            else
            {
              char v20 = -48;
            }
            if ((((unsigned __int16)v8 * (unsigned __int16)a3) & 0xFFFF0000) != 0) {
              goto LABEL_72;
            }
            int v8 = (unsigned __int16)(v8 * a3) + (v19 + v20);
            if ((v8 & 0x10000) != 0) {
              goto LABEL_72;
            }
            ++v18;
            --v14;
          }
          while (v14);
LABEL_48:
          int v13 = 0;
          unsigned __int16 v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 16));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned __int16 v12 = 0;
      int v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 16));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v21 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v22 = a3 + 55;
        }
        else
        {
          unsigned __int8 v21 = 97;
          unsigned __int8 v22 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v23 = a3 + 48;
        }
        else {
          unsigned __int8 v23 = 58;
        }
        if (result)
        {
          LOWORD(v24) = 0;
          do
          {
            unsigned int v25 = *result;
            if (v25 < 0x30 || v25 >= v23)
            {
              if (v25 < 0x41 || v25 >= v22)
              {
                unsigned __int16 v12 = 0;
                int v13 = 1;
                if (v25 < 0x61 || v25 >= v21) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v26 = -87;
              }
              else
              {
                char v26 = -55;
              }
            }
            else
            {
              char v26 = -48;
            }
            if ((((unsigned __int16)v24 * (unsigned __int16)a3) & 0xFFFF0000) != 0) {
              goto LABEL_72;
            }
            int v24 = (unsigned __int16)(v24 * a3) + (v25 + v26);
            if ((v24 & 0x10000) != 0) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          int v13 = 0;
          unsigned __int16 v12 = v24;
          return (unsigned __int8 *)(v12 | (v13 << 16));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          LOWORD(v8) = 0;
          uint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned __int16 v12 = 0;
                int v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            if ((((unsigned __int16)v8 * (unsigned __int16)a3) & 0xFFFF0000) != 0) {
              goto LABEL_72;
            }
            int v8 = (unsigned __int16)(v8 * a3) - (v10 + v11);
            if ((v8 & 0xFFFF0000) != 0) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned __int16 v12 = 0;
        int v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 16));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2486C055C(uint64_t result, unint64_t a2, uint64_t a3)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    unsigned int v16 = 0;
    unsigned __int8 v66 = 0;
    return v16 | ((unint64_t)v66 << 32) | (((a2 >> 60) & 1) << 40);
  }
  uint64_t v5 = result;
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
    {
      uint64_t result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v6 = v5 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      uint64_t result = sub_24872CB30();
    }
    int v7 = *(unsigned __int8 *)result;
    if (v7 == 43)
    {
      if (v6 >= 1)
      {
        uint64_t v31 = v6 - 1;
        if (v6 != 1)
        {
          unsigned __int8 v32 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v33 = a3 + 55;
          }
          else
          {
            unsigned __int8 v32 = 97;
            unsigned __int8 v33 = 65;
          }
          if (a3 <= 10) {
            unsigned __int8 v34 = a3 + 48;
          }
          else {
            unsigned __int8 v34 = 58;
          }
          if (result)
          {
            unsigned int v12 = 0;
            unsigned __int8 v35 = (unsigned __int8 *)(result + 1);
            do
            {
              unsigned int v36 = *v35;
              if (v36 < 0x30 || v36 >= v34)
              {
                if (v36 < 0x41 || v36 >= v33)
                {
                  unsigned int v16 = 0;
                  char v17 = 1;
                  if (v36 < 0x61 || v36 >= v32) {
                    goto LABEL_144;
                  }
                  char v37 = -87;
                }
                else
                {
                  char v37 = -55;
                }
              }
              else
              {
                char v37 = -48;
              }
              unint64_t v38 = v12 * (unint64_t)a3;
              if ((v38 & 0xFFFFFFFF00000000) != 0) {
                goto LABEL_143;
              }
              unsigned __int8 v39 = v36 + v37;
              unsigned int v12 = v38 + v39;
              if (__CFADD__(v38, v39)) {
                goto LABEL_143;
              }
              ++v35;
              --v31;
            }
            while (v31);
LABEL_76:
            unsigned int v16 = v12;
            unsigned __int8 v66 = 0;
            return v16 | ((unint64_t)v66 << 32) | (((a2 >> 60) & 1) << 40);
          }
          goto LABEL_99;
        }
LABEL_143:
        unsigned int v16 = 0;
        char v17 = 1;
        goto LABEL_144;
      }
      goto LABEL_150;
    }
    if (v7 != 45)
    {
      if (v6)
      {
        unsigned __int8 v40 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v41 = a3 + 55;
        }
        else
        {
          unsigned __int8 v40 = 97;
          unsigned __int8 v41 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v42 = a3 + 48;
        }
        else {
          unsigned __int8 v42 = 58;
        }
        if (result)
        {
          unsigned int v43 = 0;
          do
          {
            unsigned int v44 = *(unsigned __int8 *)result;
            if (v44 < 0x30 || v44 >= v42)
            {
              if (v44 < 0x41 || v44 >= v41)
              {
                unsigned int v16 = 0;
                char v17 = 1;
                if (v44 < 0x61 || v44 >= v40) {
                  goto LABEL_144;
                }
                char v45 = -87;
              }
              else
              {
                char v45 = -55;
              }
            }
            else
            {
              char v45 = -48;
            }
            unint64_t v46 = v43 * (unint64_t)a3;
            if ((v46 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_143;
            }
            unsigned __int8 v47 = v44 + v45;
            unsigned int v43 = v46 + v47;
            if (__CFADD__(v46, v47)) {
              goto LABEL_143;
            }
            ++result;
            --v6;
          }
          while (v6);
          unsigned int v16 = v46 + v47;
          unsigned __int8 v66 = 0;
          return v16 | ((unint64_t)v66 << 32) | (((a2 >> 60) & 1) << 40);
        }
        goto LABEL_99;
      }
      goto LABEL_143;
    }
    if (v6 >= 1)
    {
      uint64_t v8 = v6 - 1;
      if (v6 != 1)
      {
        unsigned __int8 v9 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v10 = a3 + 55;
        }
        else
        {
          unsigned __int8 v9 = 97;
          unsigned __int8 v10 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v11 = a3 + 48;
        }
        else {
          unsigned __int8 v11 = 58;
        }
        if (result)
        {
          unsigned int v12 = 0;
          int v13 = (unsigned __int8 *)(result + 1);
          while (1)
          {
            unsigned int v14 = *v13;
            if (v14 < 0x30 || v14 >= v11)
            {
              if (v14 < 0x41 || v14 >= v10)
              {
                unsigned int v16 = 0;
                char v17 = 1;
                if (v14 < 0x61 || v14 >= v9) {
                  goto LABEL_144;
                }
                char v15 = -87;
              }
              else
              {
                char v15 = -55;
              }
            }
            else
            {
              char v15 = -48;
            }
            unint64_t v18 = v12 * (unint64_t)a3;
            if ((v18 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_143;
            }
            unsigned __int8 v19 = v14 + v15;
            unsigned int v12 = v18 - v19;
            if (v18 < v19) {
              goto LABEL_143;
            }
            ++v13;
            if (!--v8) {
              goto LABEL_76;
            }
          }
        }
LABEL_99:
        unsigned int v16 = 0;
        char v17 = 0;
LABEL_144:
        unsigned __int8 v66 = v17;
        return v16 | ((unint64_t)v66 << 32) | (((a2 >> 60) & 1) << 40);
      }
      goto LABEL_143;
    }
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
    goto LABEL_151;
  }
  uint64_t v20 = HIBYTE(a2) & 0xF;
  v65[0] = result;
  v65[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result != 43)
  {
    if (result != 45)
    {
      if (v20)
      {
        unsigned int v22 = 0;
        unsigned __int8 v57 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v58 = a3 + 55;
        }
        else
        {
          unsigned __int8 v57 = 97;
          unsigned __int8 v58 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v59 = a3 + 48;
        }
        else {
          unsigned __int8 v59 = 58;
        }
        unsigned int v60 = (unsigned __int8 *)v65;
        while (1)
        {
          unsigned int v61 = *v60;
          if (v61 < 0x30 || v61 >= v59)
          {
            if (v61 < 0x41 || v61 >= v58)
            {
              unsigned int v16 = 0;
              char v17 = 1;
              if (v61 < 0x61 || v61 >= v57) {
                goto LABEL_144;
              }
              char v62 = -87;
            }
            else
            {
              char v62 = -55;
            }
          }
          else
          {
            char v62 = -48;
          }
          unint64_t v63 = v22 * (unint64_t)a3;
          if ((v63 & 0xFFFFFFFF00000000) != 0) {
            goto LABEL_143;
          }
          unsigned __int8 v64 = v61 + v62;
          unsigned int v22 = v63 + v64;
          if (__CFADD__(v63, v64)) {
            goto LABEL_143;
          }
          ++v60;
          if (!--v20) {
            goto LABEL_142;
          }
        }
      }
      goto LABEL_143;
    }
    if (v20)
    {
      uint64_t v21 = v20 - 1;
      if (v21)
      {
        unsigned int v22 = 0;
        unsigned __int8 v23 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v24 = a3 + 55;
        }
        else
        {
          unsigned __int8 v23 = 97;
          unsigned __int8 v24 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v25 = a3 + 48;
        }
        else {
          unsigned __int8 v25 = 58;
        }
        char v26 = (unsigned __int8 *)v65 + 1;
        while (1)
        {
          unsigned int v27 = *v26;
          if (v27 < 0x30 || v27 >= v25)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              unsigned int v16 = 0;
              char v17 = 1;
              if (v27 < 0x61 || v27 >= v23) {
                goto LABEL_144;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          unint64_t v29 = v22 * (unint64_t)a3;
          if ((v29 & 0xFFFFFFFF00000000) != 0) {
            goto LABEL_143;
          }
          unsigned __int8 v30 = v27 + v28;
          unsigned int v22 = v29 - v30;
          if (v29 < v30) {
            goto LABEL_143;
          }
          ++v26;
          if (!--v21) {
            goto LABEL_142;
          }
        }
      }
      goto LABEL_143;
    }
    goto LABEL_149;
  }
  if (v20)
  {
    uint64_t v48 = v20 - 1;
    if (v48)
    {
      unsigned int v22 = 0;
      unsigned __int8 v49 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v50 = a3 + 55;
      }
      else
      {
        unsigned __int8 v49 = 97;
        unsigned __int8 v50 = 65;
      }
      if (a3 <= 10) {
        unsigned __int8 v51 = a3 + 48;
      }
      else {
        unsigned __int8 v51 = 58;
      }
      unsigned int v52 = (unsigned __int8 *)v65 + 1;
      do
      {
        unsigned int v53 = *v52;
        if (v53 < 0x30 || v53 >= v51)
        {
          if (v53 < 0x41 || v53 >= v50)
          {
            unsigned int v16 = 0;
            char v17 = 1;
            if (v53 < 0x61 || v53 >= v49) {
              goto LABEL_144;
            }
            char v54 = -87;
          }
          else
          {
            char v54 = -55;
          }
        }
        else
        {
          char v54 = -48;
        }
        unint64_t v55 = v22 * (unint64_t)a3;
        if ((v55 & 0xFFFFFFFF00000000) != 0) {
          goto LABEL_143;
        }
        unsigned __int8 v56 = v53 + v54;
        unsigned int v22 = v55 + v56;
        if (__CFADD__(v55, v56)) {
          goto LABEL_143;
        }
        ++v52;
        --v48;
      }
      while (v48);
LABEL_142:
      unsigned int v16 = v22;
      unsigned __int8 v66 = 0;
      return v16 | ((unint64_t)v66 << 32) | (((a2 >> 60) & 1) << 40);
    }
    goto LABEL_143;
  }
LABEL_151:
  __break(1u);
  return result;
}

uint64_t sub_2486C0AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  swift_bridgeObjectRetain();
  v9[0] = sub_24872C6C0();
  v9[1] = v6;
  unint64_t v7 = sub_2486C0B34(v9, a3, a4);
  swift_bridgeObjectRelease();
  return v7 | ((HIDWORD(v7) & 1) << 32);
}

unint64_t sub_2486C0B34(uint64_t *a1, uint64_t a2, uint64_t (*a3)(void *, uint64_t, uint64_t))
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v6 = sub_2486BC788();
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    *a1 = v6;
    a1[1] = v12;
    unint64_t v7 = v12;
    if ((v12 & 0x2000000000000000) == 0)
    {
LABEL_3:
      if ((v6 & 0x1000000000000000) != 0)
      {
        uint64_t v8 = (void *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
        uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v8 = (void *)sub_24872CB30();
      }
      goto LABEL_7;
    }
  }
  else if ((v7 & 0x2000000000000000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v9 = HIBYTE(v7) & 0xF;
  v14[0] = v6;
  v14[1] = v7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v8 = v14;
LABEL_7:
  unint64_t result = a3(v8, v9, a2);
  if (!v3) {
    return result | ((HIDWORD(result) & 1) << 32);
  }
  return result;
}

unsigned __int8 *sub_2486C0C0C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }
        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          uint64_t v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v22 = -87;
              }
              else
              {
                char v22 = -55;
              }
            }
            else
            {
              char v22 = -48;
            }
            unint64_t v23 = v8 * (unint64_t)a3;
            if ((v23 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v24 = v21 + v22;
            unsigned int v8 = v23 + v24;
            if (__CFADD__(v23, v24)) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          unsigned __int8 v13 = 0;
          unsigned int v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned int v12 = 0;
      unsigned __int8 v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          unsigned int v28 = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v30 = -87;
              }
              else
              {
                char v30 = -55;
              }
            }
            else
            {
              char v30 = -48;
            }
            unint64_t v31 = v28 * (unint64_t)a3;
            if ((v31 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v32 = v29 + v30;
            unsigned int v28 = v31 + v32;
            if (__CFADD__(v31, v32)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          unsigned __int8 v13 = 0;
          unsigned int v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          uint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            unint64_t v14 = v8 * (unint64_t)a3;
            if ((v14 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v15 = v10 + v11;
            unsigned int v8 = v14 - v15;
            if (v14 < v15) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned int v12 = 0;
        unsigned __int8 v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2486C0E8C(uint64_t result, unint64_t a2, int64_t a3)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    unint64_t result = 0;
    char v66 = 0;
    goto LABEL_130;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
    {
      unsigned __int8 v5 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      uint64_t v6 = result & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      unint64_t result = sub_24872CB30();
      unsigned __int8 v5 = (unsigned __int8 *)result;
    }
    int v7 = *v5;
    if (v7 == 43)
    {
      if (v6 < 1)
      {
LABEL_136:
        __break(1u);
        goto LABEL_137;
      }
      uint64_t v31 = v6 - 1;
      if (v6 != 1)
      {
        unsigned __int8 v32 = a3 + 55;
        unsigned __int8 v33 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v34 = 58;
        }
        else
        {
          unsigned __int8 v33 = 97;
          unsigned __int8 v32 = 65;
          unsigned __int8 v34 = a3 + 48;
        }
        if (v5)
        {
          unint64_t v12 = 0;
          unsigned __int8 v35 = v5 + 1;
          do
          {
            unsigned int v36 = *v35;
            if (v36 < 0x30 || v36 >= v34)
            {
              if (v36 < 0x41 || v36 >= v32)
              {
                unint64_t result = 0;
                char v16 = 1;
                if (v36 < 0x61 || v36 >= v33) {
                  goto LABEL_90;
                }
                char v37 = -87;
              }
              else
              {
                char v37 = -55;
              }
            }
            else
            {
              char v37 = -48;
            }
            if (!is_mul_ok(v12, a3)) {
              goto LABEL_131;
            }
            unint64_t v38 = v12 * a3;
            unsigned __int8 v39 = v36 + v37;
            BOOL v19 = __CFADD__(v38, v39);
            unint64_t v12 = v38 + v39;
            if (v19) {
              goto LABEL_131;
            }
            ++v35;
            --v31;
          }
          while (v31);
LABEL_69:
          unint64_t result = v12;
          char v66 = 0;
          goto LABEL_130;
        }
        goto LABEL_89;
      }
    }
    else
    {
      if (v7 == 45)
      {
        if (v6 >= 1)
        {
          uint64_t v8 = v6 - 1;
          if (v6 != 1)
          {
            unsigned __int8 v9 = a3 + 55;
            unsigned __int8 v10 = a3 + 87;
            if (a3 > 10)
            {
              unsigned __int8 v11 = 58;
            }
            else
            {
              unsigned __int8 v10 = 97;
              unsigned __int8 v9 = 65;
              unsigned __int8 v11 = a3 + 48;
            }
            if (v5)
            {
              unint64_t v12 = 0;
              unsigned __int8 v13 = v5 + 1;
              while (1)
              {
                unsigned int v14 = *v13;
                if (v14 < 0x30 || v14 >= v11)
                {
                  if (v14 < 0x41 || v14 >= v9)
                  {
                    unint64_t result = 0;
                    char v16 = 1;
                    if (v14 < 0x61 || v14 >= v10) {
                      goto LABEL_90;
                    }
                    char v15 = -87;
                  }
                  else
                  {
                    char v15 = -55;
                  }
                }
                else
                {
                  char v15 = -48;
                }
                if (!is_mul_ok(v12, a3)) {
                  goto LABEL_131;
                }
                unint64_t v17 = v12 * a3;
                unsigned __int8 v18 = v14 + v15;
                BOOL v19 = v17 >= v18;
                unint64_t v12 = v17 - v18;
                if (!v19) {
                  goto LABEL_131;
                }
                ++v13;
                if (!--v8) {
                  goto LABEL_69;
                }
              }
            }
LABEL_89:
            unint64_t result = 0;
            char v16 = 0;
LABEL_90:
            char v66 = v16;
            goto LABEL_130;
          }
          goto LABEL_131;
        }
        __break(1u);
        goto LABEL_135;
      }
      if (v6)
      {
        unsigned __int8 v40 = a3 + 55;
        unsigned __int8 v41 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v42 = 58;
        }
        else
        {
          unsigned __int8 v41 = 97;
          unsigned __int8 v40 = 65;
          unsigned __int8 v42 = a3 + 48;
        }
        if (!v5) {
          goto LABEL_89;
        }
        unint64_t v43 = 0;
        do
        {
          unsigned int v44 = *v5;
          if (v44 < 0x30 || v44 >= v42)
          {
            if (v44 < 0x41 || v44 >= v40)
            {
              unint64_t result = 0;
              char v16 = 1;
              if (v44 < 0x61 || v44 >= v41) {
                goto LABEL_90;
              }
              char v45 = -87;
            }
            else
            {
              char v45 = -55;
            }
          }
          else
          {
            char v45 = -48;
          }
          if (!is_mul_ok(v43, a3)) {
            goto LABEL_131;
          }
          unint64_t v46 = v43 * a3;
          unsigned __int8 v47 = v44 + v45;
          BOOL v19 = __CFADD__(v46, v47);
          unint64_t v43 = v46 + v47;
          if (v19) {
            goto LABEL_131;
          }
          ++v5;
          --v6;
        }
        while (v6);
        unint64_t result = v43;
        char v66 = 0;
LABEL_130:
        LOBYTE(v65[0]) = (a2 & 0x1000000000000000) != 0;
        return result;
      }
    }
LABEL_131:
    unint64_t result = 0;
    char v66 = 1;
    goto LABEL_130;
  }
  uint64_t v20 = HIBYTE(a2) & 0xF;
  v65[0] = result;
  v65[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result != 43)
  {
    if (result == 45)
    {
      if (!v20)
      {
LABEL_135:
        __break(1u);
        goto LABEL_136;
      }
      uint64_t v21 = v20 - 1;
      if (v21)
      {
        unint64_t v22 = 0;
        unsigned __int8 v23 = a3 + 55;
        unsigned __int8 v24 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v25 = 58;
        }
        else
        {
          unsigned __int8 v24 = 97;
          unsigned __int8 v23 = 65;
          unsigned __int8 v25 = a3 + 48;
        }
        unsigned __int8 v26 = (unsigned __int8 *)v65 + 1;
        while (1)
        {
          unsigned int v27 = *v26;
          if (v27 < 0x30 || v27 >= v25)
          {
            if (v27 < 0x41 || v27 >= v23)
            {
              unint64_t result = 0;
              if (v27 < 0x61 || v27 >= v24) {
                goto LABEL_129;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          if (!is_mul_ok(v22, a3)) {
            break;
          }
          unint64_t v29 = v22 * a3;
          unsigned __int8 v30 = v27 + v28;
          BOOL v19 = v29 >= v30;
          unint64_t v22 = v29 - v30;
          if (!v19) {
            break;
          }
          ++v26;
          if (!--v21) {
            goto LABEL_127;
          }
        }
      }
    }
    else if (v20)
    {
      unint64_t v22 = 0;
      unsigned __int8 v57 = a3 + 55;
      unsigned __int8 v58 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v59 = 58;
      }
      else
      {
        unsigned __int8 v58 = 97;
        unsigned __int8 v57 = 65;
        unsigned __int8 v59 = a3 + 48;
      }
      unsigned int v60 = (unsigned __int8 *)v65;
      while (1)
      {
        unsigned int v61 = *v60;
        if (v61 < 0x30 || v61 >= v59)
        {
          if (v61 < 0x41 || v61 >= v57)
          {
            unint64_t result = 0;
            if (v61 < 0x61 || v61 >= v58) {
              goto LABEL_129;
            }
            char v62 = -87;
          }
          else
          {
            char v62 = -55;
          }
        }
        else
        {
          char v62 = -48;
        }
        if (!is_mul_ok(v22, a3)) {
          break;
        }
        unint64_t v63 = v22 * a3;
        unsigned __int8 v64 = v61 + v62;
        BOOL v19 = __CFADD__(v63, v64);
        unint64_t v22 = v63 + v64;
        if (v19) {
          break;
        }
        ++v60;
        if (!--v20) {
          goto LABEL_127;
        }
      }
    }
LABEL_128:
    unint64_t result = 0;
LABEL_129:
    char v66 = 1;
    goto LABEL_130;
  }
  if (v20)
  {
    uint64_t v48 = v20 - 1;
    if (v48)
    {
      unint64_t v22 = 0;
      unsigned __int8 v49 = a3 + 55;
      unsigned __int8 v50 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v51 = 58;
      }
      else
      {
        unsigned __int8 v50 = 97;
        unsigned __int8 v49 = 65;
        unsigned __int8 v51 = a3 + 48;
      }
      unsigned int v52 = (unsigned __int8 *)v65 + 1;
      do
      {
        unsigned int v53 = *v52;
        if (v53 < 0x30 || v53 >= v51)
        {
          if (v53 < 0x41 || v53 >= v49)
          {
            unint64_t result = 0;
            if (v53 < 0x61 || v53 >= v50) {
              goto LABEL_129;
            }
            char v54 = -87;
          }
          else
          {
            char v54 = -55;
          }
        }
        else
        {
          char v54 = -48;
        }
        if (!is_mul_ok(v22, a3)) {
          goto LABEL_128;
        }
        unint64_t v55 = v22 * a3;
        unsigned __int8 v56 = v53 + v54;
        BOOL v19 = __CFADD__(v55, v56);
        unint64_t v22 = v55 + v56;
        if (v19) {
          goto LABEL_128;
        }
        ++v52;
        --v48;
      }
      while (v48);
LABEL_127:
      unint64_t result = v22;
      char v66 = 0;
      goto LABEL_130;
    }
    goto LABEL_128;
  }
LABEL_137:
  __break(1u);
  return result;
}

uint64_t sub_2486C13FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  swift_bridgeObjectRetain();
  v9[0] = sub_24872C6C0();
  v9[1] = v6;
  uint64_t v7 = sub_2486BD078(v9, a3, a4);
  swift_bridgeObjectRelease();
  return v7;
}

unsigned __int8 *sub_2486C148C(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            unint64_t v9 = 0;
            for (i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              if (!is_mul_ok(v9, a3)) {
                return 0;
              }
              unint64_t v14 = v9 * a3;
              unsigned __int8 v15 = v11 + v12;
              BOOL v16 = v14 >= v15;
              unint64_t v9 = v14 - v15;
              if (!v16) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_67;
    }
    if (a2)
    {
      unsigned __int8 v26 = a3 + 48;
      unsigned __int8 v27 = a3 + 55;
      unsigned __int8 v28 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v26 = 58;
      }
      else
      {
        unsigned __int8 v28 = 97;
        unsigned __int8 v27 = 65;
      }
      if (result)
      {
        unint64_t v29 = 0;
        do
        {
          unsigned int v30 = *result;
          if (v30 < 0x30 || v30 >= v26)
          {
            if (v30 < 0x41 || v30 >= v27)
            {
              uint64_t v13 = 0;
              if (v30 < 0x61 || v30 >= v28) {
                return (unsigned __int8 *)v13;
              }
              char v31 = -87;
            }
            else
            {
              char v31 = -55;
            }
          }
          else
          {
            char v31 = -48;
          }
          if (!is_mul_ok(v29, a3)) {
            return 0;
          }
          unint64_t v32 = v29 * a3;
          unsigned __int8 v33 = v30 + v31;
          BOOL v16 = __CFADD__(v32, v33);
          unint64_t v29 = v32 + v33;
          if (v16) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v29;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_67:
    __break(1u);
    return result;
  }
  uint64_t v17 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v18 = a3 + 48;
  unsigned __int8 v19 = a3 + 55;
  unsigned __int8 v20 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v18 = 58;
  }
  else
  {
    unsigned __int8 v20 = 97;
    unsigned __int8 v19 = 65;
  }
  if (!result) {
    return 0;
  }
  unint64_t v9 = 0;
  uint64_t v21 = result + 1;
  do
  {
    unsigned int v22 = *v21;
    if (v22 < 0x30 || v22 >= v18)
    {
      if (v22 < 0x41 || v22 >= v19)
      {
        uint64_t v13 = 0;
        if (v22 < 0x61 || v22 >= v20) {
          return (unsigned __int8 *)v13;
        }
        char v23 = -87;
      }
      else
      {
        char v23 = -55;
      }
    }
    else
    {
      char v23 = -48;
    }
    if (!is_mul_ok(v9, a3)) {
      return 0;
    }
    unint64_t v24 = v9 * a3;
    unsigned __int8 v25 = v22 + v23;
    BOOL v16 = __CFADD__(v24, v25);
    unint64_t v9 = v24 + v25;
    if (v16) {
      return 0;
    }
    ++v21;
    --v17;
  }
  while (v17);
  return (unsigned __int8 *)v9;
}

uint64_t sub_2486C1708(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702195828 && a2 == 0xE400000000000000;
  if (v2 || (sub_24872CEB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65736C6166 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    char v6 = sub_24872CEB0();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v6 & 1) == 0) {
      return 2;
    }
  }
  return result;
}

unsigned char *sub_2486C17DC@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_2486C184C(a1, MEMORY[0x263F8EE90], a2);
}

void *sub_2486C1808@<X0>(unsigned char *a1@<X8>)
{
  return sub_2486C18C4(a1);
}

unsigned char *sub_2486C1820@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_2486C184C(a1, MEMORY[0x263F8EE98], a2);
}

unsigned char *sub_2486C184C@<X0>(unsigned char *result@<X0>, uint64_t (*a2)(void)@<X1>, BOOL *a3@<X8>)
{
  unsigned int v4 = *result;
  BOOL v5 = v4 > 0x20;
  uint64_t v6 = (1 << v4) & 0x100003E01;
  BOOL v7 = v5 || v6 == 0;
  BOOL v8 = v7 && (result = (unsigned char *)a2()) != 0 && *result == 0;
  *a3 = v8;
  return result;
}

void *sub_2486C18C4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_2486C1908(uint64_t a1, unint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v5 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    uint64_t v8 = a3();
    if ((v9 & 0x100) != 0)
    {
      uint64_t v10 = sub_2486C13FC(a1, a2, 10, a4);
      char v14 = v13;
      swift_bridgeObjectRelease();
      int v12 = v14 & 1;
    }
    else
    {
      uint64_t v10 = v8;
      char v11 = v9;
      swift_bridgeObjectRelease();
      int v12 = v11 & 1;
    }
    if (v12) {
      return 0;
    }
    else {
      return v10;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_2486C19D4(uint64_t a1, unint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v5 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    unsigned int v8 = a3();
    if ((v8 & 0x10000) != 0) {
      unsigned int v8 = sub_2486BF7A4(a1, a2, 10, a4);
    }
    unsigned int v9 = v8;
    swift_bridgeObjectRelease();
    int v10 = (v9 >> 8) & 1;
    if (v10) {
      unsigned __int8 v11 = 0;
    }
    else {
      unsigned __int8 v11 = v9;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    unsigned __int8 v11 = 0;
    int v10 = 1;
  }
  return v11 | (v10 << 8);
}

uint64_t sub_2486C1A84(uint64_t a1, unint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v5 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    int v8 = a3();
    if ((v8 & 0x1000000) != 0) {
      int v8 = sub_2486C015C(a1, a2, 10, a4);
    }
    swift_bridgeObjectRelease();
    unsigned int v9 = (v8 & 0x10000u) >> 16;
    if ((v8 & 0x10000) != 0) {
      int v10 = 0;
    }
    else {
      int v10 = (unsigned __int16)v8;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    int v10 = 0;
    LOBYTE(v9) = 1;
  }
  return v10 & 0xFFFEFFFF | ((v9 & 1) << 16);
}

unint64_t sub_2486C1B38(uint64_t a1, unint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v5 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    uint64_t v8 = a3();
    if ((v8 & 0x10000000000) != 0) {
      uint64_t v8 = sub_2486C0AA4(a1, a2, 10, a4);
    }
    swift_bridgeObjectRelease();
    unint64_t v9 = (v8 & 0x100000000uLL) >> 32;
    uint64_t v10 = v8;
    if ((v8 & 0x100000000) != 0) {
      uint64_t v10 = 0;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = 0;
    LOBYTE(v9) = 1;
  }
  return v10 | ((v9 & 1) << 32);
}

uint64_t sub_2486C1C04()
{
  ParsableCommand.run()();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return sub_2486C27D8(v1);
}

uint64_t static AsyncParsableCommand.main()(uint64_t a1, uint64_t a2)
{
  v3[23] = a2;
  v3[24] = v2;
  v3[22] = a1;
  return MEMORY[0x270FA2498](sub_2486C1CC4, 0, 0);
}

uint64_t sub_2486C1CC4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 184) + 8);
  *(void *)(v0 + 200) = v1;
  static ParsableCommand.parseAsRoot(_:)(0, v1, v0 + 16);
  sub_2486C2100(v0 + 16, v0 + 96);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FDB8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FCA8);
  if (swift_dynamicCast())
  {
    sub_2486B7680((long long *)(v0 + 136), v0 + 56);
    uint64_t v2 = *(void *)(v0 + 80);
    uint64_t v3 = *(void *)(v0 + 88);
    __swift_mutable_project_boxed_opaque_existential_1(v0 + 56, v2);
    unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 16) + **(int **)(v3 + 16));
    unsigned int v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v4;
    void *v4 = v0;
    v4[1] = sub_2486C1F10;
    return v9(v2, v3);
  }
  else
  {
    *(void *)(v0 + 168) = 0;
    *(_OWORD *)(v0 + 136) = 0u;
    *(_OWORD *)(v0 + 152) = 0u;
    sub_2486C2164(v0 + 136);
    uint64_t v6 = *(void *)(v0 + 40);
    uint64_t v7 = *(void *)(v0 + 48);
    __swift_mutable_project_boxed_opaque_existential_1(v0 + 16, v6);
    (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
}

uint64_t sub_2486C1F10()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2486C2090;
  }
  else {
    uint64_t v2 = sub_2486C2024;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2486C2024()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_2486C2090()
{
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 7));
  uint64_t v1 = v0[27];
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
  uint64_t v2 = v0[22];
  uint64_t v3 = *(void *)(v0[25] + 8);
  static ParsableArguments.exit(withError:)(v1, v2, v3);
}

uint64_t sub_2486C2100(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2486C2164(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static AsyncMainProtocol.main()(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 176) = a1;
  *(void *)(v2 + 184) = a2;
  return MEMORY[0x270FA2498](sub_2486C21E4, 0, 0);
}

uint64_t sub_2486C21E4()
{
  *(void *)(v0 + 192) = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)(v0 + 200) = AssociatedConformanceWitness;
  static ParsableCommand.parseAsRoot(_:)(0, AssociatedConformanceWitness, v0 + 16);
  sub_2486C2100(v0 + 16, v0 + 96);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FDB8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FCA8);
  if (swift_dynamicCast())
  {
    sub_2486B7680((long long *)(v0 + 136), v0 + 56);
    uint64_t v2 = *(void *)(v0 + 80);
    uint64_t v3 = *(void *)(v0 + 88);
    __swift_mutable_project_boxed_opaque_existential_1(v0 + 56, v2);
    unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 16) + **(int **)(v3 + 16));
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v4;
    void *v4 = v0;
    v4[1] = sub_2486C2474;
    return v9(v2, v3);
  }
  else
  {
    *(void *)(v0 + 168) = 0;
    *(_OWORD *)(v0 + 136) = 0u;
    *(_OWORD *)(v0 + 152) = 0u;
    sub_2486C2164(v0 + 136);
    uint64_t v6 = *(void *)(v0 + 40);
    uint64_t v7 = *(void *)(v0 + 48);
    __swift_mutable_project_boxed_opaque_existential_1(v0 + 16, v6);
    (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
}

uint64_t sub_2486C2474()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2486C2588;
  }
  else {
    uint64_t v2 = sub_2486C2024;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

void sub_2486C2588()
{
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 7));
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[24];
  uint64_t v3 = *(void *)(v0[25] + 8);
  static ParsableArguments.exit(withError:)(v1, v2, v3);
}

uint64_t dispatch thunk of AsyncParsableCommand.run()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 16) + **(int **)(a2 + 16));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2486C26E4;
  return v7(a1, a2);
}

uint64_t sub_2486C26E4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_2486C27D8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_2486C27E4(uint64_t a1)
{
  void (*v17)(_OWORD *__return_ptr);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  int64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  long long v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t);
  uint64_t v76;
  long long v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  int64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  void v94[2];
  _OWORD *v95;
  _OWORD *v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  char *v108;
  long long v109;
  _OWORD v110[8];
  uint64_t v111;
  _OWORD v112[6];
  long long v113;
  long long v114;
  uint64_t v115;
  char *v116;
  _OWORD v117[6];
  long long v118;
  long long v119;
  uint64_t v120;
  _OWORD v121[8];
  uint64_t v122;

  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
    __break(1u);
LABEL_59:
    uint64_t v3 = sub_24871A3EC(0, v1 + 1, 1, v3);
LABEL_20:
    unsigned int v22 = *((void *)v3 + 2);
    uint64_t v21 = *((void *)v3 + 3);
    if (v22 >= v21 >> 1) {
      uint64_t v3 = sub_24871A3EC((char *)(v21 > 1), v22 + 1, 1, v3);
    }
    char v23 = sub_2486C5338();
    *((void *)v3 + 2) = v22 + 1;
    unint64_t v24 = &v3[16 * v22];
    *((void *)v24 + 4) = &type metadata for HelpCommand;
    *((void *)v24 + 5) = v23;
    goto LABEL_23;
  }
  uint64_t v5 = a1 + 16 * v4;
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v99 = v5 + 24;
  uint64_t v7 = *(void *)(v5 + 16);
  uint64_t v98 = (uint64_t *)(v5 + 16);
  v103 = a1;
  *(void *)&v121[0] = sub_2486C7644(a1);
  *((void *)&v121[0] + 1) = v8;
  unint64_t v9 = 0xE100000000000000;
  *(void *)&v117[0] = 45;
  *((void *)&v117[0] + 1) = 0xE100000000000000;
  *(void *)&v112[0] = 95;
  *((void *)&v112[0] + 1) = 0xE100000000000000;
  v95 = (_OWORD *)sub_2486B71D8();
  uint64_t v96 = v95;
  v94[0] = MEMORY[0x263F8D310];
  v94[1] = v95;
  uint64_t v10 = sub_24872C970();
  v107 = v11;
  swift_bridgeObjectRelease();
  long long v105 = v10;
  if (v4 == 1)
  {
    v97 = 49;
    uint64_t v12 = 50;
    long long v102 = 0xE100000000000000;
  }
  else
  {
    unint64_t v9 = 0xE900000000000029;
    long long v102 = 0xE200000000000000;
    uint64_t v12 = 0x29312B3124282824;
    v97 = 12580;
  }
  long long v104 = v12;
  long long v106 = v9;
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v6 + 16))(v117, v7, v6);
  v121[6] = v118;
  v121[7] = v119;
  v122 = v120;
  v121[2] = v117[2];
  v121[3] = v117[3];
  v121[4] = v117[4];
  v121[5] = v117[5];
  v121[0] = v117[0];
  v121[1] = v117[1];
  uint64_t v13 = *((void *)&v118 + 1);
  swift_bridgeObjectRetain();
  sub_2486BAFC4((uint64_t)v121);
  uint64_t v14 = *(void *)(v13 + 16);
  long long v101 = v4;
  if (!v14)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = (char *)MEMORY[0x263F8EE78];
    uint64_t v2 = v103;
    if (v4 != 1) {
      goto LABEL_23;
    }
LABEL_18:
    uint64_t v1 = *((void *)v3 + 2);
    if (!v1) {
      goto LABEL_23;
    }
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_20;
    }
    goto LABEL_59;
  }
  uint64_t v15 = 0;
  uint64_t v16 = v14 - 1;
  uint64_t v3 = (char *)MEMORY[0x263F8EE78];
  uint64_t v2 = v103;
  while (1)
  {
    uint64_t v17 = *(void (**)(_OWORD *__return_ptr))(*(void *)(v13 + 16 * v15 + 40) + 16);
    v109 = *(_OWORD *)(v13 + 16 * v15 + 32);
    v17(v110);
    v113 = v110[6];
    v114 = v110[7];
    v115 = v111;
    v112[2] = v110[2];
    v112[3] = v110[3];
    v112[4] = v110[4];
    v112[5] = v110[5];
    v112[0] = v110[0];
    v112[1] = v110[1];
    sub_2486BAFC4((uint64_t)v112);
    if (v113 == 1)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v116 = v3;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_2486B9DF0(0, *((void *)v3 + 2) + 1, 1);
        uint64_t v3 = v116;
      }
      unsigned __int8 v20 = *((void *)v3 + 2);
      unsigned __int8 v19 = *((void *)v3 + 3);
      if (v20 >= v19 >> 1)
      {
        sub_2486B9DF0((char *)(v19 > 1), v20 + 1, 1);
        uint64_t v3 = v116;
      }
      *((void *)v3 + 2) = v20 + 1;
      *(_OWORD *)&v3[16 * v20 + 32] = v109;
    }
    if (v16 == v15) {
      break;
    }
    ++v15;
  }
  swift_bridgeObjectRelease();
  if (v101 == 1) {
    goto LABEL_18;
  }
LABEL_23:
  unsigned __int8 v25 = sub_2486C47D0(v2);
  unsigned __int8 v26 = *((void *)v3 + 2);
  unsigned __int8 v27 = MEMORY[0x263F8EE78];
  v108 = v3;
  if (v26)
  {
    unsigned __int8 v28 = v25;
    *(void *)&v117[0] = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_2486B9D40(0, v26, 0);
    unsigned __int8 v27 = *(void *)&v117[0];
    unint64_t v29 = v3 + 40;
    do
    {
      unsigned int v30 = (*(uint64_t (**)(void))(*(void *)v29 + 24))(*((void *)v29 - 1));
      unint64_t v32 = v31;
      *(void *)&v117[0] = v27;
      unsigned __int8 v34 = *(void *)(v27 + 16);
      unsigned __int8 v33 = *(void *)(v27 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_2486B9D40((char *)(v33 > 1), v34 + 1, 1);
        unsigned __int8 v27 = *(void *)&v117[0];
      }
      *(void *)(v27 + 16) = v34 + 1;
      unsigned __int8 v35 = v27 + 16 * v34;
      *(void *)(v35 + 32) = v30;
      *(void *)(v35 + 40) = v32;
      v29 += 16;
      --v26;
    }
    while (v26);
    swift_bridgeObjectRelease();
    unsigned __int8 v25 = v28;
  }
  *(void *)&v117[0] = v25;
  sub_24871B844(v27);
  unsigned int v36 = *(void *)&v117[0];
  char v37 = *v98;
  unint64_t v38 = *(void *)(*(void *)v99 + 8);
  LOBYTE(v117[0]) = 0;
  unsigned __int8 v39 = sub_2486B583C(v37, v38, (unsigned __int8 *)v117, 0, 0, 0);
  unsigned __int8 v41 = v40;
  swift_bridgeObjectRetain();
  unsigned __int8 v42 = sub_2486C4B64(v39, v41, v103);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&v117[0] = v105;
  *((void *)&v117[0] + 1) = v107;
  swift_bridgeObjectRetain();
  unint64_t v43 = sub_24872C600();
  if (v101 == 1)
  {
    *(void *)&v112[0] = 10;
    *((void *)&v112[0] + 1) = 0xE100000000000000;
    MEMORY[0x270FA5388](v43);
    v95 = v112;
    unsigned int v44 = sub_2486E3304(0x7FFFFFFFFFFFFFFFLL, 0, sub_2486C5554, (uint64_t)v94, 0xD000000000000050, 0x8000000248731320);
    MEMORY[0x24C57C170](32, 0xE100000000000000, 4);
    char v45 = sub_2486CAEA4((uint64_t)v44);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)&v112[0] = v45;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1E8);
    sub_2486C54FC(&qword_26931E1F0, &qword_26931E1E8);
    sub_2486C52E4();
    sub_24872C740();
    swift_bridgeObjectRelease();
    sub_24872C600();
    swift_bridgeObjectRelease();
  }
  *(void *)&v109 = 0;
  strcpy((char *)v112, "    opts=\"");
  BYTE11(v112[0]) = 0;
  HIDWORD(v112[0]) = -369098752;
  *(void *)&v110[0] = v36;
  unint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
  long long v100 = sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
  long long v101 = v46;
  sub_24872C4F0();
  swift_bridgeObjectRelease();
  sub_24872C600();
  swift_bridgeObjectRelease();
  sub_24872C600();
  sub_24872C600();
  swift_bridgeObjectRelease();
  unsigned __int8 v47 = *((void *)v42 + 2);
  if (v47)
  {
    uint64_t v48 = v42 + 40;
    do
    {
      *(void *)&v112[0] = 0;
      *((void *)&v112[0] + 1) = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_24872CAD0();
      swift_bridgeObjectRelease();
      *(void *)&v112[0] = 0xD000000000000010;
      *((void *)&v112[0] + 1) = 0x8000000248731200;
      sub_24872C600();
      swift_bridgeObjectRelease();
      sub_24872C600();
      sub_24872C600();
      swift_bridgeObjectRelease();
      v48 += 16;
      --v47;
    }
    while (v47);
  }
  swift_bridgeObjectRelease();
  *(void *)&v112[0] = 0;
  *((void *)&v112[0] + 1) = 0xE000000000000000;
  sub_24872CAD0();
  sub_24872C600();
  sub_24872C600();
  sub_24872C600();
  sub_24872C600();
  swift_bridgeObjectRelease();
  unsigned __int8 v49 = *v98;
  unsigned __int8 v50 = *(void *)(*(void *)v99 + 8);
  LOBYTE(v112[0]) = 0;
  unsigned __int8 v51 = sub_2486B583C(v49, v50, (unsigned __int8 *)v112, 0, 0, 0);
  unsigned int v53 = v52;
  char v54 = v103;
  swift_bridgeObjectRetain();
  unint64_t v55 = sub_2486C4E20(v51, v53, v54);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&v112[0] = v55;
  unsigned __int8 v56 = sub_24872C4F0();
  unsigned __int8 v58 = v57;
  swift_bridgeObjectRelease();
  unsigned __int8 v59 = HIBYTE(v58) & 0xF;
  if ((v58 & 0x2000000000000000) == 0) {
    unsigned __int8 v59 = v56 & 0xFFFFFFFFFFFFLL;
  }
  if (v59)
  {
    *(void *)&v112[0] = 0;
    *((void *)&v112[0] + 1) = 0xE000000000000000;
    sub_24872CAD0();
    unsigned int v60 = swift_bridgeObjectRelease();
    strcpy((char *)v112, "case $prev in\n");
    HIBYTE(v112[0]) = -18;
    *(void *)&v110[0] = 10;
    *((void *)&v110[0] + 1) = 0xE100000000000000;
    MEMORY[0x270FA5388](v60);
    v95 = v110;
    swift_bridgeObjectRetain();
    unsigned int v61 = sub_2486E3304(0x7FFFFFFFFFFFFFFFLL, 0, sub_2486C52C4, (uint64_t)v94, v56, v58);
    MEMORY[0x24C57C170](32, 0xE100000000000000, 4);
    char v62 = sub_2486CAEA4((uint64_t)v61);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)&v110[0] = v62;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1E8);
    *(void *)&v109 = sub_2486C54FC(&qword_26931E1F0, &qword_26931E1E8);
    sub_2486C52E4();
    sub_24872C740();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24872C600();
    swift_bridgeObjectRelease();
    unint64_t v63 = sub_24872C600();
    unsigned __int8 v64 = v112[0];
    *(void *)&v112[0] = 10;
    *((void *)&v112[0] + 1) = 0xE100000000000000;
    MEMORY[0x270FA5388](v63);
    v95 = v112;
    swift_bridgeObjectRetain();
    char v65 = sub_2486E3304(0x7FFFFFFFFFFFFFFFLL, 0, sub_2486C5554, (uint64_t)v94, v64, *((unint64_t *)&v64 + 1));
    MEMORY[0x24C57C170](32, 0xE100000000000000, 4);
    char v66 = sub_2486CAEA4((uint64_t)v65);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)&v112[0] = v66;
    uint64_t v67 = sub_24872C740();
    uint64_t v69 = v68;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)&v112[0] = v67;
    *((void *)&v112[0] + 1) = v69;
    swift_bridgeObjectRetain();
    sub_24872C600();
    swift_bridgeObjectRelease();
    sub_24872C600();
  }
  swift_bridgeObjectRelease();
  uint64_t v70 = v108;
  if (*((void *)v108 + 2))
  {
    *(void *)&v112[0] = 0;
    *((void *)&v112[0] + 1) = 0xE000000000000000;
    sub_24872CAD0();
    swift_bridgeObjectRelease();
    *(void *)&v112[0] = 0xD000000000000016;
    *((void *)&v112[0] + 1) = 0x80000002487312A0;
    sub_24872C600();
    swift_bridgeObjectRelease();
    sub_24872C600();
    sub_24872C600();
    swift_bridgeObjectRelease();
    uint64_t v71 = *((void *)v70 + 2);
    if (v71)
    {
      swift_bridgeObjectRetain();
      uint64_t v72 = (uint64_t *)(v70 + 40);
      *(void *)&v109 = 0x80000002487312C0;
      do
      {
        unint64_t v74 = *(v72 - 1);
        v73 = *v72;
        *(void *)&v112[0] = 0;
        *((void *)&v112[0] + 1) = 0xE000000000000000;
        sub_24872CAD0();
        swift_bridgeObjectRelease();
        *(void *)&v112[0] = 40;
        *((void *)&v112[0] + 1) = 0xE100000000000000;
        unint64_t v75 = *(void (**)(uint64_t, uint64_t))(v73 + 24);
        v75(v74, v73);
        sub_24872C600();
        swift_bridgeObjectRelease();
        sub_24872C600();
        sub_24872C600();
        sub_24872C600();
        v75(v74, v73);
        sub_24872C600();
        swift_bridgeObjectRelease();
        sub_24872C600();
        sub_24872C600();
        v76 = sub_24872C600();
        v77 = v112[0];
        *(void *)&v112[0] = 10;
        *((void *)&v112[0] + 1) = 0xE100000000000000;
        MEMORY[0x270FA5388](v76);
        v95 = v112;
        swift_bridgeObjectRetain();
        uint64_t v78 = sub_2486E3304(0x7FFFFFFFFFFFFFFFLL, 0, sub_2486C5554, (uint64_t)v94, v77, *((unint64_t *)&v77 + 1));
        MEMORY[0x24C57C170](32, 0xE100000000000000, 8);
        v79 = sub_2486CAEA4((uint64_t)v78);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)&v112[0] = v79;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1E8);
        sub_2486C54FC(&qword_26931E1F0, &qword_26931E1E8);
        sub_2486C52E4();
        sub_24872C740();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24872C600();
        swift_bridgeObjectRelease();
        v72 += 2;
        --v71;
      }
      while (v71);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v70 = v108;
      swift_bridgeObjectRelease();
      char v54 = v103;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_24872C600();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_24872C600();
  v80 = *((void *)&v117[0] + 1);
  v107 = *(void *)&v117[0];
  uint64_t v81 = *((void *)v70 + 2);
  if (v81)
  {
    *(void *)&v112[0] = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    long long v106 = v80;
    swift_bridgeObjectRetain();
    sub_2486B9D40(0, v81, 0);
    uint64_t v82 = 0;
    uint64_t v83 = *(void *)&v112[0];
    do
    {
      v109 = *(_OWORD *)&v70[16 * v82 + 32];
      swift_bridgeObjectRetain();
      int v84 = (char *)v54;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v84 = sub_24871A3EC(0, *(void *)(v54 + 16) + 1, 1, (char *)v54);
      }
      uint64_t v86 = *((void *)v84 + 2);
      uint64_t v85 = *((void *)v84 + 3);
      if (v86 >= v85 >> 1) {
        int v84 = sub_24871A3EC((char *)(v85 > 1), v86 + 1, 1, v84);
      }
      *((void *)v84 + 2) = v86 + 1;
      *(_OWORD *)&v84[16 * v86 + 32] = v109;
      v87 = sub_2486C27E4(v84);
      long long v89 = v88;
      swift_bridgeObjectRelease();
      *(void *)&v112[0] = v83;
      uint64_t v91 = *(void *)(v83 + 16);
      uint64_t v90 = *(void *)(v83 + 24);
      if (v91 >= v90 >> 1)
      {
        sub_2486B9D40((char *)(v90 > 1), v91 + 1, 1);
        uint64_t v83 = *(void *)&v112[0];
      }
      ++v82;
      *(void *)(v83 + 16) = v91 + 1;
      v92 = v83 + 16 * v91;
      *(void *)(v92 + 32) = v87;
      *(void *)(v92 + 40) = v89;
      uint64_t v70 = v108;
    }
    while (v81 != v82);
    v80 = v106;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v83 = MEMORY[0x263F8EE78];
  }
  *(void *)&v112[0] = v83;
  sub_24872C4F0();
  swift_bridgeObjectRelease();
  *(void *)&v112[0] = v107;
  *((void *)&v112[0] + 1) = v80;
  swift_bridgeObjectRetain();
  sub_24872C600();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return *(void *)&v112[0];
}

uint64_t sub_2486C38DC()
{
  if (*(unsigned char *)(v0 + 104)) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v2 = MEMORY[0x263F8EE78];
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (*(void *)v0 >= 2uLL) {
    uint64_t v3 = swift_bridgeObjectRetain();
  }
  int64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    sub_2486B9D40(0, v4, 0);
    uint64_t v1 = v2;
    uint64_t v5 = (unsigned __int8 *)(v3 + 48);
    while (1)
    {
      uint64_t v7 = *((void *)v5 - 2);
      uint64_t v6 = *((void *)v5 - 1);
      unsigned int v8 = *v5;
      if (!(v8 >> 6)) {
        break;
      }
      if (v8 >> 6 != 1)
      {
        uint64_t v14 = 45;
        unint64_t v9 = 0xE100000000000000;
        goto LABEL_12;
      }
      uint64_t v14 = 0;
      unint64_t v15 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_24872C600();
      sub_24872C4E0();
LABEL_13:
      sub_2486B7668(v7, v6, v8);
      unint64_t v11 = *(void *)(v1 + 16);
      unint64_t v10 = *(void *)(v1 + 24);
      if (v11 >= v10 >> 1) {
        sub_2486B9D40((char *)(v10 > 1), v11 + 1, 1);
      }
      v5 += 24;
      *(void *)(v1 + 16) = v11 + 1;
      uint64_t v12 = v1 + 16 * v11;
      *(void *)(v12 + 32) = v14;
      *(void *)(v12 + 40) = v15;
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        return v1;
      }
    }
    uint64_t v14 = 11565;
    unint64_t v9 = 0xE200000000000000;
LABEL_12:
    unint64_t v15 = v9;
    swift_bridgeObjectRetain();
    sub_24872C600();
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

void *sub_2486C3A98@<X0>(void *result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (*result)
  {
LABEL_2:
    *a3 = 0;
    a3[1] = 0;
  }
  else
  {
    uint64_t v5 = result;
    uint64_t v6 = result[4];
    uint64_t result = (void *)result[16];
    switch(*((unsigned char *)v5 + 144))
    {
      case 1:
      case 4:
        goto LABEL_2;
      case 2:
        uint64_t v26 = 10276;
        unint64_t v28 = 0xE200000000000000;
        sub_24872C600();
        goto LABEL_20;
      case 3:
        uint64_t v24 = v6;
        unsigned __int8 v25 = a3;
        unint64_t v8 = *(void *)(a2 + 16);
        unint64_t v9 = v8 != 0;
        uint64_t v10 = v8 - v9;
        if (v8 == v9) {
          goto LABEL_15;
        }
        uint64_t v27 = MEMORY[0x263F8EE78];
        swift_bridgeObjectRetain();
        sub_2486B9D40(0, v10 & ~(v10 >> 63), 0);
        if (v10 < 0) {
          goto LABEL_22;
        }
        uint64_t v11 = a2 + 16 * v9 + 40;
        do
        {
          if (v9 >= v8)
          {
            __break(1u);
LABEL_22:
            __break(1u);
            JUMPOUT(0x2486C3E20);
          }
          uint64_t v12 = (*(uint64_t (**)(void))(*(void *)v11 + 24))();
          uint64_t v14 = v13;
          unint64_t v16 = *(void *)(v27 + 16);
          unint64_t v15 = *(void *)(v27 + 24);
          if (v16 >= v15 >> 1) {
            sub_2486B9D40((char *)(v15 > 1), v16 + 1, 1);
          }
          *(void *)(v27 + 16) = v16 + 1;
          uint64_t v17 = v27 + 16 * v16;
          *(void *)(v17 + 32) = v12;
          *(void *)(v17 + 40) = v14;
          ++v9;
          v11 += 16;
        }
        while (v8 != v9);
        swift_bridgeObjectRelease();
LABEL_15:
        __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
        sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
        sub_24872C4F0();
        swift_bridgeObjectRelease();
        uint64_t v18 = sub_24870ACB4(MEMORY[0x263F8EE78]);
        if (v20 <= 0xFDu)
        {
          uint64_t v21 = v18;
          uint64_t v22 = v19;
          unsigned __int8 v23 = v20;
          sub_248714E64(v18, v19, v20);
          sub_2486C5540(v21, v22, v23);
        }
        else if (*(void *)(v24 + 16))
        {
          swift_bridgeObjectRetain();
        }
        a3 = v25;
        uint64_t v26 = 0;
        unint64_t v28 = 0xE000000000000000;
        sub_24872CAD0();
        sub_24872C600();
        sub_24872C600();
        swift_bridgeObjectRelease();
        sub_24872C600();
        sub_24872C600();
        swift_bridgeObjectRelease();
LABEL_20:
        uint64_t result = (void *)sub_24872C600();
        *a3 = v26;
        a3[1] = v28;
        break;
      default:
        __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
        sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
        uint64_t result = (void *)sub_24872C4F0();
        *a3 = (uint64_t)result;
        a3[1] = v7;
        return result;
    }
  }
  return result;
}

unint64_t sub_2486C3E34(uint64_t a1)
{
  uint64_t v3 = *((void *)v1 + 16);
  uint64_t v2 = *((void *)v1 + 17);
  switch(*((unsigned char *)v1 + 144))
  {
    case 1:
      int64_t v4 = *(void *)(v3 + 16);
      if (!v4) {
        return 0xD000000000000062;
      }
      *(void *)&long long v80 = MEMORY[0x263F8EE78];
      sub_2486B9D40(0, v4, 0);
      uint64_t v5 = 0;
      uint64_t v6 = v80;
      uint64_t v63 = v3 + 32;
      int64_t v62 = v4;
      break;
    case 2:
      sub_24872CAD0();
      swift_bridgeObjectRelease();
      strcpy((char *)&v67, "COMPREPLY=( $(");
      HIBYTE(v67) = -18;
      sub_24872C600();
      goto LABEL_56;
    case 3:
      *(void *)&long long v67 = 0;
      *((void *)&v67 + 1) = 0xE000000000000000;
      sub_24872CAD0();
      long long v80 = v67;
      sub_24872C600();
      long long v33 = v1[5];
      long long v71 = v1[4];
      long long v72 = v33;
      long long v34 = v1[7];
      long long v73 = v1[6];
      long long v74 = v34;
      long long v35 = v1[1];
      long long v67 = *v1;
      long long v68 = v35;
      long long v36 = v1[3];
      long long v69 = v1[2];
      long long v70 = v36;
      uint64_t v75 = v3;
      uint64_t v76 = v2;
      char v77 = 3;
      long long v78 = *(long long *)((char *)v1 + 145);
      *(_OWORD *)v79 = *(long long *)((char *)v1 + 161);
      *(_OWORD *)&v79[15] = v1[11];
      sub_2486C7834(a1);
      sub_24872C600();
      swift_bridgeObjectRelease();
      sub_24872C600();
      return v80;
    case 4:
      if (v3 | v2) {
        return 0xD000000000000065;
      }
      else {
        return 0;
      }
    default:
      sub_24872CAD0();
      swift_bridgeObjectRelease();
      *(void *)&long long v67 = 0xD00000000000001ALL;
      *((void *)&v67 + 1) = 0x80000002487313E0;
      *(void *)&long long v80 = v3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
      sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
      sub_24872C4F0();
      sub_24872C600();
      swift_bridgeObjectRelease();
      goto LABEL_56;
  }
  do
  {
    uint64_t v64 = v6;
    uint64_t v7 = (uint64_t *)(v63 + 16 * v5);
    uint64_t v8 = *v7;
    unint64_t v9 = v7[1];
    uint64_t v10 = HIBYTE(v9) & 0xF;
    if ((v9 & 0x2000000000000000) == 0) {
      uint64_t v10 = v8 & 0xFFFFFFFFFFFFLL;
    }
    *(void *)&long long v67 = v8;
    *((void *)&v67 + 1) = v9;
    *(void *)&long long v68 = 0;
    *((void *)&v68 + 1) = v10;
    swift_bridgeObjectRetain_n();
    uint64_t v11 = sub_24872C620();
    if (v12)
    {
      uint64_t v13 = v11;
      uint64_t v14 = v12;
      unint64_t v15 = (char *)MEMORY[0x263F8EE78];
      while (1)
      {
        if (v13 == 39 && v14 == 0xE100000000000000 || (sub_24872CEB0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          uint64_t v17 = qword_26FC75AC8;
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26931E210);
          uint64_t v18 = swift_allocObject();
          *(_OWORD *)(v18 + 16) = xmmword_24872D630;
          *(void *)(v18 + 32) = v13;
          *(void *)(v18 + 40) = v14;
          uint64_t v17 = 1;
        }
        int64_t v19 = *((void *)v15 + 2);
        int64_t v20 = v19 + v17;
        if (__OFADD__(v19, v17))
        {
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
          JUMPOUT(0x2486C47BCLL);
        }
        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v20 <= *((void *)v15 + 3) >> 1)
        {
          if (!v17) {
            goto LABEL_9;
          }
        }
        else
        {
          if (v19 <= v20) {
            int64_t v22 = v19 + v17;
          }
          else {
            int64_t v22 = v19;
          }
          unint64_t v15 = sub_24871AD94((char *)isUniquelyReferenced_nonNull_native, v22, 1, v15);
          if (!v17) {
            goto LABEL_9;
          }
        }
        if ((*((void *)v15 + 3) >> 1) - *((void *)v15 + 2) < v17) {
          goto LABEL_59;
        }
        swift_arrayInitWithCopy();
        uint64_t v23 = *((void *)v15 + 2);
        BOOL v24 = __OFADD__(v23, v17);
        uint64_t v25 = v23 + v17;
        if (v24) {
          goto LABEL_60;
        }
        *((void *)v15 + 2) = v25;
LABEL_9:
        swift_bridgeObjectRelease();
        uint64_t v13 = sub_24872C620();
        uint64_t v14 = v16;
        if (!v16) {
          goto LABEL_28;
        }
      }
    }
    unint64_t v15 = (char *)MEMORY[0x263F8EE78];
LABEL_28:
    swift_bridgeObjectRelease();
    *(void *)&long long v67 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E200);
    sub_2486C54FC(&qword_26931E208, &qword_26931E200);
    uint64_t v26 = sub_24872C6B0();
    uint64_t v28 = v27;
    swift_bridgeObjectRelease();
    uint64_t v6 = v64;
    *(void *)&long long v80 = v64;
    unint64_t v30 = *(void *)(v64 + 16);
    unint64_t v29 = *(void *)(v64 + 24);
    if (v30 >= v29 >> 1)
    {
      sub_2486B9D40((char *)(v29 > 1), v30 + 1, 1);
      uint64_t v6 = v80;
    }
    ++v5;
    *(void *)(v6 + 16) = v30 + 1;
    uint64_t v31 = v6 + 16 * v30;
    *(void *)(v31 + 32) = v26;
    *(void *)(v31 + 40) = v28;
  }
  while (v5 != v62);
  uint64_t v66 = v6;
  *(void *)&long long v67 = MEMORY[0x263F8EE78];
  uint64_t v38 = swift_retain();
  sub_2486B9D40(0, v30 + 1, 0);
  uint64_t v39 = v67;
  unint64_t v40 = v30 + 1;
  uint64_t v41 = v38 + 40;
  do
  {
    uint64_t v42 = sub_24872C480();
    uint64_t v44 = v43;
    *(void *)&long long v67 = v39;
    unint64_t v46 = *(void *)(v39 + 16);
    unint64_t v45 = *(void *)(v39 + 24);
    if (v46 >= v45 >> 1)
    {
      sub_2486B9D40((char *)(v45 > 1), v46 + 1, 1);
      uint64_t v39 = v67;
    }
    v41 += 16;
    *(void *)(v39 + 16) = v46 + 1;
    uint64_t v47 = v39 + 16 * v46;
    *(void *)(v47 + 32) = v42;
    *(void *)(v47 + 40) = v44;
    --v40;
  }
  while (v40);
  swift_release();
  sub_24871B844(v39);
  *(void *)&long long v67 = 0;
  *((void *)&v67 + 1) = 0xE000000000000000;
  sub_24872CAD0();
  sub_24872C600();
  uint64_t v48 = v66;
  int64_t v49 = *(void *)(v66 + 16);
  uint64_t v50 = MEMORY[0x263F8EE78];
  if (v49)
  {
    uint64_t v65 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_2486B9D40(0, v49, 0);
    uint64_t v51 = v65;
    uint64_t v52 = v66 + 40;
    do
    {
      *(void *)&long long v80 = 0x726964656C69665FLL;
      *((void *)&v80 + 1) = 0xEA00000000002720;
      swift_bridgeObjectRetain();
      sub_24872C600();
      sub_24872C600();
      swift_bridgeObjectRelease();
      long long v53 = v80;
      unint64_t v55 = *(void *)(v65 + 16);
      unint64_t v54 = *(void *)(v65 + 24);
      if (v55 >= v54 >> 1) {
        sub_2486B9D40((char *)(v54 > 1), v55 + 1, 1);
      }
      v52 += 16;
      *(void *)(v65 + 16) = v55 + 1;
      *(_OWORD *)(v65 + 16 * v55 + 32) = v53;
      --v49;
    }
    while (v49);
    uint64_t v48 = v66;
    swift_bridgeObjectRelease();
    uint64_t v50 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v51 = MEMORY[0x263F8EE78];
  }
  *(void *)&long long v80 = v51;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
  sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
  sub_24872C4F0();
  swift_bridgeObjectRelease();
  sub_24872C600();
  swift_bridgeObjectRelease();
  sub_24872C600();
  int64_t v56 = *(void *)(v48 + 16);
  if (v56)
  {
    swift_bridgeObjectRetain();
    sub_2486B9D40(0, v56, 0);
    uint64_t v57 = v50;
    uint64_t v58 = v48 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_24872CAD0();
      swift_bridgeObjectRelease();
      *(void *)&long long v80 = 0xD000000000000014;
      *((void *)&v80 + 1) = 0x80000002487314D0;
      sub_24872C600();
      sub_24872C600();
      swift_bridgeObjectRelease();
      long long v59 = v80;
      unint64_t v61 = *(void *)(v50 + 16);
      unint64_t v60 = *(void *)(v50 + 24);
      if (v61 >= v60 >> 1) {
        sub_2486B9D40((char *)(v60 > 1), v61 + 1, 1);
      }
      v58 += 16;
      *(void *)(v50 + 16) = v61 + 1;
      *(_OWORD *)(v50 + 16 * v61 + 32) = v59;
      --v56;
    }
    while (v56);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v57 = MEMORY[0x263F8EE78];
  }
  *(void *)&long long v80 = v57;
  sub_24872C4F0();
  swift_bridgeObjectRelease();
  sub_24872C600();
  swift_bridgeObjectRelease();
LABEL_56:
  sub_24872C600();
  return v67;
}

char *sub_2486C47D0(uint64_t a1)
{
  uint64_t v1 = sub_2486C86C4(0, a1);
  uint64_t v2 = (_OWORD *)v1;
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    uint64_t v4 = v1 + 32;
    swift_bridgeObjectRetain();
    uint64_t result = (char *)swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    long long v7 = v2[11];
    long long v56 = v2[10];
    long long v57 = v7;
    long long v8 = v2[13];
    long long v58 = v2[12];
    long long v59 = v8;
    long long v9 = v2[7];
    long long v52 = v2[6];
    long long v53 = v9;
    long long v10 = v2[9];
    long long v54 = v2[8];
    long long v55 = v10;
    long long v11 = v2[3];
    long long v48 = v2[2];
    long long v49 = v11;
    long long v12 = v2[5];
    long long v50 = v2[4];
    long long v51 = v12;
    uint64_t v13 = MEMORY[0x263F8EE78];
    uint64_t v14 = (char *)MEMORY[0x263F8EE78];
    uint64_t v44 = v3;
    unint64_t v45 = v2 + 2;
    uint64_t v15 = MEMORY[0x263F8EE78];
    if (BYTE8(v54)) {
      goto LABEL_19;
    }
LABEL_3:
    if ((unint64_t)v48 >= 2) {
      uint64_t v16 = v48;
    }
    else {
      uint64_t v16 = v13;
    }
    uint64_t v17 = v13;
    int64_t v18 = *(void *)(v16 + 16);
    if (v18)
    {
      sub_2486B77C8(v48);
      sub_2486B76D8((uint64_t)&v48);
      sub_2486B9D40(0, v18, 0);
      uint64_t v15 = v17;
      int64_t v19 = (unsigned __int8 *)(v16 + 48);
      while (1)
      {
        uint64_t v20 = *((void *)v19 - 2);
        uint64_t v21 = *((void *)v19 - 1);
        unsigned int v22 = *v19;
        if (!(v22 >> 6)) {
          break;
        }
        if (v22 >> 6 != 1)
        {
          uint64_t v46 = 45;
          unint64_t v23 = 0xE100000000000000;
          goto LABEL_13;
        }
        uint64_t v46 = 0;
        unint64_t v47 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        sub_24872C600();
        sub_24872C4E0();
LABEL_14:
        sub_2486B7668(v20, v21, v22);
        unint64_t v25 = *(void *)(v15 + 16);
        unint64_t v24 = *(void *)(v15 + 24);
        if (v25 >= v24 >> 1) {
          sub_2486B9D40((char *)(v24 > 1), v25 + 1, 1);
        }
        v19 += 24;
        *(void *)(v15 + 16) = v25 + 1;
        uint64_t v26 = v15 + 16 * v25;
        *(void *)(v26 + 32) = v46;
        *(void *)(v26 + 40) = v47;
        if (!--v18)
        {
          swift_bridgeObjectRelease();
          uint64_t result = (char *)sub_2486C539C((uint64_t)&v48);
          uint64_t v3 = v44;
          uint64_t v4 = (uint64_t)v45;
          uint64_t v13 = MEMORY[0x263F8EE78];
          goto LABEL_19;
        }
      }
      uint64_t v46 = 11565;
      unint64_t v23 = 0xE200000000000000;
LABEL_13:
      unint64_t v47 = v23;
      swift_bridgeObjectRetain();
      sub_24872C600();
      goto LABEL_14;
    }
    sub_2486B77C8(v48);
    uint64_t result = (char *)swift_bridgeObjectRelease();
    uint64_t v15 = v17;
    uint64_t v4 = (uint64_t)v45;
    uint64_t v13 = v17;
    while (1)
    {
LABEL_19:
      uint64_t v27 = *(void *)(v15 + 16);
      int64_t v28 = *((void *)v14 + 2);
      int64_t v29 = v28 + v27;
      if (__OFADD__(v28, v27))
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
      if (result && v29 <= *((void *)v14 + 3) >> 1)
      {
        if (*(void *)(v15 + 16)) {
          goto LABEL_23;
        }
      }
      else
      {
        if (v28 <= v29) {
          int64_t v33 = v28 + v27;
        }
        else {
          int64_t v33 = v28;
        }
        uint64_t result = sub_248719EA4(result, v33, 1, v14);
        uint64_t v14 = result;
        if (*(void *)(v15 + 16))
        {
LABEL_23:
          if ((*((void *)v14 + 3) >> 1) - *((void *)v14 + 2) < v27) {
            goto LABEL_40;
          }
          uint64_t result = (char *)swift_arrayInitWithCopy();
          if (v27)
          {
            uint64_t v30 = *((void *)v14 + 2);
            BOOL v31 = __OFADD__(v30, v27);
            uint64_t v32 = v30 + v27;
            if (v31) {
              goto LABEL_41;
            }
            *((void *)v14 + 2) = v32;
          }
          goto LABEL_32;
        }
      }
      if (v27) {
        goto LABEL_39;
      }
LABEL_32:
      ++v6;
      uint64_t result = (char *)swift_bridgeObjectRelease();
      if (v6 == v3)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        return v14;
      }
      long long v34 = (long long *)(v4 + 192 * v6);
      long long v35 = *v34;
      long long v36 = v34[1];
      long long v37 = v34[3];
      long long v50 = v34[2];
      long long v51 = v37;
      long long v48 = v35;
      long long v49 = v36;
      long long v38 = v34[4];
      long long v39 = v34[5];
      long long v40 = v34[6];
      long long v55 = v34[7];
      long long v53 = v39;
      long long v54 = v40;
      long long v52 = v38;
      long long v41 = v34[8];
      long long v42 = v34[9];
      long long v43 = v34[11];
      long long v58 = v34[10];
      long long v59 = v43;
      long long v56 = v41;
      long long v57 = v42;
      uint64_t v15 = v13;
      if (!BYTE8(v40)) {
        goto LABEL_3;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (char *)MEMORY[0x263F8EE78];
}

char *sub_2486C4B64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return (char *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  long long v7 = *(_OWORD *)(a1 + 176);
  long long v49 = *(_OWORD *)(a1 + 160);
  long long v50 = v7;
  long long v8 = *(_OWORD *)(a1 + 208);
  long long v51 = *(_OWORD *)(a1 + 192);
  long long v52 = v8;
  long long v9 = *(_OWORD *)(a1 + 112);
  long long v45 = *(_OWORD *)(a1 + 96);
  long long v46 = v9;
  long long v10 = *(_OWORD *)(a1 + 144);
  long long v47 = *(_OWORD *)(a1 + 128);
  long long v48 = v10;
  long long v11 = *(_OWORD *)(a1 + 48);
  long long v41 = *(_OWORD *)(a1 + 32);
  long long v42 = v11;
  long long v12 = *(_OWORD *)(a1 + 80);
  long long v43 = *(_OWORD *)(a1 + 64);
  long long v44 = v12;
  long long v37 = v49;
  long long v38 = v50;
  long long v39 = v51;
  long long v40 = v52;
  long long v33 = v45;
  long long v34 = v46;
  long long v35 = v47;
  long long v36 = v48;
  long long v29 = v41;
  long long v30 = v42;
  long long v31 = v43;
  long long v32 = v12;
  sub_2486B76D8((uint64_t)&v41);
  sub_2486C3A98(&v29, a3, &v27);
  if (v3)
  {
    uint64_t v13 = (char *)MEMORY[0x263F8EE78];
    sub_2486C539C((uint64_t)&v41);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = (char *)MEMORY[0x263F8EE78];
    uint64_t v14 = 224;
    uint64_t v53 = a3;
    while (1)
    {
      sub_2486C539C((uint64_t)&v41);
      uint64_t v15 = v28;
      if (v28)
      {
        uint64_t v16 = v27;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v13 = sub_248719EA4(0, *((void *)v13 + 2) + 1, 1, v13);
        }
        unint64_t v18 = *((void *)v13 + 2);
        unint64_t v17 = *((void *)v13 + 3);
        if (v18 >= v17 >> 1) {
          uint64_t v13 = sub_248719EA4((char *)(v17 > 1), v18 + 1, 1, v13);
        }
        *((void *)v13 + 2) = v18 + 1;
        int64_t v19 = &v13[16 * v18];
        *((void *)v19 + 4) = v16;
        *((void *)v19 + 5) = v15;
        a3 = v53;
      }
      if (!--v4) {
        break;
      }
      long long v20 = *(_OWORD *)(a1 + v14 + 144);
      long long v49 = *(_OWORD *)(a1 + v14 + 128);
      long long v50 = v20;
      long long v21 = *(_OWORD *)(a1 + v14 + 176);
      long long v51 = *(_OWORD *)(a1 + v14 + 160);
      long long v52 = v21;
      long long v22 = *(_OWORD *)(a1 + v14 + 80);
      long long v45 = *(_OWORD *)(a1 + v14 + 64);
      long long v46 = v22;
      long long v23 = *(_OWORD *)(a1 + v14 + 112);
      long long v47 = *(_OWORD *)(a1 + v14 + 96);
      long long v48 = v23;
      long long v24 = *(_OWORD *)(a1 + v14 + 16);
      long long v41 = *(_OWORD *)(a1 + v14);
      long long v42 = v24;
      long long v25 = *(_OWORD *)(a1 + v14 + 48);
      long long v43 = *(_OWORD *)(a1 + v14 + 32);
      long long v44 = v25;
      long long v37 = v49;
      long long v38 = v50;
      long long v39 = v51;
      long long v40 = v52;
      long long v33 = v45;
      long long v34 = v46;
      long long v35 = v47;
      long long v36 = v48;
      long long v29 = v41;
      long long v30 = v42;
      long long v31 = v43;
      long long v32 = v25;
      sub_2486B76D8((uint64_t)&v41);
      sub_2486C3A98(&v29, a3, &v27);
      v14 += 192;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v13;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

char *sub_2486C4E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v41 = a3;
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v5 = (_OWORD *)a1;
  swift_bridgeObjectRetain();
  v39[5] = a2;
  swift_bridgeObjectRetain();
  long long v6 = v5[11];
  long long v65 = v5[10];
  long long v66 = v6;
  long long v7 = v5[13];
  long long v67 = v5[12];
  long long v68 = v7;
  long long v8 = v5[7];
  long long v61 = v5[6];
  long long v62 = v8;
  long long v9 = v5[9];
  long long v63 = v5[8];
  long long v64 = v9;
  long long v10 = v5[3];
  uint64_t v11 = v3 - 1;
  uint64_t v12 = 14;
  long long v57 = v5[2];
  long long v58 = v10;
  long long v13 = v5[5];
  long long v59 = v5[4];
  long long v60 = v13;
  uint64_t v14 = (char *)MEMORY[0x263F8EE78];
  long long v40 = v5;
  while (1)
  {
    long long v54 = v66;
    long long v55 = v67;
    long long v56 = v68;
    long long v49 = v61;
    long long v50 = v62;
    long long v51 = v63;
    long long v52 = v64;
    long long v53 = v65;
    long long v45 = v57;
    long long v46 = v58;
    long long v47 = v59;
    long long v48 = v60;
    sub_2486B76D8((uint64_t)&v57);
    uint64_t v15 = *(void *)(sub_2486C38DC() + 16);
    swift_bridgeObjectRelease();
    if (v15)
    {
      if (BYTE8(v67)) {
        break;
      }
    }
    sub_2486C539C((uint64_t)&v57);
    if (!v11) {
      goto LABEL_13;
    }
LABEL_12:
    long long v31 = v5[v12 + 9];
    long long v65 = v5[v12 + 8];
    long long v66 = v31;
    long long v32 = v5[v12 + 11];
    long long v67 = v5[v12 + 10];
    long long v68 = v32;
    long long v33 = v5[v12 + 5];
    long long v61 = v5[v12 + 4];
    long long v62 = v33;
    long long v34 = v5[v12 + 7];
    long long v63 = v5[v12 + 6];
    long long v64 = v34;
    long long v35 = v5[v12 + 1];
    long long v57 = v5[v12];
    long long v58 = v35;
    long long v36 = v5[v12 + 2];
    long long v37 = v5[v12 + 3];
    v12 += 12;
    --v11;
    long long v59 = v36;
    long long v60 = v37;
  }
  *(void *)&long long v45 = 0;
  *((void *)&v45 + 1) = 0xE000000000000000;
  sub_24872CAD0();
  long long v42 = v14;
  long long v54 = v66;
  long long v55 = v67;
  long long v56 = v68;
  long long v49 = v61;
  long long v50 = v62;
  long long v51 = v63;
  long long v52 = v64;
  long long v53 = v65;
  long long v45 = v57;
  long long v46 = v58;
  long long v47 = v59;
  long long v48 = v60;
  *(void *)&long long v45 = sub_2486C38DC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
  sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
  uint64_t v16 = sub_24872C4F0();
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v43 = v16;
  uint64_t v44 = v18;
  sub_24872C600();
  long long v54 = v66;
  long long v55 = v67;
  long long v56 = v68;
  long long v49 = v61;
  long long v50 = v62;
  long long v51 = v63;
  long long v52 = v64;
  long long v53 = v65;
  long long v45 = v57;
  long long v46 = v58;
  long long v47 = v59;
  long long v48 = v60;
  unint64_t v19 = sub_2486C3E34(v41);
  unint64_t v21 = v20;
  *(void *)&long long v45 = 10;
  *((void *)&v45 + 1) = 0xE100000000000000;
  MEMORY[0x270FA5388](v19);
  v39[2] = &v45;
  swift_bridgeObjectRetain();
  uint64_t v22 = v19;
  uint64_t v23 = v69;
  long long v24 = sub_2486E3304(0x7FFFFFFFFFFFFFFFLL, 0, sub_2486C5554, (uint64_t)v39, v22, v21);
  MEMORY[0x24C57C170](32, 0xE100000000000000, 4);
  uint64_t v25 = sub_2486CAEA4((uint64_t)v24);
  uint64_t v69 = v23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v45 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1E8);
  sub_2486C54FC(&qword_26931E1F0, &qword_26931E1E8);
  sub_2486C52E4();
  sub_24872C740();
  uint64_t v14 = v42;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24872C600();
  swift_bridgeObjectRelease();
  sub_24872C600();
  sub_2486C539C((uint64_t)&v57);
  uint64_t v26 = v43;
  uint64_t v27 = v44;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v14 = sub_248719EA4(0, *((void *)v14 + 2) + 1, 1, v14);
  }
  unint64_t v29 = *((void *)v14 + 2);
  unint64_t v28 = *((void *)v14 + 3);
  if (v29 >= v28 >> 1) {
    uint64_t v14 = sub_248719EA4((char *)(v28 > 1), v29 + 1, 1, v14);
  }
  *((void *)v14 + 2) = v29 + 1;
  long long v30 = &v14[16 * v29];
  *((void *)v30 + 4) = v26;
  *((void *)v30 + 5) = v27;
  uint64_t v5 = v40;
  if (v11) {
    goto LABEL_12;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_2486C52C4(void *a1)
{
  return sub_2486E3CB0(a1, *(void **)(v1 + 16)) & 1;
}

unint64_t sub_2486C52E4()
{
  unint64_t result = qword_26931E1F8;
  if (!qword_26931E1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E1F8);
  }
  return result;
}

unint64_t sub_2486C5338()
{
  unint64_t result = qword_26B13FC80;
  if (!qword_26B13FC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B13FC80);
  }
  return result;
}

uint64_t sub_2486C539C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 128);
  uint64_t v3 = *(void *)(a1 + 136);
  char v4 = *(unsigned char *)(a1 + 144);
  sub_2486C548C(*(void *)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2486C549C(v2, v3, v4);
  sub_2486C54F4();
  swift_release();
  return a1;
}

unint64_t sub_2486C548C(unint64_t result)
{
  if (result >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2486C549C(uint64_t a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 3:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2486C54F4()
{
  return swift_release();
}

uint64_t sub_2486C54FC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2486C5540(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0xFDu) {
    return sub_2486B7668(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_2486C5554(void *a1)
{
  return sub_2486C52C4(a1) & 1;
}

uint64_t sub_2486C5570(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (*(uint64_t (**)(void))(a2 + 24))();
  uint64_t v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B140108);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_24872DB70;
  *(void *)(v7 + 32) = sub_2486C6884();
  *(void *)(v7 + 40) = v8;
  *(void *)(v7 + 48) = sub_2486C69A4();
  *(void *)(v7 + 56) = v9;
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_24872D630;
  *(void *)(v10 + 32) = v4;
  *(void *)(v10 + 40) = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400D8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24872D630;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  sub_2486C576C(v10, inited);
  swift_setDeallocating();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
  sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
  uint64_t v12 = sub_24872C4F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24872C600();
  swift_bridgeObjectRelease();
  sub_24872C4F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24872C600();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_2486C576C(uint64_t a1, uint64_t a2)
{
  void (*v9)(_OWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  unint64_t v53;
  unint64_t v54;
  char *v55;
  uint64_t inited;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  int64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  long long v69;
  long long v70;
  _OWORD v71[8];
  uint64_t v72;
  _OWORD v73[6];
  long long v74;
  long long v75;
  uint64_t v76;
  char *v77;
  _OWORD v78[6];
  long long v79;
  long long v80;
  uint64_t v81;
  _OWORD v82[8];
  uint64_t v83;

  uint64_t v5 = *(void *)(a2 + 16);
  if (!v5) {
    goto LABEL_61;
  }
  uint64_t v4 = (char *)a1;
  if (!*(void *)(a1 + 16)) {
    goto LABEL_62;
  }
  long long v66 = a2;
  uint64_t v6 = a2 + 16 * v5;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = *(void *)(v6 + 24);
  uint64_t v9 = *(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v8 + 16);
  swift_bridgeObjectRetain();
  v9(v78, v7, v8);
  v82[6] = v79;
  v82[7] = v80;
  uint64_t v83 = v81;
  v82[2] = v78[2];
  v82[3] = v78[3];
  v82[4] = v78[4];
  v82[5] = v78[5];
  v82[0] = v78[0];
  v82[1] = v78[1];
  uint64_t v10 = *((void *)&v79 + 1);
  swift_bridgeObjectRetain();
  sub_2486BAFC4((uint64_t)v82);
  uint64_t v11 = *(void *)(v10 + 16);
  long long v67 = v4;
  if (v11)
  {
    uint64_t v12 = 0;
    long long v13 = v11 - 1;
    uint64_t v3 = (char *)MEMORY[0x263F8EE78];
    while (1)
    {
      uint64_t v69 = *(_OWORD *)(v10 + 16 * v12 + 32);
      (*(void (**)(_OWORD *__return_ptr))(*(void *)(v10 + 16 * v12 + 40) + 16))(v71);
      long long v74 = v71[6];
      uint64_t v75 = v71[7];
      uint64_t v76 = v72;
      v73[2] = v71[2];
      v73[3] = v71[3];
      v73[4] = v71[4];
      v73[5] = v71[5];
      v73[0] = v71[0];
      v73[1] = v71[1];
      sub_2486BAFC4((uint64_t)v73);
      if (v74 == 1)
      {
        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        char v77 = v3;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_2486B9DF0(0, *((void *)v3 + 2) + 1, 1);
          uint64_t v3 = v77;
        }
        uint64_t v16 = *((void *)v3 + 2);
        uint64_t v15 = *((void *)v3 + 3);
        if (v16 >= v15 >> 1)
        {
          sub_2486B9DF0((char *)(v15 > 1), v16 + 1, 1);
          uint64_t v3 = v77;
        }
        *((void *)v3 + 2) = v16 + 1;
        *(_OWORD *)&v3[16 * v16 + 32] = v69;
      }
      if (v13 == v12) {
        break;
      }
      ++v12;
    }
    swift_bridgeObjectRelease();
    uint64_t v4 = v67;
    if (v5 != 1) {
      goto LABEL_21;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = (char *)MEMORY[0x263F8EE78];
    if (v5 != 1) {
      goto LABEL_21;
    }
  }
  int64_t v2 = *((void *)v3 + 2);
  if (v2)
  {
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_18;
    }
    goto LABEL_63;
  }
  while (1)
  {
LABEL_21:
    strcpy((char *)v78, "_swift_");
    *((void *)&v78[0] + 1) = 0xE700000000000000;
    sub_24872C600();
    swift_bridgeObjectRetain();
    sub_24872C600();
    swift_bridgeObjectRelease();
    unint64_t v21 = swift_allocObject();
    *(void *)&v78[0] = 0;
    *((void *)&v78[0] + 1) = 0xE000000000000000;
    sub_24872CAD0();
    swift_bridgeObjectRelease();
    strcpy((char *)v78, "complete -c ");
    BYTE13(v78[0]) = 0;
    HIWORD(v78[0]) = -5120;
    sub_24872C600();
    swift_bridgeObjectRelease();
    sub_24872C600();
    sub_24872C600();
    swift_bridgeObjectRelease();
    sub_24872C600();
    *(void *)&v73[0] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
    sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
    sub_24872C4F0();
    sub_24872C600();
    swift_bridgeObjectRelease();
    sub_24872C600();
    uint64_t v22 = *((void *)&v78[0] + 1);
    *(void *)(v21 + 16) = *(void *)&v78[0];
    *(void *)(v21 + 24) = v22;
    uint64_t v23 = *((void *)v3 + 2);
    long long v68 = v3;
    if (v23)
    {
      *(void *)&v78[0] = 8736;
      *((void *)&v78[0] + 1) = 0xE200000000000000;
      *(void *)&v73[0] = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      sub_2486B9D40(0, v23, 0);
      long long v24 = *(void *)&v73[0];
      uint64_t v25 = v3 + 40;
      do
      {
        uint64_t v26 = (*(uint64_t (**)(void))(*(void *)v25 + 24))();
        unint64_t v28 = v27;
        *(void *)&v73[0] = v24;
        long long v30 = *(void *)(v24 + 16);
        unint64_t v29 = *(void *)(v24 + 24);
        if (v30 >= v29 >> 1)
        {
          sub_2486B9D40((char *)(v29 > 1), v30 + 1, 1);
          long long v24 = *(void *)&v73[0];
        }
        *(void *)(v24 + 16) = v30 + 1;
        long long v31 = v24 + 16 * v30;
        *(void *)(v31 + 32) = v26;
        *(void *)(v31 + 40) = v28;
        v25 += 16;
        --v23;
      }
      while (v23);
      uint64_t v3 = v68;
      swift_bridgeObjectRelease();
      *(void *)&v73[0] = v24;
      sub_24872C4F0();
      swift_release();
      sub_24872C600();
      swift_bridgeObjectRelease();
      sub_24872C600();
      sub_24872C600();
      swift_bridgeObjectRelease();
    }
    sub_24872C600();
    long long v32 = swift_bridgeObjectRetain();
    long long v65 = sub_2486C6BE8(v32, v21);
    swift_bridgeObjectRelease();
    long long v33 = sub_2486C86C4(0, v66);
    long long v35 = v34;
    swift_bridgeObjectRetain();
    long long v36 = sub_2486C6EBC(v33, v35, (uint64_t)v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v37 = v36[2];
    if (v37)
    {
      *(void *)&v78[0] = MEMORY[0x263F8EE78];
      sub_2486B9D40(0, v37, 0);
      long long v38 = 0;
      long long v39 = *(void *)&v78[0];
      do
      {
        *(void *)&v73[0] = v36[v38 + 4];
        swift_bridgeObjectRetain();
        long long v40 = sub_24872C4F0();
        long long v42 = v41;
        swift_bridgeObjectRelease();
        *(void *)&v78[0] = v39;
        uint64_t v44 = *(void *)(v39 + 16);
        uint64_t v43 = *(void *)(v39 + 24);
        if (v44 >= v43 >> 1)
        {
          sub_2486B9D40((char *)(v43 > 1), v44 + 1, 1);
          long long v39 = *(void *)&v78[0];
        }
        ++v38;
        *(void *)(v39 + 16) = v44 + 1;
        long long v45 = v39 + 16 * v44;
        *(void *)(v45 + 32) = v40;
        *(void *)(v45 + 40) = v42;
      }
      while (v37 != v38);
      swift_bridgeObjectRelease();
      uint64_t v3 = v68;
    }
    else
    {
      swift_bridgeObjectRelease();
      long long v39 = MEMORY[0x263F8EE78];
    }
    long long v46 = sub_2486C7058(v39, v21);
    swift_bridgeObjectRelease();
    long long v47 = *((void *)v3 + 2);
    if (!v47) {
      break;
    }
    long long v66 = v46;
    swift_bridgeObjectRetain_n();
    long long v48 = 0;
    uint64_t v4 = (char *)MEMORY[0x263F8EE78];
    while (1)
    {
      long long v70 = *(_OWORD *)&v3[16 * v48 + 32];
      long long v49 = (*(uint64_t (**)(void))(*(void *)&v3[16 * v48 + 40] + 24))();
      long long v51 = v50;
      long long v52 = v67;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v52 = sub_248719EA4(0, *((void *)v67 + 2) + 1, 1, v67);
      }
      long long v54 = *((void *)v52 + 2);
      long long v53 = *((void *)v52 + 3);
      if (v54 >= v53 >> 1) {
        long long v52 = sub_248719EA4((char *)(v53 > 1), v54 + 1, 1, v52);
      }
      *((void *)v52 + 2) = v54 + 1;
      long long v55 = &v52[16 * v54];
      *((void *)v55 + 4) = v49;
      *((void *)v55 + 5) = v51;
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400D8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_24872D630;
      *(_OWORD *)(inited + 32) = v70;
      long long v57 = sub_2486C576C(v52, inited);
      swift_setDeallocating();
      swift_bridgeObjectRelease();
      long long v58 = *(void *)(v57 + 16);
      int64_t v2 = *((void *)v4 + 2);
      uint64_t v3 = (char *)(v2 + v58);
      if (__OFADD__(v2, v58)) {
        break;
      }
      long long v59 = (char *)swift_isUniquelyReferenced_nonNull_native();
      if (!v59 || (uint64_t)v3 > *((void *)v4 + 3) >> 1)
      {
        if (v2 <= (uint64_t)v3) {
          long long v60 = v2 + v58;
        }
        else {
          long long v60 = v2;
        }
        uint64_t v4 = sub_248719EA4(v59, v60, 1, v4);
      }
      uint64_t v3 = v68;
      if (*(void *)(v57 + 16))
      {
        if ((*((void *)v4 + 3) >> 1) - *((void *)v4 + 2) < v58) {
          goto LABEL_59;
        }
        swift_arrayInitWithCopy();
        if (v58)
        {
          long long v61 = *((void *)v4 + 2);
          long long v62 = __OFADD__(v61, v58);
          long long v63 = v61 + v58;
          if (v62) {
            goto LABEL_60;
          }
          *((void *)v4 + 2) = v63;
        }
      }
      else if (v58)
      {
        __break(1u);
        break;
      }
      swift_bridgeObjectRelease();
      if (v47 == ++v48)
      {
        swift_bridgeObjectRelease_n();
        long long v46 = v66;
        goto LABEL_56;
      }
    }
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    uint64_t v3 = sub_24871A3EC(0, v2 + 1, 1, v3);
LABEL_18:
    uint64_t v18 = *((void *)v3 + 2);
    uint64_t v17 = *((void *)v3 + 3);
    if (v18 >= v17 >> 1) {
      uint64_t v3 = sub_24871A3EC((char *)(v17 > 1), v18 + 1, 1, v3);
    }
    unint64_t v19 = sub_2486C5338();
    *((void *)v3 + 2) = v18 + 1;
    unint64_t v20 = &v3[16 * v18];
    *((void *)v20 + 4) = &type metadata for HelpCommand;
    *((void *)v20 + 5) = v19;
  }
  uint64_t v4 = (char *)MEMORY[0x263F8EE78];
LABEL_56:
  swift_bridgeObjectRelease();
  *(void *)&v78[0] = v4;
  sub_24871B844(v46);
  sub_24871B844(v65);
  swift_release();
  return *(void *)&v78[0];
}

char *sub_2486C609C(uint64_t a1)
{
  if (*(unsigned char *)(v1 + 104)) {
    return 0;
  }
  unint64_t v5 = *(void *)v1;
  uint64_t v6 = *(char **)(v1 + 56);
  unint64_t v7 = *(void *)(v1 + 64);
  uint64_t v9 = *(char **)(v1 + 128);
  uint64_t v8 = *(void *)(v1 + 136);
  uint64_t v10 = *(unsigned __int8 *)(v1 + 144);
  char v11 = *(unsigned char *)(v1 + 168);
  if (v5 > 1)
  {
    if (!*(void *)(v5 + 16)) {
      return 0;
    }
    uint64_t v40 = v8;
    uint64_t v41 = v10;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v40 = v8;
    uint64_t v41 = v10;
    unint64_t v5 = MEMORY[0x263F8EE78];
    uint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
    swift_bridgeObjectRelease();
    if (!v12) {
      return 0;
    }
  }
  int64_t v13 = *(void *)(v5 + 16);
  if (v13)
  {
    unint64_t v37 = v7;
    long long v38 = v9;
    uint64_t v39 = a1;
    uint64_t v43 = (char *)MEMORY[0x263F8EE78];
    sub_2486B9D40(0, v13, 0);
    uint64_t v14 = v43;
    uint64_t v15 = (unsigned __int8 *)(v5 + 48);
    while (1)
    {
      uint64_t v17 = *((void *)v15 - 2);
      uint64_t v16 = *((void *)v15 - 1);
      unsigned int v18 = *v15;
      if (!(v18 >> 6)) {
        break;
      }
      if (v18 >> 6 != 1)
      {
        v42[0] = 2125613;
        goto LABEL_16;
      }
      v42[0] = 0;
      v42[1] = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_24872C600();
      sub_24872C4E0();
LABEL_17:
      sub_2486B7668(v17, v16, v18);
      uint64_t v19 = v42[0];
      uint64_t v20 = v42[1];
      uint64_t v43 = v14;
      unint64_t v22 = *((void *)v14 + 2);
      unint64_t v21 = *((void *)v14 + 3);
      if (v22 >= v21 >> 1)
      {
        sub_2486B9D40((char *)(v21 > 1), v22 + 1, 1);
        uint64_t v14 = v43;
      }
      v15 += 24;
      *((void *)v14 + 2) = v22 + 1;
      uint64_t v23 = &v14[16 * v22];
      *((void *)v23 + 4) = v19;
      *((void *)v23 + 5) = v20;
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        uint64_t v9 = v38;
        a1 = v39;
        unint64_t v7 = v37;
        goto LABEL_22;
      }
    }
    v42[0] = 2124845;
LABEL_16:
    v42[1] = 0xE300000000000000;
    sub_2486B7650(v17, v16, v18);
    sub_24872C600();
    goto LABEL_17;
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = (char *)MEMORY[0x263F8EE78];
LABEL_22:
  uint64_t v24 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0) {
    uint64_t v24 = (unint64_t)v6 & 0xFFFFFFFFFFFFLL;
  }
  if (v24)
  {
    v42[0] = 656434221;
    v42[1] = 0xE400000000000000;
    uint64_t v43 = v6;
    unint64_t v44 = v7;
    v42[6] = 39;
    v42[7] = 0xE100000000000000;
    v42[4] = 10076;
    v42[5] = 0xE200000000000000;
    sub_2486B71D8();
    sub_24872C970();
    sub_24872C600();
    swift_bridgeObjectRelease();
    sub_24872C600();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v14 = sub_248719EA4(0, *((void *)v14 + 2) + 1, 1, v14);
    }
    unint64_t v26 = *((void *)v14 + 2);
    unint64_t v25 = *((void *)v14 + 3);
    if (v26 >= v25 >> 1) {
      uint64_t v14 = sub_248719EA4((char *)(v25 > 1), v26 + 1, 1, v14);
    }
    *((void *)v14 + 2) = v26 + 1;
    uint64_t v27 = &v14[16 * v26];
    *((void *)v27 + 4) = 656434221;
    *((void *)v27 + 5) = 0xE400000000000000;
    swift_bridgeObjectRelease();
  }
  if ((v11 & 1) == 0) {
    return v14;
  }
  switch(v41)
  {
    case 1:
      uint64_t v43 = v9;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
      sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
      sub_24872C4F0();
      sub_24872C600();
      swift_bridgeObjectRelease();
      sub_24872C600();
      sub_24872CAD0();
      swift_bridgeObjectRelease();
      v42[0] = 0xD000000000000014;
      v42[1] = 0x8000000248731660;
      sub_24872C600();
      swift_bridgeObjectRelease();
      goto LABEL_37;
    case 2:
      strcpy((char *)v42, "-r -f -a '(");
      HIDWORD(v42[1]) = -352321536;
      sub_24872C600();
      goto LABEL_37;
    case 3:
      uint64_t v28 = *(void *)(a1 + 16);
      if (v28)
      {
        v42[2] = 1;
        v42[3] = (2 * v28) | 1;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26931E218);
        sub_2486C54FC(&qword_26931E220, &qword_26931E218);
        sub_24872C4F0();
        swift_bridgeObjectRelease();
        v42[0] = 0;
        v42[1] = 0xE000000000000000;
        sub_24872CAD0();
        sub_24872C600();
        sub_24872C600();
        swift_bridgeObjectRelease();
        sub_24872C600();
        sub_24872C600();
        swift_bridgeObjectRelease();
LABEL_37:
        sub_24872C600();
        uint64_t v30 = v42[0];
        uint64_t v29 = v42[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        int64_t v2 = v14;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int64_t v2 = sub_248719EA4(0, *((void *)v14 + 2) + 1, 1, v14);
        }
        unint64_t v32 = *((void *)v2 + 2);
        unint64_t v31 = *((void *)v2 + 3);
        if (v32 >= v31 >> 1) {
          int64_t v2 = sub_248719EA4((char *)(v31 > 1), v32 + 1, 1, v2);
        }
        *((void *)v2 + 2) = v32 + 1;
        long long v33 = &v2[16 * v32];
        *((void *)v33 + 4) = v30;
        *((void *)v33 + 5) = v29;
        swift_bridgeObjectRelease();
      }
      else
      {
        __break(1u);
LABEL_50:
        int64_t v2 = sub_248719EA4(0, *((void *)v14 + 2) + 1, 1, v14);
LABEL_45:
        unint64_t v35 = *((void *)v2 + 2);
        unint64_t v34 = *((void *)v2 + 3);
        if (v35 >= v34 >> 1) {
          int64_t v2 = sub_248719EA4((char *)(v34 > 1), v35 + 1, 1, v2);
        }
        *((void *)v2 + 2) = v35 + 1;
        long long v36 = &v2[16 * v35];
        *((void *)v36 + 4) = 0xD000000000000028;
        *((void *)v36 + 5) = 0x8000000248731630;
      }
      swift_bridgeObjectRelease();
      break;
    case 4:
      if (!((unint64_t)v9 | v40)) {
        return v14;
      }
      swift_bridgeObjectRetain();
      int64_t v2 = v14;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_45;
      }
      goto LABEL_50;
    default:
      sub_24872CAD0();
      swift_bridgeObjectRelease();
      strcpy((char *)v42, "-r -f -k -a '");
      HIWORD(v42[1]) = -4864;
      uint64_t v43 = v9;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
      sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
      sub_24872C4F0();
      sub_24872C600();
      swift_bridgeObjectRelease();
      goto LABEL_37;
  }
  return v2;
}

uint64_t sub_2486C6884()
{
  return 0;
}

uint64_t sub_2486C69A4()
{
  return 0;
}

uint64_t sub_2486C6BB0()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2486C6BE8(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v20 = MEMORY[0x263F8EE78];
    sub_2486B9D40(0, v2, 0);
    uint64_t v3 = v20;
    uint64_t v15 = a2;
    swift_beginAccess();
    uint64_t v6 = (void *)(a1 + 40);
    for (int64_t i = v2 - 1; ; int64_t i = v21 - 1)
    {
      int64_t v21 = i;
      uint64_t v8 = *(v6 - 1);
      uint64_t v9 = *v6;
      (*(void (**)(_OWORD *__return_ptr, uint64_t, void))(*v6 + 16))(v16, v8, *v6);
      v18[6] = v16[6];
      v18[7] = v16[7];
      uint64_t v19 = v17;
      v18[2] = v16[2];
      v18[3] = v16[3];
      v18[4] = v16[4];
      v18[5] = v16[5];
      v18[0] = v16[0];
      v18[1] = v16[1];
      swift_bridgeObjectRetain();
      sub_2486BAFC4((uint64_t)v18);
      sub_2486B71D8();
      sub_24872C970();
      swift_bridgeObjectRelease();
      *(void *)&v16[0] = 0;
      *((void *)&v16[0] + 1) = 0xE000000000000000;
      sub_24872CAD0();
      swift_bridgeObjectRelease();
      *(void *)&v16[0] = 0x2720612D20662DLL;
      *((void *)&v16[0] + 1) = 0xE700000000000000;
      (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9);
      sub_24872C600();
      swift_bridgeObjectRelease();
      sub_24872C600();
      sub_24872C600();
      swift_bridgeObjectRelease();
      sub_24872C600();
      uint64_t v10 = *(void *)(v15 + 24);
      *(void *)&v16[0] = *(void *)(v15 + 16);
      *((void *)&v16[0] + 1) = v10;
      swift_bridgeObjectRetain();
      sub_24872C600();
      sub_24872C600();
      swift_bridgeObjectRelease();
      long long v11 = v16[0];
      uint64_t v20 = v3;
      unint64_t v13 = *(void *)(v3 + 16);
      unint64_t v12 = *(void *)(v3 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_2486B9D40((char *)(v12 > 1), v13 + 1, 1);
        uint64_t v3 = v20;
      }
      *(void *)(v3 + 16) = v13 + 1;
      *(_OWORD *)(v3 + 16 * v13 + 32) = v11;
      if (!v21) {
        break;
      }
      v6 += 2;
    }
  }
  return v3;
}

void *sub_2486C6EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (void *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = v3 - 1;
  unint64_t v7 = (void *)MEMORY[0x263F8EE78];
  for (uint64_t i = 32; ; i += 192)
  {
    long long v9 = *(_OWORD *)(a1 + i + 144);
    v19[8] = *(_OWORD *)(a1 + i + 128);
    v19[9] = v9;
    long long v10 = *(_OWORD *)(a1 + i + 176);
    v19[10] = *(_OWORD *)(a1 + i + 160);
    v19[11] = v10;
    long long v11 = *(_OWORD *)(a1 + i + 80);
    v19[4] = *(_OWORD *)(a1 + i + 64);
    v19[5] = v11;
    long long v12 = *(_OWORD *)(a1 + i + 112);
    v19[6] = *(_OWORD *)(a1 + i + 96);
    v19[7] = v12;
    long long v13 = *(_OWORD *)(a1 + i + 16);
    v19[0] = *(_OWORD *)(a1 + i);
    v19[1] = v13;
    long long v14 = *(_OWORD *)(a1 + i + 48);
    uint64_t v19[2] = *(_OWORD *)(a1 + i + 32);
    v19[3] = v14;
    sub_2486B76D8((uint64_t)v19);
    uint64_t v15 = sub_2486C609C(a3);
    sub_2486C539C((uint64_t)v19);
    if (v15)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v7 = sub_24871AC70(0, v7[2] + 1, 1, v7);
      }
      unint64_t v17 = v7[2];
      unint64_t v16 = v7[3];
      if (v17 >= v16 >> 1) {
        unint64_t v7 = sub_24871AC70((void *)(v16 > 1), v17 + 1, 1, v7);
      }
      v7[2] = v17 + 1;
      v7[v17 + 4] = v15;
    }
    if (!v6) {
      break;
    }
    --v6;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_2486C7058(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_2486B9D40(0, v2, 0);
    uint64_t v3 = v13;
    swift_beginAccess();
    uint64_t v6 = a1 + 40;
    do
    {
      uint64_t v11 = *(void *)(a2 + 16);
      uint64_t v12 = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24872C600();
      sub_24872C600();
      swift_bridgeObjectRelease();
      unint64_t v8 = *(void *)(v13 + 16);
      unint64_t v7 = *(void *)(v13 + 24);
      if (v8 >= v7 >> 1) {
        sub_2486B9D40((char *)(v7 > 1), v8 + 1, 1);
      }
      v6 += 16;
      *(void *)(v13 + 16) = v8 + 1;
      uint64_t v9 = v13 + 16 * v8;
      *(void *)(v9 + 32) = v11;
      *(void *)(v9 + 40) = v12;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_2486C718C()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  BOOL v5 = *v0 == 6845306 && v1 == 0xE300000000000000;
  if (v5 || (sub_24872CEB0() & 1) != 0) {
    return sub_2486C8850(v4, v3);
  }
  sub_24872CEB0();
  if (v2 == 1752392034 && v1 == 0xE400000000000000 || (sub_24872CEB0() & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400D8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24872D630;
    *(void *)(inited + 32) = v4;
    *(void *)(inited + 40) = v3;
    sub_2486C7644(inited);
    swift_setDeallocating();
    sub_2486B71D8();
    sub_24872C970();
    swift_bridgeObjectRelease();
    sub_24872CAD0();
    swift_bridgeObjectRelease();
    strcpy((char *)v9, "#!/bin/bash\n\n");
    HIWORD(v9[1]) = -4864;
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_24872D630;
    *(void *)(v8 + 32) = v4;
    *(void *)(v8 + 40) = v3;
    sub_2486C27E4(v8);
    swift_bridgeObjectRelease();
    sub_24872C600();
    swift_bridgeObjectRelease();
    sub_24872C600();
    sub_24872C600();
    swift_bridgeObjectRelease();
    sub_24872C600();
    (*(void (**)(uint64_t, uint64_t))(v3 + 24))(v4, v3);
    sub_24872C600();
    swift_bridgeObjectRelease();
    return v9[0];
  }
  else
  {
    if ((sub_24872CEB0() & 1) == 0) {
      sub_24872CEB0();
    }
    if (v2 == 1752394086 && v1 == 0xE400000000000000 || (sub_24872CEB0() & 1) != 0)
    {
      return sub_2486C5570(v4, v3);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_24872CAD0();
      sub_24872C600();
      sub_24872CBB0();
      swift_bridgeObjectRelease();
      uint64_t result = sub_24872CC40();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_2486C7544(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v16 = MEMORY[0x263F8EE78];
    sub_2486B9D40(0, v1, 0);
    uint64_t v2 = v16;
    uint64_t v4 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v5 = *(v4 - 3);
      uint64_t v6 = *(v4 - 2);
      uint64_t v7 = *(v4 - 1);
      uint64_t v8 = *v4;
      swift_bridgeObjectRetain();
      uint64_t v9 = MEMORY[0x24C57C040](v5, v6, v7, v8);
      uint64_t v11 = v10;
      swift_bridgeObjectRelease();
      unint64_t v13 = *(void *)(v16 + 16);
      unint64_t v12 = *(void *)(v16 + 24);
      if (v13 >= v12 >> 1) {
        sub_2486B9D40((char *)(v12 > 1), v13 + 1, 1);
      }
      *(void *)(v16 + 16) = v13 + 1;
      uint64_t v14 = v16 + 16 * v13;
      *(void *)(v14 + 32) = v9;
      *(void *)(v14 + 40) = v11;
      v4 += 4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2486C7644(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1)
  {
    uint64_t v3 = (char *)MEMORY[0x263F8EE78];
LABEL_20:
    sub_2486C8394(v3);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
    sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
    sub_24872C4F0();
    swift_bridgeObjectRelease();
    sub_24872C600();
    swift_bridgeObjectRelease();
    return 95;
  }
  uint64_t v2 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  uint64_t v3 = (char *)MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t result = sub_2486C8168(*(v2 - 1), *v2);
    uint64_t v5 = *(void *)(result + 16);
    int64_t v6 = *((void *)v3 + 2);
    int64_t v7 = v6 + v5;
    if (__OFADD__(v6, v5)) {
      break;
    }
    uint64_t v8 = result;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if (result && v7 <= *((void *)v3 + 3) >> 1)
    {
      if (*(void *)(v8 + 16)) {
        goto LABEL_14;
      }
    }
    else
    {
      if (v6 <= v7) {
        int64_t v9 = v6 + v5;
      }
      else {
        int64_t v9 = v6;
      }
      uint64_t result = (uint64_t)sub_248719EA4((char *)result, v9, 1, v3);
      uint64_t v3 = (char *)result;
      if (*(void *)(v8 + 16))
      {
LABEL_14:
        if ((*((void *)v3 + 3) >> 1) - *((void *)v3 + 2) < v5) {
          goto LABEL_23;
        }
        uint64_t result = swift_arrayInitWithCopy();
        if (v5)
        {
          uint64_t v10 = *((void *)v3 + 2);
          BOOL v11 = __OFADD__(v10, v5);
          uint64_t v12 = v10 + v5;
          if (v11) {
            goto LABEL_24;
          }
          *((void *)v3 + 2) = v12;
        }
        goto LABEL_4;
      }
    }
    if (v5) {
      goto LABEL_22;
    }
LABEL_4:
    swift_bridgeObjectRelease();
    v2 += 2;
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

char *sub_2486C7834(uint64_t a1)
{
  unint64_t v2 = *v1;
  unint64_t v3 = v1[4];
  unint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = v4 != 0;
  uint64_t v6 = MEMORY[0x263F8EE78];
  uint64_t v7 = v4 - v5;
  if (v4 == v5)
  {
LABEL_9:
    v26[0] = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
    sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
    sub_24872C4F0();
    swift_bridgeObjectRelease();
    if (v2 >= 2)
    {
      uint64_t v17 = v2;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v17 = MEMORY[0x263F8EE78];
    }
    uint64_t v18 = sub_24870ACB4(v17);
    uint64_t v20 = v19;
    unsigned __int8 v22 = v21;
    unsigned int v23 = v21;
    swift_bridgeObjectRelease();
    if (v23 <= 0xFD)
    {
      sub_248714E64(v18, v20, v22);
      sub_2486C5540(v18, v20, v22);
    }
    else if (*(void *)(v3 + 16))
    {
      swift_bridgeObjectRetain();
    }
    sub_24872CAD0();
    swift_bridgeObjectRelease();
    strcpy((char *)v26, "---completion ");
    HIBYTE(v26[1]) = -18;
    sub_24872C600();
    swift_bridgeObjectRelease();
    sub_24872C600();
    sub_24872C600();
    swift_bridgeObjectRelease();
    return (char *)v26[0];
  }
  else
  {
    unint64_t v25 = *v1;
    v26[0] = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    uint64_t result = sub_2486B9D40(0, v7 & ~(v7 >> 63), 0);
    if ((v7 & 0x8000000000000000) == 0)
    {
      unint64_t v24 = v3;
      uint64_t v6 = v26[0];
      uint64_t v10 = a1 + 16 * v5 + 40;
      while (v5 < v4)
      {
        uint64_t result = (char *)(*(uint64_t (**)(void))(*(void *)v10 + 24))();
        BOOL v11 = result;
        uint64_t v13 = v12;
        v26[0] = v6;
        unint64_t v15 = *(void *)(v6 + 16);
        unint64_t v14 = *(void *)(v6 + 24);
        if (v15 >= v14 >> 1)
        {
          uint64_t result = sub_2486B9D40((char *)(v14 > 1), v15 + 1, 1);
          uint64_t v6 = v26[0];
        }
        *(void *)(v6 + 16) = v15 + 1;
        uint64_t v16 = v6 + 16 * v15;
        *(void *)(v16 + 32) = v11;
        *(void *)(v16 + 40) = v13;
        ++v5;
        v10 += 16;
        if (v4 == v5)
        {
          swift_bridgeObjectRelease();
          unint64_t v3 = v24;
          unint64_t v2 = v25;
          goto LABEL_9;
        }
      }
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t CompletionShell.rawValue.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CompletionShell.rawValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*CompletionShell.rawValue.modify())()
{
  return nullsub_1;
}

ArgumentParserInternal::CompletionShell_optional __swiftcall CompletionShell.init(rawValue:)(ArgumentParserInternal::CompletionShell_optional rawValue)
{
  object = rawValue.value.rawValue._object;
  uint64_t countAndFlagsBits = rawValue.value.rawValue._countAndFlagsBits;
  unint64_t v4 = v1;
  BOOL v5 = rawValue.value.rawValue._countAndFlagsBits == 6845306
    && rawValue.value.rawValue._object == (void *)0xE300000000000000;
  if (v5
    || (rawValue.value.rawValue._uint64_t countAndFlagsBits = sub_24872CEB0(),
        (rawValue.value.rawValue._countAndFlagsBits & 1) != 0)
    || countAndFlagsBits == 1752392034 && object == (void *)0xE400000000000000
    || ((rawValue.value.rawValue._uint64_t countAndFlagsBits = sub_24872CEB0(), countAndFlagsBits == 1752394086)
      ? (BOOL v6 = object == (void *)0xE400000000000000)
      : (BOOL v6 = 0),
        !v6 ? (char v7 = 0) : (char v7 = 1),
        (rawValue.value.rawValue._countAndFlagsBits & 1) != 0
     || (v7 & 1) != 0
     || (rawValue.value.rawValue._uint64_t countAndFlagsBits = sub_24872CEB0(),
         (rawValue.value.rawValue._countAndFlagsBits & 1) != 0)))
  {
    uint64_t *v4 = countAndFlagsBits;
    v4[1] = (uint64_t)object;
  }
  else
  {
    rawValue.value.rawValue._uint64_t countAndFlagsBits = swift_bridgeObjectRelease();
    uint64_t *v4 = 0;
    v4[1] = 0;
  }
  return rawValue;
}

void static CompletionShell.zsh.getter(void *a1@<X8>)
{
  *a1 = 6845306;
  a1[1] = 0xE300000000000000;
}

uint64_t static CompletionShell.bash.getter@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_24872CEB0();
  *a1 = 1752392034;
  a1[1] = 0xE400000000000000;
  return result;
}

uint64_t static CompletionShell.fish.getter@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_24872CEB0();
  if ((result & 1) == 0) {
    uint64_t result = sub_24872CEB0();
  }
  *a1 = 1752394086;
  a1[1] = 0xE400000000000000;
  return result;
}

uint64_t static CompletionShell.autodetected()@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_2486E40CC();
  if (v3)
  {
    return CompletionShell.init(rawValue:)(*(Swift::String *)&result).value.rawValue._countAndFlagsBits;
  }
  else
  {
    *a1 = 0;
    a1[1] = 0;
  }
  return result;
}

void *static CompletionShell.allCases.getter()
{
  return &unk_26FC75AF8;
}

uint64_t sub_2486C7DA4(Swift::String *a1)
{
  return CompletionShell.init(rawValue:)(*a1).value.rawValue._countAndFlagsBits;
}

uint64_t sub_2486C7DB0@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2486C7DBC()
{
  return sub_24872D070();
}

uint64_t sub_2486C7E18()
{
  swift_bridgeObjectRetain();
  sub_24872C4D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2486C7E70()
{
  return sub_24872D070();
}

void sub_2486C7EC8(void *a1@<X8>)
{
  *a1 = &unk_26FC75AF8;
}

uint64_t sub_2486C7ED8(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_24872CEB0();
  }
}

uint64_t sub_2486C7F08@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v6 = result;
  if (!a4)
  {
    uint64_t result = sub_2486E40CC();
    if (v11)
    {
      uint64_t v10 = result;
      uint64_t v8 = v11;
      if (result == 6845306 && v11 == 0xE300000000000000)
      {
        uint64_t v10 = 6845306;
        goto LABEL_26;
      }
      uint64_t result = sub_24872CEB0();
      if (result) {
        goto LABEL_26;
      }
      if (v10 == 1752392034 && v8 == 0xE400000000000000)
      {
        uint64_t v10 = 1752392034;
        goto LABEL_26;
      }
      uint64_t result = sub_24872CEB0();
      if (result) {
        goto LABEL_26;
      }
      uint64_t result = 1752394086;
      if (v10 == 1752394086 && v8 == 0xE400000000000000)
      {
        uint64_t v10 = 1752394086;
        goto LABEL_26;
      }
      uint64_t result = sub_24872CEB0();
      if (result) {
        goto LABEL_26;
      }
      swift_bridgeObjectRelease();
    }
    sub_2486B4DD4();
    swift_allocError();
    long long v13 = 0uLL;
    *(_OWORD *)uint64_t v12 = 0u;
    goto LABEL_29;
  }
  uint64_t v8 = a4;
  uint64_t v10 = 6845306;
  if (a3 == 6845306 && a4 == 0xE300000000000000) {
    goto LABEL_26;
  }
  uint64_t result = sub_24872CEB0();
  if (result) {
    goto LABEL_5;
  }
  uint64_t v10 = 1752392034;
  if (a3 == 1752392034 && v8 == 0xE400000000000000) {
    goto LABEL_26;
  }
  uint64_t result = sub_24872CEB0();
  if (result) {
    goto LABEL_5;
  }
  uint64_t v10 = 1752394086;
  if (a3 == 1752394086 && v8 == 0xE400000000000000) {
    goto LABEL_26;
  }
  uint64_t result = sub_24872CEB0();
  if (result)
  {
LABEL_5:
    uint64_t v10 = a3;
LABEL_26:
    *a5 = v10;
    a5[1] = v8;
    a5[2] = v6;
    a5[3] = a2;
    return result;
  }
  sub_2486B4DD4();
  swift_allocError();
  *(void *)uint64_t v12 = a3;
  *(void *)(v12 + 8) = v8;
  long long v13 = 0uLL;
LABEL_29:
  *(_OWORD *)(v12 + 16) = v13;
  *(_OWORD *)(v12 + 32) = v13;
  *(_OWORD *)(v12 + 48) = v13;
  *(_OWORD *)(v12 + 64) = v13;
  *(unsigned char *)(v12 + 80) = 3;
  return swift_willThrow();
}

uint64_t sub_2486C8168(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void *__return_ptr))(a2 + 16))(v22);
  uint64_t v5 = v22[2];
  uint64_t v4 = v22[3];
  swift_bridgeObjectRetain();
  sub_2486BAFC4((uint64_t)v22);
  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B140108);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_24872D630;
    *(void *)(v6 + 32) = v5;
    *(void *)(v6 + 40) = v4;
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
    unint64_t v9 = v8;
    uint64_t v20 = 32;
    unint64_t v21 = 0xE100000000000000;
    MEMORY[0x270FA5388](v7);
    uint64_t v19 = &v20;
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_2486E3304(0x7FFFFFFFFFFFFFFFLL, 1, sub_2486C5554, (uint64_t)v18, v7, v9);
    swift_bridgeObjectRelease();
    uint64_t v11 = sub_2486C7544((uint64_t)v10);
    swift_bridgeObjectRelease();
    uint64_t v20 = v6;
    sub_24871B844(v11);
    return v20;
  }
  else
  {
    uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
    unint64_t v15 = v14;
    uint64_t v20 = 32;
    unint64_t v21 = 0xE100000000000000;
    MEMORY[0x270FA5388](v13);
    uint64_t v19 = &v20;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_2486E3304(0x7FFFFFFFFFFFFFFFLL, 1, sub_2486C52C4, (uint64_t)v18, v13, v15);
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_2486C7544((uint64_t)v16);
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_2486C8394(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v4 = a1[4];
  uint64_t v3 = a1[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B140108);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24872D630;
  *(void *)(v5 + 32) = v4;
  *(void *)(v5 + 40) = v3;
  swift_bridgeObjectRetain();
  uint64_t v6 = v1 - 1;
  if (v1 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v7 = a1 + 7;
    do
    {
      uint64_t v10 = *(v7 - 1);
      uint64_t v11 = *v7;
      unint64_t v12 = *(void *)(v5 + 16);
      if (!v12
        || ((uint64_t v13 = v5 + 16 * v12, *(void *)(v13 + 16) == v10) ? (v14 = *(void *)(v13 + 24) == v11) : (v14 = 0),
            !v14 && (sub_24872CEB0() & 1) == 0))
      {
        unint64_t v8 = *(void *)(v5 + 24);
        swift_bridgeObjectRetain();
        if (v12 >= v8 >> 1) {
          uint64_t v5 = (uint64_t)sub_248719EA4((char *)(v8 > 1), v12 + 1, 1, (char *)v5);
        }
        *(void *)(v5 + 16) = v12 + 1;
        uint64_t v9 = v5 + 16 * v12;
        *(void *)(v9 + 32) = v10;
        *(void *)(v9 + 40) = v11;
      }
      v7 += 2;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5;
}

unint64_t sub_2486C84E0()
{
  unint64_t result = qword_26931E228;
  if (!qword_26931E228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E228);
  }
  return result;
}

uint64_t sub_2486C8534()
{
  return sub_2486C54FC(&qword_26931E230, &qword_26931E238);
}

void *initializeBufferWithCopyOfBuffer for CompletionShell(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for CompletionShell()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for CompletionShell(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for CompletionShell(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CompletionShell(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CompletionShell(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CompletionShell()
{
  return &type metadata for CompletionShell;
}

uint64_t sub_2486C86C4(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    uint64_t v4 = a2 + 16 * v2;
    uint64_t v5 = *(void *)(v4 + 16);
    uint64_t v6 = *(void *)(*(void *)(v4 + 24) + 8);
    v17[0] = a1;
    uint64_t v18 = sub_2486B583C(v5, v6, v17, 0, 0, 0);
    uint64_t v19 = v7;
    sub_2486CA8E4(a2, (uint64_t)v15);
    sub_2486CB464((uint64_t)v15, (uint64_t)v16);
    sub_2486CB464((uint64_t)v16, (uint64_t)v17);
    if (sub_2486CB4CC((uint64_t)v17) != 1)
    {
      sub_2486CB464((uint64_t)v16, (uint64_t)v14);
      v13[8] = v14[8];
      v13[9] = v14[9];
      v13[10] = v14[10];
      v13[11] = v14[11];
      v13[4] = v14[4];
      v13[5] = v14[5];
      v13[6] = v14[6];
      v13[7] = v14[7];
      v13[0] = v14[0];
      v13[1] = v14[1];
      void v13[2] = v14[2];
      v13[3] = v14[3];
      sub_2486FA81C(v13);
      sub_2486CB4E4((uint64_t)v16);
    }
    sub_2486CAAF4(a2, (uint64_t)v12);
    sub_2486CB464((uint64_t)v12, (uint64_t)v13);
    sub_2486CB464((uint64_t)v13, (uint64_t)v14);
    if (sub_2486CB4CC((uint64_t)v14) != 1)
    {
      sub_2486CB464((uint64_t)v13, (uint64_t)v11);
      v10[8] = v11[8];
      v10[9] = v11[9];
      v10[10] = v11[10];
      v10[11] = v11[11];
      v10[4] = v11[4];
      v10[5] = v11[5];
      v10[6] = v11[6];
      v10[7] = v11[7];
      v10[0] = v11[0];
      v10[1] = v11[1];
      uint64_t v10[2] = v11[2];
      v10[3] = v11[3];
      sub_2486FA81C(v10);
      sub_2486CB4E4((uint64_t)v13);
    }
    return v18;
  }
  else
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    sub_2486CDF94(MEMORY[0x263F8EE78]);
  }
  return v8;
}

uint64_t sub_2486C8850(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400D8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24872D630;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  sub_2486C7644(inited);
  swift_setDeallocating();
  sub_24872CAD0();
  sub_24872C600();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(a2 + 24);
  v5(a1, a2);
  sub_24872C600();
  swift_bridgeObjectRelease();
  sub_24872C600();
  v5(a1, a2);
  sub_2486B71D8();
  sub_24872C970();
  swift_bridgeObjectRelease();
  sub_24872C600();
  swift_bridgeObjectRelease();
  sub_24872C600();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24872D630;
  *(void *)(v6 + 32) = a1;
  *(void *)(v6 + 40) = a2;
  sub_2486C8AAC(v6);
  swift_bridgeObjectRelease();
  sub_24872C600();
  swift_bridgeObjectRelease();
  sub_24872C600();
  sub_24872C600();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_2486C8AAC(uint64_t a1)
{
  void (*v22)(_OWORD *__return_ptr);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  char *v31;
  int64_t v32;
  char *v33;
  char *v34;
  char *v35;
  unint64_t v36;
  char *v37;
  unint64_t v38;
  int64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  long long v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unsigned char v77[16];
  _OWORD *v78;
  long long v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  long long v85;
  _OWORD v86[8];
  uint64_t v87;
  _OWORD v88[6];
  long long v89;
  long long v90;
  uint64_t v91;
  uint64_t v92;
  _OWORD v93[6];
  long long v94;
  long long v95;
  uint64_t v96;
  _OWORD v97[8];
  uint64_t v98;

  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
    __break(1u);
LABEL_49:
    uint64_t v5 = sub_248719EA4(0, *((void *)v5 + 2) + 1, 1, v5);
    goto LABEL_17;
  }
  uint64_t v8 = a1 + 16 * v6;
  uint64_t v9 = *(void *)(v8 + 16);
  uint64_t v10 = *(void *)(v8 + 24);
  uint64_t v11 = sub_2486C7644(a1);
  uint64_t v81 = v12;
  uint64_t v83 = a1;
  uint64_t v13 = sub_2486C86C4(0, a1);
  uint64_t v15 = v14;
  swift_bridgeObjectRetain();
  uint64_t v1 = 0;
  uint64_t v5 = sub_2486CB0A4(v13, v15, v83);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v10 + 16))(v93, v9, v10);
  v97[6] = v94;
  v97[7] = v95;
  uint64_t v98 = v96;
  v97[2] = v93[2];
  void v97[3] = v93[3];
  v97[4] = v93[4];
  v97[5] = v93[5];
  v97[0] = v93[0];
  v97[1] = v93[1];
  uint64_t v16 = *((void *)&v94 + 1);
  swift_bridgeObjectRetain();
  sub_2486BAFC4((uint64_t)v97);
  uint64_t v17 = *(void *)(v16 + 16);
  uint64_t v82 = v11;
  if (v17)
  {
    uint64_t v18 = v5;
    uint64_t v19 = 0;
    uint64_t v20 = v17 - 1;
    uint64_t v21 = MEMORY[0x263F8EE78];
    while (1)
    {
      unsigned __int8 v22 = *(void (**)(_OWORD *__return_ptr))(*(void *)(v16 + 16 * v19 + 40) + 16);
      uint64_t v85 = *(_OWORD *)(v16 + 16 * v19 + 32);
      v22(v86);
      long long v89 = v86[6];
      uint64_t v90 = v86[7];
      uint64_t v91 = v87;
      v88[2] = v86[2];
      v88[3] = v86[3];
      v88[4] = v86[4];
      v88[5] = v86[5];
      v88[0] = v86[0];
      v88[1] = v86[1];
      sub_2486BAFC4((uint64_t)v88);
      if (v89 == 1)
      {
        unsigned int v23 = v21;
        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v92 = v21;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_2486B9DF0(0, *(void *)(v21 + 16) + 1, 1);
          unsigned int v23 = v92;
        }
        unint64_t v26 = *(void *)(v23 + 16);
        unint64_t v25 = *(void *)(v23 + 24);
        if (v26 >= v25 >> 1)
        {
          sub_2486B9DF0((char *)(v25 > 1), v26 + 1, 1);
          unsigned int v23 = v92;
        }
        *(void *)(v23 + 16) = v26 + 1;
        *(_OWORD *)(v23 + 16 * v26 + 32) = v85;
        if (v20 == v19)
        {
LABEL_13:
          swift_bridgeObjectRelease();
          uint64_t v5 = v18;
          goto LABEL_15;
        }
      }
      else
      {
        unsigned int v23 = v21;
        if (v20 == v19) {
          goto LABEL_13;
        }
      }
      uint64_t v21 = v23;
      ++v19;
    }
  }
  swift_bridgeObjectRelease();
  unsigned int v23 = MEMORY[0x263F8EE78];
LABEL_15:
  uint64_t v3 = MEMORY[0x263F8EE78];
  unint64_t v4 = 0xD000000000000011;
  if (!*(void *)(v23 + 16))
  {
    int v84 = (char *)v23;
    *(void *)&uint64_t v85 = 0;
    goto LABEL_35;
  }
  uint64_t v2 = v23;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_49;
  }
LABEL_17:
  uint64_t v28 = *((void *)v5 + 2);
  uint64_t v27 = *((void *)v5 + 3);
  uint64_t v29 = v27 >> 1;
  uint64_t v30 = v28 + 1;
  if (v27 >> 1 <= v28)
  {
    uint64_t v5 = sub_248719EA4((char *)(v27 > 1), v28 + 1, 1, v5);
    uint64_t v27 = *((void *)v5 + 3);
    uint64_t v29 = v27 >> 1;
  }
  *((void *)v5 + 2) = v30;
  unint64_t v31 = &v5[16 * v28];
  *((void *)v31 + 4) = v4;
  *((void *)v31 + 5) = 0x8000000248731C00;
  unint64_t v32 = v28 + 2;
  if (v29 < v32) {
    uint64_t v5 = sub_248719EA4((char *)(v27 > 1), v32, 1, v5);
  }
  *((void *)v5 + 2) = v32;
  long long v33 = &v5[16 * v30];
  *((void *)v33 + 4) = 0x203A3A2A292D2827;
  *((void *)v33 + 5) = 0xEF276772613E2D3ALL;
  long long v80 = v5;
  unint64_t v34 = (char *)v2;
  if (v6 == 1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v34 = sub_24871A3EC(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
    }
    unint64_t v35 = v34;
    long long v36 = *((void *)v34 + 2);
    unint64_t v37 = v35;
    long long v38 = *((void *)v35 + 3);
    uint64_t v39 = v36 + 1;
    if (v36 >= v38 >> 1) {
      unint64_t v37 = sub_24871A3EC((char *)(v38 > 1), v36 + 1, 1, v37);
    }
    uint64_t v40 = sub_2486C5338();
    *((void *)v37 + 2) = v39;
    uint64_t v41 = &v37[16 * v36];
    unint64_t v34 = v37;
    *((void *)v41 + 4) = &type metadata for HelpCommand;
    *((void *)v41 + 5) = v40;
    goto LABEL_29;
  }
  uint64_t v39 = *(void *)(v2 + 16);
  if (v39)
  {
LABEL_29:
    int v84 = v34;
    *(void *)&v86[0] = v3;
    swift_bridgeObjectRetain();
    sub_2486B9D40(0, v39, 0);
    long long v42 = 0;
    uint64_t v43 = *(void *)&v86[0];
    do
    {
      v88[0] = *(_OWORD *)&v34[16 * v42 + 32];
      sub_2486C9664((uint64_t *)v88, (uint64_t *)v93);
      unint64_t v44 = v93[0];
      *(void *)&v86[0] = v43;
      long long v46 = *(void *)(v43 + 16);
      long long v45 = *(void *)(v43 + 24);
      if (v46 >= v45 >> 1)
      {
        sub_2486B9D40((char *)(v45 > 1), v46 + 1, 1);
        unint64_t v34 = v84;
        uint64_t v43 = *(void *)&v86[0];
      }
      ++v42;
      *(void *)(v43 + 16) = v46 + 1;
      *(_OWORD *)(v43 + 16 * v46 + 32) = v44;
    }
    while (v39 != v42);
    swift_bridgeObjectRelease();
    goto LABEL_34;
  }
  uint64_t v43 = MEMORY[0x263F8EE78];
LABEL_34:
  int v84 = v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  long long v47 = sub_2486CB248((uint64_t)v34);
  *(void *)&uint64_t v85 = v1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&v93[0] = 0;
  *((void *)&v93[0] + 1) = 0xE000000000000000;
  sub_24872CAD0();
  sub_24872C600();
  *(void *)&v88[0] = v43;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
  sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
  sub_24872C4F0();
  swift_bridgeObjectRelease();
  sub_24872C600();
  swift_bridgeObjectRelease();
  sub_24872C600();
  *(void *)&v88[0] = v47;
  sub_24872C4F0();
  swift_bridgeObjectRelease();
  sub_24872C600();
  swift_bridgeObjectRelease();
  long long v48 = sub_24872C600();
  long long v50 = *((void *)&v93[0] + 1);
  long long v49 = *(void *)&v93[0];
  *(void *)&v93[0] = 10;
  *((void *)&v93[0] + 1) = 0xE100000000000000;
  MEMORY[0x270FA5388](v48);
  long long v78 = v93;
  swift_bridgeObjectRetain();
  long long v51 = sub_2486E3304(0x7FFFFFFFFFFFFFFFLL, 0, sub_2486C52C4, (uint64_t)v77, v49, v50);
  MEMORY[0x24C57C170](32, 0xE100000000000000, 4);
  long long v52 = sub_2486CAEA4((uint64_t)v51);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&v93[0] = v52;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1E8);
  sub_2486C54FC(&qword_26931E1F0, &qword_26931E1E8);
  sub_2486C52E4();
  *(void *)&uint64_t v85 = sub_24872C740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v80;
LABEL_35:
  *(void *)&v93[0] = 0;
  *((void *)&v93[0] + 1) = 0xE000000000000000;
  sub_24872CAD0();
  sub_24872C600();
  swift_bridgeObjectRelease();
  sub_24872C600();
  *(void *)&v88[0] = v5;
  swift_bridgeObjectRetain();
  long long v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
  uint64_t v81 = sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
  uint64_t v82 = v53;
  long long v54 = sub_24872C4F0();
  long long v55 = v5;
  long long v57 = v56;
  long long v58 = swift_bridgeObjectRelease();
  *(void *)&v88[0] = 10;
  *((void *)&v88[0] + 1) = 0xE100000000000000;
  MEMORY[0x270FA5388](v58);
  long long v78 = v88;
  swift_bridgeObjectRetain();
  long long v59 = sub_2486E3304(0x7FFFFFFFFFFFFFFFLL, 0, sub_2486C5554, (uint64_t)v77, v54, v57);
  MEMORY[0x24C57C170](32, 0xE100000000000000, 8);
  long long v60 = sub_2486CAEA4((uint64_t)v59);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&v88[0] = v60;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1E8);
  sub_2486C54FC(&qword_26931E1F0, &qword_26931E1E8);
  sub_2486C52E4();
  sub_24872C740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24872C600();
  swift_bridgeObjectRelease();
  sub_24872C600();
  sub_24872C600();
  swift_bridgeObjectRelease();
  sub_24872C600();
  long long v61 = *((void *)&v93[0] + 1);
  long long v62 = *(void *)&v93[0];
  long long v63 = *((void *)v84 + 2);
  if (v63)
  {
    v79 = v93[0];
    long long v80 = v55;
    *(void *)&v93[0] = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_2486B9D40(0, v63, 0);
    long long v64 = 0;
    long long v65 = *(void *)&v93[0];
    long long v66 = v83;
    do
    {
      uint64_t v85 = *(_OWORD *)&v84[16 * v64 + 32];
      swift_bridgeObjectRetain();
      long long v67 = (char *)v66;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v67 = sub_24871A3EC(0, *(void *)(v66 + 16) + 1, 1, (char *)v66);
      }
      uint64_t v69 = *((void *)v67 + 2);
      long long v68 = *((void *)v67 + 3);
      if (v69 >= v68 >> 1) {
        long long v67 = sub_24871A3EC((char *)(v68 > 1), v69 + 1, 1, v67);
      }
      *((void *)v67 + 2) = v69 + 1;
      *(_OWORD *)&v67[16 * v69 + 32] = v85;
      long long v70 = sub_2486C8AAC(v67);
      long long v72 = v71;
      swift_bridgeObjectRelease();
      *(void *)&v93[0] = v65;
      long long v74 = *(void *)(v65 + 16);
      long long v73 = *(void *)(v65 + 24);
      if (v74 >= v73 >> 1)
      {
        sub_2486B9D40((char *)(v73 > 1), v74 + 1, 1);
        long long v65 = *(void *)&v93[0];
      }
      ++v64;
      *(void *)(v65 + 16) = v74 + 1;
      uint64_t v75 = v65 + 16 * v74;
      *(void *)(v75 + 32) = v70;
      *(void *)(v75 + 40) = v72;
    }
    while (v63 != v64);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    long long v61 = *((void *)&v79 + 1);
    long long v62 = v79;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v65 = MEMORY[0x263F8EE78];
  }
  *(void *)&v93[0] = v65;
  sub_24872C4F0();
  swift_bridgeObjectRelease();
  *(void *)&v93[0] = v62;
  *((void *)&v93[0] + 1) = v61;
  swift_bridgeObjectRetain();
  sub_24872C600();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return *(void *)&v93[0];
}

uint64_t sub_2486C9664@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v20 = 39;
  unint64_t v21 = 0xE100000000000000;
  (*(void (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  sub_24872C600();
  swift_bridgeObjectRelease();
  sub_24872C600();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 16))(v22, v3, v4);
  swift_bridgeObjectRetain();
  sub_2486BAFC4((uint64_t)v22);
  sub_2486B71D8();
  uint64_t v18 = sub_24872C970();
  uint64_t v19 = v5;
  uint64_t v16 = 0x5D5D5C5B5C5C5C5BLL;
  unint64_t v17 = 0xE800000000000000;
  uint64_t v14 = 807689308;
  unint64_t v15 = 0xE400000000000000;
  sub_24872C970();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24872C600();
  swift_bridgeObjectRelease();
  sub_24872C600();
  uint64_t v20 = 10;
  unint64_t v21 = 0xE100000000000000;
  uint64_t v13 = &v20;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_2486E3304(0x7FFFFFFFFFFFFFFFLL, 0, sub_2486C5554, (uint64_t)v12, 39, 0xE100000000000000);
  MEMORY[0x24C57C170](32, 0xE100000000000000, 12);
  uint64_t v7 = sub_2486CAEA4((uint64_t)v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v20 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1E8);
  sub_2486C54FC(&qword_26931E1F0, &qword_26931E1E8);
  sub_2486C52E4();
  uint64_t v8 = sub_24872C740();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v8;
  a2[1] = v10;
  return result;
}

uint64_t sub_2486C9954@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  sub_24872CAD0();
  swift_bridgeObjectRelease();
  uint64_t v14 = 40;
  unint64_t v15 = 0xE100000000000000;
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v2 + 24);
  v4(v3, v2);
  sub_24872C600();
  swift_bridgeObjectRelease();
  sub_24872C600();
  sub_24872C600();
  sub_24872C600();
  v4(v3, v2);
  sub_24872C600();
  swift_bridgeObjectRelease();
  sub_24872C600();
  uint64_t v14 = 10;
  unint64_t v15 = 0xE100000000000000;
  uint64_t v13 = &v14;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_2486E3304(0x7FFFFFFFFFFFFFFFLL, 0, sub_2486C5554, (uint64_t)v12, 40, 0xE100000000000000);
  MEMORY[0x24C57C170](32, 0xE100000000000000, 12);
  uint64_t v6 = sub_2486CAEA4((uint64_t)v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1E8);
  sub_2486C54FC(&qword_26931E1F0, &qword_26931E1E8);
  sub_2486C52E4();
  uint64_t v7 = sub_24872C740();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v7;
  a2[1] = v9;
  return result;
}

uint64_t sub_2486C9BA4(uint64_t a1)
{
  long long v2 = v1[9];
  long long v56 = v1[8];
  long long v57 = v2;
  long long v3 = v1[11];
  long long v58 = v1[10];
  long long v59 = v3;
  long long v4 = v1[5];
  *(_OWORD *)long long v54 = v1[4];
  *(_OWORD *)&v54[16] = v4;
  long long v5 = v1[7];
  *(_OWORD *)&v54[32] = v1[6];
  long long v55 = v5;
  long long v6 = v1[1];
  long long v50 = *v1;
  long long v51 = v6;
  long long v7 = v1[3];
  long long v52 = v1[2];
  long long v53 = v7;
  char v8 = BYTE8(v50);
  uint64_t v9 = *((void *)&v7 + 1);
  unint64_t v10 = *(void *)v54;
  long long v61 = *(_OWORD *)&v54[8];
  long long v62 = *(_OWORD *)&v54[24];
  if (v54[40]) {
    return 0;
  }
  sub_2486CB3B0((uint64_t)&v57 + 8, (uint64_t)v60);
  sub_2486CB3B0((uint64_t)v60, (uint64_t)v64);
  if (v64[16] == 1)
  {
    uint64_t v48 = 58;
    unint64_t v49 = 0xE100000000000000;
    long long v63 = v62;
    uint64_t v13 = v62 & 0xFFFFFFFFFFFFLL;
    if ((*((void *)&v62 + 1) & 0x2000000000000000) != 0) {
      uint64_t v13 = HIBYTE(*((void *)&v62 + 1)) & 0xFLL;
    }
    if (v13)
    {
      v41[0] = v62;
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_2486B76D8((uint64_t)&v50);
      sub_2486CB40C((uint64_t)&v63);
      sub_24870BD14((uint64_t *)&v50, (unint64_t *)v41);
      sub_2486CB438((uint64_t)&v63);
      sub_2486C539C((uint64_t)&v50);
    }
    sub_24872C600();
    swift_bridgeObjectRelease();
    sub_24872C600();
    v41[8] = v56;
    v41[9] = v57;
    v41[10] = v58;
    v41[11] = v59;
    v41[4] = *(_OWORD *)v54;
    v41[5] = *(_OWORD *)&v54[16];
    v41[6] = *(_OWORD *)&v54[32];
    v41[7] = v55;
    v41[0] = v50;
    v41[1] = v51;
    v41[2] = v52;
    v41[3] = v53;
    sub_2486CA2F4(a1);
    sub_24872C600();
    swift_bridgeObjectRelease();
  }
  unint64_t v14 = v50;
  if ((unint64_t)v50 >= 2) {
    uint64_t v15 = swift_bridgeObjectRetain();
  }
  else {
    uint64_t v15 = MEMORY[0x263F8EE78];
  }
  uint64_t v16 = *(void *)(v15 + 16);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v16) {
    goto LABEL_56;
  }
  if (v16 == 1)
  {
    if (v14 >= 2 && (v8 & 2) != 0)
    {
      uint64_t v17 = 42;
      if ((BYTE1(v57) & 0xFD) != 0) {
        uint64_t v17 = 0;
      }
      unint64_t v18 = 0xE000000000000000;
      if ((BYTE1(v57) & 0xFD) == 0) {
        unint64_t v18 = 0xE100000000000000;
      }
      *(void *)&v41[0] = v17;
      *((void *)&v41[0] + 1) = v18;
    }
    else
    {
      *(void *)&v41[0] = 0;
      *((void *)&v41[0] + 1) = 0xE000000000000000;
      if (v14 < 2)
      {
        unint64_t v14 = MEMORY[0x263F8EE78];
LABEL_41:
        if (*(void *)(v14 + 16))
        {
          uint64_t v31 = *(void *)(v14 + 32);
          uint64_t v32 = *(void *)(v14 + 40);
          unsigned __int8 v33 = *(unsigned char *)(v14 + 48);
          sub_2486B7650(v31, v32, v33);
          swift_bridgeObjectRelease();
          sub_248714E64(v31, v32, v33);
          sub_2486B7668(v31, v32, v33);
          sub_24872C600();
          swift_bridgeObjectRelease();
          uint64_t v34 = HIBYTE(v10) & 0xF;
          if ((v10 & 0x2000000000000000) == 0) {
            uint64_t v34 = v9 & 0xFFFFFFFFFFFFLL;
          }
          if (v34) {
            goto LABEL_54;
          }
          goto LABEL_55;
        }
        __break(1u);
        return result;
      }
    }
    uint64_t result = swift_bridgeObjectRetain();
    goto LABEL_41;
  }
  uint64_t v40 = v9;
  uint64_t v19 = MEMORY[0x263F8EE78];
  unint64_t v20 = MEMORY[0x263F8EE78];
  if (v14 >= 2)
  {
    swift_bridgeObjectRetain();
    unint64_t v20 = v14;
  }
  int64_t v21 = *(void *)(v20 + 16);
  if (!v21)
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = MEMORY[0x263F8EE78];
    goto LABEL_47;
  }
  unint64_t v39 = v10;
  uint64_t v48 = v19;
  sub_2486B9D40(0, v21, 0);
  uint64_t v22 = v48;
  unsigned int v23 = (unsigned __int8 *)(v20 + 48);
  do
  {
    uint64_t v24 = *((void *)v23 - 2);
    uint64_t v25 = *((void *)v23 - 1);
    unsigned int v26 = *v23;
    if (v26 >> 6)
    {
      if (v26 >> 6 == 1)
      {
        *(void *)&v41[0] = 0;
        *((void *)&v41[0] + 1) = 0xE000000000000000;
        swift_bridgeObjectRetain();
        sub_24872C600();
        sub_24872C4E0();
        goto LABEL_34;
      }
      *(void *)&v41[0] = 45;
      unint64_t v27 = 0xE100000000000000;
    }
    else
    {
      *(void *)&v41[0] = 11565;
      unint64_t v27 = 0xE200000000000000;
    }
    *((void *)&v41[0] + 1) = v27;
    swift_bridgeObjectRetain();
    sub_24872C600();
LABEL_34:
    sub_2486B7668(v24, v25, v26);
    long long v28 = v41[0];
    uint64_t v48 = v22;
    unint64_t v30 = *(void *)(v22 + 16);
    unint64_t v29 = *(void *)(v22 + 24);
    if (v30 >= v29 >> 1)
    {
      sub_2486B9D40((char *)(v29 > 1), v30 + 1, 1);
      uint64_t v22 = v48;
    }
    v23 += 24;
    *(void *)(v22 + 16) = v30 + 1;
    *(_OWORD *)(v22 + 16 * v30 + 32) = v28;
    --v21;
  }
  while (v21);
  swift_bridgeObjectRelease();
  unint64_t v10 = v39;
LABEL_47:
  uint64_t v9 = v40;
  if (v14 >= 2 && (v8 & 2) != 0 && (BYTE1(v57) & 0xFD) == 0)
  {
    unint64_t v35 = 0xE100000000000000;
    uint64_t v36 = 42;
  }
  else
  {
    *(void *)&v41[0] = 40;
    *((void *)&v41[0] + 1) = 0xE100000000000000;
    uint64_t v48 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
    sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
    sub_24872C4F0();
    sub_24872C600();
    swift_bridgeObjectRelease();
    sub_24872C600();
    unint64_t v35 = *((void *)&v41[0] + 1);
    uint64_t v36 = *(void *)&v41[0];
  }
  *(void *)&v41[0] = v36;
  *((void *)&v41[0] + 1) = v35;
  sub_24872C600();
  uint64_t v48 = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
  sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
  sub_24872C4F0();
  swift_bridgeObjectRelease();
  sub_24872C600();
  swift_bridgeObjectRelease();
  sub_24872C600();
  uint64_t v37 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v37 = v40 & 0xFFFFFFFFFFFFLL;
  }
  if (v37)
  {
LABEL_54:
    uint64_t v48 = 91;
    unint64_t v49 = 0xE100000000000000;
    uint64_t v46 = v9;
    unint64_t v47 = v10;
    uint64_t v44 = 39;
    unint64_t v45 = 0xE100000000000000;
    uint64_t v42 = 0x2722272227;
    unint64_t v43 = 0xE500000000000000;
    sub_2486B76D8((uint64_t)&v50);
    sub_2486B71D8();
    uint64_t v46 = sub_24872C970();
    unint64_t v47 = v38;
    uint64_t v44 = 0x5D5D5C5B5C5C5C5BLL;
    unint64_t v45 = 0xE800000000000000;
    uint64_t v42 = 807689308;
    unint64_t v43 = 0xE400000000000000;
    sub_24872C970();
    swift_bridgeObjectRelease();
    sub_24872C600();
    swift_bridgeObjectRelease();
    sub_24872C600();
    sub_2486C539C((uint64_t)&v50);
  }
LABEL_55:
  sub_24872C600();
  swift_bridgeObjectRelease();
LABEL_56:
  *(void *)&v41[0] = 39;
  *((void *)&v41[0] + 1) = 0xE100000000000000;
  sub_24872C600();
  swift_bridgeObjectRelease();
  sub_24872C600();
  swift_bridgeObjectRelease();
  sub_24872C600();
  return *(void *)&v41[0];
}

uint64_t sub_2486CA2F4(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 128);
  switch(*(unsigned char *)(v1 + 144))
  {
    case 1:
      int64_t v3 = *(void *)(v2 + 16);
      if (v3)
      {
        uint64_t v11 = MEMORY[0x263F8EE78];
        sub_2486B9D40(0, v3, 0);
        uint64_t v4 = v2 + 40;
        do
        {
          swift_bridgeObjectRetain();
          sub_24872C600();
          swift_bridgeObjectRelease();
          unint64_t v6 = *(void *)(v11 + 16);
          unint64_t v5 = *(void *)(v11 + 24);
          if (v6 >= v5 >> 1) {
            sub_2486B9D40((char *)(v5 > 1), v6 + 1, 1);
          }
          v4 += 16;
          *(void *)(v11 + 16) = v6 + 1;
          uint64_t v7 = v11 + 16 * v6;
          *(void *)(v7 + 32) = 11818;
          *(void *)(v7 + 40) = 0xE200000000000000;
          --v3;
        }
        while (v3);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
        sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
        sub_24872C4F0();
        swift_release();
        sub_24872C600();
        swift_bridgeObjectRelease();
        sub_24872C600();
      }
      uint64_t v10 = 0x73656C69665FLL;
      sub_2486B71D8();
      sub_24872C970();
      sub_24872C970();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24872C600();
      goto LABEL_16;
    case 2:
      uint64_t v10 = 0;
      sub_24872CAD0();
      sub_24872C600();
      sub_24872C600();
      sub_24872C600();
      return v10;
    case 3:
      if (!*(void *)(a1 + 16))
      {
        __break(1u);
        JUMPOUT(0x2486CA8D0);
      }
      (*(void (**)(void))(*(void *)(a1 + 40) + 24))();
      sub_2486B71D8();
      sub_24872C970();
      swift_bridgeObjectRelease();
      sub_24872CAD0();
      swift_bridgeObjectRelease();
      sub_24872C600();
      swift_bridgeObjectRelease();
      sub_24872C600();
      sub_2486C7834(a1);
      sub_24872C600();
      swift_bridgeObjectRelease();
      sub_24872C600();
      return 0xD000000000000016;
    case 4:
      if (*(_OWORD *)(v1 + 128) == 0) {
        return 0;
      }
      else {
        return 0x2D2073656C69665FLL;
      }
    default:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
      sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
      sub_24872C4F0();
      uint64_t v10 = 40;
      sub_24872C600();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24872C600();
LABEL_16:
      swift_bridgeObjectRelease();
      return v10;
  }
}

uint64_t sub_2486CA8E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = swift_bridgeObjectRetain() + 40;
    for (uint64_t i = v3 - 1; ; --i)
    {
      (*(void (**)(unsigned char *__return_ptr))(*(void *)v4 + 16))(v9);
      v37[6] = v12;
      v37[7] = v13;
      uint64_t v38 = v14;
      v37[2] = v10;
      v37[3] = *(_OWORD *)v11;
      v37[4] = *(_OWORD *)&v11[16];
      v37[5] = *(_OWORD *)&v11[32];
      v37[0] = *(_OWORD *)v9;
      v37[1] = *(_OWORD *)&v9[16];
      long long v6 = *(_OWORD *)&v11[32];
      swift_bridgeObjectRetain();
      sub_2486BAFC4((uint64_t)v37);
      swift_bridgeObjectRelease();
      uint64_t v7 = HIBYTE(*((void *)&v6 + 1)) & 0xFLL;
      if ((*((void *)&v6 + 1) & 0x2000000000000000) == 0) {
        uint64_t v7 = v6 & 0xFFFFFFFFFFFFLL;
      }
      if (v7)
      {
        swift_bridgeObjectRelease();
        v22[0] = 0xD000000000000011;
        v22[1] = 0x8000000248731E20;
        long long v23 = xmmword_24872D8F0;
        uint64_t v24 = 0;
        uint64_t v25 = 0;
        char v26 = 0;
        sub_24870AD3C(MEMORY[0x263F8EE78], 1, v22, 0, 0, 0, 0xE000000000000000, MEMORY[0x263F8EE78], (uint64_t)&v27, 0);
        *(void *)uint64_t v9 = &unk_26FC75A80;
        *(_OWORD *)&v9[8] = v27;
        *(void *)&v9[24] = v28;
        long long v10 = v29;
        v11[0] = v30;
        *(_OWORD *)&v11[8] = v31;
        *(_OWORD *)&v11[24] = v32;
        *(void *)&v11[40] = v33;
        *(void *)&long long v12 = v34;
        BYTE8(v12) = v35;
        long long v13 = v36;
        uint64_t v14 = 0;
        uint64_t v15 = 0;
        __int16 v16 = 4;
        uint64_t v17 = sub_2486D75E0;
        uint64_t v18 = 0;
        char v19 = 0;
        unint64_t v20 = nullsub_1;
        uint64_t v21 = 0;
        nullsub_1(v9);
        return sub_2486CB464((uint64_t)v9, a2);
      }
      if (!i) {
        break;
      }
      v4 += 16;
    }
    swift_bridgeObjectRelease();
  }
  sub_2486CB64C(v9);
  return sub_2486CB464((uint64_t)v9, a2);
}

uint64_t sub_2486CAAF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_2486CAC4C(0, a1);
  if (*(void *)(v3 + 16))
  {
    v25[0] = 0xD000000000000016;
    v25[1] = 0x8000000248731E00;
    long long v26 = xmmword_24872D8F0;
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    char v29 = 0;
    sub_24870AD3C(MEMORY[0x263F8EE78], 1, v25, 0, 0, 0, 0xE000000000000000, MEMORY[0x263F8EE78], (uint64_t)&v30, 0);
    uint64_t v5 = v3;
    long long v6 = v30;
    uint64_t v7 = v31;
    long long v8 = v32;
    char v9 = v33;
    long long v10 = v34;
    long long v11 = v35;
    uint64_t v12 = v36;
    uint64_t v13 = v37;
    char v14 = v38;
    uint64_t v15 = v39;
    uint64_t v16 = v40;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    __int16 v19 = 4;
    unint64_t v20 = nullsub_1;
    uint64_t v21 = 0;
    char v22 = 0;
    long long v23 = nullsub_1;
    uint64_t v24 = 0;
    nullsub_1(&v5);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_2486CB64C(&v5);
  }
  return sub_2486CB464((uint64_t)&v5, a2);
}

uint64_t sub_2486CAC4C(char a1, uint64_t a2)
{
  uint64_t v16 = a2;
  uint64_t v3 = *(void *)(a2 + 16);
  if (!v3) {
    goto LABEL_11;
  }
  uint64_t v4 = v3 - 1;
  for (uint64_t i = a2 + 16 * v3 + 24; ; i -= 16)
  {
    (*(void (**)(_OWORD *__return_ptr))(*(void *)i + 16))(v12);
    void v14[6] = v12[6];
    v14[7] = v12[7];
    uint64_t v15 = v13;
    void v14[2] = v12[2];
    void v14[3] = v12[3];
    v14[4] = v12[4];
    v14[5] = v12[5];
    v14[0] = v12[0];
    v14[1] = v12[1];
    uint64_t v6 = sub_2486BAFC4((uint64_t)v14);
    if (v15) {
      break;
    }
    if (!v4) {
      goto LABEL_11;
    }
    --v4;
  }
  MEMORY[0x270FA5388](v6);
  *(void *)&v12[0] = v4;
  sub_2486CB66C((unint64_t *)v12, v14);
  if (!*(void *)&v14[0])
  {
LABEL_11:
    *(void *)&v14[0] = MEMORY[0x263F8EE88];
    uint64_t v10 = sub_2486B7AA4((uint64_t)&unk_26FC759C0);
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    *(void *)&v14[0] = v10;
    LOBYTE(v12[0]) = a1;
    char v9 = (unsigned __int8 *)v12;
    goto LABEL_12;
  }
  (*(void (**)(_OWORD *__return_ptr))(*((void *)&v14[0] + 1) + 16))(v14);
  uint64_t v7 = v15;
  swift_bridgeObjectRetain();
  uint64_t result = sub_2486BAFC4((uint64_t)v14);
  if (v7)
  {
    *(void *)&v12[0] = v7;
    LOBYTE(v16) = a1;
    char v9 = (unsigned __int8 *)&v16;
LABEL_12:
    long long v11 = sub_2486D310C(v9);
    swift_bridgeObjectRelease();
    return (uint64_t)v11;
  }
  __break(1u);
  return result;
}

void *sub_2486CAE44(void *(*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    return 0;
  }
  uint64_t v7 = a3;
  uint64_t result = a1(&v6, &v7);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

uint64_t sub_2486CAEA4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v31 = MEMORY[0x263F8EE78];
    sub_2486B9DB0(0, v1, 0);
    uint64_t v2 = v31;
    uint64_t v4 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v5 = *(v4 - 3);
      uint64_t v6 = *(v4 - 2);
      uint64_t v8 = *(v4 - 1);
      uint64_t v7 = *v4;
      swift_bridgeObjectRetain();
      if ((v6 ^ (unint64_t)v5) >= 0x4000)
      {
        sub_24872C920();
        uint64_t v28 = v2;
        sub_24872C5A0();
        swift_bridgeObjectRetain();
        uint64_t v29 = MEMORY[0x24C57C040](15, 7, 0, 0xE000000000000000);
        uint64_t v30 = v9;
        sub_24872C5F0();
        uint64_t v10 = MEMORY[0x24C57C420](v29, v30);
        uint64_t v26 = v12;
        uint64_t v27 = v11;
        uint64_t v14 = v13;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        uint64_t v15 = MEMORY[0x24C57C040](v10, v27, v26, v14);
        uint64_t v17 = v16;
        swift_bridgeObjectRelease();
        sub_2486CB35C();
        sub_24872C5F0();
        uint64_t v5 = MEMORY[0x24C57C420](v15, v17);
        uint64_t v6 = v18;
        uint64_t v8 = v19;
        uint64_t v21 = v20;
        swift_bridgeObjectRelease_n();
        uint64_t v7 = v21;
        uint64_t v2 = v28;
      }
      unint64_t v23 = *(void *)(v2 + 16);
      unint64_t v22 = *(void *)(v2 + 24);
      if (v23 >= v22 >> 1) {
        sub_2486B9DB0((char *)(v22 > 1), v23 + 1, 1);
      }
      *(void *)(v2 + 16) = v23 + 1;
      uint64_t v24 = (void *)(v2 + 32 * v23);
      v24[4] = v5;
      v24[5] = v6;
      v24[6] = v8;
      v24[7] = v7;
      v4 += 4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

char *sub_2486CB0A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (char *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = v3 - 1;
  uint64_t v7 = (char *)MEMORY[0x263F8EE78];
  for (uint64_t i = 32; ; i += 192)
  {
    long long v9 = *(_OWORD *)(a1 + i + 144);
    v22[8] = *(_OWORD *)(a1 + i + 128);
    v22[9] = v9;
    long long v10 = *(_OWORD *)(a1 + i + 176);
    v22[10] = *(_OWORD *)(a1 + i + 160);
    v22[11] = v10;
    long long v11 = *(_OWORD *)(a1 + i + 80);
    void v22[4] = *(_OWORD *)(a1 + i + 64);
    v22[5] = v11;
    long long v12 = *(_OWORD *)(a1 + i + 112);
    v22[6] = *(_OWORD *)(a1 + i + 96);
    v22[7] = v12;
    long long v13 = *(_OWORD *)(a1 + i + 16);
    v22[0] = *(_OWORD *)(a1 + i);
    v22[1] = v13;
    long long v14 = *(_OWORD *)(a1 + i + 48);
    uint64_t v22[2] = *(_OWORD *)(a1 + i + 32);
    v22[3] = v14;
    sub_2486B76D8((uint64_t)v22);
    uint64_t v15 = sub_2486C9BA4(a3);
    uint64_t v17 = v16;
    sub_2486C539C((uint64_t)v22);
    if (v17)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v7 = sub_248719EA4(0, *((void *)v7 + 2) + 1, 1, v7);
      }
      unint64_t v19 = *((void *)v7 + 2);
      unint64_t v18 = *((void *)v7 + 3);
      if (v19 >= v18 >> 1) {
        uint64_t v7 = sub_248719EA4((char *)(v18 > 1), v19 + 1, 1, v7);
      }
      *((void *)v7 + 2) = v19 + 1;
      uint64_t v20 = &v7[16 * v19];
      *((void *)v20 + 4) = v15;
      *((void *)v20 + 5) = v17;
    }
    if (!v6) {
      break;
    }
    --v6;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_2486CB248(uint64_t a1)
{
  uint64_t v2 = v1;
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v15 = MEMORY[0x263F8EE78];
    sub_2486B9D40(0, v3, 0);
    uint64_t v4 = v15;
    for (uint64_t i = (long long *)(a1 + 32); ; ++i)
    {
      long long v13 = *i;
      sub_2486C9954((uint64_t *)&v13, v14);
      if (v2) {
        break;
      }
      uint64_t v2 = 0;
      uint64_t v7 = v14[0];
      uint64_t v8 = v14[1];
      uint64_t v15 = v4;
      unint64_t v10 = *(void *)(v4 + 16);
      unint64_t v9 = *(void *)(v4 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_2486B9D40((char *)(v9 > 1), v10 + 1, 1);
        uint64_t v4 = v15;
      }
      *(void *)(v4 + 16) = v10 + 1;
      uint64_t v11 = v4 + 16 * v10;
      *(void *)(v11 + 32) = v7;
      *(void *)(v11 + 40) = v8;
      if (!--v3) {
        return v4;
      }
    }
    swift_release();
  }
  return v4;
}

unint64_t sub_2486CB35C()
{
  unint64_t result = qword_26931E240;
  if (!qword_26931E240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E240);
  }
  return result;
}

uint64_t sub_2486CB3B0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_2486CB40C(uint64_t a1)
{
  return a1;
}

uint64_t sub_2486CB438(uint64_t a1)
{
  return a1;
}

uint64_t sub_2486CB464(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26931E248);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2486CB4CC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 32);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_2486CB4E4(uint64_t a1)
{
  return a1;
}

unint64_t sub_2486CB550(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  if (a5)
  {
    sub_2486C548C(result);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2486C549C(a17, a18, a19);
    sub_2486C54F4();
    return swift_release();
  }
  return result;
}

double sub_2486CB64C(_OWORD *a1)
{
  double result = 0.0;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

unint64_t *sub_2486CB66C@<X0>(unint64_t *result@<X0>, _OWORD *a2@<X8>)
{
  unint64_t v3 = *result;
  if ((*result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = **(void **)(v2 + 16);
    if (v3 < *(void *)(v4 + 16))
    {
      *a2 = *(_OWORD *)(v4 + 16 * v3 + 32);
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2486CB6A0()
{
  uint64_t v1 = sub_24872C530();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v28 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24872C390();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v9 = (char *)&v28 - v8;
  unint64_t v10 = *v0;
  unint64_t v30 = v0[1];
  unint64_t v36 = v0[2];
  unint64_t v37 = v10;
  unint64_t v32 = v0[3];
  unint64_t v35 = v0[4];
  unint64_t v29 = v0[5];
  unint64_t v11 = v0[6];
  unint64_t v12 = v0[7];
  unint64_t v13 = v0[9];
  unint64_t v33 = v0[8];
  unint64_t v34 = v11;
  unint64_t v14 = v0[10];
  unint64_t v31 = v0[11];
  sub_24872C3E0();
  swift_allocObject();
  sub_24872C3D0();
  sub_24872C380();
  sub_24872C3B0();
  sub_24872C370();
  uint64_t v15 = (void (*)(void *, void))sub_24872C3A0();
  sub_2486CC114(v9, (uint64_t)v7);
  uint64_t v16 = *(void (**)(char *, uint64_t))(v4 + 8);
  v16(v7, v3);
  uint64_t v17 = v9;
  unint64_t v18 = v30;
  v16(v17, v3);
  unint64_t v19 = v29;
  v15(v38, 0);
  v38[0] = v37;
  v38[1] = v18;
  v38[2] = v36;
  v38[3] = v32;
  v38[4] = v35;
  v38[5] = v19;
  v38[6] = v34;
  v38[7] = v12;
  v38[8] = v33;
  v38[9] = v13;
  v38[10] = v14;
  v38[11] = v31;
  sub_2486CC3EC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_24872C3C0();
  unint64_t v37 = v21;
  uint64_t v22 = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24872C520();
  unint64_t v23 = v37;
  uint64_t v24 = sub_24872C510();
  if (v25)
  {
    uint64_t v26 = v24;
    sub_2486CC440(v22, v23);
    swift_release();
  }
  else
  {
    sub_2486CC440(v22, v23);
    swift_release();
    return 0;
  }
  return v26;
}

char *sub_2486CBA44(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v2 = (uint64_t *)(swift_bridgeObjectRetain() + 56);
  uint64_t v3 = (char *)MEMORY[0x263F8EE78];
  do
  {
    uint64_t v5 = *v2;
    if (*v2)
    {
      uint64_t v6 = *(v2 - 1);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_248719EA4(0, *((void *)v3 + 2) + 1, 1, v3);
      }
      unint64_t v8 = *((void *)v3 + 2);
      unint64_t v7 = *((void *)v3 + 3);
      if (v8 >= v7 >> 1) {
        uint64_t v3 = sub_248719EA4((char *)(v7 > 1), v8 + 1, 1, v3);
      }
      *((void *)v3 + 2) = v8 + 1;
      uint64_t v4 = &v3[16 * v8];
      *((void *)v4 + 4) = v6;
      *((void *)v4 + 5) = v5;
    }
    v2 += 24;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_2486CBB48(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v45 = MEMORY[0x263F8EE78];
  sub_2486B9D40(0, v1, 0);
  uint64_t v4 = 0;
  uint64_t v5 = v45;
  uint64_t v6 = a1 + 32;
  uint64_t v32 = a1 + 32;
  do
  {
    unint64_t v7 = (_OWORD *)(v6 + 192 * v4);
    long long v8 = v7[9];
    long long v41 = v7[8];
    long long v42 = v8;
    long long v9 = v7[11];
    long long v43 = v7[10];
    long long v44 = v9;
    long long v10 = v7[5];
    long long v37 = v7[4];
    long long v38 = v10;
    long long v11 = v7[7];
    long long v39 = v7[6];
    long long v40 = v11;
    long long v12 = v7[1];
    v34[0] = *v7;
    v34[1] = v12;
    long long v13 = v7[3];
    long long v35 = v7[2];
    long long v36 = v13;
    unint64_t v15 = *((void *)&v38 + 1);
    uint64_t v14 = v39;
    unint64_t v16 = BYTE7(v39) & 0xF;
    if ((v39 & 0x2000000000000000) == 0) {
      unint64_t v16 = *((void *)&v38 + 1) & 0xFFFFFFFFFFFFLL;
    }
    if (v16)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v17 = (void *)v35;
      uint64_t v18 = v2;
      if (*(void *)&v34[0] >= 2uLL) {
        uint64_t v18 = swift_bridgeObjectRetain();
      }
      uint64_t v19 = *(void *)(v18 + 16);
      if (v19)
      {
        uint64_t v20 = v18 + 32;
        do
        {
          unsigned int v21 = *(unsigned __int8 *)(v20 + 16);
          if (v21 >> 6 != 1)
          {
            unint64_t v15 = *(void *)v20;
            uint64_t v14 = *(void *)(v20 + 8);
            sub_2486B76D8((uint64_t)v34);
            sub_2486B7650(v15, v14, v21);
            swift_bridgeObjectRelease();
            sub_2486C539C((uint64_t)v34);
            goto LABEL_20;
          }
          v20 += 24;
          --v19;
        }
        while (v19);
        unint64_t v15 = *(void *)(v18 + 32);
        uint64_t v22 = *(void *)(v18 + 40);
        unsigned int v23 = *(unsigned __int8 *)(v18 + 48);
        sub_2486B76D8((uint64_t)v34);
        swift_bridgeObjectRetain();
        uint64_t v33 = v22;
        sub_2486B7650(v15, v22, v23);
        swift_bridgeObjectRelease();
        if (v23 >> 6)
        {
          uint64_t v2 = MEMORY[0x263F8EE78];
          uint64_t v6 = v32;
          swift_bridgeObjectRelease();
          sub_2486C539C((uint64_t)v34);
          uint64_t v14 = v33;
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_2486C539C((uint64_t)v34);
          uint64_t v6 = v32;
          uint64_t v14 = v33;
          uint64_t v2 = MEMORY[0x263F8EE78];
        }
      }
      else
      {
        sub_2486B76D8((uint64_t)v34);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (v17[2])
        {
          uint64_t v24 = v17[4];
          unint64_t v25 = v17[5];
          swift_bridgeObjectRetain();
          unint64_t v15 = sub_2486B8604(45, 0xE100000000000000, v24, v25);
          uint64_t v27 = v26;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_2486C539C((uint64_t)v34);
          uint64_t v14 = v27;
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_2486C539C((uint64_t)v34);
          uint64_t v14 = 0xE500000000000000;
          unint64_t v15 = 0x65756C6176;
        }
      }
    }
LABEL_20:
    uint64_t v45 = v5;
    unint64_t v29 = *(void *)(v5 + 16);
    unint64_t v28 = *(void *)(v5 + 24);
    if (v29 >= v28 >> 1)
    {
      sub_2486B9D40((char *)(v28 > 1), v29 + 1, 1);
      uint64_t v5 = v45;
    }
    ++v4;
    *(void *)(v5 + 16) = v29 + 1;
    uint64_t v30 = v5 + 16 * v29;
    *(void *)(v30 + 32) = v15;
    *(void *)(v30 + 40) = v14;
  }
  while (v4 != v1);
  return v5;
}

uint64_t sub_2486CBE10(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_2486B9D40(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = (uint64_t *)(a1 + 96);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1) {
        sub_2486B9D40((char *)(v7 > 1), v8 + 1, 1);
      }
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      v4 += 24;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2486CBEE8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_2486B9D40(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = (uint64_t *)(a1 + 112);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1) {
        sub_2486B9D40((char *)(v7 > 1), v8 + 1, 1);
      }
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      v4 += 24;
      --v1;
    }
    while (v1);
  }
  return v2;
}

char *sub_2486CBFC0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = (char *)MEMORY[0x263F8EE78];
  if (!v1) {
    return (char *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = 32;
  uint64_t v5 = v2;
  while (1)
  {
    double result = *(char **)(a1 + v4);
    unint64_t v7 = (unint64_t)result >= 2 ? *(char **)(a1 + v4) : v2;
    uint64_t v8 = *((void *)v7 + 2);
    int64_t v9 = *((void *)v5 + 2);
    int64_t v10 = v9 + v8;
    if (__OFADD__(v9, v8)) {
      break;
    }
    sub_2486B77C8((unint64_t)result);
    double result = (char *)swift_isUniquelyReferenced_nonNull_native();
    if (result && v10 <= *((void *)v5 + 3) >> 1)
    {
      if (*((void *)v7 + 2)) {
        goto LABEL_17;
      }
    }
    else
    {
      if (v9 <= v10) {
        int64_t v11 = v9 + v8;
      }
      else {
        int64_t v11 = v9;
      }
      double result = sub_24871A0CC(result, v11, 1, v5);
      uint64_t v5 = result;
      if (*((void *)v7 + 2))
      {
LABEL_17:
        if ((*((void *)v5 + 3) >> 1) - *((void *)v5 + 2) < v8) {
          goto LABEL_26;
        }
        double result = (char *)swift_arrayInitWithCopy();
        if (v8)
        {
          uint64_t v12 = *((void *)v5 + 2);
          BOOL v13 = __OFADD__(v12, v8);
          uint64_t v14 = v12 + v8;
          if (v13) {
            goto LABEL_27;
          }
          *((void *)v5 + 2) = v14;
        }
        goto LABEL_4;
      }
    }
    if (v8) {
      goto LABEL_25;
    }
LABEL_4:
    swift_bridgeObjectRelease();
    v4 += 192;
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      return v5;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_2486CC114(char *a1, uint64_t a2)
{
  unint64_t v28 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26931E258);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v26 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t v9 = sub_24872C390();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  BOOL v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  unint64_t v15 = (char *)&v23 - v14;
  unint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v25 = v2;
  v16(v13, v2, v9);
  uint64_t v23 = sub_2486CC498(&qword_26931E260);
  sub_24872C9A0();
  sub_2486CC498(&qword_26931E268);
  uint64_t v24 = a2;
  char v17 = sub_24872C500() ^ 1;
  uint64_t v27 = v4;
  uint64_t v18 = &v8[*(int *)(v4 + 48)];
  *uint64_t v8 = v17 & 1;
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    uint64_t v20 = v24;
    v16(v18, v24, v9);
    v16(v13, v20, v9);
    sub_24872C9B0();
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v19(v18, v15, v9);
  }
  unsigned int v21 = &v26[*(int *)(v27 + 48)];
  v19(v21, v18, v9);
  v19(v28, v21, v9);
  return v17 & 1;
}

unint64_t sub_2486CC3EC()
{
  unint64_t result = qword_26931E250;
  if (!qword_26931E250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E250);
  }
  return result;
}

uint64_t sub_2486CC440(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_2486CC498(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24872C390();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2486CC4DC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v3 = a1 + 16 * v1;
    uint64_t v4 = *(void *)(v3 + 16);
    uint64_t v5 = *(void *)(*(void *)(v3 + 24) + 8);
    v16[0] = 2;
    uint64_t v17 = sub_2486B583C(v4, v5, v16, 0, 0, 0);
    uint64_t v18 = v6;
    sub_2486CA8E4(a1, (uint64_t)v14);
    sub_2486CDB94((uint64_t)v14, (uint64_t)v15, &qword_26931E248);
    sub_2486CDB94((uint64_t)v15, (uint64_t)v16, &qword_26931E248);
    if (sub_2486CB4CC((uint64_t)v16) != 1)
    {
      sub_2486CDB94((uint64_t)v15, (uint64_t)v13, &qword_26931E248);
      _OWORD v12[8] = v13[8];
      v12[9] = v13[9];
      v12[10] = v13[10];
      v12[11] = v13[11];
      v12[4] = v13[4];
      v12[5] = v13[5];
      v12[6] = v13[6];
      v12[7] = v13[7];
      v12[0] = v13[0];
      v12[1] = v13[1];
      v12[2] = v13[2];
      v12[3] = v13[3];
      sub_2486FA81C(v12);
      sub_2486CB4E4((uint64_t)v15);
    }
    sub_2486CAAF4(a1, (uint64_t)v11);
    sub_2486CDB94((uint64_t)v11, (uint64_t)v12, &qword_26931E248);
    sub_2486CDB94((uint64_t)v12, (uint64_t)v13, &qword_26931E248);
    if (sub_2486CB4CC((uint64_t)v13) != 1)
    {
      sub_2486CDB94((uint64_t)v12, (uint64_t)v10, &qword_26931E248);
      v9[8] = v10[8];
      v9[9] = v10[9];
      v9[10] = v10[10];
      v9[11] = v10[11];
      v9[4] = v10[4];
      v9[5] = v10[5];
      v9[6] = v10[6];
      v9[7] = v10[7];
      v9[0] = v10[0];
      v9[1] = v10[1];
      void v9[2] = v10[2];
      v9[3] = v10[3];
      sub_2486FA81C(v9);
      sub_2486CB4E4((uint64_t)v12);
    }
    return v17;
  }
  else
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
    sub_2486CDF94(MEMORY[0x263F8EE78]);
  }
  return v7;
}

uint64_t sub_2486CC698(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = MEMORY[0x263F8EE78];
  uint64_t v117 = MEMORY[0x263F8EE78];
  unint64_t v118 = sub_2486CDF94(MEMORY[0x263F8EE78]);
  int64_t v5 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v76 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  if (!v5)
  {
LABEL_87:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v4;
  }
  int64_t v7 = 0;
  unint64_t v80 = a1 + 32;
  unint64_t v78 = a1;
  int64_t v79 = v5;
  while (1)
  {
    if (v7 >= v5)
    {
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
      goto LABEL_91;
    }
    if (v7 < 0) {
      goto LABEL_89;
    }
    int64_t v17 = *(void *)(a1 + 16);
    if (v7 >= (unint64_t)v17) {
      goto LABEL_90;
    }
    uint64_t v18 = (long long *)(v80 + 192 * v7);
    long long v19 = v18[9];
    long long v114 = v18[8];
    *(_OWORD *)v115 = v19;
    long long v20 = v18[11];
    *(_OWORD *)&v115[16] = v18[10];
    long long v116 = v20;
    long long v21 = v18[5];
    long long v110 = v18[4];
    long long v111 = v21;
    long long v22 = v18[7];
    long long v112 = v18[6];
    long long v113 = v22;
    long long v23 = v18[1];
    long long v106 = *v18;
    long long v107 = v23;
    long long v24 = v18[3];
    long long v108 = v18[2];
    long long v109 = v24;
    char v25 = v24;
    unint64_t v26 = v7 + 1;
    uint64_t v27 = *((void *)&v107 + 1);
    unint64_t v81 = v111;
    unint64_t v28 = v110;
    unint64_t v29 = v112;
    long long v89 = *(_OWORD *)&v115[8];
    long long v90 = v114;
    long long v91 = v116;
    long long v92 = v108;
    char v88 = BYTE8(v112);
    uint64_t v86 = *((void *)&v113 + 1);
    uint64_t v87 = v113;
    char v84 = v115[1];
    char v85 = v115[0];
    char v83 = v115[24];
    uint64_t v82 = *((void *)&v106 + 1);
    unint64_t v93 = v106;
    if (v24 != 1)
    {
      uint64_t v8 = *((void *)&v109 + 1);
      unint64_t v9 = a1;
      uint64_t v10 = v107;
      uint64_t v11 = *((void *)&v111 + 1);
      uint64_t v12 = *((void *)&v110 + 1);
      sub_2486B76D8((uint64_t)&v106);
      uint64_t v13 = v27;
      int64_t v14 = v26;
      uint64_t v15 = v10;
      a1 = v9;
      unint64_t v16 = v81;
      goto LABEL_4;
    }
    if (v26 != v5) {
      break;
    }
    int64_t v14 = v5;
LABEL_54:
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
    uint64_t result = swift_initStackObject();
    *(_OWORD *)(result + 16) = xmmword_24872D630;
    unint64_t v49 = v106;
    long long v51 = v112;
    long long v50 = v113;
    long long v52 = v111;
    *(_OWORD *)(result + 96) = v110;
    *(_OWORD *)(result + 112) = v52;
    long long v54 = v108;
    long long v53 = v109;
    long long v55 = v107;
    *(_OWORD *)(result + 32) = v106;
    *(_OWORD *)(result + 48) = v55;
    long long v56 = v116;
    long long v57 = *(_OWORD *)&v115[16];
    long long v58 = *(_OWORD *)v115;
    *(_OWORD *)(result + 160) = v114;
    *(_OWORD *)(result + 176) = v58;
    *(_OWORD *)(result + 192) = v57;
    *(_OWORD *)(result + 208) = v56;
    *(_OWORD *)(result + 128) = v51;
    *(_OWORD *)(result + 144) = v50;
    *(_OWORD *)(result + 64) = v54;
    *(_OWORD *)(result + 80) = v53;
    if (v14 <= v7) {
      goto LABEL_94;
    }
    if (v5 < v14) {
      goto LABEL_95;
    }
    *(void *)&long long v95 = result;
    sub_2486B76D8((uint64_t)&v106);
    sub_2486B76D8((uint64_t)&v106);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24871BCEC(v26, v14, a1, v76);
    uint64_t v59 = v95;
    if (v49 >= 2)
    {
      long long v60 = sub_2486CBFC0(v95);
      sub_2486C548C(v93);
      unint64_t v93 = (unint64_t)v60;
    }
    uint64_t v61 = sub_2486CBB48(v59);
    uint64_t v62 = *(void *)(v61 + 16);
    if (v62)
    {
      long long v63 = (unint64_t *)(v61 + 40);
      while (1)
      {
        uint64_t v11 = *(v63 - 1);
        unint64_t v29 = *v63;
        uint64_t v64 = HIBYTE(*v63) & 0xF;
        if ((*v63 & 0x2000000000000000) == 0) {
          uint64_t v64 = v11 & 0xFFFFFFFFFFFFLL;
        }
        if (v64) {
          break;
        }
        v63 += 2;
        if (!--v62) {
          goto LABEL_64;
        }
      }
      swift_bridgeObjectRetain();
    }
    else
    {
LABEL_64:
      uint64_t v11 = 0;
      unint64_t v29 = 0xE000000000000000;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v65 = sub_2486CBA44(v59);
    if (*((void *)v65 + 2))
    {
      uint64_t v15 = *((void *)v65 + 4);
      uint64_t v66 = *((void *)v65 + 5);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v15 = 0;
      uint64_t v66 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v67 = sub_2486CBE10(v59);
    uint64_t v68 = *(void *)(v67 + 16);
    if (v68)
    {
      uint64_t v69 = (unint64_t *)(v67 + 40);
      while (1)
      {
        uint64_t v8 = *(v69 - 1);
        unint64_t v28 = *v69;
        uint64_t v70 = HIBYTE(*v69) & 0xF;
        if ((*v69 & 0x2000000000000000) == 0) {
          uint64_t v70 = v8 & 0xFFFFFFFFFFFFLL;
        }
        if (v70) {
          break;
        }
        v69 += 2;
        if (!--v68) {
          goto LABEL_75;
        }
      }
      swift_bridgeObjectRetain();
    }
    else
    {
LABEL_75:
      uint64_t v8 = 0;
      unint64_t v28 = 0xE000000000000000;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v71 = sub_2486CBEE8(v59);
    swift_bridgeObjectRelease();
    uint64_t v72 = *(void *)(v71 + 16);
    if (v72)
    {
      long long v73 = (unint64_t *)(v71 + 40);
      while (1)
      {
        uint64_t v12 = *(v73 - 1);
        unint64_t v74 = *v73;
        uint64_t v75 = HIBYTE(*v73) & 0xF;
        if ((*v73 & 0x2000000000000000) == 0) {
          uint64_t v75 = v12 & 0xFFFFFFFFFFFFLL;
        }
        if (v75) {
          break;
        }
        v73 += 2;
        if (!--v72) {
          goto LABEL_83;
        }
      }
      swift_bridgeObjectRetain();
    }
    else
    {
LABEL_83:
      uint64_t v12 = 0;
      unint64_t v74 = 0xE000000000000000;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v16 = v74;
    a1 = v78;
    char v25 = 1;
    uint64_t v13 = v66;
LABEL_4:
    *(void *)&long long v95 = v93;
    *((void *)&v95 + 1) = v82;
    *(void *)&long long v96 = v15;
    *((void *)&v96 + 1) = v13;
    long long v97 = v92;
    LOBYTE(v98) = v25 & 1;
    *((void *)&v98 + 1) = v8;
    *(void *)&long long v99 = v28;
    *((void *)&v99 + 1) = v12;
    *(void *)&long long v100 = v16;
    *((void *)&v100 + 1) = v11;
    *(void *)&long long v101 = v29;
    BYTE8(v101) = v88;
    *(void *)&long long v102 = v87;
    *((void *)&v102 + 1) = v86;
    long long v103 = v90;
    v104[0] = v85;
    v104[1] = v84;
    *(_OWORD *)&v104[8] = v89;
    v104[24] = v83 & 1;
    long long v105 = v91;
    v94[8] = v90;
    v94[9] = *(_OWORD *)v104;
    v94[10] = *(_OWORD *)&v104[16];
    v94[11] = v91;
    v94[4] = v99;
    v94[5] = v100;
    v94[6] = v101;
    v94[7] = v102;
    v94[0] = v95;
    v94[1] = v96;
    v94[2] = v92;
    v94[3] = v98;
    sub_2486FA81C(v94);
    uint64_t result = sub_2486C539C((uint64_t)&v95);
    int64_t v7 = v14;
    int64_t v5 = v79;
    if (v14 == v79)
    {
      uint64_t v4 = v117;
      goto LABEL_87;
    }
  }
  uint64_t v30 = *(void *)(v108 + 16);
  int64_t v77 = v17;
  uint64_t v31 = v108 + 32;
  int64_t v14 = v7 + 1;
  while (v14 < v5)
  {
    if (v14 >= v17) {
      goto LABEL_92;
    }
    uint64_t v32 = *(void *)(v80 + 192 * v14 + 32);
    if (*(void *)(v32 + 16) != v30) {
      goto LABEL_52;
    }
    if (v30 && v32 != (void)v92)
    {
      uint64_t v33 = 0;
      uint64_t v34 = v32 + 32;
      while (1)
      {
        long long v35 = (uint64_t *)(v34 + 24 * v33);
        uint64_t result = *v35;
        long long v36 = (void *)v35[2];
        long long v37 = (void *)(v31 + 24 * v33);
        long long v38 = (void *)v37[2];
        if (*v35 != *v37 || v35[1] != v37[1])
        {
          uint64_t result = sub_24872CEB0();
          if ((result & 1) == 0) {
            break;
          }
        }
        uint64_t v40 = v36[2];
        if (v40 != v38[2]) {
          break;
        }
        if (v40) {
          BOOL v41 = v36 == v38;
        }
        else {
          BOOL v41 = 1;
        }
        if (!v41)
        {
          uint64_t result = v36[4];
          if (result != v38[4] || v36[5] != v38[5])
          {
            uint64_t result = sub_24872CEB0();
            if ((result & 1) == 0) {
              break;
            }
          }
          if (v40 != 1)
          {
            uint64_t result = v36[6];
            if (result != v38[6] || v36[7] != v38[7])
            {
              uint64_t result = sub_24872CEB0();
              if ((result & 1) == 0) {
                break;
              }
            }
            uint64_t v44 = v40 - 2;
            if (v44)
            {
              uint64_t v45 = v38 + 9;
              uint64_t v46 = v36 + 9;
              do
              {
                uint64_t result = *(v46 - 1);
                if (result != *(v45 - 1) || *v46 != *v45)
                {
                  uint64_t result = sub_24872CEB0();
                  if ((result & 1) == 0) {
                    goto LABEL_53;
                  }
                }
                v45 += 2;
                v46 += 2;
              }
              while (--v44);
            }
          }
        }
        if (++v33 == v30) {
          goto LABEL_49;
        }
      }
LABEL_53:
      a1 = v78;
      int64_t v5 = v79;
      unint64_t v26 = v7 + 1;
      goto LABEL_54;
    }
LABEL_49:
    if (__OFADD__(v14++, 1)) {
      goto LABEL_93;
    }
    int64_t v5 = v79;
    unint64_t v26 = v7 + 1;
    int64_t v17 = v77;
    if (v14 == v79)
    {
      int64_t v14 = v79;
LABEL_52:
      a1 = v78;
      goto LABEL_54;
    }
  }
LABEL_91:
  __break(1u);
LABEL_92:
  __break(1u);
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

uint64_t sub_2486CCD6C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  void (*v19)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t i;
  long long v29;
  long long v30;
  long long v31;
  long long v32;
  long long v33;
  long long v34;
  long long v35;
  long long v36;
  long long v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  long long v41;
  long long v42;
  long long v43;
  long long v44;
  long long v45;
  long long v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  long long v50;
  long long v51;
  uint64_t v52;
  long long v53;
  long long v54;
  long long v55;
  long long v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  void (*v61)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v63;
  long long v64;
  long long v65;
  long long v66;
  long long v67;
  long long v68;
  long long v69;
  long long v70;
  long long v71;
  long long v72;
  long long v73;
  long long v74;
  long long v75;
  unsigned char v76[136];
  long long v77;
  long long v78;
  long long v79;
  long long v80;
  long long v81;
  long long v82;
  long long v83;
  long long v84;
  long long v85;
  long long v86;
  long long v87;
  long long v88;
  unsigned char v89[136];
  long long v90;
  uint64_t v91;
  long long v92;
  long long v93;
  long long v94;
  long long v95;
  void v96[17];
  void v97[17];
  uint64_t v98;

  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    uint64_t v3 = result;
    uint64_t v4 = v2 - 1;
    BOOL v9 = v2 == 1;
    uint64_t v5 = result + 16 * (v2 - 1);
    uint64_t v7 = *(void *)(v5 + 32);
    uint64_t v6 = *(void *)(v5 + 40);
    int64_t v8 = v4 & 0x7FFFFFFFFFFFFFFFLL;
    BOOL v9 = v9 || v8 == 0;
    long long v63 = *(void *)(v5 + 40);
    if (v9)
    {
      long long v98 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
    }
    else
    {
      *(void *)&int64_t v77 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      sub_2486B9D40(0, v8, 0);
      uint64_t v10 = v77;
      uint64_t v11 = v3 + 40;
      do
      {
        uint64_t v12 = (*(uint64_t (**)(void))(*(void *)v11 + 24))();
        uint64_t v14 = v13;
        *(void *)&int64_t v77 = v10;
        unint64_t v16 = *(void *)(v10 + 16);
        unint64_t v15 = *(void *)(v10 + 24);
        if (v16 >= v15 >> 1)
        {
          sub_2486B9D40((char *)(v15 > 1), v16 + 1, 1);
          uint64_t v10 = v77;
        }
        *(void *)(v10 + 16) = v16 + 1;
        unint64_t v17 = v10 + 16 * v16;
        *(void *)(v17 + 32) = v12;
        *(void *)(v17 + 40) = v14;
        v11 += 16;
        --v8;
      }
      while (v8);
      long long v98 = v10;
      (*(void (**)(long long *__return_ptr))(*(void *)(v3 + 40) + 16))(&v77);
      long long v18 = v78;
      swift_bridgeObjectRetain();
      sub_2486BAFC4((uint64_t)&v77);
      if (*((void *)&v18 + 1)) {
        sub_2486CD6F8(0, 0, v18, *((uint64_t *)&v18 + 1));
      }
      uint64_t v6 = v63;
    }
    long long v19 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v6 + 16);
    v19((long long *)v97, v7, v6);
    sub_2486BAFC4((uint64_t)v97);
    if (v97[14])
    {
      (*(void (**)(long long *__return_ptr))(v97[15] + 16))(&v77);
      uint64_t v59 = *((void *)&v77 + 1);
      long long v60 = v77;
      swift_bridgeObjectRetain();
      sub_2486BAFC4((uint64_t)&v77);
    }
    else
    {
      uint64_t v59 = 0;
      long long v60 = 0;
    }
    uint64_t v61 = v19;
    v19((long long *)v96, v7, v6);
    long long v20 = v96[13];
    swift_bridgeObjectRetain();
    sub_2486BAFC4((uint64_t)v96);
    swift_bridgeObjectRetain();
    long long v58 = sub_2486CD99C(v20, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v21 = sub_2486CC4DC(v3);
    long long v23 = v22;
    swift_bridgeObjectRelease();
    long long v24 = sub_2486CC698(v21, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v25 = *(void *)(v24 + 16);
    if (v25)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v26 = v25 - 1;
      uint64_t v27 = (char *)MEMORY[0x263F8EE78];
      for (uint64_t i = 32; ; i += 192)
      {
        unint64_t v29 = *(_OWORD *)(v24 + i);
        uint64_t v30 = *(_OWORD *)(v24 + i + 16);
        uint64_t v31 = *(_OWORD *)(v24 + i + 48);
        int64_t v79 = *(_OWORD *)(v24 + i + 32);
        unint64_t v80 = v31;
        int64_t v77 = v29;
        unint64_t v78 = v30;
        uint64_t v32 = *(_OWORD *)(v24 + i + 64);
        uint64_t v33 = *(_OWORD *)(v24 + i + 80);
        uint64_t v34 = *(_OWORD *)(v24 + i + 112);
        char v83 = *(_OWORD *)(v24 + i + 96);
        char v84 = v34;
        unint64_t v81 = v32;
        uint64_t v82 = v33;
        long long v35 = *(_OWORD *)(v24 + i + 128);
        long long v36 = *(_OWORD *)(v24 + i + 144);
        long long v37 = *(_OWORD *)(v24 + i + 176);
        uint64_t v87 = *(_OWORD *)(v24 + i + 160);
        char v88 = v37;
        char v85 = v35;
        uint64_t v86 = v36;
        uint64_t v72 = v35;
        long long v73 = v36;
        unint64_t v74 = v87;
        uint64_t v75 = v37;
        uint64_t v68 = v81;
        uint64_t v69 = v82;
        uint64_t v70 = v83;
        uint64_t v71 = v84;
        uint64_t v64 = v77;
        long long v65 = v78;
        uint64_t v66 = v79;
        uint64_t v67 = v80;
        sub_2486B76D8((uint64_t)&v77);
        sub_2486CD310(&v64, (uint64_t)v76);
        sub_2486CDB94((uint64_t)v76, (uint64_t)v89, &qword_26931E270);
        sub_2486CDB94((uint64_t)v89, (uint64_t)&v90, &qword_26931E270);
        if (sub_2486CDB40((uint64_t)&v90) != 1)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v27 = sub_24871AB58(0, *((void *)v27 + 2) + 1, 1, v27);
          }
          long long v39 = *((void *)v27 + 2);
          long long v38 = *((void *)v27 + 3);
          if (v39 >= v38 >> 1) {
            uint64_t v27 = sub_24871AB58((char *)(v38 > 1), v39 + 1, 1, v27);
          }
          sub_2486CDB94((uint64_t)v89, (uint64_t)&v64, &qword_26931E270);
          *((void *)v27 + 2) = v39 + 1;
          uint64_t v40 = &v27[136 * v39];
          *((_OWORD *)v40 + 2) = v64;
          BOOL v41 = v68;
          long long v43 = v65;
          long long v42 = v66;
          *((_OWORD *)v40 + 5) = v67;
          *((_OWORD *)v40 + 6) = v41;
          *((_OWORD *)v40 + 3) = v43;
          *((_OWORD *)v40 + 4) = v42;
          uint64_t v45 = v70;
          uint64_t v44 = v71;
          uint64_t v46 = v69;
          *((void *)v40 + 20) = v72;
          *((_OWORD *)v40 + 8) = v45;
          *((_OWORD *)v40 + 9) = v44;
          *((_OWORD *)v40 + 7) = v46;
        }
        if (!v26) {
          break;
        }
        --v26;
      }
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v27 = (char *)MEMORY[0x263F8EE78];
    }
    long long v57 = v98;
    unint64_t v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 24))(v7, v63);
    unint64_t v49 = v48;
    v61(&v64, v7, v63);
    long long v50 = v66;
    swift_bridgeObjectRetain();
    sub_2486BAFC4((uint64_t)&v64);
    v61(&v77, v7, v63);
    long long v51 = v81;
    swift_bridgeObjectRetain();
    sub_2486BAFC4((uint64_t)&v77);
    CommandInfoV0.init(superCommands:commandName:abstract:discussion:defaultSubcommand:subcommands:arguments:)(v57, v47, v49, v50, *((unint64_t *)&v50 + 1), v51, *((unint64_t *)&v51 + 1), v60, &v90, v59, v58, (uint64_t)v27);
    uint64_t result = swift_unknownObjectRelease();
    long long v52 = v91;
    long long v53 = v92;
    long long v54 = v93;
    long long v55 = v94;
    long long v56 = v95;
    *(_OWORD *)a2 = v90;
    *(void *)(a2 + 16) = v52;
    *(_OWORD *)(a2 + 24) = v53;
    *(_OWORD *)(a2 + 40) = v54;
    *(_OWORD *)(a2 + 56) = v55;
    *(_OWORD *)(a2 + 72) = v56;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2486CD2D0(uint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000) == 0) {
    return a2;
  }
  __break(1u);
  return result;
}

uint64_t sub_2486CD310@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  long long v3 = a1[9];
  long long v64 = a1[8];
  v65[0] = v3;
  long long v4 = a1[11];
  v65[1] = a1[10];
  void v65[2] = v4;
  long long v5 = a1[5];
  long long v61 = a1[4];
  *(_OWORD *)uint64_t v62 = v5;
  long long v6 = a1[7];
  *(_OWORD *)&v62[16] = a1[6];
  long long v63 = v6;
  long long v7 = a1[1];
  long long v57 = *a1;
  long long v58 = v7;
  long long v8 = a1[3];
  long long v59 = a1[2];
  long long v60 = v8;
  unint64_t v9 = v57;
  if ((void)v57)
  {
    if ((void)v57 == 1)
    {
      sub_2486C539C((uint64_t)&v57);
      sub_2486CDB64((uint64_t)v55);
      uint64_t v10 = a2;
      return sub_2486CDB94((uint64_t)v55, v10, &qword_26931E270);
    }
    sub_2486CB3B0((uint64_t)v65 + 8, (uint64_t)v68);
    sub_2486CB3B0((uint64_t)v68, (uint64_t)v69);
    if (v69[16]) {
      char v11 = 1;
    }
    else {
      char v11 = 2;
    }
  }
  else
  {
    char v11 = 0;
  }
  char v54 = v11;
  char v12 = BYTE8(v57);
  unint64_t v46 = *((void *)&v58 + 1);
  uint64_t v42 = *((void *)&v60 + 1);
  uint64_t v43 = *((void *)&v59 + 1);
  uint64_t v40 = *((void *)&v61 + 1);
  unint64_t v41 = v61;
  uint64_t v13 = HIBYTE(*((void *)&v63 + 1)) & 0xFLL;
  long long v66 = *(_OWORD *)&v62[8];
  if ((*((void *)&v63 + 1) & 0x2000000000000000) == 0) {
    uint64_t v13 = v63 & 0xFFFFFFFFFFFFLL;
  }
  int v14 = v62[24];
  if (v13)
  {
    uint64_t v44 = *((void *)&v63 + 1);
    uint64_t v45 = v63;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v44 = 0;
    uint64_t v45 = 0;
  }
  uint64_t v15 = MEMORY[0x263F8EE78];
  uint64_t v16 = MEMORY[0x263F8EE78];
  if ((unint64_t)v57 >= 2)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = v57;
  }
  int64_t v17 = *(void *)(v16 + 16);
  uint64_t v47 = v58;
  uint64_t v48 = a2;
  if (v17)
  {
    int v38 = v62[24];
    char v39 = BYTE8(v57);
    *(void *)&v55[0] = v15;
    sub_2486B9E10(0, v17, 0);
    long long v18 = (unsigned __int8 *)(v16 + 48);
    do
    {
      uint64_t v19 = *((void *)v18 - 2);
      uint64_t v20 = *((void *)v18 - 1);
      unsigned int v21 = *v18;
      sub_2486B7650(v19, v20, *v18);
      *(void *)&v55[0] = v15;
      unint64_t v23 = *(void *)(v15 + 16);
      unint64_t v22 = *(void *)(v15 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_2486B9E10((char *)(v22 > 1), v23 + 1, 1);
        uint64_t v15 = *(void *)&v55[0];
      }
      *(void *)(v15 + 16) = v23 + 1;
      uint64_t v24 = v15 + 24 * v23;
      *(unsigned char *)(v24 + 32) = v21 >> 6;
      v18 += 24;
      *(void *)(v24 + 40) = v19;
      *(void *)(v24 + 48) = v20;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    char v12 = v39;
    int v14 = v38;
    if (v9 < 2) {
      goto LABEL_21;
    }
LABEL_23:
    swift_bridgeObjectRetain();
    goto LABEL_24;
  }
  swift_bridgeObjectRelease();
  if ((unint64_t)v57 >= 2) {
    goto LABEL_23;
  }
LABEL_21:
  unint64_t v9 = MEMORY[0x263F8EE78];
LABEL_24:
  uint64_t v25 = sub_24870ACB4(v9);
  uint64_t v27 = v26;
  unsigned __int8 v29 = v28;
  unsigned int v30 = v28;
  swift_bridgeObjectRelease();
  if (v30 <= 0xFD) {
    unint64_t v31 = v29 >> 6;
  }
  else {
    unint64_t v31 = 0;
  }
  if (v30 <= 0xFD) {
    unint64_t v32 = v25;
  }
  else {
    unint64_t v32 = 0;
  }
  if (v30 <= 0xFD) {
    uint64_t v33 = v27;
  }
  else {
    uint64_t v33 = 0;
  }
  v52.n128_u64[0] = v31;
  v52.n128_u64[1] = v32;
  uint64_t v53 = v33;
  long long v67 = v66;
  uint64_t v34 = v66 & 0xFFFFFFFFFFFFLL;
  if ((*((void *)&v66 + 1) & 0x2000000000000000) != 0) {
    uint64_t v34 = HIBYTE(*((void *)&v66 + 1)) & 0xFLL;
  }
  if (v34)
  {
    long long v51 = v66;
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_2486B76D8((uint64_t)&v57);
    sub_2486CB40C((uint64_t)&v67);
    sub_24870BD14((uint64_t *)&v57, (unint64_t *)&v51);
    sub_2486CB438((uint64_t)&v67);
    sub_2486C539C((uint64_t)&v57);
  }
  long long v35 = v51;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v36 = swift_bridgeObjectRetain();
  ArgumentInfoV0.init(kind:shouldDisplay:sectionTitle:isOptional:isRepeating:names:preferredName:valueName:defaultValue:allValues:abstract:discussion:)(&v54, v14 == 0, v45, v44, v12 & 1, (v12 & 2) != 0, v15, &v52, (uint64_t)v49, v35, *((unint64_t *)&v35 + 1), v47, v46, v43, v42, v41, v40, v36);
  sub_2486C539C((uint64_t)&v57);
  v55[6] = v49[6];
  v55[7] = v49[7];
  uint64_t v56 = v50;
  v55[2] = v49[2];
  v55[3] = v49[3];
  v55[4] = v49[4];
  v55[5] = v49[5];
  v55[0] = v49[0];
  v55[1] = v49[1];
  nullsub_1(v55);
  uint64_t v10 = v48;
  return sub_2486CDB94((uint64_t)v55, v10, &qword_26931E270);
}

unint64_t sub_2486CD6F8(unint64_t result, int64_t a2, uint64_t a3, uint64_t a4)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  long long v6 = *v4;
  int64_t v7 = *((void *)*v4 + 2);
  if (v7 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v8 = result;
  unint64_t v9 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  int64_t v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > *((void *)v6 + 3) >> 1)
  {
    if (v7 <= v11) {
      int64_t v15 = v7 + v10;
    }
    else {
      int64_t v15 = v7;
    }
    long long v6 = sub_248719EA4(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  uint64_t v16 = &v6[16 * v8 + 32];
  uint64_t result = swift_arrayDestroy();
  if (!v10) {
    goto LABEL_19;
  }
  uint64_t v17 = *((void *)v6 + 2);
  BOOL v18 = __OFSUB__(v17, a2);
  uint64_t v19 = v17 - a2;
  if (v18) {
    goto LABEL_25;
  }
  uint64_t result = (unint64_t)(v16 + 16);
  uint64_t v20 = &v6[16 * a2 + 32];
  if (v16 + 16 != v20 || result >= (unint64_t)&v20[16 * v19]) {
    uint64_t result = (unint64_t)memmove((void *)result, v20, 16 * v19);
  }
  uint64_t v21 = *((void *)v6 + 2);
  BOOL v18 = __OFADD__(v21, v10);
  uint64_t v22 = v21 + v10;
  if (!v18)
  {
    *((void *)v6 + 2) = v22;
LABEL_19:
    *(void *)uint64_t v16 = a3;
    *((void *)v16 + 1) = a4;
    uint64_t *v4 = v6;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

_OWORD *sub_2486CD828(void *a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = malloc(0x240uLL);
  *a1 = result;
  if (a2 < a3 || a2 >= a4)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (a2 < 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(void *)(a5 + 16) > (unint64_t)a2)
  {
    int64_t v11 = (_OWORD *)(a5 + 192 * a2);
    long long v13 = v11[10];
    long long v12 = v11[11];
    long long v14 = v11[9];
    result[8] = v13;
    result[9] = v12;
    long long v15 = v11[11];
    long long v17 = v11[12];
    long long v16 = v11[13];
    result[10] = v17;
    result[11] = v16;
    long long v19 = v11[6];
    long long v18 = v11[7];
    long long v20 = v11[5];
    result[4] = v19;
    result[5] = v18;
    long long v21 = v11[7];
    long long v23 = v11[8];
    long long v22 = v11[9];
    result[6] = v23;
    result[7] = v22;
    long long v24 = v11[3];
    *uint64_t result = v11[2];
    result[1] = v24;
    long long v25 = v11[5];
    long long v27 = v11[2];
    long long v26 = v11[3];
    long long v28 = v11[4];
    result[2] = v28;
    result[3] = v25;
    result[20] = v13;
    result[21] = v15;
    long long v29 = v11[13];
    result[22] = v17;
    result[23] = v29;
    result[16] = v19;
    result[17] = v21;
    result[18] = v23;
    result[19] = v14;
    result[12] = v27;
    result[13] = v26;
    result[14] = v28;
    result[15] = v20;
    sub_2486B76D8((uint64_t)result);
    return sub_2486CD930;
  }
LABEL_8:
  __break(1u);
  return result;
}

void sub_2486CD930(_OWORD **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (uint64_t)(*a1 + 24);
  long long v3 = v1[21];
  v1[32] = v1[20];
  v1[33] = v3;
  long long v4 = v1[23];
  v1[34] = v1[22];
  v1[35] = v4;
  long long v5 = v1[17];
  v1[28] = v1[16];
  v1[29] = v5;
  long long v6 = v1[19];
  v1[30] = v1[18];
  v1[31] = v6;
  long long v7 = v1[13];
  v1[24] = v1[12];
  v1[25] = v7;
  long long v8 = v1[15];
  v1[26] = v1[14];
  v1[27] = v8;
  sub_2486C539C(v2);
  free(v1);
}

uint64_t sub_2486CD99C(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v33 = MEMORY[0x263F8EE78];
    sub_2486B9DD0(0, v2, 0);
    uint64_t v3 = v33;
    long long v6 = (long long *)(a1 + 32);
    do
    {
      long long v25 = *v6;
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      long long v8 = (char *)a2;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        long long v8 = sub_24871A3EC(0, *(void *)(a2 + 16) + 1, 1, (char *)a2);
      }
      unint64_t v10 = *((void *)v8 + 2);
      unint64_t v9 = *((void *)v8 + 3);
      if (v10 >= v9 >> 1) {
        long long v8 = sub_24871A3EC((char *)(v9 > 1), v10 + 1, 1, v8);
      }
      *((void *)v8 + 2) = v10 + 1;
      *(_OWORD *)&v8[16 * v10 + 32] = v25;
      sub_2486CCD6C(&v27, v8);
      long long v11 = v27;
      uint64_t v12 = v28;
      long long v13 = v29;
      long long v14 = v30;
      long long v15 = v31;
      long long v16 = v32;
      uint64_t v33 = v3;
      unint64_t v18 = *(void *)(v3 + 16);
      unint64_t v17 = *(void *)(v3 + 24);
      if (v18 >= v17 >> 1)
      {
        long long v24 = v29;
        long long v26 = v27;
        long long v22 = v31;
        long long v23 = v30;
        long long v21 = v32;
        sub_2486B9DD0((char *)(v17 > 1), v18 + 1, 1);
        long long v16 = v21;
        long long v15 = v22;
        long long v14 = v23;
        long long v13 = v24;
        long long v11 = v26;
        uint64_t v3 = v33;
      }
      *(void *)(v3 + 16) = v18 + 1;
      uint64_t v19 = v3 + 88 * v18;
      *(_OWORD *)(v19 + 32) = v11;
      *(void *)(v19 + 48) = v12;
      *(_OWORD *)(v19 + 56) = v13;
      *(_OWORD *)(v19 + 72) = v14;
      *(_OWORD *)(v19 + 88) = v15;
      *(_OWORD *)(v19 + 104) = v16;
      ++v6;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_2486CDB40(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

double sub_2486CDB64(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  return result;
}

uint64_t sub_2486CDB94(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2486CDBF8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t destroy for HelpCommand(uint64_t a1)
{
  sub_2486B4E28(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  sub_2486B4E38(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for HelpCommand(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_2486CDBF8(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  char v9 = *(unsigned char *)(a2 + 40);
  sub_2486BB118(v7, v8, v9);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HelpCommand(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_2486CDBF8(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_2486B4E28(v7, v8, v9);
  uint64_t v10 = *(void *)(a2 + 24);
  uint64_t v11 = *(void *)(a2 + 32);
  char v12 = *(unsigned char *)(a2 + 40);
  sub_2486BB118(v10, v11, v12);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  char v15 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = v11;
  *(unsigned char *)(a1 + 40) = v12;
  sub_2486B4E38(v13, v14, v15);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for HelpCommand(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_2486B4E28(v5, v6, v7);
  char v8 = *(unsigned char *)(a2 + 40);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  char v11 = *(unsigned char *)(a1 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = v8;
  sub_2486B4E38(v9, v10, v11);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for HelpCommand(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HelpCommand(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HelpCommand()
{
  return &type metadata for HelpCommand;
}

uint64_t sub_2486CDED4(uint64_t a1)
{
  sub_2486CDF94(MEMORY[0x263F8EE78]);
  swift_bridgeObjectRelease();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_2486CE574(v2);
  swift_bridgeObjectRelease();
  if (*(void *)(v3 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400A8);
    uint64_t v4 = sub_24872CCB0();
  }
  else
  {
    uint64_t v4 = MEMORY[0x263F8EE80];
  }
  uint64_t v6 = v4;
  sub_2486D0560(v3, 1, &v6);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_2486CDF94(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400A8);
  uint64_t v2 = (void *)sub_24872CCB0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  unint64_t result = swift_retain();
  uint64_t v5 = 0;
  uint64_t v6 = (void *)(a1 + 56);
  while (1)
  {
    uint64_t v7 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    uint64_t v8 = *(v6 - 3);
    uint64_t v9 = *(v6 - 2);
    unsigned int v10 = *((unsigned __int8 *)v6 - 8);
    uint64_t v11 = *v6;
    sub_2486B7650(v8, v9, *((unsigned char *)v6 - 8));
    if (v10 > 0xFD) {
      goto LABEL_9;
    }
    unint64_t result = sub_248710538(v8, v9, v10);
    if (v12) {
      goto LABEL_13;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = v2[6] + 24 * result;
    *(void *)uint64_t v13 = v8;
    *(void *)(v13 + 8) = v9;
    *(unsigned char *)(v13 + 16) = v10;
    *(void *)(v2[7] + 8 * result) = v11;
    uint64_t v14 = v2[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_14;
    }
    v6 += 4;
    v2[2] = v16;
    ++v5;
    if (v7 == v3)
    {
LABEL_9:
      swift_release();
      goto LABEL_11;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

unint64_t sub_2486CE0EC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400B0);
  uint64_t v2 = (void *)sub_24872CCB0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  uint64_t v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2486D0BA8(v4, (uint64_t)&v18, &qword_26931E2C0);
    uint64_t v5 = v18;
    uint64_t v6 = v19;
    uint64_t v7 = v20;
    unint64_t result = sub_2487104AC(v18, v19, v20);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unsigned int v10 = (uint64_t *)(v2[6] + 24 * result);
    *unsigned int v10 = v5;
    v10[1] = v6;
    uint64_t v10[2] = (uint64_t)v7;
    uint64_t v11 = v2[7] + 72 * result;
    *(_OWORD *)uint64_t v11 = v21;
    long long v12 = v22;
    long long v13 = v23;
    long long v14 = v24;
    *(unsigned char *)(v11 + 64) = v25;
    *(_OWORD *)(v11 + 32) = v13;
    *(_OWORD *)(v11 + 48) = v14;
    *(_OWORD *)(v11 + 16) = v12;
    uint64_t v15 = v2[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v2[2] = v17;
    v4 += 96;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2486CE258(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400A0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E2B8);
  uint64_t v6 = sub_24872CCB0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  char v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_2486D0BA8(v12, (uint64_t)v5, &qword_26B1400A0);
    unint64_t result = sub_248710618((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_24872CBF0();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    unint64_t result = (unint64_t)sub_2486D0A7C(v9, (_OWORD *)(v7[7] + 32 * v16));
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2486CE458(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E2B0);
  uint64_t v2 = (void *)sub_24872CCB0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_24871067C(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_2486CE574(uint64_t a1)
{
  unint64_t v1 = (void *)MEMORY[0x263F8EE78];
  uint64_t v24 = *(void *)(a1 + 16);
  if (!v24) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v23 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v2 = 0;
  uint64_t v3 = v1;
  while (1)
  {
    unint64_t v4 = *(void *)(v23 + 192 * v2);
    uint64_t v5 = v4 >= 2 ? *(void **)(v23 + 192 * v2) : v1;
    int64_t v6 = v5[2];
    if (v6)
    {
      char v25 = v3;
      sub_2486B77C8(v4);
      sub_2486B9E30(0, v6, 0);
      uint64_t v7 = v1;
      uint64_t v8 = (unsigned __int8 *)(v5 + 6);
      do
      {
        uint64_t v9 = *((void *)v8 - 2);
        uint64_t v10 = *((void *)v8 - 1);
        if ((*v8 & 0xC0) == 0x40) {
          unsigned __int8 v11 = 64;
        }
        else {
          unsigned __int8 v11 = *v8;
        }
        sub_2486B7650(*((void *)v8 - 2), *((void *)v8 - 1), *v8);
        unint64_t v13 = v7[2];
        unint64_t v12 = v7[3];
        if (v13 >= v12 >> 1) {
          sub_2486B9E30((void *)(v12 > 1), v13 + 1, 1);
        }
        v8 += 24;
        v7[2] = v13 + 1;
        long long v14 = &v7[4 * v13];
        v14[4] = v9;
        v14[5] = v10;
        *((unsigned char *)v14 + 48) = v11;
        v14[7] = v2;
        --v6;
      }
      while (v6);
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v1 = (void *)MEMORY[0x263F8EE78];
      uint64_t v3 = v25;
    }
    else
    {
      sub_2486B77C8(v4);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v7 = v1;
    }
    uint64_t v16 = v7[2];
    int64_t v17 = v3[2];
    int64_t v18 = v17 + v16;
    if (__OFADD__(v17, v16)) {
      break;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) != 0 && v18 <= v3[3] >> 1)
    {
      if (v7[2]) {
        goto LABEL_27;
      }
    }
    else
    {
      if (v17 <= v18) {
        int64_t v19 = v17 + v16;
      }
      else {
        int64_t v19 = v17;
      }
      uint64_t result = (uint64_t)sub_248719FA8((void *)result, v19, 1, v3);
      uint64_t v3 = (void *)result;
      if (v7[2])
      {
LABEL_27:
        if ((v3[3] >> 1) - v3[2] < v16) {
          goto LABEL_36;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B140198);
        uint64_t result = swift_arrayInitWithCopy();
        if (v16)
        {
          uint64_t v20 = v3[2];
          BOOL v21 = __OFADD__(v20, v16);
          uint64_t v22 = v20 + v16;
          if (v21) {
            goto LABEL_37;
          }
          v3[2] = v22;
        }
        goto LABEL_4;
      }
    }
    if (v16) {
      goto LABEL_35;
    }
LABEL_4:
    ++v2;
    swift_bridgeObjectRelease();
    if (v2 == v24)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v3;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

double sub_2486CE7C4()
{
  uint64_t v0 = MEMORY[0x263F8EE78];
  uint64_t v1 = sub_2486B7AA4(MEMORY[0x263F8EE78]);
  swift_bridgeObjectRelease();
  *(void *)&double result = 1886152040;
  xmmword_269323DF0 = xmmword_24872DC90;
  xmmword_269323E00 = 0uLL;
  *(void *)&xmmword_269323E10 = 0xD000000000000021;
  *((void *)&xmmword_269323E10 + 1) = 0x8000000248731E40;
  xmmword_269323E20 = 0uLL;
  *(void *)&xmmword_269323E30 = 0;
  *((void *)&xmmword_269323E30 + 1) = 0xE000000000000000;
  *(void *)&xmmword_269323E40 = 0;
  *((void *)&xmmword_269323E40 + 1) = 0xE000000000000000;
  LOBYTE(xmmword_269323E50) = 1;
  *((void *)&xmmword_269323E50 + 1) = v0;
  unk_269323E60 = 0;
  qword_269323E68 = 0;
  qword_269323E70 = v1;
  return result;
}

uint64_t sub_2486CE874@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_2486B7AA4((uint64_t)&unk_26FC758E8);
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  v7[0] = xmmword_24872D8F0;
  v7[1] = xmmword_24872D8F0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  char v10 = 2;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(unsigned char *)(v5 + 24) = a1;
  uint64_t result = sub_2486CDB94((uint64_t)v7, v5 + 32, &qword_26B13FD98);
  *(void *)a2 = sub_2486D02E8;
  *(void *)(a2 + 8) = v5;
  *(unsigned char *)(a2 + 16) = 1;
  return result;
}

BOOL sub_2486CE954(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t _s22ArgumentParserInternal26SingleValueParsingStrategyV04hashE0Sivg_0()
{
  return sub_24872D070();
}

uint64_t sub_2486CE9B4()
{
  return sub_24872D040();
}

uint64_t sub_2486CE9E0()
{
  return sub_24872D070();
}

uint64_t sub_2486CEA24()
{
  if (*v0) {
    return 1886152040;
  }
  else {
    return 0x616D6D6F63627573;
  }
}

uint64_t sub_2486CEA60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2486D0148(a1, a2);
  *a3 = result;
  return result;
}

void sub_2486CEA88(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_2486CEA94(uint64_t a1)
{
  unint64_t v2 = sub_2486D0984();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2486CEAD0(uint64_t a1)
{
  unint64_t v2 = sub_2486D0984();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2486CEB0C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26931E290);
  uint64_t v17 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  int64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v25 = 0;
  memset(v24, 0, sizeof(v24));
  uint64_t v7 = swift_allocObject();
  sub_2486CDB94((uint64_t)v24, v7 + 16, &qword_26B13FD98);
  *(unsigned char *)(v7 + 65) = 0;
  uint64_t v8 = MEMORY[0x263F8EE78];
  *(void *)(v7 + 80) = 0;
  *(void *)(v7 + 88) = 0;
  *(void *)(v7 + 72) = v8;
  *(unsigned char *)(v7 + 96) = -1;
  uint64_t v26 = MEMORY[0x263F8EE88];
  uint64_t v9 = sub_2486B7AA4((uint64_t)&unk_26FC758E8);
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  v20[0] = xmmword_24872D8F0;
  v20[1] = xmmword_24872D8F0;
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  char v23 = 2;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(unsigned char *)(v10 + 24) = 0;
  sub_2486CDB94((uint64_t)v20, v10 + 32, &qword_26B13FD98);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2486D0984();
  sub_24872D0B0();
  if (v2)
  {
    sub_2486B4E28((uint64_t)sub_2486D02E0, v7, 1);
    sub_2486B4E38((uint64_t)sub_2486D0F8C, v10, 1);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = v17;
    uint64_t v11 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
    char v19 = 0;
    sub_2486D09D8();
    sub_24872CD40();
    swift_release();
    uint64_t v14 = v26;
    LOBYTE(v26) = 1;
    char v15 = sub_24872CD20();
    swift_release();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v4);
    *(void *)uint64_t v11 = v14;
    *(void *)(v11 + 8) = 0;
    *(unsigned char *)(v11 + 16) = 0;
    *(void *)(v11 + 24) = v15 & 1;
    *(void *)(v11 + 32) = 0;
    *(unsigned char *)(v11 + 40) = 0;
    *(void *)(v11 + 48) = MEMORY[0x263F8EE78];
    *(unsigned char *)(v11 + 56) = 0;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_2486CEE64@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5 = *a2;
  memset(v26, 0, sizeof(v26));
  char v27 = 0;
  uint64_t v6 = swift_allocObject();
  sub_2486CDB94((uint64_t)v26, v6 + 16, &qword_26B13FD98);
  *(unsigned char *)(v6 + 65) = 0;
  uint64_t v7 = MEMORY[0x263F8EE78];
  *(void *)(v6 + 80) = 0;
  *(void *)(v6 + 88) = 0;
  *(void *)(v6 + 72) = v7;
  *(unsigned char *)(v6 + 96) = -1;
  uint64_t v8 = sub_2486B7AA4((uint64_t)&unk_26FC758E8);
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  v22[0] = xmmword_24872D8F0;
  v22[1] = xmmword_24872D8F0;
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  char v25 = 2;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(unsigned char *)(v9 + 24) = 0;
  sub_2486CDB94((uint64_t)v22, v9 + 32, &qword_26B13FD98);
  int64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    uint64_t v21 = a3;
    swift_bridgeObjectRetain();
    sub_2486B9D40(0, v10, 0);
    uint64_t v11 = v7;
    uint64_t v20 = a1;
    uint64_t v12 = a1 + 40;
    do
    {
      uint64_t v13 = (*(uint64_t (**)(void))(*(void *)v12 + 24))();
      uint64_t v15 = v14;
      unint64_t v17 = *(void *)(v11 + 16);
      unint64_t v16 = *(void *)(v11 + 24);
      if (v17 >= v16 >> 1) {
        sub_2486B9D40((char *)(v16 > 1), v17 + 1, 1);
      }
      *(void *)(v11 + 16) = v17 + 1;
      uint64_t v18 = v11 + 16 * v17;
      *(void *)(v18 + 32) = v13;
      *(void *)(v18 + 40) = v15;
      v12 += 16;
      --v10;
    }
    while (v10);
    swift_release();
    swift_release();
    a1 = v20;
    uint64_t result = swift_bridgeObjectRelease();
    a3 = v21;
  }
  else
  {
    swift_release();
    uint64_t result = swift_release();
    uint64_t v11 = MEMORY[0x263F8EE78];
  }
  *(void *)a3 = v11;
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  *(unsigned char *)(a3 + 40) = 0;
  *(void *)(a3 + 48) = a1;
  *(unsigned char *)(a3 + 56) = v5;
  return result;
}

uint64_t sub_2486CF0A0@<X0>(uint64_t a1@<X8>)
{
  if (qword_26931E010 != -1) {
    swift_once();
  }
  long long v2 = xmmword_269323E40;
  v10[6] = xmmword_269323E50;
  v10[7] = unk_269323E60;
  long long v3 = xmmword_269323E00;
  long long v4 = xmmword_269323E10;
  uint64_t v10[2] = xmmword_269323E10;
  v10[3] = xmmword_269323E20;
  long long v5 = xmmword_269323E20;
  long long v6 = xmmword_269323E30;
  v10[4] = xmmword_269323E30;
  v10[5] = xmmword_269323E40;
  long long v7 = xmmword_269323DF0;
  v10[0] = xmmword_269323DF0;
  v10[1] = xmmword_269323E00;
  long long v8 = unk_269323E60;
  *(_OWORD *)(a1 + 96) = xmmword_269323E50;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v2;
  uint64_t v11 = qword_269323E70;
  *(void *)(a1 + 128) = qword_269323E70;
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v3;
  return sub_2486D0244((uint64_t)v10);
}

uint64_t sub_2486CF15C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 56);
  sub_2486BAF70();
  swift_allocError();
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = v2;
  *(_OWORD *)(v3 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 73) = 0u;
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

__n128 sub_2486CF1D0@<Q0>(uint64_t a1@<X8>)
{
  char v9 = 0;
  memset(v8, 0, sizeof(v8));
  uint64_t v2 = swift_allocObject();
  sub_2486CDB94((uint64_t)v8, v2 + 16, &qword_26B13FD98);
  uint64_t v3 = MEMORY[0x263F8EE78];
  *(unsigned char *)(v2 + 65) = 0;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = 0;
  *(void *)(v2 + 72) = v3;
  *(unsigned char *)(v2 + 96) = -1;
  sub_2486CE874(0, (uint64_t)&v6);
  char v4 = v7;
  __n128 result = v6;
  *(void *)a1 = sub_2486D02E0;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = 1;
  *(__n128 *)(a1 + 24) = result;
  *(unsigned char *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v3;
  *(unsigned char *)(a1 + 56) = 0;
  return result;
}

uint64_t sub_2486CF298@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2486CEB0C(a1, a2);
}

unint64_t sub_2486CF2B0(uint64_t a1)
{
  unint64_t result = sub_2486CF2D8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2486CF2D8()
{
  unint64_t result = qword_26B13FC78;
  if (!qword_26B13FC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B13FC78);
  }
  return result;
}

unint64_t sub_2486CF32C(uint64_t a1)
{
  unint64_t result = sub_2486CF354();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2486CF354()
{
  unint64_t result = qword_26B13FC88;
  if (!qword_26B13FC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B13FC88);
  }
  return result;
}

uint64_t sub_2486CF3A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  if (*(void *)(a6 + 16))
  {
    *(void *)&long long v43 = a6;
    *((void *)&v43 + 1) = sub_2486D00E4;
    uint64_t v44 = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2486D02F8(a4);
    swift_bridgeObjectRetain();
    sub_2486D0384(a7, a8, a9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E278);
    sub_2486D0398();
    uint64_t v16 = sub_24872C4F0();
    uint64_t v18 = v17;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2486D02F8(a4);
    swift_bridgeObjectRetain();
    sub_2486D0384(a7, a8, a9);
    uint64_t v16 = 0;
    uint64_t v18 = 0;
  }
  if (a9 == 255) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = a7;
  }
  if (a9 == 255) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = a8;
  }
  uint64_t v39 = v20;
  uint64_t v40 = v19;
  if (a9 == 255) {
    char v21 = 4;
  }
  else {
    char v21 = a9;
  }
  char v38 = v21;
  sub_2486CDB94((uint64_t)a4, (uint64_t)v42, &qword_26B13FD98);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24870AD3C(MEMORY[0x263F8EE78], 3, v42, v16, v18, a1, a2, a3, (uint64_t)&v43, 0);
  long long v33 = v43;
  uint64_t v22 = a1;
  uint64_t v23 = v44;
  char v24 = v46;
  long long v36 = v48;
  long long v37 = v47;
  uint64_t v25 = v49;
  uint64_t v26 = v50;
  char v27 = v51;
  uint64_t v34 = v53;
  uint64_t v35 = v52;
  uint64_t v28 = (void *)swift_allocObject();
  void v28[2] = sub_2486D00C4;
  v28[3] = 0;
  v28[4] = v22;
  v28[5] = a2;
  v28[6] = a3;
  v42[0] = a6;
  long long v29 = (void *)swift_allocObject();
  v29[2] = 0;
  sub_2486CDB94((uint64_t)v42, (uint64_t)(v29 + 3), &qword_26931E288);
  v29[4] = v22;
  v29[5] = a2;
  v29[6] = a3;
  char v54 = 1;
  long long v32 = v45;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_24872D630;
  *(void *)(v30 + 32) = 0;
  *(_OWORD *)(v30 + 40) = v33;
  *(void *)(v30 + 56) = v23;
  *(_OWORD *)(v30 + 64) = v32;
  *(unsigned char *)(v30 + 80) = v24;
  *(_OWORD *)(v30 + 88) = v37;
  *(_OWORD *)(v30 + 104) = v36;
  *(void *)(v30 + 120) = v25;
  *(void *)(v30 + 128) = v26;
  *(unsigned char *)(v30 + 136) = v27;
  *(void *)(v30 + 144) = v35;
  *(void *)(v30 + 152) = v34;
  *(void *)(v30 + 160) = v40;
  *(void *)(v30 + 168) = v39;
  *(unsigned char *)(v30 + 176) = v38;
  *(unsigned char *)(v30 + 177) = a5;
  *(void *)(v30 + 184) = sub_2486D04B0;
  *(void *)(v30 + 192) = v28;
  *(unsigned char *)(v30 + 200) = v54;
  *(void *)(v30 + 208) = sub_2486D053C;
  *(void *)(v30 + 216) = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_2486CDED4(v30);
}

uint64_t sub_2486CF6C4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t *))
{
  uint64_t v12 = *v6;
  if (*(void *)(v12 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v13 = sub_2487104AC(a1, a2, a3);
    if (v14)
    {
      sub_2486D08E8(*(void *)(v12 + 56) + 72 * v13, (uint64_t)&v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v20 + 1))
      {
        v26[1] = v22;
        long long v27 = v23;
        char v28 = v24;
        long long v25 = v20;
        v26[0] = v21;
        goto LABEL_8;
      }
    }
    else
    {
      char v24 = 0;
      long long v22 = 0u;
      long long v23 = 0u;
      long long v20 = 0u;
      long long v21 = 0u;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    char v24 = 0;
    long long v22 = 0u;
    long long v23 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
  }
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
  *(void *)&long long v25 = a1;
  *((void *)&v25 + 1) = a2;
  *(void *)&v26[0] = a3;
  *((void *)&v26[0] + 1) = a5;
  *(void *)&long long v27 = v15;
  *((void *)&v27 + 1) = MEMORY[0x263F8EE88];
  char v28 = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2486B73DC((uint64_t)&v20, &qword_26B13FDB0);
LABEL_8:
  sub_2486D0BA8((uint64_t)v26 + 8, (uint64_t)&v20, &qword_26B140128);
  if (!*((void *)&v21 + 1))
  {
    sub_2486B73DC((uint64_t)&v20, &qword_26B140128);
    goto LABEL_12;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    uint64_t v19 = a5;
    swift_bridgeObjectRetain();
  }
  if (v28 == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = MEMORY[0x263F8EE78];
    char v28 = 0;
  }
  a6(&v19);
  uint64_t v16 = v19;
  *((void *)&v21 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
  *(void *)&long long v20 = v16;
  sub_2486D0880((uint64_t)&v20, (uint64_t)v26 + 8);
  uint64_t v17 = swift_bridgeObjectRetain();
  sub_24870F970(v17);
  sub_24870FAE8((uint64_t *)&v25);
  return sub_2486D0820((uint64_t)&v25);
}

void *sub_2486CF920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *(*a8)(uint64_t *__return_ptr, uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  unint64_t result = a8(&v15, a10, a11, a12, a1, a2, a3, a4, a5, a6);
  if (!v12)
  {
    MEMORY[0x270FA5388](result);
    sub_2486CF6C4(a10, a11, a12, a1, MEMORY[0x263F8EE78], (void (*)(uint64_t *))sub_2486D0874);
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_2486CFA30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *(*a8)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  unint64_t result = a8(v19, a10, a11, a12, a1, a2, a3, a4, a5, a6);
  if (!v12)
  {
    v18[3] = MEMORY[0x263F8D310];
    v18[0] = v19[0];
    v18[1] = v19[1];
    sub_2486D0BA8((uint64_t)v18, (uint64_t)v16, &qword_26B140128);
    v15[0] = a10;
    v15[1] = a11;
    v15[2] = a12;
    v16[4] = a1;
    char v17 = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24870FAE8(v15);
    sub_2486D0820((uint64_t)v15);
    sub_2486B73DC((uint64_t)v18, &qword_26B140128);
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_2486CFB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *(*a8)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  unint64_t result = a8(v19, a10, a11, a12, a1, a2, a3, a4, a5, a6);
  if (!v12)
  {
    v18[3] = MEMORY[0x263F8EE58] + 8;
    v18[0] = swift_allocObject();
    sub_2486B7330((uint64_t)v19, v18[0] + 16);
    sub_2486D0BA8((uint64_t)v18, (uint64_t)v16, &qword_26B140128);
    v15[0] = a10;
    v15[1] = a11;
    v15[2] = a12;
    v16[4] = a1;
    char v17 = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24870FAE8(v15);
    sub_2486D0820((uint64_t)v15);
    sub_2486B73DC((uint64_t)v18, &qword_26B140128);
    return (void *)__swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
  }
  return result;
}

uint64_t sub_2486CFC88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a3 != 1)
  {
    uint64_t v11 = a1;
    swift_bridgeObjectRetain();
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    long long v16 = 0u;
    long long v17 = 0u;
    goto LABEL_6;
  }
  uint64_t v11 = sub_248708EE8((uint64_t)&unk_26FC75D10);
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  *((void *)&v17 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
  *(void *)&long long v16 = a4;
LABEL_6:
  sub_2486D0BA8((uint64_t)&v16, (uint64_t)v14, &qword_26B140128);
  v13[0] = a5;
  v13[1] = a6;
  void v13[2] = a7;
  v14[4] = v11;
  char v15 = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24870FAE8(v13);
  sub_2486D0820((uint64_t)v13);
  swift_bridgeObjectRelease();
  return sub_2486B73DC((uint64_t)&v16, &qword_26B140128);
}

uint64_t sub_2486CFD9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a3 != 1)
  {
    uint64_t v13 = a1;
    swift_bridgeObjectRetain();
    if (a5) {
      goto LABEL_3;
    }
LABEL_5:
    long long v18 = 0u;
    long long v19 = 0u;
    goto LABEL_6;
  }
  uint64_t v13 = sub_248708EE8((uint64_t)&unk_26FC75D48);
  if (!a5) {
    goto LABEL_5;
  }
LABEL_3:
  *((void *)&v19 + 1) = MEMORY[0x263F8D310];
  *(void *)&long long v18 = a4;
  *((void *)&v18 + 1) = a5;
LABEL_6:
  sub_2486D0BA8((uint64_t)&v18, (uint64_t)v16, &qword_26B140128);
  v15[0] = a6;
  v15[1] = a7;
  v15[2] = a8;
  v16[4] = v13;
  char v17 = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24870FAE8(v15);
  sub_2486D0820((uint64_t)v15);
  swift_bridgeObjectRelease();
  return sub_2486B73DC((uint64_t)&v18, &qword_26B140128);
}

uint64_t sub_2486CFEB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a3 == 1)
  {
    uint64_t v11 = sub_248708EE8((uint64_t)&unk_26FC75D80);
  }
  else
  {
    uint64_t v11 = a1;
    swift_bridgeObjectRetain();
  }
  sub_2486D0BA8(a4, (uint64_t)&v13, &qword_26B140128);
  if (v15[0])
  {
    *((void *)&v18 + 1) = MEMORY[0x263F8EE58] + 8;
    *(void *)&long long v17 = swift_allocObject();
    sub_2486D0A7C(&v13, (_OWORD *)(v17 + 16));
  }
  else
  {
    sub_2486B73DC((uint64_t)&v13, &qword_26B140128);
    long long v17 = 0u;
    long long v18 = 0u;
  }
  sub_2486D0BA8((uint64_t)&v17, (uint64_t)v15, &qword_26B140128);
  *(void *)&long long v13 = a5;
  *((void *)&v13 + 1) = a6;
  uint64_t v14 = a7;
  v15[4] = v11;
  char v16 = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24870FAE8((uint64_t *)&v13);
  sub_2486D0820((uint64_t)&v13);
  swift_bridgeObjectRelease();
  return sub_2486B73DC((uint64_t)&v17, &qword_26B140128);
}

uint64_t sub_2486D0004(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_248719EA4(0, *(void *)(v6 + 16) + 1, 1, (char *)v6);
    uint64_t v6 = result;
  }
  unint64_t v9 = *(void *)(v6 + 16);
  unint64_t v8 = *(void *)(v6 + 24);
  if (v9 >= v8 >> 1)
  {
    uint64_t result = (uint64_t)sub_248719EA4((char *)(v8 > 1), v9 + 1, 1, (char *)v6);
    uint64_t v6 = result;
  }
  *(void *)(v6 + 16) = v9 + 1;
  unint64_t v10 = v6 + 16 * v9;
  *(void *)(v10 + 32) = a2;
  *(void *)(v10 + 40) = a3;
  *a1 = v6;
  return result;
}

uint64_t sub_2486D00B4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = a2;
  *(void *)(result + 24) = 2 * a2;
  return result;
}

uint64_t sub_2486D00C4@<X0>(uint64_t a1@<X7>, void *a2@<X8>, uint64_t a3)
{
  *a2 = a1;
  a2[1] = a3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2486D00E4@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_24872CBB0();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_2486D0148(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x616D6D6F63627573 && a2 == 0xEB0000000073646ELL;
  if (v2 || (sub_24872CEB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1886152040 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24872CEB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2486D0244(uint64_t a1)
{
  return a1;
}

uint64_t sub_2486D02E8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_2486F4510(a1, a2, a3, *(void *)(v3 + 16), *(unsigned char *)(v3 + 24), (uint64_t *)(v3 + 32));
}

uint64_t *sub_2486D02F8(uint64_t *a1)
{
  return a1;
}

uint64_t sub_2486D0334(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2486D0384(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1) {
    return sub_2486B77D8(a1, a2, a3);
  }
  return a1;
}

unint64_t sub_2486D0398()
{
  unint64_t result = qword_26931E280;
  if (!qword_26931E280)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26931E278);
    sub_2486D040C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E280);
  }
  return result;
}

unint64_t sub_2486D040C()
{
  unint64_t result = qword_26931E1E0;
  if (!qword_26931E1E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26931E1D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E1E0);
  }
  return result;
}

uint64_t sub_2486D0468()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

void *sub_2486D04B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_2486CF920(a1, a2, a3, a4, a5, a6, a7, *(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16), *(void *)(v7 + 24), *(void *)(v7 + 32), *(void *)(v7 + 40), *(void **)(v7 + 48));
}

uint64_t sub_2486D04E4()
{
  if (*(void *)(v0 + 16) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_2486D053C(uint64_t a1, uint64_t a2)
{
  return sub_2486CFC88(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_2486D0560(uint64_t result, char a2, void *a3)
{
  if (*(void *)(result + 16))
  {
    uint64_t v5 = result;
    uint64_t v43 = *(void *)(result + 16);
    uint64_t v7 = *(void *)(result + 32);
    uint64_t v6 = *(void *)(result + 40);
    int v8 = *(unsigned __int8 *)(result + 48);
    uint64_t v42 = *(void *)(result + 56);
    unint64_t v9 = (void *)*a3;
    sub_2486B7650(v7, v6, v8);
    unint64_t v11 = sub_248710538(v7, v6, v8);
    uint64_t v12 = v9[2];
    BOOL v13 = (v10 & 1) == 0;
    unint64_t result = v12 + v13;
    if (__OFADD__(v12, v13))
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    char v14 = v10;
    if (v9[3] < result)
    {
      sub_248710E7C(result, a2 & 1);
      unint64_t result = sub_248710538(v7, v6, v8);
      if ((v14 & 1) != (v15 & 1))
      {
LABEL_26:
        unint64_t result = sub_24872CFA0();
        __break(1u);
        return result;
      }
      unint64_t v11 = result;
      char v16 = (void *)*a3;
      if ((v14 & 1) == 0) {
        goto LABEL_11;
      }
LABEL_9:
      uint64_t v17 = 8 * v11;
      uint64_t v18 = *(void *)(v16[7] + 8 * v11);
      unint64_t result = sub_2486B7668(v7, v6, v8);
      *(void *)(v16[7] + v17) = v18;
LABEL_13:
      uint64_t v23 = v43 - 1;
      if (v43 == 1) {
        return result;
      }
      for (uint64_t i = (void *)(v5 + 88); ; i += 4)
      {
        uint64_t v28 = *(i - 3);
        uint64_t v27 = *(i - 2);
        int v29 = *((unsigned __int8 *)i - 8);
        uint64_t v30 = *i;
        long long v31 = (void *)*a3;
        sub_2486B7650(v28, v27, *((unsigned char *)i - 8));
        unint64_t result = sub_248710538(v28, v27, v29);
        uint64_t v33 = v31[2];
        BOOL v34 = (v32 & 1) == 0;
        BOOL v21 = __OFADD__(v33, v34);
        uint64_t v35 = v33 + v34;
        if (v21) {
          break;
        }
        char v36 = v32;
        if (v31[3] < v35)
        {
          sub_248710E7C(v35, 1);
          unint64_t result = sub_248710538(v28, v27, v29);
          if ((v36 & 1) != (v37 & 1)) {
            goto LABEL_26;
          }
        }
        char v38 = (void *)*a3;
        if (v36)
        {
          uint64_t v25 = 8 * result;
          uint64_t v26 = *(void *)(v38[7] + 8 * result);
          unint64_t result = sub_2486B7668(v28, v27, v29);
          *(void *)(v38[7] + v25) = v26;
        }
        else
        {
          v38[((unint64_t)result >> 6) + 8] |= 1 << result;
          uint64_t v39 = v38[6] + 24 * result;
          *(void *)uint64_t v39 = v28;
          *(void *)(v39 + 8) = v27;
          *(unsigned char *)(v39 + 16) = v29;
          *(void *)(v38[7] + 8 * result) = v30;
          uint64_t v40 = v38[2];
          BOOL v21 = __OFADD__(v40, 1);
          uint64_t v41 = v40 + 1;
          if (v21) {
            goto LABEL_25;
          }
          v38[2] = v41;
        }
        if (!--v23) {
          return result;
        }
      }
      goto LABEL_24;
    }
    if (a2)
    {
      char v16 = (void *)*a3;
      if (v10) {
        goto LABEL_9;
      }
    }
    else
    {
      unint64_t result = (uint64_t)sub_248710760();
      char v16 = (void *)*a3;
      if (v14) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v16[(v11 >> 6) + 8] |= 1 << v11;
    uint64_t v19 = v16[6] + 24 * v11;
    *(void *)uint64_t v19 = v7;
    *(void *)(v19 + 8) = v6;
    *(unsigned char *)(v19 + 16) = v8;
    *(void *)(v16[7] + 8 * v11) = v42;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    void v16[2] = v22;
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_2486D0820(uint64_t a1)
{
  return a1;
}

uint64_t sub_2486D0874(uint64_t *a1)
{
  return sub_2486D0004(a1, **(void **)(v1 + 16), *(void *)(*(void *)(v1 + 16) + 8));
}

uint64_t sub_2486D0880(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B140128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2486D08E8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_2486D0948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2486CF3A8(a1, a2, a3, (uint64_t *)(v3 + 16), *(unsigned char *)(v3 + 65), *(void *)(v3 + 72), *(void *)(v3 + 80), *(void *)(v3 + 88), *(unsigned char *)(v3 + 96));
}

unint64_t sub_2486D0984()
{
  unint64_t result = qword_26931E298;
  if (!qword_26931E298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E298);
  }
  return result;
}

unint64_t sub_2486D09D8()
{
  unint64_t result = qword_26931E2A0;
  if (!qword_26931E2A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26931E1D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E2A0);
  }
  return result;
}

uint64_t sub_2486D0A44()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x270FA0238](v0, 48, 7);
}

_OWORD *sub_2486D0A7C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_2486D0A8C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E2A8);
  uint64_t v3 = (void *)sub_24872CCB0();
  long long v13 = *(_OWORD *)(a1 + 32);
  unint64_t result = sub_2487106F4(*(void *)(a1 + 32));
  if (v5)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    swift_retain();
    return (unint64_t)v3;
  }
  uint64_t v6 = (long long *)(a1 + 48);
  uint64_t v7 = v1 - 1;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v13;
    *(void *)(v3[7] + 8 * result) = *((void *)&v13 + 1);
    uint64_t v8 = v3[2];
    BOOL v9 = __OFADD__(v8, 1);
    uint64_t v10 = v8 + 1;
    if (v9) {
      break;
    }
    v3[2] = v10;
    if (!v7) {
      goto LABEL_8;
    }
    long long v11 = *v6++;
    long long v13 = v11;
    swift_retain();
    swift_retain();
    unint64_t result = sub_2487106F4(v11);
    --v7;
    if (v12) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2486D0BA8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t objectdestroyTm()
{
  if (*(void *)(v0 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  int v1 = *(unsigned __int8 *)(v0 + 96);
  if (v1 != 255) {
    sub_2486C549C(*(void *)(v0 + 80), *(void *)(v0 + 88), v1);
  }
  return MEMORY[0x270FA0238](v0, 97, 7);
}

uint64_t objectdestroy_3Tm()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x270FA0238](v0, 81, 7);
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for HelpCommand.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for HelpCommand.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2486D0E38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_2486D0E60(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_2486D0E68(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for HelpCommand.CodingKeys()
{
  return &type metadata for HelpCommand.CodingKeys;
}

unint64_t sub_2486D0E88()
{
  unint64_t result = qword_26931E2C8;
  if (!qword_26931E2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E2C8);
  }
  return result;
}

unint64_t sub_2486D0EE0()
{
  unint64_t result = qword_26931E2D0;
  if (!qword_26931E2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E2D0);
  }
  return result;
}

unint64_t sub_2486D0F38()
{
  unint64_t result = qword_26931E2D8;
  if (!qword_26931E2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E2D8);
  }
  return result;
}

unint64_t sub_2486D0F90(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return sub_24872C6D0();
  }
  __break(1u);
  return result;
}

unint64_t sub_2486D0FDC(uint64_t a1, char a2)
{
  if (a2)
  {
    a1 = sub_2486E3D08();
    if ((v4 | v5))
    {
      char v6 = v4;
      uint64_t v7 = sub_2486E4028();
      uint64_t v9 = 80;
      if ((v8 & 1) == 0) {
        uint64_t v9 = v7;
      }
      if (v6) {
        a1 = v9;
      }
    }
  }
  long long v61 = v2;
  uint64_t v10 = v2[5];
  uint64_t v68 = v10;
  int64_t v11 = *(void *)(v10 + 16);
  char v12 = (void *)MEMORY[0x263F8EE78];
  if (v11)
  {
    uint64_t v62 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_2486B9D40(0, v11, 0);
    char v12 = (void *)v62;
    uint64_t v13 = v10 + 64;
    do
    {
      uint64_t v14 = *(void *)(v13 - 32);
      unint64_t v15 = *(void *)(v13 - 24);
      uint64_t v16 = *(void *)(v13 - 16);
      sub_2486D66CC(v14, v15);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_2486D6424(a1, v14, v15, v16);
      uint64_t v19 = v18;
      sub_2486D66E0(v14, v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v62 = (uint64_t)v12;
      unint64_t v21 = v12[2];
      unint64_t v20 = v12[3];
      if (v21 >= v20 >> 1)
      {
        sub_2486B9D40((char *)(v20 > 1), v21 + 1, 1);
        char v12 = (void *)v62;
      }
      v12[2] = v21 + 1;
      uint64_t v22 = &v12[2 * v21];
      void v22[4] = v17;
      v22[5] = v19;
      v13 += 48;
      --v11;
    }
    while (v11);
    sub_2486D66F4((uint64_t)&v68);
  }
  uint64_t v23 = v12[2];
  uint64_t v24 = MEMORY[0x263F8EE78];
  if (v23)
  {
    uint64_t v25 = v12 + 5;
    do
    {
      uint64_t v29 = *(v25 - 1);
      uint64_t v30 = *v25;
      uint64_t v31 = HIBYTE(*v25) & 0xF;
      if ((*v25 & 0x2000000000000000) == 0) {
        uint64_t v31 = v29 & 0xFFFFFFFFFFFFLL;
      }
      if (v31)
      {
        swift_bridgeObjectRetain();
        uint64_t v62 = v24;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2486B9D40(0, *(void *)(v24 + 16) + 1, 1);
          uint64_t v24 = v62;
        }
        unint64_t v27 = *(void *)(v24 + 16);
        unint64_t v26 = *(void *)(v24 + 24);
        if (v27 >= v26 >> 1)
        {
          sub_2486B9D40((char *)(v26 > 1), v27 + 1, 1);
          uint64_t v24 = v62;
        }
        *(void *)(v24 + 16) = v27 + 1;
        unint64_t v28 = v24 + 16 * v27;
        *(void *)(v28 + 32) = v29;
        *(void *)(v28 + 40) = v30;
      }
      v25 += 2;
      --v23;
    }
    while (v23);
  }
  swift_bridgeObjectRelease();
  uint64_t v62 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
  sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
  sub_24872C4F0();
  unint64_t result = swift_release();
  uint64_t v33 = v61;
  unint64_t v34 = v61[2];
  uint64_t v35 = HIBYTE(v34) & 0xF;
  if ((v34 & 0x2000000000000000) == 0) {
    uint64_t v35 = v61[1] & 0xFFFFFFFFFFFFLL;
  }
  if (v35)
  {
    swift_bridgeObjectRetain();
    sub_24872C600();
    swift_bridgeObjectRelease();
    uint64_t v36 = sub_2486D1788(a1, 0, 0x574549565245564FLL, 0xEA0000000000203ALL);
    unint64_t v38 = v37;
    swift_bridgeObjectRelease();
    uint64_t v62 = v36;
    unint64_t v63 = v38;
    swift_bridgeObjectRetain();
    sub_24872C600();
    unint64_t result = swift_bridgeObjectRelease();
    uint64_t v39 = v36;
    unint64_t v40 = v38;
  }
  else
  {
    uint64_t v39 = 0;
    unint64_t v40 = 0xE000000000000000;
  }
  uint64_t v41 = v61[5];
  uint64_t v42 = *(void *)(v41 + 16);
  if (!v42) {
    goto LABEL_41;
  }
  uint64_t v43 = v41 + 48;
  while (*(void *)(v43 - 8) != 1)
  {
    v43 += 48;
    if (!--v42) {
      goto LABEL_41;
    }
  }
  if (!*(void *)(*(void *)v43 + 16)) {
    goto LABEL_41;
  }
  unint64_t v60 = v40;
  uint64_t v59 = v39;
  uint64_t v67 = *v61;
  uint64_t v44 = v67;
  int64_t v45 = *(void *)(v67 + 16);
  if (!v45)
  {
LABEL_51:
    __break(1u);
    return result;
  }
  uint64_t v62 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  sub_2486B9D40(0, v45, 0);
  uint64_t v46 = v62;
  uint64_t v47 = v67 + 40;
  do
  {
    uint64_t v48 = (*(uint64_t (**)(void))(*(void *)v47 + 24))();
    uint64_t v50 = v49;
    uint64_t v62 = v46;
    unint64_t v52 = *(void *)(v46 + 16);
    unint64_t v51 = *(void *)(v46 + 24);
    if (v52 >= v51 >> 1)
    {
      sub_2486B9D40((char *)(v51 > 1), v52 + 1, 1);
      uint64_t v46 = v62;
    }
    *(void *)(v46 + 16) = v52 + 1;
    unint64_t v53 = v46 + 16 * v52;
    *(void *)(v53 + 32) = v48;
    *(void *)(v53 + 40) = v50;
    v47 += 16;
    --v45;
  }
  while (v45);
  sub_2486D66F4((uint64_t)&v67);
  uint64_t v66 = v46;
  (*(void (**)(uint64_t *__return_ptr))(*(void *)(v44 + 40) + 16))(&v62);
  uint64_t v57 = v64;
  uint64_t v58 = v65;
  swift_bridgeObjectRetain();
  unint64_t result = sub_2486BAFC4((uint64_t)&v62);
  if (v58)
  {
    unint64_t result = sub_2486CD6F8(0, 0, v57, v58);
    uint64_t v46 = v66;
  }
  unint64_t v40 = v60;
  if (!*(void *)(v46 + 16))
  {
    __break(1u);
    goto LABEL_51;
  }
  sub_2486CD6F8(1uLL, 1, 1886152040, 0xE400000000000000);
  sub_24872CAD0();
  swift_bridgeObjectRelease();
  sub_24872C4F0();
  swift_bridgeObjectRelease();
  sub_24872C600();
  swift_bridgeObjectRelease();
  sub_24872C600();
  uint64_t v33 = v61;
  uint64_t v39 = v59;
LABEL_41:
  uint64_t v55 = v33[3];
  unint64_t v54 = v33[4];
  uint64_t v56 = HIBYTE(v54) & 0xF;
  if ((v54 & 0x2000000000000000) == 0) {
    uint64_t v56 = v55 & 0xFFFFFFFFFFFFLL;
  }
  if (v56)
  {
    uint64_t v62 = 0x203A4547415355;
    unint64_t v63 = 0xE700000000000000;
    swift_bridgeObjectRetain();
    sub_2486D2DE0(7, v55, v54);
    swift_bridgeObjectRelease();
    sub_24872C600();
    swift_bridgeObjectRelease();
    sub_24872C600();
  }
  uint64_t v62 = v39;
  unint64_t v63 = v40;
  sub_24872C600();
  swift_bridgeObjectRelease();
  sub_24872C600();
  swift_bridgeObjectRelease();
  sub_24872C600();
  swift_bridgeObjectRelease();
  return v62;
}

uint64_t sub_2486D163C(uint64_t a1, uint64_t *a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v18 = MEMORY[0x263F8EE78];
  sub_2486B9D90(0, v2, 0);
  uint64_t v5 = v18;
  char v6 = (uint64_t *)(a1 + 40);
  do
  {
    uint64_t v8 = *(v6 - 1);
    uint64_t v7 = *v6;
    uint64_t v9 = *a2;
    uint64_t v10 = *(void *)(*a2 + 16);
    swift_bridgeObjectRetain();
    if (v10)
    {
      swift_bridgeObjectRetain_n();
      unint64_t v11 = sub_24871067C(v8, v7);
      if (v12)
      {
        uint64_t v3 = *(void *)(*(void *)(v9 + 56) + 8 * v11);
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease_n();
    }
    unint64_t v14 = *(void *)(v18 + 16);
    unint64_t v13 = *(void *)(v18 + 24);
    if (v14 >= v13 >> 1) {
      sub_2486B9D90((char *)(v13 > 1), v14 + 1, 1);
    }
    v6 += 2;
    *(void *)(v18 + 16) = v14 + 1;
    uint64_t v15 = v18 + 48 * v14;
    *(void *)(v15 + 32) = v8;
    *(void *)(v15 + 40) = v7;
    *(void *)(v15 + 48) = v3;
    *(void *)(v15 + 56) = 0;
    *(void *)(v15 + 64) = 0xE000000000000000;
    *(unsigned char *)(v15 + 72) = 0;
    --v2;
    uint64_t v3 = MEMORY[0x263F8EE78];
  }
  while (v2);
  return v5;
}

uint64_t sub_2486D1788(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(a1, a2))
  {
LABEL_133:
    __break(1u);
    goto LABEL_134;
  }
  if (v8 < 1) {
    return 0;
  }
  unint64_t v9 = 0;
  unint64_t v157 = MEMORY[0x263F8EE78];
  uint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v144 = 4 * v10;
  unint64_t v5 = 15;
  v141 = (char *)(a1 - a2);
LABEL_11:
  unint64_t v4 = sub_24872C6D0();
  unint64_t v23 = v22;
  unint64_t v7 = v24;
  unint64_t v6 = v25;
  uint64_t v26 = sub_24872C910();
  if (v27) {
    unint64_t v28 = v23;
  }
  else {
    unint64_t v28 = v26;
  }
  if (v28 >> 14 < v4 >> 14)
  {
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
    goto LABEL_133;
  }
  unint64_t v29 = sub_24872C950();
  unint64_t v31 = v30;
  unint64_t v4 = v32;
  swift_bridgeObjectRelease();
  uint64_t v8 = v29 >> 14;
  if (v31 >> 14 == v29 >> 14)
  {
    if (v8 == v144) {
      goto LABEL_116;
    }
    goto LABEL_17;
  }
  unint64_t v7 = sub_24872C900();
  BOOL v41 = sub_24872C930() == 10 && v40 == 0xE100000000000000;
  if (v41) {
    goto LABEL_48;
  }
  unint64_t v6 = v40;
  unint64_t v150 = v29 >> 14;
  uint64_t v8 = v4;
  unint64_t v4 = v9;
  unint64_t v42 = v7;
  char v43 = sub_24872CEB0();
  swift_bridgeObjectRelease();
  if (v43)
  {
    swift_bridgeObjectRelease();
    unint64_t v7 = v42;
    unint64_t v9 = v4;
LABEL_50:
    if (v9 > v7 >> 14) {
      goto LABEL_131;
    }
    unint64_t v60 = sub_24872C6D0();
    uint64_t v62 = v61;
    unint64_t v5 = v63;
    unint64_t v147 = v63;
    unint64_t v148 = v64 >> 14;
    if (v64 >> 14 == v60 >> 14)
    {
      unint64_t v6 = sub_24872C950();
      uint64_t v12 = v11;
      uint64_t v14 = v13;
      uint64_t v16 = v15;
      uint64_t v17 = sub_24871AA54(0, 1, 1, MEMORY[0x263F8EE78]);
      unint64_t v19 = *((void *)v17 + 2);
      unint64_t v18 = *((void *)v17 + 3);
      unint64_t v7 = v19 + 1;
      if (v19 >= v18 >> 1) {
        uint64_t v17 = sub_24871AA54((char *)(v18 > 1), v19 + 1, 1, v17);
      }
      *((void *)v17 + 2) = v7;
      unint64_t v20 = &v17[32 * v19];
      *((void *)v20 + 4) = v6;
      unint64_t v21 = v20 + 32;
      goto LABEL_9;
    }
    swift_bridgeObjectRetain();
    unint64_t v65 = v60;
    uint64_t v8 = v60;
    unint64_t v7 = v60;
    v151 = (char *)MEMORY[0x263F8EE78];
    uint64_t v66 = v62;
    while (1)
    {
      uint64_t v67 = sub_24872C930();
      unint64_t v4 = v68;
      if (v67 == 10 && v68 == 0xE100000000000000) {
        break;
      }
      unint64_t v6 = sub_24872CEB0();
      swift_bridgeObjectRelease();
      if (v6) {
        goto LABEL_59;
      }
      unint64_t v65 = sub_24872C8F0();
LABEL_54:
      if (v148 == v65 >> 14)
      {
        if (v148 < v7 >> 14) {
          goto LABEL_132;
        }
        unint64_t v7 = sub_24872C950();
        uint64_t v12 = v80;
        uint64_t v14 = v81;
        uint64_t v16 = v82;
        swift_bridgeObjectRelease();
        if (swift_isUniquelyReferenced_nonNull_native()) {
          uint64_t v17 = v151;
        }
        else {
          uint64_t v17 = sub_24871AA54(0, *((void *)v151 + 2) + 1, 1, v151);
        }
        unint64_t v6 = *((void *)v17 + 2);
        unint64_t v83 = *((void *)v17 + 3);
        if (v6 >= v83 >> 1) {
          uint64_t v17 = sub_24871AA54((char *)(v83 > 1), v6 + 1, 1, v17);
        }
        *((void *)v17 + 2) = v6 + 1;
        char v84 = &v17[32 * v6];
        *((void *)v84 + 4) = v7;
        unint64_t v21 = v84 + 32;
LABEL_9:
        unint64_t v4 = (unint64_t)v17;
        v21[1] = v12;
        v21[2] = v14;
        v21[3] = v16;
        swift_bridgeObjectRelease();
        sub_24871C124(v4);
LABEL_10:
        unint64_t v5 = sub_24872C5B0();
        unint64_t v9 = v5 >> 14;
        uint64_t v8 = (uint64_t)v141;
        if (v144 < v5 >> 14) {
          goto LABEL_129;
        }
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
LABEL_59:
    if (v65 >> 14 < (unint64_t)v8 >> 14)
    {
      __break(1u);
      goto LABEL_128;
    }
    uint64_t v69 = v66;
    uint64_t v70 = sub_24872C950();
    uint64_t v72 = v71;
    unint64_t v6 = v73;
    uint64_t v75 = v74;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v76 = v151;
    }
    else {
      uint64_t v76 = sub_24871AA54(0, *((void *)v151 + 2) + 1, 1, v151);
    }
    unint64_t v78 = *((void *)v76 + 2);
    unint64_t v77 = *((void *)v76 + 3);
    unint64_t v4 = v78 + 1;
    if (v78 >= v77 >> 1) {
      uint64_t v76 = sub_24871AA54((char *)(v77 > 1), v78 + 1, 1, v76);
    }
    *((void *)v76 + 2) = v4;
    v151 = v76;
    int64_t v79 = &v76[32 * v78];
    *((void *)v79 + 4) = v70;
    *((void *)v79 + 5) = v72;
    *((void *)v79 + 6) = v6;
    *((void *)v79 + 7) = v75;
    uint64_t v66 = v69;
    unint64_t v5 = v147;
    unint64_t v65 = sub_24872C8F0();
    uint64_t v8 = v65;
    unint64_t v7 = v65;
    goto LABEL_54;
  }
  BOOL v41 = v150 == v42 >> 14;
  unint64_t v9 = v4;
  unint64_t v4 = v8;
  if (v41) {
    goto LABEL_37;
  }
  unint64_t v7 = sub_24872C900();
  uint64_t v58 = sub_24872C930();
  unint64_t v6 = v59;
  if (v58 == 10 && v59 == 0xE100000000000000)
  {
LABEL_48:
    swift_bridgeObjectRelease();
LABEL_49:
    swift_bridgeObjectRelease();
    goto LABEL_50;
  }
  unint64_t v143 = v7;
  char v87 = sub_24872CEB0();
  swift_bridgeObjectRelease();
  if (v87) {
    goto LABEL_77;
  }
  if (v150 == v143 >> 14) {
    goto LABEL_37;
  }
  unint64_t v7 = sub_24872C900();
  uint64_t v101 = sub_24872C930();
  unint64_t v6 = v102;
  if (v101 == 10 && v102 == 0xE100000000000000) {
    goto LABEL_48;
  }
  unint64_t v143 = v7;
  char v103 = sub_24872CEB0();
  swift_bridgeObjectRelease();
  if (v103)
  {
LABEL_77:
    swift_bridgeObjectRelease();
    unint64_t v7 = v143;
    goto LABEL_50;
  }
  if (v150 != v143 >> 14)
  {
    do
    {
      unint64_t v7 = sub_24872C900();
      if (sub_24872C930() == 10 && v104 == 0xE100000000000000) {
        goto LABEL_48;
      }
      unint64_t v6 = v104;
      uint64_t v8 = sub_24872CEB0();
      swift_bridgeObjectRelease();
      if (v8) {
        goto LABEL_49;
      }
    }
    while (v150 != v7 >> 14);
  }
LABEL_37:
  uint64_t v8 = v29 >> 14;
  if (v31 >> 14 == v144) {
    goto LABEL_116;
  }
  unint64_t v7 = sub_24872C900();
  uint64_t v53 = sub_24872C930();
  unint64_t v6 = v54;
  if (v53 == 32 && v54 == 0xE100000000000000) {
    goto LABEL_40;
  }
  unint64_t v85 = v7;
  char v86 = sub_24872CEB0();
  swift_bridgeObjectRelease();
  if (v86)
  {
LABEL_73:
    swift_bridgeObjectRelease();
    unint64_t v7 = v85;
    goto LABEL_74;
  }
  if (v150 == v85 >> 14) {
    goto LABEL_17;
  }
  unint64_t v7 = sub_24872C900();
  uint64_t v92 = sub_24872C930();
  unint64_t v6 = v93;
  if (v92 == 32 && v93 == 0xE100000000000000) {
    goto LABEL_40;
  }
  unint64_t v85 = v7;
  char v94 = sub_24872CEB0();
  swift_bridgeObjectRelease();
  if (v94) {
    goto LABEL_73;
  }
  if (v150 == v85 >> 14) {
    goto LABEL_17;
  }
  unint64_t v7 = sub_24872C900();
  uint64_t v95 = sub_24872C930();
  unint64_t v6 = v96;
  if (v95 == 32 && v96 == 0xE100000000000000) {
    goto LABEL_40;
  }
  unint64_t v85 = v7;
  char v97 = sub_24872CEB0();
  swift_bridgeObjectRelease();
  if (v97) {
    goto LABEL_73;
  }
  if (v150 == v85 >> 14)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    unint64_t v33 = sub_24872C6D0();
    unint64_t v4 = v34;
    unint64_t v36 = v35 >> 14;
    unint64_t v37 = v33 >> 14;
    if (v33 >> 14 != v35 >> 14)
    {
      unint64_t v7 = v33;
      uint64_t v38 = sub_24872C930();
      unint64_t v6 = v39;
      if (v38 == 32 && v39 == 0xE100000000000000) {
        goto LABEL_20;
      }
      unint64_t v142 = v7;
      char v44 = sub_24872CEB0();
      swift_bridgeObjectRelease();
      if (v44)
      {
        swift_bridgeObjectRelease();
        unint64_t v7 = v142;
        goto LABEL_29;
      }
      unint64_t v55 = sub_24872C8F0();
      unint64_t v37 = v55 >> 14;
      if (v55 >> 14 != v36)
      {
        unint64_t v7 = v55;
        uint64_t v56 = sub_24872C930();
        unint64_t v6 = v57;
        if (v56 == 32 && v57 == 0xE100000000000000)
        {
LABEL_20:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_29;
        }
        uint64_t v8 = sub_24872CEB0();
        swift_bridgeObjectRelease();
        if (v8)
        {
          swift_bridgeObjectRelease();
LABEL_29:
          if (v37 >= v9) {
            goto LABEL_30;
          }
          goto LABEL_130;
        }
        while (1)
        {
          unint64_t v88 = sub_24872C8F0();
          unint64_t v37 = v88 >> 14;
          if (v88 >> 14 == v36) {
            break;
          }
          uint64_t v8 = v88;
          uint64_t v89 = sub_24872C930();
          unint64_t v6 = v90;
          if (v89 == 32 && v90 == 0xE100000000000000)
          {
            swift_bridgeObjectRelease();
LABEL_112:
            swift_bridgeObjectRelease();
            unint64_t v7 = v8;
            goto LABEL_29;
          }
          char v91 = sub_24872CEB0();
          swift_bridgeObjectRelease();
          if (v91) {
            goto LABEL_112;
          }
        }
      }
    }
LABEL_116:
    swift_bridgeObjectRelease();
    unint64_t v4 = sub_2486D0F90(v5, a3, a4);
    unint64_t v5 = v107;
    unint64_t v6 = v108;
    unint64_t v7 = v109;
    uint64_t v8 = v157;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_135;
    }
    goto LABEL_117;
  }
  while (1)
  {
    unint64_t v7 = sub_24872C900();
    if (sub_24872C930() == 32 && v98 == 0xE100000000000000) {
      break;
    }
    unint64_t v6 = v98;
    unint64_t v85 = v7;
    char v100 = sub_24872CEB0();
    swift_bridgeObjectRelease();
    if (v100) {
      goto LABEL_73;
    }
    if (v150 == v85 >> 14) {
      goto LABEL_17;
    }
  }
LABEL_40:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_74:
  if (v9 <= v7 >> 14)
  {
LABEL_30:
    unint64_t v4 = sub_24872C6D0();
    uint64_t v46 = v45;
    uint64_t v48 = v47;
    unint64_t v7 = v49;
    unint64_t v6 = v157;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v6 = (unint64_t)sub_24871AA54(0, *(void *)(v157 + 16) + 1, 1, (char *)v157);
    }
    unint64_t v51 = *(void *)(v6 + 16);
    unint64_t v50 = *(void *)(v6 + 24);
    if (v51 >= v50 >> 1) {
      unint64_t v6 = (unint64_t)sub_24871AA54((char *)(v50 > 1), v51 + 1, 1, (char *)v6);
    }
    *(void *)(v6 + 16) = v51 + 1;
    unint64_t v52 = (void *)(v6 + 32 * v51);
    v52[4] = v4;
    v52[5] = v46;
    v52[6] = v48;
    v52[7] = v7;
    unint64_t v157 = v6;
    goto LABEL_10;
  }
LABEL_134:
  __break(1u);
LABEL_135:
  uint64_t v8 = (uint64_t)sub_24871AA54(0, *(void *)(v8 + 16) + 1, 1, (char *)v8);
LABEL_117:
  unint64_t v111 = *(void *)(v8 + 16);
  unint64_t v110 = *(void *)(v8 + 24);
  unint64_t v112 = v111 + 1;
  if (v111 >= v110 >> 1) {
    uint64_t v8 = (uint64_t)sub_24871AA54((char *)(v110 > 1), v111 + 1, 1, (char *)v8);
  }
  *(void *)(v8 + 16) = v112;
  long long v113 = (char *)(v8 + 32 * v111);
  *((void *)v113 + 4) = v4;
  *((void *)v113 + 5) = v5;
  v113 += 32;
  *((void *)v113 + 2) = v6;
  *((void *)v113 + 3) = v7;
  uint64_t v156 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  sub_2486B9DB0(0, v111 + 1, 0);
  uint64_t v114 = v156;
  v115 = (uint64_t *)(v8 + 56);
  do
  {
    uint64_t v116 = *(v115 - 3);
    uint64_t v117 = *(v115 - 2);
    uint64_t v118 = *(v115 - 1);
    uint64_t v119 = *v115;
    swift_bridgeObjectRetain();
    if ((v117 ^ (unint64_t)v116) >= 0x4000)
    {
      MEMORY[0x24C57C170](32, 0xE100000000000000, a2);
      sub_24872C920();
      sub_24872C5A0();
      swift_bridgeObjectRetain();
      uint64_t v153 = MEMORY[0x24C57C040](15, 7, 0, 0xE000000000000000);
      uint64_t v155 = v120;
      sub_24872C5F0();
      uint64_t v121 = MEMORY[0x24C57C420](v153, v155);
      uint64_t v149 = v122;
      uint64_t v152 = v114;
      unint64_t v123 = v112;
      uint64_t v125 = v124;
      uint64_t v127 = v126;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v128 = v125;
      unint64_t v112 = v123;
      uint64_t v129 = MEMORY[0x24C57C040](v121, v149, v128, v127);
      uint64_t v131 = v130;
      swift_bridgeObjectRelease();
      uint64_t v154 = v129;
      uint64_t v114 = v152;
      sub_2486CB35C();
      sub_24872C5F0();
      uint64_t v116 = MEMORY[0x24C57C420](v154, v131);
      uint64_t v117 = v132;
      uint64_t v118 = v133;
      uint64_t v135 = v134;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t v119 = v135;
    }
    unint64_t v137 = *(void *)(v114 + 16);
    unint64_t v136 = *(void *)(v114 + 24);
    if (v137 >= v136 >> 1) {
      sub_2486B9DB0((char *)(v136 > 1), v137 + 1, 1);
    }
    *(void *)(v114 + 16) = v137 + 1;
    v138 = (void *)(v114 + 32 * v137);
    v138[4] = v116;
    v138[5] = v117;
    v138[6] = v118;
    v138[7] = v119;
    v115 += 4;
    --v112;
  }
  while (v112);
  swift_bridgeObjectRelease_n();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1E8);
  sub_2486C54FC(&qword_26931E1F0, &qword_26931E1E8);
  sub_2486C52E4();
  uint64_t v106 = sub_24872C740();
  swift_bridgeObjectRelease();
  return v106;
}

uint64_t sub_2486D262C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return 0;
  }
  sub_24872C5C0();
  return sub_24872C6A0();
}

uint64_t sub_2486D26AC(uint64_t a1)
{
  uint64_t v21 = MEMORY[0x24C57C170](32, 0xE100000000000000, 2);
  swift_bridgeObjectRetain();
  sub_24872C600();
  swift_bridgeObjectRelease();
  uint64_t v3 = v1[2];
  unint64_t v4 = v1[3];
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_2486D1788(a1, 26, v3, v4);
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  uint64_t v9 = v1[4];
  unint64_t v8 = v1[5];
  uint64_t v10 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (v10)
  {
    swift_bridgeObjectRetain();
    sub_2486D1788(a1, 8, v9, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24872C600();
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    uint64_t v11 = v3 & 0xFFFFFFFFFFFFLL;
  }
  if (v11)
  {
    if (sub_24872C5A0() >= 26)
    {
      sub_24872C600();
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t v12 = sub_24872C5A0();
      unint64_t v13 = sub_24871B2F0(v12, v5, v7);
      uint64_t v15 = v14;
      uint64_t v17 = v16;
      uint64_t v19 = v18;
      swift_bridgeObjectRelease();
      MEMORY[0x24C57C040](v13, v15, v17, v19);
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24872C600();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24872C600();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24872C600();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_2486D2934()
{
  return sub_24872D070();
}

uint64_t sub_2486D29E8()
{
  swift_bridgeObjectRetain();
  sub_24872C4D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24872C4D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24872C4D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2486D2A98()
{
  return sub_24872D070();
}

uint64_t sub_2486D2B48(_OWORD *a1, long long *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *a2;
  long long v4 = a2[1];
  _OWORD v7[2] = a1[2];
  v8[0] = v3;
  long long v5 = a2[2];
  v8[1] = v4;
  uint64_t v8[2] = v5;
  return sub_2486D4BAC(v7, v8) & 1;
}

uint64_t sub_2486D2B90()
{
  unint64_t v1 = v0[1];
  uint64_t v2 = 0x616D6D6F63627553;
  uint64_t v3 = 0x736E6F6974704FLL;
  if (v1 != 2) {
    uint64_t v3 = *v0;
  }
  if (v1 != 1) {
    uint64_t v2 = v3;
  }
  if (v1) {
    uint64_t v4 = v2;
  }
  else {
    uint64_t v4 = 0x746E656D75677241;
  }
  sub_2486D66CC(*v0, v1);
  return v4;
}

uint64_t sub_2486D2C28(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  unint64_t v4 = a2[1];
  switch(v3)
  {
    case 0:
      return !v4;
    case 1:
      return v4 == 1;
    case 2:
      return v4 == 2;
  }
  if (v4 < 3) {
    return 0;
  }
  if (*a1 == *a2 && v3 == v4) {
    return 1;
  }
  return sub_24872CEB0();
}

uint64_t sub_2486D2CA0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2486D8564();
  *a1 = result;
  a1[1] = v3;
  return result;
}

BOOL sub_2486D2D04(void *a1)
{
  unint64_t v1 = a1[1];
  uint64_t v2 = *a1 & 0xFFFFFFFFFFFFLL;
  if ((v1 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(v1) & 0xF;
  }
  return v2 != 0;
}

void sub_2486D2D24(void *a1@<X8>)
{
  *a1 = MEMORY[0x263F8EE78];
}

uint64_t sub_2486D2D34()
{
  uint64_t v2 = *(void *)(v0 + 24);
  unint64_t v1 = *(void *)(v0 + 32);
  uint64_t v3 = HIBYTE(v1) & 0xF;
  if ((v1 & 0x2000000000000000) == 0) {
    uint64_t v3 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3) {
    return 0;
  }
  swift_bridgeObjectRetain();
  sub_2486D2DE0(7, v2, v1);
  swift_bridgeObjectRelease();
  sub_24872C600();
  swift_bridgeObjectRelease();
  return 0x203A6567617355;
}

uint64_t sub_2486D2DE0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v27 = 10;
  unint64_t v28 = 0xE100000000000000;
  unint64_t v25 = &v27;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_2486E3304(1, 0, sub_2486C52C4, (uint64_t)v24, a2, a3);
  unint64_t v7 = v6;
  if (*((void *)v6 + 2) != 2)
  {
    uint64_t v27 = (uint64_t)v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1E8);
    sub_2486C54FC(&qword_26931E1F0, &qword_26931E1E8);
    sub_2486C52E4();
    uint64_t v22 = sub_24872C740();
    swift_bridgeObjectRelease();
    return v22;
  }
  uint64_t v8 = *((void *)v6 + 4);
  uint64_t v9 = *((void *)v6 + 5);
  uint64_t v10 = *((void *)v6 + 6);
  uint64_t v11 = *((void *)v6 + 7);
  swift_bridgeObjectRetain();
  uint64_t v12 = MEMORY[0x24C57C040](v8, v9, v10, v11);
  unint64_t v14 = v13;
  swift_bridgeObjectRelease();
  uint64_t v27 = v12;
  unint64_t v28 = v14;
  uint64_t result = sub_24872C600();
  if (*((void *)v7 + 2) >= 2uLL)
  {
    unint64_t v16 = *((void *)v7 + 8);
    unint64_t v17 = *((void *)v7 + 9);
    uint64_t v18 = *((void *)v7 + 10);
    swift_bridgeObjectRetain();
    uint64_t v19 = swift_bridgeObjectRelease();
    v26[0] = 10;
    v26[1] = 0xE100000000000000;
    MEMORY[0x270FA5388](v19);
    v23[2] = v26;
    swift_bridgeObjectRetain();
    unint64_t v20 = sub_2486E2EE4(0x7FFFFFFFFFFFFFFFLL, 0, sub_2486D6720, (uint64_t)v23, v16, v17, v18);
    MEMORY[0x24C57C170](32, 0xE100000000000000, a1);
    uint64_t v21 = sub_2486CAEA4(v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v26[0] = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1E8);
    sub_2486C54FC(&qword_26931E1F0, &qword_26931E1E8);
    sub_2486C52E4();
    sub_24872C740();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24872C600();
    swift_bridgeObjectRelease();
    return v27;
  }
  __break(1u);
  return result;
}

BOOL sub_2486D30C8()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  for (uint64_t i = v1 + 48; *(void *)(i - 8) != 1; i += 48)
  {
    if (!--v2) {
      return 0;
    }
  }
  return *(void *)(*(void *)i + 16) != 0;
}

char *sub_2486D310C(unsigned __int8 *a1)
{
  uint64_t v1 = 1886152040;
  int v2 = *a1;
  if (sub_24872C6A0() == 95 && v3 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  char v5 = sub_24872CEB0();
  swift_bridgeObjectRelease();
  if (v5)
  {
LABEL_8:
    unint64_t v7 = sub_24871B2F0(1uLL, 1886152040, 0xE400000000000000);
    uint64_t v1 = MEMORY[0x24C57C040](v7);
    unint64_t v6 = v8;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  unint64_t v6 = 0xE400000000000000;
LABEL_9:
  swift_bridgeObjectRetain();
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_2486F9CA0(v9, v1, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v11 = *(void *)(v10 + 16);
  if (!v11)
  {
    swift_bridgeObjectRelease();
    unint64_t v13 = (char *)MEMORY[0x263F8EE78];
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = (unsigned __int8 *)(v10 + 48);
  unint64_t v13 = (char *)MEMORY[0x263F8EE78];
  do
  {
    uint64_t v16 = *((void *)v12 - 2);
    uint64_t v15 = *((void *)v12 - 1);
    unsigned int v17 = *v12;
    if (v2)
    {
      if (v17 >> 6)
      {
        if (v17 >> 6 == 1) {
          goto LABEL_12;
        }
        uint64_t v21 = 0;
        unint64_t v22 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        sub_24872C600();
        sub_24872C600();
        sub_24872CBB0();
        sub_2486B7668(v16, v15, v17);
        uint64_t v16 = 0;
        uint64_t v15 = 0xE000000000000000;
        LOBYTE(v17) = 0x80;
      }
      else
      {
        uint64_t v21 = 0;
        unint64_t v22 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        sub_24872C600();
        sub_24872C600();
        sub_24872CBB0();
        sub_2486B7668(v16, v15, v17);
        LOBYTE(v17) = 0;
        uint64_t v16 = 0;
        uint64_t v15 = 0xE000000000000000;
      }
    }
    else
    {
      sub_2486B7650(*((void *)v12 - 2), *((void *)v12 - 1), *v12);
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v13 = sub_24871A0CC(0, *((void *)v13 + 2) + 1, 1, v13);
    }
    unint64_t v19 = *((void *)v13 + 2);
    unint64_t v18 = *((void *)v13 + 3);
    if (v19 >= v18 >> 1) {
      unint64_t v13 = sub_24871A0CC((char *)(v18 > 1), v19 + 1, 1, v13);
    }
    *((void *)v13 + 2) = v19 + 1;
    unint64_t v14 = &v13[24 * v19];
    *((void *)v14 + 4) = v16;
    *((void *)v14 + 5) = v15;
    v14[48] = v17;
LABEL_12:
    v12 += 24;
    --v11;
  }
  while (v11);
  swift_bridgeObjectRelease_n();
LABEL_25:
  uint64_t v21 = v13;
  swift_bridgeObjectRetain();
  sub_2486D3694(&v21);
  swift_bridgeObjectRelease();
  return v21;
}

unint64_t sub_2486D3428(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v14 = a4 >> 14;
  if (a4 >> 14 == a3 >> 14) {
    return 0;
  }
  if (sub_24872C930() == a1 && v8 == a2)
  {
    unint64_t v4 = a3;
LABEL_6:
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = sub_24872CEB0();
    swift_bridgeObjectRelease();
    if (v9)
    {
      return a3;
    }
    else
    {
      while (1)
      {
        unint64_t v11 = sub_24872C8F0();
        if (v11 >> 14 == v14) {
          return 0;
        }
        unint64_t v4 = v11;
        if (sub_24872C930() == a1 && v12 == a2) {
          goto LABEL_6;
        }
        char v10 = sub_24872CEB0();
        swift_bridgeObjectRelease();
        if (v10) {
          return v4;
        }
      }
    }
  }
  return v4;
}

unint64_t sub_2486D35A4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v4 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    return 0;
  }
  uint64_t v7 = 4 * v4;
  unint64_t v8 = 15;
  while (sub_24872C6A0() != a1 || v9 != a2)
  {
    char v10 = sub_24872CEB0();
    swift_bridgeObjectRelease();
    if (v10) {
      return v8;
    }
    unint64_t v8 = sub_24872C5B0();
    if (v7 == v8 >> 14) {
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_2486D3694(char **a1)
{
  int v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_248701D1C((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  uint64_t result = sub_2486D3700(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_2486D3700(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_24872CDD0();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_179;
    }
    if (v4) {
      return sub_2486D42A4(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_178;
  }
  uint64_t v123 = result;
  uint64_t v120 = a1;
  if (v4 <= 1)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    uint64_t v132 = (char *)(MEMORY[0x263F8EE78] + 32);
    uint64_t v122 = MEMORY[0x263F8EE78];
    if (v4 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_144:
      if (v11 >= 2)
      {
        uint64_t v114 = *v120;
        do
        {
          unint64_t v115 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_173;
          }
          if (!v114) {
            goto LABEL_186;
          }
          uint64_t v116 = *(void *)(v8 + 32 + 16 * v115);
          uint64_t v117 = *(void *)(v8 + 32 + 16 * (v11 - 1) + 8);
          uint64_t result = sub_2486D4578((char *)(v114 + 24 * v116), (char *)(v114 + 24 * *(void *)(v8 + 32 + 16 * (v11 - 1))), v114 + 24 * v117, v132);
          if (v2) {
            break;
          }
          if (v117 < v116) {
            goto LABEL_174;
          }
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_248701D08(v8);
            uint64_t v8 = result;
          }
          if (v115 >= *(void *)(v8 + 16)) {
            goto LABEL_175;
          }
          uint64_t v118 = (void *)(v8 + 32 + 16 * v115);
          *uint64_t v118 = v116;
          v118[1] = v117;
          unint64_t v119 = *(void *)(v8 + 16);
          if (v11 > v119) {
            goto LABEL_176;
          }
          uint64_t result = (uint64_t)memmove((void *)(v8 + 32 + 16 * (v11 - 1)), (const void *)(v8 + 32 + 16 * v11), 16 * (v119 - v11));
          *(void *)(v8 + 16) = v119 - 1;
          unint64_t v11 = v119 - 1;
        }
        while (v119 > 2);
      }
LABEL_155:
      swift_bridgeObjectRelease();
      *(void *)(v122 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v7 = v6 >> 1;
    uint64_t result = sub_24872C7D0();
    *(void *)(result + 16) = v7;
    uint64_t v122 = result;
    uint64_t v132 = (char *)(result + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v121 = *a1 + 64;
  uint64_t v8 = MEMORY[0x263F8EE78];
  uint64_t v129 = v4;
  uint64_t v133 = *a1;
  while (2)
  {
    uint64_t v12 = v9;
    uint64_t v13 = v9 + 1;
    uint64_t v130 = v9;
    if (v9 + 1 >= v4) {
      goto LABEL_64;
    }
    uint64_t v124 = v8;
    uint64_t v126 = v2;
    uint64_t v14 = v10 + 24 * v13;
    uint64_t v15 = *(void *)v14;
    uint64_t v16 = *(void *)(v14 + 8);
    unsigned int v17 = *(unsigned __int8 *)(v14 + 16);
    uint64_t v18 = v10 + 24 * v9;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    unsigned int v21 = *(unsigned __int8 *)(v18 + 16);
    if (v21 >> 6)
    {
      if (v21 >> 6 == 1)
      {
        uint64_t v140 = 0;
        unint64_t v146 = 0xE000000000000000;
        sub_2486B7650(v15, v16, v17);
        sub_2486B7650(v19, v20, v21);
        sub_24872C600();
        sub_24872C4E0();
        goto LABEL_22;
      }
      uint64_t v140 = 45;
      unint64_t v22 = 0xE100000000000000;
    }
    else
    {
      uint64_t v140 = 11565;
      unint64_t v22 = 0xE200000000000000;
    }
    unint64_t v146 = v22;
    sub_2486B7650(v15, v16, v17);
    sub_2486B7650(v19, v20, v21);
    sub_24872C600();
LABEL_22:
    uint64_t v23 = v140;
    unint64_t v24 = v146;
    if (v17 >> 6)
    {
      if (v17 >> 6 == 1)
      {
        uint64_t v141 = 0;
        unint64_t v147 = 0xE000000000000000;
        sub_24872C600();
        sub_24872C4E0();
        goto LABEL_28;
      }
      uint64_t v141 = 45;
      unint64_t v25 = 0xE100000000000000;
    }
    else
    {
      uint64_t v141 = 11565;
      unint64_t v25 = 0xE200000000000000;
    }
    unint64_t v147 = v25;
    sub_24872C600();
LABEL_28:
    if (v23 == v141 && v24 == v147) {
      int v138 = 0;
    }
    else {
      int v138 = sub_24872CEB0();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2486B7668(v19, v20, v21);
    uint64_t result = sub_2486B7668(v15, v16, v17);
    uint64_t v4 = v129;
    uint64_t v12 = v130;
    uint64_t v13 = v130 + 2;
    if (v130 + 2 >= v129) {
      goto LABEL_55;
    }
    uint64_t v134 = v130 + 2;
    uint64_t v26 = (unsigned __int8 *)(v121 + 24 * v130);
    while (1)
    {
      uint64_t v27 = *((void *)v26 - 2);
      uint64_t v28 = *((void *)v26 - 1);
      unsigned int v29 = *v26;
      uint64_t v31 = *((void *)v26 - 5);
      uint64_t v30 = *((void *)v26 - 4);
      unsigned int v32 = *(v26 - 24);
      uint64_t v152 = v27;
      if (v32 >> 6)
      {
        if (v32 >> 6 == 1)
        {
          uint64_t v142 = 0;
          unint64_t v148 = 0xE000000000000000;
          sub_2486B7650(v27, v28, v29);
          sub_2486B7650(v31, v30, v32);
          sub_24872C600();
          sub_24872C4E0();
          goto LABEL_40;
        }
        uint64_t v142 = 45;
        unint64_t v33 = 0xE100000000000000;
      }
      else
      {
        uint64_t v142 = 11565;
        unint64_t v33 = 0xE200000000000000;
      }
      unint64_t v148 = v33;
      sub_2486B7650(v27, v28, v29);
      sub_2486B7650(v31, v30, v32);
      sub_24872C600();
LABEL_40:
      uint64_t v34 = v142;
      unint64_t v35 = v148;
      if (!(v29 >> 6))
      {
        uint64_t v143 = 11565;
        unint64_t v36 = 0xE200000000000000;
LABEL_45:
        unint64_t v149 = v36;
        sub_24872C600();
        goto LABEL_46;
      }
      if (v29 >> 6 != 1)
      {
        uint64_t v143 = 45;
        unint64_t v36 = 0xE100000000000000;
        goto LABEL_45;
      }
      uint64_t v143 = 0;
      unint64_t v149 = 0xE000000000000000;
      sub_24872C600();
      sub_24872C4E0();
LABEL_46:
      int v37 = v34 == v143 && v35 == v149 ? 0 : sub_24872CEB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2486B7668(v31, v30, v32);
      uint64_t result = sub_2486B7668(v152, v28, v29);
      if ((v138 ^ v37)) {
        break;
      }
      v26 += 24;
      if (v129 == ++v134)
      {
        uint64_t v4 = v129;
        uint64_t v13 = v129;
        goto LABEL_54;
      }
    }
    uint64_t v4 = v129;
    uint64_t v13 = v134;
LABEL_54:
    uint64_t v12 = v130;
LABEL_55:
    uint64_t v8 = v124;
    uint64_t v2 = v126;
    uint64_t v10 = v133;
    if (v138)
    {
      if (v13 < v12) {
        goto LABEL_180;
      }
      if (v12 < v13)
      {
        uint64_t v38 = 24 * v13;
        uint64_t v39 = 24 * v12;
        uint64_t v40 = v13;
        do
        {
          if (v12 != --v40)
          {
            if (!v133) {
              goto LABEL_185;
            }
            uint64_t v41 = v133 + v39;
            uint64_t v42 = v133 + v38;
            char v43 = *(unsigned char *)(v133 + v39 + 16);
            long long v44 = *(_OWORD *)(v133 + v39);
            uint64_t v45 = *(void *)(v133 + v38 - 8);
            *(_OWORD *)uint64_t v41 = *(_OWORD *)(v133 + v38 - 24);
            *(void *)(v41 + 16) = v45;
            *(_OWORD *)(v42 - 24) = v44;
            *(unsigned char *)(v42 - 8) = v43;
          }
          ++v12;
          v38 -= 24;
          v39 += 24;
        }
        while (v12 < v40);
        uint64_t v12 = v130;
      }
    }
LABEL_64:
    if (v13 >= v4) {
      goto LABEL_96;
    }
    if (__OFSUB__(v13, v12)) {
      goto LABEL_177;
    }
    if (v13 - v12 >= v123)
    {
LABEL_95:
      uint64_t v12 = v130;
      goto LABEL_96;
    }
    uint64_t v12 = v130;
    uint64_t v46 = v130 + v123;
    if (__OFADD__(v130, v123)) {
      goto LABEL_181;
    }
    if (v46 >= v4) {
      uint64_t v46 = v4;
    }
    if (v46 >= v130)
    {
      if (v13 != v46)
      {
        uint64_t v127 = v2;
        uint64_t v128 = v46;
        uint64_t v125 = v8;
        uint64_t v47 = v10 + 24 * v13;
        while (1)
        {
          uint64_t v135 = v13;
          uint64_t v48 = v130;
          uint64_t v131 = v47;
          uint64_t v49 = v47;
          while (1)
          {
            uint64_t v50 = *(void *)v47;
            uint64_t v51 = *(void *)(v47 + 8);
            unsigned int v52 = *(unsigned __int8 *)(v47 + 16);
            uint64_t v54 = *(void *)(v49 - 24);
            v49 -= 24;
            uint64_t v53 = v54;
            uint64_t v55 = *(void *)(v47 - 16);
            unsigned int v56 = *(unsigned __int8 *)(v47 - 8);
            uint64_t v153 = *(void *)v47;
            uint64_t v139 = v51;
            uint64_t v137 = v54;
            if (v56 >> 6)
            {
              if (v56 >> 6 == 1)
              {
                uint64_t v144 = 0;
                unint64_t v150 = 0xE000000000000000;
                sub_2486B7650(v50, v51, v52);
                sub_2486B7650(v53, v55, v56);
                sub_24872C600();
                sub_24872C4E0();
                goto LABEL_82;
              }
              uint64_t v144 = 45;
              unint64_t v57 = 0xE100000000000000;
            }
            else
            {
              uint64_t v144 = 11565;
              unint64_t v57 = 0xE200000000000000;
            }
            unint64_t v150 = v57;
            sub_2486B7650(v50, v51, v52);
            sub_2486B7650(v53, v55, v56);
            sub_24872C600();
LABEL_82:
            uint64_t v58 = v144;
            unint64_t v59 = v150;
            if (!(v52 >> 6))
            {
              uint64_t v145 = 11565;
              unint64_t v60 = 0xE200000000000000;
LABEL_87:
              unint64_t v151 = v60;
              sub_24872C600();
              goto LABEL_88;
            }
            if (v52 >> 6 != 1)
            {
              uint64_t v145 = 45;
              unint64_t v60 = 0xE100000000000000;
              goto LABEL_87;
            }
            uint64_t v145 = 0;
            unint64_t v151 = 0xE000000000000000;
            sub_24872C600();
            sub_24872C4E0();
LABEL_88:
            if (v58 == v145 && v59 == v151) {
              break;
            }
            char v61 = sub_24872CEB0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_2486B7668(v137, v55, v56);
            uint64_t result = sub_2486B7668(v153, v139, v52);
            if ((v61 & 1) == 0) {
              goto LABEL_74;
            }
            if (!v133) {
              goto LABEL_183;
            }
            char v62 = *(unsigned char *)(v47 + 16);
            long long v63 = *(_OWORD *)v47;
            *(_OWORD *)uint64_t v47 = *(_OWORD *)v49;
            *(void *)(v47 + 16) = *(void *)(v49 + 16);
            *(_OWORD *)(v47 - 24) = v63;
            *(unsigned char *)(v47 - 8) = v62;
            ++v48;
            uint64_t v47 = v49;
            if (v135 == v48) {
              goto LABEL_74;
            }
          }
          swift_bridgeObjectRelease_n();
          sub_2486B7668(v137, v55, v56);
          uint64_t result = sub_2486B7668(v153, v139, v52);
LABEL_74:
          uint64_t v13 = v135 + 1;
          uint64_t v47 = v131 + 24;
          if (v135 + 1 == v128)
          {
            uint64_t v2 = v127;
            uint64_t v13 = v128;
            uint64_t v8 = v125;
            uint64_t v10 = v133;
            goto LABEL_95;
          }
        }
      }
LABEL_96:
      if (v13 < v12) {
        goto LABEL_172;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_248701C0C(0, *(void *)(v8 + 16) + 1, 1, (char *)v8);
        uint64_t v8 = result;
      }
      unint64_t v65 = *(void *)(v8 + 16);
      unint64_t v64 = *(void *)(v8 + 24);
      unint64_t v11 = v65 + 1;
      if (v65 >= v64 >> 1)
      {
        uint64_t result = (uint64_t)sub_248701C0C((char *)(v64 > 1), v65 + 1, 1, (char *)v8);
        uint64_t v8 = result;
      }
      *(void *)(v8 + 16) = v11;
      uint64_t v66 = v8 + 32;
      uint64_t v67 = (uint64_t *)(v8 + 32 + 16 * v65);
      *uint64_t v67 = v130;
      v67[1] = v13;
      uint64_t v136 = v13;
      if (!v65)
      {
        unint64_t v11 = 1;
LABEL_14:
        uint64_t v4 = v129;
        uint64_t v9 = v136;
        if (v136 >= v129) {
          goto LABEL_144;
        }
        continue;
      }
LABEL_102:
      unint64_t v68 = v11 - 1;
      if (v11 >= 4)
      {
        unint64_t v73 = v66 + 16 * v11;
        uint64_t v74 = *(void *)(v73 - 64);
        uint64_t v75 = *(void *)(v73 - 56);
        BOOL v79 = __OFSUB__(v75, v74);
        uint64_t v76 = v75 - v74;
        if (v79) {
          goto LABEL_161;
        }
        uint64_t v78 = *(void *)(v73 - 48);
        uint64_t v77 = *(void *)(v73 - 40);
        BOOL v79 = __OFSUB__(v77, v78);
        uint64_t v71 = v77 - v78;
        char v72 = v79;
        if (v79) {
          goto LABEL_162;
        }
        unint64_t v80 = v11 - 2;
        uint64_t v81 = (uint64_t *)(v66 + 16 * (v11 - 2));
        uint64_t v83 = *v81;
        uint64_t v82 = v81[1];
        BOOL v79 = __OFSUB__(v82, v83);
        uint64_t v84 = v82 - v83;
        if (v79) {
          goto LABEL_163;
        }
        BOOL v79 = __OFADD__(v71, v84);
        uint64_t v85 = v71 + v84;
        if (v79) {
          goto LABEL_165;
        }
        if (v85 >= v76)
        {
          char v103 = (uint64_t *)(v66 + 16 * v68);
          uint64_t v105 = *v103;
          uint64_t v104 = v103[1];
          BOOL v79 = __OFSUB__(v104, v105);
          uint64_t v106 = v104 - v105;
          if (v79) {
            goto LABEL_171;
          }
          BOOL v96 = v71 < v106;
        }
        else
        {
LABEL_115:
          if (v72) {
            goto LABEL_164;
          }
          unint64_t v80 = v11 - 2;
          char v86 = (uint64_t *)(v66 + 16 * (v11 - 2));
          uint64_t v88 = *v86;
          uint64_t v87 = v86[1];
          BOOL v89 = __OFSUB__(v87, v88);
          uint64_t v90 = v87 - v88;
          char v91 = v89;
          if (v89) {
            goto LABEL_166;
          }
          uint64_t v92 = (uint64_t *)(v66 + 16 * v68);
          uint64_t v94 = *v92;
          uint64_t v93 = v92[1];
          BOOL v79 = __OFSUB__(v93, v94);
          uint64_t v95 = v93 - v94;
          if (v79) {
            goto LABEL_168;
          }
          if (__OFADD__(v90, v95)) {
            goto LABEL_170;
          }
          if (v90 + v95 < v71) {
            goto LABEL_127;
          }
          BOOL v96 = v71 < v95;
        }
        if (v96) {
          unint64_t v68 = v80;
        }
      }
      else
      {
        if (v11 == 3)
        {
          uint64_t v70 = *(void *)(v8 + 32);
          uint64_t v69 = *(void *)(v8 + 40);
          BOOL v79 = __OFSUB__(v69, v70);
          uint64_t v71 = v69 - v70;
          char v72 = v79;
          goto LABEL_115;
        }
        uint64_t v97 = *(void *)(v8 + 32);
        uint64_t v98 = *(void *)(v8 + 40);
        BOOL v79 = __OFSUB__(v98, v97);
        uint64_t v90 = v98 - v97;
        char v91 = v79;
LABEL_127:
        if (v91) {
          goto LABEL_167;
        }
        long long v99 = (uint64_t *)(v66 + 16 * v68);
        uint64_t v101 = *v99;
        uint64_t v100 = v99[1];
        BOOL v79 = __OFSUB__(v100, v101);
        uint64_t v102 = v100 - v101;
        if (v79) {
          goto LABEL_169;
        }
        if (v102 < v90) {
          goto LABEL_14;
        }
      }
      unint64_t v107 = v68 - 1;
      if (v68 - 1 >= v11)
      {
        __break(1u);
LABEL_158:
        __break(1u);
LABEL_159:
        __break(1u);
LABEL_160:
        __break(1u);
LABEL_161:
        __break(1u);
LABEL_162:
        __break(1u);
LABEL_163:
        __break(1u);
LABEL_164:
        __break(1u);
LABEL_165:
        __break(1u);
LABEL_166:
        __break(1u);
LABEL_167:
        __break(1u);
LABEL_168:
        __break(1u);
LABEL_169:
        __break(1u);
LABEL_170:
        __break(1u);
LABEL_171:
        __break(1u);
LABEL_172:
        __break(1u);
LABEL_173:
        __break(1u);
LABEL_174:
        __break(1u);
LABEL_175:
        __break(1u);
LABEL_176:
        __break(1u);
LABEL_177:
        __break(1u);
LABEL_178:
        __break(1u);
LABEL_179:
        __break(1u);
LABEL_180:
        __break(1u);
LABEL_181:
        __break(1u);
        break;
      }
      if (!v10) {
        goto LABEL_184;
      }
      uint64_t v108 = v10;
      unint64_t v109 = (uint64_t *)(v66 + 16 * v107);
      uint64_t v110 = *v109;
      unint64_t v111 = (void *)(v66 + 16 * v68);
      uint64_t v112 = v111[1];
      uint64_t result = sub_2486D4578((char *)(v108 + 24 * *v109), (char *)(v108 + 24 * *v111), v108 + 24 * v112, v132);
      if (v2) {
        goto LABEL_155;
      }
      if (v112 < v110) {
        goto LABEL_158;
      }
      if (v68 > *(void *)(v8 + 16)) {
        goto LABEL_159;
      }
      *unint64_t v109 = v110;
      *(void *)(v66 + 16 * v107 + 8) = v112;
      unint64_t v113 = *(void *)(v8 + 16);
      if (v68 >= v113) {
        goto LABEL_160;
      }
      unint64_t v11 = v113 - 1;
      uint64_t result = (uint64_t)memmove((void *)(v66 + 16 * v68), v111 + 2, 16 * (v113 - 1 - v68));
      *(void *)(v8 + 16) = v113 - 1;
      uint64_t v10 = v133;
      if (v113 <= 2) {
        goto LABEL_14;
      }
      goto LABEL_102;
    }
    break;
  }
  __break(1u);
LABEL_183:
  __break(1u);
LABEL_184:
  __break(1u);
LABEL_185:
  __break(1u);
LABEL_186:
  __break(1u);
  return result;
}

uint64_t sub_2486D42A4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v20 = result;
  uint64_t v23 = a3;
  if (a3 != a2)
  {
    uint64_t v22 = *a4;
    uint64_t v4 = *a4 + 24 * a3;
LABEL_6:
    uint64_t v5 = v20;
    uint64_t v21 = v4;
    uint64_t v6 = v4;
    while (1)
    {
      uint64_t v30 = *(void *)v4;
      uint64_t v25 = *(void *)(v4 + 8);
      unsigned int v7 = *(unsigned __int8 *)(v4 + 16);
      uint64_t v9 = *(void *)(v6 - 24);
      v6 -= 24;
      uint64_t v8 = v9;
      uint64_t v10 = *(void *)(v4 - 16);
      unsigned int v11 = *(unsigned __int8 *)(v4 - 8);
      uint64_t v24 = v10;
      if (v11 >> 6)
      {
        if (v11 >> 6 == 1)
        {
          uint64_t v26 = 0;
          unint64_t v28 = 0xE000000000000000;
          sub_2486B7650(v30, v25, v7);
          sub_2486B7650(v8, v10, v11);
          sub_24872C600();
          sub_24872C4E0();
          goto LABEL_13;
        }
        uint64_t v26 = 45;
        unint64_t v12 = 0xE100000000000000;
      }
      else
      {
        uint64_t v26 = 11565;
        unint64_t v12 = 0xE200000000000000;
      }
      unint64_t v28 = v12;
      sub_2486B7650(v30, v25, v7);
      sub_2486B7650(v8, v10, v11);
      sub_24872C600();
LABEL_13:
      uint64_t v13 = v26;
      unint64_t v14 = v28;
      if (!(v7 >> 6))
      {
        uint64_t v27 = 11565;
        unint64_t v15 = 0xE200000000000000;
LABEL_18:
        unint64_t v29 = v15;
        sub_24872C600();
        goto LABEL_19;
      }
      if (v7 >> 6 != 1)
      {
        uint64_t v27 = 45;
        unint64_t v15 = 0xE100000000000000;
        goto LABEL_18;
      }
      uint64_t v27 = 0;
      unint64_t v29 = 0xE000000000000000;
      sub_24872C600();
      sub_24872C4E0();
LABEL_19:
      if (v13 == v27 && v14 == v29)
      {
        swift_bridgeObjectRelease_n();
        sub_2486B7668(v8, v24, v11);
        uint64_t result = sub_2486B7668(v30, v25, v7);
LABEL_5:
        uint64_t v4 = v21 + 24;
        if (++v23 == a2) {
          return result;
        }
        goto LABEL_6;
      }
      char v16 = sub_24872CEB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2486B7668(v8, v24, v11);
      uint64_t result = sub_2486B7668(v30, v25, v7);
      if ((v16 & 1) == 0) {
        goto LABEL_5;
      }
      if (!v22)
      {
        __break(1u);
        return result;
      }
      char v17 = *(unsigned char *)(v4 + 16);
      long long v18 = *(_OWORD *)v4;
      *(_OWORD *)uint64_t v4 = *(_OWORD *)v6;
      *(void *)(v4 + 16) = *(void *)(v6 + 16);
      *(_OWORD *)(v4 - 24) = v18;
      *(unsigned char *)(v4 - 8) = v17;
      ++v5;
      uint64_t v4 = v6;
      if (v23 == v5) {
        goto LABEL_5;
      }
    }
  }
  return result;
}

uint64_t sub_2486D4578(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = __src;
  uint64_t v6 = __dst;
  int64_t v7 = __src - __dst;
  int64_t v8 = (__src - __dst) / 24;
  uint64_t v9 = a3 - (void)__src;
  uint64_t v10 = (uint64_t)(a3 - (void)__src) / 24;
  if (v8 >= v10)
  {
    uint64_t v27 = 24 * v10;
    if (a4 != __src || &__src[v27] <= a4) {
      memmove(a4, __src, 24 * v10);
    }
    unint64_t v12 = &v4[v27];
    if (v6 >= v5 || v9 < 24) {
      goto LABEL_66;
    }
    unint64_t v28 = a3 - 24;
    unsigned int v56 = v6;
    uint64_t v58 = v4;
    while (1)
    {
      uint64_t v29 = *((void *)v12 - 3);
      uint64_t v30 = *((void *)v12 - 2);
      uint64_t v31 = v12 - 24;
      unsigned int v32 = *(v12 - 8);
      uint64_t v33 = *((void *)v5 - 3);
      uint64_t v34 = v5 - 24;
      uint64_t v52 = *((void *)v5 - 2);
      unsigned int v35 = *(v5 - 8);
      unint64_t v68 = v5;
      uint64_t v54 = v12;
      uint64_t v49 = v33;
      unsigned __int8 v48 = *(v5 - 8);
      if (v35 >> 6)
      {
        if (v35 >> 6 == 1)
        {
          uint64_t v61 = 0;
          unint64_t v65 = 0xE000000000000000;
          sub_2486B7650(v29, v30, v32);
          sub_2486B7650(v33, v52, v35);
          sub_24872C600();
          sub_24872C4E0();
          goto LABEL_43;
        }
        uint64_t v61 = 45;
        unint64_t v36 = 0xE100000000000000;
      }
      else
      {
        uint64_t v61 = 11565;
        unint64_t v36 = 0xE200000000000000;
      }
      unint64_t v65 = v36;
      sub_2486B7650(v29, v30, v32);
      sub_2486B7650(v33, v52, v35);
      sub_24872C600();
LABEL_43:
      uint64_t v38 = v61;
      unint64_t v37 = v65;
      unsigned __int8 v50 = v32;
      if (!(v32 >> 6))
      {
        uint64_t v62 = 11565;
        unint64_t v39 = 0xE200000000000000;
LABEL_48:
        unint64_t v66 = v39;
        sub_24872C600();
        goto LABEL_49;
      }
      if (v32 >> 6 != 1)
      {
        uint64_t v62 = 45;
        unint64_t v39 = 0xE100000000000000;
        goto LABEL_48;
      }
      uint64_t v62 = 0;
      unint64_t v66 = 0xE000000000000000;
      sub_24872C600();
      sub_24872C4E0();
LABEL_49:
      uint64_t v40 = v30;
      if (v38 == v62 && v37 == v66)
      {
        uint64_t v41 = v29;
        char v42 = 0;
      }
      else
      {
        uint64_t v41 = v29;
        char v42 = sub_24872CEB0();
      }
      char v43 = (char *)(v28 + 24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2486B7668(v49, v52, v48);
      sub_2486B7668(v41, v40, v50);
      if (v42)
      {
        uint64_t v4 = v58;
        unint64_t v12 = v54;
        if (v43 == v68)
        {
          uint64_t v5 = v34;
          unint64_t v44 = (unint64_t)v56;
          if (v28 < (unint64_t)v68) {
            goto LABEL_64;
          }
          goto LABEL_63;
        }
        uint64_t v5 = v34;
      }
      else
      {
        uint64_t v4 = v58;
        uint64_t v34 = v31;
        if (v43 == v54)
        {
          unint64_t v12 = v31;
          uint64_t v5 = v68;
          unint64_t v44 = (unint64_t)v56;
          if (v28 < (unint64_t)v54) {
            goto LABEL_64;
          }
          goto LABEL_63;
        }
        unint64_t v12 = v31;
        uint64_t v5 = v68;
      }
      unint64_t v44 = (unint64_t)v56;
LABEL_63:
      long long v45 = *(_OWORD *)v34;
      *(void *)(v28 + 16) = *((void *)v34 + 2);
      *(_OWORD *)unint64_t v28 = v45;
LABEL_64:
      if ((unint64_t)v5 > v44)
      {
        v28 -= 24;
        if (v12 > v4) {
          continue;
        }
      }
      goto LABEL_66;
    }
  }
  size_t v11 = 24 * v8;
  if (a4 != __dst || &__dst[v11] <= a4) {
    memmove(a4, __dst, v11);
  }
  unint64_t v12 = &v4[v11];
  if ((unint64_t)v5 < a3 && v7 >= 24)
  {
    uint64_t v53 = &v4[v11];
    do
    {
      uint64_t v55 = v6;
      unint64_t v57 = v4;
      uint64_t v14 = *(void *)v5;
      uint64_t v13 = *((void *)v5 + 1);
      unsigned int v15 = v5[16];
      uint64_t v16 = *(void *)v4;
      uint64_t v17 = *((void *)v4 + 1);
      unsigned int v18 = v4[16];
      uint64_t v67 = v5;
      if (v18 >> 6)
      {
        if (v18 >> 6 == 1)
        {
          uint64_t v59 = 0;
          unint64_t v63 = 0xE000000000000000;
          sub_2486B7650(v14, v13, v15);
          sub_2486B7650(v16, v17, v18);
          sub_24872C600();
          sub_24872C4E0();
          goto LABEL_14;
        }
        uint64_t v59 = 45;
        unint64_t v19 = 0xE100000000000000;
      }
      else
      {
        uint64_t v59 = 11565;
        unint64_t v19 = 0xE200000000000000;
      }
      unint64_t v63 = v19;
      sub_2486B7650(v14, v13, v15);
      sub_2486B7650(v16, v17, v18);
      sub_24872C600();
LABEL_14:
      uint64_t v21 = v59;
      unint64_t v20 = v63;
      if (!(v15 >> 6))
      {
        uint64_t v60 = 11565;
        unint64_t v22 = 0xE200000000000000;
LABEL_19:
        unint64_t v64 = v22;
        sub_24872C600();
        goto LABEL_20;
      }
      if (v15 >> 6 != 1)
      {
        uint64_t v60 = 45;
        unint64_t v22 = 0xE100000000000000;
        goto LABEL_19;
      }
      uint64_t v60 = 0;
      unint64_t v64 = 0xE000000000000000;
      sub_24872C600();
      sub_24872C4E0();
LABEL_20:
      if (v21 == v60 && v20 == v64)
      {
        swift_bridgeObjectRelease_n();
        sub_2486B7668(v16, v17, v18);
        sub_2486B7668(v14, v13, v15);
LABEL_26:
        uint64_t v25 = v55;
        uint64_t v24 = v57;
        uint64_t v4 = v57 + 24;
        uint64_t v5 = v67;
        if (v55 == v57) {
          goto LABEL_28;
        }
LABEL_27:
        long long v26 = *(_OWORD *)v24;
        *((void *)v25 + 2) = *((void *)v24 + 2);
        *(_OWORD *)uint64_t v25 = v26;
        goto LABEL_28;
      }
      char v23 = sub_24872CEB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2486B7668(v16, v17, v18);
      sub_2486B7668(v14, v13, v15);
      if ((v23 & 1) == 0) {
        goto LABEL_26;
      }
      uint64_t v24 = v67;
      uint64_t v5 = v67 + 24;
      uint64_t v25 = v55;
      uint64_t v4 = v57;
      if (v55 != v67) {
        goto LABEL_27;
      }
LABEL_28:
      uint64_t v6 = v25 + 24;
      unint64_t v12 = v53;
    }
    while (v4 < v53 && (unint64_t)v5 < a3);
  }
  uint64_t v5 = v6;
LABEL_66:
  size_t v46 = 24 * ((v12 - v4) / 24);
  if (v5 != v4 || v5 >= &v4[v46]) {
    memmove(v5, v4, v46);
  }
  return 1;
}

uint64_t sub_2486D4BAC(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = sub_24872CEB0(), result = 0, (v5 & 1) != 0))
  {
    BOOL v7 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v7 || (char v8 = sub_24872CEB0(), result = 0, (v8 & 1) != 0))
    {
      if (a1[4] == a2[4] && a1[5] == a2[5])
      {
        return 1;
      }
      else
      {
        return sub_24872CEB0();
      }
    }
  }
  return result;
}

char *sub_2486D4C60(uint64_t a1, uint64_t a2)
{
  void (*v8)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  long long v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v18;
  _OWORD v19[2];
  long long v20;
  long long v21;
  long long v22;
  long long v23;
  long long v24;
  long long v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  long long v29;
  long long v30;
  long long v31;
  long long v32;
  long long v33;
  long long v34;
  long long v35;
  long long v36;
  uint64_t v37;
  _OWORD v38[6];
  long long v39;
  long long v40;
  uint64_t v41;
  unsigned char v42[16];
  void v43[4];
  char *v44;

  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (char *)MEMORY[0x263F8EE78];
  }
  BOOL v4 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  unsigned int v18 = a2 + 112;
  uint64_t v5 = v2 - 1;
  unint64_t v44 = (char *)MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v7 = *(v4 - 1);
    uint64_t v6 = *v4;
    char v8 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(*v4 + 16);
    v8(&v29, v7, *v4);
    unint64_t v39 = v35;
    uint64_t v40 = v36;
    uint64_t v41 = v37;
    v38[2] = v31;
    v38[3] = v32;
    v38[4] = v33;
    v38[5] = v34;
    v38[0] = v29;
    v38[1] = v30;
    sub_2486BAFC4((uint64_t)v38);
    if (v39 == 1) {
      break;
    }
    uint64_t v13 = v44;
    if (!v5) {
      goto LABEL_15;
    }
LABEL_14:
    unint64_t v44 = v13;
    v4 += 2;
    --v5;
  }
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(v7, v6);
  size_t v11 = v10;
  uint64_t v27 = v9;
  unint64_t v28 = v10;
  sub_2486D68B8(v18, (uint64_t)v42);
  sub_2486D68B8((uint64_t)v42, (uint64_t)v43);
  if (v43[0] && v7 == v43[0])
  {
    sub_24872C600();
    uint64_t v9 = v27;
    size_t v11 = v28;
  }
  v8(v19, v7, v6);
  unsigned int v35 = v24;
  unint64_t v36 = v25;
  unint64_t v37 = v26;
  uint64_t v31 = v20;
  unsigned int v32 = v21;
  uint64_t v33 = v22;
  uint64_t v34 = v23;
  uint64_t v29 = v19[0];
  uint64_t v30 = v19[1];
  unint64_t v12 = v20;
  swift_bridgeObjectRetain();
  sub_2486BAFC4((uint64_t)&v29);
  uint64_t v13 = v44;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_24871A81C(0, *((void *)v13 + 2) + 1, 1, v13);
  }
  unsigned int v15 = *((void *)v13 + 2);
  uint64_t v14 = *((void *)v13 + 3);
  if (v15 >= v14 >> 1) {
    uint64_t v13 = sub_24871A81C((char *)(v14 > 1), v15 + 1, 1, v13);
  }
  *((void *)v13 + 2) = v15 + 1;
  uint64_t v16 = &v13[48 * v15];
  *((void *)v16 + 4) = v9;
  *((void *)v16 + 5) = v11;
  *((_OWORD *)v16 + 3) = v12;
  *((void *)v16 + 8) = 0;
  *((void *)v16 + 9) = 0xE000000000000000;
  if (v5) {
    goto LABEL_14;
  }
LABEL_15:
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_2486D4EE0(uint64_t a1, unsigned __int8 *a2)
{
  if (!*(void *)(a1 + 16)) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v122 = *(void *)(a1 + 16);
  unint64_t v5 = *a2;
  int64_t v6 = MEMORY[0x263F8EE78];
  unint64_t v162 = sub_2486CE458(MEMORY[0x263F8EE78]);
  uint64_t v123 = a1;
  uint64_t v7 = sub_2486C86C4(v5, a1);
  uint64_t v127 = v8;
  int64_t v9 = *(void *)(v7 + 16);
  unint64_t v129 = v7;
  if (!v9)
  {
    uint64_t v124 = 0;
    uint64_t v126 = (char *)v6;
    uint64_t v12 = v6;
LABEL_137:
    (*(void (**)(long long *__return_ptr))(*(void *)(v123 + 16 * v122 + 24) + 16))(&v150);
    sub_2486D0244((uint64_t)&v150);
    uint64_t v112 = swift_bridgeObjectRetain();
    unint64_t v5 = (unint64_t)sub_2486D4C60(v112, (uint64_t)&v150);
    sub_2486BAFC4((uint64_t)&v150);
    swift_bridgeObjectRelease();
    sub_2486BAFC4((uint64_t)&v150);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E168);
    uint64_t v113 = swift_allocObject();
    *(_OWORD *)(v113 + 16) = xmmword_24872D630;
    *(void *)(v113 + 32) = 0;
    *(void *)(v113 + 40) = 0;
    *(void *)(v113 + 48) = v12;
    *(void *)(v113 + 56) = 0;
    *(void *)(v113 + 64) = 0xE000000000000000;
    *(unsigned char *)(v113 + 72) = 0;
    swift_bridgeObjectRetain();
    uint64_t v114 = swift_bridgeObjectRetain();
    unint64_t v2 = sub_2486D163C(v114, (uint64_t *)&v162);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_24871BBFC(v2);
    int64_t v6 = *(void *)(v113 + 16);
    uint64_t v12 = v6 + 2;
    if (__OFADD__(v6, 2))
    {
LABEL_157:
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
      if (!isUniquelyReferenced_nonNull_native || (unint64_t v2 = v113, v12 > *(void *)(v113 + 24) >> 1))
      {
        if (v6 <= v12) {
          int64_t v116 = v6 + 2;
        }
        else {
          int64_t v116 = v6;
        }
        unint64_t v2 = (unint64_t)sub_24871A704(isUniquelyReferenced_nonNull_native, v116, 1, (char *)v113);
      }
      uint64_t v12 = *(void *)(v2 + 16);
      unint64_t v3 = *(void *)(v2 + 24);
      int64_t v6 = v12 + 1;
      swift_bridgeObjectRetain();
      if (v12 < v3 >> 1) {
        goto LABEL_145;
      }
    }
    unint64_t v2 = (unint64_t)sub_24871A704((char *)(v3 > 1), v6, 1, (char *)v2);
LABEL_145:
    *(void *)(v2 + 16) = v6;
    unint64_t v117 = v2 + 48 * v12;
    *(_OWORD *)(v117 + 32) = xmmword_24872DE40;
    *(void *)(v117 + 48) = v126;
    *(void *)(v117 + 56) = 0;
    *(void *)(v117 + 64) = 0xE000000000000000;
    *(unsigned char *)(v117 + 72) = 0;
    unint64_t v118 = *(void *)(v2 + 24);
    int64_t v119 = v12 + 2;
    swift_bridgeObjectRetain();
    if (v6 >= v118 >> 1) {
      unint64_t v2 = (unint64_t)sub_24871A704((char *)(v118 > 1), v119, 1, (char *)v2);
    }
    *(void *)(v2 + 16) = v119;
    unint64_t v120 = v2 + 48 * v6;
    *(_OWORD *)(v120 + 32) = xmmword_24872DE50;
    *(void *)(v120 + 48) = v5;
    *(void *)(v120 + 56) = 0;
    *(void *)(v120 + 64) = 0xE000000000000000;
    *(unsigned char *)(v120 + 72) = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2486D6810((uint64_t)v124);
    return v2;
  }
  unint64_t v10 = v7;
  unint64_t v11 = 0;
  uint64_t v124 = 0;
  uint64_t v132 = v7 + 32;
  uint64_t v12 = v6;
  uint64_t v125 = (char *)v6;
  uint64_t v126 = (char *)v6;
  int64_t v131 = *(void *)(v7 + 16);
  while (1)
  {
    if ((uint64_t)v11 >= v9)
    {
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
      goto LABEL_152;
    }
    if ((v11 & 0x8000000000000000) != 0) {
      goto LABEL_150;
    }
    if (v11 >= *(void *)(v10 + 16)) {
      goto LABEL_151;
    }
    uint64_t v134 = (char *)v12;
    unint64_t v142 = v11;
    uint64_t v13 = (long long *)(v132 + 192 * v11);
    long long v14 = *v13;
    long long v15 = v13[1];
    long long v16 = v13[3];
    long long v152 = v13[2];
    long long v153 = v16;
    long long v150 = v14;
    long long v151 = v15;
    long long v17 = v13[4];
    long long v18 = v13[5];
    long long v19 = v13[7];
    long long v156 = v13[6];
    long long v157 = v19;
    long long v154 = v17;
    long long v155 = v18;
    long long v20 = v13[8];
    long long v21 = v13[9];
    long long v22 = v13[11];
    long long v160 = v13[10];
    long long v161 = v22;
    long long v158 = v20;
    long long v159 = v21;
    unint64_t v135 = *((void *)&v151 + 1);
    uint64_t v23 = v151;
    uint64_t v24 = *((void *)&v152 + 1);
    uint64_t v130 = v152;
    int v137 = v153;
    uint64_t v12 = *((void *)&v153 + 1);
    uint64_t v133 = *((void *)&v154 + 1);
    unint64_t v2 = v154;
    uint64_t v140 = v157;
    uint64_t v145 = v155;
    unint64_t v146 = *((void *)&v157 + 1);
    uint64_t v25 = *(void *)(*((void *)&v152 + 1) + 16);
    if (v25)
    {
      uint64_t v128 = v151;
      sub_2486B76D8((uint64_t)&v150);
      swift_bridgeObjectRetain();
      long long v26 = (uint64_t *)(v24 + 40);
      int64_t v27 = v6;
      do
      {
        uint64_t v31 = *(v26 - 1);
        uint64_t v32 = *v26;
        uint64_t v33 = HIBYTE(*v26) & 0xF;
        if ((*v26 & 0x2000000000000000) == 0) {
          uint64_t v33 = v31 & 0xFFFFFFFFFFFFLL;
        }
        if (v33)
        {
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_2486B9D40(0, *(void *)(v27 + 16) + 1, 1);
          }
          unint64_t v29 = *(void *)(v27 + 16);
          unint64_t v28 = *(void *)(v27 + 24);
          if (v29 >= v28 >> 1) {
            sub_2486B9D40((char *)(v28 > 1), v29 + 1, 1);
          }
          *(void *)(v27 + 16) = v29 + 1;
          unint64_t v30 = v27 + 16 * v29;
          *(void *)(v30 + 32) = v31;
          *(void *)(v30 + 40) = v32;
        }
        v26 += 2;
        --v25;
      }
      while (v25);
      swift_bridgeObjectRelease();
      uint64_t v23 = v128;
      unint64_t v10 = v129;
    }
    else
    {
      sub_2486B76D8((uint64_t)&v150);
      int64_t v27 = v6;
    }
    if (v135) {
      uint64_t v34 = v23;
    }
    else {
      uint64_t v34 = 0;
    }
    if (v135) {
      unint64_t v35 = v135;
    }
    else {
      unint64_t v35 = 0xE000000000000000;
    }
    if ((v35 & 0x2000000000000000) != 0) {
      uint64_t v36 = HIBYTE(v35) & 0xF;
    }
    else {
      uint64_t v36 = v34 & 0xFFFFFFFFFFFFLL;
    }
    int64_t v9 = v131;
    if (*(void *)(v27 + 16))
    {
      swift_bridgeObjectRetain();
      if (v36)
      {
        sub_24872CAD0();
        swift_bridgeObjectRelease();
        uint64_t v147 = 0x3A7365756C617628;
        unint64_t v149 = 0xE900000000000020;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
        sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
        sub_24872C4F0();
        swift_release();
        sub_24872C600();
        swift_bridgeObjectRelease();
        sub_24872C600();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v147 = 0x3A7365756C617628;
        unint64_t v149 = 0xE900000000000020;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
        sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
        sub_24872C4F0();
        swift_release();
      }
      goto LABEL_35;
    }
    swift_bridgeObjectRetain();
    swift_release();
    if (v36)
    {
      uint64_t v147 = 0x746C756166656428;
      unint64_t v149 = 0xEA0000000000203ALL;
LABEL_35:
      sub_24872C600();
      swift_bridgeObjectRelease();
      sub_24872C600();
      unint64_t v37 = v149;
      uint64_t v38 = v147;
      goto LABEL_36;
    }
    swift_bridgeObjectRelease();
    uint64_t v38 = 0;
    unint64_t v37 = 0xE000000000000000;
LABEL_36:
    unint64_t v136 = v37;
    unint64_t v3 = v11;
    unint64_t v5 = v11 + 1;
    if (v137)
    {
      uint64_t v138 = v38;
      int64_t v6 = v131;
      if (v5 != v131)
      {
        int64_t v39 = *(void *)(v10 + 16);
        unint64_t v2 = *(void *)(v130 + 16);
        uint64_t v12 = v130 + 32;
        int64_t v6 = v11 + 1;
        while (v6 < v9)
        {
          if (v6 >= v39) {
            goto LABEL_153;
          }
          uint64_t v40 = *(void *)(v132 + 192 * v6 + 32);
          if (*(void *)(v40 + 16) != v2) {
            goto LABEL_81;
          }
          if (v2 && v40 != v130)
          {
            uint64_t v41 = 0;
            uint64_t v42 = v40 + 32;
            while (1)
            {
              char v43 = (void *)(v42 + 24 * v41);
              unint64_t v44 = (void *)v43[2];
              long long v45 = (char *)(v12 + 24 * v41);
              size_t v46 = (void *)*((void *)v45 + 2);
              BOOL v47 = *v43 == *(void *)v45 && v43[1] == *((void *)v45 + 1);
              if (!v47 && (sub_24872CEB0() & 1) == 0) {
                break;
              }
              unint64_t v3 = v44[2];
              if (v3 != v46[2]) {
                break;
              }
              if (v3) {
                BOOL v48 = v44 == v46;
              }
              else {
                BOOL v48 = 1;
              }
              if (!v48)
              {
                BOOL v49 = v44[4] == v46[4] && v44[5] == v46[5];
                if (!v49 && (sub_24872CEB0() & 1) == 0) {
                  break;
                }
                if (v3 != 1)
                {
                  BOOL v50 = v44[6] == v46[6] && v44[7] == v46[7];
                  if (!v50 && (sub_24872CEB0() & 1) == 0) {
                    break;
                  }
                  v3 -= 2;
                  if (v3)
                  {
                    uint64_t v51 = v46 + 9;
                    uint64_t v52 = v44 + 9;
                    do
                    {
                      BOOL v53 = *(v52 - 1) == *(v51 - 1) && *v52 == *v51;
                      if (!v53 && (sub_24872CEB0() & 1) == 0) {
                        goto LABEL_80;
                      }
                      v51 += 2;
                      v52 += 2;
                    }
                    while (--v3);
                  }
                }
              }
              if (++v41 == v2) {
                goto LABEL_76;
              }
            }
LABEL_80:
            unint64_t v10 = v129;
            int64_t v9 = v131;
            unint64_t v3 = v142;
            goto LABEL_81;
          }
LABEL_76:
          BOOL v54 = __OFADD__(v6++, 1);
          unint64_t v10 = v129;
          if (v54) {
            goto LABEL_154;
          }
          int64_t v9 = v131;
          unint64_t v3 = v142;
          if (v6 == v131)
          {
            int64_t v6 = v131;
            goto LABEL_81;
          }
        }
LABEL_152:
        __break(1u);
LABEL_153:
        __break(1u);
LABEL_154:
        __break(1u);
LABEL_155:
        __break(1u);
LABEL_156:
        __break(1u);
        goto LABEL_157;
      }
LABEL_81:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
      unint64_t v57 = (_OWORD *)swift_allocObject();
      long long v58 = v158;
      long long v59 = v160;
      long long v60 = v161;
      v57[11] = v159;
      v57[12] = v59;
      v57[13] = v60;
      long long v61 = v154;
      long long v62 = v156;
      long long v63 = v157;
      v57[7] = v155;
      v57[8] = v62;
      v57[9] = v63;
      v57[10] = v58;
      long long v64 = v150;
      long long v65 = v151;
      v57[1] = xmmword_24872D630;
      v57[2] = v64;
      long long v66 = v152;
      long long v67 = v153;
      v57[3] = v65;
      v57[4] = v66;
      v57[5] = v67;
      v57[6] = v61;
      if (v6 <= (uint64_t)v3) {
        goto LABEL_155;
      }
      if (v9 < v6) {
        goto LABEL_156;
      }
      unint64_t v148 = v57;
      sub_2486B76D8((uint64_t)&v150);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24871BCEC(v5, v6, v10, v127);
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26931E2F0);
      sub_2486D6820();
      uint64_t v55 = sub_24872C4F0();
      unint64_t v3 = v68;
      swift_bridgeObjectRelease();
      uint64_t v69 = *((void *)v148 + 2);
      if (v69)
      {
        uint64_t v70 = (unint64_t *)(v148 + 6);
        while (1)
        {
          uint64_t v12 = *(v70 - 1);
          unint64_t v2 = *v70;
          uint64_t v71 = HIBYTE(*v70) & 0xF;
          if ((*v70 & 0x2000000000000000) == 0) {
            uint64_t v71 = v12 & 0xFFFFFFFFFFFFLL;
          }
          if (v71) {
            break;
          }
          v70 += 24;
          if (!--v69) {
            goto LABEL_89;
          }
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_89:
        swift_bridgeObjectRelease();
        uint64_t v12 = 0;
        unint64_t v2 = 0xE000000000000000;
      }
      unint64_t v11 = v6;
      uint64_t v38 = v138;
    }
    else
    {
      uint64_t v55 = sub_2486D8564();
      unint64_t v3 = v56;
      swift_bridgeObjectRetain();
      ++v11;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B140108);
    uint64_t v72 = swift_allocObject();
    *(_OWORD *)(v72 + 16) = xmmword_24872DB70;
    *(void *)(v72 + 32) = v12;
    *(void *)(v72 + 40) = v2;
    *(void *)(v72 + 48) = v38;
    *(void *)(v72 + 56) = v136;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E2E0);
    sub_2486D6778();
    uint64_t v73 = sub_24872C4F0();
    unint64_t v2 = v74;
    swift_bridgeObjectRelease();
    uint64_t v75 = HIBYTE(v146) & 0xF;
    if ((v146 & 0x2000000000000000) == 0) {
      uint64_t v75 = v140 & 0xFFFFFFFFFFFFLL;
    }
    unint64_t v76 = v150;
    if (!v75)
    {
      if ((void)v150)
      {
        swift_bridgeObjectRetain();
        uint64_t v12 = (uint64_t)v134;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v126 = sub_24871A81C(0, *((void *)v126 + 2) + 1, 1, v126);
        }
        unint64_t v98 = *((void *)v126 + 2);
        unint64_t v97 = *((void *)v126 + 3);
        unint64_t v5 = v98 + 1;
        if (v98 >= v97 >> 1) {
          uint64_t v126 = sub_24871A81C((char *)(v97 > 1), v98 + 1, 1, v126);
        }
        *((void *)v126 + 2) = v5;
        long long v99 = &v126[48 * v98];
        *((void *)v99 + 4) = v55;
        *((void *)v99 + 5) = v3;
        *((void *)v99 + 6) = v73;
        *((void *)v99 + 7) = v2;
        *((void *)v99 + 8) = v133;
        *((void *)v99 + 9) = v145;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v12 = (uint64_t)v134;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v12 = (uint64_t)sub_24871A81C(0, *((void *)v134 + 2) + 1, 1, v134);
        }
        unint64_t v78 = *(void *)(v12 + 16);
        unint64_t v77 = *(void *)(v12 + 24);
        unint64_t v5 = v78 + 1;
        if (v78 >= v77 >> 1) {
          uint64_t v12 = (uint64_t)sub_24871A81C((char *)(v77 > 1), v78 + 1, 1, (char *)v12);
        }
        *(void *)(v12 + 16) = v5;
        BOOL v79 = (char *)(v12 + 48 * v78);
        *((void *)v79 + 4) = v55;
        *((void *)v79 + 5) = v3;
        *((void *)v79 + 6) = v73;
        *((void *)v79 + 7) = v2;
        *((void *)v79 + 8) = v133;
        *((void *)v79 + 9) = v145;
        swift_bridgeObjectRelease();
      }
      sub_2486C539C((uint64_t)&v150);
      goto LABEL_102;
    }
    unint64_t v139 = v3;
    unint64_t v80 = (void *)v162;
    uint64_t v81 = *(void *)(v162 + 16);
    uint64_t v82 = v146;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_2486B77C8(v76);
    if (!v81
      || (swift_bridgeObjectRetain(), sub_24871067C(v140, v146), char v84 = v83, swift_bridgeObjectRelease(), (v84 & 1) == 0))
    {
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v125 = sub_248719EA4(0, *((void *)v125 + 2) + 1, 1, v125);
      }
      unint64_t v86 = *((void *)v125 + 2);
      unint64_t v85 = *((void *)v125 + 3);
      uint64_t v82 = v146;
      if (v86 >= v85 >> 1)
      {
        uint64_t v125 = sub_248719EA4((char *)(v85 > 1), v86 + 1, 1, v125);
        uint64_t v82 = v146;
      }
      *((void *)v125 + 2) = v86 + 1;
      uint64_t v87 = &v125[16 * v86];
      *((void *)v87 + 4) = v140;
      *((void *)v87 + 5) = v82;
      unint64_t v80 = (void *)v162;
    }
    sub_2486D6810((uint64_t)v124);
    char v88 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v89 = sub_24871067C(v140, v82);
    uint64_t v90 = v80[2];
    char v143 = v91;
    BOOL v92 = (v91 & 1) == 0;
    uint64_t v93 = v90 + v92;
    if (__OFADD__(v90, v92)) {
      break;
    }
    if (v80[3] >= v93)
    {
      if ((v88 & 1) == 0) {
        sub_248710904();
      }
      uint64_t v94 = v140;
    }
    else
    {
      sub_2487111EC(v93, v88);
      uint64_t v94 = v140;
      unint64_t v95 = sub_24871067C(v140, v146);
      if ((v143 & 1) != (v96 & 1)) {
        goto LABEL_161;
      }
      unint64_t v89 = v95;
    }
    unint64_t v162 = (unint64_t)v80;
    swift_bridgeObjectRelease();
    unint64_t v141 = v89;
    if ((v143 & 1) == 0)
    {
      v80[(v89 >> 6) + 8] |= 1 << v89;
      uint64_t v100 = (uint64_t *)(v80[6] + 16 * v89);
      *uint64_t v100 = v94;
      v100[1] = v146;
      *(void *)(v80[7] + 8 * v89) = MEMORY[0x263F8EE78];
      uint64_t v101 = v80[2];
      uint64_t v102 = v101 + 1;
      BOOL v103 = __OFADD__(v101, 1);
      BOOL v144 = v103;
      swift_bridgeObjectRetain();
      if (v144) {
        goto LABEL_160;
      }
      void v80[2] = v102;
    }
    swift_bridgeObjectRetain();
    uint64_t v104 = v80[7];
    swift_bridgeObjectRelease();
    uint64_t v105 = 8 * v89;
    uint64_t v106 = *(char **)(v104 + v105);
    char v107 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v104 + v105) = v106;
    if ((v107 & 1) == 0)
    {
      uint64_t v106 = sub_24871A81C(0, *((void *)v106 + 2) + 1, 1, v106);
      *(void *)(v104 + 8 * v141) = v106;
    }
    unint64_t v3 = *((void *)v106 + 2);
    unint64_t v108 = *((void *)v106 + 3);
    unint64_t v109 = v3 + 1;
    if (v3 >= v108 >> 1)
    {
      unint64_t v111 = sub_24871A81C((char *)(v108 > 1), v3 + 1, 1, v106);
      unint64_t v109 = v3 + 1;
      uint64_t v106 = v111;
      *(void *)(v104 + 8 * v141) = v111;
    }
    *((void *)v106 + 2) = v109;
    uint64_t v110 = &v106[48 * v3];
    *((void *)v110 + 4) = v55;
    *((void *)v110 + 5) = v139;
    *((void *)v110 + 6) = v73;
    *((void *)v110 + 7) = v2;
    uint64_t v12 = (uint64_t)v134;
    *((void *)v110 + 8) = v133;
    *((void *)v110 + 9) = v145;
    sub_2486C548C(v76);
    unint64_t v5 = v146;
    swift_bridgeObjectRelease();
    sub_2486C539C((uint64_t)&v150);
    swift_bridgeObjectRelease();
    uint64_t v124 = sub_2486D2D24;
LABEL_102:
    int64_t v6 = MEMORY[0x263F8EE78];
    if (v11 == v9) {
      goto LABEL_137;
    }
  }
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  uint64_t result = sub_24872CFA0();
  __break(1u);
  return result;
}

uint64_t sub_2486D5DE8@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X8>)
{
  void (*v54)(uint64_t *__return_ptr, uint64_t, uint64_t);
  unsigned __int8 v55[64];
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  void v60[18];
  void v61[17];
  void v62[17];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;

  int64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    sub_24872CC40();
    __break(1u);
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  char v5 = *a2;
  uint64_t v6 = a1 + 16 * v3;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v53 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(v53 + 8);
  unsigned __int8 v51 = v5;
  LOBYTE(v62[0]) = v5;
  uint64_t v9 = sub_2486B583C(v7, v8, (unsigned __int8 *)v62, 0, 0, 0);
  uint64_t v49 = v10;
  uint64_t v50 = v9;
  long long v64 = a1;
  long long v63 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  sub_2486B9D40(0, v3, 0);
  uint64_t v11 = v63;
  uint64_t v12 = a1 + 40;
  do
  {
    uint64_t v13 = (*(uint64_t (**)(void))(*(void *)v12 + 24))();
    uint64_t v15 = v14;
    long long v63 = v11;
    unint64_t v17 = *(void *)(v11 + 16);
    unint64_t v16 = *(void *)(v11 + 24);
    if (v17 >= v16 >> 1)
    {
      sub_2486B9D40((char *)(v16 > 1), v17 + 1, 1);
      uint64_t v11 = v63;
    }
    *(void *)(v11 + 16) = v17 + 1;
    uint64_t v18 = v11 + 16 * v17;
    *(void *)(v18 + 32) = v13;
    *(void *)(v18 + 40) = v15;
    v12 += 16;
    --v3;
  }
  while (v3);
  v62[0] = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
  sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
  uint64_t v19 = sub_24872C4F0();
  uint64_t v21 = v20;
  swift_release();
  (*(void (**)(void *__return_ptr))(*(void *)(a1 + 40) + 16))(v62);
  uint64_t v22 = v62[2];
  uint64_t v23 = v62[3];
  swift_bridgeObjectRetain();
  sub_2486BAFC4((uint64_t)v62);
  if (v23)
  {
    v61[0] = v22;
    v61[1] = v23;
    sub_24872C600();
    sub_24872C600();
    swift_bridgeObjectRelease();
    uint64_t v19 = v22;
    uint64_t v21 = v23;
  }
  uint64_t v24 = v53;
  BOOL v54 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v53 + 16);
  v54(v61, v7, v53);
  uint64_t v25 = v61[6];
  unint64_t v26 = v61[7];
  swift_bridgeObjectRetain();
  sub_2486BAFC4((uint64_t)v61);
  if (!v26)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400D0);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_24872D630;
    *(void *)(v27 + 32) = v50;
    *(void *)(v27 + 40) = v49;
    sub_2486CDF94(MEMORY[0x263F8EE78]);
    swift_bridgeObjectRelease();
    uint64_t v28 = sub_2486E1AD4(v27);
    uint64_t v29 = swift_bridgeObjectRetain();
    uint64_t v30 = sub_2486CE574(v29);
    swift_release();
    if (*(void *)(v30 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400A8);
      uint64_t v31 = sub_24872CCB0();
    }
    else
    {
      uint64_t v31 = MEMORY[0x263F8EE80];
    }
    *(void *)uint64_t v55 = v31;
    sub_2486D0560(v30, 1, v55);
    swift_bridgeObjectRelease();
    uint64_t v32 = *(void *)v55;
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v33 = sub_2486D7D74(v19, v21, v28, v32);
    unint64_t v35 = v34;
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    unint64_t v56 = v33;
    unint64_t v57 = v35;
    swift_bridgeObjectRetain();
    uint64_t v24 = v53;
    v54(v60, v7, v53);
    uint64_t v36 = v60[13];
    swift_bridgeObjectRetain();
    sub_2486BAFC4((uint64_t)v60);
    uint64_t v37 = *(void *)(v36 + 16);
    swift_bridgeObjectRelease();
    if (!v37)
    {
      swift_bridgeObjectRelease();
LABEL_22:
      uint64_t v25 = v56;
      unint64_t v26 = v57;
      goto LABEL_23;
    }
    uint64_t v38 = sub_2486D262C(v33, v35);
    uint64_t v40 = v39;
    swift_bridgeObjectRelease();
    if (v40)
    {
      if (v38 == 32 && v40 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_21:
        sub_24872C600();
        goto LABEL_22;
      }
      char v41 = sub_24872CEB0();
      swift_bridgeObjectRelease();
      if (v41) {
        goto LABEL_21;
      }
    }
    sub_24872C600();
    goto LABEL_21;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_23:
  v54(&v56, v7, v24);
  uint64_t v43 = v58;
  unint64_t v42 = v59;
  swift_bridgeObjectRetain();
  sub_2486BAFC4((uint64_t)&v56);
  long long v65 = v43;
  long long v66 = v42;
  swift_bridgeObjectRetain();
  v54(v60, v7, v24);
  uint64_t v45 = v60[8];
  unint64_t v44 = v60[9];
  swift_bridgeObjectRetain();
  sub_2486BAFC4((uint64_t)v60);
  swift_bridgeObjectRelease();
  if ((v44 & 0x2000000000000000) != 0) {
    uint64_t v46 = HIBYTE(v44) & 0xF;
  }
  else {
    uint64_t v46 = v45 & 0xFFFFFFFFFFFFLL;
  }
  swift_bridgeObjectRelease();
  if (v46)
  {
    uint64_t v47 = HIBYTE(v42) & 0xF;
    if ((v42 & 0x2000000000000000) == 0) {
      uint64_t v47 = v43 & 0xFFFFFFFFFFFFLL;
    }
    if (v47) {
      sub_24872C600();
    }
    v54((uint64_t *)v55, v7, v24);
    swift_bridgeObjectRetain();
    sub_2486BAFC4((uint64_t)v55);
    sub_24872C600();
    swift_bridgeObjectRelease();
    sub_24872C600();
    swift_bridgeObjectRelease();
    uint64_t v43 = v65;
    unint64_t v42 = v66;
  }
  v55[0] = v51;
  uint64_t result = sub_2486D4EE0(a1, v55);
  *a3 = v64;
  a3[1] = v43;
  a3[2] = v42;
  a3[3] = v25;
  a3[4] = v26;
  a3[5] = result;
  a3[6] = MEMORY[0x263F8EE78];
  return result;
}

uint64_t sub_2486D6424(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  int64_t v4 = *(void *)(a4 + 16);
  if (!v4) {
    return 0;
  }
  uint64_t v17 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  sub_2486B9D40(0, v4, 0);
  uint64_t v7 = a4 + 72;
  do
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_2486D26AC(a1);
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v12 = *(void *)(v17 + 16);
    unint64_t v11 = *(void *)(v17 + 24);
    if (v12 >= v11 >> 1) {
      sub_2486B9D40((char *)(v11 > 1), v12 + 1, 1);
    }
    v7 += 48;
    *(void *)(v17 + 16) = v12 + 1;
    uint64_t v13 = v17 + 16 * v12;
    *(void *)(v13 + 32) = v8;
    *(void *)(v13 + 40) = v10;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
  sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
  sub_24872C4F0();
  swift_release();
  sub_24872C480();
  sub_2486D66CC(a2, a3);
  swift_bridgeObjectRelease();
  sub_24872C600();
  swift_bridgeObjectRelease();
  sub_24872C600();
  swift_bridgeObjectRetain();
  sub_24872C600();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_2486D66CC(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2486D66E0(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2486D66F4(uint64_t a1)
{
  return a1;
}

uint64_t sub_2486D6720(void *a1)
{
  unint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_24872CEB0() & 1;
  }
}

unint64_t sub_2486D6778()
{
  unint64_t result = qword_26931E2E8;
  if (!qword_26931E2E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26931E2E0);
    sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E2E8);
  }
  return result;
}

uint64_t sub_2486D6810(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

unint64_t sub_2486D6820()
{
  unint64_t result = qword_26931E2F8;
  if (!qword_26931E2F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26931E2F0);
    sub_2486C54FC(&qword_26931E300, &qword_26931E308);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E2F8);
  }
  return result;
}

uint64_t sub_2486D68B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26931E310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t destroy for HelpGenerator.Section.Element()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for HelpGenerator.Section.Element(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for HelpGenerator.Section.Element(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for HelpGenerator.Section.Element(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HelpGenerator.Section.Element(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HelpGenerator.Section.Element(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HelpGenerator.Section.Element()
{
  return &type metadata for HelpGenerator.Section.Element;
}

uint64_t destroy for HelpGenerator()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for HelpGenerator(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for HelpGenerator(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for HelpGenerator(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HelpGenerator(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HelpGenerator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HelpGenerator()
{
  return &type metadata for HelpGenerator;
}

uint64_t destroy for HelpGenerator.Section(uint64_t a1)
{
  if (*(void *)(a1 + 8) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for HelpGenerator.Section(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 >= 3)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HelpGenerator.Section(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) >= 3uLL)
  {
    if (v4 >= 3)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_2486D6FB4(a1);
    goto LABEL_6;
  }
  if (v4 < 3)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
LABEL_8:
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t sub_2486D6FB4(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for HelpGenerator.Section(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) >= 3uLL)
  {
    unint64_t v4 = *(void *)(a2 + 8);
    if (v4 >= 3)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_2486D6FB4(a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_6:
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for HelpGenerator.Section(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HelpGenerator.Section(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HelpGenerator.Section()
{
  return &type metadata for HelpGenerator.Section;
}

unint64_t sub_2486D714C()
{
  unint64_t result = qword_26931E318;
  if (!qword_26931E318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E318);
  }
  return result;
}

uint64_t destroy for HelpGenerator.DiscussionSection()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for HelpGenerator.DiscussionSection(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for HelpGenerator.DiscussionSection(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for HelpGenerator.DiscussionSection(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HelpGenerator.DiscussionSection(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HelpGenerator.DiscussionSection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HelpGenerator.DiscussionSection()
{
  return &type metadata for HelpGenerator.DiscussionSection;
}

unint64_t destroy for HelpGenerator.Section.Header(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s22ArgumentParserInternal13HelpGeneratorV7SectionV6HeaderOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for HelpGenerator.Section.Header(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for HelpGenerator.Section.Header(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HelpGenerator.Section.Header(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for HelpGenerator.Section.Header(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_2486D7594(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_2486D75AC(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for HelpGenerator.Section.Header()
{
  return &type metadata for HelpGenerator.Section.Header;
}

uint64_t sub_2486D75E0()
{
  return nullsub_1();
}

uint64_t sub_2486D75F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_8:
    sub_2486CB64C(&v30);
    uint64_t v27 = &v30;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  long long v11 = *(_OWORD *)(a1 + 176);
  long long v38 = *(_OWORD *)(a1 + 160);
  long long v39 = v11;
  long long v12 = *(_OWORD *)(a1 + 208);
  long long v40 = *(_OWORD *)(a1 + 192);
  long long v41 = v12;
  long long v13 = *(_OWORD *)(a1 + 112);
  long long v34 = *(_OWORD *)(a1 + 96);
  long long v35 = v13;
  long long v14 = *(_OWORD *)(a1 + 144);
  long long v36 = *(_OWORD *)(a1 + 128);
  long long v37 = v14;
  long long v15 = *(_OWORD *)(a1 + 48);
  long long v30 = *(_OWORD *)(a1 + 32);
  long long v31 = v15;
  long long v16 = *(_OWORD *)(a1 + 80);
  long long v32 = *(_OWORD *)(a1 + 64);
  long long v33 = v16;
  if ((sub_2486D8998(a2, a3, a4, v32) & 1) == 0)
  {
    uint64_t v17 = 224;
    while (--v8)
    {
      uint64_t v18 = v17 + 192;
      uint64_t v19 = (long long *)(a1 + v17);
      long long v20 = v19[9];
      long long v38 = v19[8];
      long long v39 = v20;
      long long v21 = v19[11];
      long long v40 = v19[10];
      long long v41 = v21;
      long long v22 = v19[5];
      long long v34 = v19[4];
      long long v35 = v22;
      long long v23 = v19[7];
      long long v36 = v19[6];
      long long v37 = v23;
      long long v24 = v19[1];
      long long v30 = *v19;
      long long v31 = v24;
      long long v25 = v19[3];
      long long v32 = v19[2];
      long long v33 = v25;
      char v26 = sub_2486D8998(a2, a3, a4, v32);
      uint64_t v17 = v18;
      if (v26) {
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_6:
  sub_2486B76D8((uint64_t)&v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v29[8] = v38;
  v29[9] = v39;
  v29[10] = v40;
  v29[11] = v41;
  v29[4] = v34;
  v29[5] = v35;
  v29[6] = v36;
  v29[7] = v37;
  v29[0] = v30;
  v29[1] = v31;
  v29[2] = v32;
  v29[3] = v33;
  nullsub_1(v29);
  uint64_t v27 = v29;
LABEL_9:
  sub_2486CB464((uint64_t)v27, a5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2486D77A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, int a4@<W4>, uint64_t a5@<X8>)
{
  uint64_t v8 = a5;
  uint64_t v49 = *(void *)(a1 + 16);
  if (v49)
  {
    uint64_t v10 = a1 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    long long v12 = *(_OWORD *)(a1 + 176);
    long long v45 = *(_OWORD *)(a1 + 160);
    long long v46 = v12;
    long long v13 = *(_OWORD *)(a1 + 208);
    long long v47 = *(_OWORD *)(a1 + 192);
    long long v48 = v13;
    long long v14 = *(_OWORD *)(a1 + 112);
    long long v41 = *(_OWORD *)(a1 + 96);
    long long v42 = v14;
    long long v15 = *(_OWORD *)(a1 + 144);
    long long v43 = *(_OWORD *)(a1 + 128);
    long long v44 = v15;
    long long v16 = *(_OWORD *)(a1 + 48);
    long long v37 = *(_OWORD *)(a1 + 32);
    long long v38 = v16;
    long long v17 = *(_OWORD *)(a1 + 80);
    long long v39 = *(_OWORD *)(a1 + 64);
    long long v40 = v17;
    uint64_t v35 = v10;
    while (1)
    {
      uint64_t v18 = MEMORY[0x263F8EE78];
      if ((unint64_t)v37 >= 2)
      {
        sub_2486B77C8(v37);
        uint64_t v18 = v37;
      }
      uint64_t v19 = *(void *)(v18 + 16);
      if (v19) {
        break;
      }
      swift_bridgeObjectRelease();
LABEL_29:
      if (++v11 == v49)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2486B7668(a2, a3, a4);
        uint64_t v8 = a5;
        goto LABEL_33;
      }
      char v26 = (long long *)(v10 + 192 * v11);
      long long v27 = v26[9];
      long long v45 = v26[8];
      long long v46 = v27;
      long long v28 = v26[11];
      long long v47 = v26[10];
      long long v48 = v28;
      long long v29 = v26[5];
      long long v41 = v26[4];
      long long v42 = v29;
      long long v30 = v26[7];
      long long v43 = v26[6];
      long long v44 = v30;
      long long v31 = v26[1];
      long long v37 = *v26;
      long long v38 = v31;
      long long v32 = v26[3];
      long long v39 = v26[2];
      long long v40 = v32;
    }
    long long v20 = (unsigned __int8 *)(v18 + 48);
    while (1)
    {
      uint64_t v21 = *((void *)v20 - 2);
      uint64_t v22 = *((void *)v20 - 1);
      unsigned int v23 = *v20;
      if (v23 >> 6)
      {
        if (v23 >> 6 == 1)
        {
          if ((a4 & 0xC0) == 0x40)
          {
            BOOL v24 = v21 == a2 && v22 == a3;
            if (v24 || (sub_24872CEB0()) && ((a4 ^ v23) & 1) == 0) {
              goto LABEL_31;
            }
          }
          goto LABEL_8;
        }
        if ((a4 & 0xC0) != 0x80) {
          goto LABEL_8;
        }
      }
      else if (a4 >= 0x40u)
      {
        goto LABEL_8;
      }
      BOOL v25 = v21 == a2 && v22 == a3;
      if (v25 || (sub_24872CEB0() & 1) != 0)
      {
LABEL_31:
        sub_2486B76D8((uint64_t)&v37);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2486B7668(a2, a3, a4);
        v36[8] = v45;
        v36[9] = v46;
        v36[10] = v47;
        v36[11] = v48;
        v36[4] = v41;
        v36[5] = v42;
        v36[6] = v43;
        v36[7] = v44;
        v36[0] = v37;
        v36[1] = v38;
        v36[2] = v39;
        v36[3] = v40;
        nullsub_1(v36);
        return sub_2486CB464((uint64_t)v36, a5);
      }
LABEL_8:
      v20 += 24;
      if (!--v19)
      {
        swift_bridgeObjectRelease();
        uint64_t v10 = v35;
        goto LABEL_29;
      }
    }
  }
  sub_2486B7668(a2, a3, a4);
LABEL_33:
  sub_2486CB64C(&v37);
  return sub_2486CB464((uint64_t)&v37, v8);
}

uint64_t sub_2486D7A68()
{
  long long v1 = v0[9];
  long long v24 = v0[8];
  v25[0] = v1;
  long long v2 = v0[11];
  v25[1] = v0[10];
  uint64_t v25[2] = v2;
  long long v3 = v0[5];
  *(_OWORD *)&v23[64] = v0[4];
  *(_OWORD *)&v23[80] = v3;
  long long v4 = v0[7];
  *(_OWORD *)&v23[96] = v0[6];
  *(_OWORD *)&v23[112] = v4;
  long long v5 = v0[1];
  *(_OWORD *)unsigned int v23 = *v0;
  *(_OWORD *)&v23[16] = v5;
  long long v6 = v0[3];
  *(_OWORD *)&v23[32] = v0[2];
  *(_OWORD *)&v23[48] = v6;
  if (!*(void *)v23)
  {
    v26[0] = 60;
    v26[1] = 0xE100000000000000;
    long long v32 = *(_OWORD *)&v23[72];
    long long v33 = *(_OWORD *)&v23[88];
    long long v34 = *(_OWORD *)&v23[104];
    uint64_t v35 = *(void *)&v23[120];
    long long v28 = *(_OWORD *)&v23[8];
    long long v29 = *(_OWORD *)&v23[24];
    long long v30 = *(_OWORD *)&v23[40];
    long long v31 = *(_OWORD *)&v23[56];
    long long v36 = *(_OWORD *)&v23[88];
    uint64_t v8 = *(void *)&v23[88] & 0xFFFFFFFFFFFFLL;
    if ((*(void *)&v23[96] & 0x2000000000000000) != 0) {
      uint64_t v8 = HIBYTE(*(void *)&v23[96]) & 0xFLL;
    }
    if (v8)
    {
      long long v27 = v33;
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_2486B76D8((uint64_t)v23);
      sub_2486CB40C((uint64_t)&v36);
      sub_24870BD14((uint64_t *)v23, (unint64_t *)&v27);
      sub_2486CB438((uint64_t)&v36);
      sub_2486C539C((uint64_t)v23);
    }
    sub_24872C600();
    swift_bridgeObjectRelease();
    sub_24872C600();
    return v26[0];
  }
  if (*(void *)v23 == 1) {
    return 0;
  }
  uint64_t v9 = sub_24870ACB4(*(uint64_t *)v23);
  if (v11 <= 0xFDu)
  {
    uint64_t v12 = v9;
    uint64_t v13 = v10;
    unsigned __int8 v14 = v11;
    sub_2486CB3B0((uint64_t)v25 + 8, (uint64_t)v26);
    sub_2486CB3B0((uint64_t)v26, (uint64_t)&v36);
    if (v37 == 1)
    {
      uint64_t v15 = sub_248714E64(v12, v13, v14);
      uint64_t v17 = v16;
      sub_2486C5540(v12, v13, v14);
      uint64_t v21 = v15;
      uint64_t v22 = v17;
      sub_24872C600();
      long long v32 = *(_OWORD *)&v23[72];
      long long v33 = *(_OWORD *)&v23[88];
      long long v34 = *(_OWORD *)&v23[104];
      uint64_t v35 = *(void *)&v23[120];
      long long v28 = *(_OWORD *)&v23[8];
      long long v29 = *(_OWORD *)&v23[24];
      long long v30 = *(_OWORD *)&v23[40];
      long long v31 = *(_OWORD *)&v23[56];
      long long v27 = *(_OWORD *)&v23[88];
      uint64_t v18 = *(void *)&v23[88] & 0xFFFFFFFFFFFFLL;
      if ((*(void *)&v23[96] & 0x2000000000000000) != 0) {
        uint64_t v18 = HIBYTE(*(void *)&v23[96]) & 0xFLL;
      }
      if (v18)
      {
        long long v20 = v33;
        swift_bridgeObjectRetain();
      }
      else
      {
        sub_2486B76D8((uint64_t)v23);
        sub_2486CB40C((uint64_t)&v27);
        sub_24870BD14((uint64_t *)v23, (unint64_t *)&v20);
        sub_2486CB438((uint64_t)&v27);
        sub_2486C539C((uint64_t)v23);
      }
      sub_24872C600();
      swift_bridgeObjectRelease();
      sub_24872C600();
      return v21;
    }
    else
    {
      uint64_t v7 = sub_248714E64(v12, v13, v14);
      sub_2486C5540(v12, v13, v14);
    }
    return v7;
  }
  uint64_t result = sub_24872CC40();
  __break(1u);
  return result;
}

uint64_t sub_2486D7D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_2486B981C(a3, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v8 = *(void *)(v7 + 16);
  if (!v8)
  {
    swift_release();
    swift_bridgeObjectRetain();
    return a1;
  }
  uint64_t v68 = v7;
  if (v8 < 0xD)
  {
    uint64_t v66 = a1;
    uint64_t v75 = MEMORY[0x263F8EE78];
    sub_2486B9D40(0, v8, 0);
    uint64_t v34 = v7;
    for (uint64_t i = 0; ; i += 192)
    {
      uint64_t v36 = *(void *)(v34 + i + 32);
      uint64_t v37 = *(void *)(v34 + i + 56);
      char v38 = *(unsigned char *)(v34 + i + 80);
      *(_DWORD *)&v78[1] = *(_DWORD *)(v34 + i + 81);
      *(_DWORD *)&v78[4] = *(_DWORD *)(v34 + i + 84);
      long long v39 = *(_OWORD *)(v34 + i + 88);
      long long v40 = *(_OWORD *)(v34 + i + 104);
      uint64_t v41 = *(void *)(v34 + i + 120);
      uint64_t v42 = *(void *)(v34 + i + 128);
      char v43 = *(unsigned char *)(v34 + i + 136);
      *(_DWORD *)((char *)&v79 + 9) = *(_DWORD *)(v34 + i + 137);
      HIDWORD(v79) = *(_DWORD *)(v34 + i + 140);
      uint64_t v44 = *(void *)(v34 + i + 144);
      uint64_t v45 = *(void *)(v34 + i + 152);
      long long v81 = *(_OWORD *)(v34 + i + 160);
      v82[0] = *(unsigned char *)(v34 + i + 176);
      int v46 = *(unsigned __int8 *)(v34 + i + 177);
      *(_OWORD *)&v82[2] = *(_OWORD *)(v34 + i + 178);
      *(_OWORD *)&v82[18] = *(_OWORD *)(v34 + i + 194);
      *(_OWORD *)&v82[32] = *(_OWORD *)(v34 + i + 208);
      *(void *)unint64_t v76 = v36;
      *(_OWORD *)&v76[8] = *(_OWORD *)(v34 + i + 40);
      char v69 = v76[8];
      *(void *)&v76[24] = v37;
      long long v77 = *(_OWORD *)(v34 + i + 64);
      v78[0] = v38;
      *(_OWORD *)&v78[8] = v39;
      *(_OWORD *)&v78[24] = v40;
      *(void *)&v78[40] = v41;
      *(void *)&long long v79 = v42;
      BYTE8(v79) = v43;
      *(void *)&long long v80 = v44;
      *((void *)&v80 + 1) = v45;
      v82[1] = v46;
      uint64_t v47 = sub_2486D7A68();
      *(void *)unint64_t v76 = v47;
      *(void *)&v76[8] = v48;
      if ((v69 & 2) == 0) {
        break;
      }
      sub_24872C600();
      unint64_t v50 = *(void *)&v76[8];
      uint64_t v49 = *(void *)v76;
      if (v69) {
        goto LABEL_19;
      }
LABEL_20:
      if (v46 == 5)
      {
        sub_24872C600();
        swift_bridgeObjectRelease();
        uint64_t v49 = 2108717;
        unint64_t v50 = 0xE300000000000000;
      }
      uint64_t v34 = v7;
      unint64_t v52 = *(void *)(v75 + 16);
      unint64_t v51 = *(void *)(v75 + 24);
      if (v52 >= v51 >> 1)
      {
        sub_2486B9D40((char *)(v51 > 1), v52 + 1, 1);
        uint64_t v34 = v7;
      }
      *(void *)(v75 + 16) = v52 + 1;
      uint64_t v53 = v75 + 16 * v52;
      *(void *)(v53 + 32) = v49;
      *(void *)(v53 + 40) = v50;
      if (!--v8)
      {
        swift_release();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
        sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
        sub_24872C4F0();
        swift_release();
        swift_bridgeObjectRetain();
        sub_24872C600();
        sub_24872C600();
        swift_bridgeObjectRelease();
        return v66;
      }
    }
    uint64_t v49 = v47;
    unint64_t v50 = v48;
    if ((v69 & 1) == 0) {
      goto LABEL_20;
    }
LABEL_19:
    *(void *)&long long v71 = 91;
    *((void *)&v71 + 1) = 0xE100000000000000;
    sub_24872C600();
    swift_bridgeObjectRelease();
    sub_24872C600();
    uint64_t v49 = 91;
    unint64_t v50 = 0xE100000000000000;
    *(_OWORD *)unint64_t v76 = v71;
    goto LABEL_20;
  }
  unint64_t v9 = v8 - 1;
  uint64_t v10 = MEMORY[0x263F8EE78];
  uint64_t v11 = 32;
  uint64_t v12 = MEMORY[0x263F8EE78];
  while (1)
  {
    long long v13 = *(_OWORD *)(v7 + v11);
    long long v14 = *(_OWORD *)(v7 + v11 + 16);
    long long v15 = *(_OWORD *)(v7 + v11 + 48);
    long long v77 = *(_OWORD *)(v7 + v11 + 32);
    *(_OWORD *)unint64_t v78 = v15;
    *(_OWORD *)unint64_t v76 = v13;
    *(_OWORD *)&v76[16] = v14;
    long long v16 = *(_OWORD *)(v7 + v11 + 64);
    long long v17 = *(_OWORD *)(v7 + v11 + 80);
    long long v18 = *(_OWORD *)(v7 + v11 + 112);
    long long v79 = *(_OWORD *)(v7 + v11 + 96);
    long long v80 = v18;
    *(_OWORD *)&v78[16] = v16;
    *(_OWORD *)&v78[32] = v17;
    long long v19 = *(_OWORD *)(v7 + v11 + 128);
    long long v20 = *(_OWORD *)(v7 + v11 + 144);
    long long v21 = *(_OWORD *)(v7 + v11 + 176);
    *(_OWORD *)&v82[16] = *(_OWORD *)(v7 + v11 + 160);
    *(_OWORD *)&v82[32] = v21;
    long long v81 = v19;
    *(_OWORD *)uint64_t v82 = v20;
    if (!*(void *)v76 || (v76[8] & 1) == 0)
    {
      sub_2486B76D8((uint64_t)v76);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2486B9CA0(0, *(void *)(v12 + 16) + 1, 1);
        uint64_t v7 = v68;
      }
      unint64_t v23 = *(void *)(v12 + 16);
      unint64_t v22 = *(void *)(v12 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_2486B9CA0((char *)(v22 > 1), v23 + 1, 1);
        uint64_t v7 = v68;
      }
      *(void *)(v12 + 16) = v23 + 1;
      long long v24 = (_OWORD *)(v12 + 192 * v23);
      long long v25 = *(_OWORD *)v76;
      long long v26 = *(_OWORD *)&v76[16];
      long long v27 = *(_OWORD *)v78;
      v24[4] = v77;
      v24[5] = v27;
      void v24[2] = v25;
      _OWORD v24[3] = v26;
      long long v28 = *(_OWORD *)&v78[16];
      long long v29 = *(_OWORD *)&v78[32];
      long long v30 = v80;
      v24[8] = v79;
      v24[9] = v30;
      v24[6] = v28;
      v24[7] = v29;
      long long v31 = v81;
      long long v32 = *(_OWORD *)v82;
      long long v33 = *(_OWORD *)&v82[32];
      v24[12] = *(_OWORD *)&v82[16];
      v24[13] = v33;
      v24[10] = v31;
      v24[11] = v32;
    }
    if (!v9) {
      break;
    }
    --v9;
    v11 += 192;
  }
  swift_release();
  int64_t v54 = *(void *)(v12 + 16);
  if ((unint64_t)(v54 - 13) < 0xFFFFFFFFFFFFFFF4)
  {
    swift_release();
    uint64_t v72 = a1;
    swift_bridgeObjectRetain();
    sub_24872C600();
    return v72;
  }
  uint64_t v67 = a1;
  sub_2486B9D40(0, v54, 0);
  uint64_t v55 = 0;
  for (int64_t j = v54 - 1; ; --j)
  {
    long long v70 = *(_OWORD *)(v12 + v55 + 40);
    int v57 = *(unsigned __int8 *)(v12 + v55 + 177);
    uint64_t v58 = sub_2486D7A68();
    uint64_t v73 = v58;
    unint64_t v74 = v59;
    if ((v70 & 2) != 0)
    {
      sub_24872C600();
      uint64_t v60 = v73;
      unint64_t v61 = v74;
      if ((v70 & 1) == 0) {
        goto LABEL_34;
      }
LABEL_33:
      sub_24872C600();
      swift_bridgeObjectRelease();
      sub_24872C600();
      uint64_t v60 = 91;
      unint64_t v61 = 0xE100000000000000;
      goto LABEL_34;
    }
    uint64_t v60 = v58;
    unint64_t v61 = v59;
    if (v70) {
      goto LABEL_33;
    }
LABEL_34:
    if (v57 == 5)
    {
      sub_24872C600();
      swift_bridgeObjectRelease();
      uint64_t v60 = 2108717;
      unint64_t v61 = 0xE300000000000000;
    }
    unint64_t v63 = *(void *)(v10 + 16);
    unint64_t v62 = *(void *)(v10 + 24);
    if (v63 >= v62 >> 1) {
      sub_2486B9D40((char *)(v62 > 1), v63 + 1, 1);
    }
    *(void *)(v10 + 16) = v63 + 1;
    uint64_t v64 = v10 + 16 * v63;
    *(void *)(v64 + 32) = v60;
    *(void *)(v64 + 40) = v61;
    if (!j) {
      break;
    }
    v55 += 192;
  }
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
  sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
  sub_24872C4F0();
  swift_release();
  sub_24872CAD0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v72 = v67;
  sub_24872C600();
  sub_24872C600();
  swift_bridgeObjectRelease();
  return v72;
}

uint64_t sub_2486D8564()
{
  long long v1 = v0[9];
  long long v29 = v0[8];
  v30[0] = v1;
  long long v2 = v0[11];
  v30[1] = v0[10];
  v30[2] = v2;
  long long v3 = v0[5];
  *(_OWORD *)&v28[64] = v0[4];
  *(_OWORD *)&v28[80] = v3;
  long long v4 = v0[7];
  *(_OWORD *)&v28[96] = v0[6];
  *(_OWORD *)&v28[112] = v4;
  long long v5 = v0[1];
  *(_OWORD *)long long v28 = *v0;
  *(_OWORD *)&v28[16] = v5;
  long long v6 = v0[3];
  *(_OWORD *)&v28[32] = v0[2];
  *(_OWORD *)&v28[48] = v6;
  if (!*(void *)v28)
  {
    v31[0] = 60;
    v31[1] = 0xE100000000000000;
    long long v37 = *(_OWORD *)&v28[72];
    long long v38 = *(_OWORD *)&v28[88];
    long long v39 = *(_OWORD *)&v28[104];
    uint64_t v40 = *(void *)&v28[120];
    long long v33 = *(_OWORD *)&v28[8];
    long long v34 = *(_OWORD *)&v28[24];
    long long v35 = *(_OWORD *)&v28[40];
    long long v36 = *(_OWORD *)&v28[56];
    long long v41 = *(_OWORD *)&v28[88];
    uint64_t v8 = *(void *)&v28[88] & 0xFFFFFFFFFFFFLL;
    if ((*(void *)&v28[96] & 0x2000000000000000) != 0) {
      uint64_t v8 = HIBYTE(*(void *)&v28[96]) & 0xFLL;
    }
    if (v8)
    {
      long long v32 = v38;
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_2486B76D8((uint64_t)v28);
      sub_2486CB40C((uint64_t)&v41);
      sub_24870BD14((uint64_t *)v28, (unint64_t *)&v32);
      sub_2486CB438((uint64_t)&v41);
      sub_2486C539C((uint64_t)v28);
    }
    sub_24872C600();
    swift_bridgeObjectRelease();
    sub_24872C600();
    return v31[0];
  }
  if (*(void *)v28 == 1) {
    return 0;
  }
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_2486D8B00(v9);
  sub_2486C548C(*(unint64_t *)v28);
  int64_t v11 = *(void *)(v10 + 16);
  if (!v11)
  {
    swift_bridgeObjectRelease();
    uint64_t v12 = MEMORY[0x263F8EE78];
    goto LABEL_23;
  }
  *(void *)&long long v41 = MEMORY[0x263F8EE78];
  sub_2486B9D40(0, v11, 0);
  uint64_t v12 = v41;
  long long v13 = (unsigned __int8 *)(v10 + 48);
  do
  {
    uint64_t v15 = *((void *)v13 - 2);
    uint64_t v14 = *((void *)v13 - 1);
    unsigned int v16 = *v13;
    if (v16 >> 6)
    {
      if (v16 >> 6 == 1)
      {
        *(void *)&long long v33 = 0;
        *((void *)&v33 + 1) = 0xE000000000000000;
        swift_bridgeObjectRetain();
        sub_24872C600();
        sub_24872C4E0();
        goto LABEL_16;
      }
      *(void *)&long long v33 = 45;
      unint64_t v17 = 0xE100000000000000;
    }
    else
    {
      *(void *)&long long v33 = 11565;
      unint64_t v17 = 0xE200000000000000;
    }
    *((void *)&v33 + 1) = v17;
    swift_bridgeObjectRetain();
    sub_24872C600();
LABEL_16:
    sub_2486B7668(v15, v14, v16);
    long long v18 = v33;
    *(void *)&long long v41 = v12;
    unint64_t v20 = *(void *)(v12 + 16);
    unint64_t v19 = *(void *)(v12 + 24);
    if (v20 >= v19 >> 1)
    {
      sub_2486B9D40((char *)(v19 > 1), v20 + 1, 1);
      uint64_t v12 = v41;
    }
    v13 += 24;
    *(void *)(v12 + 16) = v20 + 1;
    *(_OWORD *)(v12 + 16 * v20 + 32) = v18;
    --v11;
  }
  while (v11);
  swift_bridgeObjectRelease();
LABEL_23:
  *(void *)&long long v33 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
  sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
  uint64_t v7 = sub_24872C4F0();
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  sub_2486CB3B0((uint64_t)v30 + 8, (uint64_t)v31);
  sub_2486CB3B0((uint64_t)v31, (uint64_t)&v41);
  if (v42)
  {
    uint64_t v26 = v7;
    uint64_t v27 = v22;
    sub_24872C600();
    long long v37 = *(_OWORD *)&v28[72];
    long long v38 = *(_OWORD *)&v28[88];
    long long v39 = *(_OWORD *)&v28[104];
    uint64_t v40 = *(void *)&v28[120];
    long long v33 = *(_OWORD *)&v28[8];
    long long v34 = *(_OWORD *)&v28[24];
    long long v35 = *(_OWORD *)&v28[40];
    long long v36 = *(_OWORD *)&v28[56];
    long long v32 = *(_OWORD *)&v28[88];
    uint64_t v23 = *(void *)&v28[88] & 0xFFFFFFFFFFFFLL;
    if ((*(void *)&v28[96] & 0x2000000000000000) != 0) {
      uint64_t v23 = HIBYTE(*(void *)&v28[96]) & 0xFLL;
    }
    if (v23)
    {
      long long v25 = v38;
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_2486B76D8((uint64_t)v28);
      sub_2486CB40C((uint64_t)&v32);
      sub_24870BD14((uint64_t *)v28, (unint64_t *)&v25);
      sub_2486CB438((uint64_t)&v32);
      sub_2486C539C((uint64_t)v28);
    }
    sub_24872C600();
    swift_bridgeObjectRelease();
    sub_24872C600();
    return v26;
  }
  return v7;
}

uint64_t sub_2486D8998(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + 16);
  if (v4)
  {
    uint64_t v8 = 0;
    uint64_t v9 = a4 + 32;
    uint64_t v21 = a3 + 9;
    do
    {
      uint64_t v10 = (void *)(v9 + 24 * v8);
      int64_t v11 = (void *)v10[2];
      BOOL v12 = *v10 == a1 && v10[1] == a2;
      if (v12 || (sub_24872CEB0() & 1) != 0)
      {
        uint64_t v13 = v11[2];
        if (v13 == a3[2])
        {
          if (!v13 || v11 == a3) {
            return 1;
          }
          BOOL v14 = v11[4] == a3[4] && v11[5] == a3[5];
          if (v14 || (sub_24872CEB0() & 1) != 0)
          {
            if (v13 == 1) {
              return 1;
            }
            BOOL v15 = v11[6] == a3[6] && v11[7] == a3[7];
            if (v15 || (sub_24872CEB0() & 1) != 0)
            {
              uint64_t v16 = v13 - 2;
              if (!v16) {
                return 1;
              }
              unint64_t v17 = v11 + 9;
              for (uint64_t i = v21; ; i += 2)
              {
                BOOL v19 = *(v17 - 1) == *(i - 1) && *v17 == *i;
                if (!v19 && (sub_24872CEB0() & 1) == 0) {
                  break;
                }
                v17 += 2;
                if (!--v16) {
                  return 1;
                }
              }
            }
          }
        }
      }
      ++v8;
    }
    while (v8 != v4);
  }
  return 0;
}

uint64_t sub_2486D8B00(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v20 = swift_bridgeObjectRetain();
    long long v2 = (unsigned char *)(v20 + 48);
    uint64_t v3 = MEMORY[0x263F8EE78];
    uint64_t v4 = v1;
    do
    {
      char v8 = *v2;
      if ((*v2 & 0xC0) == 0x40)
      {
        uint64_t v10 = *((void *)v2 - 2);
        uint64_t v9 = *((void *)v2 - 1);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_2486B9D60(0, *(void *)(v3 + 16) + 1, 1);
        }
        unint64_t v6 = *(void *)(v3 + 16);
        unint64_t v5 = *(void *)(v3 + 24);
        if (v6 >= v5 >> 1) {
          sub_2486B9D60((char *)(v5 > 1), v6 + 1, 1);
        }
        *(void *)(v3 + 16) = v6 + 1;
        uint64_t v7 = v3 + 24 * v6;
        *(void *)(v7 + 32) = v10;
        *(void *)(v7 + 40) = v9;
        *(unsigned char *)(v7 + 48) = v8;
      }
      v2 += 24;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    int64_t v11 = (unsigned __int8 *)(v20 + 48);
    uint64_t v12 = MEMORY[0x263F8EE78];
    do
    {
      unsigned __int8 v16 = *v11;
      if ((*v11 & 0xC0) != 0x40)
      {
        uint64_t v17 = *((void *)v11 - 2);
        uint64_t v18 = *((void *)v11 - 1);
        sub_2486B7650(v17, v18, *v11);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_2486B9D60(0, *(void *)(v12 + 16) + 1, 1);
        }
        unint64_t v14 = *(void *)(v12 + 16);
        unint64_t v13 = *(void *)(v12 + 24);
        if (v14 >= v13 >> 1) {
          sub_2486B9D60((char *)(v13 > 1), v14 + 1, 1);
        }
        *(void *)(v12 + 16) = v14 + 1;
        uint64_t v15 = v12 + 24 * v14;
        *(void *)(v15 + 32) = v17;
        *(void *)(v15 + 40) = v18;
        *(unsigned char *)(v15 + 48) = v16;
      }
      v11 += 24;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = MEMORY[0x263F8EE78];
    uint64_t v12 = MEMORY[0x263F8EE78];
  }
  sub_24871BB0C(v12);
  return v3;
}

unint64_t sub_2486D8D08(uint64_t a1)
{
  MEMORY[0x24C57CE60]();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E320);
  if (swift_dynamicCast())
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v3 = sub_2486D8FB4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2486DC870(v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
    MEMORY[0x24C57CE50](a1);
    return v3;
  }
  else
  {
    MEMORY[0x24C57CE50](a1);
    MEMORY[0x24C57CE60](a1);
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2486DC6B0(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16);
      unint64_t v4 = sub_2486D8FB4();
      swift_bridgeObjectRelease();
      sub_2486DC870(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2486DC870(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16);
      MEMORY[0x24C57CE50](a1);
      return v4;
    }
    else
    {
      MEMORY[0x24C57CE50](a1);
      return 0;
    }
  }
}

unint64_t sub_2486D8FB4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v6 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v8 = v0[6];
  uint64_t v7 = v0[7];
  uint64_t v10 = v0[8];
  uint64_t v9 = v0[9];
  uint64_t v12 = v0[10];
  uint64_t v11 = v0[11];
  uint64_t v13 = 0;
  switch(*((unsigned char *)v0 + 96))
  {
    case 3:
      if (!v4) {
        return sub_2486DA3B8();
      }
      uint64_t v41 = v0[8];
      uint64_t v46 = v0[9];
      unsigned __int8 v14 = v0[7];
      uint64_t v15 = v0[6];
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_2486DA1F0();
      sub_2486DC870(v3, v4, v6, v5, v15, v14, v41, v46, v12, v11, 3);
      return v13;
    case 4:
      *(void *)&long long v52 = *v0;
      *((void *)&v52 + 1) = v2;
      uint64_t v53 = v3;
      uint64_t v54 = v4;
      uint64_t v55 = v6;
      uint64_t v56 = v5;
      uint64_t v57 = v8;
      uint64_t v58 = v7;
      uint64_t v59 = v10;
      uint64_t v60 = v9;
      uint64_t v61 = v12;
      uint64_t v62 = v11;
      char v63 = 4;
      uint64_t v16 = v8;
      unsigned __int8 v17 = v7;
      uint64_t v42 = v10;
      uint64_t v47 = v9;
      sub_2486DC6B0(v3, v4, v6, v5, v8, v7, v10, v9, v12, v11, 4);
      uint64_t v13 = (uint64_t)sub_2486DD1DC(v5, v16, v17);
      sub_2486DC870(v3, v4, v6, v5, v16, v17, v42, v47, v12, v11, 4);
      return v13;
    case 5:
      uint64_t v48 = v0[9];
      unsigned __int8 v18 = v0[7];
      uint64_t v19 = v0[8];
      uint64_t v20 = v0[6];
      swift_bridgeObjectRetain();
      sub_24872CAD0();
      swift_bridgeObjectRelease();
      *(void *)&long long v52 = 0xD000000000000010;
      *((void *)&v52 + 1) = 0x8000000248731F80;
      sub_24872C600();
      char v21 = 5;
      goto LABEL_7;
    case 6:
      *(void *)&long long v52 = 0;
      *((void *)&v52 + 1) = 0xE000000000000000;
      uint64_t v48 = v9;
      unsigned __int8 v18 = v7;
      uint64_t v19 = v10;
      uint64_t v20 = v8;
      swift_bridgeObjectRetain();
      sub_24872CAD0();
      sub_24872C600();
      sub_24872C4E0();
      char v21 = 6;
LABEL_7:
      sub_2486DC870(v3, v4, v6, v5, v20, v18, v19, v48, v12, v11, v21);
      return v52;
    case 7:
      *(void *)&long long v52 = *v0;
      *((void *)&v52 + 1) = v2;
      uint64_t v53 = v3;
      uint64_t v54 = v4;
      uint64_t v55 = v6;
      uint64_t v56 = v5;
      uint64_t v57 = v8;
      uint64_t v58 = v7;
      uint64_t v59 = v10;
      uint64_t v60 = v9;
      uint64_t v61 = v12;
      uint64_t v62 = v11;
      char v63 = 7;
      swift_bridgeObjectRetain();
      sub_2486B7650(v4, v6, v5);
      uint64_t v13 = sub_2486DD59C(v4, v6, v5);
      swift_bridgeObjectRelease();
      sub_2486B7668(v4, v6, v5);
      return v13;
    case 8:
      *(void *)&long long v52 = 0;
      *((void *)&v52 + 1) = 0xE000000000000000;
      unsigned __int8 v22 = v7;
      uint64_t v23 = v8;
      sub_2486B7650(v5, v8, v7);
      swift_bridgeObjectRetain();
      sub_24872CAD0();
      sub_24872C600();
      sub_248714E64(v5, v23, v22);
      sub_24872C600();
      swift_bridgeObjectRelease();
      sub_24872C600();
      sub_24872C600();
      sub_24872C600();
      sub_2486B7668(v5, v23, v22);
      swift_bridgeObjectRelease();
      return v52;
    case 9:
      uint64_t v43 = v0[8];
      uint64_t v49 = v0[9];
      unsigned __int8 v24 = v0[7];
      uint64_t v25 = v0[6];
      uint64_t v26 = swift_bridgeObjectRetain();
      uint64_t v13 = sub_2486DA544(v26);
      sub_2486DC870(v3, v4, v6, v5, v25, v24, v43, v49, v12, v11, 9);
      return v13;
    case 0xA:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_2486DA78C(v3, v4, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v13;
    case 0xB:
      *(void *)&long long v52 = *v0;
      *((void *)&v52 + 1) = v2;
      uint64_t v53 = v3;
      uint64_t v54 = v4;
      uint64_t v55 = v6;
      uint64_t v56 = v5;
      uint64_t v57 = v8;
      uint64_t v58 = v7;
      uint64_t v59 = v10;
      uint64_t v60 = v9;
      uint64_t v61 = v12;
      uint64_t v62 = v11;
      char v63 = 11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_2486DA940(v3, v4, (char *)v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v13;
    case 0xC:
      *(void *)&long long v52 = *v0;
      *((void *)&v52 + 1) = v2;
      uint64_t v53 = v3;
      uint64_t v54 = v4;
      uint64_t v55 = v6;
      uint64_t v56 = v5;
      uint64_t v57 = v8;
      uint64_t v58 = v7;
      uint64_t v59 = v10;
      uint64_t v60 = v9;
      uint64_t v61 = v12;
      uint64_t v62 = v11;
      char v63 = 12;
      uint64_t v27 = v8;
      uint64_t v38 = v7;
      uint64_t v28 = v10;
      uint64_t v29 = v9;
      sub_2486DC6B0(v3, v4, v6, v5, v8, v7, v10, v9, v12, v11, 12);
      uint64_t v13 = sub_2486DD8D0(v4, v6, v5, v27, v38, v28, v29, (void *)v12, v11);
      MEMORY[0x24C57CE50](v11);
      swift_bridgeObjectRelease();
      sub_2486C5540(v4, v6, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v13;
    case 0xD:
      uint64_t v30 = v0[6];
      unsigned __int8 v39 = v0[7];
      uint64_t v44 = v0[8];
      uint64_t v50 = v0[9];
      uint64_t v75 = v0[2];
      MEMORY[0x24C57CE60](v3);
      MEMORY[0x24C57CE60](v3);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26931E320);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26931E328);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_29;
      }
      sub_2486B7680(&v52, (uint64_t)&v64);
      __swift_project_boxed_opaque_existential_1(&v64, v67);
      uint64_t v13 = sub_24872C3F0();
      sub_2486DC870(v3, v4, v6, v5, v30, v39, v44, v50, v12, v11, 13);
      goto LABEL_27;
    case 0xE:
      uint64_t v37 = v0[6];
      unsigned __int8 v40 = v0[7];
      uint64_t v45 = v0[8];
      uint64_t v51 = v0[9];
      uint64_t v75 = v0[2];
      MEMORY[0x24C57CE60](v3);
      MEMORY[0x24C57CE60](v3);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26931E320);
      if (swift_dynamicCast())
      {
        *(void *)&long long v52 = v1;
        *((void *)&v52 + 1) = v2;
        uint64_t v53 = v64;
        uint64_t v54 = v65;
        uint64_t v55 = v66;
        uint64_t v56 = v67;
        uint64_t v57 = v68;
        uint64_t v58 = v69;
        uint64_t v59 = v70;
        uint64_t v60 = v71;
        uint64_t v61 = v72;
        uint64_t v62 = v73;
        char v63 = v74;
        swift_bridgeObjectRetain();
        uint64_t v31 = swift_bridgeObjectRetain();
        uint64_t v13 = sub_2486D8FB4(v31);
        sub_2486DC870(v3, v4, v6, v5, v37, v40, v45, v51, v12, v11, 14);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2486DC870(v64, v65, v66, v67, v68, v69, v70, v71, v72, v73, v74);
LABEL_28:
        MEMORY[0x24C57CE50](v75);
        return v13;
      }
      MEMORY[0x24C57CE50](v75);
      uint64_t v75 = v3;
      MEMORY[0x24C57CE60](v3);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26931E328);
      if (swift_dynamicCast())
      {
        sub_2486B7680(&v52, (uint64_t)&v64);
        __swift_project_boxed_opaque_existential_1(&v64, v67);
        uint64_t v13 = sub_24872C3F0();
        sub_2486DC870(v3, v4, v6, v5, v37, v40, v45, v51, v12, v11, 14);
LABEL_27:
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v64);
        goto LABEL_28;
      }
LABEL_29:
      MEMORY[0x24C57CE50](v75);
      *(void *)&long long v52 = v3;
      return sub_24872C540();
    case 0xF:
      uint64_t v32 = v8 | v7 | v10;
      uint64_t v33 = v9 | v12 | v11;
      if (!(v6 | v4 | v3 | v5 | v32 | v33)) {
        return 0;
      }
      uint64_t v34 = v6 | v4 | v5 | v32 | v33;
      if (v3 == 1 && !v34) {
        return 0;
      }
      if (v3 == 2 && !v34) {
        return 0xD00000000000004BLL;
      }
      if (v3 == 3 && v34 == 0) {
        return 0xD000000000000043;
      }
      return 0xD00000000000001CLL;
    default:
      return v13;
  }
}

unint64_t sub_2486D990C(uint64_t a1)
{
  uint64_t v33 = a1;
  MEMORY[0x24C57CE60]();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E320);
  if (swift_dynamicCast())
  {
    switch(v31)
    {
      case 7u:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_2486DC6B0(v21, v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, 7);
        uint64_t v19 = sub_2486DAE08(v22, (uint64_t)v23, (int)v24);
        sub_2486DC870(v21, v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, 7);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v4 = 7;
        break;
      case 0xBu:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_2486DC6B0(v21, v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, 11);
        uint64_t v19 = sub_2486DB02C(v21, v22, v23);
        sub_2486DC870(v21, v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, 11);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v4 = 11;
        break;
      case 0xCu:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_2486DC6B0(v21, v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, 12);
        MEMORY[0x24C57CE60]();
        unint64_t v2 = sub_2486DDE5C(v22, (uint64_t)v23, v24, v27, v28, v29);
        MEMORY[0x24C57CE50]();
        sub_2486DC870(v21, v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, 12);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v3 = v2;
        sub_2486DC870(v21, v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, 12);
LABEL_22:
        MEMORY[0x24C57CE50](v33);
        return v3;
      default:
        sub_2486DC870(v21, v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, v31);
        goto LABEL_21;
    }
    unint64_t v3 = v19;
    sub_2486DC870(v21, v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, v4);
    goto LABEL_22;
  }
  MEMORY[0x24C57CE50](v33);
  uint64_t v33 = a1;
  MEMORY[0x24C57CE60](a1);
  if (swift_dynamicCast())
  {
    switch(v32)
    {
      case 7:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_2486DC6B0(v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, v31, 7);
        uint64_t v20 = sub_2486DAE08((uint64_t)v23, (uint64_t)v24, v25);
        swift_bridgeObjectRelease();
        unsigned __int8 v5 = v27;
        uint64_t v7 = v28;
        uint64_t v6 = (uint64_t)v29;
        sub_2486DC870(v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, v31, 7);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v17 = 7;
        uint64_t v15 = (uint64_t)v30;
        uint64_t v16 = v31;
        uint64_t v8 = v22;
        uint64_t v9 = (uint64_t)v23;
        uint64_t v10 = (uint64_t)v24;
        uint64_t v11 = v25;
        uint64_t v12 = v26;
        break;
      case 11:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_2486DC6B0(v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, v31, 11);
        uint64_t v20 = sub_2486DB02C(v22, (uint64_t)v23, v24);
        swift_bridgeObjectRelease();
        uint64_t v6 = (uint64_t)v29;
        unsigned __int8 v5 = v27;
        uint64_t v7 = v28;
        sub_2486DC870(v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, v31, 11);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v17 = 11;
        uint64_t v15 = (uint64_t)v30;
        uint64_t v16 = v31;
        uint64_t v8 = v22;
        uint64_t v9 = (uint64_t)v23;
        uint64_t v10 = (uint64_t)v24;
        uint64_t v11 = v25;
        uint64_t v12 = v26;
        break;
      case 12:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_2486DC6B0(v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, v31, 12);
        MEMORY[0x24C57CE60]();
        unint64_t v18 = sub_2486DDE5C((uint64_t)v23, (uint64_t)v24, v25, v28, (uint64_t)v29, v30);
        MEMORY[0x24C57CE50]();
        swift_bridgeObjectRelease();
        sub_2486DC870(v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, v31, 12);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v3 = v18;
        sub_2486DC870(v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, v31, 12);
        goto LABEL_22;
      default:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_2486DC6B0(v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, v31, v32);
        swift_bridgeObjectRelease();
        sub_2486DC870(v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, v31, v32);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2486DC870(v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, v31, v32);
LABEL_21:
        unint64_t v3 = 0;
        goto LABEL_22;
    }
    unsigned __int8 v13 = v5;
    unint64_t v3 = v20;
    sub_2486DC870(v8, v9, v10, v11, v12, v13, v7, v6, v15, v16, v17);
    goto LABEL_22;
  }
  MEMORY[0x24C57CE50](a1);
  return 0;
}

uint64_t sub_2486DA1F0()
{
  sub_24872CAD0();
  sub_24872C600();
  sub_24872C600();
  sub_24872C600();
  uint64_t v0 = qword_26FC75B08;
  if (qword_26FC75B08)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    sub_2486B9D40(0, qword_26FC75B08, 0);
    uint64_t v1 = (uint64_t *)&unk_26FC75B20;
    do
    {
      uint64_t v3 = *(v1 - 1);
      uint64_t v2 = *v1;
      unint64_t v5 = *(void *)(v8 + 16);
      unint64_t v4 = *(void *)(v8 + 24);
      swift_bridgeObjectRetain();
      if (v5 >= v4 >> 1) {
        sub_2486B9D40((char *)(v4 > 1), v5 + 1, 1);
      }
      v1 += 2;
      *(void *)(v8 + 16) = v5 + 1;
      uint64_t v6 = v8 + 16 * v5;
      *(void *)(v6 + 32) = v3;
      *(void *)(v6 + 40) = v2;
      --v0;
    }
    while (v0);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
  sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
  sub_24872C4F0();
  swift_bridgeObjectRelease();
  sub_24872C600();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_2486DA3B8()
{
  sub_24872CAD0();
  sub_24872C600();
  uint64_t v0 = qword_26FC75B08;
  if (qword_26FC75B08)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    sub_2486B9D40(0, qword_26FC75B08, 0);
    uint64_t v1 = (uint64_t *)&unk_26FC75B20;
    do
    {
      uint64_t v3 = *(v1 - 1);
      uint64_t v2 = *v1;
      unint64_t v5 = *(void *)(v8 + 16);
      unint64_t v4 = *(void *)(v8 + 24);
      swift_bridgeObjectRetain();
      if (v5 >= v4 >> 1) {
        sub_2486B9D40((char *)(v4 > 1), v5 + 1, 1);
      }
      v1 += 2;
      *(void *)(v8 + 16) = v5 + 1;
      uint64_t v6 = v8 + 16 * v5;
      *(void *)(v6 + 32) = v3;
      *(void *)(v6 + 40) = v2;
      --v0;
    }
    while (v0);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
  sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
  sub_24872C4F0();
  swift_bridgeObjectRelease();
  sub_24872C600();
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_2486DA544(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    if (v1 == 1)
    {
      sub_24872CAD0();
      swift_bridgeObjectRelease();
      unint64_t v12 = 0xD000000000000015;
      swift_bridgeObjectRetain();
      sub_24872C600();
    }
    else
    {
      uint64_t v13 = MEMORY[0x263F8EE78];
      sub_2486B9D40(0, v1, 0);
      uint64_t v3 = (uint64_t *)(a1 + 48);
      int64_t v4 = v1;
      do
      {
        uint64_t v6 = *(v3 - 1);
        uint64_t v5 = *v3;
        unint64_t v8 = *(void *)(v13 + 16);
        unint64_t v7 = *(void *)(v13 + 24);
        swift_bridgeObjectRetain();
        if (v8 >= v7 >> 1) {
          sub_2486B9D40((char *)(v7 > 1), v8 + 1, 1);
        }
        *(void *)(v13 + 16) = v8 + 1;
        uint64_t v9 = v13 + 16 * v8;
        *(void *)(v9 + 32) = v6;
        *(void *)(v9 + 40) = v5;
        v3 += 3;
        --v4;
      }
      while (v4);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
      sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
      sub_24872C4F0();
      swift_release();
      sub_24872CAD0();
      uint64_t v10 = sub_24872CDE0();
      swift_bridgeObjectRelease();
      unint64_t v12 = v10;
      sub_24872C600();
      sub_24872C600();
    }
    swift_bridgeObjectRelease();
    sub_24872C600();
    return v12;
  }
  return v1;
}

uint64_t sub_2486DA78C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2486DBE38(a2, a3);
  if (!v5)
  {
    sub_24872C600();
    sub_24872CBB0();
  }
  sub_2486DBE38(a1, a3);
  if (!v6)
  {
    sub_24872C600();
    sub_24872CBB0();
  }
  sub_24872CAD0();
  sub_24872C600();
  sub_24872C600();
  swift_bridgeObjectRelease();
  sub_24872C600();
  sub_24872C600();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_2486DA940(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v7 = *v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_2486DD714(v7, a1, a2, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9)
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = (char *)MEMORY[0x263F8EE78];
    uint64_t v30 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (v30) {
      goto LABEL_17;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    *(void *)&long long v47 = 0;
    *((void *)&v47 + 1) = 0xE000000000000000;
    sub_24872CAD0();
    sub_24872C600();
    sub_248719D90(a1, a2, a3);
    sub_24872C600();
    swift_bridgeObjectRelease();
LABEL_24:
    sub_24872C600();
    return v47;
  }
  char v32 = a3;
  swift_bridgeObjectRetain();
  uint64_t v10 = v9 - 1;
  uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  for (uint64_t i = 32; ; i += 192)
  {
    long long v13 = *(_OWORD *)(v8 + i);
    long long v14 = *(_OWORD *)(v8 + i + 16);
    long long v15 = *(_OWORD *)(v8 + i + 48);
    long long v49 = *(_OWORD *)(v8 + i + 32);
    *(_OWORD *)uint64_t v50 = v15;
    long long v47 = v13;
    long long v48 = v14;
    long long v16 = *(_OWORD *)(v8 + i + 64);
    long long v17 = *(_OWORD *)(v8 + i + 80);
    long long v18 = *(_OWORD *)(v8 + i + 112);
    long long v52 = *(_OWORD *)(v8 + i + 96);
    long long v53 = v18;
    *(_OWORD *)&v50[16] = v16;
    long long v51 = v17;
    long long v19 = *(_OWORD *)(v8 + i + 128);
    long long v20 = *(_OWORD *)(v8 + i + 144);
    long long v21 = *(_OWORD *)(v8 + i + 176);
    *(_OWORD *)&v55[16] = *(_OWORD *)(v8 + i + 160);
    long long v56 = v21;
    long long v54 = v19;
    *(_OWORD *)uint64_t v55 = v20;
    if (!BYTE8(v52))
    {
      char v22 = BYTE8(v47);
      int v23 = v55[1];
      v35[0] = v47;
      v35[1] = *((void *)&v47 + 1) & 0xFFFFFFFFFFFFFFFELL;
      long long v36 = v48;
      long long v37 = v49;
      LOBYTE(v38[0]) = v50[0];
      *(_OWORD *)&v38[1] = *(_OWORD *)&v50[8];
      v38[3] = *(void *)&v50[24];
      long long v39 = v51;
      uint64_t v40 = v52;
      char v41 = 0;
      long long v42 = v53;
      long long v43 = v54;
      LOWORD(v44[0]) = *(_WORD *)v55;
      *(_OWORD *)&v44[1] = *(_OWORD *)&v55[8];
      char v45 = v55[24];
      long long v46 = v56;
      sub_2486B76D8((uint64_t)&v47);
      sub_2486B76D8((uint64_t)&v47);
      uint64_t v33 = sub_2486D7A68();
      unint64_t v34 = v24;
      if ((v22 & 2) != 0) {
        sub_24872C600();
      }
      if (v23 == 5)
      {
        sub_24872C600();
        swift_bridgeObjectRelease();
        sub_2486C539C((uint64_t)v35);
        sub_2486C539C((uint64_t)&v47);
        uint64_t v25 = 2108717;
        unint64_t v26 = 0xE300000000000000;
      }
      else
      {
        sub_2486C539C((uint64_t)v35);
        sub_2486C539C((uint64_t)&v47);
        unint64_t v26 = v34;
        uint64_t v25 = v33;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_248719EA4(0, *((void *)v11 + 2) + 1, 1, v11);
      }
      unint64_t v28 = *((void *)v11 + 2);
      unint64_t v27 = *((void *)v11 + 3);
      if (v28 >= v27 >> 1) {
        uint64_t v11 = sub_248719EA4((char *)(v27 > 1), v28 + 1, 1, v11);
      }
      *((void *)v11 + 2) = v28 + 1;
      uint64_t v29 = &v11[16 * v28];
      *((void *)v29 + 4) = v25;
      *((void *)v29 + 5) = v26;
    }
    if (!v10) {
      break;
    }
    --v10;
  }
  swift_bridgeObjectRelease_n();
  a3 = v32;
  uint64_t v30 = *((void *)v11 + 2);
  if (!v30) {
    goto LABEL_21;
  }
LABEL_17:
  if (v30 != 1)
  {
    *(void *)&long long v47 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
    sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
    sub_24872C4F0();
    swift_bridgeObjectRelease();
    *(void *)&long long v47 = 0;
    *((void *)&v47 + 1) = 0xE000000000000000;
    sub_24872CAD0();
    swift_bridgeObjectRelease();
    *(void *)&long long v47 = 0xD000000000000011;
    *((void *)&v47 + 1) = 0x8000000248732260;
    goto LABEL_23;
  }
  *(void *)&long long v47 = 0;
  *((void *)&v47 + 1) = 0xE000000000000000;
  sub_24872CAD0();
  swift_bridgeObjectRelease();
  *(void *)&long long v47 = 0xD00000000000001BLL;
  *((void *)&v47 + 1) = 0x8000000248732280;
  if (*((void *)v11 + 2))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
LABEL_23:
    sub_24872C600();
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_2486DAE08(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v7 = *v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2486B7650(a1, a2, a3);
  sub_2486D77A4(v7, a1, a2, a3, (uint64_t)v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2486CB464((uint64_t)v14, (uint64_t)v16);
  sub_2486CB464((uint64_t)v16, (uint64_t)v17);
  if (sub_2486CB4CC((uint64_t)v17) == 1) {
    return 0;
  }
  v15[8] = v21;
  v15[9] = v22;
  v15[10] = v23;
  v15[11] = v24;
  v15[4] = v17[4];
  void v15[5] = v18;
  v15[6] = v19;
  v15[7] = v20;
  v15[0] = v17[0];
  v15[1] = v17[1];
  v15[2] = v17[2];
  uint64_t v15[3] = v17[3];
  uint64_t v9 = *((void *)&v18 + 1);
  unint64_t v10 = v19;
  swift_bridgeObjectRetain();
  v14[0] = sub_248714E64(a1, a2, a3);
  v14[1] = v11;
  sub_24872C600();
  uint64_t v12 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v12 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (v12)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_2486DE1C8(v16, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2486DE23C);
    swift_bridgeObjectRetain();
    sub_24870BD14((uint64_t *)v15, &v13);
    swift_bridgeObjectRelease();
    sub_2486DE1C8(v16, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2486CB550);
  }
  sub_24872C600();
  swift_bridgeObjectRelease();
  sub_24872C600();
  sub_24872C600();
  swift_bridgeObjectRelease();
  sub_2486DE1C8(v16, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2486CB550);
  return v14[0];
}

uint64_t sub_2486DB02C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v7 = *v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2486D75F8(v7, a1, a2, a3, (uint64_t)v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2486CB464((uint64_t)v29, (uint64_t)v44);
  sub_2486CB464((uint64_t)v44, (uint64_t)v45);
  if (sub_2486CB4CC((uint64_t)v45) == 1) {
    return 0;
  }
  sub_2486CB464((uint64_t)v44, (uint64_t)v28);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2486DE1C8(v44, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2486CB550);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_2486DD714(v7, a1, a2, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(void *)(v8 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  long long v9 = *(_OWORD *)(v8 + 176);
  long long v31 = *(_OWORD *)(v8 + 160);
  long long v32 = v9;
  long long v10 = *(_OWORD *)(v8 + 208);
  long long v33 = *(_OWORD *)(v8 + 192);
  long long v34 = v10;
  long long v11 = *(_OWORD *)(v8 + 112);
  *(_OWORD *)&v30[64] = *(_OWORD *)(v8 + 96);
  *(_OWORD *)&v30[80] = v11;
  long long v12 = *(_OWORD *)(v8 + 144);
  *(_OWORD *)&v30[96] = *(_OWORD *)(v8 + 128);
  *(_OWORD *)&v30[112] = v12;
  long long v13 = *(_OWORD *)(v8 + 48);
  *(_OWORD *)uint64_t v30 = *(_OWORD *)(v8 + 32);
  *(_OWORD *)&v30[16] = v13;
  long long v14 = *(_OWORD *)(v8 + 80);
  *(_OWORD *)&v30[32] = *(_OWORD *)(v8 + 64);
  *(_OWORD *)&v30[48] = v14;
  unint64_t v15 = *(void *)v30;
  sub_2486B76D8((uint64_t)v30);
  swift_bridgeObjectRelease();
  if (v15 >= 2) {
    swift_bridgeObjectRetain();
  }
  else {
    unint64_t v15 = MEMORY[0x263F8EE78];
  }
  long long v39 = *(_OWORD *)&v30[72];
  long long v40 = *(_OWORD *)&v30[88];
  long long v41 = *(_OWORD *)&v30[104];
  uint64_t v42 = *(void *)&v30[120];
  long long v35 = *(_OWORD *)&v30[8];
  long long v36 = *(_OWORD *)&v30[24];
  long long v37 = *(_OWORD *)&v30[40];
  long long v38 = *(_OWORD *)&v30[56];
  long long v43 = *(_OWORD *)&v30[88];
  if (!*(void *)(v15 + 16))
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = 60;
    unint64_t v27 = 0xE100000000000000;
    uint64_t v24 = v43 & 0xFFFFFFFFFFFFLL;
    if ((*((void *)&v43 + 1) & 0x2000000000000000) != 0) {
      uint64_t v24 = HIBYTE(*((void *)&v43 + 1)) & 0xFLL;
    }
    if (v24) {
      goto LABEL_16;
    }
LABEL_17:
    sub_2486B76D8((uint64_t)v30);
    sub_2486CB40C((uint64_t)&v43);
    sub_24870BD14((uint64_t *)v30, (unint64_t *)&v25);
    sub_2486CB438((uint64_t)&v43);
    sub_2486C539C((uint64_t)v30);
    goto LABEL_18;
  }
  uint64_t v17 = *(void *)(v15 + 32);
  uint64_t v18 = *(void *)(v15 + 40);
  unsigned __int8 v19 = *(unsigned char *)(v15 + 48);
  sub_2486B7650(v17, v18, v19);
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_248714E64(v17, v18, v19);
  unint64_t v22 = v21;
  sub_2486B7668(v17, v18, v19);
  uint64_t v26 = v20;
  unint64_t v27 = v22;
  sub_24872C600();
  uint64_t v23 = v43 & 0xFFFFFFFFFFFFLL;
  if ((*((void *)&v43 + 1) & 0x2000000000000000) != 0) {
    uint64_t v23 = HIBYTE(*((void *)&v43 + 1)) & 0xFLL;
  }
  if (!v23) {
    goto LABEL_17;
  }
LABEL_16:
  long long v25 = v43;
  swift_bridgeObjectRetain();
LABEL_18:
  sub_24872C600();
  swift_bridgeObjectRelease();
  sub_24872C600();
  sub_24872C600();
  swift_bridgeObjectRelease();
  sub_2486C539C((uint64_t)v30);
  return v26;
}

unint64_t sub_2486DB44C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v7 = *v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2486B7650(a1, a2, a3);
  sub_2486D77A4(v7, a1, a2, a3, (uint64_t)v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2486CB464((uint64_t)v20, (uint64_t)v22);
  sub_2486CB464((uint64_t)v22, (uint64_t)v23);
  uint64_t v8 = 0;
  if (sub_2486CB4CC((uint64_t)v23) != 1)
  {
    sub_2486CB464((uint64_t)v22, (uint64_t)v12);
    uint64_t v8 = *((void *)&v13 + 1);
    unint64_t v9 = BYTE7(v14) & 0xF;
    if ((v14 & 0x2000000000000000) == 0) {
      unint64_t v9 = *((void *)&v13 + 1) & 0xFFFFFFFFFFFFLL;
    }
    v21[8] = v16;
    v21[9] = v17;
    v21[10] = v18;
    v21[11] = v19;
    v21[4] = v12[4];
    v21[5] = v13;
    v21[6] = v14;
    v21[7] = v15;
    v21[0] = v12[0];
    v21[1] = v12[1];
    v21[2] = v12[2];
    v21[3] = v12[3];
    if (v9)
    {
      swift_bridgeObjectRetain();
      sub_2486DE1C8(v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2486CB550);
    }
    else
    {
      sub_2486DE1C8(v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2486DE23C);
      swift_bridgeObjectRetain();
      sub_24870BD14((uint64_t *)v21, &v11);
      swift_bridgeObjectRelease();
      sub_2486DE1C8(v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2486CB550);
      sub_2486DE1C8(v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2486CB550);
      return v11;
    }
  }
  return v8;
}

void sub_2486DB618(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_24872C5A0();
  uint64_t v71 = a1;
  unint64_t v72 = a2;
  uint64_t v9 = sub_24872C5A0();
  if (v8 < 1 || v9 < 1) {
    return;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v10 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v10 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if ((a4 & 0x2000000000000000) != 0) {
    uint64_t v11 = HIBYTE(a4) & 0xF;
  }
  else {
    uint64_t v11 = a3 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v68 = 4 * v11;
  unint64_t v69 = 4 * v10;
  uint64_t v70 = a3;
  unint64_t v12 = 0;
  if (!v11)
  {
    int v21 = 0;
LABEL_22:
    unint64_t v13 = 15;
    goto LABEL_25;
  }
  if (!v10)
  {
    int v21 = 1;
    goto LABEL_22;
  }
  unint64_t v13 = 15;
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_24872C6A0();
    uint64_t v16 = v15;
    if (v14 == sub_24872C6A0() && v16 == v17)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_16;
    }
    char v18 = sub_24872CEB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0) {
      break;
    }
LABEL_16:
    a3 = v70;
    unint64_t v19 = sub_24872C5B0();
    unint64_t v20 = sub_24872C5B0();
    unint64_t v13 = v20;
    unint64_t v12 = v19 >> 14;
    if (v19 >> 14 >= v68)
    {
      int v21 = 0;
      goto LABEL_25;
    }
    if (v69 <= v20 >> 14)
    {
      int v21 = 1;
      goto LABEL_25;
    }
  }
  int v21 = 1;
  a3 = v70;
LABEL_25:
  uint64_t v22 = 7;
  if (((a4 >> 60) & ((a3 & 0x800000000000000) == 0)) != 0) {
    uint64_t v23 = 11;
  }
  else {
    uint64_t v23 = 7;
  }
  unint64_t v24 = v23 | (v11 << 16);
  if (((v72 >> 60) & ((v71 & 0x800000000000000) == 0)) != 0) {
    uint64_t v22 = 11;
  }
  unint64_t v25 = v22 | (v10 << 16);
  unint64_t v26 = v13 >> 14;
  if (v21 && v26 < v69)
  {
    uint64_t v65 = v23 | (v11 << 16);
    uint64_t v27 = sub_24872C5C0();
    unint64_t v67 = v25;
    unint64_t v28 = sub_24872C5C0();
    unint64_t v63 = v27;
    uint64_t v29 = sub_24872C6A0();
    uint64_t v31 = v30;
    if (v29 == sub_24872C6A0() && v31 == v32)
    {
      swift_bridgeObjectRelease_n();
      unint64_t v26 = v13 >> 14;
LABEL_36:
      unint64_t v24 = v63;
      if (v12 >= v63 >> 14)
      {
        unint64_t v25 = v28;
      }
      else
      {
        unint64_t v25 = v28;
        if (v26 < v28 >> 14)
        {
          while (1)
          {
            unint64_t v66 = v24;
            unint64_t v34 = sub_24872C5C0();
            unint64_t v35 = sub_24872C5C0();
            uint64_t v36 = sub_24872C6A0();
            uint64_t v38 = v37;
            if (v36 == sub_24872C6A0() && v38 == v39)
            {
              swift_bridgeObjectRelease_n();
              unint64_t v26 = v13 >> 14;
            }
            else
            {
              char v40 = sub_24872CEB0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              unint64_t v26 = v13 >> 14;
              unint64_t v24 = v66;
              if ((v40 & 1) == 0) {
                goto LABEL_47;
              }
            }
            if (v12 >= v34 >> 14) {
              break;
            }
            unint64_t v25 = v35;
            unint64_t v24 = v34;
            if (v26 >= v35 >> 14) {
              goto LABEL_47;
            }
          }
          unint64_t v25 = v35;
          unint64_t v24 = v34;
        }
      }
    }
    else
    {
      char v33 = sub_24872CEB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v26 = v13 >> 14;
      unint64_t v24 = v65;
      unint64_t v25 = v67;
      if (v33) {
        goto LABEL_36;
      }
    }
  }
LABEL_47:
  if (v12 == v68 && v26 == v69) {
    return;
  }
  if (v12 >= v24 >> 14 || v26 >= v25 >> 14)
  {
    sub_24872C670();
    return;
  }
  sub_24872C6D0();
  sub_24872C6D0();
  swift_bridgeObjectRetain();
  uint64_t v60 = sub_24872C920();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v41 = sub_24872C920();
  swift_bridgeObjectRelease();
  uint64_t v42 = v41 + 1;
  if (__OFADD__(v41, 1))
  {
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  if (v42 < 0)
  {
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  if (v41 == -1)
  {
    uint64_t v43 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v43 = sub_24872C7D0();
    *(void *)(v43 + 16) = v42;
    bzero((void *)(v43 + 32), 8 * v41 + 8);
  }
  if (v41 < 0) {
    goto LABEL_100;
  }
  uint64_t v44 = sub_2486B9B9C(0, v41);
  if (v60 < 1 || !v41) {
    goto LABEL_101;
  }
  uint64_t v45 = v44;
  uint64_t v46 = 1;
  uint64_t v62 = v41;
  while (1)
  {
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      long long v47 = (char *)v43;
      if (!*(void *)(v43 + 16)) {
        break;
      }
      goto LABEL_65;
    }
    long long v47 = sub_248722540(v43);
    if (!*((void *)v47 + 2)) {
      break;
    }
LABEL_65:
    uint64_t v48 = 0;
    unint64_t v49 = 0;
    uint64_t v61 = v46;
    *((void *)v47 + 4) = v46;
    uint64_t v64 = v47;
    do
    {
      uint64_t v50 = v45;
      unint64_t v73 = v49 + 1;
      uint64_t v51 = sub_24872C930();
      uint64_t v53 = v52;
      if (v51 == sub_24872C930() && v53 == v54)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v55 = sub_24872CEB0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v55 & 1) == 0)
        {
          if (v73 >= *(void *)(v50 + 16)) {
            goto LABEL_93;
          }
          uint64_t v45 = v50;
          long long v47 = v64;
          unint64_t v57 = *((void *)v64 + 2);
          if (v49 >= v57) {
            goto LABEL_94;
          }
          uint64_t v58 = *(void *)(v45 + v48 + 32);
          if (v58 >= *(void *)&v64[v48 + 32]) {
            uint64_t v58 = *(void *)&v64[v48 + 32];
          }
          if (v58 >= *(void *)(v45 + v48 + 40)) {
            uint64_t v58 = *(void *)(v45 + v48 + 40);
          }
          BOOL v59 = __OFADD__(v58, 1);
          uint64_t v56 = v58 + 1;
          if (v59) {
            goto LABEL_95;
          }
          if (v73 >= v57) {
            goto LABEL_96;
          }
          goto LABEL_66;
        }
      }
      if (v49 >= *(void *)(v50 + 16))
      {
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
        goto LABEL_98;
      }
      uint64_t v45 = v50;
      long long v47 = v64;
      if (v73 >= *((void *)v64 + 2)) {
        goto LABEL_92;
      }
      uint64_t v56 = *(void *)(v45 + v48 + 32);
LABEL_66:
      *(void *)&v47[v48 + 40] = v56;
      sub_24872C8F0();
      ++v49;
      v48 += 8;
      uint64_t v41 = v62;
    }
    while (v62 != v49);
    sub_24872C8F0();
    if (v46 == v60) {
      goto LABEL_89;
    }
    uint64_t v43 = v45;
    uint64_t v45 = (uint64_t)v47;
    ++v46;
    if (__OFADD__(v61, 1)) {
      goto LABEL_97;
    }
  }
  __break(1u);
LABEL_89:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v41 < *((void *)v47 + 2))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
LABEL_102:
  __break(1u);
}

uint64_t sub_2486DBE38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_bridgeObjectRetain();
  int64_t v4 = (char *)sub_2486B9AA4(v3);
  swift_bridgeObjectRelease();
  uint64_t v10 = (uint64_t)v4;
  swift_retain();
  sub_2487010E0((char **)&v10);
  swift_release();
  if (*(void *)(v10 + 16))
  {
    unint64_t v5 = *(void *)(v10 + 32);
    uint64_t v6 = *(void *)(v10 + 40);
    char v7 = *(unsigned char *)(v10 + 48);
    char v8 = *(unsigned char *)(v10 + 49);
    swift_release();
    if ((v8 & 1) == 0)
    {
      uint64_t v10 = 39;
      unint64_t v11 = 0xE100000000000000;
      if ((v5 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v5 < *(void *)(a2 + 16))
      {
        swift_bridgeObjectRetain();
        sub_24872C600();
        swift_bridgeObjectRelease();
        sub_24872C600();
        if (v7)
        {
LABEL_8:
          uint64_t v10 = 0x2067616C66;
          unint64_t v11 = 0xE500000000000000;
          sub_24872C600();
          swift_bridgeObjectRelease();
          return v10;
        }
        if (!__OFADD__(v6, 2))
        {
          sub_24872C5E0();
          uint64_t v10 = 0;
          unint64_t v11 = 0xE000000000000000;
          sub_24872C600();
          sub_24872C6A0();
          sub_24872C4E0();
          swift_bridgeObjectRelease();
          sub_24872C600();
          sub_24872C600();
          swift_bridgeObjectRelease();
          goto LABEL_8;
        }
        goto LABEL_14;
      }
      __break(1u);
LABEL_14:
      __break(1u);
      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
  }
  else
  {
    swift_release();
  }
  return 0;
}

uint64_t sub_2486DC028(uint64_t a1, uint64_t a2)
{
  if (!a1)
  {
    sub_2486CB464(a2, (uint64_t)v21);
    if (sub_2486CB4CC((uint64_t)v21) == 1) {
      return 0;
    }
    long long v18 = v21[9];
    long long v19 = v21[10];
    long long v20 = v21[11];
    long long v13 = v21[4];
    long long v14 = v21[5];
    long long v15 = v21[6];
    long long v16 = v21[7];
    long long v17 = v21[8];
    long long v9 = v21[0];
    long long v10 = v21[1];
    long long v11 = v21[2];
    long long v12 = v21[3];
    return sub_2486DC21C();
  }
  MEMORY[0x24C57CE60]();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E328);
  if (!swift_dynamicCast()) {
    goto LABEL_10;
  }
  sub_2486B7680(v21, (uint64_t)&v9);
  __swift_project_boxed_opaque_existential_1(&v9, *((uint64_t *)&v10 + 1));
  sub_24872C3F0();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v9);
LABEL_10:
    MEMORY[0x24C57CE50](a1);
    *(void *)&v21[0] = a1;
    MEMORY[0x24C57CE60](a1);
    MEMORY[0x24C57CE60](a1);
    sub_24872C540();
    *(void *)&v21[0] = 8250;
    *((void *)&v21[0] + 1) = 0xE200000000000000;
    sub_24872C600();
    swift_bridgeObjectRelease();
    MEMORY[0x24C57CE50](a1);
    return *(void *)&v21[0];
  }
  __swift_project_boxed_opaque_existential_1(&v9, *((uint64_t *)&v10 + 1));
  uint64_t result = sub_24872C3F0();
  if (v6)
  {
    sub_24872C600();
    swift_bridgeObjectRelease();
    uint64_t v7 = 8250;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v9);
    MEMORY[0x24C57CE50](a1);
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_2486DC21C()
{
  uint64_t v1 = *(void *)(v0 + 40);
  unint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  if (v2 > 5)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_2486B9D40(0, v2, 0);
    uint64_t v8 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_24872C600();
      swift_bridgeObjectRelease();
      unint64_t v10 = *(void *)(v14 + 16);
      unint64_t v9 = *(void *)(v14 + 24);
      if (v10 >= v9 >> 1) {
        sub_2486B9D40((char *)(v9 > 1), v10 + 1, 1);
      }
      v8 += 16;
      *(void *)(v14 + 16) = v10 + 1;
      uint64_t v11 = v14 + 16 * v10;
      *(void *)(v11 + 32) = 539828256;
      *(void *)(v11 + 40) = 0xE400000000000000;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
    sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
    sub_24872C4F0();
    swift_release();
    sub_24872CAD0();
    swift_bridgeObjectRelease();
    unint64_t v12 = 0xD000000000000027;
    sub_24872C600();
    swift_bridgeObjectRelease();
    return v12;
  }
  uint64_t v13 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  sub_2486B9D40(0, v2, 0);
  uint64_t v3 = v1 + 40;
  do
  {
    swift_bridgeObjectRetain();
    sub_24872C600();
    sub_24872C600();
    swift_bridgeObjectRelease();
    unint64_t v5 = *(void *)(v13 + 16);
    unint64_t v4 = *(void *)(v13 + 24);
    if (v5 >= v4 >> 1) {
      sub_2486B9D40((char *)(v4 > 1), v5 + 1, 1);
    }
    v3 += 16;
    *(void *)(v13 + 16) = v5 + 1;
    uint64_t v6 = (void *)(v13 + 32 + 16 * v5);
    *uint64_t v6 = 39;
    v6[1] = 0xE100000000000000;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  if (*(void *)(v13 + 16) <= 2uLL)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
    sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
    sub_24872C4F0();
    swift_release();
    goto LABEL_18;
  }
  sub_2486CD2D0(1, v13);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E218);
  sub_2486C54FC(&qword_26931E220, &qword_26931E218);
  sub_24872C4F0();
  swift_unknownObjectRelease();
  if (*(void *)(v13 + 16))
  {
    swift_bridgeObjectRetain();
    swift_release();
    sub_24872C600();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24872C600();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_18:
    sub_24872CAD0();
    swift_bridgeObjectRelease();
    unint64_t v12 = 0xD000000000000018;
    sub_24872C600();
    swift_bridgeObjectRelease();
    sub_24872C600();
    return v12;
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void sub_2486DC6B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  unsigned __int8 v11 = a4;
  switch(a11)
  {
    case 1:
    case 2:
    case 3:
    case 5:
    case 6:
    case 9:
      goto LABEL_10;
    case 4:
      uint64_t v14 = a4;
      uint64_t v15 = a5;
      unsigned __int8 v16 = a6;
      goto LABEL_4;
    case 7:
      swift_bridgeObjectRetain();
      uint64_t v14 = a2;
      uint64_t v15 = a3;
      unsigned __int8 v16 = v11;
LABEL_4:
      sub_2486B7650(v14, v15, v16);
      return;
    case 8:
      sub_2486B7650(a4, a5, a6);
      goto LABEL_10;
    case 10:
      swift_bridgeObjectRetain();
      goto LABEL_9;
    case 11:
LABEL_9:
      swift_bridgeObjectRetain();
LABEL_10:
      swift_bridgeObjectRetain();
      return;
    case 12:
      swift_bridgeObjectRetain();
      sub_2486DC85C(a2, a3, v11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 13:
    case 14:
LABEL_14:
      JUMPOUT(0x24C57CE60);
    default:
      return;
  }
}

uint64_t sub_2486DC85C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0xFDu) {
    return sub_2486B7650(a1, a2, a3);
  }
  return a1;
}

void sub_2486DC870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  unsigned __int8 v11 = a4;
  switch(a11)
  {
    case 1:
    case 2:
    case 3:
    case 5:
    case 6:
    case 9:
      goto LABEL_10;
    case 4:
      uint64_t v14 = a4;
      uint64_t v15 = a5;
      unsigned __int8 v16 = a6;
      goto LABEL_4;
    case 7:
      swift_bridgeObjectRelease();
      uint64_t v14 = a2;
      uint64_t v15 = a3;
      unsigned __int8 v16 = v11;
LABEL_4:
      sub_2486B7668(v14, v15, v16);
      return;
    case 8:
      sub_2486B7668(a4, a5, a6);
      goto LABEL_10;
    case 10:
      swift_bridgeObjectRelease();
      goto LABEL_9;
    case 11:
LABEL_9:
      swift_bridgeObjectRelease();
LABEL_10:
      swift_bridgeObjectRelease();
      return;
    case 12:
      swift_bridgeObjectRelease();
      sub_2486C5540(a2, a3, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_14;
    case 13:
    case 14:
LABEL_14:
      JUMPOUT(0x24C57CE50);
    default:
      return;
  }
}

uint64_t sub_2486DCA1C(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5)
{
  unint64_t v5 = *(void *)(result + 16);
  if (v5)
  {
    unint64_t v6 = 0;
    int v7 = a4 >> 6;
    uint64_t v8 = result + 48;
    uint64_t v26 = -(uint64_t)v5;
    uint64_t v9 = MEMORY[0x263F8EE78];
    uint64_t v24 = result + 48;
    unint64_t v25 = *(void *)(result + 16);
    while (1)
    {
      if (v6 <= v5) {
        unint64_t v10 = v5;
      }
      else {
        unint64_t v10 = v6;
      }
      uint64_t v28 = -(uint64_t)v10;
      for (uint64_t i = (unsigned __int8 *)(v8 + 24 * v6++); ; i += 24)
      {
        if (v28 + v6 == 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v13 = *((void *)i - 2);
        uint64_t v12 = *((void *)i - 1);
        unsigned int v14 = *i;
        if (v14 >> 6)
        {
          if (v14 >> 6 == 1)
          {
            swift_bridgeObjectRetain();
            sub_24872C600();
            sub_24872C4E0();
            uint64_t v15 = 0;
            unint64_t v16 = 0xE000000000000000;
            if (!v7) {
              goto LABEL_11;
            }
            goto LABEL_15;
          }
          uint64_t v30 = 45;
          unint64_t v18 = 0xE100000000000000;
        }
        else
        {
          uint64_t v30 = 11565;
          unint64_t v18 = 0xE200000000000000;
        }
        unint64_t v31 = v18;
        swift_bridgeObjectRetain();
        sub_24872C600();
        uint64_t v15 = v30;
        unint64_t v16 = v31;
        if (!v7)
        {
LABEL_11:
          uint64_t v29 = 11565;
          unint64_t v17 = 0xE200000000000000;
          goto LABEL_18;
        }
LABEL_15:
        if (v7 == 1)
        {
          uint64_t v29 = 0;
          unint64_t v32 = 0xE000000000000000;
          sub_24872C600();
          sub_24872C4E0();
          goto LABEL_19;
        }
        uint64_t v29 = 45;
        unint64_t v17 = 0xE100000000000000;
LABEL_18:
        unint64_t v32 = v17;
        sub_24872C600();
LABEL_19:
        sub_2486DB618(v29, v32, v15, v16);
        uint64_t v20 = v19;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v20 < a5) {
          break;
        }
        uint64_t result = sub_2486B7668(v13, v12, v14);
        ++v6;
        if (v26 + v6 == 1) {
          return v9;
        }
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = (uint64_t)sub_2486B9D60(0, *(void *)(v9 + 16) + 1, 1);
      }
      unint64_t v22 = *(void *)(v9 + 16);
      unint64_t v21 = *(void *)(v9 + 24);
      if (v22 >= v21 >> 1) {
        uint64_t result = (uint64_t)sub_2486B9D60((char *)(v21 > 1), v22 + 1, 1);
      }
      *(void *)(v9 + 16) = v22 + 1;
      uint64_t v23 = v9 + 24 * v22;
      *(void *)(v23 + 32) = v13;
      *(void *)(v23 + 40) = v12;
      *(unsigned char *)(v23 + 48) = v14;
      uint64_t v8 = v24;
      unint64_t v5 = v25;
      if (!(v26 + v6)) {
        return v9;
      }
    }
  }
  return MEMORY[0x263F8EE78];
}

uint64_t sub_2486DCCD4(uint64_t result)
{
  unint64_t v1 = 0;
  unint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = result + 48;
  uint64_t v4 = MEMORY[0x263F8EE78];
LABEL_2:
  if (v1 <= v2) {
    unint64_t v5 = v2;
  }
  else {
    unint64_t v5 = v1;
  }
  unint64_t v6 = v5 + 1;
  int v7 = (unsigned __int8 *)(v3 + 24 * v1);
  while (1)
  {
    if (v2 == v1) {
      return v4;
    }
    if (v6 == ++v1) {
      break;
    }
    uint64_t v8 = v7 + 24;
    unsigned __int8 v9 = *v7;
    int v10 = *v7 & 0xC0;
    v7 += 24;
    if (v10 != 64)
    {
      uint64_t v16 = v3;
      uint64_t v11 = *((void *)v8 - 5);
      uint64_t v12 = *((void *)v8 - 4);
      sub_2486B7650(v11, v12, v9);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = (uint64_t)sub_2486B9D60(0, *(void *)(v4 + 16) + 1, 1);
      }
      unint64_t v14 = *(void *)(v4 + 16);
      unint64_t v13 = *(void *)(v4 + 24);
      if (v14 >= v13 >> 1) {
        uint64_t result = (uint64_t)sub_2486B9D60((char *)(v13 > 1), v14 + 1, 1);
      }
      *(void *)(v4 + 16) = v14 + 1;
      uint64_t v15 = v4 + 24 * v14;
      *(void *)(v15 + 32) = v11;
      *(void *)(v15 + 40) = v12;
      *(unsigned char *)(v15 + 48) = v9;
      uint64_t v3 = v16;
      goto LABEL_2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2486DCE0C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  unint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return 0;
  }
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  unsigned __int8 v9 = *(unsigned char *)(a1 + 48);
  swift_bridgeObjectRetain();
  uint64_t result = sub_2486B7650(v8, v7, v9);
  if (v4 == 1) {
    goto LABEL_37;
  }
  int v11 = a4 >> 6;
  uint64_t v12 = a1 + 48;
  uint64_t v31 = -(uint64_t)v4;
  unint64_t v13 = 1;
  uint64_t v28 = a1 + 48;
  unint64_t v29 = v4;
  while (2)
  {
    uint64_t v34 = v8;
    uint64_t v35 = v7;
    unsigned __int8 v30 = v9;
    int v32 = v9 >> 6;
    if (v13 <= v4) {
      unint64_t v14 = v4;
    }
    else {
      unint64_t v14 = v13;
    }
    uint64_t v33 = -(uint64_t)v14;
    uint64_t v15 = (unsigned __int8 *)(v12 + 24 * v13++);
    while (1)
    {
      if (v33 + v13 == 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v8 = *((void *)v15 - 2);
      uint64_t v7 = *((void *)v15 - 1);
      unsigned int v36 = *v15;
      if (v36 >> 6)
      {
        if (v36 >> 6 == 1)
        {
          swift_bridgeObjectRetain();
          sub_24872C600();
          sub_24872C4E0();
          uint64_t v16 = 0;
          unint64_t v17 = 0xE000000000000000;
          if (!v11) {
            goto LABEL_12;
          }
          goto LABEL_16;
        }
        uint64_t v38 = 45;
        unint64_t v19 = 0xE100000000000000;
      }
      else
      {
        uint64_t v38 = 11565;
        unint64_t v19 = 0xE200000000000000;
      }
      unint64_t v41 = v19;
      swift_bridgeObjectRetain();
      sub_24872C600();
      uint64_t v16 = v38;
      unint64_t v17 = v41;
      if (!v11)
      {
LABEL_12:
        uint64_t v37 = 11565;
        unint64_t v18 = 0xE200000000000000;
        goto LABEL_19;
      }
LABEL_16:
      if (v11 == 1)
      {
        uint64_t v37 = 0;
        unint64_t v42 = 0xE000000000000000;
        sub_24872C600();
        sub_24872C4E0();
        goto LABEL_20;
      }
      uint64_t v37 = 45;
      unint64_t v18 = 0xE100000000000000;
LABEL_19:
      unint64_t v42 = v18;
      sub_24872C600();
LABEL_20:
      sub_2486DB618(v37, v42, v16, v17);
      uint64_t v21 = v20;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v32)
      {
        if (v32 == 1)
        {
          sub_24872C600();
          sub_24872C4E0();
          uint64_t v22 = 0;
          unint64_t v23 = 0xE000000000000000;
          if (!v11) {
            goto LABEL_23;
          }
          goto LABEL_27;
        }
        uint64_t v40 = 45;
        unint64_t v25 = 0xE100000000000000;
      }
      else
      {
        uint64_t v40 = 11565;
        unint64_t v25 = 0xE200000000000000;
      }
      unint64_t v43 = v25;
      sub_24872C600();
      uint64_t v22 = v40;
      unint64_t v23 = v43;
      if (!v11)
      {
LABEL_23:
        uint64_t v39 = 11565;
        unint64_t v24 = 0xE200000000000000;
        goto LABEL_30;
      }
LABEL_27:
      if (v11 == 1)
      {
        uint64_t v39 = 0;
        unint64_t v44 = 0xE000000000000000;
        sub_24872C600();
        sub_24872C4E0();
        goto LABEL_31;
      }
      uint64_t v39 = 45;
      unint64_t v24 = 0xE100000000000000;
LABEL_30:
      unint64_t v44 = v24;
      sub_24872C600();
LABEL_31:
      sub_2486DB618(v39, v44, v22, v23);
      uint64_t v27 = v26;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v21 < v27) {
        break;
      }
      uint64_t result = sub_2486B7668(v8, v7, v36);
      ++v13;
      v15 += 24;
      if (v31 + v13 == 1)
      {
        uint64_t v8 = v34;
        goto LABEL_37;
      }
    }
    uint64_t result = sub_2486B7668(v34, v35, v30);
    uint64_t v12 = v28;
    unint64_t v4 = v29;
    unsigned __int8 v9 = v36;
    if (v31 + v13) {
      continue;
    }
    break;
  }
LABEL_37:
  swift_bridgeObjectRelease();
  return v8;
}

char *sub_2486DD1DC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  unsigned __int8 v4 = a3;
  uint64_t v5 = a2;
  uint64_t v6 = a1;
  if ((a3 & 0xC0) == 0x40) {
    goto LABEL_25;
  }
  uint64_t v7 = *v3;
  uint64_t v8 = *(void *)(*v3 + 16);
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (!v8)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
LABEL_24:
    sub_2486B7650(v6, v5, v4);
    uint64_t v21 = sub_2486DCA1C(v11, v6, v5, v4, 4);
    sub_2486B7668(v6, v5, v4);
    swift_bridgeObjectRelease();
    uint64_t v22 = sub_2486DCCD4(v21);
    swift_bridgeObjectRelease();
    sub_2486B7650(v6, v5, v4);
    uint64_t v23 = sub_2486DCE0C(v22, v6, v5, v4);
    uint64_t v25 = v24;
    unsigned __int8 v27 = v26;
    unsigned int v28 = v26;
    sub_2486B7668(v6, v5, v4);
    swift_bridgeObjectRelease();
    if (v28 <= 0xFD)
    {
      sub_24872CAD0();
      swift_bridgeObjectRelease();
      sub_248714E64(v6, v5, v4);
      sub_24872C600();
      swift_bridgeObjectRelease();
      sub_24872C600();
      sub_248714E64(v23, v25, v27);
      sub_2486C5540(v23, v25, v27);
      sub_24872C600();
      swift_bridgeObjectRelease();
      goto LABEL_27;
    }
LABEL_25:
    sub_24872CAD0();
    swift_bridgeObjectRelease();
    sub_248714E64(v6, v5, v4);
    sub_24872C600();
    swift_bridgeObjectRelease();
LABEL_27:
    sub_24872C600();
    return (char *)0xD000000000000010;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v10 = 32;
  uint64_t v11 = v9;
  while (1)
  {
    uint64_t result = *(char **)(v7 + v10);
    uint64_t v13 = (unint64_t)result >= 2 ? *(void *)(v7 + v10) : v9;
    uint64_t v14 = *(void *)(v13 + 16);
    int64_t v15 = *(void *)(v11 + 16);
    int64_t v16 = v15 + v14;
    if (__OFADD__(v15, v14)) {
      break;
    }
    sub_2486B77C8((unint64_t)result);
    uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
    if (result && v16 <= *(void *)(v11 + 24) >> 1)
    {
      if (*(void *)(v13 + 16)) {
        goto LABEL_18;
      }
    }
    else
    {
      if (v15 <= v16) {
        int64_t v17 = v15 + v14;
      }
      else {
        int64_t v17 = v15;
      }
      uint64_t result = sub_24871A0CC(result, v17, 1, (char *)v11);
      uint64_t v11 = (uint64_t)result;
      if (*(void *)(v13 + 16))
      {
LABEL_18:
        if ((*(void *)(v11 + 24) >> 1) - *(void *)(v11 + 16) < v14) {
          goto LABEL_30;
        }
        uint64_t result = (char *)swift_arrayInitWithCopy();
        if (v14)
        {
          uint64_t v18 = *(void *)(v11 + 16);
          BOOL v19 = __OFADD__(v18, v14);
          uint64_t v20 = v18 + v14;
          if (v19) {
            goto LABEL_31;
          }
          *(void *)(v11 + 16) = v20;
        }
        goto LABEL_5;
      }
    }
    if (v14) {
      goto LABEL_29;
    }
LABEL_5:
    swift_bridgeObjectRelease();
    v10 += 192;
    if (!--v8)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      unsigned __int8 v4 = a3;
      uint64_t v6 = a1;
      uint64_t v5 = a2;
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

unint64_t sub_2486DD59C(uint64_t a1, uint64_t a2, int a3)
{
  unsigned __int8 v3 = a3;
  sub_2486DB44C(a1, a2, a3);
  if (v6)
  {
    sub_24872CAD0();
    swift_bridgeObjectRelease();
    sub_248714E64(a1, a2, v3);
    sub_24872C600();
    swift_bridgeObjectRelease();
    sub_24872C600();
  }
  else
  {
    sub_24872CAD0();
    swift_bridgeObjectRelease();
    sub_248714E64(a1, a2, v3);
  }
  sub_24872C600();
  swift_bridgeObjectRelease();
  sub_24872C600();
  return 0xD000000000000013;
}

uint64_t sub_2486DD714(uint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  unint64_t v4 = *(void *)(result + 16);
  if (!v4) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v8 = 0;
  uint64_t v9 = result + 32;
  uint64_t v10 = MEMORY[0x263F8EE78];
  uint64_t v32 = result + 32;
  do
  {
    if (v8 <= v4) {
      unint64_t v11 = v4;
    }
    else {
      unint64_t v11 = v8;
    }
    uint64_t v12 = (long long *)(v9 + 192 * v8);
    for (unint64_t i = v8; ; ++i)
    {
      if (v11 == i)
      {
        __break(1u);
        return result;
      }
      long long v14 = v12[9];
      long long v41 = v12[8];
      long long v42 = v14;
      long long v15 = v12[11];
      long long v43 = v12[10];
      long long v44 = v15;
      long long v16 = v12[5];
      long long v37 = v12[4];
      long long v38 = v16;
      long long v17 = v12[7];
      long long v39 = v12[6];
      long long v40 = v17;
      long long v18 = v12[1];
      long long v33 = *v12;
      long long v34 = v18;
      long long v19 = v12[3];
      long long v35 = v12[2];
      long long v36 = v19;
      unint64_t v8 = i + 1;
      uint64_t result = sub_2486D8998(a2, a3, a4, v35);
      if (result) {
        break;
      }
      v12 += 12;
      if (v4 == v8) {
        return v10;
      }
    }
    sub_2486B76D8((uint64_t)&v33);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v45 = v10;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_2486B9CA0(0, *(void *)(v10 + 16) + 1, 1);
      uint64_t v10 = v45;
    }
    unint64_t v21 = *(void *)(v10 + 16);
    unint64_t v20 = *(void *)(v10 + 24);
    if (v21 >= v20 >> 1)
    {
      uint64_t result = (uint64_t)sub_2486B9CA0((char *)(v20 > 1), v21 + 1, 1);
      uint64_t v10 = v45;
    }
    *(void *)(v10 + 16) = v21 + 1;
    uint64_t v22 = (_OWORD *)(v10 + 192 * v21);
    long long v23 = v33;
    long long v24 = v34;
    long long v25 = v36;
    void v22[4] = v35;
    v22[5] = v25;
    _OWORD v22[2] = v23;
    v22[3] = v24;
    long long v26 = v37;
    long long v27 = v38;
    long long v28 = v40;
    v22[8] = v39;
    v22[9] = v28;
    v22[6] = v26;
    v22[7] = v27;
    long long v29 = v41;
    long long v30 = v42;
    long long v31 = v44;
    v22[12] = v43;
    _OWORD v22[13] = v31;
    v22[10] = v29;
    v22[11] = v30;
    uint64_t v9 = v32;
  }
  while (v4 - 1 != i);
  return v10;
}

uint64_t sub_2486DD8D0(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9)
{
  uint64_t v16 = *v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_2486DD714(v16, a6, a7, a8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v17 + 16))
  {
    long long v19 = *(_OWORD *)(v17 + 32);
    long long v18 = *(_OWORD *)(v17 + 48);
    long long v20 = *(_OWORD *)(v17 + 80);
    *(_OWORD *)&v43[32] = *(_OWORD *)(v17 + 64);
    *(_OWORD *)&v43[48] = v20;
    long long v21 = *(_OWORD *)(v17 + 96);
    long long v22 = *(_OWORD *)(v17 + 112);
    long long v23 = *(_OWORD *)(v17 + 144);
    *(_OWORD *)&v43[96] = *(_OWORD *)(v17 + 128);
    *(_OWORD *)&v43[112] = v23;
    *(_OWORD *)&v43[64] = v21;
    *(_OWORD *)&v43[80] = v22;
    long long v24 = *(_OWORD *)(v17 + 160);
    long long v25 = *(_OWORD *)(v17 + 176);
    long long v26 = *(_OWORD *)(v17 + 208);
    long long v46 = *(_OWORD *)(v17 + 192);
    long long v47 = v26;
    long long v44 = v24;
    long long v45 = v25;
    *(_OWORD *)long long v43 = v19;
    *(_OWORD *)&v43[16] = v18;
    long long v38 = *(_OWORD *)(v17 + 160);
    long long v39 = *(_OWORD *)(v17 + 176);
    long long v40 = *(_OWORD *)(v17 + 192);
    long long v41 = *(_OWORD *)(v17 + 208);
    long long v34 = *(_OWORD *)(v17 + 96);
    long long v35 = *(_OWORD *)(v17 + 112);
    long long v36 = *(_OWORD *)(v17 + 128);
    long long v37 = *(_OWORD *)(v17 + 144);
    long long v30 = *(_OWORD *)(v17 + 32);
    long long v31 = *(_OWORD *)(v17 + 48);
    long long v32 = *(_OWORD *)(v17 + 64);
    long long v33 = *(_OWORD *)(v17 + 80);
    sub_2486B76D8((uint64_t)v43);
    swift_bridgeObjectRelease();
    long long v52 = *(_OWORD *)&v43[72];
    long long v53 = *(_OWORD *)&v43[88];
    long long v54 = *(_OWORD *)&v43[104];
    uint64_t v55 = *(void *)&v43[120];
    long long v48 = *(_OWORD *)&v43[8];
    long long v49 = *(_OWORD *)&v43[24];
    long long v50 = *(_OWORD *)&v43[40];
    long long v51 = *(_OWORD *)&v43[56];
    long long v56 = *(_OWORD *)&v43[88];
    v42[10] = v40;
    v42[11] = v41;
    void v42[8] = v38;
    v42[9] = v39;
    v42[6] = v36;
    uint64_t v42[7] = v37;
    v42[4] = v34;
    v42[5] = v35;
    v42[2] = v32;
    v42[3] = v33;
    v42[0] = v30;
    v42[1] = v31;
    nullsub_1(v42);
    uint64_t v27 = v56 & 0xFFFFFFFFFFFFLL;
    if ((*((void *)&v56 + 1) & 0x2000000000000000) != 0) {
      uint64_t v27 = HIBYTE(*((void *)&v56 + 1)) & 0xFLL;
    }
    if (v27)
    {
      *(_OWORD *)unint64_t v57 = v56;
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_2486B76D8((uint64_t)v43);
      sub_2486CB40C((uint64_t)&v56);
      sub_24870BD14((uint64_t *)v43, v57);
      sub_2486CB438((uint64_t)&v56);
      sub_2486C539C((uint64_t)v43);
    }
    unint64_t v28 = v57[1];
    sub_2486CB464((uint64_t)v42, (uint64_t)v57);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_2486CB64C(v43);
    sub_2486CB464((uint64_t)v43, (uint64_t)v57);
    unint64_t v28 = 0;
  }
  sub_2486CB464((uint64_t)v57, (uint64_t)v42);
  sub_2486DC028(a9, (uint64_t)v42);
  if (!v28)
  {
    if (a3 <= 0xFDu)
    {
      sub_2486B7650(a1, a2, a3);
      sub_24872CAD0();
      swift_bridgeObjectRelease();
      sub_24872C600();
      sub_24872C600();
      sub_248714E64(a1, a2, a3);
      sub_2486C5540(a1, a2, a3);
      sub_24872C600();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_24872CAD0();
      swift_bridgeObjectRelease();
      sub_24872C600();
    }
    sub_24872C600();
    sub_24872C600();
    goto LABEL_17;
  }
  if (a3 > 0xFDu)
  {
    sub_24872CAD0();
    swift_bridgeObjectRelease();
    sub_24872C600();
    sub_24872C600();
    sub_24872C600();
    sub_24872C600();
    sub_24872C600();
    swift_bridgeObjectRelease();
LABEL_17:
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  sub_2486B7650(a1, a2, a3);
  sub_24872CAD0();
  swift_bridgeObjectRelease();
  sub_24872C600();
  sub_24872C600();
  sub_248714E64(a1, a2, a3);
  sub_24872C600();
  swift_bridgeObjectRelease();
  sub_24872C600();
  sub_24872C600();
  sub_24872C600();
  sub_24872C600();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2486C5540(a1, a2, a3);
LABEL_18:
  sub_2486DE1C8(v57, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2486CB550);
  return 0x756C617620656854;
}

unint64_t sub_2486DDE5C(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v13 = *v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2486D75F8(v13, a4, a5, a6, (uint64_t)v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2486CB464((uint64_t)v26, (uint64_t)v41);
  sub_2486CB464((uint64_t)v41, (uint64_t)v42);
  if (sub_2486CB4CC((uint64_t)v42) == 1) {
    return 0;
  }
  sub_2486CB464((uint64_t)v41, (uint64_t)v25);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2486DE1C8(v41, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2486CB550);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_2486DD714(v13, a4, a5, a6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(void *)(v14 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  long long v15 = *(_OWORD *)(v14 + 176);
  long long v28 = *(_OWORD *)(v14 + 160);
  long long v29 = v15;
  long long v16 = *(_OWORD *)(v14 + 208);
  long long v30 = *(_OWORD *)(v14 + 192);
  long long v31 = v16;
  long long v17 = *(_OWORD *)(v14 + 112);
  *(_OWORD *)&v27[64] = *(_OWORD *)(v14 + 96);
  *(_OWORD *)&v27[80] = v17;
  long long v18 = *(_OWORD *)(v14 + 144);
  *(_OWORD *)&v27[96] = *(_OWORD *)(v14 + 128);
  *(_OWORD *)&v27[112] = v18;
  long long v19 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)(v14 + 32);
  *(_OWORD *)&v27[16] = v19;
  long long v20 = *(_OWORD *)(v14 + 80);
  *(_OWORD *)&v27[32] = *(_OWORD *)(v14 + 64);
  *(_OWORD *)&v27[48] = v20;
  sub_2486B76D8((uint64_t)v27);
  swift_bridgeObjectRelease();
  long long v36 = *(_OWORD *)&v27[72];
  long long v37 = *(_OWORD *)&v27[88];
  long long v38 = *(_OWORD *)&v27[104];
  uint64_t v39 = *(void *)&v27[120];
  long long v32 = *(_OWORD *)&v27[8];
  long long v33 = *(_OWORD *)&v27[24];
  long long v34 = *(_OWORD *)&v27[40];
  long long v35 = *(_OWORD *)&v27[56];
  long long v40 = *(_OWORD *)&v27[88];
  uint64_t v21 = *(void *)&v27[88] & 0xFFFFFFFFFFFFLL;
  if ((*(void *)&v27[96] & 0x2000000000000000) != 0) {
    uint64_t v21 = HIBYTE(*(void *)&v27[96]) & 0xFLL;
  }
  if (v21)
  {
    *(_OWORD *)long long v24 = v37;
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_24870BD14((uint64_t *)v27, v24);
    sub_2486CB438((uint64_t)&v40);
  }
  sub_2486C539C((uint64_t)v27);
  if (a3 <= 0xFDu)
  {
    v24[0] = sub_248714E64(a1, a2, a3);
    v24[1] = v23;
    sub_24872C600();
  }
  else
  {
    v24[0] = 60;
    v24[1] = 0xE100000000000000;
  }
  sub_24872C600();
  sub_24872C600();
  sub_24872C600();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v24[0];
}

void *sub_2486DE1C8(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23]);
  return a1;
}

unint64_t sub_2486DE23C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  if (a5)
  {
    sub_2486B77C8(result);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2486B77D8(a17, a18, a19);
    sub_2486B7830();
    return swift_retain();
  }
  return result;
}

void sub_2486DE338(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  int v11 = a5 & 1;
  unint64_t v268 = a1;
  MEMORY[0x24C57CE60]();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26931E320);
  uint64_t v13 = swift_dynamicCast();
  uint64_t v244 = a6;
  uint64_t v245 = a1;
  *(void *)&long long v243 = a3;
  if (v13)
  {
    *(void *)&long long v234 = v12;
    *(void *)&long long v235 = a2;
    uint64_t v14 = v271;
    *(void *)&long long v251 = v270;
    unint64_t v15 = v272;
    unint64_t v241 = v273;
    uint64_t v16 = v274;
    uint64_t v17 = v277;
    uint64_t v18 = v278;
    uint64_t v19 = v279;
    uint64_t v252 = v280;
    switch(v281)
    {
      case 0u:
        LOBYTE(v253) = v271;
        uint64_t v247 = v276;
        uint64_t v248 = v279;
        uint64_t v20 = v275;
        uint64_t v21 = swift_bridgeObjectRetain();
        sub_2486D5DE8(v21, (char *)&v253, (uint64_t *)v262);
        swift_bridgeObjectRelease();
        uint64_t v249 = v16;
        uint64_t v22 = v18;
        unint64_t v23 = sub_2486D0FDC(a4, v11);
        uint64_t v24 = v20;
        unint64_t v25 = v23;
        uint64_t v26 = v15;
        unint64_t v15 = v27;
        MEMORY[0x24C57CE50](v245);
        swift_bridgeObjectRelease();
        sub_2486DC870(v14, v26, v241, v249, v24, v247, v17, v22, v248, v252, 0);
        sub_2486B61F8((uint64_t)v262);
        MEMORY[0x24C57CE50](v268);
        uint64_t v28 = 0;
        *(void *)&long long v243 = 0;
        uint64_t v29 = 0;
        unint64_t v30 = 0;
        char v31 = 0;
        uint64_t v14 = v25;
        goto LABEL_128;
      case 1u:
        uint64_t v57 = v278;
        unsigned __int8 v58 = v276;
        uint64_t v59 = v275;
        uint64_t v60 = sub_2486B48A8();
        uint64_t v242 = v61;
        uint64_t v248 = v279;
        uint64_t v62 = v272;
        sub_2486DC6B0(v271, v272, v241, v274, v275, v276, v277, v278, v279, v252, 1);
        swift_bridgeObjectRetain();
        sub_2486C7F08(v60, v242, v271, v272, (uint64_t *)v262);
        *((void *)&v243 + 1) = *(void *)&v262[16];
        uint64_t v242 = sub_2486C718C();
        *(void *)&long long v240 = v159;
        MEMORY[0x24C57CE50](v245);
        swift_bridgeObjectRelease();
        sub_2486DC870(v14, v62, v241, v16, v59, v58, v17, v57, v248, v252, 1);
        sub_2486DC870(v14, v62, v241, v16, v59, v58, v17, v57, v248, v252, 1);
        swift_bridgeObjectRelease();
        MEMORY[0x24C57CE50](v268);
        uint64_t v28 = 0;
        *(void *)&long long v243 = 0;
        uint64_t v29 = 0;
        unint64_t v30 = 0;
        char v31 = 0;
        uint64_t v14 = v242;
        goto LABEL_78;
      case 2u:
        MEMORY[0x24C57CE50](v245);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_2486DC870(v271, v272, v241, v274, v275, v276, v277, v278, v279, v252, 2);
        MEMORY[0x24C57CE50](v268);
        uint64_t v28 = 0;
        *(void *)&long long v243 = 0;
        uint64_t v29 = 0;
        unint64_t v30 = 0;
        char v31 = 0;
        goto LABEL_128;
      case 0xFu:
        uint64_t v63 = v275 | v276 | v277;
        uint64_t v64 = v278 | v279 | v252;
        if (!(v241 | v272 | v271 | v274 | v63 | v64))
        {
          uint64_t v248 = v279;
          uint64_t v242 = v275;
          int64_t v160 = *(void *)(v251 + 16);
          uint64_t v161 = MEMORY[0x263F8EE78];
          uint64_t v249 = v274;
          uint64_t v250 = v278;
          uint64_t v247 = v276;
          if (v160)
          {
            v246 = (void *)v277;
            *(void *)&long long v240 = v272;
            uint64_t v236 = v271;
            uint64_t v267 = MEMORY[0x263F8EE78];
            swift_bridgeObjectRetain();
            sub_2486B9D40(0, v160, 0);
            int64_t v162 = v160 - 1;
            for (uint64_t i = v251 + 40; ; i += 16)
            {
              (*(void (**)(long long *__return_ptr))(*(void *)i + 16))(&v253);
              long long v263 = v259;
              long long v264 = v260;
              uint64_t v265 = v261;
              *(_OWORD *)&v262[32] = v255;
              *(_OWORD *)&v262[48] = v256;
              *(_OWORD *)&v262[64] = v257;
              *(_OWORD *)&v262[80] = v258;
              *(_OWORD *)v262 = v253;
              *(_OWORD *)&v262[16] = v254;
              long long v164 = v258;
              swift_bridgeObjectRetain();
              sub_2486BAFC4((uint64_t)v262);
              uint64_t v267 = v161;
              unint64_t v166 = *(void *)(v161 + 16);
              unint64_t v165 = *(void *)(v161 + 24);
              if (v166 >= v165 >> 1)
              {
                sub_2486B9D40((char *)(v165 > 1), v166 + 1, 1);
                uint64_t v161 = v267;
              }
              *(void *)(v161 + 16) = v166 + 1;
              *(_OWORD *)(v161 + 16 * v166 + 32) = v164;
              if (!v162) {
                break;
              }
              --v162;
            }
            uint64_t v13 = swift_bridgeObjectRelease();
            uint64_t v14 = v236;
            unint64_t v15 = v240;
            uint64_t v17 = (uint64_t)v246;
          }
          *(void *)v262 = v161;
          uint64_t v167 = *(void *)(v161 + 16);
          if (v167)
          {
            uint64_t v168 = v167 - 1;
            v169 = (void *)(v161 + 16 * v167 + 24);
            while (1)
            {
              uint64_t v170 = *(v169 - 1) & 0xFFFFFFFFFFFFLL;
              if ((*v169 & 0x2000000000000000) != 0) {
                uint64_t v170 = HIBYTE(*v169) & 0xFLL;
              }
              if (v170) {
                break;
              }
              v169 -= 2;
              if (--v168 == -1)
              {
                uint64_t v171 = v17;
                uint64_t v172 = v241;
                uint64_t v173 = v15;
                goto LABEL_73;
              }
            }
            uint64_t v171 = v17;
            uint64_t v172 = v241;
            uint64_t v173 = v15;
          }
          else
          {
            uint64_t v171 = v17;
            uint64_t v172 = v241;
            uint64_t v173 = v15;
          }
LABEL_73:
          MEMORY[0x270FA5388](v13);
          v231 = v262;
          v179 = sub_2486CAE44((void *(*)(uint64_t *__return_ptr, uint64_t *))sub_2486E0654, (uint64_t)&v229, v177, v178);
          unint64_t v181 = v180;
          swift_bridgeObjectRelease();
          unint64_t v182 = 0xD000000000000013;
          if (v181) {
            unint64_t v182 = (unint64_t)v179;
          }
          unint64_t v241 = v182;
          unint64_t v183 = 0x80000002487323C0;
          if (v181) {
            unint64_t v183 = v181;
          }
          *(void *)&long long v240 = v183;
          MEMORY[0x24C57CE50](v245);
          swift_bridgeObjectRelease();
          uint64_t v184 = v248;
          uint64_t v185 = v172;
          uint64_t v186 = v172;
          uint64_t v188 = v249;
          uint64_t v187 = v250;
          uint64_t v189 = v242;
          unsigned __int8 v190 = v247;
          sub_2486DC870(v14, v173, v186, v249, v242, v247, v171, v250, v248, v252, 15);
          sub_2486DC870(v14, v173, v185, v188, v189, v190, v171, v187, v184, v252, 15);
          MEMORY[0x24C57CE50](v268);
          uint64_t v28 = 0;
          *(void *)&long long v243 = 0;
          uint64_t v29 = 0;
          unint64_t v30 = 0;
          char v31 = 0;
          uint64_t v14 = v241;
LABEL_78:
          unint64_t v15 = v240;
          goto LABEL_128;
        }
        if (v271 == 1 && !(v241 | v272 | v274 | v63 | v64))
        {
          uint64_t v247 = v276;
          uint64_t v65 = v274;
          uint64_t v66 = v275;
          uint64_t v67 = swift_bridgeObjectRetain();
          sub_2486CCD6C(v67, (uint64_t)v262);
          unint64_t v68 = *(void *)&v262[16];
          v246 = (void *)v17;
          unint64_t v69 = *(void *)&v262[64];
          uint64_t v250 = v18;
          uint64_t v70 = v15;
          uint64_t v71 = v66;
          uint64_t v72 = *(void *)&v262[80];
          long long v239 = *(_OWORD *)v262;
          long long v240 = *(_OWORD *)&v262[32];
          long long v243 = *(_OWORD *)&v262[48];
          *(_OWORD *)&v262[8] = *(_OWORD *)v262;
          *(void *)v262 = 0;
          *(_OWORD *)&v262[24] = __PAIR128__(*(unint64_t *)&v262[24], v68);
          *(_OWORD *)&v262[40] = v240;
          *(_OWORD *)&v262[56] = v243;
          *(_OWORD *)&v262[72] = __PAIR128__(*(unint64_t *)&v262[72], v69);
          *(void *)&v262[88] = v72;
          uint64_t v73 = sub_2486CB6A0();
          uint64_t v242 = v74;
          MEMORY[0x24C57CE50](v245);
          swift_bridgeObjectRelease();
          sub_2486DC870(1, v70, v241, v65, v71, v247, (uint64_t)v246, v250, v19, v252, 15);
          uint64_t v14 = v73;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          MEMORY[0x24C57CE50](v268);
          uint64_t v28 = 0;
          *(void *)&long long v243 = 0;
          uint64_t v29 = 0;
          unint64_t v30 = 0;
          char v31 = 0;
          unint64_t v15 = v242;
LABEL_128:
          uint64_t v50 = v244;
          goto LABEL_129;
        }
LABEL_13:
        LODWORD(v238) = v11;
        v246 = (void *)v277;
        swift_bridgeObjectRetain();
        unint64_t v237 = a4;
        sub_2486DC6B0(v271, v272, v241, v274, v275, v276, v277, v278, v279, v252, v281);
        swift_bridgeObjectRelease();
        *(void *)&long long v239 = v281;
        uint64_t v55 = v278;
        uint64_t v248 = v279;
        uint64_t v56 = v252;
        long long v51 = (void *)v251;
        uint64_t v249 = v274;
        uint64_t v53 = v272;
        uint64_t v242 = v275;
        sub_2486DC870(v271, v272, v241, v274, v275, v276, v277, v278, v279, v252, v281);
        MEMORY[0x24C57CE50](v268);
        uint64_t v54 = v276;
        break;
      default:
        goto LABEL_13;
    }
LABEL_14:
    uint64_t v236 = v14;
    unint64_t v237 = a4;
    v246 = (void *)v17;
    uint64_t v247 = v54;
    uint64_t v250 = v55;
    *(void *)&long long v240 = v53;
    v262[0] = 0;
    uint64_t v75 = swift_bridgeObjectRetain();
    sub_2486D5DE8(v75, v262, (uint64_t *)&v253);
    swift_bridgeObjectRelease();
    uint64_t v76 = sub_2486D2D34();
    unint64_t v78 = v77;
    sub_2486B61F8((uint64_t)&v253);
    *(void *)&long long v233 = v76;
    unint64_t v268 = v76;
    unint64_t v269 = v78;
    int64_t v79 = v51[2];
    *(void *)&long long v251 = v51;
    uint64_t v252 = v56;
    if (v79)
    {
      *(void *)v262 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2486B9D40(0, v79, 0);
      uint64_t v80 = *(void *)v262;
      long long v81 = v51 + 5;
      do
      {
        uint64_t v82 = (*(uint64_t (**)(void))(*v81 + 24))();
        uint64_t v84 = v83;
        *(void *)v262 = v80;
        unint64_t v86 = *(void *)(v80 + 16);
        unint64_t v85 = *(void *)(v80 + 24);
        if (v86 >= v85 >> 1)
        {
          sub_2486B9D40((char *)(v85 > 1), v86 + 1, 1);
          uint64_t v80 = *(void *)v262;
        }
        *(void *)(v80 + 16) = v86 + 1;
        uint64_t v87 = v80 + 16 * v86;
        *(void *)(v87 + 32) = v82;
        *(void *)(v87 + 40) = v84;
        v81 += 2;
        --v79;
      }
      while (v79);
      long long v51 = (void *)v251;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v80 = MEMORY[0x263F8EE78];
    }
    *(void *)v262 = v80;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
    sub_2486D040C();
    sub_24872C4F0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v88 = sub_2486CAC4C(0, (uint64_t)v51);
    uint64_t v89 = sub_24870ACB4(v88);
    uint64_t v91 = v90;
    unsigned __int8 v93 = v92;
    unsigned int v94 = v92;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v94 <= 0xFD)
    {
      uint64_t v96 = HIBYTE(v78) & 0xF;
      if ((v78 & 0x2000000000000000) == 0) {
        uint64_t v96 = v233 & 0xFFFFFFFFFFFFLL;
      }
      uint64_t v95 = v236;
      if (v96) {
        sub_24872C600();
      }
      *(void *)v262 = 0;
      *(void *)&v262[8] = 0xE000000000000000;
      sub_24872CAD0();
      swift_bridgeObjectRelease();
      strcpy(v262, "  See '");
      *(void *)&v262[8] = 0xE700000000000000;
      sub_24872C600();
      swift_bridgeObjectRelease();
      sub_24872C600();
      sub_248714E64(v89, v91, v93);
      sub_2486C5540(v89, v91, v93);
      sub_24872C600();
      swift_bridgeObjectRelease();
      sub_24872C600();
      sub_24872C600();
    }
    else
    {
      uint64_t v95 = v236;
    }
    swift_bridgeObjectRelease();
    uint64_t v97 = v250;
    unint64_t v98 = (void *)v251;
    long long v99 = v246;
    char v100 = v238;
    if (v239 == 14)
    {
      uint64_t v102 = v240;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400D8);
      uint64_t v103 = swift_allocObject();
      *(_OWORD *)(v103 + 16) = xmmword_24872D630;
      *(void *)(v103 + 32) = sub_2486B48A8();
      *(void *)(v103 + 40) = v104;
      LOBYTE(v270) = 0;
      uint64_t v105 = v102;
      uint64_t v101 = v241;
      sub_2486DC6B0(v95, v105, v241, v249, v242, v247, (uint64_t)v99, v97, v248, v252, 14);
      sub_2486D5DE8(v103, (char *)&v270, (uint64_t *)v262);
      swift_bridgeObjectRelease();
      sub_2486D0FDC(v237, v100);
      sub_2486B61F8((uint64_t)v262);
      uint64_t v270 = 10;
      uint64_t v271 = 0xE100000000000000;
      sub_24872C600();
      swift_bridgeObjectRelease();
      unint64_t v238 = v270;
      *(void *)&long long v243 = v271;
    }
    else
    {
      uint64_t v101 = v241;
      if (v239 == 13)
      {
        uint64_t v270 = v95;
        sub_2486E059C(v95, v240, v241, v249, v242, v247, (uint64_t)v246, v250, v248, v252, 0xDu);
        MEMORY[0x24C57CE60](v95);
        if (swift_dynamicCast())
        {
          swift_bridgeObjectRelease();
          *(void *)&long long v251 = *(void *)v262;
          unint64_t v238 = v268;
          *(void *)&long long v239 = *(void *)&v262[8];
          *(void *)&long long v243 = v269;
          MEMORY[0x24C57CE50](v245);
          sub_2486E05F4(v95, v240, v241, v249, v242, v247, (uint64_t)v246, v250, v248, v252, 0xDu);
          uint64_t v28 = v238;
          sub_2486E05F4(v95, v240, v241, v249, v242, v247, (uint64_t)v246, v250, v248, v252, 0xDu);
          MEMORY[0x24C57CE50](v270);
          uint64_t v29 = 0;
          char v31 = 1;
          unint64_t v30 = 0xE000000000000000;
LABEL_32:
          uint64_t v14 = v251;
LABEL_127:
          unint64_t v15 = v239;
          goto LABEL_128;
        }
        MEMORY[0x24C57CE50](v270);
        uint64_t v267 = v95;
        MEMORY[0x24C57CE60](v95);
        if (!swift_dynamicCast())
        {
          swift_bridgeObjectRelease();
          MEMORY[0x24C57CE50](v267);
          *(void *)v262 = v95;
          MEMORY[0x24C57CE60](v95);
          if (swift_dynamicCast())
          {
            swift_bridgeObjectRelease();
            unint64_t v238 = v270;
            MEMORY[0x24C57CE50](v245);
            sub_2486E05F4(v95, v240, v241, v249, v242, v247, (uint64_t)v246, v250, v248, v252, 0xDu);
            uint64_t v28 = v238;
            sub_2486E05F4(v95, v240, v241, v249, v242, v247, (uint64_t)v246, v250, v248, v252, 0xDu);
            MEMORY[0x24C57CE50](*(void *)v262);
            uint64_t v14 = 0;
            *(void *)&long long v243 = 0;
            uint64_t v29 = 0;
            unint64_t v30 = 0;
            char v31 = 2;
            unint64_t v15 = 0xE000000000000000;
            goto LABEL_128;
          }
          MEMORY[0x24C57CE50](*(void *)v262);
          uint64_t v267 = v95;
          MEMORY[0x24C57CE60](v95);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26931E328);
          if (swift_dynamicCast())
          {
            sub_2486B7680((long long *)v262, (uint64_t)&v270);
            __swift_project_boxed_opaque_existential_1(&v270, v273);
            sub_24872C3F0();
            uint64_t v175 = v174;
            swift_bridgeObjectRelease();
            unint64_t v98 = (void *)v252;
            if (v175)
            {
              __swift_project_boxed_opaque_existential_1(&v270, v273);
              *(void *)&long long v239 = sub_24872C3F0();
              *(void *)&long long v251 = v176;
              if (v176)
              {
                swift_bridgeObjectRelease();
                MEMORY[0x24C57CE50](v245);
                sub_2486E05F4(v95, v240, v241, v249, v242, v247, (uint64_t)v246, v250, v248, v252, 0xDu);
                sub_2486E05F4(v95, v240, v241, v249, v242, v247, (uint64_t)v246, v250, v248, v252, 0xDu);
                __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v270);
                MEMORY[0x24C57CE50](v267);
                *(void *)&long long v243 = 0;
                uint64_t v29 = 0;
                unint64_t v30 = 0;
                char v31 = 2;
                uint64_t v28 = 1;
                uint64_t v14 = v239;
                unint64_t v15 = v251;
                goto LABEL_128;
              }
LABEL_133:
              sub_2486E05F4(v95, v240, v241, v249, v242, v247, (uint64_t)v246, v250, v248, (uint64_t)v98, 0xDu);
              __break(1u);
              JUMPOUT(0x2486E0314);
            }
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v270);
          }
          else
          {
            swift_bridgeObjectRelease();
            unint64_t v98 = (void *)v252;
          }
          MEMORY[0x24C57CE50](v267);
          swift_getErrorValue();
          swift_getDynamicType();
          sub_2486E0614();
          if (swift_dynamicCastMetatype())
          {
            swift_getErrorValue();
            uint64_t v220 = sub_24872CFB0();
          }
          else
          {
            *(void *)v262 = v95;
            MEMORY[0x24C57CE60](v95);
            uint64_t v220 = sub_24872C540();
          }
          *(void *)&long long v251 = v220;
          *(void *)&long long v239 = v221;
          MEMORY[0x24C57CE50](v245);
          sub_2486E05F4(v95, v240, v241, v249, v242, v247, (uint64_t)v246, v250, v248, (uint64_t)v98, 0xDu);
          sub_2486E05F4(v95, v240, v241, v249, v242, v247, (uint64_t)v246, v250, v248, (uint64_t)v98, 0xDu);
          *(void *)&long long v243 = 0;
          uint64_t v29 = 0;
          unint64_t v30 = 0;
          char v31 = 2;
          uint64_t v28 = 1;
          goto LABEL_32;
        }
        swift_bridgeObjectRelease();
        uint64_t v147 = v270;
        uint64_t v146 = v271;
        uint64_t v148 = v245;
        uint64_t v149 = (uint64_t)v246;
        if ((_BYTE)v272)
        {
          uint64_t v150 = v251;
          if (v272 == 1)
          {
            MEMORY[0x24C57CE50](v245);
            *(void *)&long long v239 = v146;
            unint64_t v238 = v147;
            sub_2486E05F4(v236, v240, v241, v249, v242, v247, (uint64_t)v246, v250, v248, v252, 0xDu);
            swift_bridgeObjectRelease();
            LOBYTE(v231) = 13;
            uint64_t v229 = v248;
            uint64_t v230 = v252;
            uint64_t v151 = v236;
            uint64_t v152 = v240;
            uint64_t v153 = v241;
            uint64_t v154 = v249;
            uint64_t v155 = v242;
            unsigned __int8 v156 = v247;
            uint64_t v157 = (uint64_t)v246;
            uint64_t v158 = v250;
LABEL_118:
            sub_2486E05F4(v151, v152, v153, v154, v155, v156, v157, v158, v229, v230, v231);
LABEL_126:
            MEMORY[0x24C57CE50](v267);
            uint64_t v28 = 0;
            *(void *)&long long v243 = 0;
            uint64_t v29 = 0;
            unint64_t v30 = 0;
            char v31 = 0;
            uint64_t v14 = v238;
            goto LABEL_127;
          }
          if (!v270)
          {
            unint64_t v98 = (void *)v252;
LABEL_125:
            sub_2486CCD6C(v150, (uint64_t)v262);
            uint64_t v226 = *(void *)&v262[24];
            uint64_t v232 = *(void *)&v262[16];
            unint64_t v237 = *(void *)&v262[64];
            *(void *)&long long v251 = *(void *)&v262[80];
            long long v233 = *(_OWORD *)v262;
            long long v234 = *(_OWORD *)&v262[32];
            long long v235 = *(_OWORD *)&v262[48];
            *(_OWORD *)&v262[8] = *(_OWORD *)v262;
            *(void *)v262 = 0;
            *(void *)&v262[24] = v232;
            *(void *)&v262[32] = v226;
            *(_OWORD *)&v262[40] = v234;
            *(_OWORD *)&v262[56] = v235;
            *(_OWORD *)&v262[72] = __PAIR128__(*(unint64_t *)&v262[72], v237);
            *(void *)&v262[88] = v251;
            unint64_t v238 = sub_2486CB6A0();
            *(void *)&long long v239 = v227;
            MEMORY[0x24C57CE50](v148);
            sub_2486E05F4(v236, v240, v101, v249, v242, v247, (uint64_t)v246, v250, v248, (uint64_t)v98, 0xDu);
            sub_2486E05F4(v236, v240, v241, v249, v242, v247, (uint64_t)v246, v250, v248, (uint64_t)v98, 0xDu);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_126;
          }
          swift_bridgeObjectRelease();
          uint64_t v205 = sub_2486B48A8();
          long long v99 = sub_248706204(v205, v206);
          uint64_t v95 = v207;
          *(void *)&long long v243 = v208;
          unint64_t v209 = sub_2486E0C40((uint64_t)v99, v147);
          unint64_t v210 = v209;
          unint64_t v98 = (void *)v252;
          if (v209 >> 62)
          {
            uint64_t v101 = sub_24872CC60();
            if (v101)
            {
LABEL_94:
              *(void *)&long long v239 = v95;
              *(void *)v262 = MEMORY[0x263F8EE78];
              sub_2486B9DF0(0, v101 & ~(v101 >> 63), 0);
              if ((v101 & 0x8000000000000000) == 0)
              {
                uint64_t v211 = 0;
                uint64_t v212 = *(void *)v262;
                do
                {
                  if ((v210 & 0xC000000000000001) != 0) {
                    uint64_t v213 = MEMORY[0x24C57C5F0](v211, v210);
                  }
                  else {
                    uint64_t v213 = swift_retain();
                  }
                  long long v251 = *(_OWORD *)(v213 + 16);
                  swift_release();
                  uint64_t v214 = v212;
                  *(void *)v262 = v212;
                  unint64_t v216 = *(void *)(v212 + 16);
                  unint64_t v215 = *(void *)(v212 + 24);
                  if (v216 >= v215 >> 1)
                  {
                    sub_2486B9DF0((char *)(v215 > 1), v216 + 1, 1);
                    uint64_t v214 = *(void *)v262;
                  }
                  ++v211;
                  *(void *)(v214 + 16) = v216 + 1;
                  uint64_t v212 = v214;
                  *(_OWORD *)(v214 + 16 * v216 + 32) = v251;
                }
                while (v101 != v211);
                swift_bridgeObjectRelease();
                uint64_t v148 = v245;
                uint64_t v218 = v212;
                goto LABEL_121;
              }
              goto LABEL_131;
            }
          }
          else
          {
            uint64_t v101 = *(void *)((v209 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v101) {
              goto LABEL_94;
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v218 = MEMORY[0x263F8EE78];
LABEL_121:
          uint64_t v101 = v241;
          if (*(void *)(v218 + 16))
          {
            uint64_t v224 = v218;
          }
          else
          {
            swift_bridgeObjectRelease();
            __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400D8);
            uint64_t v225 = swift_allocObject();
            *(_OWORD *)(v225 + 16) = xmmword_24872D630;
            uint64_t v224 = v225;
            *(_OWORD *)(v225 + 32) = *((_OWORD *)v99 + 1);
          }
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v150 = v224;
          goto LABEL_125;
        }
        uint64_t v191 = v251;
        if (!v270)
        {
          uint64_t v219 = v250;
          uint64_t v95 = v252;
LABEL_117:
          v266[0] = 0;
          sub_2486D5DE8(v191, v266, (uint64_t *)v262);
          swift_bridgeObjectRelease();
          unint64_t v238 = sub_2486D0FDC(v237, v238);
          *(void *)&long long v239 = v223;
          MEMORY[0x24C57CE50](v148);
          sub_2486E05F4(v236, v240, v241, v249, v242, v247, v149, v219, v248, v95, 0xDu);
          sub_2486B61F8((uint64_t)v262);
          LOBYTE(v231) = 13;
          uint64_t v229 = v248;
          uint64_t v230 = v95;
          uint64_t v151 = v236;
          uint64_t v152 = v240;
          uint64_t v153 = v241;
          uint64_t v154 = v249;
          uint64_t v155 = v242;
          unsigned __int8 v156 = v247;
          uint64_t v157 = v149;
          uint64_t v158 = v219;
          goto LABEL_118;
        }
        swift_bridgeObjectRelease();
        uint64_t v192 = sub_2486B48A8();
        unint64_t v98 = sub_248706204(v192, v193);
        uint64_t v195 = v194;
        *(void *)&long long v243 = v196;
        unint64_t v197 = sub_2486E0C40((uint64_t)v98, v147);
        unint64_t v198 = v197;
        uint64_t v95 = v252;
        if (v197 >> 62)
        {
          uint64_t v101 = sub_24872CC60();
          if (v101) {
            goto LABEL_82;
          }
        }
        else
        {
          uint64_t v101 = *(void *)((v197 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v101)
          {
LABEL_82:
            *(void *)&long long v239 = v195;
            long long v99 = (void *)v252;
            *(void *)v262 = MEMORY[0x263F8EE78];
            sub_2486B9DF0(0, v101 & ~(v101 >> 63), 0);
            if (v101 < 0)
            {
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              swift_bridgeObjectRelease();
              sub_2486E05F4(v95, v240, v101, v249, v242, v247, (uint64_t)v99, v250, v248, v252, v239);
              __break(1u);
              goto LABEL_133;
            }
            uint64_t v199 = 0;
            uint64_t v200 = *(void *)v262;
            do
            {
              if ((v198 & 0xC000000000000001) != 0) {
                uint64_t v201 = MEMORY[0x24C57C5F0](v199, v198);
              }
              else {
                uint64_t v201 = swift_retain();
              }
              long long v251 = *(_OWORD *)(v201 + 16);
              swift_release();
              uint64_t v202 = v200;
              *(void *)v262 = v200;
              unint64_t v204 = *(void *)(v200 + 16);
              unint64_t v203 = *(void *)(v200 + 24);
              if (v204 >= v203 >> 1)
              {
                sub_2486B9DF0((char *)(v203 > 1), v204 + 1, 1);
                uint64_t v202 = *(void *)v262;
              }
              ++v199;
              *(void *)(v202 + 16) = v204 + 1;
              uint64_t v200 = v202;
              *(_OWORD *)(v202 + 16 * v204 + 32) = v251;
              uint64_t v149 = (uint64_t)v246;
            }
            while (v101 != v199);
            swift_bridgeObjectRelease();
            uint64_t v148 = v245;
            uint64_t v217 = v200;
            goto LABEL_113;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v217 = MEMORY[0x263F8EE78];
LABEL_113:
        if (*(void *)(v217 + 16))
        {
          uint64_t v191 = v217;
        }
        else
        {
          swift_bridgeObjectRelease();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400D8);
          uint64_t v222 = swift_allocObject();
          *(_OWORD *)(v222 + 16) = xmmword_24872D630;
          uint64_t v191 = v222;
          *(_OWORD *)(v222 + 32) = *((_OWORD *)v98 + 1);
        }
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v219 = v250;
        goto LABEL_117;
      }
      unint64_t v106 = v269;
      unint64_t v238 = v268;
      sub_2486E059C(v95, v240, v241, v249, v242, v247, (uint64_t)v246, v250, v248, v252, v239);
      *(void *)&long long v243 = v106;
      swift_bridgeObjectRetain();
    }
    uint64_t v107 = v98[2];
    if (v107)
    {
      unint64_t v108 = &v98[2 * v107];
      uint64_t v109 = v108[2];
      uint64_t v110 = v108[3];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v111 = *(void *)(v110 + 8);
      LOBYTE(v270) = 0;
      *(void *)&long long v233 = sub_2486B583C(v109, v111, (unsigned __int8 *)&v270, 0, 0, 0);
      *(void *)&long long v251 = v112;
      *(void *)&long long v234 = sub_2486B4DD4();
      uint64_t v113 = swift_allocError();
      uint64_t v114 = v240;
      *(void *)uint64_t v115 = v95;
      *(void *)(v115 + 8) = v114;
      uint64_t v117 = v248;
      uint64_t v116 = v249;
      *(void *)(v115 + 16) = v101;
      *(void *)(v115 + 24) = v116;
      uint64_t v118 = v116;
      uint64_t v249 = v116;
      uint64_t v119 = v242;
      uint64_t v120 = v247;
      *(void *)(v115 + 32) = v242;
      *(void *)(v115 + 40) = v120;
      uint64_t v121 = v250;
      *(void *)(v115 + 48) = v99;
      *(void *)(v115 + 56) = v121;
      uint64_t v122 = (uint64_t)v99;
      uint64_t v123 = v252;
      *(void *)(v115 + 64) = v117;
      *(void *)(v115 + 72) = v123;
      uint64_t v124 = v239;
      *(unsigned char *)(v115 + 80) = v239;
      sub_2486DC6B0(v95, v114, v101, v118, v119, v120, v122, v121, v117, v123, v124);
      unint64_t v125 = sub_2486D8D08(v113);
      uint64_t v126 = v123;
      unint64_t v128 = v127;
      MEMORY[0x24C57CE50](v113);
      if (v128) {
        unint64_t v129 = v125;
      }
      else {
        unint64_t v129 = 0;
      }
      unint64_t v237 = v129;
      unint64_t v130 = 0xE000000000000000;
      if (v128) {
        unint64_t v130 = v128;
      }
      *(void *)&long long v235 = v130;
      uint64_t v131 = swift_allocError();
      uint64_t v132 = v240;
      *(void *)uint64_t v133 = v95;
      *(void *)(v133 + 8) = v132;
      uint64_t v134 = v249;
      uint64_t v135 = v250;
      *(void *)(v133 + 16) = v101;
      *(void *)(v133 + 24) = v134;
      uint64_t v136 = v242;
      *(void *)(v133 + 32) = v242;
      *(void *)(v133 + 40) = v120;
      unsigned __int8 v137 = v120;
      uint64_t v138 = (uint64_t)v246;
      *(void *)(v133 + 48) = v246;
      *(void *)(v133 + 56) = v135;
      *(void *)(v133 + 64) = v117;
      *(void *)(v133 + 72) = v126;
      *(unsigned char *)(v133 + 80) = v124;
      LOBYTE(v231) = v124;
      unsigned __int8 v139 = v124;
      *(void *)&long long v239 = v124;
      uint64_t v248 = v117;
      unsigned __int8 v140 = v137;
      sub_2486DC6B0(v95, v132, v101, v134, v136, v137, v138, v135, v117, v126, (char)v231);
      unint64_t v141 = sub_2486D990C(v131);
      unint64_t v143 = v142;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      MEMORY[0x24C57CE50](v131);
      if (v143) {
        unint64_t v144 = v141;
      }
      else {
        unint64_t v144 = 0;
      }
      *(void *)&long long v251 = v144;
      unint64_t v145 = 0xE000000000000000;
      if (v143) {
        unint64_t v145 = v143;
      }
      *(void *)&long long v234 = v145;
      MEMORY[0x24C57CE50](v245);
      sub_2486E05F4(v236, v240, v101, v249, v242, v140, (uint64_t)v246, v250, v117, v252, v139);
      uint64_t v29 = v251;
      unint64_t v30 = v234;
      sub_2486E05F4(v236, v240, v101, v249, v242, v140, (uint64_t)v246, v250, v248, v252, v239);
      char v31 = 1;
      uint64_t v14 = v237;
      uint64_t v28 = v238;
      unint64_t v15 = v235;
      goto LABEL_128;
    }
    goto LABEL_132;
  }
  LODWORD(v238) = v11;
  MEMORY[0x24C57CE50](v268);
  uint64_t v270 = a1;
  MEMORY[0x24C57CE60](a1);
  if (!swift_dynamicCast())
  {
    *(void *)&long long v234 = v12;
    MEMORY[0x24C57CE50](v270);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400D8);
    long long v51 = (void *)swift_allocObject();
    *((_OWORD *)v51 + 1) = xmmword_24872D630;
    *(void *)&long long v235 = a2;
    v51[4] = sub_2486B48A8();
    v51[5] = v52;
    MEMORY[0x24C57CE60](a1);
    uint64_t v53 = 0;
    unint64_t v241 = 0;
    uint64_t v242 = 0;
    uint64_t v248 = 0;
    uint64_t v249 = 0;
    uint64_t v54 = 0;
    uint64_t v17 = 0;
    uint64_t v55 = 0;
    uint64_t v56 = 0;
    *(void *)&long long v239 = 13;
    uint64_t v14 = a1;
    goto LABEL_14;
  }
  uint64_t v32 = *(void *)&v262[8];
  uint64_t v33 = *(void *)&v262[24];
  uint64_t v249 = *(void *)&v262[16];
  uint64_t v250 = *(void *)v262;
  unint64_t v237 = a4;
  uint64_t v248 = *(void *)&v262[40];
  uint64_t v34 = *(void *)&v262[32];
  uint64_t v36 = *(void *)&v262[56];
  uint64_t v35 = *(void *)&v262[48];
  uint64_t v37 = a2;
  uint64_t v252 = *(void *)&v262[72];
  uint64_t v38 = *(void *)&v262[64];
  LODWORD(v251) = v262[80];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400D8);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_24872D630;
  *(void *)(v39 + 32) = sub_2486B48A8();
  *(void *)(v39 + 40) = v40;
  sub_2486BAF70();
  v246 = (void *)v38;
  uint64_t v247 = swift_allocError();
  *(void *)uint64_t v41 = v39;
  uint64_t v42 = v249;
  uint64_t v43 = v250;
  *(void *)(v41 + 8) = v250;
  *(void *)(v41 + 16) = v32;
  *(void *)(v41 + 24) = v42;
  *(void *)(v41 + 32) = v33;
  uint64_t v44 = v34;
  uint64_t v45 = v248;
  *(void *)(v41 + 40) = v34;
  *(void *)(v41 + 48) = v45;
  *(_OWORD *)(v41 + 56) = __PAIR128__(v36, v35);
  uint64_t v46 = v252;
  *(void *)(v41 + 72) = v38;
  *(void *)(v41 + 80) = v46;
  char v47 = v251;
  *(unsigned char *)(v41 + 88) = v251;
  uint64_t v229 = v38;
  uint64_t v48 = v42;
  uint64_t v49 = v44;
  sub_2486DC6B0(v43, v32, v42, v33, v44, v45, v35, v36, v229, v46, v47);
  sub_2486DE338(&v253, v247, v37, v243, v237, v238);
  MEMORY[0x24C57CE50](v245);
  uint64_t v50 = v244;
  sub_2486DC870(v43, v32, v48, v33, v49, v45, v35, v36, (uint64_t)v246, v252, v251);
  unint64_t v15 = *((void *)&v253 + 1);
  uint64_t v14 = v253;
  *(void *)&long long v243 = *((void *)&v254 + 1);
  uint64_t v28 = v254;
  unint64_t v30 = *((void *)&v255 + 1);
  uint64_t v29 = v255;
  char v31 = v256;
  MEMORY[0x24C57CE50](v270);
LABEL_129:
  *(void *)uint64_t v50 = v14;
  *(void *)(v50 + 8) = v15;
  uint64_t v228 = v243;
  *(void *)(v50 + 16) = v28;
  *(void *)(v50 + 24) = v228;
  *(void *)(v50 + 32) = v29;
  *(void *)(v50 + 40) = v30;
  *(unsigned char *)(v50 + 48) = v31;
}

uint64_t sub_2486E0354(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  unint64_t v4 = v2[1];
  if (*((unsigned char *)v2 + 48))
  {
    if (*((unsigned char *)v2 + 48) == 1)
    {
      unint64_t v7 = v2[5];
      uint64_t v8 = HIBYTE(v7) & 0xF;
      if ((v7 & 0x2000000000000000) == 0) {
        uint64_t v8 = v2[4] & 0xFFFFFFFFFFFFLL;
      }
      if (v8)
      {
        sub_24872C600();
        sub_24872C600();
      }
      uint64_t v10 = HIBYTE(v4) & 0xF;
      if ((v4 & 0x2000000000000000) == 0) {
        uint64_t v10 = v3 & 0xFFFFFFFFFFFFLL;
      }
      if (v10)
      {
        uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
        sub_24872C600();
        sub_24872C600();
        sub_24872C600();
        uint64_t v10 = v13;
      }
      uint64_t v12 = v10;
      swift_bridgeObjectRetain();
      sub_24872C600();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24872C600();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v9 = HIBYTE(v4) & 0xF;
      if ((v4 & 0x2000000000000000) == 0) {
        uint64_t v9 = v3 & 0xFFFFFFFFFFFFLL;
      }
      if (!v9) {
        return 0;
      }
      uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
      sub_24872C600();
      sub_24872C600();
    }
    return v12;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v3;
}

unint64_t *sub_2486E0558@<X0>(unint64_t *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  unint64_t v3 = *result;
  if ((*result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v3 < *(void *)(*(void *)a2 + 16))
  {
    uint64_t v4 = *(void *)a2 + 16 * v3;
    uint64_t v5 = *(void *)(v4 + 40);
    *a3 = *(void *)(v4 + 32);
    a3[1] = v5;
    return (unint64_t *)swift_bridgeObjectRetain();
  }
  __break(1u);
  return result;
}

void sub_2486E059C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11)
{
  if (a11 != 255) {
    sub_2486DC6B0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  }
}

void sub_2486E05F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11)
{
  if (a11 != 255) {
    sub_2486DC870(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  }
}

unint64_t sub_2486E0614()
{
  unint64_t result = qword_26931E330;
  if (!qword_26931E330)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26931E330);
  }
  return result;
}

unint64_t *sub_2486E0654@<X0>(unint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_2486E0558(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_2486E0674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_getAssociatedTypeWitness();
  uint64_t v17 = sub_24872C450();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, v3, a1);
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  uint64_t v15 = a3;
  uint64_t v16 = &v17;
  uint64_t v10 = sub_24872C730();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_2486E07AC(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v11 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, a1, AssociatedTypeWitness);
  sub_24872C880();
  char v9 = sub_24872C870();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, AssociatedTypeWitness);
  return v9 & 1;
}

uint64_t sub_2486E090C(uint64_t a1)
{
  return sub_2486E07AC(a1) & 1;
}

uint64_t sub_2486E0934()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_2486E09E0()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 88));
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2486E0A88()
{
  sub_2486E09E0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Tree()
{
  return __swift_instantiateGenericMetadata();
}

BOOL sub_2486E0AF8(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t sub_2486E0B04()
{
  return sub_24872D040();
}

uint64_t sub_2486E0B30()
{
  return sub_24872D070();
}

uint64_t sub_2486E0B78()
{
  return sub_2486E0B30();
}

uint64_t sub_2486E0B9C()
{
  return sub_2486E0B04();
}

uint64_t sub_2486E0BC0()
{
  return sub_24872D070();
}

BOOL sub_2486E0C00(uint64_t *a1, uint64_t *a2)
{
  return sub_2486E0AF8(*a1, *a2);
}

uint64_t sub_2486E0C24()
{
  return swift_getWitnessTable();
}

uint64_t sub_2486E0C40(uint64_t a1, uint64_t a2)
{
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0) {
    goto LABEL_108;
  }
LABEL_2:
  unint64_t v3 = MEMORY[0x263F8EE88];
LABEL_3:
  unint64_t v72 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E338);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_24872DF80;
  *(void *)(v4 + 32) = a1;
  uint64_t v66 = v4;
  sub_24872C7A0();
  unint64_t v5 = v66;
  unint64_t v71 = v66;
  uint64_t v6 = sub_2486D0A8C(MEMORY[0x263F8EE78]);
  swift_retain();
  uint64_t v7 = 0;
  while (1)
  {
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_24872CC60();
      swift_bridgeObjectRelease();
      if (v8 < v7)
      {
LABEL_111:
        __break(1u);
LABEL_112:
        __break(1u);
LABEL_113:
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B1401A0);
        uint64_t result = sub_24872CFA0();
        __break(1u);
        return result;
      }
      swift_bridgeObjectRetain();
      uint64_t v52 = sub_24872CC60();
      swift_bridgeObjectRelease();
      if (v52 < v7) {
        goto LABEL_112;
      }
      swift_bridgeObjectRetain();
      a1 = sub_24872CC60();
      swift_bridgeObjectRelease();
      if (a1 < v8) {
        goto LABEL_103;
      }
    }
    else
    {
      uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      a1 = v8;
      if (v8 < (unint64_t)v7) {
        goto LABEL_102;
      }
    }
    if (v8 < 0) {
      goto LABEL_104;
    }
    if ((v5 & 0xC000000000000001) != 0 && v7 != v8)
    {
      if (v7 >= (unint64_t)v8) {
        goto LABEL_107;
      }
      uint64_t v9 = v7;
      do
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B1401A0);
        sub_24872CB00();
        ++v9;
      }
      while (v8 != v9);
    }
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      a1 = sub_24872CC70();
      uint64_t v10 = v13;
      int64_t v12 = v14;
      unint64_t v11 = v15;
      swift_bridgeObjectRelease();
    }
    else
    {
      a1 = v5 & 0xFFFFFFFFFFFFFF8;
      uint64_t v10 = (v5 & 0xFFFFFFFFFFFFFF8) + 32;
      unint64_t v11 = (2 * v8) | 1;
      swift_bridgeObjectRetain();
      int64_t v12 = v7;
    }
    if (v12 == v11 >> 1)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v53 = MEMORY[0x263F8EE78];
      goto LABEL_95;
    }
    if (v12 >= (uint64_t)(v11 >> 1)) {
      goto LABEL_105;
    }
    uint64_t v16 = *(void *)(v10 + 8 * v12);
    swift_retain();
    swift_unknownObjectRelease();
    BOOL v17 = __OFADD__(v7++, 1);
    if (v17)
    {
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      if (!sub_24872CC60()) {
        goto LABEL_2;
      }
      unint64_t v3 = sub_2486E243C(MEMORY[0x263F8EE78]);
      goto LABEL_3;
    }
    if (*(void *)(v16 + 16) == a2) {
      break;
    }
    swift_retain();
    sub_248712CB0(&v66, v16);
    swift_release();
    swift_beginAccess();
    uint64_t v62 = v16;
    a1 = *(void *)(v16 + 40);
    if ((unint64_t)a1 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v18 = sub_24872CC60();
      swift_bridgeObjectRelease();
      if (!v18) {
        goto LABEL_92;
      }
LABEL_23:
      unint64_t v19 = 0;
      unint64_t v20 = v72;
      unint64_t v64 = v72 & 0xC000000000000001;
      unint64_t v65 = a1 & 0xC000000000000001;
      uint64_t v59 = v7;
      uint64_t v60 = a1 + 32;
      uint64_t v61 = a1 & 0xFFFFFFFFFFFFFF8;
      unint64_t v63 = v72 + 56;
      while (2)
      {
        while (2)
        {
          if (v65)
          {
            uint64_t v21 = MEMORY[0x24C57C5F0](v19, a1);
            BOOL v17 = __OFADD__(v19++, 1);
            if (v17) {
              goto LABEL_96;
            }
          }
          else
          {
            if (v19 >= *(void *)(v61 + 16)) {
              goto LABEL_99;
            }
            uint64_t v21 = *(void *)(v60 + 8 * v19);
            swift_retain();
            BOOL v17 = __OFADD__(v19++, 1);
            if (v17)
            {
LABEL_96:
              __break(1u);
LABEL_97:
              __break(1u);
              goto LABEL_98;
            }
          }
          if (v64)
          {
            swift_bridgeObjectRetain();
            swift_retain();
            char v22 = sub_24872CA30();
            swift_bridgeObjectRelease();
            swift_release();
            if (v22) {
              goto LABEL_24;
            }
          }
          else if (*(void *)(v20 + 16))
          {
            sub_24872D030();
            sub_24872D040();
            uint64_t v23 = sub_24872D070();
            uint64_t v24 = -1 << *(unsigned char *)(v20 + 32);
            unint64_t v25 = v23 & ~v24;
            if ((*(void *)(v63 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25))
            {
              uint64_t v26 = *(void *)(v20 + 48);
              if (*(void *)(v26 + 8 * v25) == v21)
              {
LABEL_24:
                swift_release();
                if (v19 == v18) {
                  goto LABEL_4;
                }
                continue;
              }
              uint64_t v27 = ~v24;
              while (1)
              {
                unint64_t v25 = (v25 + 1) & v27;
                if (((*(void *)(v63 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
                  break;
                }
                if (*(void *)(v26 + 8 * v25) == v21) {
                  goto LABEL_24;
                }
              }
            }
          }
          break;
        }
        uint64_t v28 = a1;
        unint64_t v29 = v71;
        if (!(v71 >> 62))
        {
          a1 = *(void *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (a1) {
            goto LABEL_43;
          }
LABEL_52:
          swift_bridgeObjectRelease();
          uint64_t v32 = swift_retain();
          MEMORY[0x24C57C270](v32);
          if (*(void *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_24872C7B0();
          }
          sub_24872C7E0();
          sub_24872C7A0();
          if ((v6 & 0xC000000000000001) != 0)
          {
LABEL_55:
            if (v6 < 0) {
              uint64_t v33 = v6;
            }
            else {
              uint64_t v33 = v6 & 0xFFFFFFFFFFFFFF8;
            }
            swift_retain();
            uint64_t v34 = sub_24872CA00();
            if (__OFADD__(v34, 1)) {
              goto LABEL_100;
            }
            uint64_t v6 = sub_2486E1800(v33, v34 + 1);
            goto LABEL_73;
          }
LABEL_72:
          swift_retain();
LABEL_73:
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v66 = v6;
          unint64_t v42 = sub_2487106F4(v21);
          uint64_t v43 = *(void *)(v6 + 16);
          BOOL v44 = (v41 & 1) == 0;
          uint64_t v45 = v43 + v44;
          if (__OFADD__(v43, v44)) {
            goto LABEL_97;
          }
          a1 = v41;
          if (*(void *)(v6 + 24) >= v45)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_248710ABC();
            }
          }
          else
          {
            sub_248711504(v45, isUniquelyReferenced_nonNull_native);
            unint64_t v46 = sub_2487106F4(v21);
            if ((a1 & 1) != (v47 & 1)) {
              goto LABEL_113;
            }
            unint64_t v42 = v46;
          }
          uint64_t v6 = v66;
          uint64_t v48 = 8 * v42;
          if (a1)
          {
            uint64_t v49 = *(void *)(v66 + 56);
            swift_release();
            *(void *)(v49 + v48) = v62;
          }
          else
          {
            *(void *)(v66 + 8 * (v42 >> 6) + 64) |= 1 << v42;
            *(void *)(*(void *)(v6 + 48) + 8 * v42) = v21;
            *(void *)(*(void *)(v6 + 56) + 8 * v42) = v62;
            uint64_t v50 = *(void *)(v6 + 16);
            BOOL v17 = __OFADD__(v50, 1);
            uint64_t v51 = v50 + 1;
            if (v17) {
              goto LABEL_101;
            }
            *(void *)(v6 + 16) = v51;
            swift_retain();
          }
          swift_release();
          swift_bridgeObjectRelease();
          a1 = v28;
          if (v19 == v18)
          {
LABEL_4:
            swift_release();
            uint64_t v7 = v59;
            goto LABEL_5;
          }
          continue;
        }
        break;
      }
      swift_bridgeObjectRetain();
      a1 = sub_24872CC60();
      if (!a1) {
        goto LABEL_52;
      }
LABEL_43:
      if ((v29 & 0xC000000000000001) != 0)
      {
        uint64_t v35 = MEMORY[0x24C57C5F0](0, v29);
        swift_unknownObjectRelease();
        if (v35 != v21)
        {
          if (a1 == 1) {
            goto LABEL_52;
          }
          uint64_t v36 = MEMORY[0x24C57C5F0](1, v29);
          swift_unknownObjectRelease();
          if (v36 != v21)
          {
            if (a1 == 2) {
              goto LABEL_52;
            }
            uint64_t v37 = 2;
            while (1)
            {
              uint64_t v38 = MEMORY[0x24C57C5F0](v37, v29);
              uint64_t v57 = v37 + 1;
              if (__OFADD__(v37, 1))
              {
                __break(1u);
                goto LABEL_111;
              }
              uint64_t v39 = v38;
              swift_unknownObjectRelease();
              if (v39 == v21) {
                break;
              }
              ++v37;
              if (v57 == a1) {
                goto LABEL_52;
              }
            }
            swift_bridgeObjectRelease();
            if ((v6 & 0xC000000000000001) != 0) {
              goto LABEL_55;
            }
            goto LABEL_72;
          }
        }
      }
      else if (*(void *)(v29 + 32) != v21)
      {
        if (a1 == 1) {
          goto LABEL_52;
        }
        if (*(void *)(v29 + 40) != v21)
        {
          if (a1 != 2)
          {
            uint64_t v30 = 6;
            while (1)
            {
              uint64_t v31 = v30 - 3;
              if (__OFADD__(v30 - 4, 1)) {
                break;
              }
              if (*(void *)(v29 + 8 * v30) == v21) {
                goto LABEL_71;
              }
              ++v30;
              if (v31 == a1) {
                goto LABEL_52;
              }
            }
LABEL_98:
            __break(1u);
LABEL_99:
            __break(1u);
LABEL_100:
            __break(1u);
LABEL_101:
            __break(1u);
LABEL_102:
            __break(1u);
LABEL_103:
            __break(1u);
LABEL_104:
            __break(1u);
LABEL_105:
            __break(1u);
            goto LABEL_106;
          }
          goto LABEL_52;
        }
      }
LABEL_71:
      swift_bridgeObjectRelease();
      if ((v6 & 0xC000000000000001) != 0) {
        goto LABEL_55;
      }
      goto LABEL_72;
    }
    uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v18) {
      goto LABEL_23;
    }
LABEL_92:
    swift_release();
LABEL_5:
    swift_bridgeObjectRelease();
    unint64_t v5 = v71;
  }
  swift_bridgeObjectRelease();
  uint64_t v54 = swift_allocObject();
  *(void *)(v54 + 16) = v6;
  uint64_t v55 = swift_allocObject();
  *(void *)(v55 + 16) = sub_2486E2734;
  *(void *)(v55 + 24) = v54;
  uint64_t v66 = v16;
  char v67 = 1;
  unint64_t v68 = sub_2486E2774;
  uint64_t v69 = v55;
  char v70 = 0;
  unint64_t v53 = sub_2486E15AC();
LABEL_95:
  swift_bridgeObjectRelease();
  return v53;
}

uint64_t sub_2486E14D0(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v5 = sub_2487106F4(a1);
      if (v6)
      {
        uint64_t v4 = *(void *)(*(void *)(a2 + 56) + 8 * v5);
        swift_retain();
        return v4;
      }
    }
    return 0;
  }
  swift_retain();
  uint64_t v3 = sub_24872CC20();
  swift_release();
  if (!v3) {
    return 0;
  }
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1401A0);
  swift_dynamicCast();
  uint64_t v4 = v8;
  swift_unknownObjectRelease();
  return v4;
}

unint64_t sub_2486E15AC()
{
  uint64_t v15 = *(void *)v0;
  char v16 = *(unsigned char *)(v0 + 8);
  sub_2486E27A0((uint64_t)&v15);
  swift_retain();
  unint64_t v1 = sub_2486E1E2C((uint64_t *)v0);
  sub_2486E27CC((uint64_t)&v15);
  swift_release();
  unint64_t v14 = v1;
  if ((v1 & 0x8000000000000000) != 0 || (v1 & 0x4000000000000000) != 0) {
    goto LABEL_37;
  }
  uint64_t v2 = *(void *)(v1 + 16);
  sub_2486E27CC((uint64_t)&v15);
  swift_release();
  unint64_t v3 = (unint64_t)v2 >> 1;
  while ((unint64_t)(v2 + 1) >= 3)
  {
    unint64_t v1 = 0;
    while (1)
    {
      unint64_t v4 = v1 + 1;
      unint64_t v5 = v2 - (v1 + 1);
      if (__OFSUB__(v2, v1 + 1)) {
        break;
      }
      if (v1 != v5)
      {
        unint64_t v6 = v14;
        if ((v14 & 0xC000000000000001) != 0)
        {
          uint64_t v8 = MEMORY[0x24C57C5F0](v1, v14);
          uint64_t v9 = MEMORY[0x24C57C5F0](v2 - (v1 + 1), v14);
        }
        else
        {
          if ((v1 & 0x8000000000000000) != 0) {
            goto LABEL_31;
          }
          unint64_t v7 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v1 >= v7) {
            goto LABEL_32;
          }
          uint64_t v8 = *(void *)(v14 + 8 * v1 + 32);
          swift_retain();
          if ((v5 & 0x8000000000000000) != 0) {
            goto LABEL_33;
          }
          if (v5 >= v7) {
            goto LABEL_35;
          }
          uint64_t v9 = *(void *)(v14 + 32 + 8 * v5);
          swift_retain();
        }
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || (v14 & 0x8000000000000000) != 0
          || (v14 & 0x4000000000000000) != 0)
        {
          sub_2487224C4(v14);
          unint64_t v6 = v10;
          unint64_t v14 = v10;
        }
        swift_release();
        *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 8 * v1 + 0x20) = v9;
        sub_24872C7A0();
        unint64_t v1 = v14;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || (v14 & 0x8000000000000000) != 0
          || (v14 & 0x4000000000000000) != 0)
        {
          sub_2487224C4(v14);
          unint64_t v1 = v11;
          unint64_t v14 = v11;
        }
        if ((v5 & 0x8000000000000000) != 0) {
          goto LABEL_34;
        }
        if (v5 >= *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_36;
        }
        swift_release();
        *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 8 * v5 + 0x20) = v8;
        sub_24872C7A0();
      }
      unint64_t v1 = v4;
      if (v3 == v4) {
        return v14;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    swift_retain();
    uint64_t v2 = sub_24872CC60();
    swift_release();
    sub_2486E27CC((uint64_t)&v15);
    swift_release();
    if (v2 >= 0) {
      uint64_t v13 = v2;
    }
    else {
      uint64_t v13 = v2 + 1;
    }
    if (v2 < -1) {
      __break(1u);
    }
    unint64_t v3 = v13 >> 1;
  }
  return v1;
}

uint64_t sub_2486E1800(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E2A8);
    uint64_t v2 = sub_24872CCA0();
    uint64_t v17 = v2;
    sub_24872CC00();
    for (; sub_24872CC30(); ++*(void *)(v2 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1401A0);
      swift_dynamicCast();
      swift_dynamicCast();
      unint64_t v10 = *(void *)(v2 + 16);
      if (*(void *)(v2 + 24) <= v10)
      {
        sub_248711504(v10 + 1, 1);
        uint64_t v2 = v17;
      }
      sub_24872D030();
      sub_24872D040();
      uint64_t result = sub_24872D070();
      uint64_t v4 = v2 + 64;
      uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v6 = result & ~v5;
      unint64_t v7 = v6 >> 6;
      if (((-1 << v6) & ~*(void *)(v2 + 64 + 8 * (v6 >> 6))) != 0)
      {
        unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 64 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v11 = 0;
        unint64_t v12 = (unint64_t)(63 - v5) >> 6;
        do
        {
          if (++v7 == v12 && (v11 & 1) != 0)
          {
            __break(1u);
            return result;
          }
          BOOL v13 = v7 == v12;
          if (v7 == v12) {
            unint64_t v7 = 0;
          }
          v11 |= v13;
          uint64_t v14 = *(void *)(v4 + 8 * v7);
        }
        while (v14 == -1);
        unint64_t v8 = __clz(__rbit64(~v14)) + (v7 << 6);
      }
      *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
      uint64_t v9 = 8 * v8;
      *(void *)(*(void *)(v2 + 48) + v9) = v16;
      *(void *)(*(void *)(v2 + 56) + v9) = v15;
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE80];
  }
  return v2;
}

uint64_t sub_2486E1A34(uint64_t *a1, void (*a2)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v3 = *a1;
  if (*((unsigned char *)a1 + 8) == 1)
  {
    *((unsigned char *)a1 + 8) = 0;
    swift_retain();
  }
  else if (v3)
  {
    uint64_t v7 = *a1;
    swift_retain();
    a2(&v8, &v7);
    swift_release();
    uint64_t v5 = v8;
    swift_retain();
    swift_release();
    *a1 = v5;
    return v5;
  }
  return v3;
}

uint64_t sub_2486E1AD4(uint64_t a1)
{
  uint64_t v54 = a1 + 32;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  unint64_t v5 = 0;
  uint64_t v53 = result + 56;
  unint64_t v6 = (void *)MEMORY[0x263F8EE78];
  uint64_t v7 = (_OWORD *)(MEMORY[0x263F8EE78] + 32);
LABEL_3:
  unint64_t v9 = *(void *)(a1 + 16);
  if (v5 == v9) {
    goto LABEL_32;
  }
  uint64_t v56 = v4;
  if (v5 >= v9)
  {
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  unint64_t v10 = v6;
  uint64_t v11 = 16 * v5;
  unint64_t v12 = (uint64_t *)(v54 + 16 * v5);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_2486B7698(v3);
  ++v5;
  uint64_t v15 = (uint64_t *)(v53 + v11);
  uint64_t v3 = v14;
  if (!v14) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v8 = *(void *)(v3 + 16);
  if (v8)
  {
    unint64_t v19 = 0;
    uint64_t v20 = v13;
    unint64_t v6 = v10;
    uint64_t v4 = v56;
    while (1)
    {
      if (v19 >= v8) {
        goto LABEL_37;
      }
      uint64_t v21 = (_OWORD *)(v3 + 192 * v19);
      long long v22 = v21[2];
      long long v23 = v21[3];
      long long v24 = v21[5];
      long long v60 = v21[4];
      long long v61 = v24;
      long long v58 = v22;
      long long v59 = v23;
      long long v25 = v21[6];
      long long v26 = v21[7];
      long long v27 = v21[9];
      long long v64 = v21[8];
      long long v65 = v27;
      long long v62 = v25;
      long long v63 = v26;
      long long v28 = v21[10];
      long long v29 = v21[11];
      long long v30 = v21[13];
      long long v68 = v21[12];
      long long v69 = v30;
      long long v66 = v28;
      long long v67 = v29;
      uint64_t v55 = v20;
      if (v4)
      {
        uint64_t result = sub_2486B76D8((uint64_t)&v58);
        uint64_t v31 = v6;
      }
      else
      {
        unint64_t v32 = v6[3];
        if ((uint64_t)((v32 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_39;
        }
        int64_t v33 = v32 & 0xFFFFFFFFFFFFFFFELL;
        if (v33 <= 1) {
          uint64_t v34 = 1;
        }
        else {
          uint64_t v34 = v33;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
        uint64_t v31 = (void *)swift_allocObject();
        uint64_t v35 = (uint64_t)(_swift_stdlib_malloc_size(v31) - 32) / 192;
        v31[2] = v34;
        void v31[3] = 2 * v35;
        uint64_t v36 = v6[3] >> 1;
        uint64_t v7 = &v31[24 * v36 + 4];
        uint64_t v37 = v35 & 0x7FFFFFFFFFFFFFFFLL;
        uint64_t v4 = v37 - v36;
        if (v6[2])
        {
          uint64_t v57 = v37 - v36;
          uint64_t v38 = v6;
          if (v31 < v6 || v31 + 4 >= &v6[24 * v36 + 4])
          {
            uint64_t v39 = v6 + 4;
            sub_2486B76D8((uint64_t)&v58);
          }
          else
          {
            uint64_t v39 = v6 + 4;
            sub_2486B76D8((uint64_t)&v58);
            if (v31 == v38) {
              goto LABEL_27;
            }
          }
          memmove(v31 + 4, v39, 192 * v36);
LABEL_27:
          v38[2] = 0;
          uint64_t result = swift_release();
          uint64_t v4 = v57;
          goto LABEL_28;
        }
        sub_2486B76D8((uint64_t)&v58);
        uint64_t result = swift_release();
      }
LABEL_28:
      BOOL v40 = __OFSUB__(v4--, 1);
      if (v40) {
        goto LABEL_38;
      }
      ++v19;
      long long v41 = v58;
      long long v42 = v59;
      long long v43 = v61;
      _OWORD v7[2] = v60;
      _OWORD v7[3] = v43;
      *uint64_t v7 = v41;
      v7[1] = v42;
      long long v44 = v62;
      long long v45 = v63;
      long long v46 = v65;
      v7[6] = v64;
      v7[7] = v46;
      v7[4] = v44;
      v7[5] = v45;
      long long v47 = v66;
      long long v48 = v67;
      long long v49 = v69;
      v7[10] = v68;
      v7[11] = v49;
      v7[8] = v47;
      v7[9] = v48;
      v7 += 12;
      unint64_t v6 = v31;
      uint64_t v20 = v55;
      if (v3)
      {
        unint64_t v8 = *(void *)(v3 + 16);
        if (v19 != v8) {
          continue;
        }
      }
      goto LABEL_3;
    }
  }
LABEL_7:
  while (1)
  {
    unint64_t v16 = *(void *)(a1 + 16);
    if (v5 == v16) {
      break;
    }
    if (v5 >= v16) {
      goto LABEL_36;
    }
    uint64_t v18 = *(v15 - 1);
    uint64_t v17 = *v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_2486B7698(v3);
    ++v5;
    v15 += 2;
    uint64_t v13 = v17;
    uint64_t v3 = v18;
    if (v18) {
      goto LABEL_6;
    }
  }
  unint64_t v6 = v10;
  uint64_t v4 = v56;
LABEL_32:
  swift_bridgeObjectRelease();
  uint64_t result = sub_2486B7698(v3);
  unint64_t v50 = v6[3];
  if (v50 < 2) {
    return (uint64_t)v6;
  }
  unint64_t v51 = v50 >> 1;
  BOOL v40 = __OFSUB__(v51, v4);
  uint64_t v52 = v51 - v4;
  if (!v40)
  {
    v6[2] = v52;
    return (uint64_t)v6;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_2486E1E2C(uint64_t *a1)
{
  void (*v1)(uint64_t *__return_ptr, uint64_t *);
  char v2;
  uint64_t result;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  void *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  BOOL v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;

  long long v25 = *a1;
  long long v26 = *((unsigned char *)a1 + 8);
  unint64_t v1 = (void (*)(uint64_t *__return_ptr, uint64_t *))a1[2];
  uint64_t v2 = *((unsigned char *)a1 + 32);
  long long v23 = v25;
  long long v24 = v26;
  sub_2486E27A0((uint64_t)&v25);
  swift_retain();
  if (v2)
  {
    unint64_t v6 = 0;
    unint64_t v5 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    swift_retain();
    v1(&v22, &v23);
    uint64_t result = swift_release();
    uint64_t v4 = v22;
    unint64_t v5 = (void *)MEMORY[0x263F8EE78];
    unint64_t v6 = 0;
    if (v22)
    {
      uint64_t v7 = (void *)(MEMORY[0x263F8EE78] + 32);
      while (1)
      {
        if (!v6)
        {
          unint64_t v8 = v5[3];
          if ((uint64_t)((v8 >> 1) + 0x4000000000000000) < 0) {
            goto LABEL_29;
          }
          unint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
          if (v9 <= 1) {
            unint64_t v10 = 1;
          }
          else {
            unint64_t v10 = v9;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_26931E338);
          uint64_t v11 = (void *)swift_allocObject();
          unint64_t v12 = _swift_stdlib_malloc_size(v11);
          uint64_t v13 = v12 - 32;
          if (v12 < 32) {
            uint64_t v13 = v12 - 25;
          }
          uint64_t v14 = v13 >> 3;
          v11[2] = v10;
          v11[3] = (2 * (v13 >> 3)) | 1;
          uint64_t v15 = (unint64_t)(v11 + 4);
          unint64_t v16 = v5[3] >> 1;
          if (v5[2])
          {
            if (v11 != v5 || v15 >= (unint64_t)&v5[v16 + 4]) {
              memmove(v11 + 4, v5 + 4, 8 * v16);
            }
            uint64_t v5[2] = 0;
          }
          uint64_t v7 = (void *)(v15 + 8 * v16);
          unint64_t v6 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - v16;
          uint64_t result = swift_release();
          unint64_t v5 = v11;
        }
        uint64_t v18 = __OFSUB__(v6--, 1);
        if (v18) {
          break;
        }
        *v7++ = v4;
        swift_retain();
        v1(&v22, &v23);
        uint64_t result = swift_release();
        uint64_t v4 = v22;
        if (!v22) {
          goto LABEL_24;
        }
      }
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
LABEL_24:
  swift_release();
  uint64_t result = swift_release();
  unint64_t v19 = v5[3];
  if (v19 < 2) {
    return (uint64_t)v5;
  }
  uint64_t v20 = v19 >> 1;
  uint64_t v18 = __OFSUB__(v20, v6);
  uint64_t v21 = v20 - v6;
  if (!v18)
  {
    uint64_t v5[2] = v21;
    return (uint64_t)v5;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2486E2010@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = swift_retain();
  uint64_t v5 = sub_2486E14D0(v4, a1);
  uint64_t result = swift_release();
  *a2 = v5;
  return result;
}

void *sub_2486E2060(uint64_t a1, uint64_t a2)
{
  void (*v6)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void v15[20];

  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1401A0);
  uint64_t v5 = (void *)swift_allocObject();
  swift_weakInit();
  uint64_t v5[2] = a1;
  v5[3] = a2;
  swift_weakAssign();
  v5[5] = MEMORY[0x263F8EE78];
  unint64_t v6 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(a2 + 16);
  swift_retain();
  v6(v15, a1, a2);
  uint64_t v7 = v15[13];
  swift_bridgeObjectRetain();
  sub_2486BAFC4((uint64_t)v15);
  unint64_t v8 = *(void *)(v7 + 16);
  v15[19] = v7;
  if (v8)
  {
    unint64_t v9 = (void *)(v7 + 40);
    while (1)
    {
      unint64_t v10 = *(v9 - 1);
      uint64_t v11 = *v9;
      if (v10 == a1)
      {
        swift_release();
        swift_bridgeObjectRelease();
        sub_2486E27F8();
        sub_2486E2860();
        swift_allocError();
        *uint64_t v13 = a1;
        v13[1] = v11;
        swift_willThrow();
        swift_release();
        return v5;
      }
      sub_2486E2060(v10, *v9);
      if (v2) {
        break;
      }
      swift_beginAccess();
      unint64_t v12 = swift_retain();
      MEMORY[0x24C57C270](v12);
      if (*(void *)((v5[5] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v5[5] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_24872C7B0();
      }
      sub_24872C7E0();
      sub_24872C7A0();
      swift_endAccess();
      swift_weakAssign();
      swift_release();
      v9 += 2;
      if (!--v8) {
        goto LABEL_8;
      }
    }
    swift_release_n();
  }
  else
  {
LABEL_8:
    swift_release();
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_2486E2274(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FCB0);
    uint64_t v3 = sub_24872CA90();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v24 = v1;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      unint64_t v6 = (uint64_t *)(v25 + 24 * v4);
      uint64_t v7 = *v6;
      uint64_t v8 = v6[1];
      char v9 = *((unsigned char *)v6 + 16);
      char v10 = *((unsigned char *)v6 + 17);
      sub_24872D030();
      if ((v10 & 1) == 0)
      {
        sub_24872D040();
        sub_24872D040();
        if ((v9 & 1) == 0) {
          sub_24872D040();
        }
      }
      sub_24872D040();
      uint64_t result = sub_24872D070();
      uint64_t v12 = ~(-1 << *(unsigned char *)(v3 + 32));
      unint64_t v13 = result & v12;
      unint64_t v14 = (result & (unint64_t)v12) >> 6;
      uint64_t v15 = *(void *)(v5 + 8 * v14);
      uint64_t v16 = 1 << (result & v12);
      uint64_t v17 = *(void *)(v3 + 48);
      if ((v16 & v15) != 0)
      {
        do
        {
          uint64_t v22 = v17 + 24 * v13;
          if (*(unsigned char *)(v22 + 17))
          {
            if (v10) {
              goto LABEL_3;
            }
          }
          else
          {
            if (*(void *)v22 == v7) {
              char v23 = v10;
            }
            else {
              char v23 = 1;
            }
            if ((v23 & 1) == 0)
            {
              if (*(unsigned char *)(v22 + 16))
              {
                if (v9) {
                  goto LABEL_3;
                }
              }
              else if ((v9 & 1) == 0 && *(void *)(v22 + 8) == v8)
              {
                goto LABEL_3;
              }
            }
          }
          unint64_t v13 = (v13 + 1) & v12;
          unint64_t v14 = v13 >> 6;
          uint64_t v15 = *(void *)(v5 + 8 * (v13 >> 6));
          uint64_t v16 = 1 << v13;
        }
        while ((v15 & (1 << v13)) != 0);
      }
      *(void *)(v5 + 8 * v14) = v16 | v15;
      uint64_t v18 = v17 + 24 * v13;
      *(void *)uint64_t v18 = v7;
      *(void *)(v18 + 8) = v8;
      *(unsigned char *)(v18 + 16) = v9;
      *(unsigned char *)(v18 + 17) = v10;
      uint64_t v19 = *(void *)(v3 + 16);
      BOOL v20 = __OFADD__(v19, 1);
      uint64_t v21 = v19 + 1;
      if (v20) {
        break;
      }
      *(void *)(v3 + 16) = v21;
LABEL_3:
      if (++v4 == v24) {
        return v3;
      }
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE88];
  }
  return result;
}

unint64_t sub_2486E243C(unint64_t result)
{
  unint64_t v1 = result;
  unint64_t v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_24872CC60();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26931E340);
      uint64_t result = sub_24872CA90();
      unint64_t v3 = result;
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  unint64_t v3 = MEMORY[0x263F8EE88];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (!v2)
  {
LABEL_4:
    uint64_t v5 = *(void *)(v4 + 16);
    if (!v5) {
      return v3;
    }
    goto LABEL_9;
  }
LABEL_8:
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_24872CC60();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v5) {
    return v3;
  }
LABEL_9:
  unint64_t v7 = v3 + 56;
  if ((v1 & 0xC000000000000001) == 0)
  {
    uint64_t v20 = 0;
    unint64_t v21 = v1 + 32;
    uint64_t v22 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      if (v20 == v22) {
        goto LABEL_35;
      }
      uint64_t v25 = *(void *)(v21 + 8 * v20);
      sub_24872D030();
      sub_24872D040();
      uint64_t result = sub_24872D070();
      uint64_t v26 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      uint64_t v29 = *(void *)(v7 + 8 * (v27 >> 6));
      uint64_t v30 = 1 << v27;
      uint64_t v31 = *(void *)(v3 + 48);
      if (((1 << v27) & v29) == 0) {
        goto LABEL_23;
      }
      if (*(void *)(v31 + 8 * v27) != v25) {
        break;
      }
LABEL_25:
      if (++v20 == v5) {
        return v3;
      }
    }
    uint64_t v32 = ~v26;
    while (1)
    {
      unint64_t v27 = (v27 + 1) & v32;
      unint64_t v28 = v27 >> 6;
      uint64_t v29 = *(void *)(v7 + 8 * (v27 >> 6));
      uint64_t v30 = 1 << v27;
      if ((v29 & (1 << v27)) == 0) {
        break;
      }
      if (*(void *)(v31 + 8 * v27) == v25) {
        goto LABEL_25;
      }
    }
LABEL_23:
    *(void *)(v7 + 8 * v28) = v30 | v29;
    *(void *)(v31 + 8 * v27) = v25;
    uint64_t v23 = *(void *)(v3 + 16);
    BOOL v9 = __OFADD__(v23, 1);
    uint64_t v24 = v23 + 1;
    if (v9) {
      goto LABEL_36;
    }
    *(void *)(v3 + 16) = v24;
    uint64_t result = swift_retain();
    goto LABEL_25;
  }
  uint64_t v8 = 0;
  while (1)
  {
    uint64_t result = MEMORY[0x24C57C5F0](v8, v1);
    BOOL v9 = __OFADD__(v8++, 1);
    if (v9) {
      break;
    }
    unint64_t v10 = result;
    sub_24872D030();
    sub_24872D040();
    uint64_t result = sub_24872D070();
    uint64_t v11 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v12 = result & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = *(void *)(v7 + 8 * (v12 >> 6));
    uint64_t v15 = 1 << v12;
    uint64_t v16 = *(void *)(v3 + 48);
    if (((1 << v12) & v14) == 0) {
      goto LABEL_19;
    }
    if (*(void *)(v16 + 8 * v12) == v10)
    {
LABEL_11:
      swift_unknownObjectRelease();
      if (v8 == v5) {
        return v3;
      }
    }
    else
    {
      uint64_t v17 = ~v11;
      while (1)
      {
        unint64_t v12 = (v12 + 1) & v17;
        unint64_t v13 = v12 >> 6;
        uint64_t v14 = *(void *)(v7 + 8 * (v12 >> 6));
        uint64_t v15 = 1 << v12;
        if ((v14 & (1 << v12)) == 0) {
          break;
        }
        if (*(void *)(v16 + 8 * v12) == v10) {
          goto LABEL_11;
        }
      }
LABEL_19:
      *(void *)(v7 + 8 * v13) = v15 | v14;
      *(void *)(v16 + 8 * v12) = v10;
      uint64_t v18 = *(void *)(v3 + 16);
      BOOL v9 = __OFADD__(v18, 1);
      uint64_t v19 = v18 + 1;
      if (v9) {
        goto LABEL_34;
      }
      *(void *)(v3 + 16) = v19;
      if (v8 == v5) {
        return v3;
      }
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_2486E26FC()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2486E2734@<X0>(uint64_t *a1@<X8>)
{
  return sub_2486E2010(*(void *)(v1 + 16), a1);
}

uint64_t sub_2486E273C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2486E2774@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_2486E1A34(a1, *(void (**)(uint64_t *__return_ptr, uint64_t *))(v2 + 16));
  *a2 = result;
  return result;
}

uint64_t sub_2486E27A0(uint64_t a1)
{
  return a1;
}

uint64_t sub_2486E27CC(uint64_t a1)
{
  return a1;
}

void sub_2486E27F8()
{
  if (!qword_26931E348)
  {
    unint64_t v0 = _s19InitializationErrorOMa();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26931E348);
    }
  }
}

uint64_t _s19InitializationErrorOMa()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_2486E2860()
{
  unint64_t result = qword_26931E350[0];
  if (!qword_26931E350[0])
  {
    sub_2486E27F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26931E350);
  }
  return result;
}

uint64_t sub_2486E28B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 0);
}

uint64_t getEnumTagSinglePayload for ArgumentSet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArgumentSet(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Platform.StandardError()
{
  return &type metadata for Platform.StandardError;
}

uint64_t sub_2486E2954()
{
  unint64_t v0 = (uint64_t *)MEMORY[0x24C57C520]();
  uint64_t result = sub_24872CA50();
  if (result)
  {
    uint64_t v2 = 8 * (int)result;
    uint64_t v3 = MEMORY[0x263F8EE78];
    while (1)
    {
      uint64_t result = *v0;
      if (!*v0) {
        break;
      }
      uint64_t result = MEMORY[0x24C57C050]();
      if (v5)
      {
        uint64_t v6 = result;
        uint64_t v7 = v5;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_248719EA4(0, *(void *)(v3 + 16) + 1, 1, (char *)v3);
          uint64_t v3 = result;
        }
        unint64_t v9 = *(void *)(v3 + 16);
        unint64_t v8 = *(void *)(v3 + 24);
        if (v9 >= v8 >> 1)
        {
          uint64_t result = (uint64_t)sub_248719EA4((char *)(v8 > 1), v9 + 1, 1, (char *)v3);
          uint64_t v3 = result;
        }
        *(void *)(v3 + 16) = v9 + 1;
        uint64_t v4 = v3 + 16 * v9;
        *(void *)(v4 + 32) = v6;
        *(void *)(v4 + 40) = v7;
      }
      ++v0;
      v2 -= 8;
      if (!v2) {
        goto LABEL_12;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v3 = MEMORY[0x263F8EE78];
LABEL_12:
    qword_26B1412C0 = v3;
  }
  return result;
}

unint64_t sub_2486E2A4C(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    unint64_t v4 = HIBYTE(a2) & 0xF;
  }
  else {
    unint64_t v4 = a1 & 0xFFFFFFFFFFFFLL;
  }
  swift_bridgeObjectRetain();
  if (!v4)
  {
LABEL_26:
    return swift_bridgeObjectRelease();
  }
  uint64_t v5 = (a1 >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  uint64_t v6 = 4 << v5;
  unint64_t v7 = 15;
  while (1)
  {
    unint64_t v9 = v7 & 0xC;
    unint64_t result = v7;
    if (v9 == v6) {
      unint64_t result = sub_2486E2E68(v7, a1, a2);
    }
    unint64_t v11 = result >> 16;
    if (result >> 16 >= v4) {
      break;
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_24872C660();
      unsigned __int8 v12 = result;
      if (v9 != v6) {
        goto LABEL_20;
      }
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v13[0] = a1;
      v13[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      unsigned __int8 v12 = *((unsigned char *)v13 + v11);
      if (v9 != v6) {
        goto LABEL_20;
      }
    }
    else
    {
      unint64_t result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      if ((a1 & 0x1000000000000000) == 0) {
        unint64_t result = sub_24872CB30();
      }
      unsigned __int8 v12 = *(unsigned char *)(result + v11);
      if (v9 != v6)
      {
LABEL_20:
        if ((a2 & 0x1000000000000000) == 0) {
          goto LABEL_8;
        }
        goto LABEL_21;
      }
    }
    unint64_t result = sub_2486E2E68(v7, a1, a2);
    unint64_t v7 = result;
    if ((a2 & 0x1000000000000000) == 0)
    {
LABEL_8:
      unint64_t v7 = (v7 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_9;
    }
LABEL_21:
    if (v4 <= v7 >> 16) {
      goto LABEL_30;
    }
    unint64_t v7 = sub_24872C630();
LABEL_9:
    unint64_t v8 = (FILE *)sub_24872C430();
    putc(v12, v8);
    if (4 * v4 == v7 >> 14) {
      goto LABEL_26;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

unint64_t sub_2486E2BFC(unint64_t a1, unint64_t a2)
{
  return sub_2486E2A4C(a1, a2);
}

uint64_t sub_2486E2C18(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v6 = (unsigned __int8 *)sub_24872CB30();
      }
      uint64_t v7 = (uint64_t)sub_2486E3A34(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_50;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      uint64_t v14 = v3 - 2;
      if (v14)
      {
        uint64_t v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_34;
          }
          uint64_t v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v17 + v16;
          if (__OFADD__(v17, v16)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              unint64_t v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_34;
                }
                uint64_t v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  goto LABEL_34;
                }
                uint64_t v7 = v13 - v12;
                if (__OFSUB__(v13, v12)) {
                  goto LABEL_34;
                }
                char v9 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (result - 48);
      uint64_t v18 = v3 - 1;
      if (v18)
      {
        uint64_t v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_34;
          }
          uint64_t v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    char v9 = 0;
    goto LABEL_37;
  }
  uint64_t v7 = (uint64_t)sub_2486E394C(result, a2, 10);
  char v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

uint64_t sub_2486E2E68(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_24872C680();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x24C57C120](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unint64_t sub_2486E2EE4(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, unint64_t a5, unint64_t a6, uint64_t a7)
{
  void v44[3] = a4;
  if (a1 < 0)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v11 = a7;
  unint64_t v12 = a6;
  unint64_t v9 = a5;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = MEMORY[0x263F8EE78];
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = v9;
  if (!a1 || (unint64_t v42 = v12 >> 14, v12 >> 14 == v9 >> 14))
  {
    sub_2486E3724(v12, v41, a2 & 1, v14);
    swift_bridgeObjectRelease();
    unint64_t v12 = *(void *)(v14 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_5;
  }
  uint64_t v32 = a1;
  uint64_t v33 = v14;
  BOOL v40 = (char *)MEMORY[0x263F8EE78];
  unint64_t v16 = v9;
  unint64_t v10 = v9;
  unint64_t v37 = v9;
  while (1)
  {
    v44[0] = sub_24872C930();
    v44[1] = v17;
    uint64_t v18 = a3(v44);
    if (v8)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12;
    }
    unint64_t v7 = v18;
    swift_bridgeObjectRelease();
    if (v7) {
      break;
    }
    unint64_t v16 = sub_24872C8F0();
LABEL_9:
    if (v42 == v16 >> 14) {
      goto LABEL_24;
    }
  }
  if (v10 >> 14 == v16 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v16 = sub_24872C8F0();
    *(void *)(v41 + 16) = v16;
    unint64_t v10 = v16;
    unint64_t v37 = v16;
    goto LABEL_9;
  }
  if (v16 >> 14 < v10 >> 14)
  {
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v19 = sub_24872C950();
  uint64_t v36 = v20;
  uint64_t v38 = v19;
  uint64_t v34 = v22;
  uint64_t v35 = v21;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    BOOL v40 = sub_24871AA54(0, *((void *)v40 + 2) + 1, 1, v40);
  }
  unint64_t v7 = *((void *)v40 + 2);
  unint64_t v23 = *((void *)v40 + 3);
  if (v7 >= v23 >> 1) {
    BOOL v40 = sub_24871AA54((char *)(v23 > 1), v7 + 1, 1, v40);
  }
  *((void *)v40 + 2) = v7 + 1;
  uint64_t v24 = &v40[32 * v7];
  *((void *)v24 + 4) = v38;
  *((void *)v24 + 5) = v36;
  *((void *)v24 + 6) = v35;
  *((void *)v24 + 7) = v34;
  *(void *)(v33 + 16) = v40;
  uint64_t v25 = sub_24872C8F0();
  unint64_t v16 = v25;
  *(void *)(v41 + 16) = v25;
  if (*((void *)v40 + 2) != v32)
  {
    unint64_t v10 = v25;
    unint64_t v37 = v25;
    goto LABEL_9;
  }
  unint64_t v37 = v25;
  unint64_t v10 = v25;
LABEL_24:
  if (v42 == v10 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    unint64_t v12 = (unint64_t)v40;
    goto LABEL_32;
  }
  if (v42 >= v37 >> 14)
  {
    unint64_t v7 = sub_24872C950();
    unint64_t v9 = v26;
    unint64_t v10 = v27;
    uint64_t v11 = v28;
    swift_bridgeObjectRelease();
    unint64_t v12 = (unint64_t)v40;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_36;
    }
    goto LABEL_29;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  unint64_t v12 = (unint64_t)sub_24871AA54(0, *(void *)(v12 + 16) + 1, 1, (char *)v12);
LABEL_29:
  unint64_t v30 = *(void *)(v12 + 16);
  unint64_t v29 = *(void *)(v12 + 24);
  if (v30 >= v29 >> 1) {
    unint64_t v12 = (unint64_t)sub_24871AA54((char *)(v29 > 1), v30 + 1, 1, (char *)v12);
  }
  *(void *)(v12 + 16) = v30 + 1;
  uint64_t v31 = (void *)(v12 + 32 * v30);
  v31[4] = v7;
  v31[5] = v9;
  v31[6] = v10;
  v31[7] = v11;
  *(void *)(v33 + 16) = v12;
LABEL_32:
  swift_bridgeObjectRetain();
  swift_release();
LABEL_5:
  swift_release();
  return v12;
}

char *sub_2486E3304(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v46[3] = a4;
  if (a1 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v11 = a5;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = MEMORY[0x263F8EE78];
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = 15;
  uint64_t v15 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v16 = HIBYTE(a6) & 0xF) : (uint64_t v16 = v11 & 0xFFFFFFFFFFFFLL), !v16))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v15 = v11 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((v11 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_2486E383C(v30 | (v15 << 16), v43, a2 & 1, v14);
    swift_bridgeObjectRelease();
    unint64_t v10 = *(char **)(v14 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_38;
  }
  uint64_t v38 = a1;
  uint64_t v39 = v14;
  unint64_t v44 = 4 * v16;
  unint64_t v10 = (char *)MEMORY[0x263F8EE78];
  unint64_t v9 = 15;
  unint64_t v8 = 15;
  unint64_t v17 = 15;
  while (1)
  {
    v46[0] = sub_24872C6A0();
    v46[1] = v18;
    uint64_t v19 = a3(v46);
    if (v7)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10;
    }
    uint64_t v6 = v19;
    swift_bridgeObjectRelease();
    if (v6) {
      break;
    }
    unint64_t v9 = sub_24872C5B0();
LABEL_9:
    if (v44 == v9 >> 14) {
      goto LABEL_29;
    }
  }
  if (v8 >> 14 == v9 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v9 = sub_24872C5B0();
    *(void *)(v43 + 16) = v9;
    unint64_t v8 = v9;
    unint64_t v17 = v9;
    goto LABEL_9;
  }
  if (v9 >> 14 < v8 >> 14)
  {
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v20 = sub_24872C6D0();
  uint64_t v40 = v21;
  uint64_t v41 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v10 = sub_24871AA54(0, *((void *)v10 + 2) + 1, 1, v10);
  }
  unint64_t v27 = *((void *)v10 + 2);
  unint64_t v26 = *((void *)v10 + 3);
  uint64_t v6 = v27 + 1;
  if (v27 >= v26 >> 1) {
    unint64_t v10 = sub_24871AA54((char *)(v26 > 1), v27 + 1, 1, v10);
  }
  *((void *)v10 + 2) = v6;
  uint64_t v28 = &v10[32 * v27];
  *((void *)v28 + 4) = v41;
  *((void *)v28 + 5) = v23;
  *((void *)v28 + 6) = v25;
  *((void *)v28 + 7) = v40;
  *(void *)(v39 + 16) = v10;
  uint64_t v29 = sub_24872C5B0();
  unint64_t v9 = v29;
  *(void *)(v43 + 16) = v29;
  if (*((void *)v10 + 2) != v38)
  {
    unint64_t v8 = v29;
    unint64_t v17 = v29;
    goto LABEL_9;
  }
  unint64_t v17 = v29;
  unint64_t v8 = v29;
LABEL_29:
  if (v44 == v8 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_37;
  }
  if (v44 >= v17 >> 14)
  {
    uint64_t v6 = sub_24872C6D0();
    unint64_t v8 = v31;
    unint64_t v9 = v32;
    uint64_t v11 = v33;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_43;
    }
    goto LABEL_34;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  unint64_t v10 = sub_24871AA54(0, *((void *)v10 + 2) + 1, 1, v10);
LABEL_34:
  unint64_t v35 = *((void *)v10 + 2);
  unint64_t v34 = *((void *)v10 + 3);
  if (v35 >= v34 >> 1) {
    unint64_t v10 = sub_24871AA54((char *)(v34 > 1), v35 + 1, 1, v10);
  }
  *((void *)v10 + 2) = v35 + 1;
  uint64_t v36 = &v10[32 * v35];
  *((void *)v36 + 4) = v6;
  *((void *)v36 + 5) = v8;
  *((void *)v36 + 6) = v9;
  *((void *)v36 + 7) = v11;
  *(void *)(v39 + 16) = v10;
LABEL_37:
  swift_bridgeObjectRetain();
  swift_release();
LABEL_38:
  swift_release();
  return v10;
}

uint64_t sub_2486E3724(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v10 = *(void *)(a2 + 16) >> 14;
  int v11 = (v10 == a1 >> 14) & a3;
  if (v11 == 1) {
    return v11 ^ 1u;
  }
  if (a1 >> 14 < v10)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v4 = a4;
  uint64_t v5 = sub_24872C950();
  uint64_t v6 = v12;
  uint64_t v7 = v13;
  uint64_t v8 = v14;
  unint64_t v9 = *(char **)(v4 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v4 + 16) = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_9:
    unint64_t v9 = sub_24871AA54(0, *((void *)v9 + 2) + 1, 1, v9);
    *(void *)(v4 + 16) = v9;
  }
  unint64_t v17 = *((void *)v9 + 2);
  unint64_t v16 = *((void *)v9 + 3);
  if (v17 >= v16 >> 1)
  {
    unint64_t v9 = sub_24871AA54((char *)(v16 > 1), v17 + 1, 1, v9);
    *(void *)(v4 + 16) = v9;
  }
  *((void *)v9 + 2) = v17 + 1;
  uint64_t v18 = &v9[32 * v17];
  *((void *)v18 + 4) = v5;
  *((void *)v18 + 5) = v6;
  *((void *)v18 + 6) = v7;
  *((void *)v18 + 7) = v8;
  return v11 ^ 1u;
}

uint64_t sub_2486E383C(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v10 = *(void *)(a2 + 16) >> 14;
  int v11 = (v10 == a1 >> 14) & a3;
  if (v11 == 1) {
    return v11 ^ 1u;
  }
  if (a1 >> 14 < v10)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v4 = a4;
  uint64_t v5 = sub_24872C6D0();
  uint64_t v6 = v12;
  uint64_t v7 = v13;
  uint64_t v8 = v14;
  unint64_t v9 = *(char **)(v4 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v4 + 16) = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_9:
    unint64_t v9 = sub_24871AA54(0, *((void *)v9 + 2) + 1, 1, v9);
    *(void *)(v4 + 16) = v9;
  }
  unint64_t v17 = *((void *)v9 + 2);
  unint64_t v16 = *((void *)v9 + 3);
  if (v17 >= v16 >> 1)
  {
    unint64_t v9 = sub_24871AA54((char *)(v16 > 1), v17 + 1, 1, v9);
    *(void *)(v4 + 16) = v9;
  }
  *((void *)v9 + 2) = v17 + 1;
  uint64_t v18 = &v9[32 * v17];
  *((void *)v18 + 4) = v5;
  *((void *)v18 + 5) = v6;
  *((void *)v18 + 6) = v7;
  *((void *)v18 + 7) = v8;
  return v11 ^ 1u;
}

unsigned __int8 *sub_2486E394C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_24872C6C0();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_2486BC788();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)sub_24872CB30();
  }
LABEL_7:
  int v11 = sub_2486E3A34(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_2486E3A34(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_2486E3CB0(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_24872CEB0() & 1;
  }
}

uint64_t sub_2486E3D08()
{
  if (!getenv("COLUMNS")) {
    goto LABEL_55;
  }
  uint64_t result = sub_24872C610();
  uint64_t v2 = v1;
  uint64_t v3 = HIBYTE(v1) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((v2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
LABEL_55:
    uint64_t v19 = 0;
    goto LABEL_56;
  }
  if ((v2 & 0x1000000000000000) == 0)
  {
    if ((v2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        unsigned __int8 v6 = (unsigned __int8 *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        unsigned __int8 v6 = (unsigned __int8 *)sub_24872CB30();
      }
      uint64_t v7 = (uint64_t)sub_2486E3A34(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_45;
    }
    v28[0] = result;
    v28[1] = v2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_63;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_32;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      if (v3 != 2)
      {
        if ((BYTE2(result) - 48) > 9u) {
          goto LABEL_32;
        }
        uint64_t v7 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
        uint64_t v10 = v3 - 3;
        if (v10)
        {
          unsigned int v11 = (unsigned __int8 *)v28 + 3;
          while (1)
          {
            unsigned int v12 = *v11 - 48;
            if (v12 > 9) {
              goto LABEL_32;
            }
            uint64_t v13 = 10 * v7;
            if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
              goto LABEL_32;
            }
            uint64_t v7 = v13 + v12;
            if (__OFADD__(v13, v12)) {
              goto LABEL_32;
            }
            char v9 = 0;
            ++v11;
            if (!--v10) {
              goto LABEL_45;
            }
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            if (v3 == 2)
            {
              char v9 = 0;
              uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
              goto LABEL_45;
            }
            if ((BYTE2(result) - 48) <= 9u)
            {
              uint64_t v7 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
              uint64_t v18 = v3 - 3;
              if (!v18) {
                goto LABEL_44;
              }
              char v20 = (unsigned __int8 *)v28 + 3;
              while (1)
              {
                unsigned int v21 = *v20 - 48;
                if (v21 > 9) {
                  break;
                }
                uint64_t v22 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  break;
                }
                uint64_t v7 = v22 - v21;
                if (__OFSUB__(v22, v21)) {
                  break;
                }
                char v9 = 0;
                ++v20;
                if (!--v18) {
                  goto LABEL_45;
                }
              }
            }
          }
LABEL_32:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_45;
        }
        __break(1u);
LABEL_63:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_32;
      }
      uint64_t v7 = (result - 48);
      if (v3 != 1)
      {
        if ((BYTE1(result) - 48) > 9u) {
          goto LABEL_32;
        }
        uint64_t v7 = 10 * (result - 48) + (BYTE1(result) - 48);
        uint64_t v14 = v3 - 2;
        if (v14)
        {
          unsigned __int8 v15 = (unsigned __int8 *)v28 + 2;
          while (1)
          {
            unsigned int v16 = *v15 - 48;
            if (v16 > 9) {
              goto LABEL_32;
            }
            uint64_t v17 = 10 * v7;
            if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
              goto LABEL_32;
            }
            uint64_t v7 = v17 + v16;
            if (__OFADD__(v17, v16)) {
              goto LABEL_32;
            }
            char v9 = 0;
            ++v15;
            if (!--v14) {
              goto LABEL_45;
            }
          }
        }
      }
    }
LABEL_44:
    char v9 = 0;
    goto LABEL_45;
  }
  uint64_t v7 = (uint64_t)sub_2486E394C(result, v2, 10);
  char v9 = v27;
LABEL_45:
  swift_bridgeObjectRelease();
  if (v9) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = v7;
  }
LABEL_56:
  if (getenv("LINES"))
  {
    uint64_t v23 = sub_24872C610();
    sub_2486E2C18(v23, v24);
    char v26 = v25 & 1;
  }
  else
  {
    char v26 = 1;
  }
  char v29 = v26 & 1;
  return v19;
}

uint64_t sub_2486E4028()
{
  v2[1] = *MEMORY[0x263EF8340];
  v2[0] = 0;
  uint64_t v0 = sub_24872C410();
  if (MEMORY[0x24C57BF00](1, v0, v2)) {
    return 0;
  }
  else {
    return WORD1(v2[0]);
  }
}

uint64_t sub_2486E40CC()
{
  if (!getenv("SHELL")) {
    return 0;
  }
  uint64_t v0 = sub_24872C610();
  unint64_t v2 = v1;
  v13[0] = 47;
  v13[1] = 0xE100000000000000;
  MEMORY[0x270FA5388](v0);
  v12[2] = v13;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_2486E3304(0x7FFFFFFFFFFFFFFFLL, 1, sub_2486D6720, (uint64_t)v12, v0, v2);
  swift_bridgeObjectRelease();
  uint64_t v4 = *((void *)v3 + 2);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v5 = &v3[32 * v4];
  uint64_t v6 = *(void *)v5;
  uint64_t v7 = *((void *)v5 + 1);
  uint64_t v8 = *((void *)v5 + 2);
  uint64_t v9 = *((void *)v5 + 3);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  uint64_t v10 = MEMORY[0x24C57C040](v6, v7, v8, v9);
  swift_bridgeObjectRelease_n();
  return v10;
}

uint64_t sub_2486E4208()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2486E4240()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2486E4254@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Parsed();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t sub_2486E42C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Parsed();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t Argument.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Argument();
  sub_2486C2100(a1, (uint64_t)v7);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_248709F24((uint64_t)v7, v4, WitnessTable, a2);
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t type metadata accessor for Argument()
{
  return __swift_instantiateGenericMetadata();
}

void Argument.init()()
{
}

uint64_t Argument.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = type metadata accessor for Parsed();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v11 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v11 - v7, v3, v6);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v5 - 8) + 32))(a2, v8, v5);
  }
  uint64_t result = sub_24872CC40();
  __break(1u);
  return result;
}

uint64_t sub_2486E45A8(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v2 = (char *)&v6 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v6 - v1);
  uint64_t v4 = type metadata accessor for Argument();
  return Argument.wrappedValue.setter((uint64_t)v2, v4);
}

uint64_t Argument.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = type metadata accessor for Parsed();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v2, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v2, a1, v4);
  return swift_storeEnumTagMultiPayload();
}

void (*Argument.wrappedValue.modify(void *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t v5 = malloc(0x30uLL);
  *a1 = v5;
  *uint64_t v5 = a2;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v5[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v5[4] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v5[5] = v9;
  Argument.wrappedValue.getter(a2, (uint64_t)v9);
  return sub_2486E4808;
}

void sub_2486E4808(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[4];
  uint64_t v4 = (void *)(*a1)[5];
  if (a2)
  {
    uint64_t v5 = v2[2];
    uint64_t v6 = v2[3];
    uint64_t v7 = *v2;
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[4], v4, v5);
    Argument.wrappedValue.setter((uint64_t)v3, v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    Argument.wrappedValue.setter((*a1)[5], *v2);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t sub_2486E48C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return Argument.init(from:)(a1, a2);
}

uint64_t sub_2486E48E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2486E42C0(a1, a2);
}

unint64_t Argument.description.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = type metadata accessor for Parsed();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v16 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v16 - v12, v2, v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return 0xD000000000000016;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v13, v3);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    uint64_t v14 = sub_24872C540();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  return v14;
}

void static ArgumentArrayParsingStrategy.remaining.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void static ArgumentArrayParsingStrategy.allUnrecognized.getter(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

void static ArgumentArrayParsingStrategy.postTerminator.getter(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

void static ArgumentArrayParsingStrategy.captureForPassthrough.getter(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

void static ArgumentArrayParsingStrategy.unconditionalRemaining.getter(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t ArgumentArrayParsingStrategy.hash(into:)()
{
  return sub_24872D040();
}

BOOL static ArgumentArrayParsingStrategy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ArgumentArrayParsingStrategy.hashValue.getter()
{
  return sub_24872D070();
}

BOOL sub_2486E4BD4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Argument<A>.init(wrappedValue:help:completion:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v23 = a5;
  uint64_t v24 = a1;
  uint64_t v26 = a6;
  uint64_t v25 = type metadata accessor for Parsed();
  uint64_t v9 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v11 = (uint64_t *)((char *)&v22 - v10);
  sub_2486E775C(a2, (uint64_t)v27);
  uint64_t v12 = *a3;
  uint64_t v13 = a3[1];
  char v14 = *((unsigned char *)a3 + 16);
  uint64_t v15 = *(void *)(a4 - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 81) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v17 = (*(void *)(v15 + 64) + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = v23;
  *(void *)(v18 + 16) = a4;
  *(void *)(v18 + 24) = v19;
  sub_2486E775C((uint64_t)v27, v18 + 32);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 32))(v18 + v16, v24, a4);
  unint64_t v20 = v18 + v17;
  *(void *)unint64_t v20 = v12;
  *(void *)(v20 + 8) = v13;
  *(unsigned char *)(v20 + 16) = v14;
  sub_24870A630((uint64_t)sub_2486E78B8, v18, v11);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v9 + 32))(v26, v11, v25);
}

uint64_t sub_2486E4DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9)
{
  uint64_t v34 = a2;
  uint64_t v35 = a3;
  uint64_t v36 = a1;
  uint64_t v14 = sub_24872C8E0();
  MEMORY[0x270FA5388](v14 - 8);
  unint64_t v16 = (char *)&v34 - v15;
  uint64_t v17 = type metadata accessor for Bare();
  sub_2486E775C((uint64_t)a4, (uint64_t)v39);
  uint64_t v18 = *(void *)(a9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v16, a5, a9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, a9);
  v37[0] = a6;
  v37[1] = a7;
  char v38 = a8;
  uint64_t v19 = v34;
  swift_bridgeObjectRetain();
  uint64_t v20 = v35;
  swift_bridgeObjectRetain();
  sub_2486D02F8(a4);
  sub_2486D0384(a6, a7, a8);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24870AF84(v36, v19, v20, 0, (uint64_t)v39, 0, (uint64_t)v16, v40, v37, v17, WitnessTable);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
  uint64_t v22 = (_OWORD *)swift_allocObject();
  long long v23 = v40[8];
  long long v24 = v40[10];
  long long v25 = v40[11];
  v22[11] = v40[9];
  v22[12] = v24;
  _OWORD v22[13] = v25;
  long long v26 = v40[4];
  long long v27 = v40[6];
  long long v28 = v40[7];
  v22[7] = v40[5];
  v22[8] = v27;
  v22[9] = v28;
  v22[10] = v23;
  long long v29 = v40[0];
  long long v30 = v40[1];
  v22[1] = xmmword_24872D630;
  _OWORD v22[2] = v29;
  long long v31 = v40[2];
  long long v32 = v40[3];
  v22[3] = v30;
  void v22[4] = v31;
  v22[5] = v32;
  v22[6] = v26;
  return sub_2486CDED4((uint64_t)v22);
}

uint64_t Argument<A>.init(help:completion:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = type metadata accessor for Parsed();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = &v20[-v12 - 8];
  sub_2486E775C(a1, (uint64_t)v20);
  uint64_t v14 = *a2;
  uint64_t v15 = a2[1];
  char v16 = *((unsigned char *)a2 + 16);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a3;
  *(void *)(v17 + 24) = a4;
  sub_2486E775C((uint64_t)v20, v17 + 32);
  *(void *)(v17 + 88) = v14;
  *(void *)(v17 + 96) = v15;
  *(unsigned char *)(v17 + 104) = v16;
  sub_24870A630((uint64_t)sub_2486E7950, v17, v13);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v11 + 32))(a5, v13, v10);
}

uint64_t sub_2486E514C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v32 = a1;
  uint64_t v15 = sub_24872C8E0();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v33[-1] - v16;
  uint64_t v18 = type metadata accessor for Bare();
  sub_2486E775C((uint64_t)a4, (uint64_t)v35);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a8 - 8) + 56))(v17, 1, 1, a8);
  v33[0] = a5;
  v33[1] = a6;
  char v34 = a7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2486D02F8(a4);
  sub_2486D0384(a5, a6, a7);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24870AF84(v32, a2, a3, 0, (uint64_t)v35, 0, (uint64_t)v17, v36, v33, v18, WitnessTable);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
  uint64_t v20 = (_OWORD *)swift_allocObject();
  long long v21 = v36[8];
  long long v22 = v36[10];
  long long v23 = v36[11];
  v20[11] = v36[9];
  v20[12] = v22;
  v20[13] = v23;
  long long v24 = v36[4];
  long long v25 = v36[6];
  long long v26 = v36[7];
  v20[7] = v36[5];
  v20[8] = v25;
  v20[9] = v26;
  v20[10] = v21;
  long long v27 = v36[0];
  long long v28 = v36[1];
  v20[1] = xmmword_24872D630;
  _OWORD v20[2] = v27;
  long long v29 = v36[2];
  long long v30 = v36[3];
  v20[3] = v28;
  v20[4] = v29;
  v20[5] = v30;
  void v20[6] = v24;
  return sub_2486CDED4((uint64_t)v20);
}

uint64_t Argument.init(wrappedValue:help:completion:transform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v24 = a4;
  uint64_t v25 = a5;
  uint64_t v26 = a1;
  uint64_t v28 = a7;
  uint64_t v27 = type metadata accessor for Parsed();
  uint64_t v10 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v12 = (uint64_t *)((char *)&v24 - v11);
  sub_2486E775C(a2, (uint64_t)v29);
  uint64_t v14 = *a3;
  uint64_t v13 = a3[1];
  char v15 = *((unsigned char *)a3 + 16);
  uint64_t v16 = *(void *)(a6 - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (*(void *)(v16 + 64) + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = a6;
  sub_2486E775C((uint64_t)v29, (uint64_t)(v19 + 24));
  uint64_t v21 = v25;
  uint64_t v20 = v26;
  *((void *)v19 + 10) = v24;
  *((void *)v19 + 11) = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(&v19[v17], v20, a6);
  long long v22 = &v19[v18];
  *(void *)long long v22 = v14;
  *((void *)v22 + 1) = v13;
  v22[16] = v15;
  sub_24870A630((uint64_t)sub_2486E7A80, (uint64_t)v19, v12);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v10 + 32))(v28, v12, v27);
}

uint64_t sub_2486E5524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11)
{
  uint64_t v36 = a3;
  uint64_t v37 = a6;
  uint64_t v38 = a1;
  uint64_t v39 = a5;
  uint64_t v35 = a2;
  uint64_t v14 = sub_24872C8E0();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v35 - v15;
  uint64_t v17 = type metadata accessor for Bare();
  sub_2486E775C((uint64_t)a4, (uint64_t)v42);
  uint64_t v18 = *(void *)(a11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v16, a7, a11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, a11);
  v40[0] = a8;
  v40[1] = a9;
  char v41 = a10;
  uint64_t v19 = v35;
  swift_bridgeObjectRetain();
  uint64_t v20 = v36;
  swift_bridgeObjectRetain();
  sub_2486D02F8(a4);
  sub_2486D0384(a8, a9, a10);
  uint64_t v21 = v37;
  swift_retain();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24870B2D8(v38, v19, v20, 0, (uint64_t)v42, 0, v39, v43, v21, (uint64_t)v16, v40, v17, WitnessTable);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
  long long v23 = (_OWORD *)swift_allocObject();
  long long v24 = v43[8];
  long long v25 = v43[10];
  long long v26 = v43[11];
  v23[11] = v43[9];
  v23[12] = v25;
  v23[13] = v26;
  long long v27 = v43[4];
  long long v28 = v43[6];
  long long v29 = v43[7];
  v23[7] = v43[5];
  v23[8] = v28;
  v23[9] = v29;
  v23[10] = v24;
  long long v30 = v43[0];
  long long v31 = v43[1];
  v23[1] = xmmword_24872D630;
  v23[2] = v30;
  long long v32 = v43[2];
  long long v33 = v43[3];
  void v23[3] = v31;
  void v23[4] = v32;
  v23[5] = v33;
  void v23[6] = v27;
  return sub_2486CDED4((uint64_t)v23);
}

uint64_t Argument.init(help:completion:transform:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v20 = a6;
  uint64_t v11 = type metadata accessor for Parsed();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = &v21[-v13 - 8];
  sub_2486E775C(a1, (uint64_t)v21);
  uint64_t v15 = *a2;
  uint64_t v16 = a2[1];
  char v17 = *((unsigned char *)a2 + 16);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a5;
  sub_2486E775C((uint64_t)v21, v18 + 24);
  *(void *)(v18 + 80) = a3;
  *(void *)(v18 + 88) = a4;
  *(void *)(v18 + 96) = v15;
  *(void *)(v18 + 104) = v16;
  *(unsigned char *)(v18 + 112) = v17;
  sub_24870A630((uint64_t)sub_2486E7B28, v18, v14);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v12 + 32))(v20, v14, v11);
}

uint64_t sub_2486E58D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10)
{
  uint64_t v33 = a6;
  uint64_t v34 = a1;
  uint64_t v35 = a5;
  uint64_t v15 = sub_24872C8E0();
  MEMORY[0x270FA5388](v15 - 8);
  char v17 = (char *)&v33 - v16;
  uint64_t v18 = type metadata accessor for Bare();
  sub_2486E775C((uint64_t)a4, (uint64_t)v38);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a10 - 8) + 56))(v17, 1, 1, a10);
  v36[0] = a7;
  v36[1] = a8;
  char v37 = a9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2486D02F8(a4);
  sub_2486D0384(a7, a8, a9);
  uint64_t v19 = v33;
  swift_retain();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24870B2D8(v34, a2, a3, 0, (uint64_t)v38, 0, v35, v39, v19, (uint64_t)v17, v36, v18, WitnessTable);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
  uint64_t v21 = (_OWORD *)swift_allocObject();
  long long v22 = v39[8];
  long long v23 = v39[10];
  long long v24 = v39[11];
  v21[11] = v39[9];
  long long v21[12] = v23;
  v21[13] = v24;
  long long v25 = v39[4];
  long long v26 = v39[6];
  long long v27 = v39[7];
  v21[7] = v39[5];
  v21[8] = v26;
  v21[9] = v27;
  v21[10] = v22;
  long long v28 = v39[0];
  long long v29 = v39[1];
  v21[1] = xmmword_24872D630;
  v21[2] = v28;
  long long v30 = v39[2];
  long long v31 = v39[3];
  v21[3] = v29;
  v21[4] = v30;
  v21[5] = v31;
  v21[6] = v25;
  return sub_2486CDED4((uint64_t)v21);
}

uint64_t Argument.init<A>(wrappedValue:help:completion:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v18 = a5;
  sub_24872C8E0();
  uint64_t v9 = type metadata accessor for Parsed();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = &v19[-v11 - 8];
  sub_2486E775C(a1, (uint64_t)v19);
  uint64_t v13 = *a2;
  uint64_t v14 = a2[1];
  char v15 = *((unsigned char *)a2 + 16);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = a4;
  sub_2486E775C((uint64_t)v19, v16 + 32);
  *(void *)(v16 + 88) = v13;
  *(void *)(v16 + 96) = v14;
  *(unsigned char *)(v16 + 104) = v15;
  sub_24870A630((uint64_t)sub_2486E7B68, v16, v12);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v10 + 32))(v18, v12, v9);
}

uint64_t Argument.init<A>(wrappedValue:help:completion:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v24 = a5;
  uint64_t v25 = a1;
  uint64_t v27 = a6;
  uint64_t v9 = sub_24872C8E0();
  uint64_t v26 = type metadata accessor for Parsed();
  uint64_t v10 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v12 = (uint64_t *)((char *)&v23 - v11);
  sub_2486E775C(a2, (uint64_t)v28);
  uint64_t v13 = *a3;
  uint64_t v23 = a3[1];
  char v14 = *((unsigned char *)a3 + 16);
  uint64_t v15 = *(void *)(v9 - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 81) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v17 = (*(void *)(v15 + 64) + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = v24;
  *(void *)(v18 + 16) = a4;
  *(void *)(v18 + 24) = v19;
  sub_2486E775C((uint64_t)v28, v18 + 32);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 32))(v18 + v16, v25, v9);
  unint64_t v20 = v18 + v17;
  uint64_t v21 = v23;
  *(void *)unint64_t v20 = v13;
  *(void *)(v20 + 8) = v21;
  *(unsigned char *)(v20 + 16) = v14;
  sub_24870A630((uint64_t)sub_2486E7D04, v18, v12);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v10 + 32))(v27, v12, v26);
}

uint64_t sub_2486E5E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v33 = a3;
  uint64_t v34 = a1;
  uint64_t v14 = sub_24872C8E0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  unint64_t v17 = (char *)&v32 - v16;
  sub_2486E775C((uint64_t)a4, (uint64_t)v37);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a5, v14);
  v35[0] = a6;
  v35[1] = a7;
  char v36 = a8;
  swift_bridgeObjectRetain();
  uint64_t v18 = v33;
  swift_bridgeObjectRetain();
  sub_2486D02F8(a4);
  sub_2486D0384(a6, a7, a8);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24870AF84(v34, a2, v18, 0, (uint64_t)v37, 0, (uint64_t)v17, v38, v35, v14, WitnessTable);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
  unint64_t v20 = (_OWORD *)swift_allocObject();
  long long v21 = v38[8];
  long long v22 = v38[10];
  long long v23 = v38[11];
  v20[11] = v38[9];
  v20[12] = v22;
  v20[13] = v23;
  long long v24 = v38[4];
  long long v25 = v38[6];
  long long v26 = v38[7];
  v20[7] = v38[5];
  v20[8] = v25;
  v20[9] = v26;
  v20[10] = v21;
  long long v27 = v38[0];
  long long v28 = v38[1];
  v20[1] = xmmword_24872D630;
  _OWORD v20[2] = v27;
  long long v29 = v38[2];
  long long v30 = v38[3];
  v20[3] = v28;
  v20[4] = v29;
  v20[5] = v30;
  void v20[6] = v24;
  return sub_2486CDED4((uint64_t)v20);
}

uint64_t Argument.init<A>(help:completion:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v18 = a5;
  sub_24872C8E0();
  uint64_t v9 = type metadata accessor for Parsed();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = &v19[-v11 - 8];
  sub_2486E775C(a1, (uint64_t)v19);
  uint64_t v13 = *a2;
  uint64_t v14 = a2[1];
  char v15 = *((unsigned char *)a2 + 16);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = a4;
  sub_2486E775C((uint64_t)v19, v16 + 32);
  *(void *)(v16 + 88) = v13;
  *(void *)(v16 + 96) = v14;
  *(unsigned char *)(v16 + 104) = v15;
  sub_24870A630((uint64_t)sub_2486E7B68, v16, v12);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v10 + 32))(v18, v12, v9);
}

uint64_t sub_2486E619C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v31 = a1;
  uint64_t v15 = sub_24872C8E0();
  MEMORY[0x270FA5388](v15);
  unint64_t v17 = (char *)&v32[-1] - v16;
  sub_2486E775C((uint64_t)a4, (uint64_t)v34);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a8 - 8) + 56))(v17, 1, 1, a8);
  v32[0] = a5;
  v32[1] = a6;
  char v33 = a7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2486D02F8(a4);
  sub_2486D0384(a5, a6, a7);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24870AF84(v31, a2, a3, 0, (uint64_t)v34, 0, (uint64_t)v17, v35, v32, v15, WitnessTable);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
  uint64_t v19 = (_OWORD *)swift_allocObject();
  long long v20 = v35[8];
  long long v21 = v35[10];
  long long v22 = v35[11];
  v19[11] = v35[9];
  v19[12] = v21;
  _OWORD v19[13] = v22;
  long long v23 = v35[4];
  long long v24 = v35[6];
  long long v25 = v35[7];
  v19[7] = v35[5];
  v19[8] = v24;
  v19[9] = v25;
  v19[10] = v20;
  long long v26 = v35[0];
  long long v27 = v35[1];
  v19[1] = xmmword_24872D630;
  void v19[2] = v26;
  long long v28 = v35[2];
  long long v29 = v35[3];
  v19[3] = v27;
  void v19[4] = v28;
  v19[5] = v29;
  v19[6] = v23;
  return sub_2486CDED4((uint64_t)v19);
}

uint64_t Argument.init<A>(wrappedValue:help:completion:transform:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v21 = a4;
  uint64_t v22 = a6;
  sub_24872C8E0();
  uint64_t v10 = type metadata accessor for Parsed();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (uint64_t *)((char *)&v20 - v12);
  sub_2486E775C(a1, (uint64_t)v23);
  uint64_t v15 = *a2;
  uint64_t v14 = a2[1];
  char v16 = *((unsigned char *)a2 + 16);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a5;
  sub_2486E775C((uint64_t)v23, v17 + 24);
  uint64_t v18 = v21;
  *(void *)(v17 + 80) = a3;
  *(void *)(v17 + 88) = v18;
  *(void *)(v17 + 96) = v15;
  *(void *)(v17 + 104) = v14;
  *(unsigned char *)(v17 + 112) = v16;
  sub_24870A630((uint64_t)sub_2486E7DDC, v17, v13);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v11 + 32))(v22, v13, v10);
}

uint64_t Argument.init<A>(wrappedValue:help:completion:transform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v27 = a4;
  uint64_t v28 = a5;
  uint64_t v29 = a1;
  uint64_t v31 = a7;
  uint64_t v10 = sub_24872C8E0();
  uint64_t v30 = type metadata accessor for Parsed();
  uint64_t v11 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v13 = (uint64_t *)((char *)&v25 - v12);
  sub_2486E775C(a2, (uint64_t)v32);
  uint64_t v14 = *a3;
  uint64_t v26 = a3[1];
  char v15 = *((unsigned char *)a3 + 16);
  uint64_t v16 = *(void *)(v10 - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (*(void *)(v16 + 64) + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = a6;
  sub_2486E775C((uint64_t)v32, (uint64_t)(v19 + 24));
  uint64_t v21 = v28;
  uint64_t v20 = v29;
  *((void *)v19 + 10) = v27;
  *((void *)v19 + 11) = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(&v19[v17], v20, v10);
  uint64_t v22 = &v19[v18];
  uint64_t v23 = v26;
  *(void *)uint64_t v22 = v14;
  *((void *)v22 + 1) = v23;
  v22[16] = v15;
  sub_24870A630((uint64_t)sub_2486E7F88, (uint64_t)v19, v13);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v11 + 32))(v31, v13, v30);
}

uint64_t sub_2486E66F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v34 = a3;
  uint64_t v35 = a6;
  uint64_t v36 = a1;
  uint64_t v37 = a5;
  uint64_t v14 = sub_24872C8E0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  unint64_t v17 = (char *)&v33 - v16;
  sub_2486E775C((uint64_t)a4, (uint64_t)v40);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a7, v14);
  v38[0] = a8;
  v38[1] = a9;
  char v39 = a10;
  swift_bridgeObjectRetain();
  uint64_t v18 = v34;
  swift_bridgeObjectRetain();
  sub_2486D02F8(a4);
  sub_2486D0384(a8, a9, a10);
  uint64_t v19 = v35;
  swift_retain();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24870B2D8(v36, a2, v18, 0, (uint64_t)v40, 0, v37, v41, v19, (uint64_t)v17, v38, v14, WitnessTable);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
  uint64_t v21 = (_OWORD *)swift_allocObject();
  long long v22 = v41[8];
  long long v23 = v41[10];
  long long v24 = v41[11];
  v21[11] = v41[9];
  long long v21[12] = v23;
  v21[13] = v24;
  long long v25 = v41[4];
  long long v26 = v41[6];
  long long v27 = v41[7];
  v21[7] = v41[5];
  v21[8] = v26;
  v21[9] = v27;
  v21[10] = v22;
  long long v28 = v41[0];
  long long v29 = v41[1];
  v21[1] = xmmword_24872D630;
  v21[2] = v28;
  long long v30 = v41[2];
  long long v31 = v41[3];
  v21[3] = v29;
  v21[4] = v30;
  v21[5] = v31;
  v21[6] = v25;
  return sub_2486CDED4((uint64_t)v21);
}

uint64_t Argument.init<A>(help:completion:transform:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v21 = a4;
  uint64_t v22 = a6;
  sub_24872C8E0();
  uint64_t v10 = type metadata accessor for Parsed();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (uint64_t *)((char *)&v20 - v12);
  sub_2486E775C(a1, (uint64_t)v23);
  uint64_t v15 = *a2;
  uint64_t v14 = a2[1];
  char v16 = *((unsigned char *)a2 + 16);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a5;
  sub_2486E775C((uint64_t)v23, v17 + 24);
  uint64_t v18 = v21;
  *(void *)(v17 + 80) = a3;
  *(void *)(v17 + 88) = v18;
  *(void *)(v17 + 96) = v15;
  *(void *)(v17 + 104) = v14;
  *(unsigned char *)(v17 + 112) = v16;
  sub_24870A630((uint64_t)sub_2486E7DDC, v17, v13);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v11 + 32))(v22, v13, v10);
}

uint64_t sub_2486E6A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10)
{
  uint64_t v32 = a6;
  uint64_t v33 = a1;
  uint64_t v34 = a5;
  uint64_t v15 = sub_24872C8E0();
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v32 - v16;
  sub_2486E775C((uint64_t)a4, (uint64_t)v37);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a10 - 8) + 56))(v17, 1, 1, a10);
  v35[0] = a7;
  v35[1] = a8;
  char v36 = a9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2486D02F8(a4);
  sub_2486D0384(a7, a8, a9);
  uint64_t v18 = v32;
  swift_retain();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24870B2D8(v33, a2, a3, 0, (uint64_t)v37, 0, v34, v38, v18, (uint64_t)v17, v35, v15, WitnessTable);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
  uint64_t v20 = (_OWORD *)swift_allocObject();
  long long v21 = v38[8];
  long long v22 = v38[10];
  long long v23 = v38[11];
  v20[11] = v38[9];
  v20[12] = v22;
  v20[13] = v23;
  long long v24 = v38[4];
  long long v25 = v38[6];
  long long v26 = v38[7];
  v20[7] = v38[5];
  v20[8] = v25;
  v20[9] = v26;
  v20[10] = v21;
  long long v27 = v38[0];
  long long v28 = v38[1];
  v20[1] = xmmword_24872D630;
  _OWORD v20[2] = v27;
  long long v29 = v38[2];
  long long v30 = v38[3];
  v20[3] = v28;
  v20[4] = v29;
  v20[5] = v30;
  void v20[6] = v24;
  return sub_2486CDED4((uint64_t)v20);
}

double Argument.init<A>(wrappedValue:parsing:help:completion:)@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v12 = *a2;
  sub_2486E775C(a3, (uint64_t)v26);
  uint64_t v13 = *a4;
  uint64_t v14 = a4[1];
  char v15 = *((unsigned char *)a4 + 16);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a5;
  *(void *)(v16 + 24) = a6;
  sub_2486E775C((uint64_t)v26, v16 + 32);
  *(unsigned char *)(v16 + 81) = v12;
  *(void *)(v16 + 88) = a1;
  *(void *)(v16 + 96) = v13;
  *(void *)(v16 + 104) = v14;
  *(unsigned char *)(v16 + 112) = v15;
  sub_24872C830();
  sub_24870A630((uint64_t)sub_2486E80D0, v16, &v22);
  long long v20 = v22;
  char v21 = v23;
  uint64_t v17 = type metadata accessor for Parsed();
  (*(void (**)(long long *, long long *, uint64_t))(*(void *)(v17 - 8) + 32))(&v24, &v20, v17);
  char v18 = v25;
  double result = *(double *)&v24;
  *(_OWORD *)a7 = v24;
  *(unsigned char *)(a7 + 16) = v18;
  return result;
}

uint64_t sub_2486E6DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v16 = sub_24872C830();
  sub_2486E775C((uint64_t)a4, (uint64_t)v31);
  uint64_t v30 = a6;
  v28[0] = a7;
  v28[1] = a8;
  char v29 = a9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2486D02F8(a4);
  swift_bridgeObjectRetain();
  sub_2486D0384(a7, a8, a9);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24870AF84(a1, a2, a3, 0, (uint64_t)v31, a5, (uint64_t)&v30, v32, v28, v16, WitnessTable);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
  char v18 = (_OWORD *)swift_allocObject();
  long long v19 = v32[10];
  v18[11] = v32[9];
  v18[12] = v19;
  v18[13] = v32[11];
  long long v20 = v32[6];
  v18[7] = v32[5];
  _OWORD v18[8] = v20;
  long long v21 = v32[8];
  v18[9] = v32[7];
  v18[10] = v21;
  long long v22 = v32[0];
  long long v23 = v32[1];
  v18[1] = xmmword_24872D630;
  v18[2] = v22;
  long long v24 = v32[2];
  v18[3] = v23;
  void v18[4] = v24;
  long long v25 = v32[4];
  v18[5] = v32[3];
  v18[6] = v25;
  return sub_2486CDED4((uint64_t)v18);
}

double Argument.init<A>(parsing:help:completion:)@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v10 = *a1;
  sub_2486E775C(a2, (uint64_t)v24);
  uint64_t v11 = *a3;
  uint64_t v12 = a3[1];
  char v13 = *((unsigned char *)a3 + 16);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a4;
  *(void *)(v14 + 24) = a5;
  sub_2486E775C((uint64_t)v24, v14 + 32);
  *(unsigned char *)(v14 + 81) = v10;
  *(void *)(v14 + 88) = v11;
  *(void *)(v14 + 96) = v12;
  *(unsigned char *)(v14 + 104) = v13;
  sub_24872C830();
  sub_24870A630((uint64_t)sub_2486E8174, v14, &v20);
  long long v18 = v20;
  char v19 = v21;
  uint64_t v15 = type metadata accessor for Parsed();
  (*(void (**)(long long *, long long *, uint64_t))(*(void *)(v15 - 8) + 32))(&v22, &v18, v15);
  char v16 = v23;
  double result = *(double *)&v22;
  *(_OWORD *)a6 = v22;
  *(unsigned char *)(a6 + 16) = v16;
  return result;
}

uint64_t sub_2486E7064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, int a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v16 = sub_24872C830();
  sub_2486E775C((uint64_t)a4, (uint64_t)v30);
  uint64_t v29 = 0;
  v27[0] = a6;
  v27[1] = a7;
  char v28 = a8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2486D02F8(a4);
  sub_2486D0384(a6, a7, a8);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24870AF84(a1, a2, a3, 0, (uint64_t)v30, a5, (uint64_t)&v29, v31, v27, v16, WitnessTable);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
  long long v18 = (_OWORD *)swift_allocObject();
  long long v19 = v31[10];
  v18[11] = v31[9];
  v18[12] = v19;
  v18[13] = v31[11];
  long long v20 = v31[6];
  v18[7] = v31[5];
  _OWORD v18[8] = v20;
  long long v21 = v31[8];
  v18[9] = v31[7];
  v18[10] = v21;
  long long v22 = v31[0];
  long long v23 = v31[1];
  v18[1] = xmmword_24872D630;
  v18[2] = v22;
  long long v24 = v31[2];
  v18[3] = v23;
  void v18[4] = v24;
  long long v25 = v31[4];
  v18[5] = v31[3];
  v18[6] = v25;
  return sub_2486CDED4((uint64_t)v18);
}

double Argument.init<A>(wrappedValue:parsing:help:completion:transform:)@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  char v14 = *a2;
  sub_2486E775C(a3, (uint64_t)v28);
  uint64_t v15 = *a4;
  uint64_t v16 = a4[1];
  char v17 = *((unsigned char *)a4 + 16);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a7;
  sub_2486E775C((uint64_t)v28, v18 + 24);
  *(unsigned char *)(v18 + 73) = v14;
  *(void *)(v18 + 80) = a5;
  *(void *)(v18 + 88) = a6;
  *(void *)(v18 + 96) = a1;
  *(void *)(v18 + 104) = v15;
  *(void *)(v18 + 112) = v16;
  *(unsigned char *)(v18 + 120) = v17;
  sub_24872C830();
  sub_24870A630((uint64_t)sub_2486E821C, v18, &v24);
  long long v22 = v24;
  char v23 = v25;
  uint64_t v19 = type metadata accessor for Parsed();
  (*(void (**)(long long *, long long *, uint64_t))(*(void *)(v19 - 8) + 32))(&v26, &v22, v19);
  char v20 = v27;
  double result = *(double *)&v26;
  *(_OWORD *)a8 = v26;
  *(unsigned char *)(a8 + 16) = v20;
  return result;
}

uint64_t sub_2486E7314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v16 = sub_24872C830();
  sub_2486E775C((uint64_t)a4, (uint64_t)v33);
  uint64_t v32 = a8;
  v30[0] = a9;
  v30[1] = a10;
  char v31 = a11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2486D02F8(a4);
  swift_bridgeObjectRetain();
  sub_2486D0384(a9, a10, a11);
  swift_retain();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24870B2D8(a1, a2, a3, 0, (uint64_t)v33, a5, a6, v34, a7, (uint64_t)&v32, v30, v16, WitnessTable);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
  uint64_t v18 = (_OWORD *)swift_allocObject();
  long long v19 = v34[10];
  v18[11] = v34[9];
  v18[12] = v19;
  v18[13] = v34[11];
  long long v20 = v34[6];
  v18[7] = v34[5];
  _OWORD v18[8] = v20;
  long long v21 = v34[8];
  v18[9] = v34[7];
  v18[10] = v21;
  long long v22 = v34[0];
  long long v23 = v34[1];
  v18[1] = xmmword_24872D630;
  v18[2] = v22;
  long long v24 = v34[2];
  v18[3] = v23;
  void v18[4] = v24;
  long long v25 = v34[4];
  v18[5] = v34[3];
  v18[6] = v25;
  return sub_2486CDED4((uint64_t)v18);
}

double Argument.init<A>(parsing:help:completion:transform:)@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v12 = *a1;
  sub_2486E775C(a2, (uint64_t)v26);
  uint64_t v13 = *a3;
  uint64_t v14 = a3[1];
  char v15 = *((unsigned char *)a3 + 16);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a6;
  sub_2486E775C((uint64_t)v26, v16 + 24);
  *(unsigned char *)(v16 + 73) = v12;
  *(void *)(v16 + 80) = a4;
  *(void *)(v16 + 88) = a5;
  *(void *)(v16 + 96) = v13;
  *(void *)(v16 + 104) = v14;
  *(unsigned char *)(v16 + 112) = v15;
  sub_24872C830();
  sub_24870A630((uint64_t)sub_2486E82D0, v16, &v22);
  long long v20 = v22;
  char v21 = v23;
  uint64_t v17 = type metadata accessor for Parsed();
  (*(void (**)(long long *, long long *, uint64_t))(*(void *)(v17 - 8) + 32))(&v24, &v20, v17);
  char v18 = v25;
  double result = *(double *)&v24;
  *(_OWORD *)a7 = v24;
  *(unsigned char *)(a7 + 16) = v18;
  return result;
}

uint64_t sub_2486E75DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v16 = sub_24872C830();
  sub_2486E775C((uint64_t)a4, (uint64_t)v32);
  uint64_t v31 = 0;
  v29[0] = a8;
  v29[1] = a9;
  char v30 = a10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2486D02F8(a4);
  sub_2486D0384(a8, a9, a10);
  swift_retain();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24870B2D8(a1, a2, a3, 0, (uint64_t)v32, a5, a6, v33, a7, (uint64_t)&v31, v29, v16, WitnessTable);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
  char v18 = (_OWORD *)swift_allocObject();
  long long v19 = v33[10];
  v18[11] = v33[9];
  v18[12] = v19;
  v18[13] = v33[11];
  long long v20 = v33[6];
  v18[7] = v33[5];
  _OWORD v18[8] = v20;
  long long v21 = v33[8];
  v18[9] = v33[7];
  v18[10] = v21;
  long long v22 = v33[0];
  long long v23 = v33[1];
  v18[1] = xmmword_24872D630;
  v18[2] = v22;
  long long v24 = v33[2];
  v18[3] = v23;
  void v18[4] = v24;
  long long v25 = v33[4];
  v18[5] = v33[3];
  v18[6] = v25;
  return sub_2486CDED4((uint64_t)v18);
}

uint64_t sub_2486E775C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FD98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2486E77C4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 81) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  int v6 = *(unsigned __int8 *)(v0 + v5 + 16);
  if (v6 != 255) {
    sub_2486C549C(*(void *)(v0 + v5), *(void *)(v0 + v5 + 8), v6);
  }
  return MEMORY[0x270FA0238](v0, v5 + 17, v3 | 7);
}

uint64_t sub_2486E78B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(*(void *)(v3 + 16) - 8) + 80) + 81) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v3 + 16) - 8) + 80);
  uint64_t v5 = v3 + ((*(void *)(*(void *)(*(void *)(v3 + 16) - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_2486E4DB8(a1, a2, a3, (uint64_t *)(v3 + 32), v3 + v4, *(void *)v5, *(void *)(v5 + 8), *(unsigned char *)(v5 + 16), *(void *)(v3 + 16));
}

uint64_t sub_2486E7950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2486E514C(a1, a2, a3, (uint64_t *)(v3 + 32), *(void *)(v3 + 88), *(void *)(v3 + 96), *(unsigned char *)(v3 + 104), *(void *)(v3 + 16));
}

uint64_t sub_2486E7984()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 96) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v0 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  int v6 = *(unsigned __int8 *)(v0 + v5 + 16);
  if (v6 != 255) {
    sub_2486C549C(*(void *)(v0 + v5), *(void *)(v0 + v5 + 8), v6);
  }
  return MEMORY[0x270FA0238](v0, v5 + 17, v3 | 7);
}

uint64_t sub_2486E7A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v3[2] - 8) + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3[2] - 8) + 80);
  uint64_t v5 = (uint64_t)v3 + v4;
  int v6 = (char *)v3 + ((*(void *)(*(void *)(v3[2] - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_2486E5524(a1, a2, a3, v3 + 3, v3[10], v3[11], v5, *(void *)v6, *((void *)v6 + 1), v6[16], v3[2]);
}

uint64_t sub_2486E7B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2486E58D0(a1, a2, a3, (uint64_t *)(v3 + 24), *(void *)(v3 + 80), *(void *)(v3 + 88), *(void *)(v3 + 96), *(void *)(v3 + 104), *(unsigned char *)(v3 + 112), *(void *)(v3 + 16));
}

uint64_t sub_2486E7B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2486E619C(a1, a2, a3, (uint64_t *)(v3 + 32), *(void *)(v3 + 88), *(void *)(v3 + 96), *(unsigned char *)(v3 + 104), *(void *)(v3 + 16));
}

uint64_t sub_2486E7BA0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(sub_24872C8E0() - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 81) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64) + v4 + 7;
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v0 + v4;
  uint64_t v8 = *(void *)(v1 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v7, 1, v1)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v1);
  }
  int v9 = *(unsigned __int8 *)(v0 + v6 + 16);
  if (v9 != 255) {
    sub_2486C549C(*(void *)(v0 + v6), *(void *)(v0 + v6 + 8), v9);
  }
  return MEMORY[0x270FA0238](v0, v6 + 17, v3 | 7);
}

uint64_t sub_2486E7D04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(sub_24872C8E0() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 81) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2486E5E2C(a1, a2, a3, (uint64_t *)(v3 + 32), v3 + v8, *(void *)(v3 + v9), *(void *)(v3 + v9 + 8), *(unsigned char *)(v3 + v9 + 16));
}

uint64_t sub_2486E7DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2486E6A78(a1, a2, a3, (uint64_t *)(v3 + 24), *(void *)(v3 + 80), *(void *)(v3 + 88), *(void *)(v3 + 96), *(void *)(v3 + 104), *(unsigned char *)(v3 + 112), *(void *)(v3 + 16));
}

uint64_t sub_2486E7E1C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(sub_24872C8E0() - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 96) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64) + v4 + 7;
  if (*(void *)(v0 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v7 = v0 + v4;
  uint64_t v8 = *(void *)(v1 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v7, 1, v1)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v1);
  }
  int v9 = *(unsigned __int8 *)(v0 + v6 + 16);
  if (v9 != 255) {
    sub_2486C549C(*(void *)(v0 + v6), *(void *)(v0 + v6 + 8), v9);
  }
  return MEMORY[0x270FA0238](v0, v6 + 17, v3 | 7);
}

uint64_t sub_2486E7F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(sub_24872C8E0() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (uint64_t)v3 + v8;
  char v10 = (char *)v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_2486E66F0(a1, a2, a3, v3 + 3, v3[10], v3[11], v9, *(void *)v10, *((void *)v10 + 1), v10[16]);
}

uint64_t sub_2486E8068()
{
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  int v1 = *(unsigned __int8 *)(v0 + 112);
  if (v1 != 255) {
    sub_2486C549C(*(void *)(v0 + 96), *(void *)(v0 + 104), v1);
  }
  return MEMORY[0x270FA0238](v0, 113, 7);
}

uint64_t sub_2486E80D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2486E6DBC(a1, a2, a3, (uint64_t *)(v3 + 32), *(unsigned __int8 *)(v3 + 81), *(void *)(v3 + 88), *(void *)(v3 + 96), *(void *)(v3 + 104), *(unsigned char *)(v3 + 112));
}

uint64_t objectdestroy_2Tm()
{
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  int v1 = *(unsigned __int8 *)(v0 + 104);
  if (v1 != 255) {
    sub_2486C549C(*(void *)(v0 + 88), *(void *)(v0 + 96), v1);
  }
  return MEMORY[0x270FA0238](v0, 105, 7);
}

uint64_t sub_2486E8174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2486E7064(a1, a2, a3, (uint64_t *)(v3 + 32), *(unsigned __int8 *)(v3 + 81), *(void *)(v3 + 88), *(void *)(v3 + 96), *(unsigned char *)(v3 + 104));
}

uint64_t sub_2486E81AC()
{
  if (*(void *)(v0 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_bridgeObjectRelease();
  int v1 = *(unsigned __int8 *)(v0 + 120);
  if (v1 != 255) {
    sub_2486C549C(*(void *)(v0 + 104), *(void *)(v0 + 112), v1);
  }
  return MEMORY[0x270FA0238](v0, 121, 7);
}

uint64_t sub_2486E821C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2486E7314(a1, a2, a3, (uint64_t *)(v3 + 24), *(unsigned __int8 *)(v3 + 73), *(void *)(v3 + 80), *(void *)(v3 + 88), *(void *)(v3 + 96), *(void *)(v3 + 104), *(void *)(v3 + 112), *(unsigned char *)(v3 + 120));
}

uint64_t objectdestroy_8Tm()
{
  if (*(void *)(v0 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  int v1 = *(unsigned __int8 *)(v0 + 112);
  if (v1 != 255) {
    sub_2486C549C(*(void *)(v0 + 96), *(void *)(v0 + 104), v1);
  }
  return MEMORY[0x270FA0238](v0, 113, 7);
}

uint64_t sub_2486E82D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2486E75DC(a1, a2, a3, (uint64_t *)(v3 + 24), *(unsigned __int8 *)(v3 + 73), *(void *)(v3 + 80), *(void *)(v3 + 88), *(void *)(v3 + 96), *(void *)(v3 + 104), *(unsigned char *)(v3 + 112));
}

uint64_t sub_2486E8314(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_2486E8350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(void *)(a3 - 8);
}

uint64_t sub_2486E8358(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2486E8398()
{
  unint64_t result = qword_26931E3D8;
  if (!qword_26931E3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E3D8);
  }
  return result;
}

uint64_t sub_2486E83EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Argument();
  return Argument.wrappedValue.getter(v2, a1);
}

uint64_t sub_2486E842C()
{
  return 8;
}

void *sub_2486E8438(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_2486E8444()
{
  uint64_t result = type metadata accessor for Parsed();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_2486E84D4(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 != 1)
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v5) = 0;
      return v3;
    }
    uint64_t v14 = *((void *)a2 + 1);
    *uint64_t v3 = *(void *)a2;
    v3[1] = v14;
    *((unsigned char *)v3 + v5) = 1;
  }
  swift_retain();
  return v3;
}

uint64_t sub_2486E864C(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 0x10) {
    unint64_t v2 = 16;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
}

void *sub_2486E874C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    uint64_t v10 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v10;
    swift_retain();
    char v11 = 1;
  }
  else
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v11 = 0;
  }
  *((unsigned char *)a1 + v4) = v11;
  return a1;
}

unsigned __int8 *sub_2486E8888(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      uint64_t v18 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v18;
      a1[v7] = 1;
      swift_retain();
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      a1[v7] = 0;
    }
  }
  return a1;
}

_OWORD *sub_2486E8AA4(_OWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *a1 = *(_OWORD *)a2;
    char v10 = 1;
  }
  else
  {
    (*(void (**)(_OWORD *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 0;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_2486E8BDC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      char v18 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 0;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_2486E8DF4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 16;
  if (*(void *)(v3 + 64) > 0x10uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_2486E8F28(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x10) {
    unint64_t v5 = 16;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x2486E90F0);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t getEnumTagSinglePayload for ArgumentDefinition.ParsingStrategy(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ArgumentArrayParsingStrategy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2486E9274);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArgumentArrayParsingStrategy()
{
  return &type metadata for ArgumentArrayParsingStrategy;
}

uint64_t Option.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Option();
  sub_2486C2100(a1, (uint64_t)v7);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_248709F24((uint64_t)v7, v4, WitnessTable, a2);
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t type metadata accessor for Option()
{
  return __swift_instantiateGenericMetadata();
}

void Option.init()()
{
}

uint64_t Option.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = type metadata accessor for Parsed();
  MEMORY[0x270FA5388](v6);
  int v8 = (char *)&v11 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v11 - v7, v3, v6);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v5 - 8) + 32))(a2, v8, v5);
  }
  uint64_t result = sub_24872CC40();
  __break(1u);
  return result;
}

uint64_t sub_2486E9528(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v2 = (char *)&v6 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v6 - v1);
  uint64_t v4 = type metadata accessor for Option();
  return Option.wrappedValue.setter((uint64_t)v2, v4);
}

uint64_t Option.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = type metadata accessor for Parsed();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v2, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v2, a1, v4);
  return swift_storeEnumTagMultiPayload();
}

void (*Option.wrappedValue.modify(void *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t v5 = malloc(0x30uLL);
  *a1 = v5;
  *uint64_t v5 = a2;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v5[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v5[4] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v5[5] = v9;
  Option.wrappedValue.getter(a2, (uint64_t)v9);
  return sub_2486E9788;
}

void sub_2486E9788(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[4];
  uint64_t v4 = (void *)(*a1)[5];
  if (a2)
  {
    uint64_t v5 = v2[2];
    uint64_t v6 = v2[3];
    uint64_t v7 = *v2;
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[4], v4, v5);
    Option.wrappedValue.setter((uint64_t)v3, v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    Option.wrappedValue.setter((*a1)[5], *v2);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t sub_2486E9848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return Option.init(from:)(a1, a2);
}

unint64_t Option.description.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = type metadata accessor for Parsed();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unsigned int v13 = (char *)&v16 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v16 - v12, v2, v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return 0xD000000000000014;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v13, v3);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    uint64_t v14 = sub_24872C540();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  return v14;
}

void static SingleValueParsingStrategy.scanningForValue.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

void static ArrayParsingStrategy.singleValue.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void static ArrayParsingStrategy.unconditionalSingleValue.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

void static ArrayParsingStrategy.upToNextOption.getter(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

void static ArrayParsingStrategy.remaining.getter(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t ArrayParsingStrategy.hash(into:)()
{
  return sub_24872D040();
}

BOOL static ArrayParsingStrategy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Option<A>.init(wrappedValue:name:parsing:help:completion:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v29 = a7;
  uint64_t v30 = a1;
  uint64_t v32 = a8;
  uint64_t v31 = type metadata accessor for Parsed();
  uint64_t v13 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v15 = (uint64_t *)((char *)&v26 - v14);
  uint64_t v16 = *a2;
  LOBYTE(a3) = *a3;
  sub_2486E775C(a4, (uint64_t)v33);
  uint64_t v17 = *a5;
  uint64_t v28 = a5[1];
  int v27 = *((unsigned __int8 *)a5 + 16);
  uint64_t v18 = *(void *)(a6 - 8);
  unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 90) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v20 = (*(void *)(v18 + 64) + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v29;
  *(void *)(v21 + 16) = a6;
  *(void *)(v21 + 24) = v22;
  *(void *)(v21 + 32) = v16;
  sub_2486E775C((uint64_t)v33, v21 + 40);
  *(unsigned char *)(v21 + 89) = (_BYTE)a3;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v18 + 32))(v21 + v19, v30, a6);
  unint64_t v23 = v21 + v20;
  uint64_t v24 = v28;
  *(void *)unint64_t v23 = v17;
  *(void *)(v23 + 8) = v24;
  *(unsigned char *)(v23 + 16) = v27;
  sub_24870A630((uint64_t)sub_2486ECDBC, v21, v15);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v13 + 32))(v32, v15, v31);
}

uint64_t sub_2486E9D08(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11)
{
  uint64_t v38 = a8;
  uint64_t v35 = a1;
  uint64_t v36 = a7;
  int v39 = a6;
  uint64_t v33 = (uint64_t *)a5;
  int v37 = a10;
  uint64_t v14 = sub_24872C8E0();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v32 - v15;
  uint64_t v17 = type metadata accessor for Bare();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v18 = swift_bridgeObjectRetain();
  unint64_t v34 = sub_2486F9CA0(v18, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v19 = v33;
  sub_2486E775C((uint64_t)v33, (uint64_t)v42);
  uint64_t v20 = *(void *)(a11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v16, v36, a11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, a11);
  uint64_t v21 = v38;
  v40[0] = v38;
  v40[1] = a9;
  LOBYTE(v20) = v37;
  char v41 = v37;
  sub_2486D02F8(v19);
  sub_2486D0384(v21, a9, v20);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24870AF84(v35, a2, a3, v34, (uint64_t)v42, v39, (uint64_t)v16, v43, v40, v17, WitnessTable);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
  unint64_t v23 = (_OWORD *)swift_allocObject();
  long long v24 = v43[10];
  v23[11] = v43[9];
  v23[12] = v24;
  v23[13] = v43[11];
  long long v25 = v43[6];
  v23[7] = v43[5];
  v23[8] = v25;
  long long v26 = v43[8];
  v23[9] = v43[7];
  v23[10] = v26;
  long long v27 = v43[0];
  long long v28 = v43[1];
  v23[1] = xmmword_24872D630;
  v23[2] = v27;
  long long v29 = v43[2];
  void v23[3] = v28;
  void v23[4] = v29;
  long long v30 = v43[4];
  v23[5] = v43[3];
  void v23[6] = v30;
  return sub_2486CDED4((uint64_t)v23);
}

uint64_t Option<A>.init(wrappedValue:name:parsing:completion:help:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X5>, uint64_t a3@<X6>, uint64_t a4@<X8>)
{
  uint64_t v27 = a4;
  uint64_t v28 = a3;
  uint64_t v26 = a1;
  uint64_t v5 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v8;
  char v11 = *v10;
  uint64_t v13 = *(void *)v12;
  uint64_t v14 = *(void *)(v12 + 8);
  int v25 = *(unsigned __int8 *)(v12 + 16);
  long long v16 = *v15;
  long long v23 = v15[1];
  long long v24 = v16;
  uint64_t v18 = *((void *)v15 + 4);
  uint64_t v17 = *((void *)v15 + 5);
  char v19 = *((unsigned char *)v15 + 48);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v21, v20);
  uint64_t v36 = v9;
  char v35 = v11;
  v31[0] = v24;
  v31[1] = v23;
  uint64_t v32 = v18;
  uint64_t v33 = v17;
  char v34 = v19;
  v29[0] = v13;
  v29[1] = v14;
  char v30 = v25;
  Option<A>.init(wrappedValue:name:parsing:help:completion:)((uint64_t)v7, &v36, &v35, (uint64_t)v31, v29, a2, v28, v27);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v26, a2);
}

uint64_t Option<A>.init(name:parsing:help:completion:)@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v24 = a6;
  uint64_t v25 = a7;
  uint64_t v12 = type metadata accessor for Parsed();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (uint64_t *)((char *)&v23 - v14);
  uint64_t v16 = *a1;
  LOBYTE(a2) = *a2;
  sub_2486E775C(a3, (uint64_t)v26);
  uint64_t v18 = *a4;
  uint64_t v17 = a4[1];
  char v19 = *((unsigned char *)a4 + 16);
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = v24;
  *(void *)(v20 + 16) = a5;
  *(void *)(v20 + 24) = v21;
  *(void *)(v20 + 32) = v16;
  sub_2486E775C((uint64_t)v26, v20 + 40);
  *(unsigned char *)(v20 + 89) = (_BYTE)a2;
  *(void *)(v20 + 96) = v18;
  *(void *)(v20 + 104) = v17;
  *(unsigned char *)(v20 + 112) = v19;
  sub_24870A630((uint64_t)sub_2486ECE64, v20, v15);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v13 + 32))(v25, v15, v12);
}

uint64_t sub_2486EA258(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10)
{
  uint64_t v34 = a7;
  uint64_t v35 = a8;
  int v36 = a6;
  uint64_t v32 = a1;
  uint64_t v33 = (uint64_t *)a5;
  uint64_t v13 = sub_24872C8E0();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v31 - v14;
  uint64_t v16 = type metadata accessor for Bare();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v17 = swift_bridgeObjectRetain();
  unint64_t v31 = sub_2486F9CA0(v17, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = v33;
  sub_2486E775C((uint64_t)v33, (uint64_t)v39);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a10 - 8) + 56))(v15, 1, 1, a10);
  uint64_t v20 = v34;
  uint64_t v19 = v35;
  v37[0] = v34;
  v37[1] = v35;
  char v38 = a9;
  sub_2486D02F8(v18);
  sub_2486D0384(v20, v19, a9);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24870AF84(v32, a2, a3, v31, (uint64_t)v39, v36, (uint64_t)v15, v40, v37, v16, WitnessTable);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
  uint64_t v22 = (_OWORD *)swift_allocObject();
  long long v23 = v40[10];
  v22[11] = v40[9];
  v22[12] = v23;
  _OWORD v22[13] = v40[11];
  long long v24 = v40[6];
  v22[7] = v40[5];
  v22[8] = v24;
  long long v25 = v40[8];
  v22[9] = v40[7];
  v22[10] = v25;
  long long v26 = v40[0];
  long long v27 = v40[1];
  v22[1] = xmmword_24872D630;
  _OWORD v22[2] = v26;
  long long v28 = v40[2];
  v22[3] = v27;
  void v22[4] = v28;
  long long v29 = v40[4];
  v22[5] = v40[3];
  v22[6] = v29;
  return sub_2486CDED4((uint64_t)v22);
}

uint64_t Option.init(wrappedValue:name:parsing:help:completion:transform:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v30 = a6;
  uint64_t v31 = a7;
  uint64_t v32 = a1;
  uint64_t v34 = a9;
  uint64_t v33 = type metadata accessor for Parsed();
  uint64_t v14 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v16 = (uint64_t *)((char *)&v28 - v15);
  uint64_t v17 = *a2;
  LOBYTE(a3) = *a3;
  sub_2486E775C(a4, (uint64_t)v35);
  uint64_t v18 = *a5;
  uint64_t v29 = a5[1];
  HIDWORD(v28) = *((unsigned __int8 *)a5 + 16);
  uint64_t v19 = *(void *)(a8 - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (*(void *)(v19 + 64) + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a8;
  *(void *)(v22 + 24) = v17;
  sub_2486E775C((uint64_t)v35, v22 + 32);
  *(unsigned char *)(v22 + 81) = (_BYTE)a3;
  uint64_t v24 = v31;
  uint64_t v23 = v32;
  *(void *)(v22 + 88) = v30;
  *(void *)(v22 + 96) = v24;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v19 + 32))(v22 + v20, v23, a8);
  unint64_t v25 = v22 + v21;
  uint64_t v26 = v29;
  *(void *)unint64_t v25 = v18;
  *(void *)(v25 + 8) = v26;
  *(unsigned char *)(v25 + 16) = BYTE4(v28);
  sub_24870A630((uint64_t)sub_2486ECF7C, v22, v16);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v14 + 32))(v34, v16, v33);
}

uint64_t sub_2486EA688(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12, uint64_t a13)
{
  uint64_t v42 = a8;
  uint64_t v44 = a7;
  int v43 = a6;
  int v36 = (uint64_t *)a5;
  uint64_t v39 = a1;
  int v41 = a12;
  uint64_t v40 = a11;
  uint64_t v37 = a9;
  uint64_t v16 = sub_24872C8E0();
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v35 - v17;
  uint64_t v19 = type metadata accessor for Bare();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v20 = swift_bridgeObjectRetain();
  unint64_t v38 = sub_2486F9CA0(v20, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v21 = v36;
  sub_2486E775C((uint64_t)v36, (uint64_t)v47);
  uint64_t v22 = *(void *)(a13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v18, v37, a13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, a13);
  uint64_t v23 = v40;
  v45[0] = a10;
  v45[1] = v40;
  LOBYTE(v22) = v41;
  char v46 = v41;
  sub_2486D02F8(v21);
  sub_2486D0384(a10, v23, v22);
  uint64_t v24 = v42;
  swift_retain();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24870B2D8(v39, a2, a3, v38, (uint64_t)v47, v43, v44, v48, v24, (uint64_t)v18, v45, v19, WitnessTable);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
  uint64_t v26 = (_OWORD *)swift_allocObject();
  long long v27 = v48[10];
  v26[11] = v48[9];
  v26[12] = v27;
  v26[13] = v48[11];
  long long v28 = v48[6];
  uint64_t v26[7] = v48[5];
  v26[8] = v28;
  long long v29 = v48[8];
  v26[9] = v48[7];
  v26[10] = v29;
  long long v30 = v48[0];
  long long v31 = v48[1];
  v26[1] = xmmword_24872D630;
  _OWORD v26[2] = v30;
  long long v32 = v48[2];
  void v26[3] = v31;
  v26[4] = v32;
  long long v33 = v48[4];
  v26[5] = v48[3];
  v26[6] = v33;
  return sub_2486CDED4((uint64_t)v26);
}

uint64_t Option.init(name:parsing:help:completion:transform:)@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  uint64_t v26 = a8;
  uint64_t v13 = type metadata accessor for Parsed();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (uint64_t *)((char *)&v24 - v15);
  uint64_t v17 = *a1;
  LOBYTE(a2) = *a2;
  sub_2486E775C(a3, (uint64_t)v27);
  uint64_t v19 = *a4;
  uint64_t v18 = a4[1];
  char v20 = *((unsigned char *)a4 + 16);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a7;
  *(void *)(v21 + 24) = v17;
  sub_2486E775C((uint64_t)v27, v21 + 32);
  *(unsigned char *)(v21 + 81) = (_BYTE)a2;
  uint64_t v22 = v25;
  *(void *)(v21 + 88) = v24;
  *(void *)(v21 + 96) = v22;
  *(void *)(v21 + 104) = v19;
  *(void *)(v21 + 112) = v18;
  *(unsigned char *)(v21 + 120) = v20;
  sub_24870A630((uint64_t)sub_2486ED02C, v21, v16);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v14 + 32))(v26, v16, v13);
}

uint64_t sub_2486EAA90(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, uint64_t a12)
{
  uint64_t v39 = a8;
  uint64_t v41 = a7;
  int v40 = a6;
  uint64_t v35 = (uint64_t *)a5;
  uint64_t v36 = a1;
  int v38 = a11;
  uint64_t v37 = a10;
  uint64_t v15 = sub_24872C8E0();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v34 - v16;
  uint64_t v18 = type metadata accessor for Bare();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v19 = swift_bridgeObjectRetain();
  unint64_t v34 = sub_2486F9CA0(v19, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v20 = v35;
  sub_2486E775C((uint64_t)v35, (uint64_t)v44);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a12 - 8) + 56))(v17, 1, 1, a12);
  uint64_t v21 = v37;
  v42[0] = a9;
  v42[1] = v37;
  char v22 = v38;
  char v43 = v38;
  sub_2486D02F8(v20);
  sub_2486D0384(a9, v21, v22);
  uint64_t v23 = v39;
  swift_retain();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24870B2D8(v36, a2, a3, v34, (uint64_t)v44, v40, v41, v45, v23, (uint64_t)v17, v42, v18, WitnessTable);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
  uint64_t v25 = (_OWORD *)swift_allocObject();
  long long v26 = v45[10];
  v25[11] = v45[9];
  v25[12] = v26;
  v25[13] = v45[11];
  long long v27 = v45[6];
  v25[7] = v45[5];
  v25[8] = v27;
  long long v28 = v45[8];
  v25[9] = v45[7];
  v25[10] = v28;
  long long v29 = v45[0];
  long long v30 = v45[1];
  v25[1] = xmmword_24872D630;
  uint64_t v25[2] = v29;
  long long v31 = v45[2];
  _OWORD v25[3] = v30;
  v25[4] = v31;
  long long v32 = v45[4];
  v25[5] = v45[3];
  v25[6] = v32;
  return sub_2486CDED4((uint64_t)v25);
}

uint64_t Option.init<A>(wrappedValue:name:parsing:help:completion:)@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v22 = a6;
  uint64_t v24 = a7;
  sub_24872C8E0();
  uint64_t v23 = type metadata accessor for Parsed();
  uint64_t v12 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v14 = (uint64_t *)((char *)&v22 - v13);
  uint64_t v15 = *a1;
  LOBYTE(a2) = *a2;
  sub_2486E775C(a3, (uint64_t)v25);
  uint64_t v17 = *a4;
  uint64_t v16 = a4[1];
  char v18 = *((unsigned char *)a4 + 16);
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = v22;
  *(void *)(v19 + 16) = a5;
  *(void *)(v19 + 24) = v20;
  *(void *)(v19 + 32) = v15;
  sub_2486E775C((uint64_t)v25, v19 + 40);
  *(unsigned char *)(v19 + 89) = (_BYTE)a2;
  *(void *)(v19 + 96) = v17;
  *(void *)(v19 + 104) = v16;
  *(unsigned char *)(v19 + 112) = v18;
  sub_24870A630((uint64_t)sub_2486ED048, v19, v14);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v12 + 32))(v24, v14, v23);
}

uint64_t Option.init<A>(wrappedValue:name:parsing:help:completion:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v30 = a7;
  uint64_t v31 = a1;
  uint64_t v33 = a8;
  uint64_t v13 = sub_24872C8E0();
  uint64_t v32 = type metadata accessor for Parsed();
  uint64_t v14 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v16 = (uint64_t *)((char *)&v27 - v15);
  uint64_t v17 = *a2;
  LOBYTE(a3) = *a3;
  sub_2486E775C(a4, (uint64_t)v34);
  uint64_t v18 = *a5;
  uint64_t v28 = a5[1];
  uint64_t v29 = v18;
  HIDWORD(v27) = *((unsigned __int8 *)a5 + 16);
  uint64_t v19 = *(void *)(v13 - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 90) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (*(void *)(v19 + 64) + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v30;
  *(void *)(v22 + 16) = a6;
  *(void *)(v22 + 24) = v23;
  *(void *)(v22 + 32) = v17;
  sub_2486E775C((uint64_t)v34, v22 + 40);
  *(unsigned char *)(v22 + 89) = (_BYTE)a3;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v19 + 32))(v22 + v20, v31, v13);
  unint64_t v24 = v22 + v21;
  uint64_t v25 = v28;
  *(void *)unint64_t v24 = v29;
  *(void *)(v24 + 8) = v25;
  *(unsigned char *)(v24 + 16) = BYTE4(v27);
  sub_24870A630((uint64_t)sub_2486ED1F8, v22, v16);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v14 + 32))(v33, v16, v32);
}

uint64_t sub_2486EB078(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  uint64_t v35 = a7;
  uint64_t v36 = a8;
  int v37 = a6;
  uint64_t v32 = a1;
  uint64_t v33 = (uint64_t *)a5;
  uint64_t v12 = a1;
  int v34 = a10;
  uint64_t v13 = sub_24872C8E0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v30 - v15;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v17 = swift_bridgeObjectRetain();
  unint64_t v31 = sub_2486F9CA0(v17, v12, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = v33;
  sub_2486E775C((uint64_t)v33, (uint64_t)v40);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v35, v13);
  uint64_t v19 = v36;
  v38[0] = v36;
  v38[1] = a9;
  LOBYTE(v12) = v34;
  char v39 = v34;
  sub_2486D02F8(v18);
  sub_2486D0384(v19, a9, v12);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24870AF84(v32, a2, a3, v31, (uint64_t)v40, v37, (uint64_t)v16, v41, v38, v13, WitnessTable);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
  unint64_t v21 = (_OWORD *)swift_allocObject();
  long long v22 = v41[10];
  v21[11] = v41[9];
  long long v21[12] = v22;
  v21[13] = v41[11];
  long long v23 = v41[6];
  v21[7] = v41[5];
  v21[8] = v23;
  long long v24 = v41[8];
  v21[9] = v41[7];
  v21[10] = v24;
  long long v25 = v41[0];
  long long v26 = v41[1];
  v21[1] = xmmword_24872D630;
  v21[2] = v25;
  long long v27 = v41[2];
  v21[3] = v26;
  v21[4] = v27;
  long long v28 = v41[4];
  v21[5] = v41[3];
  v21[6] = v28;
  return sub_2486CDED4((uint64_t)v21);
}

uint64_t Option.init<A>(name:parsing:help:completion:)@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v22 = a6;
  uint64_t v24 = a7;
  sub_24872C8E0();
  uint64_t v23 = type metadata accessor for Parsed();
  uint64_t v12 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v14 = (uint64_t *)((char *)&v22 - v13);
  uint64_t v15 = *a1;
  LOBYTE(a2) = *a2;
  sub_2486E775C(a3, (uint64_t)v25);
  uint64_t v17 = *a4;
  uint64_t v16 = a4[1];
  char v18 = *((unsigned char *)a4 + 16);
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = v22;
  *(void *)(v19 + 16) = a5;
  *(void *)(v19 + 24) = v20;
  *(void *)(v19 + 32) = v15;
  sub_2486E775C((uint64_t)v25, v19 + 40);
  *(unsigned char *)(v19 + 89) = (_BYTE)a2;
  *(void *)(v19 + 96) = v17;
  *(void *)(v19 + 104) = v16;
  *(unsigned char *)(v19 + 112) = v18;
  sub_24870A630((uint64_t)sub_2486ED048, v19, v14);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v12 + 32))(v24, v14, v23);
}

uint64_t sub_2486EB438(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10)
{
  uint64_t v33 = a7;
  uint64_t v34 = a8;
  int v35 = a6;
  uint64_t v30 = (uint64_t *)a5;
  uint64_t v32 = a1;
  uint64_t v13 = sub_24872C8E0();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v30 - v14;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v16 = swift_bridgeObjectRetain();
  unint64_t v31 = sub_2486F9CA0(v16, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = v30;
  sub_2486E775C((uint64_t)v30, (uint64_t)v38);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a10 - 8) + 56))(v15, 1, 1, a10);
  uint64_t v19 = v33;
  uint64_t v18 = v34;
  v36[0] = v33;
  v36[1] = v34;
  char v37 = a9;
  sub_2486D02F8(v17);
  sub_2486D0384(v19, v18, a9);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24870AF84(v32, a2, a3, v31, (uint64_t)v38, v35, (uint64_t)v15, v39, v36, v13, WitnessTable);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
  unint64_t v21 = (_OWORD *)swift_allocObject();
  long long v22 = v39[10];
  v21[11] = v39[9];
  long long v21[12] = v22;
  v21[13] = v39[11];
  long long v23 = v39[6];
  v21[7] = v39[5];
  v21[8] = v23;
  long long v24 = v39[8];
  v21[9] = v39[7];
  v21[10] = v24;
  long long v25 = v39[0];
  long long v26 = v39[1];
  v21[1] = xmmword_24872D630;
  v21[2] = v25;
  long long v27 = v39[2];
  v21[3] = v26;
  v21[4] = v27;
  long long v28 = v39[4];
  v21[5] = v39[3];
  v21[6] = v28;
  return sub_2486CDED4((uint64_t)v21);
}

uint64_t Option.init<A>(wrappedValue:name:parsing:help:completion:transform:)@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v26 = a6;
  uint64_t v27 = a8;
  sub_24872C8E0();
  uint64_t v24 = type metadata accessor for Parsed();
  uint64_t v13 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v15 = (uint64_t *)((char *)&v23 - v14);
  uint64_t v16 = *a1;
  LOBYTE(a2) = *a2;
  sub_2486E775C(a3, (uint64_t)v28);
  uint64_t v18 = *a4;
  uint64_t v17 = a4[1];
  char v19 = *((unsigned char *)a4 + 16);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a7;
  *(void *)(v20 + 24) = v16;
  sub_2486E775C((uint64_t)v28, v20 + 32);
  *(unsigned char *)(v20 + 81) = (_BYTE)a2;
  uint64_t v21 = v26;
  *(void *)(v20 + 88) = v25;
  *(void *)(v20 + 96) = v21;
  *(void *)(v20 + 104) = v18;
  *(void *)(v20 + 112) = v17;
  *(unsigned char *)(v20 + 120) = v19;
  sub_24870A630((uint64_t)sub_2486ED2E0, v20, v15);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v13 + 32))(v27, v15, v24);
}

uint64_t Option.init<A>(wrappedValue:name:parsing:help:completion:transform:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v34 = a6;
  uint64_t v35 = a7;
  uint64_t v36 = a1;
  uint64_t v38 = a9;
  uint64_t v14 = sub_24872C8E0();
  uint64_t v37 = type metadata accessor for Parsed();
  uint64_t v15 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v17 = (uint64_t *)((char *)&v30 - v16);
  uint64_t v18 = *a2;
  char v19 = *a3;
  sub_2486E775C(a4, (uint64_t)v39);
  uint64_t v20 = *a5;
  uint64_t v32 = a5[1];
  uint64_t v33 = v20;
  int v31 = *((unsigned __int8 *)a5 + 16);
  uint64_t v21 = *(void *)(v14 - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (*(void *)(v21 + 64) + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = a8;
  *(void *)(v24 + 24) = v18;
  sub_2486E775C((uint64_t)v39, v24 + 32);
  *(unsigned char *)(v24 + 81) = v19;
  uint64_t v26 = v35;
  uint64_t v25 = v36;
  *(void *)(v24 + 88) = v34;
  *(void *)(v24 + 96) = v26;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v21 + 32))(v24 + v22, v25, v14);
  unint64_t v27 = v24 + v23;
  uint64_t v28 = v32;
  *(void *)unint64_t v27 = v33;
  *(void *)(v27 + 8) = v28;
  *(unsigned char *)(v27 + 16) = v31;
  sub_24870A630((uint64_t)sub_2486ED49C, v24, v17);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v15 + 32))(v38, v17, v37);
}

uint64_t sub_2486EBA00(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12)
{
  uint64_t v38 = a8;
  uint64_t v40 = a7;
  int v39 = a6;
  uint64_t v35 = a1;
  uint64_t v36 = (uint64_t *)a5;
  int v37 = a12;
  uint64_t v34 = a9;
  uint64_t v15 = sub_24872C8E0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v33 - v17;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v19 = swift_bridgeObjectRetain();
  unint64_t v20 = sub_2486F9CA0(v19, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = v36;
  sub_2486E775C((uint64_t)v36, (uint64_t)v43);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v34, v15);
  v41[0] = a10;
  v41[1] = a11;
  LOBYTE(v16) = v37;
  char v42 = v37;
  sub_2486D02F8(v21);
  sub_2486D0384(a10, a11, v16);
  uint64_t v22 = v38;
  swift_retain();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24870B2D8(v35, a2, a3, v20, (uint64_t)v43, v39, v40, v44, v22, (uint64_t)v18, v41, v15, WitnessTable);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
  uint64_t v24 = (_OWORD *)swift_allocObject();
  long long v25 = v44[10];
  v24[11] = v44[9];
  v24[12] = v25;
  v24[13] = v44[11];
  long long v26 = v44[6];
  v24[7] = v44[5];
  v24[8] = v26;
  long long v27 = v44[8];
  v24[9] = v44[7];
  v24[10] = v27;
  long long v28 = v44[0];
  long long v29 = v44[1];
  v24[1] = xmmword_24872D630;
  void v24[2] = v28;
  long long v30 = v44[2];
  unint64_t v24[3] = v29;
  v24[4] = v30;
  long long v31 = v44[4];
  v24[5] = v44[3];
  v24[6] = v31;
  return sub_2486CDED4((uint64_t)v24);
}

uint64_t Option.init<A>(name:parsing:help:completion:transform:)@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v26 = a6;
  uint64_t v27 = a8;
  sub_24872C8E0();
  uint64_t v24 = type metadata accessor for Parsed();
  uint64_t v13 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v15 = (uint64_t *)((char *)&v23 - v14);
  uint64_t v16 = *a1;
  LOBYTE(a2) = *a2;
  sub_2486E775C(a3, (uint64_t)v28);
  uint64_t v18 = *a4;
  uint64_t v17 = a4[1];
  char v19 = *((unsigned char *)a4 + 16);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a7;
  *(void *)(v20 + 24) = v16;
  sub_2486E775C((uint64_t)v28, v20 + 32);
  *(unsigned char *)(v20 + 81) = (_BYTE)a2;
  uint64_t v21 = v26;
  *(void *)(v20 + 88) = v25;
  *(void *)(v20 + 96) = v21;
  *(void *)(v20 + 104) = v18;
  *(void *)(v20 + 112) = v17;
  *(unsigned char *)(v20 + 120) = v19;
  sub_24870A630((uint64_t)sub_2486ED2E0, v20, v15);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v13 + 32))(v27, v15, v24);
}

uint64_t sub_2486EBDE4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, uint64_t a12)
{
  uint64_t v39 = a8;
  uint64_t v41 = a7;
  int v40 = a6;
  uint64_t v35 = (uint64_t *)a5;
  uint64_t v37 = a1;
  int v38 = a11;
  uint64_t v36 = a10;
  uint64_t v15 = sub_24872C8E0();
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v34 - v16;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v18 = swift_bridgeObjectRetain();
  unint64_t v19 = sub_2486F9CA0(v18, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v20 = v35;
  sub_2486E775C((uint64_t)v35, (uint64_t)v44);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a12 - 8) + 56))(v17, 1, 1, a12);
  uint64_t v21 = v36;
  v42[0] = a9;
  v42[1] = v36;
  char v22 = v38;
  char v43 = v38;
  sub_2486D02F8(v20);
  sub_2486D0384(a9, v21, v22);
  uint64_t v23 = v39;
  swift_retain();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24870B2D8(v37, a2, a3, v19, (uint64_t)v44, v40, v41, v45, v23, (uint64_t)v17, v42, v15, WitnessTable);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
  uint64_t v25 = (_OWORD *)swift_allocObject();
  long long v26 = v45[10];
  v25[11] = v45[9];
  v25[12] = v26;
  v25[13] = v45[11];
  long long v27 = v45[6];
  v25[7] = v45[5];
  v25[8] = v27;
  long long v28 = v45[8];
  v25[9] = v45[7];
  v25[10] = v28;
  long long v29 = v45[0];
  long long v30 = v45[1];
  v25[1] = xmmword_24872D630;
  uint64_t v25[2] = v29;
  long long v31 = v45[2];
  _OWORD v25[3] = v30;
  v25[4] = v31;
  long long v32 = v45[4];
  v25[5] = v45[3];
  v25[6] = v32;
  return sub_2486CDED4((uint64_t)v25);
}

double Option.init<A>(wrappedValue:name:parsing:help:completion:)@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v13 = *a2;
  char v14 = *a3;
  sub_2486E775C(a4, (uint64_t)v28);
  uint64_t v15 = *a5;
  uint64_t v16 = a5[1];
  char v17 = *((unsigned char *)a5 + 16);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a6;
  *(void *)(v18 + 24) = a7;
  *(void *)(v18 + 32) = v13;
  sub_2486E775C((uint64_t)v28, v18 + 40);
  *(unsigned char *)(v18 + 89) = v14;
  *(void *)(v18 + 96) = a1;
  *(void *)(v18 + 104) = v15;
  *(void *)(v18 + 112) = v16;
  *(unsigned char *)(v18 + 120) = v17;
  sub_24872C830();
  sub_24870A630((uint64_t)sub_2486ED5F8, v18, &v24);
  long long v22 = v24;
  char v23 = v25;
  uint64_t v19 = type metadata accessor for Parsed();
  (*(void (**)(long long *, long long *, uint64_t))(*(void *)(v19 - 8) + 32))(&v26, &v22, v19);
  char v20 = v27;
  double result = *(double *)&v26;
  *(_OWORD *)a8 = v26;
  *(unsigned char *)(a8 + 16) = v20;
  return result;
}

uint64_t sub_2486EC184(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v16 = sub_24872C830();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v17 = swift_bridgeObjectRetain();
  unint64_t v18 = sub_2486F9CA0(v17, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2486E775C((uint64_t)a5, (uint64_t)v37);
  uint64_t v36 = a7;
  v34[0] = a8;
  v34[1] = a9;
  char v35 = a10;
  sub_2486D02F8(a5);
  swift_bridgeObjectRetain();
  sub_2486D0384(a8, a9, a10);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24870AF84(a1, a2, a3, v18, (uint64_t)v37, a6, (uint64_t)&v36, v38, v34, v16, WitnessTable);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
  char v20 = (_OWORD *)swift_allocObject();
  long long v21 = v38[8];
  long long v22 = v38[10];
  long long v23 = v38[11];
  v20[11] = v38[9];
  v20[12] = v22;
  v20[13] = v23;
  long long v24 = v38[4];
  long long v25 = v38[6];
  long long v26 = v38[7];
  v20[7] = v38[5];
  v20[8] = v25;
  v20[9] = v26;
  v20[10] = v21;
  long long v27 = v38[0];
  long long v28 = v38[1];
  v20[1] = xmmword_24872D630;
  _OWORD v20[2] = v27;
  long long v29 = v38[2];
  long long v30 = v38[3];
  v20[3] = v28;
  v20[4] = v29;
  v20[5] = v30;
  void v20[6] = v24;
  return sub_2486CDED4((uint64_t)v20);
}

double Option.init<A>(name:parsing:help:completion:)@<D0>(uint64_t *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11 = *a1;
  char v12 = *a2;
  sub_2486E775C(a3, (uint64_t)v26);
  uint64_t v13 = *a4;
  uint64_t v14 = a4[1];
  char v15 = *((unsigned char *)a4 + 16);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a5;
  *(void *)(v16 + 24) = a6;
  *(void *)(v16 + 32) = v11;
  sub_2486E775C((uint64_t)v26, v16 + 40);
  *(unsigned char *)(v16 + 89) = v12;
  *(void *)(v16 + 96) = v13;
  *(void *)(v16 + 104) = v14;
  *(unsigned char *)(v16 + 112) = v15;
  sub_24872C830();
  sub_24870A630((uint64_t)sub_2486ED6AC, v16, &v22);
  long long v20 = v22;
  char v21 = v23;
  uint64_t v17 = type metadata accessor for Parsed();
  (*(void (**)(long long *, long long *, uint64_t))(*(void *)(v17 - 8) + 32))(&v24, &v20, v17);
  char v18 = v25;
  double result = *(double *)&v24;
  *(_OWORD *)a7 = v24;
  *(unsigned char *)(a7 + 16) = v18;
  return result;
}

uint64_t sub_2486EC498(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, int a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v15 = sub_24872C830();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v16 = swift_bridgeObjectRetain();
  unint64_t v17 = sub_2486F9CA0(v16, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2486E775C((uint64_t)a5, (uint64_t)v35);
  uint64_t v34 = 0;
  v32[0] = a7;
  v32[1] = a8;
  char v33 = a9;
  sub_2486D02F8(a5);
  sub_2486D0384(a7, a8, a9);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24870AF84(a1, a2, a3, v17, (uint64_t)v35, a6, (uint64_t)&v34, v36, v32, v15, WitnessTable);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
  uint64_t v19 = (_OWORD *)swift_allocObject();
  long long v20 = v36[8];
  long long v21 = v36[10];
  long long v22 = v36[11];
  v19[11] = v36[9];
  v19[12] = v21;
  _OWORD v19[13] = v22;
  long long v23 = v36[4];
  long long v24 = v36[6];
  long long v25 = v36[7];
  v19[7] = v36[5];
  v19[8] = v24;
  v19[9] = v25;
  v19[10] = v20;
  long long v26 = v36[0];
  long long v27 = v36[1];
  v19[1] = xmmword_24872D630;
  void v19[2] = v26;
  long long v28 = v36[2];
  long long v29 = v36[3];
  v19[3] = v27;
  void v19[4] = v28;
  v19[5] = v29;
  v19[6] = v23;
  return sub_2486CDED4((uint64_t)v19);
}

double Option.init<A>(wrappedValue:name:parsing:help:completion:transform:)@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v14 = *a2;
  char v15 = *a3;
  sub_2486E775C(a4, (uint64_t)v30);
  uint64_t v16 = *a5;
  uint64_t v17 = a5[1];
  char v18 = *((unsigned char *)a5 + 16);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a8;
  *(void *)(v19 + 24) = v14;
  sub_2486E775C((uint64_t)v30, v19 + 32);
  *(unsigned char *)(v19 + 81) = v15;
  *(void *)(v19 + 88) = a6;
  *(void *)(v19 + 96) = a7;
  *(void *)(v19 + 104) = a1;
  *(void *)(v19 + 112) = v16;
  *(void *)(v19 + 120) = v17;
  *(unsigned char *)(v19 + 128) = v18;
  sub_24872C830();
  sub_24870A630((uint64_t)sub_2486ED784, v19, &v26);
  long long v24 = v26;
  char v25 = v27;
  uint64_t v20 = type metadata accessor for Parsed();
  (*(void (**)(long long *, long long *, uint64_t))(*(void *)(v20 - 8) + 32))(&v28, &v24, v20);
  char v21 = v29;
  double result = *(double *)&v28;
  *(_OWORD *)a9 = v28;
  *(unsigned char *)(a9 + 16) = v21;
  return result;
}

uint64_t sub_2486EC7AC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v16 = sub_24872C830();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v17 = swift_bridgeObjectRetain();
  unint64_t v18 = sub_2486F9CA0(v17, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2486E775C((uint64_t)a5, (uint64_t)v39);
  uint64_t v38 = a9;
  v36[0] = a10;
  v36[1] = a11;
  char v37 = a12;
  sub_2486D02F8(a5);
  swift_bridgeObjectRetain();
  sub_2486D0384(a10, a11, a12);
  swift_retain();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24870B2D8(a1, a2, a3, v18, (uint64_t)v39, a6, a7, v40, a8, (uint64_t)&v38, v36, v16, WitnessTable);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
  uint64_t v20 = (_OWORD *)swift_allocObject();
  long long v21 = v40[8];
  long long v22 = v40[10];
  long long v23 = v40[11];
  v20[11] = v40[9];
  v20[12] = v22;
  v20[13] = v23;
  long long v24 = v40[4];
  long long v25 = v40[6];
  long long v26 = v40[7];
  v20[7] = v40[5];
  v20[8] = v25;
  v20[9] = v26;
  v20[10] = v21;
  long long v27 = v40[0];
  long long v28 = v40[1];
  v20[1] = xmmword_24872D630;
  _OWORD v20[2] = v27;
  long long v29 = v40[2];
  long long v30 = v40[3];
  v20[3] = v28;
  v20[4] = v29;
  v20[5] = v30;
  void v20[6] = v24;
  return sub_2486CDED4((uint64_t)v20);
}

double Option.init<A>(name:parsing:help:completion:transform:)@<D0>(uint64_t *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v13 = *a1;
  char v14 = *a2;
  sub_2486E775C(a3, (uint64_t)v28);
  uint64_t v15 = *a4;
  uint64_t v16 = a4[1];
  char v17 = *((unsigned char *)a4 + 16);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a7;
  *(void *)(v18 + 24) = v13;
  sub_2486E775C((uint64_t)v28, v18 + 32);
  *(unsigned char *)(v18 + 81) = v14;
  *(void *)(v18 + 88) = a5;
  *(void *)(v18 + 96) = a6;
  *(void *)(v18 + 104) = v15;
  *(void *)(v18 + 112) = v16;
  *(unsigned char *)(v18 + 120) = v17;
  sub_24872C830();
  sub_24870A630((uint64_t)sub_2486ED844, v18, &v24);
  long long v22 = v24;
  char v23 = v25;
  uint64_t v19 = type metadata accessor for Parsed();
  (*(void (**)(long long *, long long *, uint64_t))(*(void *)(v19 - 8) + 32))(&v26, &v22, v19);
  char v20 = v27;
  double result = *(double *)&v26;
  *(_OWORD *)a8 = v26;
  *(unsigned char *)(a8 + 16) = v20;
  return result;
}

uint64_t sub_2486ECADC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v15 = sub_24872C830();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v16 = swift_bridgeObjectRetain();
  unint64_t v17 = sub_2486F9CA0(v16, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2486E775C((uint64_t)a5, (uint64_t)v37);
  uint64_t v36 = 0;
  v34[0] = a9;
  v34[1] = a10;
  char v35 = a11;
  sub_2486D02F8(a5);
  sub_2486D0384(a9, a10, a11);
  swift_retain();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24870B2D8(a1, a2, a3, v17, (uint64_t)v37, a6, a7, v38, a8, (uint64_t)&v36, v34, v15, WitnessTable);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
  uint64_t v19 = (_OWORD *)swift_allocObject();
  long long v20 = v38[8];
  long long v21 = v38[10];
  long long v22 = v38[11];
  v19[11] = v38[9];
  v19[12] = v21;
  _OWORD v19[13] = v22;
  long long v23 = v38[4];
  long long v24 = v38[6];
  long long v25 = v38[7];
  v19[7] = v38[5];
  v19[8] = v24;
  v19[9] = v25;
  v19[10] = v20;
  long long v26 = v38[0];
  long long v27 = v38[1];
  v19[1] = xmmword_24872D630;
  void v19[2] = v26;
  long long v28 = v38[2];
  long long v29 = v38[3];
  v19[3] = v27;
  void v19[4] = v28;
  v19[5] = v29;
  v19[6] = v23;
  return sub_2486CDED4((uint64_t)v19);
}

uint64_t sub_2486ECCC0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 90) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  int v6 = *(unsigned __int8 *)(v0 + v5 + 16);
  if (v6 != 255) {
    sub_2486C549C(*(void *)(v0 + v5), *(void *)(v0 + v5 + 8), v6);
  }
  return MEMORY[0x270FA0238](v0, v5 + 17, v3 | 7);
}

uint64_t sub_2486ECDBC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(*(void *)(v3 + 16) - 8) + 80) + 90) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v3 + 16) - 8) + 80);
  uint64_t v5 = v3 + ((*(void *)(*(void *)(*(void *)(v3 + 16) - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_2486E9D08(a1, a2, a3, *(void *)(v3 + 32), v3 + 40, *(unsigned __int8 *)(v3 + 89), v3 + v4, *(void *)v5, *(void *)(v5 + 8), *(unsigned char *)(v5 + 16), *(void *)(v3 + 16));
}

uint64_t sub_2486ECE64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2486ED6C4(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, void, void, void, char, void, void))sub_2486EA258);
}

uint64_t sub_2486ECE7C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 104) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  int v6 = *(unsigned __int8 *)(v0 + v5 + 16);
  if (v6 != 255) {
    sub_2486C549C(*(void *)(v0 + v5), *(void *)(v0 + v5 + 8), v6);
  }
  return MEMORY[0x270FA0238](v0, v5 + 17, v3 | 7);
}

uint64_t sub_2486ECF7C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(*(void *)(v3 + 16) - 8) + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v3 + 16) - 8) + 80);
  unint64_t v5 = (*(void *)(*(void *)(*(void *)(v3 + 16) - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2486EA688(a1, a2, a3, *(void *)(v3 + 24), v3 + 32, *(unsigned __int8 *)(v3 + 81), *(void *)(v3 + 88), *(void *)(v3 + 96), v3 + v4, *(void *)(v3 + v5), *(void *)(v3 + v5 + 8), *(unsigned char *)(v3 + v5 + 16), *(void *)(v3 + 16));
}

uint64_t sub_2486ED02C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2486ED85C(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, void, void, void, void, void, char, void))sub_2486EAA90);
}

uint64_t sub_2486ED04C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_2486EB438(a1, a2, a3, *(void *)(v3 + 32), v3 + 40, *(unsigned __int8 *)(v3 + 89), *(void *)(v3 + 96), *(void *)(v3 + 104), *(unsigned char *)(v3 + 112), *(void *)(v3 + 16));
}

uint64_t sub_2486ED08C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(sub_24872C8E0() - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 90) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64) + v4 + 7;
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v0 + v4;
  uint64_t v8 = *(void *)(v1 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v7, 1, v1)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v1);
  }
  int v9 = *(unsigned __int8 *)(v0 + v6 + 16);
  if (v9 != 255) {
    sub_2486C549C(*(void *)(v0 + v6), *(void *)(v0 + v6 + 8), v9);
  }
  return MEMORY[0x270FA0238](v0, v6 + 17, v3 | 7);
}

uint64_t sub_2486ED1F8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(sub_24872C8E0() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 90) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v3 + v8;
  uint64_t v10 = v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_2486EB078(a1, a2, a3, *(void *)(v3 + 32), v3 + 40, *(unsigned __int8 *)(v3 + 89), v9, *(void *)v10, *(void *)(v10 + 8), *(unsigned char *)(v10 + 16));
}

uint64_t sub_2486ED2E4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_2486EBDE4(a1, a2, a3, *(void *)(v3 + 24), v3 + 32, *(unsigned __int8 *)(v3 + 81), *(void *)(v3 + 88), *(void *)(v3 + 96), *(void *)(v3 + 104), *(void *)(v3 + 112), *(unsigned char *)(v3 + 120), *(void *)(v3 + 16));
}

uint64_t sub_2486ED328()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(sub_24872C8E0() - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 104) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64) + v4 + 7;
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v7 = v0 + v4;
  uint64_t v8 = *(void *)(v1 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v7, 1, v1)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v1);
  }
  int v9 = *(unsigned __int8 *)(v0 + v6 + 16);
  if (v9 != 255) {
    sub_2486C549C(*(void *)(v0 + v6), *(void *)(v0 + v6 + 8), v9);
  }
  return MEMORY[0x270FA0238](v0, v6 + 17, v3 | 7);
}

uint64_t sub_2486ED49C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(sub_24872C8E0() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2486EBA00(a1, a2, a3, *(void *)(v3 + 24), v3 + 32, *(unsigned __int8 *)(v3 + 81), *(void *)(v3 + 88), *(void *)(v3 + 96), v3 + v8, *(void *)(v3 + v9), *(void *)(v3 + v9 + 8), *(unsigned char *)(v3 + v9 + 16));
}

uint64_t sub_2486ED588()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  int v1 = *(unsigned __int8 *)(v0 + 120);
  if (v1 != 255) {
    sub_2486C549C(*(void *)(v0 + 104), *(void *)(v0 + 112), v1);
  }
  return MEMORY[0x270FA0238](v0, 121, 7);
}

uint64_t sub_2486ED5F8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_2486EC184(a1, a2, a3, *(void *)(v3 + 32), (uint64_t *)(v3 + 40), *(unsigned __int8 *)(v3 + 89), *(void *)(v3 + 96), *(void *)(v3 + 104), *(void *)(v3 + 112), *(unsigned char *)(v3 + 120));
}

uint64_t objectdestroy_2Tm_0()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  int v1 = *(unsigned __int8 *)(v0 + 112);
  if (v1 != 255) {
    sub_2486C549C(*(void *)(v0 + 96), *(void *)(v0 + 104), v1);
  }
  return MEMORY[0x270FA0238](v0, 113, 7);
}

uint64_t sub_2486ED6AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2486ED6C4(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, void, void, void, char, void, void))sub_2486EC498);
}

uint64_t sub_2486ED6C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, void, uint64_t, void, void, void, char, void, void))
{
  char v6 = *(unsigned char *)(v4 + 112);
  return a4(a1, a2, a3, *(void *)(v4 + 32), v4 + 40, *(unsigned __int8 *)(v4 + 89), *(void *)(v4 + 96), *(void *)(v4 + 104), v6, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_2486ED70C()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_bridgeObjectRelease();
  int v1 = *(unsigned __int8 *)(v0 + 128);
  if (v1 != 255) {
    sub_2486C549C(*(void *)(v0 + 112), *(void *)(v0 + 120), v1);
  }
  return MEMORY[0x270FA0238](v0, 129, 7);
}

uint64_t sub_2486ED784(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_2486EC7AC(a1, a2, a3, *(void *)(v3 + 24), (uint64_t *)(v3 + 32), *(unsigned __int8 *)(v3 + 81), *(void *)(v3 + 88), *(void *)(v3 + 96), *(void *)(v3 + 104), *(void *)(v3 + 112), *(void *)(v3 + 120), *(unsigned char *)(v3 + 128));
}

uint64_t objectdestroy_8Tm_0()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  int v1 = *(unsigned __int8 *)(v0 + 120);
  if (v1 != 255) {
    sub_2486C549C(*(void *)(v0 + 104), *(void *)(v0 + 112), v1);
  }
  return MEMORY[0x270FA0238](v0, 121, 7);
}

uint64_t sub_2486ED844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2486ED85C(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, void, void, void, void, void, char, void))sub_2486ECADC);
}

uint64_t sub_2486ED85C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, void, uint64_t, void, void, void, void, void, char, void))
{
  char v6 = *(unsigned char *)(v4 + 120);
  return a4(a1, a2, a3, *(void *)(v4 + 24), v4 + 32, *(unsigned __int8 *)(v4 + 81), *(void *)(v4 + 88), *(void *)(v4 + 96), *(void *)(v4 + 104), *(void *)(v4 + 112), v6, *(void *)(v4 + 16));
}

uint64_t sub_2486ED8A8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_2486ED8E4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2486ED924()
{
  unint64_t result = qword_26931E3E0;
  if (!qword_26931E3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E3E0);
  }
  return result;
}

unint64_t sub_2486ED97C()
{
  unint64_t result = qword_26931E3E8;
  if (!qword_26931E3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E3E8);
  }
  return result;
}

uint64_t sub_2486ED9D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Option();
  return Option.wrappedValue.getter(v2, a1);
}

uint64_t sub_2486EDA10()
{
  return 8;
}

void *sub_2486EDA1C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void *sub_2486EDA28(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 != 1)
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v5) = 0;
      return v3;
    }
    uint64_t v14 = *((void *)a2 + 1);
    *uint64_t v3 = *(void *)a2;
    v3[1] = v14;
    *((unsigned char *)v3 + v5) = 1;
  }
  swift_retain();
  return v3;
}

uint64_t sub_2486EDBA0(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 0x10) {
    unint64_t v2 = 16;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
}

void *sub_2486EDCA0(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    uint64_t v10 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v10;
    swift_retain();
    char v11 = 1;
  }
  else
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v11 = 0;
  }
  *((unsigned char *)a1 + v4) = v11;
  return a1;
}

unsigned __int8 *sub_2486EDDDC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      uint64_t v18 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v18;
      a1[v7] = 1;
      swift_retain();
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      a1[v7] = 0;
    }
  }
  return a1;
}

_OWORD *sub_2486EDFF8(_OWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *a1 = *(_OWORD *)a2;
    char v10 = 1;
  }
  else
  {
    (*(void (**)(_OWORD *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 0;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_2486EE130(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      char v18 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 0;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_2486EE348(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 16;
  if (*(void *)(v3 + 64) > 0x10uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_2486EE47C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x10) {
    unint64_t v5 = 16;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x2486EE644);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

ValueMetadata *type metadata accessor for SingleValueParsingStrategy()
{
  return &type metadata for SingleValueParsingStrategy;
}

unsigned char *_s22ArgumentParserInternal26SingleValueParsingStrategyVwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2486EE750);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArrayParsingStrategy()
{
  return &type metadata for ArrayParsingStrategy;
}

void static CompletionKind.default.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 4;
}

uint64_t static CompletionKind.list(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = a1;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  return swift_bridgeObjectRetain();
}

uint64_t static CompletionKind.file(extensions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = a1;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  return swift_bridgeObjectRetain();
}

double static CompletionKind.directory.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 1;
  *(_OWORD *)a1 = xmmword_24872E490;
  *(unsigned char *)(a1 + 16) = 4;
  return result;
}

uint64_t static CompletionKind.shellCommand(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(unsigned char *)(a3 + 16) = 2;
  return swift_bridgeObjectRetain();
}

uint64_t static CompletionKind.custom(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(unsigned char *)(a3 + 16) = 3;
  return swift_retain();
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for CompletionKind()
{
  return &type metadata for CompletionKind;
}

uint64_t destroy for CompletionKind.Kind(uint64_t a1)
{
  return sub_2486C549C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s22ArgumentParserInternal14CompletionKindV4KindOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_2486B77D8(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s22ArgumentParserInternal14CompletionKindV4KindOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_2486B77D8(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_2486C549C(v6, v7, v8);
  return a1;
}

uint64_t _s22ArgumentParserInternal14CompletionKindV4KindOwta_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_2486C549C(v4, v5, v6);
  return a1;
}

uint64_t _s22ArgumentParserInternal14CompletionKindV4KindOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s22ArgumentParserInternal14CompletionKindV4KindOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_2486EE9CC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_2486EE9E4(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)__n128 result = a2 - 4;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CompletionKind.Kind()
{
  return &type metadata for CompletionKind.Kind;
}

uint64_t sub_2486EEA10@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(v2 + *(int *)(result + 36));
  return result;
}

uint64_t OptionGroup.title.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 44));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t OptionGroup.title.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = (void *)(v3 + *(int *)(a3 + 44));
  uint64_t result = swift_bridgeObjectRelease();
  *char v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*OptionGroup.title.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_2486EEABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4 = (int *)type metadata accessor for OptionGroup();
  *(unsigned char *)(a2 + v4[10]) = 0;
  uint64_t v5 = (void *)(a2 + v4[11]);
  *uint64_t v5 = 0;
  v5[1] = 0xE000000000000000;
  uint64_t v6 = type metadata accessor for Parsed();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  *(unsigned char *)(a2 + v4[9]) = 0;
  return result;
}

uint64_t OptionGroup.init(from:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v60 = a4;
  unint64_t v40 = a3;
  uint64_t v41 = type metadata accessor for OptionGroup();
  uint64_t v37 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v38 = (uint64_t)&v33 - v8;
  uint64_t v33 = type metadata accessor for Parsed();
  MEMORY[0x270FA5388](v33);
  unsigned int v10 = (char *)&v33 - v9;
  uint64_t v11 = sub_24872C8E0();
  uint64_t v34 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  unsigned int v14 = (char *)&v33 - v13;
  uint64_t v39 = *(void *)(a2 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v36 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v35 = (uint64_t)&v33 - v18;
  MEMORY[0x270FA5388](v17);
  long long v20 = (char *)&v33 - v19;
  uint64_t v42 = a1;
  sub_2486C2100(a1, (uint64_t)v51);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B140118);
  if (swift_dynamicCast())
  {
    long long v56 = v47;
    long long v57 = v48;
    long long v58 = v49;
    char v59 = v50;
    long long v52 = v43;
    long long v53 = v44;
    long long v54 = v45;
    long long v55 = v46;
    sub_24871C310(a2);
    if (!v4)
    {
      uint64_t v30 = v39;
      (*(void (**)(char *, void, uint64_t, unint64_t))(v39 + 56))(v14, 0, 1, a2);
      (*(void (**)(char *, char *, unint64_t))(v30 + 32))(v20, v14, a2);
      (*(void (**)(char *, char *, unint64_t))(v30 + 16))(v10, v20, a2);
      swift_storeEnumTagMultiPayload();
      uint64_t v31 = (uint64_t)v10;
      unint64_t v24 = v40;
      sub_2486EEABC(v31, v60);
      (*(void (**)(char *, unint64_t))(v30 + 8))(v20, a2);
      sub_2486EF464((uint64_t)&v52);
      uint64_t v22 = v41;
      uint64_t v21 = v42;
      uint64_t v27 = (uint64_t)v36;
LABEL_10:
      OptionGroup.wrappedValue.getter(v22, v27);
      (*(void (**)(unint64_t, unint64_t))(v24 + 24))(a2, v24);
      OptionGroup.wrappedValue.setter(v27, v22);
      return __swift_destroy_boxed_opaque_existential_1Tm(v21);
    }
    MEMORY[0x24C57CE50](v4);
    (*(void (**)(char *, uint64_t, uint64_t, unint64_t))(v39 + 56))(v14, 1, 1, a2);
    sub_2486EF464((uint64_t)&v52);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v11);
    uint64_t v5 = 0;
  }
  else
  {
    char v50 = 0;
    long long v48 = 0u;
    long long v49 = 0u;
    long long v46 = 0u;
    long long v47 = 0u;
    long long v44 = 0u;
    long long v45 = 0u;
    long long v43 = 0u;
    sub_2486EF1DC((uint64_t)&v43);
  }
  uint64_t v21 = v42;
  sub_2486C2100(v42, (uint64_t)&v52);
  uint64_t v22 = v41;
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v24 = v40;
  uint64_t v25 = v38;
  sub_24870A6F8((uint64_t)&v52, v22, WitnessTable, v38);
  if (!v5)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32))(v60, v25, v22);
    sub_2486C2100(v21, (uint64_t)v51);
    char v26 = swift_dynamicCast();
    uint64_t v27 = (uint64_t)v36;
    if (v26)
    {
      long long v56 = v47;
      long long v57 = v48;
      long long v58 = v49;
      char v59 = v50;
      long long v52 = v43;
      long long v53 = v44;
      long long v54 = v45;
      long long v55 = v46;
      uint64_t v28 = v35;
      OptionGroup.wrappedValue.getter(v22, v35);
      __n128 v29 = sub_24871C4E0(v28, a2, a2, v24);
      (*(void (**)(uint64_t, unint64_t, __n128))(v39 + 8))(v28, a2, v29);
      sub_2486EF464((uint64_t)&v52);
    }
    else
    {
      char v50 = 0;
      long long v48 = 0u;
      long long v49 = 0u;
      long long v46 = 0u;
      long long v47 = 0u;
      long long v44 = 0u;
      long long v45 = 0u;
      long long v43 = 0u;
      sub_2486EF1DC((uint64_t)&v43);
    }
    goto LABEL_10;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm(v21);
}

uint64_t type metadata accessor for OptionGroup()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2486EF1DC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26931E3F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t OptionGroup.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = type metadata accessor for Parsed();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v11 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v11 - v7, v3, v6);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v5 - 8) + 32))(a2, v8, v5);
  }
  uint64_t result = sub_24872CC40();
  __break(1u);
  return result;
}

uint64_t OptionGroup.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = type metadata accessor for Parsed();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v2, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v2, a1, v4);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2486EF464(uint64_t a1)
{
  return a1;
}

uint64_t OptionGroup.init(title:visibility:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = type metadata accessor for Parsed();
  MEMORY[0x270FA5388](v12 - 8);
  unsigned int v14 = (uint64_t *)((char *)&v19 - v13);
  LOBYTE(a3) = *a3;
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = a4;
  uint64_t v15[3] = a5;
  v15[4] = a1;
  void v15[5] = a2;
  sub_24870A630((uint64_t)sub_2486EF734, (uint64_t)v15, v14);
  sub_2486EEABC((uint64_t)v14, a6);
  uint64_t v16 = type metadata accessor for OptionGroup();
  *(unsigned char *)(a6 + *(int *)(v16 + 36)) = (_BYTE)a3;
  uint64_t v17 = (void *)(a6 + *(int *)(v16 + 44));
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v17 = a1;
  v17[1] = a2;
  return result;
}

uint64_t sub_2486EF5DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned __int8 v21 = 2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_2486B583C(a6, a7, &v21, a1, a2, a3);
  uint64_t v15 = v14;
  uint64_t v16 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0) {
    uint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (!v16 || !*(void *)(v14 + 16)) {
    return v15;
  }
  uint64_t v17 = 0;
  unint64_t v18 = 0;
  while (1)
  {
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_248722554(v15);
      uint64_t v15 = result;
    }
    if (v18 >= *(void *)(v15 + 16)) {
      break;
    }
    uint64_t v20 = v15 + v17;
    *(void *)(v20 + 144) = a4;
    *(void *)(v20 + 152) = a5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    ++v18;
    v17 += 192;
    if (v18 >= *(void *)(v15 + 16)) {
      return v15;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2486EF6FC()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_2486EF734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2486EF5DC(a1, a2, a3, *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_2486EF740(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v2 = (char *)&v6 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v6 - v1);
  uint64_t v4 = type metadata accessor for OptionGroup();
  return OptionGroup.wrappedValue.setter((uint64_t)v2, v4);
}

void (*OptionGroup.wrappedValue.modify(void *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t v5 = malloc(0x30uLL);
  *a1 = v5;
  *uint64_t v5 = a2;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v5[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v5[4] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v5[5] = v9;
  OptionGroup.wrappedValue.getter(a2, (uint64_t)v9);
  return sub_2486EF8E8;
}

void sub_2486EF8E8(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[4];
  uint64_t v4 = (void *)(*a1)[5];
  if (a2)
  {
    uint64_t v5 = v2[2];
    uint64_t v6 = v2[3];
    uint64_t v7 = *v2;
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[4], v4, v5);
    OptionGroup.wrappedValue.setter((uint64_t)v3, v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    OptionGroup.wrappedValue.setter((*a1)[5], *v2);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t sub_2486EF9A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return OptionGroup.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_2486EF9C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2486EEABC(a1, a2);
}

unint64_t OptionGroup.description.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = type metadata accessor for Parsed();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v16 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v16 - v12, v2, v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return 0xD000000000000019;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v13, v3);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    uint64_t v14 = sub_24872C540();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  return v14;
}

uint64_t OptionGroup.init(_hiddenFromHelp:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  char v4 = 1;
  return OptionGroup.init(title:visibility:)(0, 0xE000000000000000, &v4, a1, a2, a3);
}

uint64_t OptionGroup.init()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v4 = 0;
  return OptionGroup.init(title:visibility:)(0, 0xE000000000000000, &v4, a1, a2, a3);
}

uint64_t OptionGroup.init(visibility:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v5 = *a1;
  return OptionGroup.init(title:visibility:)(0, 0xE000000000000000, &v5, a2, a3, a4);
}

uint64_t sub_2486EFCAC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_2486EFCE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for OptionGroup();
  return OptionGroup.wrappedValue.getter(v2, a1);
}

uint64_t sub_2486EFD28()
{
  return 16;
}

__n128 sub_2486EFD34(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_2486EFD40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_2486EFD48()
{
  uint64_t result = type metadata accessor for Parsed();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_2486EFDF4(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  char v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v5 + 64) <= 0x10uLL) {
    uint64_t v6 = 16;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 10) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *(void *)a2;
    void *v4 = *(void *)a2;
    char v4 = (void *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    unsigned int v10 = a2[v6];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v12 = v6;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a2;
          goto LABEL_19;
        case 2:
          int v13 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v13 = *(_DWORD *)a2;
LABEL_19:
          int v14 = (v13 | (v11 << (8 * v6))) + 2;
          unsigned int v10 = v13 + 2;
          if (v6 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v15 = v6 + 1;
    if (v10 == 1)
    {
      uint64_t v16 = *((void *)a2 + 1);
      void *v4 = *(void *)a2;
      v4[1] = v16;
      swift_retain();
      char v17 = 1;
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(a1, a2);
      char v17 = 0;
    }
    *((unsigned char *)v4 + v6) = v17;
    unint64_t v18 = (char *)v4 + v15;
    *unint64_t v18 = a2[v15];
    v18[1] = a2[v15 + 1];
    uint64_t v19 = (void *)(((unint64_t)v4 + v15 + 9) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v20 = (void *)((unint64_t)&a2[v15 + 9] & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v19 = *v20;
    v19[1] = v20[1];
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_2486EFFC8(unsigned __int8 *a1, uint64_t a2)
{
  if (*(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v2 = 16;
  }
  else {
    uint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_13;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_13;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_13;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_13:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {
    swift_release();
  }
  else {
    (*(void (**)(unsigned __int8 *))(*(void *)(*(void *)(a2 + 16) - 8) + 8))(a1);
  }
  return swift_bridgeObjectRelease();
}

void *sub_2486F0110(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v5 = 16;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v6 = a2[v5];
  unsigned int v7 = v6 - 2;
  if (v6 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a2;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)a2;
LABEL_13:
        int v10 = (v9 | (v7 << (8 * v5))) + 2;
        unsigned int v6 = v9 + 2;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 1)
  {
    uint64_t v11 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v11;
    swift_retain();
    char v12 = 1;
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1, a2);
    char v12 = 0;
  }
  *((unsigned char *)a1 + v5) = v12;
  int v13 = (unsigned __int8 *)a1 + v5 + 1;
  int v14 = &a2[v5 + 1];
  *int v13 = *v14;
  v13[1] = v14[1];
  uint64_t v15 = (void *)((unint64_t)(v13 + 9) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)((unint64_t)(v14 + 9) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  return a1;
}

unsigned __int8 *sub_2486F029C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (a1 != a2)
  {
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      uint64_t v18 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v18;
      a1[v7] = 1;
      swift_retain();
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      a1[v7] = 0;
    }
  }
  unint64_t v19 = *(void *)(v6 + 64);
  if (v19 <= 0x10) {
    unint64_t v19 = 16;
  }
  unint64_t v20 = v19 + 1;
  unsigned __int8 v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  *unsigned __int8 v21 = *v22;
  v21[1] = v22[1];
  long long v23 = (void *)((unint64_t)(v21 + 9) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v24 = (void *)((unint64_t)(v22 + 9) & 0xFFFFFFFFFFFFFFF8);
  *long long v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_2486F052C(_OWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v5 = 16;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v6 = a2[v5];
  unsigned int v7 = v6 - 2;
  if (v6 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a2;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)a2;
LABEL_13:
        int v10 = (v9 | (v7 << (8 * v5))) + 2;
        unsigned int v6 = v9 + 2;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 1)
  {
    *a1 = *(_OWORD *)a2;
    char v11 = 1;
  }
  else
  {
    (*(void (**)(_OWORD *, unsigned __int8 *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1, a2);
    char v11 = 0;
  }
  *((unsigned char *)a1 + v5) = v11;
  int v12 = (unsigned __int8 *)a1 + v5 + 1;
  unsigned int v13 = &a2[v5 + 1];
  *int v12 = *v13;
  v12[1] = v13[1];
  *(_OWORD *)((unint64_t)(v12 + 9) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)(v13 + 9) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

unsigned __int8 *sub_2486F06A8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (a1 != a2)
  {
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      char v18 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 0;
    }
    a1[v7] = v18;
  }
  unint64_t v19 = *(void *)(v6 + 64);
  if (v19 <= 0x10) {
    unint64_t v19 = 16;
  }
  unint64_t v20 = v19 + 1;
  unsigned __int8 v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  *unsigned __int8 v21 = *v22;
  v21[1] = v22[1];
  long long v23 = (void *)((unint64_t)(v21 + 9) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v24 = (void *)((unint64_t)(v22 + 9) & 0xFFFFFFFFFFFFFFF8);
  *long long v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRelease();
  return a1;
}

void sub_2486F092C(unsigned char *a1, int a2, int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x10) {
    unint64_t v5 = 16;
  }
  size_t v6 = ((v5 + 10) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (a3 < 0)
  {
    unsigned int v8 = a3 - 2147483646;
    if (((v5 + 10) & 0xFFFFFFF8) != 0xFFFFFFF0) {
      unsigned int v8 = 2;
    }
    if (v8 >= 0x10000) {
      int v9 = 4;
    }
    else {
      int v9 = 2;
    }
    if (v8 < 0x100) {
      int v7 = 1;
    }
    else {
      int v7 = v9;
    }
    if ((a2 & 0x80000000) == 0) {
      goto LABEL_5;
    }
  }
  else
  {
    int v7 = 0;
    if ((a2 & 0x80000000) == 0)
    {
LABEL_5:
      switch(v7)
      {
        case 1:
          a1[v6] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_26;
        case 2:
          *(_WORD *)&a1[v6] = 0;
          goto LABEL_25;
        case 3:
          goto LABEL_32;
        case 4:
          *(_DWORD *)&a1[v6] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_26;
        default:
LABEL_25:
          if (a2) {
LABEL_26:
          }
            *(void *)(((unint64_t)&a1[v5 + 10] & 0xFFFFFFFFFFFFFFF8) + 8) = (a2 - 1);
          break;
      }
      return;
    }
  }
  if (((v5 + 10) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v10 = a2 - 0x7FFFFFFF;
  }
  else {
    int v10 = 1;
  }
  if (((v5 + 10) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    unsigned int v11 = a2 ^ 0x80000000;
    bzero(a1, v6);
    *(_DWORD *)a1 = v11;
  }
  switch(v7)
  {
    case 1:
      a1[v6] = v10;
      break;
    case 2:
      *(_WORD *)&a1[v6] = v10;
      break;
    case 3:
LABEL_32:
      __break(1u);
      JUMPOUT(0x2486F0A88);
    case 4:
      *(_DWORD *)&a1[v6] = v10;
      break;
    default:
      return;
  }
}

uint64_t static CleanExit.helpRequest(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t result = swift_getDynamicType();
  uint64_t v5 = a1[4];
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v5;
  *(unsigned char *)(a2 + 16) = 0;
  return result;
}

ArgumentParserInternal::ValidationError __swiftcall ValidationError.init(_:)(ArgumentParserInternal::ValidationError result)
{
  *unint64_t v1 = result;
  return result;
}

uint64_t ValidationError.description.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2486F0B38()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ExitCode.rawValue.getter()
{
  return *v0;
}

uint64_t ExitCode.rawValue.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*ExitCode.rawValue.modify())(void)
{
  return nullsub_1;
}

uint64_t ExitCode.init(_:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t ExitCode.init(rawValue:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static ExitCode.success.getter(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

void static ExitCode.failure.getter(_DWORD *a1@<X8>)
{
  *a1 = 1;
}

void static ExitCode.validationFailure.getter(_DWORD *a1@<X8>)
{
  *a1 = 64;
}

BOOL ExitCode.isSuccess.getter()
{
  return *v0 == 0;
}

uint64_t sub_2486F0BD8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_2486F108C();
  unint64_t v5 = sub_2486F10E0();
  return MEMORY[0x270F9FB50](a1, a2, v4, v5);
}

_DWORD *sub_2486F0C30@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

void sub_2486F0C40(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_2486F0C4C()
{
  return sub_24872D070();
}

uint64_t sub_2486F0C94()
{
  return sub_24872D060();
}

uint64_t sub_2486F0CC0()
{
  return sub_24872D070();
}

BOOL sub_2486F0D04(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t static CleanExit.helpRequest(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(void *)(a3 + 8) = a2;
  *(unsigned char *)(a3 + 16) = 0;
  return result;
}

uint64_t static CleanExit.message(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(unsigned char *)(a3 + 16) = 1;
  return swift_bridgeObjectRetain();
}

uint64_t CleanExit.description.getter()
{
  if (!*((unsigned char *)v0 + 16)) {
    return 0x706C65682D2DLL;
  }
  if (*((unsigned char *)v0 + 16) != 1) {
    return 0xD000000000000018;
  }
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_2486F0DAC()
{
  unint64_t result = qword_26931E478;
  if (!qword_26931E478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E478);
  }
  return result;
}

uint64_t sub_2486F0E00()
{
  if (!*((unsigned char *)v0 + 16)) {
    return 0x706C65682D2DLL;
  }
  if (*((unsigned char *)v0 + 16) != 1) {
    return 0xD000000000000018;
  }
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

ValueMetadata *type metadata accessor for ValidationError()
{
  return &type metadata for ValidationError;
}

ValueMetadata *type metadata accessor for ExitCode()
{
  return &type metadata for ExitCode;
}

uint64_t sub_2486F0E94(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2486F0EAC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

ValueMetadata *type metadata accessor for CleanExit()
{
  return &type metadata for CleanExit;
}

uint64_t destroy for CleanExit.Representation(uint64_t a1)
{
  return sub_2486F0EAC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s22ArgumentParserInternal9CleanExitV14RepresentationOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_2486F0E94(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s22ArgumentParserInternal9CleanExitV14RepresentationOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_2486F0E94(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_2486F0EAC(v6, v7, v8);
  return a1;
}

uint64_t _s22ArgumentParserInternal9CleanExitV14RepresentationOwta_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_2486F0EAC(v4, v5, v6);
  return a1;
}

uint64_t _s22ArgumentParserInternal9CleanExitV14RepresentationOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s22ArgumentParserInternal9CleanExitV14RepresentationOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_2486F106C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_2486F1074(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CleanExit.Representation()
{
  return &type metadata for CleanExit.Representation;
}

unint64_t sub_2486F108C()
{
  unint64_t result = qword_26931E480;
  if (!qword_26931E480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E480);
  }
  return result;
}

unint64_t sub_2486F10E0()
{
  unint64_t result = qword_26931E488;
  if (!qword_26931E488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E488);
  }
  return result;
}

void static ArgumentHelp.private.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 48) = 2;
}

void __swiftcall ArgumentHelp.init(stringLiteral:)(ArgumentParserInternal::ArgumentHelp *__return_ptr retstr, Swift::String stringLiteral)
{
  retstr->abstract = stringLiteral;
  retstr->discussion._uint64_t countAndFlagsBits = 0;
  retstr->discussion._object = (void *)0xE000000000000000;
  retstr->valueName.value._uint64_t countAndFlagsBits = 0;
  retstr->valueName.value._object = 0;
  retstr->visibility.base = ArgumentParserInternal_ArgumentVisibility_Representation_default;
}

uint64_t ArgumentHelp.abstract.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArgumentHelp.abstract.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ArgumentHelp.abstract.modify())(void)
{
  return nullsub_1;
}

uint64_t ArgumentHelp.discussion.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArgumentHelp.discussion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ArgumentHelp.discussion.modify())(void)
{
  return nullsub_1;
}

uint64_t ArgumentHelp.valueName.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArgumentHelp.valueName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*ArgumentHelp.valueName.modify())(void)
{
  return nullsub_1;
}

void ArgumentHelp.visibility.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 48);
}

unsigned char *ArgumentHelp.visibility.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 48) = *result;
  return result;
}

uint64_t (*ArgumentHelp.visibility.modify())(void)
{
  return nullsub_1;
}

BOOL ArgumentHelp.shouldDisplay.getter()
{
  return *(unsigned char *)(v0 + 48) == 0;
}

uint64_t ArgumentHelp.shouldDisplay.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 48) = result ^ 1;
  return result;
}

unsigned char *(*ArgumentHelp.shouldDisplay.modify(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 48) == 0;
  return sub_2486F1390;
}

unsigned char *sub_2486F1390(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 48) = (result[8] & 1) == 0;
  return result;
}

void __swiftcall ArgumentHelp.init(_:discussion:valueName:shouldDisplay:)(ArgumentParserInternal::ArgumentHelp *__return_ptr retstr, Swift::String _, Swift::String discussion, Swift::String_optional valueName, Swift::Bool shouldDisplay)
{
  retstr->abstract = _;
  retstr->discussion = discussion;
  retstr->valueName = valueName;
  retstr->visibility.base = !shouldDisplay;
}

void __swiftcall ArgumentHelp.init(_:discussion:valueName:visibility:)(ArgumentParserInternal::ArgumentHelp *__return_ptr retstr, Swift::String _, Swift::String discussion, Swift::String_optional valueName, ArgumentParserInternal::ArgumentVisibility visibility)
{
  ArgumentParserInternal::ArgumentVisibility::Representation v5 = *(unsigned char *)visibility.base;
  retstr->abstract = _;
  retstr->discussion = discussion;
  retstr->valueName = valueName;
  retstr->visibility.base = v5;
}

void static ArgumentHelp.hidden.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 48) = 1;
}

unint64_t sub_2486F13F8()
{
  unint64_t result = qword_26931E490;
  if (!qword_26931E490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E490);
  }
  return result;
}

uint64_t sub_2486F144C()
{
  return MEMORY[0x263F8E240];
}

uint64_t sub_2486F1458(void *a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270F9FA58](*a1, a1[1], a2, a3);
}

unint64_t sub_2486F1470()
{
  unint64_t result = qword_26931E498;
  if (!qword_26931E498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E498);
  }
  return result;
}

uint64_t sub_2486F14C4()
{
  return MEMORY[0x263F8D388];
}

unint64_t sub_2486F14D8()
{
  unint64_t result = qword_26931E4A0;
  if (!qword_26931E4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E4A0);
  }
  return result;
}

uint64_t sub_2486F152C()
{
  return MEMORY[0x263F8D398];
}

uint64_t sub_2486F1538()
{
  return MEMORY[0x263F8D390];
}

void *sub_2486F1544@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = result[1];
  *(void *)a2 = *result;
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0xE000000000000000;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0;
  *(unsigned char *)(a2 + 48) = 0;
  return result;
}

uint64_t sub_2486F1560@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 48) == 0;
  return result;
}

unsigned char *sub_2486F1574(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 48) = (*result & 1) == 0;
  return result;
}

uint64_t initializeWithCopy for ArgumentHelp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArgumentHelp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ArgumentHelp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArgumentHelp(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArgumentHelp(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArgumentHelp()
{
  return &type metadata for ArgumentHelp;
}

void static ArgumentVisibility.default.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void static ArgumentVisibility.hidden.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

void static ArgumentVisibility.private.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t ArgumentVisibility.hash(into:)()
{
  return sub_24872D040();
}

BOOL static ArgumentVisibility.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ArgumentVisibility.hashValue.getter()
{
  return sub_24872D070();
}

unint64_t sub_2486F1850()
{
  unint64_t result = qword_26931E4A8;
  if (!qword_26931E4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E4A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ArgumentVisibility()
{
  return &type metadata for ArgumentVisibility;
}

uint64_t getEnumTagSinglePayload for HelpRequested(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s22ArgumentParserInternal18ArgumentVisibilityV14RepresentationOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2486F1A18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_2486F1A40(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ArgumentVisibility.Representation()
{
  return &type metadata for ArgumentVisibility.Representation;
}

unint64_t sub_2486F1A5C()
{
  unint64_t result = qword_26931E4B0;
  if (!qword_26931E4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E4B0);
  }
  return result;
}

uint64_t static NameSpecification.long.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_2486B7AA4((uint64_t)&unk_26FC75B80);
  swift_bridgeObjectRelease();
  uint64_t result = swift_arrayDestroy();
  *a1 = v2;
  return result;
}

uint64_t NameSpecification.init(arrayLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_2486B7AA4(a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

double static NameSpecification.Element.short.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 1;
  *(_OWORD *)a1 = xmmword_24872E490;
  *(unsigned char *)(a1 + 16) = 0x80;
  return result;
}

void static NameSpecification.Element.long.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0x80;
}

uint64_t static NameSpecification.Element.customLong(_:withSingleDash:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 16) = a3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2486F1BC8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v5 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    sub_24872C6A0();
    uint64_t v16 = a1;
    swift_bridgeObjectRetain();
    sub_24872C480();
    swift_bridgeObjectRelease();
    sub_24872C600();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_24871B2F0(1uLL, a3, a4);
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    MEMORY[0x24C57C040](v8, v10, v12, v14);
    sub_24872C600();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v16;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a1;
}

unint64_t sub_2486F1CF0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_24872D100();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = a3;
  unint64_t v30 = a4;
  uint64_t v25 = 45;
  unint64_t v26 = 0xE100000000000000;
  sub_2486B71D8();
  if (sub_24872C990()) {
    goto LABEL_23;
  }
  uint64_t v25 = 95;
  unint64_t v26 = 0xE100000000000000;
  if (sub_24872C990()) {
    goto LABEL_23;
  }
  sub_24871B768(a3, a4);
  if (!v12) {
    goto LABEL_23;
  }
  char v13 = sub_24872C490();
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0) {
    goto LABEL_23;
  }
  uint64_t v14 = HIBYTE(a4) & 0xF;
  uint64_t v25 = a3;
  unint64_t v26 = a4;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v14 = a3 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v27 = 0;
  uint64_t v28 = v14;
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_24872C620();
  if (!v16)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_23:
    uint64_t v25 = a1;
    unint64_t v26 = a2;
    swift_bridgeObjectRetain();
    sub_24872C600();
    sub_24872C600();
    return v25;
  }
  unint64_t v17 = v15;
  unint64_t v18 = v16;
  unint64_t v19 = (void (**)(char *, uint64_t))(v9 + 8);
  while (1)
  {
    if ((sub_24872C4C0() & 1) == 0) {
      goto LABEL_13;
    }
    unint64_t result = sub_2486F2EE0(v17, v18);
    if ((result & 0x100000000) != 0) {
      break;
    }
    sub_24872D110();
    char v21 = sub_24872D0E0();
    (*v19)(v11, v8);
    if (v21) {
      goto LABEL_24;
    }
LABEL_13:
    if (sub_24872C4B0())
    {
      if (sub_24872C4C0())
      {
        unint64_t result = sub_2486F2EE0(v17, v18);
        if ((result & 0x100000000) != 0) {
          goto LABEL_27;
        }
        sub_24872D110();
        char v22 = sub_24872D0F0();
        (*v19)(v11, v8);
        if (v22) {
          goto LABEL_24;
        }
      }
      if ((sub_24872C4B0() & 1) == 0)
      {
LABEL_24:
        swift_bridgeObjectRelease();
LABEL_25:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return sub_2486F1BC8(a1, a2, v29, v30);
      }
      char v23 = sub_24872C4A0();
      swift_bridgeObjectRelease();
      if ((v23 & 1) == 0) {
        goto LABEL_25;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    unint64_t v17 = sub_24872C620();
    unint64_t v18 = v24;
    if (!v24) {
      goto LABEL_22;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_2486F2034(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 >> 6 && a4 >> 6 != 1) {
    return sub_24872D040();
  }
  sub_24872D040();
  sub_24872C4D0();
  return sub_24872D050();
}

uint64_t sub_2486F20E0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 >> 6 && a3 >> 6 != 1)
  {
    sub_24872D040();
  }
  else
  {
    sub_24872D040();
    sub_24872C4D0();
    sub_24872D050();
  }
  return sub_24872D070();
}

uint64_t sub_2486F21BC()
{
  return sub_2486F20E0(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_2486F21C8(uint64_t a1)
{
  return sub_2486F2034(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

uint64_t sub_2486F21D4()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_24872D030();
  sub_24872D040();
  if (v1 >> 6 <= 1)
  {
    sub_24872C4D0();
    sub_24872D050();
  }
  return sub_24872D070();
}

uint64_t sub_2486F22A4(uint64_t a1, uint64_t a2)
{
  return sub_2486F31F4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t static NameSpecification.Element.customShort(_:allowingJoined:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 16) = a3 | 0x40;
  return swift_bridgeObjectRetain();
}

uint64_t NameSpecification.Element.hash(into:)()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  unsigned int v3 = *(unsigned __int8 *)(v0 + 16);
  if (v3 >> 6)
  {
    if (v3 >> 6 == 1)
    {
      sub_24872D040();
      sub_24872C4D0();
      return sub_24872D050();
    }
    else
    {
      return sub_24872D040();
    }
  }
  else
  {
    sub_24872D040();
    swift_bridgeObjectRetain();
    sub_24872C4D0();
    sub_24872D050();
    return sub_2486B7C8C(v1, v2, v3);
  }
}

uint64_t NameSpecification.Element.hashValue.getter()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  unsigned int v3 = *(unsigned __int8 *)(v0 + 16);
  sub_24872D030();
  if (v3 >> 6)
  {
    sub_24872D040();
    if (v3 >> 6 == 1)
    {
      sub_24872C4D0();
      sub_24872D050();
    }
  }
  else
  {
    sub_24872D040();
    swift_bridgeObjectRetain();
    sub_24872C4D0();
    sub_24872D050();
    sub_2486B7C8C(v1, v2, v3);
  }
  return sub_24872D070();
}

uint64_t sub_2486F24D8()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  unsigned int v3 = *(unsigned __int8 *)(v0 + 16);
  sub_24872D030();
  if (v3 >> 6)
  {
    sub_24872D040();
    if (v3 >> 6 == 1)
    {
      sub_24872C4D0();
      sub_24872D050();
    }
  }
  else
  {
    sub_24872D040();
    swift_bridgeObjectRetain();
    sub_24872C4D0();
    sub_24872D050();
    sub_2486B7C8C(v1, v2, v3);
  }
  return sub_24872D070();
}

uint64_t NameSpecification.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  unint64_t v8 = sub_2486F33C8();
  uint64_t v9 = sub_2486E0674(a2, a3, v8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  *a4 = v9;
  return result;
}

uint64_t sub_2486F2658@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_2486B7AA4(a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t static NameSpecification.customLong(_:withSingleDash:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400E8);
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 32) = a1;
  *(_OWORD *)(inited + 16) = xmmword_24872D630;
  *(void *)(inited + 40) = a2;
  *(unsigned char *)(inited + 48) = a3;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_2486B7AA4(inited);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  uint64_t result = swift_arrayDestroy();
  *a4 = v9;
  return result;
}

uint64_t static NameSpecification.short.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_2486B7AA4((uint64_t)&unk_26FC75C88);
  swift_bridgeObjectRelease();
  uint64_t result = swift_arrayDestroy();
  *a1 = v2;
  return result;
}

uint64_t static NameSpecification.customShort(_:allowingJoined:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24872D630;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  *(unsigned char *)(inited + 48) = a3 | 0x40;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_2486B7AA4(inited);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  uint64_t result = swift_arrayDestroy();
  *a4 = v9;
  return result;
}

uint64_t static NameSpecification.shortAndLong.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_2486B7AA4((uint64_t)&unk_26FC75CC0);
  swift_bridgeObjectRelease();
  uint64_t result = swift_arrayDestroy();
  *a1 = v2;
  return result;
}

uint64_t sub_2486F2944(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  uint64_t v7 = *(void *)(a4 + 16);
  if (v7)
  {
    uint64_t v10 = HIBYTE(a6) & 0xF;
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v10 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v53 = v10;
    swift_bridgeObjectRetain_n();
    uint64_t v11 = (char *)(a4 + 48);
    uint64_t v12 = (char *)MEMORY[0x263F8EE78];
    while (1)
    {
      uint64_t v15 = *((void *)v11 - 2);
      unint64_t v14 = *((void *)v11 - 1);
      unsigned int v16 = *v11;
      unsigned int v17 = v16 >> 6;
      if (!(v16 >> 6))
      {
        sub_2486B7C7C(*((void *)v11 - 2), *((void *)v11 - 1), *v11);
        unint64_t v19 = sub_2486F1CF0(a1, a2, v15, v14);
        unint64_t v21 = v20;
        sub_2486B7C8C(v15, v14, v16);
        char v18 = (_BYTE)v16 << 7;
        uint64_t v15 = v19;
        unint64_t v14 = v21;
        goto LABEL_35;
      }
      if (v17 == 1)
      {
        if (a3) {
          goto LABEL_10;
        }
      }
      else
      {
        if (!(v14 | v15) && v16 == 128)
        {
          if (v53)
          {
            swift_bridgeObjectRetain();
            sub_24872C6A0();
            swift_bridgeObjectRetain();
            sub_24872C480();
            swift_bridgeObjectRelease();
            sub_24872C600();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            unint64_t v22 = sub_24871B2F0(1uLL, a5, a6);
            uint64_t v24 = v23;
            uint64_t v26 = v25;
            uint64_t v28 = v27;
            swift_bridgeObjectRelease();
            MEMORY[0x24C57C040](v22, v24, v26, v28);
            sub_24872C600();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v30 = a1;
            unint64_t v29 = a2;
          }
          else
          {
            unint64_t v29 = a2;
            swift_bridgeObjectRetain();
            uint64_t v30 = a1;
          }
          if ((v29 & 0x2000000000000000) != 0) {
            uint64_t v32 = HIBYTE(v29) & 0xF;
          }
          else {
            uint64_t v32 = v30 & 0xFFFFFFFFFFFFLL;
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v32)
          {
            swift_bridgeObjectRetain();
            uint64_t v33 = sub_24872C6A0();
            uint64_t v35 = v34;
            swift_bridgeObjectRelease();
            if (v33 == 95 && v35 == 0xE100000000000000)
            {
              swift_bridgeObjectRelease();
              goto LABEL_29;
            }
            char v36 = sub_24872CEB0();
            swift_bridgeObjectRelease();
            if (v36)
            {
LABEL_29:
              unint64_t v37 = sub_24871B2F0(1uLL, v30, v29);
              uint64_t v39 = v38;
              uint64_t v41 = v40;
              uint64_t v43 = v42;
              swift_bridgeObjectRelease();
              uint64_t v30 = MEMORY[0x24C57C040](v37, v39, v41, v43);
              unint64_t v29 = v44;
              swift_bridgeObjectRelease();
            }
          }
          swift_bridgeObjectRetain();
          long long v45 = (char *)a7;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v45 = sub_248719EA4(0, *(void *)(a7 + 16) + 1, 1, (char *)a7);
          }
          unint64_t v47 = *((void *)v45 + 2);
          unint64_t v46 = *((void *)v45 + 3);
          if (v47 >= v46 >> 1) {
            long long v45 = sub_248719EA4((char *)(v46 > 1), v47 + 1, 1, v45);
          }
          *((void *)v45 + 2) = v47 + 1;
          long long v48 = &v45[16 * v47];
          *((void *)v48 + 4) = a5;
          *((void *)v48 + 5) = a6;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          uint64_t v15 = sub_2486B8604(45, 0xE100000000000000, v30, v29);
          unint64_t v14 = v49;
          swift_bridgeObjectRelease();
          sub_2486B7C7C(0, 0, 128);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_2486B7C8C(0, 0, 128);
          char v18 = 0;
LABEL_35:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v12 = sub_24871A0CC(0, *((void *)v12 + 2) + 1, 1, v12);
          }
          unint64_t v51 = *((void *)v12 + 2);
          unint64_t v50 = *((void *)v12 + 3);
          if (v51 >= v50 >> 1) {
            uint64_t v12 = sub_24871A0CC((char *)(v50 > 1), v51 + 1, 1, v12);
          }
          *((void *)v12 + 2) = v51 + 1;
          char v13 = &v12[24 * v51];
          *((void *)v13 + 4) = v15;
          *((void *)v13 + 5) = v14;
          v13[48] = v18;
          goto LABEL_6;
        }
        if (a3)
        {
          if (v17 == 2)
          {
            if (!v53)
            {
              sub_2486B7C7C(1, 0, 128);
              sub_24872CAD0();
              sub_24872C600();
              swift_bridgeObjectRetain();
              sub_24872C600();
              swift_bridgeObjectRelease();
              sub_24872C600();
              uint64_t result = sub_24872CC40();
              __break(1u);
              return result;
            }
            sub_2486B7C7C(1, 0, 128);
            swift_bridgeObjectRetain();
            uint64_t v15 = sub_24872C6A0();
            unint64_t v14 = v31;
            swift_bridgeObjectRelease();
            sub_2486B7C8C(1, 0, 128);
            char v18 = 64;
          }
          else
          {
LABEL_10:
            char v18 = v16 & 1 | 0x40;
            sub_2486B7C7C(*((void *)v11 - 2), *((void *)v11 - 1), *v11);
          }
          goto LABEL_35;
        }
      }
LABEL_6:
      v11 += 24;
      if (!--v7)
      {
        swift_bridgeObjectRelease_n();
        return (uint64_t)v12;
      }
    }
  }
  return MEMORY[0x263F8EE78];
}

unint64_t sub_2486F2EE0(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    sub_2486F2FC0(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      unsigned int v5 = sub_24872CAC0();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
        sub_24872CB30();
      }
      unsigned int v5 = sub_24872CB40();
    }
  }
  else
  {
    unsigned int v5 = 0;
  }
  return v5 | ((unint64_t)(v2 == 0) << 32);
}

unint64_t sub_2486F2FC0(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5) {
    goto LABEL_9;
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    uint64_t result = sub_2486F3060(result, a2, a3);
    if ((result & 1) == 0) {
      return result & 0xC | sub_2486F30D0(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
  }
  return result;
}

unint64_t sub_2486F3060(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) == 4 << v5) {
    uint64_t result = sub_2486E2E68(result, a2, a3);
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16) {
    __break(1u);
  }
  return result;
}

unint64_t sub_2486F30D0(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    unint64_t v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      void v13[2] = v3;
      uint64_t v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((unsigned char *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            unint64_t v7 = v5 - 1;
            int v11 = *((unsigned char *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          return v7 << 16;
        }
        goto LABEL_14;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 == (a2 & 0xFFFFFFFFFFFFLL)) {
          goto LABEL_14;
        }
      }
      else
      {
        unint64_t v12 = result >> 16;
        uint64_t v6 = sub_24872CB30();
        unint64_t v5 = v12;
        if (v12 == v10) {
          goto LABEL_14;
        }
      }
      if ((*(unsigned char *)(v6 + v5) & 0xC0) == 0x80)
      {
        do
        {
          unint64_t v7 = v5 - 1;
          int v8 = *(unsigned char *)(v6 - 1 + v5--) & 0xC0;
        }
        while (v8 == 128);
        return v7 << 16;
      }
LABEL_14:
      unint64_t v7 = v5;
      return v7 << 16;
    }
    uint64_t v9 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v9 = a2 & 0xFFFFFFFFFFFFLL;
    }
    if (v5 != v9)
    {
      return MEMORY[0x270F9E998]();
    }
  }
  return result;
}

uint64_t sub_2486F31F4(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (!(a3 >> 6))
  {
    if (a6 >= 0x40u)
    {
LABEL_21:
      char v9 = 0;
      return v9 & 1;
    }
    goto LABEL_6;
  }
  if (a3 >> 6 == 1)
  {
    if ((a6 & 0xC0) != 0x40) {
      goto LABEL_21;
    }
LABEL_6:
    if (a1 == a4 && a2 == a5 || (char v8 = sub_24872CEB0(), v9 = 0, (v8 & 1) != 0)) {
      char v9 = ((a3 & 1) == 0) ^ a6;
    }
    return v9 & 1;
  }
  if (a2 | a1 || a3 != 128)
  {
    if ((a6 & 0xC0) != 0x80 || a4 != 1 || a5 || a6 != 128) {
      goto LABEL_21;
    }
  }
  else if ((a6 & 0xC0) != 0x80 || a5 | a4 || a6 != 128)
  {
    goto LABEL_21;
  }
  char v9 = 1;
  return v9 & 1;
}

BOOL _s22ArgumentParserInternal17NameSpecificationV7ElementV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  unsigned int v6 = *((unsigned __int8 *)a1 + 16);
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  unsigned int v9 = *((unsigned __int8 *)a2 + 16);
  if (v6 >> 6)
  {
    if (v6 >> 6 != 1)
    {
      if (v5 | v4 || v6 != 128)
      {
        if ((v9 & 0xC0) != 0x80 || v7 != 1 || v8 != 0) {
          return 0;
        }
      }
      else if ((v9 & 0xC0) != 0x80 || (v8 | v7) != 0)
      {
        return 0;
      }
      return v9 == 128;
    }
    if ((v9 & 0xC0) != 0x40) {
      return 0;
    }
    if (v4 == v7 && v5 == v8) {
      return (v6 & 1) == (v9 & 1);
    }
  }
  else
  {
    if (v9 >= 0x40) {
      return 0;
    }
    if (v4 == v7 && v5 == v8) {
      return ((v6 ^ v9) & 1) == 0;
    }
  }
  if (sub_24872CEB0()) {
    return ((v6 ^ v9) & 1) == 0;
  }
  return 0;
}

unint64_t sub_2486F33C8()
{
  unint64_t result = qword_26931E4B8;
  if (!qword_26931E4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E4B8);
  }
  return result;
}

unint64_t sub_2486F3420()
{
  unint64_t result = qword_26B13FDC8;
  if (!qword_26B13FDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B13FDC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for NameSpecification()
{
  return &type metadata for NameSpecification;
}

ValueMetadata *type metadata accessor for NameSpecification.Element()
{
  return &type metadata for NameSpecification.Element;
}

uint64_t destroy for NameSpecification.Element.Representation(uint64_t a1)
{
  return sub_2486B7C8C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s22ArgumentParserInternal17NameSpecificationV7ElementV14RepresentationOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_2486B7C7C(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s22ArgumentParserInternal17NameSpecificationV7ElementV14RepresentationOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_2486B7C7C(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_2486B7C8C(v6, v7, v8);
  return a1;
}

uint64_t _s22ArgumentParserInternal17NameSpecificationV7ElementV14RepresentationOwta_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_2486B7C8C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Name(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 16) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 16) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for Name(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 126;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_2486F364C(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 16);
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 6;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_2486F366C(uint64_t result)
{
  *(unsigned char *)(result + 16) &= 0x3Fu;
  return result;
}

uint64_t sub_2486F367C(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(unsigned char *)(result + 16) = *(unsigned char *)(result + 16) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(void *)unint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for NameSpecification.Element.Representation()
{
  return &type metadata for NameSpecification.Element.Representation;
}

unint64_t sub_2486F36BC()
{
  unint64_t result = qword_26931E4C0;
  if (!qword_26931E4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E4C0);
  }
  return result;
}

uint64_t sub_2486F3714@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v30 = a1;
  uint64_t v10 = *(void *)(a3 - 8);
  uint64_t v27 = a5;
  uint64_t v28 = v10;
  uint64_t v11 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  char v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v14 + 16);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v11);
  unint64_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  unint64_t v21 = (char *)&v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v22 + 16))(v21, v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v21, 1, v15) == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56))(a6, 1, 1, a4);
  }
  uint64_t v25 = v28;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v21, v15);
  v30(v19, v13);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  if (v6) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v25 + 32))(v27, v13, a3);
  }
  return result;
}

uint64_t Flag<A>.init(wrappedValue:name:help:)@<X0>(char a1@<W0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *a2;
  sub_2486E775C(a3, (uint64_t)v9);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(unsigned char *)(v7 + 24) = a1;
  uint64_t result = sub_2486E775C((uint64_t)v9, v7 + 32);
  *(void *)a4 = sub_2486D02E8;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

uint64_t Flag.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Flag();
  sub_2486C2100(a1, (uint64_t)v7);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_248709F24((uint64_t)v7, v4, WitnessTable, a2);
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

void Flag.init()()
{
}

uint64_t Flag.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = type metadata accessor for Parsed();
  MEMORY[0x270FA5388](v6);
  char v8 = (char *)&v11 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v11 - v7, v3, v6);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v5 - 8) + 32))(a2, v8, v5);
  }
  uint64_t result = sub_24872CC40();
  __break(1u);
  return result;
}

uint64_t sub_2486F3CB0(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v2 = (char *)&v6 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v6 - v1);
  uint64_t v4 = type metadata accessor for Flag();
  return Flag.wrappedValue.setter((uint64_t)v2, v4);
}

uint64_t Flag.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = type metadata accessor for Parsed();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v2, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v2, a1, v4);
  return swift_storeEnumTagMultiPayload();
}

void (*Flag.wrappedValue.modify(void *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t v5 = malloc(0x30uLL);
  *a1 = v5;
  *uint64_t v5 = a2;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v5[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v5[4] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v5[5] = v9;
  Flag.wrappedValue.getter(a2, (uint64_t)v9);
  return sub_2486F3F10;
}

void sub_2486F3F10(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[4];
  uint64_t v4 = (void *)(*a1)[5];
  if (a2)
  {
    uint64_t v5 = v2[2];
    uint64_t v6 = v2[3];
    uint64_t v7 = *v2;
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[4], v4, v5);
    Flag.wrappedValue.setter((uint64_t)v3, v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    Flag.wrappedValue.setter((*a1)[5], *v2);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t sub_2486F3FD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return Flag.init(from:)(a1, a2);
}

unint64_t Flag.description.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = type metadata accessor for Parsed();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  char v13 = (char *)&v16 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v16 - v12, v2, v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return 0xD000000000000012;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v13, v3);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    uint64_t v14 = sub_24872C540();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  return v14;
}

void static FlagInversion.prefixedNo.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void static FlagInversion.prefixedEnableDisable.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t FlagInversion.hash(into:)()
{
  return sub_24872D040();
}

BOOL static FlagInversion.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FlagInversion.hashValue.getter()
{
  return sub_24872D070();
}

void static FlagExclusivity.exclusive.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void static FlagExclusivity.chooseFirst.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

void static FlagExclusivity.chooseLast.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t FlagExclusivity.hash(into:)()
{
  return sub_24872D040();
}

BOOL static FlagExclusivity.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FlagExclusivity.hashValue.getter()
{
  return sub_24872D070();
}

uint64_t Flag<A>.init(name:inversion:exclusivity:help:)@<X0>(uint64_t *a1@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = *a1;
  char v7 = *a2;
  char v8 = *a3;
  sub_2486E775C(a4, (uint64_t)v11);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v6;
  *(unsigned char *)(v9 + 24) = v7;
  *(unsigned char *)(v9 + 25) = v8;
  uint64_t result = sub_2486E775C((uint64_t)v11, v9 + 32);
  *(void *)a5 = sub_2486F4798;
  *(void *)(a5 + 8) = v9;
  *(unsigned char *)(a5 + 16) = 1;
  return result;
}

{
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t result;
  unsigned char v11[56];

  uint64_t v6 = *a1;
  char v7 = *a2;
  char v8 = *a3;
  sub_2486E775C(a4, (uint64_t)v11);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v6;
  *(unsigned char *)(v9 + 24) = 2;
  *(unsigned char *)(v9 + 25) = v7;
  *(unsigned char *)(v9 + 26) = v8;
  uint64_t result = sub_2486E775C((uint64_t)v11, v9 + 32);
  *(void *)a5 = sub_2486F48F0;
  *(void *)(a5 + 8) = v9;
  *(unsigned char *)(a5 + 16) = 1;
  return result;
}

uint64_t sub_2486F43F4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, uint64_t a7)
{
  uint64_t v14 = a4;
  char v13 = a5 & 1;
  char v12 = a6;
  sub_2486E775C(a7, (uint64_t)v11);
  return sub_248701E3C(a1, a2, a3, &v14, 2u, 0, &v13, &v12, (uint64_t)v11);
}

uint64_t Flag<A>.init(wrappedValue:name:inversion:exclusivity:help:)@<X0>(uint64_t *a1@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = *a1;
  char v7 = *a2;
  char v8 = *a3;
  sub_2486E775C(a4, (uint64_t)v11);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v6;
  *(unsigned char *)(v9 + 24) = v7;
  *(unsigned char *)(v9 + 25) = v8;
  uint64_t result = sub_2486E775C((uint64_t)v11, v9 + 32);
  *(void *)a5 = sub_2486FA7D8;
  *(void *)(a5 + 8) = v9;
  *(unsigned char *)(a5 + 16) = 1;
  return result;
}

uint64_t sub_2486F4510(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t *a6)
{
  BOOL v11 = a5 != 2;
  if (a5) {
    uint64_t v12 = 1702195828;
  }
  else {
    uint64_t v12 = 0;
  }
  if (a5) {
    uint64_t v13 = 0xE400000000000000;
  }
  else {
    uint64_t v13 = 0;
  }
  sub_2486E775C((uint64_t)a6, (uint64_t)v31);
  sub_2486D02F8(a6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24870AD3C(MEMORY[0x263F8EE78], v11, v31, v12, v13, a1, a2, a3, (uint64_t)&v32, 0);
  uint64_t v14 = v33;
  char v30 = v35;
  long long v28 = v37;
  long long v29 = v36;
  uint64_t v15 = v38;
  uint64_t v16 = v39;
  char v27 = v40;
  uint64_t v25 = v42;
  uint64_t v26 = v41;
  long long v23 = v34;
  long long v24 = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = swift_bridgeObjectRetain();
  uint64_t v18 = sub_2486F9CA0(v17, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v19 = (void *)swift_allocObject();
  void v19[2] = a1;
  v19[3] = a2;
  void v19[4] = a3;
  uint64_t v20 = swift_allocObject();
  *(unsigned char *)(v20 + 16) = a5;
  *(void *)(v20 + 24) = a1;
  *(void *)(v20 + 32) = a2;
  *(void *)(v20 + 40) = a3;
  LOBYTE(v32) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_24872D630;
  *(void *)(v21 + 32) = v18;
  *(_OWORD *)(v21 + 40) = v24;
  *(void *)(v21 + 56) = v14;
  *(_OWORD *)(v21 + 64) = v23;
  *(unsigned char *)(v21 + 80) = v30;
  *(_OWORD *)(v21 + 88) = v29;
  *(_OWORD *)(v21 + 104) = v28;
  *(void *)(v21 + 120) = v15;
  *(void *)(v21 + 128) = v16;
  *(unsigned char *)(v21 + 136) = v27;
  *(void *)(v21 + 144) = v26;
  *(void *)(v21 + 152) = v25;
  *(void *)(v21 + 160) = 0;
  *(void *)(v21 + 168) = 0;
  *(_WORD *)(v21 + 176) = 4;
  *(void *)(v21 + 184) = sub_2486FA754;
  *(void *)(v21 + 192) = v19;
  *(unsigned char *)(v21 + 200) = v32;
  *(void *)(v21 + 208) = sub_2486FA7B4;
  *(void *)(v21 + 216) = v20;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  return sub_2486CDED4(v21);
}

uint64_t type metadata accessor for Flag()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2486F4798(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_2486F43F4(a1, a2, a3, *(void *)(v3 + 16), *(unsigned char *)(v3 + 24), *(unsigned char *)(v3 + 25), v3 + 32);
}

uint64_t sub_2486F47B0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, char a6, char a7, uint64_t a8)
{
  uint64_t v17 = a4;
  char v12 = a5 == 2;
  char v16 = a6 & 1;
  char v15 = a7;
  sub_2486E775C(a8, (uint64_t)v14);
  return sub_248701E3C(a1, a2, a3, &v17, a5, v12, &v16, &v15, (uint64_t)v14);
}

uint64_t Flag<A>.init(wrappedValue:name:inversion:exclusivity:help:)@<X0>(char a1@<W0>, uint64_t *a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8 = *a2;
  char v9 = *a3;
  char v10 = *a4;
  sub_2486E775C(a5, (uint64_t)v13);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v8;
  *(unsigned char *)(v11 + 24) = a1;
  *(unsigned char *)(v11 + 25) = v9;
  *(unsigned char *)(v11 + 26) = v10;
  uint64_t result = sub_2486E775C((uint64_t)v13, v11 + 32);
  *(void *)a6 = sub_2486F48F0;
  *(void *)(a6 + 8) = v11;
  *(unsigned char *)(a6 + 16) = 1;
  return result;
}

uint64_t sub_2486F499C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_2486F47B0(a1, a2, a3, *(void *)(v3 + 16), *(unsigned char *)(v3 + 24), *(unsigned char *)(v3 + 25), *(unsigned char *)(v3 + 26), v3 + 32);
}

uint64_t Flag<A>.init(name:help:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  sub_2486E775C(a2, (uint64_t)v7);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  uint64_t result = sub_2486E775C((uint64_t)v7, v5 + 24);
  *(void *)a3 = sub_2486F4CC4;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

uint64_t sub_2486F4A3C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  sub_2486E775C((uint64_t)a5, (uint64_t)v26);
  sub_2486D02F8(a5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24870AD3C(MEMORY[0x263F8EE78], 3, v26, 0, 0, a1, a2, a3, (uint64_t)&v27, 0);
  uint64_t v9 = v28;
  char v25 = v30;
  long long v23 = v32;
  long long v24 = v31;
  uint64_t v10 = v33;
  uint64_t v11 = v34;
  char v12 = v35;
  uint64_t v21 = v37;
  uint64_t v22 = v36;
  long long v19 = v29;
  long long v20 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = sub_2486F9CA0(v13, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v15 = (void *)swift_allocObject();
  v15[2] = a1;
  uint64_t v15[3] = a2;
  v15[4] = a3;
  char v16 = (void *)swift_allocObject();
  void v16[2] = a1;
  v16[3] = a2;
  v16[4] = a3;
  LOBYTE(v27) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_24872D630;
  *(void *)(v17 + 32) = v14;
  *(_OWORD *)(v17 + 40) = v20;
  *(void *)(v17 + 56) = v9;
  *(_OWORD *)(v17 + 64) = v19;
  *(unsigned char *)(v17 + 80) = v25;
  *(_OWORD *)(v17 + 88) = v24;
  *(_OWORD *)(v17 + 104) = v23;
  *(void *)(v17 + 120) = v10;
  *(void *)(v17 + 128) = v11;
  *(unsigned char *)(v17 + 136) = v12;
  *(void *)(v17 + 144) = v22;
  *(void *)(v17 + 152) = v21;
  *(void *)(v17 + 160) = 0;
  *(void *)(v17 + 168) = 0;
  *(_WORD *)(v17 + 176) = 4;
  *(void *)(v17 + 184) = sub_2486FA6CC;
  *(void *)(v17 + 192) = v15;
  *(unsigned char *)(v17 + 200) = v27;
  *(void *)(v17 + 208) = sub_2486FA6F0;
  *(void *)(v17 + 216) = v16;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  return sub_2486CDED4(v17);
}

uint64_t sub_2486F4C70()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x270FA0238](v0, 73, 7);
}

uint64_t sub_2486F4CC4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_2486F4A3C(a1, a2, a3, *(void *)(v3 + 16), (uint64_t *)(v3 + 24));
}

uint64_t sub_2486F4CD0@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v22 = a5;
  uint64_t v23 = a1;
  uint64_t v24 = a6;
  uint64_t v9 = type metadata accessor for Parsed();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  char v12 = (uint64_t *)((char *)&v22 - v11);
  char v13 = *a2;
  sub_2486E775C(a3, (uint64_t)v25);
  uint64_t v14 = sub_24872C8E0();
  uint64_t v15 = *(void *)(v14 - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v17 = (*(void *)(v15 + 64) + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  uint64_t v20 = v22;
  uint64_t v19 = v23;
  *(void *)(v18 + 16) = a4;
  *(void *)(v18 + 24) = v20;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 32))(v18 + v16, v19, v14);
  sub_2486E775C((uint64_t)v25, v18 + v17);
  *(unsigned char *)(v18 + v17 + 49) = v13;
  sub_24870A630((uint64_t)sub_2486FA354, v18, v12);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v10 + 32))(v24, v12, v9);
}

uint64_t sub_2486F4EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  int v56 = a6;
  uint64_t v58 = a4;
  uint64_t v54 = a5;
  sub_2486E775C(a5, (uint64_t)v69);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v47 = *(void *)(AssociatedConformanceWitness + 8);
  uint64_t v55 = sub_24872CC50();
  uint64_t v53 = *(void *)(v55 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v55);
  unint64_t v49 = (char *)&AssociatedConformanceWitness - v15;
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&AssociatedConformanceWitness - v17;
  uint64_t v63 = a7;
  uint64_t v64 = a8;
  uint64_t v50 = a1;
  uint64_t v65 = a1;
  uint64_t v66 = a2;
  uint64_t v51 = a2;
  uint64_t v52 = a3;
  uint64_t v67 = a3;
  sub_24872C8E0();
  uint64_t v19 = MEMORY[0x263F8E628];
  uint64_t v20 = MEMORY[0x263F8E658];
  sub_2486F3714((void (*)(char *, char *))sub_2486FA424, (uint64_t)v62, MEMORY[0x263F8E628], MEMORY[0x263F8D310], v21, (uint64_t)v68);
  uint64_t v46 = v68[0];
  uint64_t v48 = v68[1];
  sub_24872CAE0();
  uint64_t v60 = a7;
  uint64_t v61 = a8;
  uint64_t v57 = a8;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FD98);
  uint64_t v24 = sub_2486BB128((void (*)(char *, char *))sub_2486F9804, (uint64_t)v59, AssociatedTypeWitness, v22, v19, AssociatedConformanceWitness, v20, v23);
  char v25 = *(void (**)(char *, uint64_t))(v16 + 8);
  v25(v18, AssociatedTypeWitness);
  uint64_t v26 = *(void *)(v24 + 16);
  if (v26)
  {
    long long v27 = (uint64_t *)(v24 + 40);
    uint64_t v28 = v26 - 1;
    do
    {
      uint64_t v29 = *v27;
      v27 += 7;
      BOOL v30 = v29 != 0;
      if (v29) {
        BOOL v31 = 1;
      }
      else {
        BOOL v31 = v28 == 0;
      }
      --v28;
    }
    while (!v31);
  }
  else
  {
    BOOL v30 = 0;
  }
  sub_24872CAE0();
  long long v32 = v49;
  MEMORY[0x24C57C1E0](AssociatedTypeWitness, v47);
  uint64_t v33 = ((uint64_t (*)(char *, uint64_t))v25)(v18, AssociatedTypeWitness);
  uint64_t v34 = MEMORY[0x270FA5388](v33);
  uint64_t v35 = v57;
  *(&AssociatedConformanceWitness - 12) = a7;
  *(&AssociatedConformanceWitness - 11) = v35;
  uint64_t v36 = v51;
  *(&AssociatedConformanceWitness - 10) = v50;
  *(&AssociatedConformanceWitness - 9) = v36;
  *(&AssociatedConformanceWitness - 8) = v52;
  *(&AssociatedConformanceWitness - 7) = v24;
  *(&AssociatedConformanceWitness - 6) = v54;
  *((unsigned char *)&AssociatedConformanceWitness - 40) = v30;
  uint64_t v37 = v46;
  *(&AssociatedConformanceWitness - 4) = v58;
  *(&AssociatedConformanceWitness - 3) = v37;
  *(&AssociatedConformanceWitness - 2) = v48;
  *((unsigned char *)&AssociatedConformanceWitness - 8) = v56;
  MEMORY[0x270FA5388](v34);
  *(&AssociatedConformanceWitness - 4) = a7;
  *(&AssociatedConformanceWitness - 3) = v38;
  *(&AssociatedConformanceWitness - 2) = (uint64_t)sub_2486FA48C;
  *(&AssociatedConformanceWitness - 1) = v39;
  uint64_t v40 = v55;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v43 = sub_2486F657C((void (*)(char *, char *))sub_2486F985C, (uint64_t)(&AssociatedConformanceWitness - 6), v40, (char *)&type metadata for ArgumentDefinition, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v42);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v32, v40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_2486CDED4(v43);
}

uint64_t sub_2486F536C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v16);
  uint64_t v17 = sub_24872C540();
  unint64_t v19 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_24871B3A0(v17, v19, a2, a3, a4);
  unint64_t v22 = v21;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(a6 + 24))(&v33, a1, a5, a6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v23 = swift_bridgeObjectRetain();
  uint64_t v24 = sub_2486F9CA0(v23, v20, v22);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  if (*(void *)(v24 + 16))
  {
    uint64_t v25 = *(void *)(v24 + 32);
    uint64_t v26 = *(void *)(v24 + 40);
    unsigned __int8 v27 = *(unsigned char *)(v24 + 48);
    sub_2486B7650(v25, v26, v27);
    swift_bridgeObjectRelease();
    uint64_t v28 = sub_248714E64(v25, v26, v27);
    uint64_t v30 = v29;
    uint64_t result = sub_2486B7668(v25, v26, v27);
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v28 = 0;
    uint64_t v30 = 0;
  }
  *a7 = v28;
  a7[1] = v30;
  return result;
}

void *sub_2486F5584@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, uint64_t *a10, uint64_t a11, uint64_t a12, unsigned __int8 a13, uint64_t a14, uint64_t a15)
{
  void *(*v40)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t);
  void *result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  void (*v68)(char *, char *, uint64_t);
  char *v69;
  char *v70;
  uint64_t v71;
  unsigned int (*v72)(uint64_t *, uint64_t, uint64_t);
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  unsigned int v75;
  char *v76;
  char *v77;
  char *v78;
  int v79;
  void (*v80)(char *, uint64_t);
  void (*v81)(char *, uint64_t);
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  unint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t TupleTypeMetadata2;
  uint64_t v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(char *, uint64_t, uint64_t);
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137[6];
  char v138;
  uint64_t v139[12];
  void v140[6];
  unsigned __int8 v141;

  LODWORD(v136) = a8;
  uint64_t v123 = a9;
  uint64_t v135 = a7;
  sub_2486E775C((uint64_t)a7, (uint64_t)v140);
  uint64_t v120 = v140[0];
  uint64_t v119 = v140[1];
  uint64_t v115 = v140[2];
  uint64_t v114 = v140[3];
  uint64_t v113 = v140[4];
  uint64_t v112 = v140[5];
  LODWORD(v111) = v141;
  uint64_t v21 = sub_24872C8E0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v104 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v134 = (char *)&v94 - v23;
  unint64_t v128 = v21;
  uint64_t v121 = *(void *)(v21 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v103 = (char *)&v94 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v105 = (char *)&v94 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v122 = v28;
  uint64_t v29 = (char *)&v94 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v130 = v30;
  BOOL v31 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
  uint64_t v132 = v30 + 16;
  uint64_t v131 = v31;
  v31(v29, a2, a14);
  uint64_t v126 = v29;
  uint64_t v32 = sub_24872C540();
  unint64_t v34 = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v124 = a3;
  unint64_t v125 = a4;
  uint64_t v35 = sub_24871B3A0(v32, v34, a3, a4, a5);
  unint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v40 = *(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(a15 + 24);
  uint64_t v133 = a2;
  unint64_t v129 = a14;
  unint64_t v127 = a15;
  uint64_t result = v40(v139, a2, a14, a15);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a6 + 16) > a1)
  {
    uint64_t v117 = v35;
    uint64_t v118 = v39;
    uint64_t v43 = a11;
    uint64_t v42 = a12;
    uint64_t v116 = v139[0];
    unint64_t v44 = a6 + 56 * a1;
    long long v45 = *(void *)(v44 + 32);
    uint64_t v46 = *(void *)(v44 + 40);
    uint64_t v47 = *(void *)(v44 + 48);
    uint64_t v48 = *(void *)(v44 + 56);
    unint64_t v49 = *(void *)(v44 + 64);
    uint64_t v50 = *(void *)(v44 + 72);
    uint64_t v51 = v45;
    uint64_t v52 = v46;
    uint64_t v107 = v47;
    uint64_t v53 = *(unsigned __int8 *)(v44 + 80);
    uint64_t v54 = v48;
    uint64_t v55 = v49;
    int v56 = v50;
    uint64_t v57 = v53;
    if (!v46)
    {
      uint64_t v110 = 0;
      uint64_t v58 = a5;
      char v59 = v45;
      uint64_t v60 = v49;
      uint64_t v61 = v53;
      sub_2486D02F8(v135);
      long long v45 = v59;
      a5 = v58;
      uint64_t v43 = a11;
      uint64_t v46 = v110;
      uint64_t v53 = v61;
      unint64_t v49 = v60;
      uint64_t v51 = v120;
      uint64_t v52 = v119;
      uint64_t v47 = v115;
      uint64_t v54 = v114;
      uint64_t v55 = v113;
      int v56 = v112;
      uint64_t v57 = v111;
    }
    unint64_t v108 = v57;
    uint64_t v109 = v56;
    uint64_t v110 = v55;
    uint64_t v111 = v54;
    uint64_t v112 = v47;
    uint64_t v113 = v52;
    uint64_t v114 = v51;
    uint64_t v119 = v37;
    uint64_t v120 = a5;
    LODWORD(v115) = a13;
    long long v62 = v130;
    uint64_t v63 = v134;
    uint64_t v135 = a10;
    if ((v136 & 1) == 0)
    {
      sub_2486D0334(v45, v46);
      unint64_t v72 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v62 + 48);
      swift_bridgeObjectRetain();
      uint64_t v65 = v129;
LABEL_16:
      uint64_t v83 = v72(v135, 1, v65) != 1;
      v137[0] = v114;
      v137[1] = v113;
      v137[2] = v112;
      v137[3] = v111;
      v137[4] = v110;
      v137[5] = v109;
      uint64_t v138 = v108;
      uint64_t v84 = v125;
      swift_bridgeObjectRetain();
      unint64_t v85 = v120;
      swift_bridgeObjectRetain();
      unint64_t v86 = v124;
      sub_24870AD3C(MEMORY[0x263F8EE78], v83, v137, v43, v42, v124, v84, v85, (uint64_t)v139, (v136 & 1) == 0);
      uint64_t v136 = v139[2];
      uint64_t v134 = (char *)v139[3];
      unint64_t v130 = v139[4];
      unint64_t v129 = v139[7];
      unint64_t v128 = v139[9];
      uint64_t v121 = v139[11];
      v137[0] = v116;
      uint64_t v87 = v126;
      v131(v126, v133, v65);
      uint64_t v88 = (*(unsigned __int8 *)(v62 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
      uint64_t v89 = v88 + v122;
      uint64_t v90 = (char *)swift_allocObject();
      uint64_t v91 = v62;
      unsigned __int8 v92 = (uint64_t)v90;
      unsigned __int8 v93 = v127;
      *((void *)v90 + 2) = v65;
      *((void *)v90 + 3) = v93;
      *((void *)v90 + 4) = v86;
      *((void *)v90 + 5) = v84;
      *((void *)v90 + 6) = v85;
      (*(void (**)(char *, char *, uint64_t))(v91 + 32))(&v90[v88], v87, v65);
      *(unsigned char *)(v92 + v89) = v115;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2486F61C0(v86, v84, v85, v117, v119, v139, v123, 0, (uint64_t)v135, (uint64_t)sub_2486FA1EC, v92, 0, v65);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (void *)swift_bridgeObjectRelease();
    }
    unint64_t v98 = v45;
    long long v99 = v48;
    char v100 = v53;
    uint64_t v101 = v49;
    uint64_t v102 = v50;
    uint64_t v95 = a12;
    uint64_t v96 = v43;
    uint64_t v64 = v105;
    uint64_t v65 = v129;
    v131(v105, v133, v129);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v64, 0, 1, v65);
    uint64_t v66 = v62;
    uint64_t v67 = &v63[*(int *)(TupleTypeMetadata2 + 48)];
    long long v68 = *(void (**)(char *, char *, uint64_t))(v121 + 16);
    long long v69 = v63;
    char v70 = v63;
    unint64_t v71 = v128;
    v68(v69, v64, v128);
    uint64_t v97 = v67;
    v68(v67, (char *)a10, v71);
    unint64_t v72 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v66 + 48);
    if (v72((uint64_t *)v70, 1, v65) == 1)
    {
      sub_2486D0334(v98, v46);
      uint64_t v73 = *(void (**)(char *, uint64_t))(v121 + 8);
      uint64_t v74 = v128;
      v73(v64, v128);
      uint64_t v75 = v72((uint64_t *)v97, 1, v65);
      long long v62 = v130;
      if (v75 == 1)
      {
        v73(v134, v74);
LABEL_15:
        uint64_t v42 = v95;
        swift_bridgeObjectRetain();
        uint64_t v43 = v96;
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v76 = v103;
      v68(v103, v134, v128);
      unint64_t v77 = v97;
      if (v72((uint64_t *)v97, 1, v65) != 1)
      {
        long long v62 = v130;
        unint64_t v78 = v126;
        (*(void (**)(char *, char *, uint64_t))(v130 + 32))(v126, v77, v65);
        sub_2486D0334(v98, v46);
        int64_t v79 = sub_24872C500();
        uint64_t v65 = v129;
        LODWORD(v107) = v79;
        uint64_t v80 = *(void (**)(char *, uint64_t))(v62 + 8);
        v80(v78, v129);
        long long v81 = *(void (**)(char *, uint64_t))(v121 + 8);
        uint64_t v82 = v128;
        v81(v105, v128);
        v80(v76, v65);
        v81(v134, v82);
        if (v107) {
          goto LABEL_15;
        }
        goto LABEL_13;
      }
      sub_2486D0334(v98, v46);
      (*(void (**)(char *, uint64_t))(v121 + 8))(v105, v128);
      long long v62 = v130;
      (*(void (**)(char *, uint64_t))(v130 + 8))(v76, v65);
    }
    (*(void (**)(char *, uint64_t))(v104 + 8))(v134, TupleTypeMetadata2);
LABEL_13:
    uint64_t v43 = 0;
    uint64_t v42 = 0;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_2486F61C0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, unint64_t a5@<X5>, uint64_t *a6@<X7>, uint64_t a7@<X8>, unsigned __int8 a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12, uint64_t a13)
{
  uint64_t v64 = a2;
  uint64_t v65 = a3;
  uint64_t v60 = a1;
  int v61 = a8;
  int v59 = a12;
  uint64_t v62 = a10;
  uint64_t v63 = a11;
  uint64_t v42 = a9;
  uint64_t v49 = a13;
  uint64_t v17 = sub_24872C8E0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v42 - v20;
  uint64_t v48 = *a6;
  uint64_t v47 = a6[1];
  uint64_t v43 = a6[2];
  uint64_t v44 = a6[3];
  uint64_t v45 = a6[4];
  int v46 = *((unsigned __int8 *)a6 + 40);
  uint64_t v22 = a6[6];
  uint64_t v23 = a6[7];
  uint64_t v55 = a6[8];
  uint64_t v56 = v22;
  uint64_t v24 = a6[9];
  uint64_t v50 = v23;
  uint64_t v51 = v24;
  uint64_t v54 = a6[10];
  uint64_t v52 = a6[11];
  int v53 = *((unsigned __int8 *)a6 + 96);
  uint64_t v25 = a6[13];
  uint64_t v57 = a6[14];
  uint64_t v58 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v26 = swift_bridgeObjectRetain();
  uint64_t v27 = sub_2486F9CA0(v26, a4, a5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, v42, v17);
  unint64_t v28 = (*(unsigned __int8 *)(v18 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v29 = (v19 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v49;
  (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v30 + v28, v21, v17);
  BOOL v31 = (void *)(v30 + v29);
  uint64_t v32 = v64;
  *BOOL v31 = v60;
  v31[1] = v32;
  _OWORD v31[2] = v65;
  LODWORD(v60) = v59 & 1;
  char v67 = v59 & 1;
  uint64_t v33 = v48;
  *(void *)a7 = v27;
  *(void *)(a7 + 8) = v33;
  uint64_t v34 = v43;
  *(void *)(a7 + 16) = v47;
  *(void *)(a7 + 24) = v34;
  uint64_t v35 = v45;
  *(void *)(a7 + 32) = v44;
  *(void *)(a7 + 40) = v35;
  *(unsigned char *)(a7 + 48) = v46;
  *(_DWORD *)(a7 + 49) = v71[0];
  *(_DWORD *)(a7 + 52) = *(_DWORD *)((char *)v71 + 3);
  uint64_t v36 = v57;
  uint64_t v37 = v50;
  uint64_t v38 = v51;
  *(void *)(a7 + 56) = v56;
  *(void *)(a7 + 64) = v37;
  *(void *)(a7 + 72) = v55;
  *(void *)(a7 + 80) = v38;
  uint64_t v39 = v52;
  *(void *)(a7 + 88) = v54;
  *(void *)(a7 + 96) = v39;
  *(unsigned char *)(a7 + 104) = v53;
  *(_DWORD *)(a7 + 105) = *(_DWORD *)v70;
  *(_DWORD *)(a7 + 108) = *(_DWORD *)&v70[3];
  *(void *)(a7 + 112) = v58;
  *(void *)(a7 + 120) = v36;
  *(void *)(a7 + 128) = 0;
  *(void *)(a7 + 136) = 0;
  *(unsigned char *)(a7 + 144) = 4;
  *(unsigned char *)(a7 + 145) = v61;
  *(_DWORD *)(a7 + 146) = v68;
  *(_WORD *)(a7 + 150) = v69;
  uint64_t v40 = v63;
  *(void *)(a7 + 152) = v62;
  *(void *)(a7 + 160) = v40;
  *(unsigned char *)(a7 + 168) = v67;
  *(_DWORD *)(a7 + 172) = *(_DWORD *)&v66[3];
  *(_DWORD *)(a7 + 169) = *(_DWORD *)v66;
  *(void *)(a7 + 176) = sub_2486FA080;
  *(void *)(a7 + 184) = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2486B7830();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2486F657C(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a8;
  uint64_t v44 = a5;
  uint64_t v9 = v8;
  uint64_t v58 = a2;
  int v59 = a4;
  uint64_t v57 = a1;
  uint64_t v42 = *(void *)(a5 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](a1);
  uint64_t v55 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  int v53 = (char *)&v40 - v13;
  uint64_t v15 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v41 = (char *)&v40 - v17;
  uint64_t v18 = sub_24872C8E0();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v51 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v40 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v40 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v50 = *((void *)v15 - 1);
  MEMORY[0x270FA5388](v26);
  unint64_t v28 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a6;
  uint64_t v52 = v15;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v30 = (char *)&v40 - v29;
  uint64_t v31 = sub_24872C6F0();
  uint64_t v61 = sub_24872C440();
  uint64_t v56 = sub_24872CB80();
  sub_24872CB50();
  (*(void (**)(char *, uint64_t, void))(v50 + 16))(v28, v48, v52);
  int v59 = v30;
  uint64_t result = sub_24872C6E0();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    uint64_t v33 = (uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
    uint64_t v34 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_24872C960();
      uint64_t result = (*v33)(v23, 1, AssociatedTypeWitness);
      if (result == 1) {
        goto LABEL_18;
      }
      v57(v23, v55);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v55, v44);
        return (*v34)(v23, AssociatedTypeWitness);
      }
      uint64_t v9 = 0;
      (*v34)(v23, AssociatedTypeWitness);
      sub_24872CB60();
      if (!--v31)
      {
        uint64_t v35 = v54;
        uint64_t v36 = v51;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v35 = v54;
  uint64_t v36 = v51;
LABEL_9:
  sub_24872C960();
  uint64_t v55 = *(char **)(v35 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v36, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v37 = v51;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v46);
    return v61;
  }
  else
  {
    uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v54 = v35 + 32;
    uint64_t v38 = (void (**)(char *, uint64_t))(v35 + 8);
    uint64_t v39 = v41;
    uint64_t v37 = v51;
    while (1)
    {
      v52(v39, v37, AssociatedTypeWitness);
      v57(v39, v53);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      (*v38)(v39, AssociatedTypeWitness);
      sub_24872CB60();
      sub_24872C960();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v37, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_14;
      }
    }
    (*v38)(v39, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v53, v44);
  }
}

uint64_t Flag<A>.init(wrappedValue:exclusivity:help:)@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = sub_24872C8E0();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v20 - v13;
  LOBYTE(a2) = *a2;
  long long v15 = *a3;
  long long v20 = a3[1];
  long long v21 = v15;
  uint64_t v16 = *((void *)a3 + 4);
  uint64_t v17 = *((void *)a3 + 5);
  LOBYTE(a3) = *((unsigned char *)a3 + 48);
  uint64_t v18 = *(void *)(a4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))((char *)&v20 - v13, a1, a4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, a4);
  char v26 = (char)a2;
  v22[0] = v21;
  v22[1] = v20;
  uint64_t v23 = v16;
  uint64_t v24 = v17;
  char v25 = (char)a3;
  sub_2486F4CD0((uint64_t)v14, &v26, (uint64_t)v22, a4, a5, a6);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(a1, a4);
}

uint64_t Flag<A>.init(exclusivity:help:)@<X0>(unsigned char *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_24872C8E0();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v17 - v11;
  LOBYTE(a1) = *a1;
  long long v13 = *a2;
  long long v17 = a2[1];
  long long v18 = v13;
  uint64_t v14 = *((void *)a2 + 4);
  uint64_t v15 = *((void *)a2 + 5);
  LOBYTE(a2) = *((unsigned char *)a2 + 48);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))((char *)&v17 - v11, 1, 1, a3);
  char v23 = (char)a1;
  v19[0] = v18;
  v19[1] = v17;
  uint64_t v20 = v14;
  uint64_t v21 = v15;
  char v22 = (char)a2;
  return sub_2486F4CD0((uint64_t)v12, &v23, (uint64_t)v19, a3, a4, a5);
}

uint64_t Flag.init<A>(exclusivity:help:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_24872C8E0();
  uint64_t v10 = type metadata accessor for Parsed();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  long long v13 = &v17[-v12 - 8];
  LOBYTE(a1) = *a1;
  sub_2486E775C(a2, (uint64_t)v17);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a3;
  *(void *)(v14 + 24) = a4;
  sub_2486E775C((uint64_t)v17, v14 + 32);
  *(unsigned char *)(v14 + 81) = (_BYTE)a1;
  sub_24870A630((uint64_t)sub_2486F7458, v14, v13);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v11 + 32))(a5, v13, v10);
}

uint64_t sub_2486F7068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  int v46 = a5;
  uint64_t v43 = a3;
  uint64_t v44 = a4;
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v39 = *(void *)(AssociatedConformanceWitness + 8);
  uint64_t v47 = sub_24872CC50();
  uint64_t v45 = *(void *)(v47 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v47);
  uint64_t v40 = (char *)&v39 - v12;
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v39 - v14;
  sub_24872CAE0();
  uint64_t v50 = a6;
  uint64_t v51 = a7;
  uint64_t v48 = a7;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FD98);
  uint64_t v18 = sub_2486BB128((void (*)(char *, char *))sub_2486F9804, (uint64_t)v49, AssociatedTypeWitness, v16, MEMORY[0x263F8E628], AssociatedConformanceWitness, MEMORY[0x263F8E658], v17);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v13 + 8);
  v19(v15, AssociatedTypeWitness);
  uint64_t v20 = *(void *)(v18 + 16);
  if (v20)
  {
    uint64_t v21 = (uint64_t *)(v18 + 40);
    uint64_t v22 = v20 - 1;
    do
    {
      uint64_t v23 = *v21;
      v21 += 7;
      BOOL v24 = v23 != 0;
      if (v23) {
        BOOL v25 = 1;
      }
      else {
        BOOL v25 = v22 == 0;
      }
      --v22;
    }
    while (!v25);
  }
  else
  {
    BOOL v24 = 0;
  }
  sub_24872CAE0();
  char v26 = v40;
  MEMORY[0x24C57C1E0](AssociatedTypeWitness, v39);
  uint64_t v27 = ((uint64_t (*)(char *, uint64_t))v19)(v15, AssociatedTypeWitness);
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v29 = v48;
  *(&v39 - 10) = a6;
  *(&v39 - 9) = v29;
  uint64_t v30 = v42;
  *(&v39 - 8) = v41;
  *(&v39 - 7) = v30;
  *(&v39 - 6) = v43;
  *((unsigned char *)&v39 - 40) = v24;
  uint64_t v31 = v44;
  *(&v39 - 4) = v18;
  *(&v39 - 3) = v31;
  *((unsigned char *)&v39 - 16) = v46;
  MEMORY[0x270FA5388](v28);
  *(&v39 - 4) = a6;
  *(&v39 - 3) = v32;
  *(&v39 - 2) = (uint64_t)sub_2486FA1A8;
  *(&v39 - 1) = v33;
  uint64_t v34 = v47;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v37 = sub_2486F657C((void (*)(char *, char *))sub_2486F985C, (uint64_t)(&v39 - 6), v34, (char *)&type metadata for ArgumentDefinition, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v36);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v26, v34);
  swift_bridgeObjectRelease();
  return sub_2486CDED4(v37);
}

uint64_t sub_2486F740C()
{
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x270FA0238](v0, 82, 7);
}

uint64_t sub_2486F7458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2486F7068(a1, a2, a3, v3 + 32, *(unsigned __int8 *)(v3 + 81), *(void *)(v3 + 16), *(void *)(v3 + 24));
}

void *sub_2486F7468@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, unsigned __int8 a10, uint64_t a11, uint64_t a12)
{
  void *(*v35)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t);
  void *result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  unint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  void v53[2];
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77[6];
  char v78;
  uint64_t v79[15];
  void v80[6];
  unsigned __int8 v81;

  v53[0] = a7;
  uint64_t v54 = a1;
  unint64_t v72 = a9;
  sub_2486E775C((uint64_t)a8, (uint64_t)v80);
  uint64_t v74 = v80[0];
  uint64_t v55 = v80[1];
  uint64_t v73 = v80[2];
  uint64_t v75 = v80[3];
  uint64_t v76 = v80[4];
  uint64_t v56 = v80[5];
  uint64_t v57 = v81;
  unint64_t v71 = sub_24872C8E0();
  char v70 = *(void *)(v71 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v71);
  __int16 v69 = (char *)v53 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v63 = v20;
  uint64_t v21 = (char *)v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = v22;
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  uint64_t v61 = v22 + 16;
  uint64_t v60 = v23;
  v23(v21, a2, a11);
  uint64_t v64 = v21;
  uint64_t v24 = sub_24872C540();
  unint64_t v26 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v27 = v24;
  uint64_t v28 = a2;
  int v59 = a3;
  uint64_t v58 = a4;
  uint64_t v29 = a4;
  uint64_t v30 = a5;
  uint64_t v65 = sub_24871B3A0(v27, v26, a3, v29, a5);
  unint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v35 = *(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(a12 + 24);
  int v68 = a12;
  uint64_t result = v35(v79, v28, a11, a12);
  uint64_t v37 = v79[0];
  char v67 = v32;
  uint64_t v66 = v34;
  if ((a6 & 1) == 0) {
    goto LABEL_6;
  }
  if ((v54 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(v53[0] + 16) > v54)
  {
    uint64_t v38 = v53[0] + 56 * v54;
    uint64_t v39 = *(void *)(v38 + 40);
    if (v39)
    {
      uint64_t v40 = v38 + 32;
      uint64_t v41 = *(unsigned char *)(v40 + 48);
      uint64_t v42 = *(void *)(v40 + 40);
      uint64_t v76 = *(void *)(v40 + 32);
      uint64_t v43 = *(void *)(v40 + 24);
      uint64_t v73 = *(void *)(v40 + 16);
      uint64_t v74 = *(void *)v40;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v75 = v43;
      swift_bridgeObjectRetain();
LABEL_7:
      uint64_t v57 = a10;
      v77[0] = v74;
      v77[1] = v39;
      v77[2] = v73;
      v77[3] = v75;
      v77[4] = v76;
      v77[5] = v42;
      unint64_t v78 = v41;
      uint64_t v44 = v58;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v45 = v59;
      sub_24870AD3C(MEMORY[0x263F8EE78], 1, v77, 0, 0, v59, v44, v30, (uint64_t)v79, (a6 & 1) == 0);
      uint64_t v76 = v79[2];
      uint64_t v75 = v79[3];
      uint64_t v74 = v79[4];
      uint64_t v73 = v79[7];
      uint64_t v56 = v79[9];
      uint64_t v55 = v79[11];
      uint64_t v54 = v79[14];
      v53[1] = v37;
      v77[0] = v37;
      int v46 = v62;
      uint64_t v47 = (uint64_t)v69;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56))(v69, 1, 1, a11);
      uint64_t v48 = v64;
      v60(v64, v28, a11);
      uint64_t v49 = (*(unsigned __int8 *)(v46 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
      uint64_t v50 = v49 + v63;
      uint64_t v51 = (char *)swift_allocObject();
      uint64_t v52 = v68;
      *((void *)v51 + 2) = a11;
      *((void *)v51 + 3) = v52;
      *((void *)v51 + 4) = v45;
      *((void *)v51 + 5) = v44;
      *((void *)v51 + 6) = v30;
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(&v51[v49], v48, a11);
      v51[v50] = v57;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2486F61C0(v45, v44, v30, v65, v67, v79, v72, 0, v47, (uint64_t)sub_2486FA1EC, (uint64_t)v51, 0, a11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v47, v71);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (void *)swift_bridgeObjectRelease();
    }
LABEL_6:
    sub_2486D02F8(a8);
    uint64_t v41 = v57;
    uint64_t v42 = v56;
    uint64_t v39 = v55;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

double sub_2486F7B0C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_2486E775C(a2, (uint64_t)v19);
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a3;
  v9[3] = a4;
  sub_2486E775C((uint64_t)v19, (uint64_t)(v9 + 4));
  v9[11] = a1;
  sub_24872C830();
  sub_24870A630((uint64_t)sub_2486F97F4, (uint64_t)v9, &v15);
  long long v13 = v15;
  char v14 = v16;
  uint64_t v10 = type metadata accessor for Parsed();
  (*(void (**)(long long *, long long *, uint64_t))(*(void *)(v10 - 8) + 32))(&v17, &v13, v10);
  char v11 = v18;
  double result = *(double *)&v17;
  *(_OWORD *)a5 = v17;
  *(unsigned char *)(a5 + 16) = v11;
  return result;
}

uint64_t sub_2486F7C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v45 = a4;
  uint64_t v46 = a5;
  uint64_t v43 = a2;
  uint64_t v44 = a3;
  uint64_t v42 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v40 = *(void *)(AssociatedConformanceWitness + 8);
  uint64_t v11 = sub_24872CC50();
  uint64_t v47 = *(void *)(v11 - 8);
  uint64_t v48 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v41 = (char *)&v40 - v13;
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v12);
  char v16 = (char *)&v40 - v15;
  sub_24872CAE0();
  uint64_t v51 = a6;
  uint64_t v52 = a7;
  uint64_t v49 = a7;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FD98);
  uint64_t v19 = sub_2486BB128((void (*)(char *, char *))sub_2486F9804, (uint64_t)v50, AssociatedTypeWitness, v17, MEMORY[0x263F8E628], AssociatedConformanceWitness, MEMORY[0x263F8E658], v18);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v14 + 8);
  v20(v16, AssociatedTypeWitness);
  uint64_t v21 = *(void *)(v19 + 16);
  if (v21)
  {
    uint64_t v22 = (uint64_t *)(v19 + 40);
    uint64_t v23 = v21 - 1;
    do
    {
      uint64_t v24 = *v22;
      v22 += 7;
      BOOL v25 = v24 != 0;
      if (v24) {
        BOOL v26 = 1;
      }
      else {
        BOOL v26 = v23 == 0;
      }
      --v23;
    }
    while (!v26);
  }
  else
  {
    BOOL v25 = 0;
  }
  sub_24872CAE0();
  uint64_t v27 = v41;
  MEMORY[0x24C57C1E0](AssociatedTypeWitness, v40);
  uint64_t v28 = ((uint64_t (*)(char *, uint64_t))v20)(v16, AssociatedTypeWitness);
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  uint64_t v30 = v49;
  *(&v40 - 10) = a6;
  *(&v40 - 9) = v30;
  uint64_t v31 = v43;
  *(&v40 - 8) = v42;
  *(&v40 - 7) = v31;
  *(&v40 - 6) = v44;
  *((unsigned char *)&v40 - 40) = v25;
  uint64_t v32 = v45;
  *(&v40 - 4) = v19;
  *(&v40 - 3) = v32;
  *(&v40 - 2) = v46;
  MEMORY[0x270FA5388](v29);
  *(&v40 - 4) = a6;
  *(&v40 - 3) = v33;
  *(&v40 - 2) = (uint64_t)sub_2486F981C;
  *(&v40 - 1) = v34;
  uint64_t v35 = v48;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v38 = sub_2486F657C((void (*)(char *, char *))sub_2486F985C, (uint64_t)(&v40 - 6), v35, (char *)&type metadata for ArgumentDefinition, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v37);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v27, v35);
  swift_bridgeObjectRelease();
  return sub_2486CDED4(v38);
}

void *sub_2486F7FC0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  void *(*v31)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t);
  char v32;
  void *result;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69[6];
  char v70;
  uint64_t v71[10];
  void v72[6];
  unsigned __int8 v73;

  uint64_t v48 = a7;
  LODWORD(v62) = a6;
  uint64_t v49 = a1;
  uint64_t v61 = a9;
  uint64_t v17 = sub_2486E775C(a8, (uint64_t)v72);
  uint64_t v64 = v72[0];
  uint64_t v50 = v72[1];
  uint64_t v63 = v72[2];
  uint64_t v66 = v72[3];
  char v67 = v72[4];
  uint64_t v51 = v72[5];
  LODWORD(v65) = v73;
  MEMORY[0x270FA5388](v17);
  uint64_t v54 = v18;
  uint64_t v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = v20;
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  int v53 = v20 + 16;
  uint64_t v52 = v21;
  v21(v19, a2, a11);
  uint64_t v22 = sub_24872C540();
  unint64_t v24 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v25 = v22;
  uint64_t v26 = a3;
  uint64_t v55 = sub_24871B3A0(v25, v24, a3, a4, a5);
  unint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v31 = *(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(a12 + 24);
  uint64_t v56 = a2;
  uint64_t v58 = a12;
  uint64_t v32 = v62;
  double result = v31(v71, a2, a11, a12);
  uint64_t v34 = v71[0];
  uint64_t v60 = v28;
  int v59 = v30;
  if ((v32 & 1) == 0)
  {
    uint64_t v35 = (uint64_t *)a8;
    goto LABEL_7;
  }
  if ((v49 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(v48 + 16) > v49)
  {
    uint64_t v35 = (uint64_t *)a8;
    uint64_t v36 = v48 + 56 * v49;
    uint64_t v37 = *(void *)(v36 + 40);
    if (v37)
    {
      uint64_t v38 = v36 + 32;
      LODWORD(v65) = *(unsigned __int8 *)(v38 + 48);
      uint64_t v39 = *(void *)(v38 + 40);
      char v67 = *(void *)(v38 + 32);
      uint64_t v40 = *(void *)(v38 + 24);
      uint64_t v63 = *(void *)(v38 + 16);
      uint64_t v64 = *(void *)v38;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v66 = v40;
      swift_bridgeObjectRetain();
LABEL_8:
      v69[0] = v64;
      v69[1] = v37;
      v69[2] = v63;
      v69[3] = v66;
      v69[4] = v67;
      v69[5] = v39;
      char v70 = v65;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v41 = v26;
      sub_24870AD3C(MEMORY[0x263F8EE78], 1, v69, 0, 0, v26, a4, a5, (uint64_t)v71, (v32 & 1) == 0);
      char v67 = v71[2];
      uint64_t v66 = v71[3];
      uint64_t v65 = v71[4];
      uint64_t v64 = v71[7];
      uint64_t v63 = v71[9];
      v69[0] = v34;
      int v68 = a10;
      v52(v19, v56, a11);
      uint64_t v42 = v57;
      uint64_t v43 = *(unsigned __int8 *)(v57 + 80);
      uint64_t v62 = v34;
      uint64_t v44 = (v43 + 56) & ~v43;
      uint64_t v45 = (char *)swift_allocObject();
      uint64_t v46 = v58;
      *((void *)v45 + 2) = a11;
      *((void *)v45 + 3) = v46;
      *((void *)v45 + 4) = v41;
      *((void *)v45 + 5) = a4;
      *((void *)v45 + 6) = a5;
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(&v45[v44], v19, a11);
      uint64_t v47 = sub_24872C830();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2486F61C0(v41, a4, a5, v55, v60, v71, v61, 0, (uint64_t)&v68, (uint64_t)sub_2486F9BA8, (uint64_t)v45, 0, v47);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (void *)swift_bridgeObjectRelease();
    }
LABEL_7:
    sub_2486D02F8(v35);
    uint64_t v39 = v51;
    uint64_t v37 = v50;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_2486F856C(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24872C830();
  return sub_24872C800();
}

double Flag.init<A>(wrappedValue:help:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v6 = *(unsigned char *)(a2 + 48);
  long long v7 = *(_OWORD *)(a2 + 16);
  v10[0] = *(_OWORD *)a2;
  v10[1] = v7;
  uint64_t v10[2] = *(_OWORD *)(a2 + 32);
  char v11 = v6;
  sub_2486F7B0C(a1, (uint64_t)v10, a3, a4, (uint64_t)&v12);
  char v8 = v13;
  double result = *(double *)&v12;
  *(_OWORD *)a5 = v12;
  *(unsigned char *)(a5 + 16) = v8;
  return result;
}

double Flag.init<A>(help:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v5 = *(unsigned char *)(a1 + 48);
  long long v6 = *(_OWORD *)(a1 + 16);
  v9[0] = *(_OWORD *)a1;
  v9[1] = v6;
  void v9[2] = *(_OWORD *)(a1 + 32);
  char v10 = v5;
  sub_2486F7B0C(0, (uint64_t)v9, a2, a3, (uint64_t)&v11);
  char v7 = v12;
  double result = *(double *)&v11;
  *(_OWORD *)a4 = v11;
  *(unsigned char *)(a4 + 16) = v7;
  return result;
}

uint64_t sub_2486F86F8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_2486F8734(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2486F8774()
{
  unint64_t result = qword_26931E4C8;
  if (!qword_26931E4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E4C8);
  }
  return result;
}

unint64_t sub_2486F87CC()
{
  unint64_t result = qword_26931E4D0;
  if (!qword_26931E4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E4D0);
  }
  return result;
}

uint64_t sub_2486F8820@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Flag();
  return Flag.wrappedValue.getter(v2, a1);
}

uint64_t sub_2486F8860()
{
  return 8;
}

void *sub_2486F886C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void *sub_2486F8878(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 != 1)
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v5) = 0;
      return v3;
    }
    uint64_t v14 = *((void *)a2 + 1);
    *uint64_t v3 = *(void *)a2;
    v3[1] = v14;
    *((unsigned char *)v3 + v5) = 1;
  }
  swift_retain();
  return v3;
}

uint64_t sub_2486F89F0(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 0x10) {
    unint64_t v2 = 16;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
}

void *sub_2486F8AF0(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    uint64_t v10 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v10;
    swift_retain();
    char v11 = 1;
  }
  else
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v11 = 0;
  }
  *((unsigned char *)a1 + v4) = v11;
  return a1;
}

unsigned __int8 *sub_2486F8C2C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      uint64_t v18 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v18;
      a1[v7] = 1;
      swift_retain();
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      a1[v7] = 0;
    }
  }
  return a1;
}

_OWORD *sub_2486F8E48(_OWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *a1 = *(_OWORD *)a2;
    char v10 = 1;
  }
  else
  {
    (*(void (**)(_OWORD *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 0;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_2486F8F80(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      char v18 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 0;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_2486F9198(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 16;
  if (*(void *)(v3 + 64) > 0x10uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_2486F92CC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x10) {
    unint64_t v5 = 16;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x2486F9494);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

ValueMetadata *type metadata accessor for FlagInversion()
{
  return &type metadata for FlagInversion;
}

ValueMetadata *type metadata accessor for FlagExclusivity()
{
  return &type metadata for FlagExclusivity;
}

unsigned char *_s22ArgumentParserInternal15FlagExclusivityV14RepresentationOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2486F95B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlagExclusivity.Representation()
{
  return &type metadata for FlagExclusivity.Representation;
}

unsigned char *_s22ArgumentParserInternal13FlagInversionV14RepresentationOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2486F96B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlagInversion.Representation()
{
  return &type metadata for FlagInversion.Representation;
}

unint64_t sub_2486F96F4()
{
  unint64_t result = qword_26931E4D8;
  if (!qword_26931E4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E4D8);
  }
  return result;
}

unint64_t sub_2486F974C()
{
  unint64_t result = qword_26931E4E0;
  if (!qword_26931E4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E4E0);
  }
  return result;
}

uint64_t sub_2486F97A0()
{
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 96, 7);
}

uint64_t sub_2486F97F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2486F7C20(a1, a2, a3, (uint64_t)(v3 + 4), v3[11], v3[2], v3[3]);
}

uint64_t sub_2486F9804()
{
  return sub_2486FA44C();
}

void *sub_2486F981C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2486F7FC0(a1, a2, *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(unsigned __int8 *)(v3 + 56), *(void *)(v3 + 64), *(void *)(v3 + 72), a3, *(void *)(v3 + 80), *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_2486F985C(char *a1)
{
  return sub_2486FA4DC(a1);
}

uint64_t sub_2486F9874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v21 = a4;
  uint64_t v22 = a6;
  uint64_t v23 = a2;
  uint64_t v11 = sub_24872C8E0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v21 - v14;
  uint64_t v16 = *(void *)(a7 - 8);
  MEMORY[0x270FA5388](v13);
  char v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a3, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, a7) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v15, a7);
  v27[3] = a7;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v27);
  (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 16))(boxed_opaque_existential_1Tm, v18, a7);
  sub_2486B747C((uint64_t)v27, (uint64_t)v25);
  v24[0] = v21;
  v24[1] = a5;
  void v24[2] = v22;
  v25[4] = a1;
  char v26 = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24870FAE8(v24);
  sub_2486D0820((uint64_t)v24);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, a7);
  return sub_2486FA13C((uint64_t)v27);
}

uint64_t sub_2486F9ADC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_2486F9BA8(uint64_t a1)
{
  uint64_t v3 = v1[4];
  uint64_t v4 = v1[5];
  uint64_t v5 = (void *)v1[6];
  uint64_t v6 = sub_24872C440();
  sub_24870F170(v3, v4, v5, a1, v6, (void (*)(uint64_t *))sub_2486FA19C);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2486F9CA0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v4 = a2 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v19 = v4;
    uint64_t v5 = (unsigned __int8 *)(swift_bridgeObjectRetain() + 48);
    uint64_t v6 = (char *)MEMORY[0x263F8EE78];
    while (1)
    {
      uint64_t v7 = *((void *)v5 - 2);
      uint64_t v8 = *((void *)v5 - 1);
      unsigned int v9 = *v5;
      if (!(v9 >> 6)) {
        break;
      }
      if (v9 >> 6 == 1)
      {
        char v10 = v9 & 1 | 0x40;
LABEL_9:
        unint64_t v11 = *((void *)v5 - 2);
        uint64_t v12 = *((void *)v5 - 1);
        goto LABEL_10;
      }
      if (v8 | v7 || v9 != 128)
      {
        if (!v19)
        {
          sub_24872CAD0();
          sub_24872C600();
          swift_bridgeObjectRetain();
          sub_24872C600();
          swift_bridgeObjectRelease();
          sub_24872C600();
          uint64_t result = sub_24872CC40();
          __break(1u);
          return result;
        }
        swift_bridgeObjectRetain();
        unint64_t v11 = sub_24872C6A0();
        uint64_t v12 = v17;
        swift_bridgeObjectRelease();
        char v10 = 64;
      }
      else
      {
        swift_bridgeObjectRetain();
        unint64_t v11 = sub_2486B8604(45, 0xE100000000000000, a2, a3);
        uint64_t v12 = v16;
        swift_bridgeObjectRelease();
        char v10 = 0;
      }
LABEL_10:
      sub_2486B7C7C(v7, v8, v9);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_24871A0CC(0, *((void *)v6 + 2) + 1, 1, v6);
      }
      unint64_t v14 = *((void *)v6 + 2);
      unint64_t v13 = *((void *)v6 + 3);
      if (v14 >= v13 >> 1) {
        uint64_t v6 = sub_24871A0CC((char *)(v13 > 1), v14 + 1, 1, v6);
      }
      v5 += 24;
      *((void *)v6 + 2) = v14 + 1;
      uint64_t v15 = &v6[24 * v14];
      *((void *)v15 + 4) = v11;
      *((void *)v15 + 5) = v12;
      v15[48] = v10;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v6;
      }
    }
    char v10 = (_BYTE)v9 << 7;
    goto LABEL_9;
  }
  return MEMORY[0x263F8EE78];
}

uint64_t sub_2486F9F2C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(sub_24872C8E0() - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = *(void *)(v1 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v4, 1, v1)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v4, v1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, ((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 24, v3 | 7);
}

uint64_t sub_2486FA080(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(sub_24872C8E0() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2486F9874(a1, a2, v2 + v7, *(void *)(v2 + v8), *(void *)(v2 + v8 + 8), *(void *)(v2 + v8 + 16), v5);
}

uint64_t sub_2486FA13C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B140128);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2486FA19C(uint64_t a1)
{
  return sub_2486F856C(a1);
}

void *sub_2486FA1A8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2486F7468(a1, a2, *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(unsigned char *)(v3 + 56), *(void *)(v3 + 64), *(uint64_t **)(v3 + 72), a3, *(unsigned char *)(v3 + 80), *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_2486FA1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5)
{
  return sub_2486FA62C(a1, a2, a3, a4, a5);
}

uint64_t sub_2486FA204()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(sub_24872C8E0() - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v0 + v4;
  uint64_t v7 = *(void *)(v1 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v4, 1, v1)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v1);
  }
  if (*(void *)(v0 + v5 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x270FA0238](v0, v5 + 50, v3 | 7);
}

uint64_t sub_2486FA354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v8 = *(void *)(v3 + 24);
  uint64_t v9 = *(void *)(sub_24872C8E0() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v3 + ((*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
  int v12 = *(unsigned __int8 *)(v11 + 49);
  return sub_2486F4EA8(a1, a2, a3, v3 + v10, v11, v12, v7, v8);
}

uint64_t sub_2486FA424@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2486F536C(a1, v2[4], v2[5], v2[6], v2[2], v2[3], a2);
}

uint64_t sub_2486FA44C()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 24) + 32))();
}

void *sub_2486FA48C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2486F5584(a1, a2, *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56), *(uint64_t **)(v3 + 64), *(unsigned __int8 *)(v3 + 72), a3, *(uint64_t **)(v3 + 80), *(void *)(v3 + 88), *(void *)(v3 + 96), *(unsigned char *)(v3 + 104), *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_2486FA4DC(char *a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 32);
  uint64_t v4 = *(void *)a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(v4, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
}

uint64_t objectdestroy_54Tm()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + v4 + 1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_2486FA62C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5)
{
  uint64_t v8 = v5[2];
  uint64_t v9 = v5[3];
  unint64_t v10 = (*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  uint64_t v11 = v5[4];
  uint64_t v12 = v5[5];
  unint64_t v13 = (void *)v5[6];
  unsigned __int8 v15 = *((unsigned char *)v5 + v10 + *(void *)(*(void *)(v8 - 8) + 64));
  return sub_2486FB10C(v11, v12, v13, (uint64_t)v5 + v10, a1, a5, &v15, v8, *(void *)(v9 + 16));
}

uint64_t sub_2486FA6CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_2486FC6D4(a1, a2, a3, a4, a5, *(void *)(v5 + 16), *(void *)(v5 + 24), *(void **)(v5 + 32));
}

uint64_t sub_2486FA6F0(uint64_t a1, uint64_t a2)
{
  return sub_2486FC8D4(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t objectdestroy_63Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_2486FA754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_2486FC528(a1, a2, a3, a4, a5, v5[2], v5[3], v5[4]);
}

uint64_t sub_2486FA774()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_2486FA7B4(uint64_t a1, uint64_t a2)
{
  return sub_2486FC5F0(a1, a2, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_2486FA7E0()
{
  return sub_2486C54FC(&qword_26931E4E8, &qword_26931E4F0);
}

uint64_t sub_2486FA81C(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = (unsigned __int8 *)&v46;
  long long v4 = a1[3];
  long long v48 = a1[2];
  long long v49 = v4;
  long long v5 = a1[7];
  long long v52 = a1[6];
  long long v53 = v5;
  long long v6 = a1[5];
  long long v50 = a1[4];
  long long v51 = v6;
  long long v7 = a1[11];
  long long v56 = a1[10];
  long long v57 = v7;
  long long v8 = a1[9];
  long long v54 = a1[8];
  long long v55 = v8;
  long long v9 = a1[1];
  long long v46 = *a1;
  long long v47 = v9;
  unint64_t v10 = *v1;
  uint64_t v45 = *((void *)v10 + 2);
  sub_2486B76D8((uint64_t)&v46);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_31:
  }
    unint64_t v10 = sub_24871A938(0, v45 + 1, 1, v10);
  unint64_t v12 = *((void *)v10 + 2);
  unint64_t v11 = *((void *)v10 + 3);
  if (v12 >= v11 >> 1) {
    unint64_t v10 = sub_24871A938((char *)(v11 > 1), v12 + 1, 1, v10);
  }
  *((void *)v10 + 2) = v12 + 1;
  unint64_t v13 = &v10[192 * v12];
  long long v14 = v46;
  long long v15 = v47;
  long long v16 = v49;
  *((_OWORD *)v13 + 4) = v48;
  *((_OWORD *)v13 + 5) = v16;
  *((_OWORD *)v13 + 2) = v14;
  *((_OWORD *)v13 + 3) = v15;
  long long v17 = v50;
  long long v18 = v51;
  long long v19 = v53;
  *((_OWORD *)v13 + 8) = v52;
  *((_OWORD *)v13 + 9) = v19;
  *((_OWORD *)v13 + 6) = v17;
  *((_OWORD *)v13 + 7) = v18;
  long long v20 = *((_OWORD *)v3 + 8);
  long long v21 = *((_OWORD *)v3 + 9);
  long long v22 = *((_OWORD *)v3 + 11);
  *((_OWORD *)v13 + 12) = *((_OWORD *)v3 + 10);
  *((_OWORD *)v13 + 13) = v22;
  *((_OWORD *)v13 + 10) = v20;
  *((_OWORD *)v13 + 11) = v21;
  *uint64_t v2 = v10;
  if ((unint64_t)v46 >= 2) {
    uint64_t v23 = swift_bridgeObjectRetain();
  }
  else {
    uint64_t v23 = MEMORY[0x263F8EE78];
  }
  uint64_t v24 = *(void *)(v23 + 16);
  if (!v24) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v3 = (unsigned __int8 *)(v23 + 48);
  uint64_t v44 = v2;
  while (1)
  {
    uint64_t v25 = *((void *)v3 - 2);
    uint64_t v26 = *((void *)v3 - 1);
    unsigned __int8 v27 = *v3;
    if ((*v3 & 0xC0) == 0x40) {
      int v28 = 64;
    }
    else {
      int v28 = *v3;
    }
    uint64_t v29 = *((void *)v2[1] + 2);
    sub_2486B7650(*((void *)v3 - 2), *((void *)v3 - 1), *v3);
    if (v29)
    {
      sub_248710538(v25, v26, v28);
      if (v30) {
        goto LABEL_11;
      }
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v10 = v2[1];
    v2[1] = (char *)0x8000000000000000;
    unint64_t v33 = sub_248710538(v25, v26, v28);
    uint64_t v34 = *((void *)v10 + 2);
    BOOL v35 = (v32 & 1) == 0;
    uint64_t v36 = v34 + v35;
    if (__OFADD__(v34, v35))
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    uint64_t v2 = v32;
    if (*((void *)v10 + 3) < v36) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if ((v32 & 1) == 0) {
        goto LABEL_24;
      }
    }
    else
    {
      sub_248710760();
      if ((v2 & 1) == 0)
      {
LABEL_24:
        *(void *)&v10[8 * (v33 >> 6) + 64] |= 1 << v33;
        uint64_t v39 = *((void *)v10 + 6) + 24 * v33;
        *(void *)uint64_t v39 = v25;
        *(void *)(v39 + 8) = v26;
        *(unsigned char *)(v39 + 16) = v28;
        *(void *)(*((void *)v10 + 7) + 8 * v33) = v45;
        uint64_t v40 = *((void *)v10 + 2);
        BOOL v41 = __OFADD__(v40, 1);
        uint64_t v42 = v40 + 1;
        if (v41) {
          goto LABEL_30;
        }
        *((void *)v10 + 2) = v42;
        sub_2486B7650(v25, v26, v28);
        goto LABEL_10;
      }
    }
LABEL_9:
    *(void *)(*((void *)v10 + 7) + 8 * v33) = v45;
LABEL_10:
    uint64_t v2 = v44;
    v44[1] = v10;
    swift_bridgeObjectRelease();
LABEL_11:
    sub_2486B7668(v25, v26, v27);
    v3 += 24;
    if (!--v24) {
      return swift_bridgeObjectRelease();
    }
  }
  sub_248710E7C(v36, isUniquelyReferenced_nonNull_native);
  unint64_t v37 = sub_248710538(v25, v26, v28);
  if ((v2 & 1) == (v38 & 1))
  {
    unint64_t v33 = v37;
    if ((v2 & 1) == 0) {
      goto LABEL_24;
    }
    goto LABEL_9;
  }
  uint64_t result = sub_24872CFA0();
  __break(1u);
  return result;
}

uint64_t sub_2486FAB30(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4)
{
  if (*(void *)(a4 + 16))
  {
    sub_24872D030();
    if ((a3 & 0x100) == 0)
    {
      sub_24872D040();
      sub_24872D040();
      if ((a3 & 1) == 0) {
        sub_24872D040();
      }
    }
    sub_24872D040();
    uint64_t v8 = sub_24872D070();
    uint64_t v9 = -1 << *(unsigned char *)(a4 + 32);
    unint64_t v10 = v8 & ~v9;
    if ((*(void *)(a4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
    {
      uint64_t v11 = ~v9;
      do
      {
        uint64_t v12 = *(void *)(a4 + 48) + 24 * v10;
        if (*(unsigned char *)(v12 + 17))
        {
          if ((a3 & 0x100) != 0) {
            return 1;
          }
        }
        else if ((a3 & 0x100) == 0 && *(void *)v12 == a1)
        {
          if (*(unsigned char *)(v12 + 16))
          {
            if (a3) {
              return 1;
            }
          }
          else if ((a3 & 1) == 0 && *(void *)(v12 + 8) == a2)
          {
            return 1;
          }
        }
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(a4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
  }
  return 0;
}

uint64_t sub_2486FAC70(uint64_t a1, uint64_t a2, void *a3, int a4, uint64_t a5, long long *a6, char a7)
{
  int v55 = a4;
  long long v14 = a6[1];
  long long v52 = *a6;
  long long v53 = v14;
  uint64_t v54 = *((void *)a6 + 4);
  sub_24870F36C(a1, a2, a3, (uint64_t)&v36);
  if (!*((void *)&v36 + 1))
  {
    sub_2486B73DC((uint64_t)&v36, &qword_26B13FDB0);
    goto LABEL_10;
  }
  uint64_t v32 = a5;
  long long v43 = v38;
  long long v44 = v39;
  char v45 = v40;
  long long v41 = v36;
  long long v42 = v37;
  uint64_t v15 = *((void *)&v39 + 1);
  swift_bridgeObjectRetain_n();
  long long v16 = sub_2486B9AA4(v15);
  swift_bridgeObjectRelease();
  *(void *)&long long v36 = v16;
  swift_retain();
  sub_2487010E0((char **)&v36);
  if (!v7)
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v17 = *(void *)(v36 + 16);
    swift_release();
    sub_2486D0820((uint64_t)&v41);
    if (v17)
    {
      a5 = v32;
      if (!a7)
      {
        long long v24 = a6[1];
        long long v46 = *a6;
        long long v47 = v24;
        uint64_t v48 = *((void *)a6 + 4);
        sub_24870F36C(a1, a2, a3, (uint64_t)&v36);
        if (*((void *)&v36 + 1))
        {
          long long v43 = v38;
          long long v44 = v39;
          char v45 = v40;
          long long v41 = v36;
          long long v42 = v37;
          sub_2486B747C((uint64_t)&v42 + 8, (uint64_t)&v36);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B140128);
          uint64_t v25 = MEMORY[0x263F8D4F8];
          if (swift_dynamicCast() & 1) == 0 || v34[0] == 2 || ((v34[0] ^ v55))
          {
            uint64_t v26 = *((void *)&v44 + 1);
            uint64_t v27 = *((void *)a6 + 1);
            sub_2486B4DD4();
            swift_allocError();
            *(void *)uint64_t v28 = v26;
            *(void *)(v28 + 8) = v32;
            *(void *)(v28 + 16) = v27;
            *(_OWORD *)(v28 + 24) = 0u;
            *(_OWORD *)(v28 + 40) = 0u;
            *(_OWORD *)(v28 + 56) = 0u;
            *(void *)(v28 + 72) = 0;
            *(unsigned char *)(v28 + 80) = 10;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_willThrow();
            return sub_2486D0820((uint64_t)&v41);
          }
          uint64_t v35 = v25;
          v34[0] = v55 & 1;
          sub_2486B747C((uint64_t)v34, (uint64_t)&v37 + 8);
          *(void *)&long long v36 = a1;
          *((void *)&v36 + 1) = a2;
          *(void *)&long long v37 = a3;
          *((void *)&v39 + 1) = v32;
          char v40 = 1;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_24870FAE8((uint64_t *)&v36);
          sub_2486D0820((uint64_t)&v36);
          sub_2486D0820((uint64_t)&v41);
          long long v21 = &qword_26B140128;
          long long v22 = (long long *)v34;
          return sub_2486B73DC((uint64_t)v22, v21);
        }
        long long v21 = &qword_26B13FDB0;
LABEL_11:
        long long v22 = &v36;
        return sub_2486B73DC((uint64_t)v22, v21);
      }
      if (a7 == 1)
      {
        long long v18 = a6[1];
        long long v49 = *a6;
        long long v50 = v18;
        uint64_t v51 = *((void *)a6 + 4);
        sub_24870F36C(a1, a2, a3, (uint64_t)&v36);
        uint64_t v19 = MEMORY[0x263F8D4F8];
        if (*((void *)&v36 + 1))
        {
          long long v43 = v38;
          long long v44 = v39;
          char v45 = v40;
          long long v41 = v36;
          long long v42 = v37;
          char v20 = v55;
        }
        else
        {
          char v20 = v55;
          BYTE8(v42) = v55 & 1;
          *(void *)&long long v41 = a1;
          *((void *)&v41 + 1) = a2;
          *(void *)&long long v42 = a3;
          *(void *)&long long v44 = MEMORY[0x263F8D4F8];
          *((void *)&v44 + 1) = MEMORY[0x263F8EE88];
          char v45 = 1;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_2486B73DC((uint64_t)&v36, &qword_26B13FDB0);
        }
        sub_2486B747C((uint64_t)&v42 + 8, (uint64_t)v34);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B140128);
        int v29 = swift_dynamicCast();
        char v30 = v33;
        if (v33 == 2) {
          char v30 = v20;
        }
        if (!v29) {
          char v30 = v20;
        }
        uint64_t v35 = v19;
        v34[0] = v30 & 1;
        sub_2486D0880((uint64_t)v34, (uint64_t)&v42 + 8);
        uint64_t v31 = swift_bridgeObjectRetain();
        sub_24870F970(v31);
        sub_24870FAE8((uint64_t *)&v41);
        return sub_2486D0820((uint64_t)&v41);
      }
    }
    else
    {
      a5 = v32;
    }
LABEL_10:
    *((void *)&v37 + 1) = MEMORY[0x263F8D4F8];
    LOBYTE(v36) = v55 & 1;
    sub_2486B747C((uint64_t)&v36, (uint64_t)&v42 + 8);
    *(void *)&long long v41 = a1;
    *((void *)&v41 + 1) = a2;
    *(void *)&long long v42 = a3;
    *((void *)&v44 + 1) = a5;
    char v45 = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24870FAE8((uint64_t *)&v41);
    sub_2486D0820((uint64_t)&v41);
    long long v21 = &qword_26B140128;
    goto LABEL_11;
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_2486FB10C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, long long *a6, unsigned __int8 *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v87 = *(void *)(a8 - 8);
  uint64_t v88 = a4;
  MEMORY[0x270FA5388](a1);
  unint64_t v77 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = v16;
  uint64_t v17 = sub_24872C8E0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v79 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v80 = TupleTypeMetadata2;
  uint64_t v19 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  unint64_t v86 = (char *)&v71 - v20;
  uint64_t v81 = v17;
  uint64_t v84 = *(void *)(v17 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  unint64_t v78 = (char *)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v82 = (char *)&v71 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v83 = (char *)&v71 - v25;
  int v26 = *a7;
  long long v27 = a6[1];
  long long v106 = *a6;
  long long v107 = v27;
  uint64_t v28 = a6;
  uint64_t v108 = *((void *)a6 + 4);
  uint64_t v90 = a1;
  uint64_t v91 = a3;
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  sub_24870F36C(v29, a2, a3, (uint64_t)&v93);
  if (*((void *)&v93 + 1))
  {
    uint64_t v85 = a5;
    long long v100 = v95;
    long long v101 = v96;
    char v102 = v97;
    long long v98 = v93;
    long long v99 = v94;
    uint64_t v31 = *((void *)&v96 + 1);
    swift_bridgeObjectRetain_n();
    uint64_t v32 = sub_2486B9AA4(v31);
    swift_bridgeObjectRelease();
    *(void *)&long long v93 = v32;
    swift_retain();
    uint64_t v33 = v109;
    sub_2487010E0((char **)&v93);
    uint64_t v109 = v33;
    if (v33)
    {
      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v34 = *(void *)(v93 + 16);
    swift_release();
    uint64_t v35 = sub_2486D0820((uint64_t)&v98);
    long long v36 = v28;
    if (v34)
    {
      uint64_t v37 = v89;
      if (v26)
      {
        if (v26 == 1)
        {
          MEMORY[0x270FA5388](v35);
          *(&v71 - 2) = v37;
          *(&v71 - 1) = a9;
          return sub_24870F440(v90, a2, v91, v85, v88, (void (*)(char *))nullsub_1, (uint64_t)(&v71 - 4), v37);
        }
        a5 = v85;
        goto LABEL_14;
      }
      long long v39 = v36[1];
      long long v103 = *v36;
      long long v104 = v39;
      uint64_t v105 = *((void *)v36 + 4);
      sub_24870F36C(v90, a2, v91, (uint64_t)&v93);
      if (!*((void *)&v93 + 1))
      {
        long long v56 = &qword_26B13FDB0;
        return sub_2486B73DC((uint64_t)&v93, v56);
      }
      uint64_t v75 = v36;
      uint64_t v71 = a9;
      long long v100 = v95;
      long long v101 = v96;
      char v102 = v97;
      long long v98 = v93;
      long long v99 = v94;
      sub_2486B747C((uint64_t)&v99 + 8, (uint64_t)&v93);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B140128);
      char v40 = v83;
      int v41 = swift_dynamicCast();
      uint64_t v42 = v87;
      long long v43 = *(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56);
      v43(v40, v41 ^ 1u, 1, v37);
      uint64_t v44 = v42 + 16;
      char v45 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v42 + 16);
      long long v46 = v82;
      unint64_t v72 = v45;
      uint64_t v73 = v44;
      v45((uint64_t *)v82, v88, v37);
      v43(v46, 0, 1, v37);
      long long v47 = v86;
      uint64_t v48 = &v86[*(int *)(v80 + 48)];
      long long v49 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
      long long v50 = v40;
      uint64_t v51 = v81;
      v49(v86, v50, v81);
      uint64_t v76 = v48;
      uint64_t v74 = v49;
      v49(v48, v46, v51);
      long long v52 = v47;
      long long v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48);
      if (v53(v52, 1, v37) == 1)
      {
        uint64_t v54 = *(void (**)(char *, uint64_t))(v84 + 8);
        v54(v82, v51);
        if (v53(v76, 1, v37) == 1)
        {
          v54(v86, v51);
          v54(v83, v51);
LABEL_23:
          v92[3] = v37;
          boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v92);
          v72(boxed_opaque_existential_1Tm, v88, v37);
          sub_2486B747C((uint64_t)v92, (uint64_t)&v94 + 8);
          *(void *)&long long v93 = v90;
          *((void *)&v93 + 1) = v30;
          *(void *)&long long v94 = v91;
          *((void *)&v96 + 1) = v85;
          char v97 = 1;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_24870FAE8((uint64_t *)&v93);
          sub_2486D0820((uint64_t)&v93);
          sub_2486D0820((uint64_t)&v98);
          return sub_2486B73DC((uint64_t)v92, &qword_26B140128);
        }
      }
      else
      {
        long long v57 = v78;
        v74(v78, v86, v51);
        uint64_t v58 = v76;
        if (v53(v76, 1, v37) != 1)
        {
          uint64_t v64 = v87;
          uint64_t v65 = v77;
          (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v77, v58, v37);
          LODWORD(v80) = sub_24872C500();
          uint64_t v66 = *(void (**)(char *, uint64_t))(v64 + 8);
          v66(v65, v37);
          char v67 = v57;
          int v68 = *(void (**)(char *, uint64_t))(v84 + 8);
          uint64_t v69 = v81;
          v68(v82, v81);
          v66(v67, v37);
          v68(v86, v69);
          v68(v83, v69);
          int v59 = v75;
          if (v80) {
            goto LABEL_23;
          }
LABEL_21:
          uint64_t v60 = *((void *)&v101 + 1);
          uint64_t v61 = *((void *)v59 + 1);
          sub_2486B4DD4();
          swift_allocError();
          uint64_t v62 = v85;
          *(void *)uint64_t v63 = v60;
          *(void *)(v63 + 8) = v62;
          *(void *)(v63 + 16) = v61;
          *(_OWORD *)(v63 + 24) = 0u;
          *(_OWORD *)(v63 + 40) = 0u;
          *(_OWORD *)(v63 + 56) = 0u;
          *(void *)(v63 + 72) = 0;
          *(unsigned char *)(v63 + 80) = 10;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_willThrow();
          return sub_2486D0820((uint64_t)&v98);
        }
        uint64_t v54 = *(void (**)(char *, uint64_t))(v84 + 8);
        uint64_t v51 = v81;
        v54(v82, v81);
        (*(void (**)(char *, uint64_t))(v87 + 8))(v57, v37);
      }
      int v59 = v75;
      (*(void (**)(char *, uint64_t))(v79 + 8))(v86, v80);
      v54(v83, v51);
      goto LABEL_21;
    }
    a5 = v85;
    uint64_t v37 = v89;
  }
  else
  {
    sub_2486B73DC((uint64_t)&v93, &qword_26B13FDB0);
    uint64_t v37 = v89;
  }
LABEL_14:
  *((void *)&v94 + 1) = v37;
  int v55 = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v93);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v87 + 16))(v55, v88, v37);
  sub_2486B747C((uint64_t)&v93, (uint64_t)&v99 + 8);
  *(void *)&long long v98 = v90;
  *((void *)&v98 + 1) = a2;
  *(void *)&long long v99 = v91;
  *((void *)&v101 + 1) = a5;
  char v102 = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24870FAE8((uint64_t *)&v98);
  sub_2486D0820((uint64_t)&v98);
  long long v56 = &qword_26B140128;
  return sub_2486B73DC((uint64_t)&v93, v56);
}

uint64_t sub_2486FB9D4()
{
  uint64_t v9 = MEMORY[0x263F8EE78];
  sub_2486B9CC0(0, 0, 0);
  swift_bridgeObjectRetain();
  uint64_t result = sub_24872C620();
  if (v1)
  {
    uint64_t v2 = result;
    uint64_t v3 = v1;
    uint64_t v4 = 0;
    while (!__OFADD__(v4, 1))
    {
      unint64_t v6 = *(void *)(v9 + 16);
      unint64_t v5 = *(void *)(v9 + 24);
      if (v6 >= v5 >> 1) {
        sub_2486B9CC0((void *)(v5 > 1), v6 + 1, 1);
      }
      *(void *)(v9 + 16) = v6 + 1;
      uint64_t v7 = (void *)(v9 + 48 * v6);
      v7[4] = v4;
      v7[5] = v2;
      v7[6] = v3;
      v7[7] = 64;
      v7[8] = 0;
      v7[9] = 0;
      uint64_t result = sub_24872C620();
      uint64_t v2 = result;
      uint64_t v3 = v8;
      ++v4;
      if (!v8) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return v9;
  }
  return result;
}

uint64_t sub_2486FBB0C()
{
  return sub_2487023D0(*v0);
}

void *sub_2486FBB20@<X0>(void *result@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v3 = *result - 1;
  if (__OFSUB__(*result, 1))
  {
    __break(1u);
  }
  else if (v3 < *(void *)(*(void *)v2 + 16))
  {
    *a2 = v3;
    return result;
  }
  __break(1u);
  return result;
}

unint64_t *sub_2486FBB4C(unint64_t *result)
{
  unint64_t v2 = *result - 1;
  if (__OFSUB__(*result, 1))
  {
    __break(1u);
  }
  else if (v2 < *(void *)(*(void *)v1 + 16))
  {
    *uint64_t result = v2;
    return result;
  }
  __break(1u);
  return result;
}

void sub_2486FBB78(void *a1@<X8>)
{
  *a1 = 0;
}

void sub_2486FBB80(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)v1 + 16);
}

void (*sub_2486FBB90(void *a1, unint64_t *a2))(void *a1)
{
  unint64_t v5 = malloc(0x28uLL);
  *a1 = v5;
  v5[4] = sub_2486FBC3C(v5, *a2, *v2);
  return sub_2486FBBF4;
}

void sub_2486FBBF4(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

_OWORD *sub_2486FBC3C(void *a1, unint64_t a2, uint64_t a3)
{
  uint64_t result = malloc(0x240uLL);
  *a1 = result;
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a3 + 16) > a2)
  {
    uint64_t v7 = (_OWORD *)(a3 + 192 * a2);
    long long v9 = v7[10];
    long long v8 = v7[11];
    long long v10 = v7[9];
    result[8] = v9;
    result[9] = v8;
    long long v11 = v7[11];
    long long v13 = v7[12];
    long long v12 = v7[13];
    result[10] = v13;
    result[11] = v12;
    long long v15 = v7[6];
    long long v14 = v7[7];
    long long v16 = v7[5];
    result[4] = v15;
    result[5] = v14;
    long long v17 = v7[7];
    long long v19 = v7[8];
    long long v18 = v7[9];
    result[6] = v19;
    result[7] = v18;
    long long v20 = v7[3];
    *uint64_t result = v7[2];
    result[1] = v20;
    long long v21 = v7[5];
    long long v23 = v7[2];
    long long v22 = v7[3];
    long long v24 = v7[4];
    result[2] = v24;
    result[3] = v21;
    result[20] = v9;
    result[21] = v11;
    long long v25 = v7[13];
    result[22] = v13;
    result[23] = v25;
    result[16] = v15;
    result[17] = v17;
    result[18] = v19;
    result[19] = v10;
    result[12] = v23;
    result[13] = v22;
    result[14] = v24;
    result[15] = v16;
    sub_2486B76D8((uint64_t)result);
    return sub_2486CD930;
  }
  __break(1u);
  return result;
}

uint64_t *sub_2486FBD20@<X0>(uint64_t *result@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *result;
  if (*result < 0 || (uint64_t v4 = result[1], result = *v2, (*v2)[2] < v4))
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v2[1];
    *a2 = v3;
    a2[1] = v4;
    a2[2] = result;
    a2[3] = v5;
    swift_bridgeObjectRetain();
    return (uint64_t *)swift_bridgeObjectRetain();
  }
  return result;
}

void sub_2486FBD80(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 16);
  *a1 = 0;
  a1[1] = v2;
}

BOOL sub_2486FBD90()
{
  return *(void *)(*(void *)v0 + 16) == 0;
}

void sub_2486FBDA4(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

void *sub_2486FBDB4@<X0>(void *result@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  unint64_t v4 = *result + a2;
  if (__OFADD__(*result, a2))
  {
    __break(1u);
  }
  else if (v4 <= *(void *)(*(void *)v3 + 16))
  {
    *a3 = v4;
    return result;
  }
  __break(1u);
  return result;
}

unint64_t sub_2486FBDE0@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t result = sub_248701DD0(*a1, a2, *a3, *v4);
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = v7 & 1;
  return result;
}

unint64_t *sub_2486FBE1C(unint64_t *result, unint64_t *a2)
{
  unint64_t v3 = *a2;
  unint64_t v4 = *(void *)(*(void *)v2 + 16);
  if (*result <= v4 && v3 <= v4) {
    return (unint64_t *)(v3 - *result);
  }
  __break(1u);
  return result;
}

uint64_t *sub_2486FBE44(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *result;
  uint64_t v3 = a2[1];
  if (*result >= *a2)
  {
    BOOL v5 = __OFSUB__(v2, v3);
    BOOL v4 = v2 - v3 < 0;
  }
  else
  {
    BOOL v5 = 0;
    BOOL v4 = 0;
  }
  if (v4 == v5) {
    __break(1u);
  }
  return result;
}

void *sub_2486FBE60(void *result, void *a2)
{
  if (*result < *a2 || a2[1] < *result) {
    __break(1u);
  }
  return result;
}

void *sub_2486FBE7C(void *result, void *a2)
{
  if (*result < *a2 || a2[1] < result[1]) {
    __break(1u);
  }
  return result;
}

void *sub_2486FBE98@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (*result >= *(void *)(*(void *)v2 + 16)) {
    __break(1u);
  }
  else {
    *a2 = *result + 1;
  }
  return result;
}

void *sub_2486FBEBC(void *result)
{
  if (*result >= *(void *)(*(void *)v1 + 16)) {
    __break(1u);
  }
  else {
    ++*result;
  }
  return result;
}

__n128 sub_2486FBEE0@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *v1;
  *a1 = *v1;
  a1[1].n128_u64[0] = 0;
  return result;
}

uint64_t sub_2486FBEF0()
{
  return *(void *)(*(void *)v0 + 16);
}

uint64_t sub_2486FBEFC()
{
  return 2;
}

uint64_t sub_2486FBF04()
{
  uint64_t v1 = sub_2486B981C(*v0, v0[1]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

void *sub_2486FBF50(void *a1, char *a2, uint64_t a3)
{
  return sub_2486FBF58(a1, a2, a3, *v3, v3[1]);
}

void *sub_2486FBF58(void *result, char *__dst, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v7 = result;
  if (!__dst)
  {
LABEL_11:
    uint64_t v8 = 0;
    goto LABEL_15;
  }
  uint64_t v8 = a3;
  if (!a3)
  {
LABEL_15:
    *char v7 = a4;
    v7[1] = a5;
    _OWORD v7[2] = v8;
    return (void *)v8;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a4 + 16);
    if (v9)
    {
      long long v10 = __dst;
      long long v11 = (_OWORD *)(a4 + 32);
      unint64_t v12 = 1;
      while (1)
      {
        long long v13 = v11[9];
        v20[8] = v11[8];
        v20[9] = v13;
        long long v14 = v11[11];
        v20[10] = v11[10];
        v20[11] = v14;
        long long v15 = v11[5];
        v20[4] = v11[4];
        v20[5] = v15;
        long long v16 = v11[7];
        void v20[6] = v11[6];
        v20[7] = v16;
        long long v17 = v11[1];
        v20[0] = *v11;
        v20[1] = v17;
        long long v18 = v11[3];
        _OWORD v20[2] = v11[2];
        v20[3] = v18;
        memmove(v10, v11, 0xC0uLL);
        if (v8 == v12)
        {
          sub_2486B76D8((uint64_t)v20);
          goto LABEL_15;
        }
        if (v9 == v12) {
          break;
        }
        v10 += 192;
        sub_2486B76D8((uint64_t)v20);
        v11 += 12;
        if (v12++ >= *(void *)(a4 + 16))
        {
          __break(1u);
          goto LABEL_11;
        }
      }
      sub_2486B76D8((uint64_t)v20);
    }
    uint64_t v8 = v9;
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_2486FC074(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a2)
  {
    BOOL v7 = 0;
    a3 = 0;
    goto LABEL_14;
  }
  if (!a3)
  {
    BOOL v7 = 0;
LABEL_14:
    uint64_t v8 = a4;
LABEL_15:
    *(void *)__n128 result = a4;
    *(void *)(result + 8) = a5;
    *(void *)(result + 16) = v8;
    *(unsigned char *)(result + 24) = v7;
    return a3;
  }
  if (a3 < 0) {
    goto LABEL_17;
  }
  uint64_t v5 = 0;
  uint64_t v6 = a4;
  while (1)
  {
    BOOL v7 = v6 == a5;
    if (v6 != a5) {
      break;
    }
    uint64_t v8 = 0;
LABEL_8:
    *(void *)(a2 + 8 * v5) = v6;
    if (a3 - 1 == v5) {
      goto LABEL_15;
    }
    ++v5;
    BOOL v9 = v6 == a5;
    uint64_t v6 = v8;
    if (v9)
    {
      BOOL v7 = 1;
      a3 = v5;
      goto LABEL_15;
    }
  }
  uint64_t v8 = v6 + 1;
  if (!__OFADD__(v6, 1)) {
    goto LABEL_8;
  }
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_2486FC100()
{
  return sub_24872C710();
}

unint64_t sub_2486FC128()
{
  unint64_t result = qword_26931E4F8;
  if (!qword_26931E4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E4F8);
  }
  return result;
}

uint64_t sub_2486FC17C()
{
  return MEMORY[0x263F8D6E0];
}

uint64_t sub_2486FC188()
{
  return sub_2486FC3AC(&qword_26931E500);
}

unint64_t sub_2486FC1BC()
{
  unint64_t result = qword_26931E510;
  if (!qword_26931E510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E510);
  }
  return result;
}

uint64_t sub_2486FC210()
{
  return sub_2486C54FC(&qword_26931E518, &qword_26931E520);
}

unint64_t sub_2486FC250()
{
  unint64_t result = qword_26931E528;
  if (!qword_26931E528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E528);
  }
  return result;
}

uint64_t sub_2486FC2A4()
{
  return sub_2486FC3AC(&qword_26931E530);
}

uint64_t sub_2486FC2D8()
{
  return sub_2486FC464(&qword_26931E538, (void (*)(void))sub_2486FC320);
}

unint64_t sub_2486FC320()
{
  unint64_t result = qword_26931E540;
  if (!qword_26931E540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E540);
  }
  return result;
}

uint64_t sub_2486FC378()
{
  return sub_2486FC3AC(&qword_26931E548);
}

uint64_t sub_2486FC3AC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26931E508);
    sub_2486FC1BC();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2486FC41C()
{
  return sub_2486FC464(&qword_26931E550, (void (*)(void))sub_2486FC4D4);
}

uint64_t sub_2486FC464(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26931E520);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2486FC4D4()
{
  unint64_t result = qword_26931E558;
  if (!qword_26931E558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E558);
  }
  return result;
}

uint64_t sub_2486FC528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v17 = MEMORY[0x263F8D4F8];
  v16[0] = 1;
  sub_2486B747C((uint64_t)v16, (uint64_t)v14);
  v13[0] = a6;
  v13[1] = a7;
  void v13[2] = a8;
  v14[4] = a1;
  char v15 = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24870FAE8(v13);
  sub_2486D0820((uint64_t)v13);
  return sub_2486B73DC((uint64_t)v16, &qword_26B140128);
}

uint64_t sub_2486FC5F0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2486FC608(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_2486FC608(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a3 != 2)
  {
    uint64_t v9 = result;
    uint64_t v14 = MEMORY[0x263F8D4F8];
    v13[0] = a3 & 1;
    sub_2486B747C((uint64_t)v13, (uint64_t)v11);
    v10[0] = a4;
    v10[1] = a5;
    uint64_t v10[2] = a6;
    v11[4] = v9;
    char v12 = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24870FAE8(v10);
    sub_2486D0820((uint64_t)v10);
    return sub_2486B73DC((uint64_t)v13, &qword_26B140128);
  }
  return result;
}

uint64_t sub_2486FC6D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  long long v12 = *(_OWORD *)(a5 + 16);
  v23[2] = *(_OWORD *)a5;
  void v23[3] = v12;
  uint64_t v24 = *(void *)(a5 + 32);
  sub_24870F36C(a6, a7, a8, (uint64_t)&v16);
  if (!v17)
  {
    sub_2486B73DC((uint64_t)&v16, &qword_26B13FDB0);
    long long v21 = 0u;
    long long v22 = 0u;
    goto LABEL_7;
  }
  sub_2486B747C((uint64_t)v19, (uint64_t)&v21);
  sub_2486D0820((uint64_t)&v16);
  if (!*((void *)&v22 + 1))
  {
LABEL_7:
    sub_2486B73DC((uint64_t)&v21, &qword_26B140128);
LABEL_9:
    sub_2486B4DD4();
    swift_allocError();
    *(void *)uint64_t v15 = 3;
    *(_OWORD *)(v15 + 8) = 0u;
    *(_OWORD *)(v15 + 24) = 0u;
    *(_OWORD *)(v15 + 40) = 0u;
    *(_OWORD *)(v15 + 56) = 0u;
    *(void *)(v15 + 72) = 0;
    *(unsigned char *)(v15 + 80) = 15;
    return swift_willThrow();
  }
  sub_2486D0A7C(&v21, v23);
  sub_2486B7330((uint64_t)v23, (uint64_t)&v16);
  uint64_t v13 = MEMORY[0x263F8D6C8];
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
    goto LABEL_9;
  }
  if (__OFADD__((void)v21, 1))
  {
    __break(1u);
  }
  else
  {
    *((void *)&v22 + 1) = v13;
    *(void *)&long long v21 = v21 + 1;
    sub_2486B747C((uint64_t)&v21, (uint64_t)v19);
    uint64_t v16 = a6;
    uint64_t v17 = a7;
    long long v18 = a8;
    void v19[4] = a1;
    char v20 = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24870FAE8(&v16);
    sub_2486D0820((uint64_t)&v16);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
    return sub_2486B73DC((uint64_t)&v21, &qword_26B140128);
  }
  return result;
}

uint64_t sub_2486FC8D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13[3] = MEMORY[0x263F8D6C8];
  v13[0] = 0;
  sub_2486B747C((uint64_t)v13, (uint64_t)v11);
  v10[0] = a3;
  v10[1] = a4;
  uint64_t v10[2] = a5;
  v11[4] = a1;
  char v12 = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24870FAE8(v10);
  sub_2486D0820((uint64_t)v10);
  return sub_2486B73DC((uint64_t)v13, &qword_26B140128);
}

uint64_t sub_2486FC994(uint64_t result, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(a2 + 16);
  if (v4)
  {
    uint64_t v6 = result;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v7 = v4 - 1;
    uint64_t v8 = 32;
    uint64_t v9 = MEMORY[0x263F8EE88];
    while (1)
    {
      long long v10 = *(_OWORD *)(a2 + v8 + 144);
      v17[8] = *(_OWORD *)(a2 + v8 + 128);
      v17[9] = v10;
      long long v11 = *(_OWORD *)(a2 + v8 + 176);
      v17[10] = *(_OWORD *)(a2 + v8 + 160);
      long long v18 = v11;
      long long v12 = *(_OWORD *)(a2 + v8 + 80);
      v17[4] = *(_OWORD *)(a2 + v8 + 64);
      _OWORD v17[5] = v12;
      long long v13 = *(_OWORD *)(a2 + v8 + 112);
      v17[6] = *(_OWORD *)(a2 + v8 + 96);
      v17[7] = v13;
      long long v14 = *(_OWORD *)(a2 + v8 + 16);
      v17[0] = *(_OWORD *)(a2 + v8);
      v17[1] = v14;
      long long v15 = *(_OWORD *)(a2 + v8 + 48);
      v17[2] = *(_OWORD *)(a2 + v8 + 32);
      v17[3] = v15;
      uint64_t v16 = (void (*)(uint64_t, uint64_t))v18;
      sub_2486B76D8((uint64_t)v17);
      v16(v9, v6);
      sub_2486C539C((uint64_t)v17);
      if (v3 || !v7) {
        break;
      }
      v8 += 192;
      --v7;
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2486FCA98(long long *a1, uint64_t *a2, unint64_t a3, uint64_t a4, __int16 a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  sub_248702744((uint64_t)a2, (uint64_t)v317);
  uint64_t v289 = v317[0];
  uint64_t v291 = v317[1];
  uint64_t v293 = v318;
  long long v14 = a1[7];
  long long v377 = a1[6];
  long long v378 = v14;
  long long v379 = a1[8];
  char v380 = *((unsigned char *)a1 + 144);
  long long v15 = a1[3];
  long long v373 = a1[2];
  long long v374 = v15;
  long long v16 = a1[5];
  long long v375 = a1[4];
  long long v376 = v16;
  long long v17 = a1[1];
  long long v371 = *a1;
  long long v372 = v17;
  uint64_t v18 = *((unsigned __int8 *)a1 + 145);
  v370[0] = *(long long *)((char *)a1 + 146);
  *(_OWORD *)((char *)v370 + 14) = a1[10];
  char v20 = (void (*)(void, void))*((void *)a1 + 22);
  uint64_t v19 = *((void *)a1 + 23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FCB8);
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = sub_2486D00B4(v21, 1);
  unint64_t v288 = a3;
  *(void *)uint64_t v23 = a3;
  *(void *)(v23 + 8) = a4;
  *(unsigned char *)(v23 + 16) = a5;
  *(unsigned char *)(v23 + 17) = HIBYTE(a5) & 1;
  uint64_t v24 = nullsub_1(v22);
  if (sub_2487104A4(MEMORY[0x263F8EE78]))
  {
    sub_2486E2274(MEMORY[0x263F8EE78]);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v381 = sub_248708EE8(v24);
  swift_bridgeObjectRelease();
  switch(v18)
  {
    case 1:
      sub_248702744((uint64_t)a2, (uint64_t)v336);
      if (v337 < 0)
      {
        v337 &= ~0x8000000000000000;
        uint64_t v135 = v338;
        uint64_t v134 = v339;
        goto LABEL_89;
      }
      sub_2487027A0((uint64_t)v336, (uint64_t)v340);
      long long v306 = v378;
      long long v307 = v379;
      char v308 = v380;
      long long v301 = v373;
      long long v302 = v374;
      long long v303 = v375;
      long long v304 = v376;
      long long v305 = v377;
      long long v299 = v371;
      long long v300 = v372;
      char v309 = 1;
      *(_OWORD *)v310 = v370[0];
      *(_OWORD *)&v310[14] = *(_OWORD *)((char *)v370 + 14);
      v311 = v20;
      uint64_t v312 = v19;
      if (!sub_24870BA9C() || (a5 & 0x100) != 0 || (a5 & 1) != 0 || a4)
      {
        sub_2487159BC(v288, a4, a5 & 0x1FF, v315);
        sub_2486CDB94((uint64_t)v315, (uint64_t)&v330, &qword_26B13FCA0);
        uint64_t v120 = v335;
        uint64_t v114 = v381;
        if (!v335) {
          goto LABEL_85;
        }
        uint64_t v121 = v330;
        uint64_t v122 = v331;
        uint64_t v123 = v334;
        int v124 = v332 | (v333 << 8);
        if ((sub_2486FAB30(v330, v331, v332 | (unsigned __int16)(v333 << 8), v381) & 1) == 0)
        {
          uint64_t v313 = v114;
          if ((sub_2486FAB30(v121, v122, v124, v114) & 1) == 0)
          {
            sub_248712AF4((uint64_t)&v299, v121, v122, v124);
            uint64_t v114 = v313;
          }
        }
        sub_2486B7650(v289, v291, v293);
        a6(v114, v289, v291, v293, v123, v120, a8);
        if (v8)
        {
          sub_2487027FC(a2);
          swift_bridgeObjectRelease();
          return sub_248702830((uint64_t)v315);
        }
        uint64_t v196 = v315;
        goto LABEL_162;
      }
      uint64_t v50 = v295[6];
      sub_248710484(v288, 1, v50);
      unint64_t v51 = v50 + 16 * v288;
      uint64_t v53 = *(void *)(v51 + 32);
      unint64_t v52 = *(void *)(v51 + 40);
      swift_bridgeObjectRetain();
      unint64_t v54 = sub_24871B2F0(2uLL, v53, v52);
      uint64_t v56 = v55;
      uint64_t v58 = v57;
      uint64_t v60 = v59;
      swift_bridgeObjectRelease();
      uint64_t v37 = MEMORY[0x24C57C040](v54, v56, v58, v60);
      uint64_t v39 = v61;
      uint64_t v40 = v288;
      swift_bridgeObjectRelease();
      uint64_t v41 = v381;
      uint64_t v42 = v289;
      if (*(void *)(v381 + 16))
      {
        sub_24872D030();
        sub_24872D040();
        sub_24872D040();
        sub_24872D040();
        uint64_t v62 = sub_24872D070();
        uint64_t v63 = -1 << *(unsigned char *)(v41 + 32);
        unint64_t v64 = v62 & ~v63;
        uint64_t v65 = v41 + 56;
        if ((*(void *)(v41 + 56 + ((v64 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v64))
        {
          uint64_t v66 = ~v63;
          do
          {
            uint64_t v67 = *(void *)(v41 + 48) + 24 * v64;
            if (*(unsigned char *)(v67 + 17) & 1) == 0 && *(void *)v67 == v288 && (*(unsigned char *)(v67 + 16)) {
              goto LABEL_221;
            }
            unint64_t v64 = (v64 + 1) & v66;
          }
          while (((*(void *)(v65 + ((v64 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v64) & 1) != 0);
        }
        if (*(void *)(v41 + 16))
        {
          sub_24872D030();
          sub_24872D040();
          sub_24872D040();
          sub_24872D040();
          uint64_t v209 = sub_24872D070();
          uint64_t v210 = -1 << *(unsigned char *)(v41 + 32);
          unint64_t v211 = v209 & ~v210;
          if ((*(void *)(v65 + ((v211 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v211))
          {
            uint64_t v212 = ~v210;
            do
            {
              uint64_t v213 = *(void *)(v41 + 48) + 24 * v211;
              if (*(unsigned char *)(v213 + 17) & 1) == 0 && *(void *)v213 == v288 && (*(unsigned char *)(v213 + 16)) {
                goto LABEL_221;
              }
              unint64_t v211 = (v211 + 1) & v212;
            }
            while (((*(void *)(v65 + ((v211 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v211) & 1) != 0);
          }
        }
      }
      sub_24872D030();
      sub_24872D040();
      sub_24872D040();
      sub_24872D040();
      uint64_t v215 = sub_24872D070();
      uint64_t v216 = -1 << *(unsigned char *)(v41 + 32);
      unint64_t v205 = v215 & ~v216;
      if (((*(void *)(v41 + 56 + ((v205 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v205) & 1) == 0) {
        goto LABEL_220;
      }
      uint64_t v217 = ~v216;
      while (1)
      {
        uint64_t v218 = *(void *)(v41 + 48) + 24 * v205;
        if (*(unsigned char *)(v218 + 17) & 1) == 0 && *(void *)v218 == v288 && (*(unsigned char *)(v218 + 16)) {
          goto LABEL_221;
        }
        unint64_t v205 = (v205 + 1) & v217;
        if (((*(void *)(v41 + 56 + ((v205 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v205) & 1) == 0) {
          goto LABEL_220;
        }
      }
    case 2:
      sub_248702744((uint64_t)a2, (uint64_t)v347);
      if (v348 < 0)
      {
        v348 &= ~0x8000000000000000;
        uint64_t v135 = v349;
        uint64_t v134 = v350;
        goto LABEL_89;
      }
      sub_2487027A0((uint64_t)v347, (uint64_t)v351);
      long long v306 = v378;
      long long v307 = v379;
      char v308 = v380;
      long long v301 = v373;
      long long v302 = v374;
      long long v303 = v375;
      long long v304 = v376;
      long long v305 = v377;
      long long v299 = v371;
      long long v300 = v372;
      char v309 = 2;
      *(_OWORD *)v310 = v370[0];
      *(_OWORD *)&v310[14] = *(_OWORD *)((char *)v370 + 14);
      v311 = v20;
      uint64_t v312 = v19;
      if (!sub_24870BA9C() || (a5 & 0x100) != 0 || (a5 & 1) != 0 || a4)
      {
        sub_248715B2C(v288, a4, a5 & 0x1FF, (uint64_t)v316);
        sub_2486CDB94((uint64_t)v316, (uint64_t)&v341, &qword_26B13FCA0);
        uint64_t v125 = v346;
        uint64_t v114 = v381;
        if (!v346) {
          goto LABEL_85;
        }
        uint64_t v126 = v341;
        uint64_t v127 = v342;
        uint64_t v128 = v345;
        int v129 = v343 | (v344 << 8);
        if ((sub_2486FAB30(v341, v342, v343 | (unsigned __int16)(v344 << 8), v381) & 1) == 0)
        {
          uint64_t v313 = v114;
          if ((sub_2486FAB30(v126, v127, v129, v114) & 1) == 0)
          {
            sub_248712AF4((uint64_t)&v299, v126, v127, v129);
            uint64_t v114 = v313;
          }
        }
        sub_2486B7650(v289, v291, v293);
        a6(v114, v289, v291, v293, v128, v125, a8);
        if (v8)
        {
          sub_2487027FC(a2);
          swift_bridgeObjectRelease();
          return sub_248702830((uint64_t)v316);
        }
        uint64_t v196 = v316;
        goto LABEL_162;
      }
      uint64_t v69 = v295[6];
      sub_248710484(v288, 1, v69);
      unint64_t v70 = v69 + 16 * v288;
      uint64_t v72 = *(void *)(v70 + 32);
      unint64_t v71 = *(void *)(v70 + 40);
      swift_bridgeObjectRetain();
      unint64_t v73 = sub_24871B2F0(2uLL, v72, v71);
      uint64_t v75 = v74;
      uint64_t v77 = v76;
      uint64_t v79 = v78;
      swift_bridgeObjectRelease();
      uint64_t v37 = MEMORY[0x24C57C040](v73, v75, v77, v79);
      uint64_t v39 = v80;
      uint64_t v40 = v288;
      swift_bridgeObjectRelease();
      uint64_t v41 = v381;
      uint64_t v42 = v289;
      if (*(void *)(v381 + 16))
      {
        sub_24872D030();
        sub_24872D040();
        sub_24872D040();
        sub_24872D040();
        uint64_t v81 = sub_24872D070();
        uint64_t v82 = -1 << *(unsigned char *)(v41 + 32);
        unint64_t v83 = v81 & ~v82;
        uint64_t v84 = v41 + 56;
        if ((*(void *)(v41 + 56 + ((v83 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v83))
        {
          uint64_t v85 = ~v82;
          do
          {
            uint64_t v86 = *(void *)(v41 + 48) + 24 * v83;
            if (*(unsigned char *)(v86 + 17) & 1) == 0 && *(void *)v86 == v288 && (*(unsigned char *)(v86 + 16)) {
              goto LABEL_221;
            }
            unint64_t v83 = (v83 + 1) & v85;
          }
          while (((*(void *)(v84 + ((v83 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v83) & 1) != 0);
        }
        if (*(void *)(v41 + 16))
        {
          sub_24872D030();
          sub_24872D040();
          sub_24872D040();
          sub_24872D040();
          uint64_t v220 = sub_24872D070();
          uint64_t v221 = -1 << *(unsigned char *)(v41 + 32);
          unint64_t v222 = v220 & ~v221;
          if ((*(void *)(v84 + ((v222 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v222))
          {
            uint64_t v223 = ~v221;
            do
            {
              uint64_t v224 = *(void *)(v41 + 48) + 24 * v222;
              if (*(unsigned char *)(v224 + 17) & 1) == 0 && *(void *)v224 == v288 && (*(unsigned char *)(v224 + 16)) {
                goto LABEL_221;
              }
              unint64_t v222 = (v222 + 1) & v223;
            }
            while (((*(void *)(v84 + ((v222 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v222) & 1) != 0);
          }
        }
      }
      sub_24872D030();
      sub_24872D040();
      sub_24872D040();
      sub_24872D040();
      uint64_t v226 = sub_24872D070();
      uint64_t v227 = -1 << *(unsigned char *)(v41 + 32);
      unint64_t v205 = v226 & ~v227;
      if (((*(void *)(v41 + 56 + ((v205 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v205) & 1) == 0) {
        goto LABEL_220;
      }
      uint64_t v228 = ~v227;
      while (1)
      {
        uint64_t v229 = *(void *)(v41 + 48) + 24 * v205;
        if (*(unsigned char *)(v229 + 17) & 1) == 0 && *(void *)v229 == v288 && (*(unsigned char *)(v229 + 16)) {
          goto LABEL_221;
        }
        unint64_t v205 = (v205 + 1) & v228;
        if (((*(void *)(v41 + 56 + ((v205 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v205) & 1) == 0) {
          goto LABEL_220;
        }
      }
    case 3:
      sub_248702744((uint64_t)a2, (uint64_t)v365);
      if (v366 < 0)
      {
        v366 &= ~0x8000000000000000;
        uint64_t v138 = v367;
        uint64_t v139 = v368;
        swift_bridgeObjectRetain();
        sub_2486B7650(v289, v291, v293);
        uint64_t v90 = v381;
        a6(v381, v289, v291, v293, v138, v139, a8);
        uint64_t v89 = v8;
        if (v8)
        {
          swift_bridgeObjectRelease();
          sub_2486B7668(v289, v291, v293);
          return swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        sub_2486B7668(v289, v291, v293);
        uint64_t v157 = swift_bridgeObjectRetain();
        sub_24870F970(v157);
        int v88 = 1;
        goto LABEL_102;
      }
      sub_2487027A0((uint64_t)v365, (uint64_t)v369);
      long long v306 = v378;
      long long v307 = v379;
      char v308 = v380;
      long long v301 = v373;
      long long v302 = v374;
      long long v303 = v375;
      long long v304 = v376;
      long long v305 = v377;
      long long v299 = v371;
      long long v300 = v372;
      char v309 = 3;
      *(_OWORD *)v310 = v370[0];
      *(_OWORD *)&v310[14] = *(_OWORD *)((char *)v370 + 14);
      v311 = v20;
      uint64_t v312 = v19;
      int v88 = 0;
      uint64_t v89 = v8;
      if (!sub_24870BA9C())
      {
        uint64_t v90 = v381;
        goto LABEL_102;
      }
      uint64_t v90 = v381;
      if ((a5 & 0x100) != 0)
      {
LABEL_102:
        uint64_t v91 = v295;
        goto LABEL_103;
      }
      uint64_t v91 = v295;
      if ((a5 & 1) != 0 || a4) {
        goto LABEL_103;
      }
      uint64_t v92 = v295[6];
      sub_248710484(v288, 1, v92);
      unint64_t v93 = v92 + 16 * v288;
      uint64_t v95 = *(void *)(v93 + 32);
      unint64_t v94 = *(void *)(v93 + 40);
      swift_bridgeObjectRetain();
      unint64_t v96 = sub_24871B2F0(2uLL, v95, v94);
      uint64_t v98 = v97;
      uint64_t v100 = v99;
      uint64_t v102 = v101;
      swift_bridgeObjectRelease();
      uint64_t v103 = MEMORY[0x24C57C040](v96, v98, v100, v102);
      uint64_t v105 = v104;
      swift_bridgeObjectRelease();
      if (!*(void *)(v90 + 16)) {
        goto LABEL_235;
      }
      sub_24872D030();
      sub_24872D040();
      sub_24872D040();
      sub_24872D040();
      uint64_t v106 = sub_24872D070();
      uint64_t v107 = -1 << *(unsigned char *)(v90 + 32);
      unint64_t v108 = v106 & ~v107;
      uint64_t v109 = v90 + 56;
      if ((*(void *)(v90 + 56 + ((v108 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v108))
      {
        uint64_t v110 = ~v107;
        do
        {
          uint64_t v111 = *(void *)(v90 + 48) + 24 * v108;
          if (*(unsigned char *)(v111 + 17) & 1) == 0 && *(void *)v111 == v288 && (*(unsigned char *)(v111 + 16)) {
            goto LABEL_243;
          }
          unint64_t v108 = (v108 + 1) & v110;
        }
        while (((*(void *)(v109 + ((v108 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v108) & 1) != 0);
      }
      if (*(void *)(v90 + 16)
        && (sub_24872D030(),
            sub_24872D040(),
            sub_24872D040(),
            sub_24872D040(),
            uint64_t v234 = sub_24872D070(),
            uint64_t v235 = -1 << *(unsigned char *)(v90 + 32),
            unint64_t v236 = v234 & ~v235,
            ((*(void *)(v109 + ((v236 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v236) & 1) != 0))
      {
        uint64_t v237 = ~v235;
        while (1)
        {
          uint64_t v238 = *(void *)(v90 + 48) + 24 * v236;
          if (*(unsigned char *)(v238 + 17) & 1) == 0 && *(void *)v238 == v288 && (*(unsigned char *)(v238 + 16)) {
            break;
          }
          unint64_t v236 = (v236 + 1) & v237;
          if (((*(void *)(v109 + ((v236 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v236) & 1) == 0) {
            goto LABEL_235;
          }
        }
      }
      else
      {
LABEL_235:
        sub_24872D030();
        sub_24872D040();
        sub_24872D040();
        sub_24872D040();
        uint64_t v240 = sub_24872D070();
        uint64_t v241 = -1 << *(unsigned char *)(v90 + 32);
        unint64_t v242 = v240 & ~v241;
        if (((*(void *)(v90 + 56 + ((v242 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v242) & 1) == 0)
        {
LABEL_244:
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          sub_248713D5C(v288, 0, 1, v242, isUniquelyReferenced_nonNull_native);
          uint64_t v246 = v90;
          swift_bridgeObjectRelease();
          goto LABEL_245;
        }
        uint64_t v243 = ~v241;
        while (1)
        {
          uint64_t v244 = *(void *)(v90 + 48) + 24 * v242;
          if (*(unsigned char *)(v244 + 17) & 1) == 0 && *(void *)v244 == v288 && (*(unsigned char *)(v244 + 16)) {
            break;
          }
          unint64_t v242 = (v242 + 1) & v243;
          if (((*(void *)(v90 + 56 + ((v242 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v242) & 1) == 0) {
            goto LABEL_244;
          }
        }
      }
LABEL_243:
      swift_bridgeObjectRetain();
      uint64_t v246 = v90;
LABEL_245:
      *(void *)&long long v299 = v103;
      *((void *)&v299 + 1) = v105;
      sub_2486B7650(v289, v291, v293);
      uint64_t v248 = sub_24872C6C0();
      a6(v246, v289, v291, v293, v248, v249, a8);
      if (v89)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2487027FC(a2);
        return swift_bridgeObjectRelease();
      }
      uint64_t v91 = v295;
      swift_bridgeObjectRelease();
      sub_2487027FC(a2);
      sub_24870F970(v246);
      uint64_t v250 = swift_bridgeObjectRetain();
      sub_248706008(v250);
      swift_bridgeObjectRelease();
      int v88 = 1;
LABEL_103:
      uint64_t v158 = swift_bridgeObjectRetain();
      sub_24870F970(v158);
      uint64_t v159 = swift_bridgeObjectRetain();
      sub_248706008(v159);
      swift_bridgeObjectRelease();
      uint64_t v160 = v91[4];
      uint64_t v161 = v91[5];
      uint64_t v162 = sub_248714CD8(v160);
      if (v162 < v161) {
        goto LABEL_283;
      }
      uint64_t v163 = v162;
      sub_248717B24(v161, v160);
      sub_248717B24(v163, v160);
      if (v163 < 0) {
        goto LABEL_284;
      }
      if (v161 == v163) {
        goto LABEL_150;
      }
      if (v161 >= v163) {
        goto LABEL_285;
      }
      uint64_t v283 = v160 + 32;
      if ((*(void *)(v160 + 32 + (v161 << 6) + 16) & 0x6000000000000000) != 0x2000000000000000)
      {
LABEL_150:
        if (!v88)
        {
          sub_248702744((uint64_t)a2, (uint64_t)v360);
          unsigned __int8 v190 = v361;
          if (v361 < 0) {
            v361 &= ~0x8000000000000000;
          }
          uint64_t v191 = v360[1];
          uint64_t v192 = v360[0];
          sub_2486B4DD4();
          swift_allocError();
          *(void *)uint64_t v193 = v90;
          *(void *)(v193 + 8) = v192;
          *(void *)(v193 + 16) = v191;
          *(void *)(v193 + 24) = v190;
          *(_OWORD *)(v193 + 32) = 0u;
          *(_OWORD *)(v193 + 48) = 0u;
          *(_OWORD *)(v193 + 64) = 0u;
          *(unsigned char *)(v193 + 80) = 7;
          uint64_t v130 = v192;
          uint64_t v133 = v191;
          unsigned __int8 v132 = v190;
LABEL_155:
          sub_2486B7650(v130, v133, v132);
          return swift_willThrow();
        }
        return swift_bridgeObjectRelease();
      }
      uint64_t v164 = sub_248714CD8(v160);
      if (v164 < v161) {
        goto LABEL_290;
      }
      uint64_t v165 = v164;
      sub_248717B24(v161, v160);
      sub_248717B24(v165, v160);
      if (v165 < 0) {
        goto LABEL_291;
      }
      if (v161 == v165) {
        return swift_bridgeObjectRelease();
      }
      uint64_t v287 = v89;
      uint64_t v166 = v90 + 56;
      uint64_t v281 = v160;
      while (1)
      {
        if (v161 >= v165) {
          goto LABEL_280;
        }
        uint64_t v167 = v283 + (v161 << 6);
        unint64_t v294 = *(void *)(v167 + 16);
        if ((v294 & 0x6000000000000000) != 0x2000000000000000) {
          return swift_bridgeObjectRelease();
        }
        uint64_t v169 = *(void *)v167;
        uint64_t v168 = *(void *)(v167 + 8);
        uint64_t v170 = *(void *)(v167 + 40);
        uint64_t v171 = v90;
        uint64_t v172 = *(void *)(v167 + 48);
        unsigned int v173 = *(unsigned __int8 *)(v167 + 56);
        v295[5] = v161 + 1;
        if (*(void *)(v171 + 16))
        {
          sub_24872D030();
          sub_24872D040();
          sub_24872D040();
          if (!v173) {
            sub_24872D040();
          }
          sub_24872D040();
          uint64_t v174 = sub_24872D070();
          uint64_t v175 = -1 << *(unsigned char *)(v381 + 32);
          unint64_t v176 = v174 & ~v175;
          if ((*(void *)(v166 + ((v176 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v176))
          {
            uint64_t v177 = ~v175;
            do
            {
              uint64_t v178 = *(void *)(v381 + 48) + 24 * v176;
              if ((*(unsigned char *)(v178 + 17) & 1) == 0 && *(void *)v178 == v170)
              {
                if (*(unsigned char *)(v178 + 16))
                {
                  if (v173) {
                    goto LABEL_141;
                  }
                }
                else if ((v173 & 1) == 0 && *(void *)(v178 + 8) == v172)
                {
LABEL_141:
                  uint64_t v185 = v381;
                  swift_bridgeObjectRetain();
                  sub_24870266C(v169, v168, v294);
                  goto LABEL_143;
                }
              }
              unint64_t v176 = (v176 + 1) & v177;
            }
            while (((*(void *)(v166 + ((v176 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v176) & 1) != 0);
          }
          uint64_t v179 = *(void *)(v381 + 16);
          uint64_t v313 = v381;
          if (v179)
          {
            sub_24872D030();
            sub_24872D040();
            sub_24872D040();
            if (!v173) {
              sub_24872D040();
            }
            sub_24872D040();
            uint64_t v180 = sub_24872D070();
            uint64_t v181 = -1 << *(unsigned char *)(v381 + 32);
            unint64_t v182 = v180 & ~v181;
            if ((*(void *)(v166 + ((v182 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v182))
            {
              uint64_t v183 = ~v181;
              do
              {
                uint64_t v184 = *(void *)(v381 + 48) + 24 * v182;
                if ((*(unsigned char *)(v184 + 17) & 1) == 0 && *(void *)v184 == v170)
                {
                  if (*(unsigned char *)(v184 + 16))
                  {
                    if (v173) {
                      goto LABEL_141;
                    }
                  }
                  else if ((v173 & 1) == 0 && *(void *)(v184 + 8) == v172)
                  {
                    goto LABEL_141;
                  }
                }
                unint64_t v182 = (v182 + 1) & v183;
              }
              while (((*(void *)(v166 + ((v182 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v182) & 1) != 0);
            }
          }
        }
        else
        {
          uint64_t v313 = v171;
        }
        swift_bridgeObjectRetain();
        sub_24870266C(v169, v168, v294);
        sub_248712AF4((uint64_t)&v299, v170, v172, v173);
        uint64_t v185 = v313;
LABEL_143:
        uint64_t v286 = v161 + 1;
        sub_248702744((uint64_t)a2, (uint64_t)&v362);
        uint64_t v186 = v364;
        if (v364 < 0) {
          v364 &= ~0x8000000000000000;
        }
        uint64_t v187 = v363;
        uint64_t v188 = v362;
        sub_2486B7650(v362, v363, v186);
        a6(v185, v188, v187, v186, v169, v168, a8);
        if (v287) {
          break;
        }
        sub_2487026D8(v169, v168, v294);
        sub_2486B7668(v188, v187, v186);
        sub_24870F970(v185);
        uint64_t v189 = sub_248714CD8(v281);
        if (v189 <= v161) {
          goto LABEL_281;
        }
        uint64_t v165 = v189;
        sub_248717B24(v286, v281);
        sub_248717B24(v165, v281);
        uint64_t v90 = v381;
        if (v165 < 0) {
          goto LABEL_282;
        }
        ++v161;
        if (v286 == v165) {
          return swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
      sub_2486B7668(v188, v187, v186);
      swift_bridgeObjectRelease();
      return sub_2487026D8(v169, v168, v294);
    case 4:
      v20(v381, a8);
      if (v8) {
        return swift_bridgeObjectRelease();
      }
      sub_248702744((uint64_t)a2, (uint64_t)v355);
      if (v356 < 0)
      {
        v356 &= ~0x8000000000000000;
        uint64_t v194 = v357;
        uint64_t v195 = v358;
        swift_bridgeObjectRetain();
        sub_2486B7650(v289, v291, v293);
        a6(v381, v289, v291, v293, v194, v195, a8);
        swift_bridgeObjectRelease();
        sub_2486B7668(v289, v291, v293);
        uint64_t v140 = v381;
        uint64_t v251 = swift_bridgeObjectRetain();
        sub_24870F970(v251);
        unint64_t v141 = v295;
      }
      else
      {
        sub_2487027A0((uint64_t)v355, (uint64_t)v359);
        long long v306 = v378;
        long long v307 = v379;
        char v308 = v380;
        long long v301 = v373;
        long long v302 = v374;
        long long v303 = v375;
        long long v304 = v376;
        long long v305 = v377;
        long long v299 = v371;
        long long v300 = v372;
        char v309 = 4;
        *(_OWORD *)v310 = v370[0];
        *(_OWORD *)&v310[14] = *(_OWORD *)((char *)v370 + 14);
        v311 = v20;
        uint64_t v312 = v19;
        if (sub_24870BA9C())
        {
          uint64_t v140 = v381;
          unint64_t v141 = v295;
          if ((a5 & 0x100) == 0 && (a5 & 1) == 0 && !a4)
          {
            uint64_t v142 = v295[6];
            sub_248710484(v288, 1, v142);
            unint64_t v143 = v142 + 16 * v288;
            uint64_t v145 = *(void *)(v143 + 32);
            unint64_t v144 = *(void *)(v143 + 40);
            swift_bridgeObjectRetain();
            unint64_t v146 = sub_24871B2F0(2uLL, v145, v144);
            uint64_t v282 = v147;
            unint64_t v284 = v146;
            uint64_t v149 = v148;
            uint64_t v151 = v150;
            swift_bridgeObjectRelease();
            uint64_t v285 = MEMORY[0x24C57C040](v284, v149, v282, v151);
            uint64_t v153 = v152;
            swift_bridgeObjectRelease();
            uint64_t v154 = sub_248708784(v288, 0, 1, v140);
            *(void *)&long long v299 = v285;
            *((void *)&v299 + 1) = v153;
            sub_2486B7650(v289, v291, v293);
            uint64_t v155 = sub_24872C6C0();
            a6(v154, v289, v291, v293, v155, v156, a8);
            swift_bridgeObjectRelease();
            sub_2487027FC(a2);
            sub_24870F970(v154);
            uint64_t v252 = swift_bridgeObjectRetain();
            sub_248706008(v252);
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          uint64_t v140 = v381;
          unint64_t v141 = v295;
        }
      }
      uint64_t v253 = v141[4];
      uint64_t v255 = v141[5];
      long long v254 = v141 + 4;
      uint64_t v256 = sub_248718808(v288, a4, a5 & 0x1FF, v253, v255);
      if (v257) {
        return swift_bridgeObjectRelease();
      }
      uint64_t v258 = v256;
      uint64_t v290 = v140 + 56;
      while (1)
      {
        uint64_t v259 = sub_248714CD8(v253);
        if (v259 < v255) {
          goto LABEL_286;
        }
        uint64_t v260 = v259;
        sub_248717B24(v255, v253);
        sub_248717B24(v260, v253);
        if (v260 < 0) {
          goto LABEL_287;
        }
        if (v260 < v258) {
          goto LABEL_288;
        }
        if (v258 < v255) {
          goto LABEL_289;
        }
        if (v258 == v260) {
          return swift_bridgeObjectRelease();
        }
        for (uint64_t i = (unsigned char *)(v253 + (v258 << 6) + 88); ; i += 64)
        {
          if (v258 >= v260)
          {
            __break(1u);
LABEL_280:
            __break(1u);
LABEL_281:
            __break(1u);
LABEL_282:
            __break(1u);
LABEL_283:
            __break(1u);
LABEL_284:
            __break(1u);
LABEL_285:
            __break(1u);
LABEL_286:
            __break(1u);
LABEL_287:
            __break(1u);
LABEL_288:
            __break(1u);
LABEL_289:
            __break(1u);
LABEL_290:
            __break(1u);
LABEL_291:
            __break(1u);
            JUMPOUT(0x2486FEBECLL);
          }
          if (*i == 1) {
            break;
          }
          if (v260 == ++v258) {
            return swift_bridgeObjectRelease();
          }
        }
        unint64_t v263 = *((void *)i - 2);
        uint64_t v262 = *((void *)i - 1);
        sub_248717668(v263, v262, 1);
        uint64_t v264 = v141[6];
        sub_248710484(v263, 1, v264);
        unint64_t v265 = v264 + 16 * v263;
        uint64_t v267 = *(void *)(v265 + 32);
        uint64_t v266 = *(void *)(v265 + 40);
        uint64_t v268 = v381;
        if (*(void *)(v381 + 16)
          && (sub_24872D030(),
              sub_24872D040(),
              sub_24872D040(),
              sub_24872D040(),
              uint64_t v269 = sub_24872D070(),
              uint64_t v270 = -1 << *(unsigned char *)(v268 + 32),
              unint64_t v271 = v269 & ~v270,
              ((*(void *)(v290 + ((v271 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v271) & 1) != 0))
        {
          uint64_t v272 = ~v270;
          while (1)
          {
            uint64_t v273 = *(void *)(v268 + 48) + 24 * v271;
            if (*(unsigned char *)(v273 + 17) & 1) == 0 && *(void *)v273 == v263 && (*(unsigned char *)(v273 + 16)) {
              break;
            }
            unint64_t v271 = (v271 + 1) & v272;
            if (((*(void *)(v290 + ((v271 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v271) & 1) == 0) {
              goto LABEL_271;
            }
          }
          uint64_t v275 = v381;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
LABEL_271:
          uint64_t v276 = v381;
          uint64_t v313 = v381;
          if (sub_2486FAB30(v263, v262, 1, v381))
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v275 = v276;
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_248712AF4((uint64_t)&v299, v263, v262, 1u);
            uint64_t v275 = v313;
          }
        }
        v292 = v254;
        sub_248702744((uint64_t)a2, (uint64_t)&v352);
        uint64_t v277 = v354;
        if (v354 < 0) {
          v354 &= ~0x8000000000000000;
        }
        uint64_t v278 = v353;
        uint64_t v279 = v352;
        sub_2486B7650(v352, v353, v277);
        a6(v275, v279, v278, v277, v267, v266, a8);
        swift_bridgeObjectRelease();
        sub_2486B7668(v279, v278, v277);
        sub_24870F970(v275);
        unint64_t v141 = v295;
        uint64_t v253 = v295[4];
        uint64_t v255 = v295[5];
        uint64_t v258 = sub_248718808(v288, a4, a5 & 0x1FF, v253, v255);
        long long v254 = v292;
        if (v280) {
          return swift_bridgeObjectRelease();
        }
      }
    case 5:
    case 6:
      swift_bridgeObjectRelease();
      sub_2486B4DD4();
      swift_allocError();
      *(void *)uint64_t v25 = 3;
      *(_OWORD *)(v25 + 8) = 0u;
      *(_OWORD *)(v25 + 24) = 0u;
      *(_OWORD *)(v25 + 40) = 0u;
      *(_OWORD *)(v25 + 56) = 0u;
      *(void *)(v25 + 72) = 0;
      *(unsigned char *)(v25 + 80) = 15;
      return swift_willThrow();
    default:
      sub_248702744((uint64_t)a2, (uint64_t)v325);
      if (v326 < 0)
      {
        v326 &= ~0x8000000000000000;
        uint64_t v135 = v327;
        uint64_t v134 = v328;
LABEL_89:
        swift_bridgeObjectRetain();
        sub_2486B7650(v289, v291, v293);
        uint64_t v136 = v381;
        a6(v381, v289, v291, v293, v135, v134, a8);
        if (v8)
        {
          sub_2486B7668(v289, v291, v293);
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        sub_2486B7668(v289, v291, v293);
        uint64_t v137 = v136;
        return sub_24870F970(v137);
      }
      sub_2487027A0((uint64_t)v325, (uint64_t)v329);
      long long v306 = v378;
      long long v307 = v379;
      char v308 = v380;
      long long v301 = v373;
      long long v302 = v374;
      long long v303 = v375;
      long long v304 = v376;
      long long v305 = v377;
      long long v299 = v371;
      long long v300 = v372;
      char v309 = 0;
      *(_OWORD *)v310 = v370[0];
      *(_OWORD *)&v310[14] = *(_OWORD *)((char *)v370 + 14);
      v311 = v20;
      uint64_t v312 = v19;
      if (!sub_24870BA9C() || (a5 & 0x100) != 0 || (a5 & 1) != 0 || a4)
      {
        sub_248715898(v288, a4, a5 & 0x1FF, (uint64_t)v314);
        sub_2486CDB94((uint64_t)v314, (uint64_t)&v319, &qword_26B13FCA0);
        uint64_t v113 = v324;
        uint64_t v114 = v381;
        if (!v324)
        {
LABEL_85:
          sub_2486B4DD4();
          swift_allocError();
          uint64_t v130 = v289;
          *(void *)uint64_t v131 = v114;
          *(void *)(v131 + 8) = v289;
          unsigned __int8 v132 = v293;
          *(void *)(v131 + 16) = v291;
          *(void *)(v131 + 24) = v293;
          *(_OWORD *)(v131 + 32) = 0u;
          *(_OWORD *)(v131 + 48) = 0u;
          *(_OWORD *)(v131 + 64) = 0u;
          *(unsigned char *)(v131 + 80) = 7;
          uint64_t v133 = v291;
          goto LABEL_155;
        }
        uint64_t v115 = v319;
        uint64_t v116 = v320;
        uint64_t v117 = v323;
        int v118 = v321 | (v322 << 8);
        if ((sub_2486FAB30(v319, v320, v321 | (unsigned __int16)(v322 << 8), v381) & 1) == 0)
        {
          uint64_t v313 = v114;
          if ((sub_2486FAB30(v115, v116, v118, v114) & 1) == 0)
          {
            sub_248712AF4((uint64_t)&v299, v115, v116, v118);
            uint64_t v114 = v313;
          }
        }
        sub_2486B7650(v289, v291, v293);
        a6(v114, v289, v291, v293, v117, v113, a8);
        if (v8)
        {
          sub_2487027FC(a2);
          swift_bridgeObjectRelease();
          return sub_248702830((uint64_t)v314);
        }
        uint64_t v196 = v314;
LABEL_162:
        sub_248702830((uint64_t)v196);
        sub_2487027FC(a2);
        uint64_t v137 = v114;
        return sub_24870F970(v137);
      }
      uint64_t v26 = v295[6];
      sub_248710484(v288, 1, v26);
      unint64_t v27 = v26 + 16 * v288;
      uint64_t v29 = *(void *)(v27 + 32);
      unint64_t v28 = *(void *)(v27 + 40);
      swift_bridgeObjectRetain();
      unint64_t v30 = sub_24871B2F0(2uLL, v29, v28);
      uint64_t v32 = v31;
      uint64_t v34 = v33;
      uint64_t v36 = v35;
      swift_bridgeObjectRelease();
      uint64_t v37 = MEMORY[0x24C57C040](v30, v32, v34, v36);
      uint64_t v39 = v38;
      uint64_t v40 = v288;
      swift_bridgeObjectRelease();
      uint64_t v41 = v381;
      uint64_t v42 = v289;
      if (!*(void *)(v381 + 16)) {
        goto LABEL_173;
      }
      sub_24872D030();
      sub_24872D040();
      sub_24872D040();
      sub_24872D040();
      uint64_t v43 = sub_24872D070();
      uint64_t v44 = -1 << *(unsigned char *)(v41 + 32);
      unint64_t v45 = v43 & ~v44;
      uint64_t v46 = v41 + 56;
      if (((*(void *)(v41 + 56 + ((v45 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v45) & 1) == 0) {
        goto LABEL_163;
      }
      uint64_t v47 = ~v44;
      while (1)
      {
        uint64_t v48 = *(void *)(v41 + 48) + 24 * v45;
        if (*(unsigned char *)(v48 + 17) & 1) == 0 && *(void *)v48 == v288 && (*(unsigned char *)(v48 + 16)) {
          break;
        }
        unint64_t v45 = (v45 + 1) & v47;
        if (((*(void *)(v46 + ((v45 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v45) & 1) == 0)
        {
LABEL_163:
          if (*(void *)(v41 + 16)
            && (sub_24872D030(),
                sub_24872D040(),
                sub_24872D040(),
                sub_24872D040(),
                uint64_t v197 = sub_24872D070(),
                uint64_t v198 = -1 << *(unsigned char *)(v41 + 32),
                unint64_t v199 = v197 & ~v198,
                ((*(void *)(v46 + ((v199 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v199) & 1) != 0))
          {
            uint64_t v200 = ~v198;
            while (1)
            {
              uint64_t v201 = *(void *)(v41 + 48) + 24 * v199;
              if (*(unsigned char *)(v201 + 17) & 1) == 0 && *(void *)v201 == v288 && (*(unsigned char *)(v201 + 16)) {
                break;
              }
              unint64_t v199 = (v199 + 1) & v200;
              if (((*(void *)(v46 + ((v199 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v199) & 1) == 0) {
                goto LABEL_173;
              }
            }
          }
          else
          {
LABEL_173:
            sub_24872D030();
            sub_24872D040();
            sub_24872D040();
            sub_24872D040();
            uint64_t v203 = sub_24872D070();
            uint64_t v204 = -1 << *(unsigned char *)(v41 + 32);
            unint64_t v205 = v203 & ~v204;
            if ((*(void *)(v41 + 56 + ((v205 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v205))
            {
              uint64_t v206 = ~v204;
              while (1)
              {
                uint64_t v207 = *(void *)(v41 + 48) + 24 * v205;
                if (*(unsigned char *)(v207 + 17) & 1) == 0 && *(void *)v207 == v288 && (*(unsigned char *)(v207 + 16)) {
                  break;
                }
                unint64_t v205 = (v205 + 1) & v206;
                if (((*(void *)(v41 + 56 + ((v205 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v205) & 1) == 0) {
                  goto LABEL_220;
                }
              }
            }
            else
            {
LABEL_220:
              char v231 = swift_isUniquelyReferenced_nonNull_native();
              *(void *)&long long v299 = v41;
              sub_248713D5C(v40, 0, 1, v205, v231);
              swift_bridgeObjectRelease();
            }
          }
          break;
        }
      }
LABEL_221:
      *(void *)&long long v299 = v37;
      *((void *)&v299 + 1) = v39;
      sub_2486B7650(v42, v291, v293);
      uint64_t v232 = sub_24872C6C0();
      a6(v41, v42, v291, v293, v232, v233, a8);
      if (v9)
      {
        swift_bridgeObjectRelease();
        sub_2487027FC(a2);
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_2487027FC(a2);
      uint64_t v137 = v41;
      return sub_24870F970(v137);
  }
}

uint64_t sub_2486FEC08(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 < a2) {
    goto LABEL_204;
  }
  unint64_t v9 = a2;
  if (a2 < 0)
  {
LABEL_205:
    __break(1u);
LABEL_206:
    __break(1u);
    goto LABEL_207;
  }
  uint64_t v6 = a1;
  uint64_t v154 = v5;
  uint64_t v12 = *(void *)(v4 + 16);
  uint64_t v13 = *(void *)(v12 + 16);
  uint64_t v146 = v4;
  if (!v13) {
    goto LABEL_17;
  }
  long long v14 = *(_OWORD *)(v12 + 176);
  long long v176 = *(_OWORD *)(v12 + 160);
  long long v177 = v14;
  long long v15 = *(_OWORD *)(v12 + 208);
  long long v178 = *(_OWORD *)(v12 + 192);
  long long v179 = v15;
  long long v16 = *(_OWORD *)(v12 + 112);
  long long v172 = *(_OWORD *)(v12 + 96);
  long long v173 = v16;
  long long v17 = *(_OWORD *)(v12 + 144);
  long long v174 = *(_OWORD *)(v12 + 128);
  long long v175 = v17;
  long long v18 = *(_OWORD *)(v12 + 48);
  long long v168 = *(_OWORD *)(v12 + 32);
  long long v169 = v18;
  long long v19 = *(_OWORD *)(v12 + 80);
  long long v170 = *(_OWORD *)(v12 + 64);
  long long v171 = v19;
  for (uint64_t i = (long long *)(v12 + 224); ; i += 12)
  {
    --v13;
    if (!(void)v168 && (BYTE8(v168) & 2) != 0 && BYTE1(v177) == 5) {
      break;
    }
    if (!v13) {
      goto LABEL_17;
    }
    long long v21 = *i;
    long long v22 = i[1];
    long long v23 = i[3];
    long long v170 = i[2];
    long long v171 = v23;
    long long v168 = v21;
    long long v169 = v22;
    long long v24 = i[4];
    long long v25 = i[5];
    long long v26 = i[7];
    long long v174 = i[6];
    long long v175 = v26;
    long long v172 = v24;
    long long v173 = v25;
    long long v27 = i[8];
    long long v28 = i[9];
    long long v29 = i[11];
    long long v178 = i[10];
    long long v179 = v29;
    long long v176 = v27;
    long long v177 = v28;
  }
  if (BYTE8(v178) == 1)
  {
    unint64_t v8 = *((void *)&v177 + 1);
    unint64_t v7 = v178;
    uint64_t v143 = a1 + 32;
    uint64_t v30 = sub_248701D44(a1 + 32, a2, (2 * v11) | 1);
    uint64_t v4 = v31;
    sub_2486B76D8((uint64_t)&v168);
    sub_2486B7830();
    if (v4)
    {
      sub_2486C54F4();
      sub_2486C539C((uint64_t)&v168);
      uint64_t v30 = v11;
    }
    else
    {
      uint64_t v32 = v30 + 1;
      if (__OFADD__(v30, 1)) {
        goto LABEL_214;
      }
      if (v11 < v32) {
        goto LABEL_215;
      }
      if (v32 < (uint64_t)v9) {
        goto LABEL_216;
      }
      if (v32 != v11)
      {
        uint64_t v150 = v6;
        swift_bridgeObjectRetain();
        unint64_t v139 = v8;
        unint64_t v141 = v7;
        uint64_t v6 = v30 + 1;
        while (1)
        {
          if (v6 >= v11) {
            goto LABEL_208;
          }
          uint64_t v157 = v6;
          uint64_t v97 = v143 + (v6 << 6);
          unint64_t v98 = *(void *)(v97 + 16);
          if ((v98 & 0x6000000000000000) != 0x2000000000000000) {
            goto LABEL_220;
          }
          uint64_t v99 = *(void *)(v97 + 8);
          unint64_t v159 = *(void *)v97;
          uint64_t v6 = *(void *)(v97 + 40);
          uint64_t v100 = *(void *)(v97 + 48);
          int v101 = *(unsigned __int8 *)(v97 + 56);
          sub_24870285C();
          uint64_t v149 = v99;
          swift_bridgeObjectRetain();
          unint64_t v7 = sub_24872C860();
          sub_24872D030();
          sub_24872D040();
          sub_24872D040();
          LODWORD(v186) = v101;
          unint64_t v148 = v98;
          if (!v101) {
            sub_24872D040();
          }
          uint64_t v102 = v100;
          sub_24872D040();
          uint64_t v103 = sub_24872D070();
          uint64_t v104 = -1 << *(unsigned char *)(v7 + 32);
          unint64_t v8 = v103 & ~v104;
          int v105 = v186;
          if ((*(void *)(v7 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
          {
            uint64_t v106 = ~v104;
            unint64_t v107 = v159;
            uint64_t v4 = v102;
            unint64_t v10 = 24;
            while (1)
            {
              uint64_t v108 = *(void *)(v7 + 48) + 24 * v8;
              if ((*(unsigned char *)(v108 + 17) & 1) == 0 && *(void *)v108 == v6)
              {
                if (*(unsigned char *)(v108 + 16))
                {
                  if (v186) {
                    goto LABEL_123;
                  }
                }
                else if ((v186 & 1) == 0 && *(void *)(v108 + 8) == v4)
                {
LABEL_123:
                  unint64_t v10 = v139;
                  uint64_t v4 = v141;
                  uint64_t v109 = v157;
                  goto LABEL_145;
                }
              }
              unint64_t v8 = (v8 + 1) & v106;
              if (((*(void *)(v7 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
                goto LABEL_125;
              }
            }
          }
          uint64_t v4 = v102;
          unint64_t v10 = 24;
LABEL_125:
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v164 = v7;
          if (*(void *)(v7 + 24) <= *(void *)(v7 + 16))
          {
            if (isUniquelyReferenced_nonNull_native) {
              sub_2487132B8();
            }
            else {
              sub_24871474C();
            }
            unint64_t v7 = v164;
            sub_24872D030();
            sub_24872D040();
            sub_24872D040();
            if (!v105) {
              sub_24872D040();
            }
            sub_24872D040();
            uint64_t v111 = sub_24872D070();
            uint64_t v112 = -1 << *(unsigned char *)(v164 + 32);
            unint64_t v8 = v111 & ~v112;
            if ((*(void *)(v164 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
            {
              uint64_t v113 = ~v112;
              do
              {
                uint64_t v114 = *(void *)(v164 + 48) + 24 * v8;
                if ((*(unsigned char *)(v114 + 17) & 1) == 0 && *(void *)v114 == v6)
                {
                  if (*(unsigned char *)(v114 + 16))
                  {
                    if (v105) {
                      goto LABEL_221;
                    }
                  }
                  else if ((v105 & 1) == 0 && *(void *)(v114 + 8) == v4)
                  {
                    goto LABEL_221;
                  }
                }
                unint64_t v8 = (v8 + 1) & v113;
              }
              while (((*(void *)(v164 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
            }
          }
          else if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_24871423C();
            LOBYTE(v105) = v186;
            unint64_t v7 = v164;
          }
          *(void *)(v7 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v8;
          uint64_t v115 = *(void *)(v7 + 48) + 24 * v8;
          *(void *)uint64_t v115 = v6;
          *(void *)(v115 + 8) = v4;
          *(unsigned char *)(v115 + 16) = v105;
          *(unsigned char *)(v115 + 17) = 0;
          uint64_t v116 = *(void *)(v7 + 16);
          BOOL v75 = __OFADD__(v116, 1);
          uint64_t v117 = v116 + 1;
          if (v75) {
            goto LABEL_212;
          }
          *(void *)(v7 + 16) = v117;
          swift_bridgeObjectRelease();
          unint64_t v10 = v139;
          uint64_t v4 = v141;
          uint64_t v109 = v157;
          unint64_t v107 = v159;
LABEL_145:
          unint64_t v8 = v107;
          ((void (*)(unint64_t, void, void, uint64_t, unint64_t, uint64_t, void *))v10)(v7, 0, 0, 254, v107, v149, a4);
          if (v5) {
            break;
          }
          uint64_t v6 = v109 + 1;
          swift_bridgeObjectRelease();
          sub_2487026D8(v8, v149, v148);
          if (v6 == v11)
          {
            uint64_t v6 = v150;
            swift_bridgeObjectRelease();
            goto LABEL_148;
          }
        }
        swift_bridgeObjectRelease();
        sub_2486C54F4();
        swift_bridgeObjectRelease();
        sub_2487026D8(v8, v149, v148);
        return sub_2486C539C((uint64_t)&v168);
      }
LABEL_148:
      sub_2486C54F4();
      sub_2486C539C((uint64_t)&v168);
    }
    uint64_t v4 = v146;
    if (v30 < (uint64_t)v9) {
      goto LABEL_150;
    }
  }
  else
  {
LABEL_17:
    uint64_t v30 = v11;
    if (v11 < a2)
    {
LABEL_150:
      __break(1u);
      goto LABEL_151;
    }
  }
  if (v11 < v30) {
    goto LABEL_206;
  }
  uint64_t v11 = MEMORY[0x263F8EE78];
  unint64_t v8 = v30 - v9;
  if (v30 != v9)
  {
    if (v30 > (uint64_t)v9)
    {
      swift_bridgeObjectRetain();
      unint64_t v10 = v6 + (v9 << 6) + 48;
      do
      {
        if (*(unsigned char *)(v10 + 40) == 1)
        {
          uint64_t v6 = *(void *)(v10 - 8);
          unint64_t v36 = *(void *)v10;
          unint64_t v9 = *(void *)(v10 + 8);
          uint64_t v155 = *(void *)(v10 + 32);
          long long v158 = *(_OWORD *)(v10 + 16);
          uint64_t v186 = *(void *)(v10 - 16);
          sub_24870266C(v186, v6, v36);
          char v37 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&long long v168 = v11;
          if ((v37 & 1) == 0)
          {
            sub_2486B9CE0(0, *(void *)(v11 + 16) + 1, 1);
            uint64_t v11 = v168;
          }
          unint64_t v34 = *(void *)(v11 + 16);
          unint64_t v33 = *(void *)(v11 + 24);
          if (v34 >= v33 >> 1)
          {
            sub_2486B9CE0((char *)(v33 > 1), v34 + 1, 1);
            uint64_t v11 = v168;
          }
          *(void *)(v11 + 16) = v34 + 1;
          uint64_t v35 = v11 + (v34 << 6);
          *(void *)(v35 + 32) = v186;
          *(void *)(v35 + 40) = v6;
          *(void *)(v35 + 48) = v36;
          *(void *)(v35 + 56) = v9;
          *(_OWORD *)(v35 + 64) = v158;
          *(void *)(v35 + 80) = v155;
          *(unsigned char *)(v35 + 88) = 1;
        }
        v10 += 64;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease();
      uint64_t v4 = v146;
      goto LABEL_30;
    }
LABEL_207:
    __break(1u);
LABEL_208:
    __break(1u);
    while (1)
    {
      __break(1u);
LABEL_210:
      __break(1u);
LABEL_211:
      __break(1u);
LABEL_212:
      __break(1u);
LABEL_213:
      __break(1u);
LABEL_214:
      __break(1u);
LABEL_215:
      __break(1u);
LABEL_216:
      __break(1u);
LABEL_217:
      __break(1u);
LABEL_218:
      swift_unknownObjectRelease();
LABEL_107:
      sub_2486B99D4(v4, v11, v6, v10);
      uint64_t v11 = v96;
LABEL_157:
      uint64_t v186 = v8;
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a4[2] = v11;
      a4[3] = 0;
      a4[4] = MEMORY[0x263F8EE78];
      int64_t v120 = v166;
      int64_t v121 = v167 >> 1;
      if (v166 == v167 >> 1) {
        break;
      }
      unint64_t v8 = 24;
      unint64_t v151 = v7;
      while (v120 < v121)
      {
        uint64_t v6 = v9;
        uint64_t v122 = v165 + (v120 << 6);
        unint64_t v7 = *(void *)(v122 + 40);
        unint64_t v9 = *(void *)(v122 + 48);
        int v123 = *(unsigned __int8 *)(v122 + 56);
        uint64_t v166 = v120 + 1;
        if ((v7 & 0x8000000000000000) != 0) {
          goto LABEL_210;
        }
        if (v7 >= *(void *)(a3 + 16)) {
          goto LABEL_211;
        }
        int v124 = (uint64_t *)(a3 + 32 + 16 * v7);
        uint64_t v126 = *v124;
        uint64_t v125 = v124[1];
        sub_24870285C();
        swift_bridgeObjectRetain();
        uint64_t v11 = sub_24872C860();
        sub_24872D030();
        sub_24872D040();
        sub_24872D040();
        uint64_t v160 = v126;
        if (!v123) {
          sub_24872D040();
        }
        sub_24872D040();
        uint64_t v4 = (uint64_t)v162;
        uint64_t v127 = sub_24872D070();
        uint64_t v128 = -1 << *(unsigned char *)(v11 + 32);
        unint64_t v10 = v127 & ~v128;
        if ((*(void *)(v11 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
        {
          uint64_t v129 = ~v128;
          do
          {
            uint64_t v130 = *(void *)(v11 + 48) + 24 * v10;
            if ((*(unsigned char *)(v130 + 17) & 1) == 0 && *(void *)v130 == v7)
            {
              if (*(unsigned char *)(v130 + 16))
              {
                if (v123) {
                  goto LABEL_194;
                }
              }
              else if ((v123 & 1) == 0 && *(void *)(v130 + 8) == v9)
              {
                goto LABEL_194;
              }
            }
            unint64_t v10 = (v10 + 1) & v129;
          }
          while (((*(void *)(v11 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
        }
        int v131 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v161 = v11;
        if (*(void *)(v11 + 24) <= *(void *)(v11 + 16))
        {
          if (v131) {
            sub_2487132B8();
          }
          else {
            sub_24871474C();
          }
          uint64_t v11 = v161;
          sub_24872D030();
          sub_24872D040();
          sub_24872D040();
          if (!v123) {
            sub_24872D040();
          }
          sub_24872D040();
          uint64_t v4 = (uint64_t)v162;
          uint64_t v132 = sub_24872D070();
          uint64_t v133 = -1 << *(unsigned char *)(v11 + 32);
          unint64_t v10 = v132 & ~v133;
          if ((*(void *)(v11 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
          {
            uint64_t v134 = ~v133;
            do
            {
              uint64_t v135 = *(void *)(v11 + 48) + 24 * v10;
              if ((*(unsigned char *)(v135 + 17) & 1) == 0 && *(void *)v135 == v7)
              {
                if (*(unsigned char *)(v135 + 16))
                {
                  if (v123) {
                    goto LABEL_221;
                  }
                }
                else if ((v123 & 1) == 0 && *(void *)(v135 + 8) == v9)
                {
                  goto LABEL_221;
                }
              }
              unint64_t v10 = (v10 + 1) & v134;
            }
            while (((*(void *)(v11 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
          }
        }
        else if ((v131 & 1) == 0)
        {
          uint64_t v4 = (uint64_t)&v161;
          sub_24871423C();
          uint64_t v11 = v161;
        }
        *(void *)(v11 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v10;
        uint64_t v136 = *(void *)(v11 + 48) + 24 * v10;
        *(void *)uint64_t v136 = v7;
        *(void *)(v136 + 8) = v9;
        *(unsigned char *)(v136 + 16) = v123;
        *(unsigned char *)(v136 + 17) = 0;
        uint64_t v137 = *(void *)(v11 + 16);
        BOOL v75 = __OFADD__(v137, 1);
        uint64_t v138 = v137 + 1;
        if (v75) {
          goto LABEL_213;
        }
        *(void *)(v11 + 16) = v138;
        swift_bridgeObjectRelease();
LABEL_194:
        unint64_t v7 = v151;
        unint64_t v9 = v6;
        uint64_t v4 = v186;
        ((void (*)(uint64_t, void, void, uint64_t, uint64_t, uint64_t, void *))v6)(v11, 0, 0, 254, v160, v125, a4);
        if (v154)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_2486C54F4();
          sub_2486C539C((uint64_t)&v168);
          swift_unknownObjectRelease();
          return swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int64_t v120 = v166;
        int64_t v121 = v167 >> 1;
        if (v166 == v167 >> 1) {
          goto LABEL_196;
        }
      }
    }
LABEL_196:
    sub_2486C54F4();
    sub_2486C539C((uint64_t)&v168);
LABEL_197:
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
LABEL_30:
  uint64_t v38 = *(void *)(v11 + 16);
  unint64_t v164 = v11;
  uint64_t v165 = v11 + 32;
  uint64_t v166 = 0;
  unint64_t v167 = (2 * v38) | 1;
  if (!v38) {
    return swift_release();
  }
  uint64_t v39 = *(void *)(v4 + 16);
  if (!*(void *)(v39 + 16))
  {
    unint64_t v7 = MEMORY[0x263F8EE88];
    goto LABEL_97;
  }
  uint64_t v4 = v39 + 32;
  uint64_t v144 = *(void *)(v39 + 16);
  uint64_t v145 = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v40 = v4;
  uint64_t v41 = v144;
  uint64_t v42 = v145;
  unint64_t v43 = 0;
  unint64_t v7 = MEMORY[0x263F8EE88];
  uint64_t v11 = 24;
  uint64_t v140 = v4;
  while (1)
  {
    uint64_t v44 = (long long *)(v40 + 192 * v43);
    long long v45 = *v44;
    long long v46 = v44[1];
    long long v47 = v44[3];
    long long v170 = v44[2];
    long long v171 = v47;
    long long v168 = v45;
    long long v169 = v46;
    long long v48 = v44[4];
    long long v49 = v44[5];
    long long v50 = v44[7];
    long long v174 = v44[6];
    long long v175 = v50;
    long long v172 = v48;
    long long v173 = v49;
    long long v51 = v44[8];
    long long v52 = v44[9];
    long long v53 = v44[11];
    long long v178 = v44[10];
    long long v179 = v53;
    long long v176 = v51;
    long long v177 = v52;
    if (!(void)v168)
    {
      int v156 = BYTE1(v177);
      if ((BYTE1(v177) | 4) == 4) {
        break;
      }
    }
LABEL_34:
    if (++v43 == v41)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_96;
    }
    if (v43 >= *(void *)(v42 + 16)) {
      goto LABEL_203;
    }
  }
  unint64_t v142 = v43;
  if (BYTE8(v178) == 1)
  {
    uint64_t v4 = *((void *)&v177 + 1);
    char v147 = BYTE8(v168);
    sub_2486B76D8((uint64_t)&v168);
    uint64_t v186 = v4;
    sub_2486B7830();
    while (1)
    {
      sub_2486FFEFC(v156 == 4, &v164, (uint64_t)v180);
      sub_2486CDB94((uint64_t)v180, (uint64_t)v181, &qword_26931E568);
      if ((v182 & 0x7FFFFFFFFFFFFF3ELL) == 0x7FFFFFF3ELL) {
        break;
      }
      uint64_t v6 = v183;
      unint64_t v10 = v184;
      char v54 = v185;
      sub_2487028B0((uint64_t)v180);
      if (v6 < 0)
      {
        __break(1u);
LABEL_201:
        __break(1u);
LABEL_202:
        __break(1u);
LABEL_203:
        __break(1u);
LABEL_204:
        __break(1u);
        goto LABEL_205;
      }
      if ((unint64_t)v6 >= *(void *)(a3 + 16)) {
        goto LABEL_201;
      }
      unint64_t v8 = v54 & 1;
      uint64_t v55 = (uint64_t *)(a3 + 32 + 16 * v6);
      uint64_t v56 = *v55;
      uint64_t v57 = v55[1];
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FCB8);
      unint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_24872D630;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v10;
      unint64_t v58 = v10;
      *(_WORD *)(v9 + 48) = v8;
      swift_bridgeObjectRetain();
      unint64_t v10 = sub_248708EE8(v9);
      swift_setDeallocating();
      swift_deallocClassInstance();
      ((void (*)(unint64_t, void, void, uint64_t, uint64_t, uint64_t, void *))v186)(v10, 0, 0, 254, v56, v57, a4);
      if (v5)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2486C54F4();
        sub_2486C539C((uint64_t)&v168);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_197;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v7 + 16))
      {
        sub_24872D030();
        sub_24872D040();
        sub_24872D040();
        if (!v8) {
          sub_24872D040();
        }
        sub_24872D040();
        uint64_t v4 = (uint64_t)v162;
        uint64_t v59 = sub_24872D070();
        uint64_t v60 = -1 << *(unsigned char *)(v7 + 32);
        unint64_t v61 = v59 & ~v60;
        if ((*(void *)(v7 + 56 + ((v61 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v61))
        {
          uint64_t v62 = ~v60;
          do
          {
            uint64_t v63 = *(void *)(v7 + 48) + 24 * v61;
            if ((*(unsigned char *)(v63 + 17) & 1) == 0 && *(void *)v63 == v6)
            {
              if (*(unsigned char *)(v63 + 16))
              {
                if (v8) {
                  goto LABEL_40;
                }
              }
              else if (!v8 && *(void *)(v63 + 8) == v58)
              {
                goto LABEL_40;
              }
            }
            unint64_t v61 = (v61 + 1) & v62;
          }
          while (((*(void *)(v7 + 56 + ((v61 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v61) & 1) != 0);
        }
      }
      sub_24872D030();
      sub_24872D040();
      sub_24872D040();
      if (!v8) {
        sub_24872D040();
      }
      sub_24872D040();
      uint64_t v4 = (uint64_t)v162;
      uint64_t v64 = sub_24872D070();
      uint64_t v65 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v9 = v64 & ~v65;
      if ((*(void *)(v7 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
      {
        uint64_t v66 = ~v65;
        do
        {
          uint64_t v67 = *(void *)(v7 + 48) + 24 * v9;
          if ((*(unsigned char *)(v67 + 17) & 1) == 0 && *(void *)v67 == v6)
          {
            if (*(unsigned char *)(v67 + 16))
            {
              if (v8) {
                goto LABEL_40;
              }
            }
            else if (!v8 && *(void *)(v67 + 8) == v58)
            {
              goto LABEL_40;
            }
          }
          unint64_t v9 = (v9 + 1) & v66;
        }
        while (((*(void *)(v7 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
      }
      int v68 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v163 = v7;
      if (*(void *)(v7 + 24) <= *(void *)(v7 + 16))
      {
        if (v68) {
          sub_2487132B8();
        }
        else {
          sub_24871474C();
        }
        unint64_t v7 = v163;
        sub_24872D030();
        sub_24872D040();
        sub_24872D040();
        if (!v8) {
          sub_24872D040();
        }
        sub_24872D040();
        uint64_t v4 = (uint64_t)v162;
        uint64_t v69 = sub_24872D070();
        uint64_t v70 = -1 << *(unsigned char *)(v7 + 32);
        unint64_t v9 = v69 & ~v70;
        if ((*(void *)(v7 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
        {
          uint64_t v71 = ~v70;
          do
          {
            uint64_t v72 = *(void *)(v7 + 48) + 24 * v9;
            if ((*(unsigned char *)(v72 + 17) & 1) == 0 && *(void *)v72 == v6)
            {
              if (*(unsigned char *)(v72 + 16))
              {
                if (v8) {
                  goto LABEL_221;
                }
              }
              else if (!v8 && *(void *)(v72 + 8) == v58)
              {
                goto LABEL_221;
              }
            }
            unint64_t v9 = (v9 + 1) & v71;
          }
          while (((*(void *)(v7 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
        }
      }
      else if ((v68 & 1) == 0)
      {
        uint64_t v4 = (uint64_t)&v163;
        sub_24871423C();
        unint64_t v7 = v163;
      }
      *(void *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v9;
      uint64_t v73 = *(void *)(v7 + 48) + 24 * v9;
      *(void *)uint64_t v73 = v6;
      *(void *)(v73 + 8) = v58;
      *(unsigned char *)(v73 + 16) = v8;
      *(unsigned char *)(v73 + 17) = 0;
      uint64_t v74 = *(void *)(v7 + 16);
      BOOL v75 = __OFADD__(v74, 1);
      uint64_t v76 = v74 + 1;
      if (v75) {
        goto LABEL_202;
      }
      *(void *)(v7 + 16) = v76;
      swift_bridgeObjectRelease();
LABEL_40:
      if ((v147 & 2) == 0)
      {
        sub_2486C54F4();
        sub_2486C539C((uint64_t)&v168);
        uint64_t v41 = v144;
        uint64_t v42 = v145;
        uint64_t v40 = v140;
        unint64_t v43 = v142;
        goto LABEL_34;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2486C54F4();
    sub_2486C539C((uint64_t)&v168);
LABEL_96:
    uint64_t v4 = v146;
LABEL_97:
    uint64_t v78 = *(void *)(v4 + 16);
    uint64_t v79 = *(void *)(v78 + 16);
    if (v79)
    {
      long long v80 = *(_OWORD *)(v78 + 176);
      long long v176 = *(_OWORD *)(v78 + 160);
      long long v177 = v80;
      long long v81 = *(_OWORD *)(v78 + 208);
      long long v178 = *(_OWORD *)(v78 + 192);
      long long v179 = v81;
      long long v82 = *(_OWORD *)(v78 + 112);
      long long v172 = *(_OWORD *)(v78 + 96);
      long long v173 = v82;
      long long v83 = *(_OWORD *)(v78 + 144);
      long long v174 = *(_OWORD *)(v78 + 128);
      long long v175 = v83;
      long long v84 = *(_OWORD *)(v78 + 48);
      long long v168 = *(_OWORD *)(v78 + 32);
      long long v169 = v84;
      long long v85 = *(_OWORD *)(v78 + 80);
      long long v170 = *(_OWORD *)(v78 + 64);
      long long v171 = v85;
      for (int64_t j = (long long *)(v78 + 224); ; j += 12)
      {
        --v79;
        if (!(void)v168 && (BYTE8(v168) & 2) != 0 && BYTE1(v177) == 6) {
          break;
        }
        if (!v79) {
          goto LABEL_197;
        }
        long long v87 = *j;
        long long v88 = j[1];
        long long v89 = j[3];
        long long v170 = j[2];
        long long v171 = v89;
        long long v168 = v87;
        long long v169 = v88;
        long long v90 = j[4];
        long long v91 = j[5];
        long long v92 = j[7];
        long long v174 = j[6];
        long long v175 = v92;
        long long v172 = v90;
        long long v173 = v91;
        long long v93 = j[8];
        long long v94 = j[9];
        long long v95 = j[11];
        long long v178 = j[10];
        long long v179 = v95;
        long long v176 = v93;
        long long v177 = v94;
      }
      if (BYTE8(v178) == 1)
      {
        unint64_t v9 = *((void *)&v177 + 1);
        unint64_t v8 = v178;
        swift_beginAccess();
        uint64_t v4 = v164;
        uint64_t v11 = v165;
        uint64_t v6 = v166;
        unint64_t v10 = v167;
        if ((v167 & 1) == 0)
        {
          sub_2486B76D8((uint64_t)&v168);
          sub_2486B7830();
          swift_unknownObjectRetain();
          goto LABEL_107;
        }
LABEL_151:
        swift_unknownObjectRetain_n();
        sub_2486B76D8((uint64_t)&v168);
        sub_2486B7830();
        sub_24872CEE0();
        swift_unknownObjectRetain();
        uint64_t v118 = swift_dynamicCastClass();
        if (!v118)
        {
          swift_unknownObjectRelease();
          uint64_t v118 = MEMORY[0x263F8EE78];
        }
        uint64_t v119 = *(void *)(v118 + 16);
        swift_release();
        if (__OFSUB__(v10 >> 1, v6)) {
          goto LABEL_217;
        }
        if (v119 != (v10 >> 1) - v6) {
          goto LABEL_218;
        }
        uint64_t v11 = swift_dynamicCastClass();
        if (!v11)
        {
          swift_unknownObjectRelease();
          uint64_t v11 = MEMORY[0x263F8EE78];
        }
        goto LABEL_157;
      }
    }
    goto LABEL_197;
  }
  __break(1u);
LABEL_220:
  __break(1u);
LABEL_221:
  uint64_t result = sub_24872CF90();
  __break(1u);
  return result;
}

uint64_t sub_2486FFEFC@<X0>(char a1@<W0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = swift_beginAccess();
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3] >> 1;
  if (v7 <= v8) {
    uint64_t v9 = a2[3] >> 1;
  }
  else {
    uint64_t v9 = a2[2];
  }
  uint64_t v10 = (v7 << 6) | 0x38;
  while (1)
  {
    if (v8 == v7)
    {
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v17 = 0;
      char v18 = 0;
      long long v19 = 0uLL;
      unint64_t v15 = 0x7FFFFFF3ELL;
      goto LABEL_11;
    }
    if (v9 == v7) {
      break;
    }
    uint64_t v11 = (unsigned char *)(a2[1] + v10);
    uint64_t v12 = *((void *)v11 - 7);
    uint64_t v13 = *((void *)v11 - 6);
    unint64_t v15 = *((void *)v11 - 5);
    uint64_t v14 = *((void *)v11 - 4);
    long long v16 = *(_OWORD *)(v11 - 24);
    uint64_t v17 = *((void *)v11 - 1);
    char v18 = *v11;
    a2[2] = ++v7;
    if ((v15 & 0x6000000000000000) != 0x2000000000000000)
    {
      v10 += 64;
      if ((a1 & 1) == 0) {
        continue;
      }
    }
    long long v20 = v16;
    uint64_t result = sub_24870266C(v12, v13, v15);
    long long v19 = v20;
LABEL_11:
    *(void *)a3 = v12;
    *(void *)(a3 + 8) = v13;
    *(void *)(a3 + 16) = v15;
    *(void *)(a3 + 24) = v14;
    *(_OWORD *)(a3 + 32) = v19;
    *(void *)(a3 + 48) = v17;
    *(unsigned char *)(a3 + 56) = v18;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_248700020@<X0>(uint64_t a1@<X8>)
{
  void (*v37)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  _OWORD *v55;
  long long v56;
  long long v57;
  long long v58;
  long long v59;
  long long v60;
  long long v61;
  long long v62;
  long long v63;
  long long v64;
  void (*v65)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  long long *v67;
  long long v68;
  long long v69;
  long long v70;
  long long v71;
  long long v72;
  long long v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  BOOL v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  long long v129;
  uint64_t v130;
  long long v131;
  long long v132;
  long long v133;
  long long v134;
  long long v135;
  long long v136;
  long long v137;
  long long v138;
  long long v139;
  long long v140;
  long long v141;
  long long v142;
  long long v143;
  long long v144;
  long long v145;
  long long v146;
  long long v147;
  long long v148;
  long long v149;
  long long v150;
  long long v151;
  long long v152;
  long long v153;
  long long v154;
  long long v155;
  uint64_t v156;
  long long v157;
  long long v158;
  unint64_t v159;
  uint64_t v160[8];

  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[6];
  uint64_t v122 = v1[5];
  uint64_t v7 = *v1;
  uint64_t v8 = v4[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (sub_2486B94C8(v7, v8))
  {
    int v9 = 1;
  }
  else
  {
    uint64_t v10 = v4[2];
    uint64_t v11 = *(void *)(v10 + 16);
    if (v11)
    {
      uint64_t v12 = v11 - 1;
      uint64_t v13 = (unsigned char *)(v10 + 177);
      do
      {
        uint64_t v14 = v12;
        int v9 = (*(void *)(v13 - 145) == 0) & (*(v13 - 137) >> 1);
        if (*v13 != 4) {
          int v9 = 0;
        }
        if (v9) {
          break;
        }
        --v12;
        v13 += 192;
      }
      while (v14);
    }
    else
    {
      int v9 = 0;
    }
  }
  int v124 = v9;
  unint64_t v15 = MEMORY[0x263F8EE78];
  *(void *)&uint64_t v157 = sub_2486CE0EC(MEMORY[0x263F8EE78]);
  *((void *)&v157 + 1) = v6;
  long long v158 = v15;
  unint64_t v159 = v15;
  v160[7] = MEMORY[0x263F8EE88];
  uint64_t v16 = v4[2];
  swift_bridgeObjectRetain();
  sub_2486FC994((uint64_t)&v157, v16);
  uint64_t v17 = v3;
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    v4[4] = v5;
    v4[5] = v122;
    v4[6] = v6;
    return result;
  }
  uint64_t v19 = *(void *)(v5 + 16);
  if (v19 < v122) {
    goto LABEL_117;
  }
  if ((v122 & 0x8000000000000000) == 0)
  {
    if (v122 == v19)
    {
LABEL_16:
      *(void *)&uint64_t v144 = v5;
      *((void *)&v144 + 1) = v122;
      *(void *)&uint64_t v145 = v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v20 = swift_bridgeObjectRetain();
      sub_248706008(v20);
      swift_bridgeObjectRelease_n();
      uint64_t v21 = v6;
      sub_2486FEC08(v144, *((uint64_t *)&v144 + 1), v145, &v157);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v107 = v159;
      uint64_t v129 = v157;
      int v131 = v158;
      v4[4] = v5;
      v4[5] = v122;
      v4[6] = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *(_OWORD *)a1 = v129;
      *(_OWORD *)(a1 + 16) = v131;
      *(void *)(a1 + 32) = v107;
      return result;
    }
    uint64_t v22 = v122;
    uint64_t v23 = v5;
    int v123 = v6;
    uint64_t v24 = MEMORY[0x263F8EE88];
    int64_t v121 = v5;
    uint64_t v117 = v4;
    while (1)
    {
      if (v22 >= (unint64_t)v19)
      {
        __break(1u);
LABEL_115:
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
        goto LABEL_118;
      }
      uint64_t v130 = v17;
      uint64_t v25 = v23 + (v22 << 6);
      uint64_t v27 = *(void *)(v25 + 32);
      uint64_t v26 = *(void *)(v25 + 40);
      unint64_t v28 = *(void *)(v25 + 48);
      uint64_t v29 = *(void *)(v25 + 56);
      uint64_t v30 = *(void *)(v25 + 64);
      unint64_t v31 = *(void *)(v25 + 72);
      uint64_t v32 = *(void *)(v25 + 80);
      uint64_t v33 = *(unsigned __int8 *)(v25 + 88);
      v4[5] = v22 + 1;
      int v156 = v24;
      uint64_t v34 = (v28 >> 61) & 3;
      if (v34) {
        break;
      }
      int64_t v120 = v32;
      v160[0] = v27;
      v160[1] = v26;
      v160[2] = v28;
      v160[3] = v29;
      v160[4] = v30;
      long long v46 = v4[2];
      long long v47 = v4[3];
      long long v48 = *(void *)(v47 + 16);
      long long v49 = v28;
      uint64_t v127 = v29;
      uint64_t v128 = v30;
      sub_24870266C(v27, v26, v28);
      if (v48)
      {
        sub_2486B7650(v27, v26, v49);
        long long v50 = sub_248710538(v27, v26, v49);
        if (v51)
        {
          long long v52 = v33;
          long long v53 = *(void *)(*(void *)(v47 + 56) + 8 * v50);
          char v54 = v49;
          sub_2486B7668(v27, v26, v49);
          if ((v53 & 0x8000000000000000) != 0) {
            goto LABEL_119;
          }
          if (v53 >= *(void *)(v46 + 16)) {
            goto LABEL_120;
          }
          uint64_t v55 = (_OWORD *)(v46 + 192 * v53);
          uint64_t v56 = v55[2];
          uint64_t v57 = v55[3];
          unint64_t v58 = v55[5];
          uint64_t v146 = v55[4];
          char v147 = v58;
          uint64_t v144 = v56;
          uint64_t v145 = v57;
          uint64_t v59 = v55[6];
          uint64_t v60 = v55[7];
          unint64_t v61 = v55[9];
          uint64_t v150 = v55[8];
          unint64_t v151 = v61;
          unint64_t v148 = v59;
          uint64_t v149 = v60;
          uint64_t v62 = v55[10];
          uint64_t v63 = v55[11];
          uint64_t v64 = v55[13];
          uint64_t v154 = v55[12];
          uint64_t v155 = v64;
          uint64_t v152 = v62;
          uint64_t v153 = v63;
          uint64_t v65 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*((void *)&v63 + 1);
          uint64_t v66 = v154;
          if (BYTE8(v154))
          {
            uint64_t v67 = v55 + 2;
            int v68 = v67[9];
            uint64_t v140 = v67[8];
            unint64_t v141 = v68;
            uint64_t v69 = v67[11];
            unint64_t v142 = v67[10];
            uint64_t v143 = v69;
            uint64_t v70 = v67[5];
            uint64_t v136 = v67[4];
            uint64_t v137 = v70;
            uint64_t v71 = v67[7];
            uint64_t v138 = v67[6];
            unint64_t v139 = v71;
            uint64_t v72 = v67[1];
            uint64_t v132 = *v67;
            uint64_t v133 = v72;
            uint64_t v73 = v67[3];
            uint64_t v134 = v67[2];
            uint64_t v135 = v73;
            sub_2486B76D8((uint64_t)&v144);
            sub_2486B7830();
            sub_2486FCA98(&v132, v160, v31, v120, v52, v65, v66, (uint64_t)&v157);
            uint64_t v17 = v130;
            uint64_t v6 = v123;
            sub_2487026D8(v27, v26, v54);
            sub_2486C539C((uint64_t)&v144);
            sub_2486C54F4();
            uint64_t v5 = v121;
          }
          else
          {
            uint64_t v126 = v54;
            if ((v54 & 0x8000000000000000) != 0)
            {
              sub_2486B76D8((uint64_t)&v144);
              sub_2486B7830();
              sub_2486B7650(v27, v26, v54);
              swift_bridgeObjectRetain();
              sub_2487026D8(v27, v26, v54);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_2486B4DD4();
              swift_allocError();
              *(void *)uint64_t v114 = v31;
              *(void *)(v114 + 8) = v120;
              *(void *)(v114 + 16) = v52;
              *(void *)(v114 + 24) = v27;
              *(void *)(v114 + 32) = v26;
              *(void *)(v114 + 40) = v54;
              *(void *)(v114 + 48) = v127;
              *(void *)(v114 + 56) = v128;
              *(void *)(v114 + 64) = 0;
              *(void *)(v114 + 72) = 0;
              *(unsigned char *)(v114 + 80) = 8;
              swift_willThrow();
              sub_2486C54F4();
              sub_2486C539C((uint64_t)&v144);
              uint64_t v115 = swift_bridgeObjectRetain();
              sub_248706008(v115);
              swift_bridgeObjectRelease();
              uint64_t v116 = swift_bridgeObjectRetain();
              sub_24870F970(v116);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v4[4] = v121;
              v4[5] = v122;
              v4[6] = v123;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return swift_bridgeObjectRelease();
            }
            __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FCB8);
            long long v80 = swift_allocObject();
            *(_OWORD *)(v80 + 16) = xmmword_24872D630;
            *(void *)(v80 + 32) = v31;
            *(void *)(v80 + 40) = v120;
            long long v81 = v52;
            *(unsigned char *)(v80 + 48) = v52;
            *(unsigned char *)(v80 + 49) = 0;
            sub_2486B76D8((uint64_t)&v144);
            sub_2486B7830();
            long long v82 = sub_248708EE8(v80);
            swift_setDeallocating();
            swift_deallocClassInstance();
            ((void (*)(uint64_t, uint64_t, uint64_t, unint64_t, long long *))v65)(v82, v27, v26, v126, &v157);
            sub_2487026D8(v27, v26, v126);
            swift_bridgeObjectRelease();
            uint64_t v6 = v123;
            uint64_t v5 = v121;
            if (*(void *)(MEMORY[0x263F8EE88] + 16))
            {
              sub_24872D030();
              sub_24872D040();
              sub_24872D040();
              if (!v81) {
                sub_24872D040();
              }
              sub_24872D040();
              long long v83 = sub_24872D070();
              long long v84 = -1 << *(unsigned char *)(MEMORY[0x263F8EE88] + 32);
              long long v85 = v83 & ~v84;
              if ((*(void *)(MEMORY[0x263F8EE88] + ((v85 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v85))
              {
                uint64_t v86 = ~v84;
                do
                {
                  long long v87 = *(void *)(MEMORY[0x263F8EE88] + 48) + 24 * v85;
                  if ((*(unsigned char *)(v87 + 17) & 1) == 0 && *(void *)v87 == v31)
                  {
                    if (*(unsigned char *)(v87 + 16))
                    {
                      if (v81) {
                        goto LABEL_80;
                      }
                    }
                    else if ((v81 & 1) == 0 && *(void *)(v87 + 8) == v120)
                    {
LABEL_80:
                      sub_2486C539C((uint64_t)&v144);
                      sub_2486C54F4();
                      goto LABEL_103;
                    }
                  }
                  long long v85 = (v85 + 1) & v86;
                }
                while (((*(void *)(MEMORY[0x263F8EE88] + ((v85 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v85) & 1) != 0);
              }
            }
            sub_24872D030();
            sub_24872D040();
            sub_24872D040();
            if (!v81) {
              sub_24872D040();
            }
            sub_24872D040();
            long long v88 = sub_24872D070();
            long long v89 = MEMORY[0x263F8EE88];
            long long v90 = -1 << *(unsigned char *)(MEMORY[0x263F8EE88] + 32);
            long long v91 = v88 & ~v90;
            if ((*(void *)(MEMORY[0x263F8EE88] + ((v91 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v91))
            {
              long long v92 = ~v90;
              do
              {
                long long v93 = *(void *)(MEMORY[0x263F8EE88] + 48) + 24 * v91;
                if ((*(unsigned char *)(v93 + 17) & 1) == 0 && *(void *)v93 == v31)
                {
                  if (*(unsigned char *)(v93 + 16))
                  {
                    if (v81) {
                      goto LABEL_80;
                    }
                  }
                  else if ((v81 & 1) == 0 && *(void *)(v93 + 8) == v120)
                  {
                    goto LABEL_80;
                  }
                }
                long long v91 = (v91 + 1) & v92;
              }
              while (((*(void *)(MEMORY[0x263F8EE88] + ((v91 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v91) & 1) != 0);
            }
            int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            if (*(void *)(v89 + 24) <= *(void *)(v89 + 16))
            {
              if (isUniquelyReferenced_nonNull_native) {
                sub_2487132B8();
              }
              else {
                sub_24871474C();
              }
              uint64_t v96 = v89;
              sub_24872D030();
              sub_24872D040();
              sub_24872D040();
              if (!v81) {
                sub_24872D040();
              }
              sub_24872D040();
              uint64_t v97 = sub_24872D070();
              unint64_t v98 = -1 << *(unsigned char *)(v89 + 32);
              long long v91 = v97 & ~v98;
              if ((*(void *)(v89 + 56 + ((v91 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v91))
              {
                uint64_t v99 = ~v98;
                long long v95 = v120;
                while (1)
                {
                  uint64_t v100 = *(void *)(v89 + 48) + 24 * v91;
                  if ((*(unsigned char *)(v100 + 17) & 1) == 0 && *(void *)v100 == v31)
                  {
                    if (*(unsigned char *)(v100 + 16))
                    {
                      if (v81) {
                        goto LABEL_122;
                      }
                    }
                    else if ((v81 & 1) == 0 && *(void *)(v100 + 8) == v120)
                    {
                      goto LABEL_122;
                    }
                  }
                  long long v91 = (v91 + 1) & v99;
                  if (((*(void *)(v89 + 56 + ((v91 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v91) & 1) == 0) {
                    goto LABEL_101;
                  }
                }
              }
              long long v95 = v120;
            }
            else
            {
              long long v95 = v120;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_24871423C();
                long long v95 = v120;
              }
              uint64_t v96 = v89;
            }
LABEL_101:
            *(void *)(v96 + ((v91 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v91;
            int v101 = *(void *)(v96 + 48) + 24 * v91;
            *(void *)int v101 = v31;
            *(void *)(v101 + 8) = v95;
            *(unsigned char *)(v101 + 16) = v81;
            *(unsigned char *)(v101 + 17) = 0;
            uint64_t v102 = *(void *)(v96 + 16);
            uint64_t v103 = __OFADD__(v102, 1);
            uint64_t v104 = v102 + 1;
            if (v103) {
              goto LABEL_121;
            }
            *(void *)(v96 + 16) = v104;
            int v156 = v96;
            swift_bridgeObjectRelease();
            sub_2486C539C((uint64_t)&v144);
            sub_2486C54F4();
            uint64_t v6 = v123;
LABEL_103:
            uint64_t v17 = v130;
          }
LABEL_104:
          int v105 = swift_bridgeObjectRetain();
          sub_248706008(v105);
          swift_bridgeObjectRelease();
          uint64_t v106 = swift_bridgeObjectRetain();
          sub_24870F970(v106);
          swift_bridgeObjectRelease();
          goto LABEL_105;
        }
        sub_2486B7668(v27, v26, v49);
      }
      if (v124)
      {
        uint64_t v6 = v123;
        uint64_t v17 = v130;
        if ((v49 & 0x8000000000000080) == 0x80)
        {
          sub_2486B7650(v27, v26, v49);
          uint64_t v74 = sub_2486FB9D4();
          sub_2487026D8(v27, v26, v49);
          BOOL v75 = v49;
        }
        else
        {
          BOOL v75 = v49;
          uint64_t v74 = MEMORY[0x263F8EE78];
        }
        sub_2487026D8(v27, v26, v75);
        uint64_t v78 = *(void *)(v74 + 16);
        swift_bridgeObjectRelease();
        if (!v78)
        {
          uint64_t v110 = swift_bridgeObjectRetain();
          sub_248706008(v110);
          swift_bridgeObjectRelease();
          uint64_t v111 = swift_bridgeObjectRetain();
          sub_24870F970(v111);
          swift_bridgeObjectRelease();
          uint64_t v5 = v121;
          goto LABEL_16;
        }
      }
      else
      {
        sub_2487026D8(v27, v26, v49);
        uint64_t v6 = v123;
        uint64_t v17 = v130;
      }
      uint64_t v24 = MEMORY[0x263F8EE88];
      uint64_t v5 = v121;
      uint64_t v79 = swift_bridgeObjectRetain();
      sub_248706008(v79);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24870F970(MEMORY[0x263F8EE88]);
      swift_bridgeObjectRelease();
LABEL_106:
      uint64_t v23 = v4[4];
      uint64_t v22 = v4[5];
      uint64_t v19 = *(void *)(v23 + 16);
      if (v19 < v22) {
        goto LABEL_115;
      }
      if (v22 < 0) {
        goto LABEL_116;
      }
      if (v22 == v19) {
        goto LABEL_16;
      }
    }
    if (v34 != 1) {
      goto LABEL_103;
    }
    uint64_t v35 = *v4;
    uint64_t v36 = v4[1];
    char v37 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v36 + 16);
    uint64_t v125 = v28;
    sub_24870266C(v27, v26, v28);
    uint64_t v119 = v36;
    v37(&v132, v35, v36);
    uint64_t v150 = v138;
    unint64_t v151 = v139;
    *(void *)&uint64_t v152 = v140;
    uint64_t v146 = v134;
    char v147 = v135;
    unint64_t v148 = v136;
    uint64_t v149 = v137;
    uint64_t v144 = v132;
    uint64_t v145 = v133;
    uint64_t v38 = *((void *)&v138 + 1);
    swift_bridgeObjectRetain();
    sub_2486BAFC4((uint64_t)&v144);
    uint64_t v39 = *(void *)(v38 + 16);
    if (!v39)
    {
      swift_bridgeObjectRelease();
LABEL_37:
      sub_2487026D8(v27, v26, v125);
      uint64_t v6 = v123;
      uint64_t v17 = v130;
      if (v124)
      {
LABEL_110:
        uint64_t v108 = swift_bridgeObjectRetain();
        sub_248706008(v108);
        swift_bridgeObjectRelease();
        uint64_t v109 = swift_bridgeObjectRetain();
        sub_24870F970(v109);
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      goto LABEL_104;
    }
    swift_bridgeObjectRetain();
    uint64_t v40 = (uint64_t *)(v38 + 40);
    while (1)
    {
      uint64_t v41 = *(v40 - 1);
      uint64_t v42 = *v40;
      if ((*(uint64_t (**)(uint64_t, uint64_t))(*v40 + 24))(v41, *v40) == v27 && v26 == v43)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        goto LABEL_46;
      }
      long long v45 = sub_24872CEB0();
      swift_bridgeObjectRelease();
      if (v45) {
        break;
      }
      v40 += 2;
      if (!--v39)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v5 = v121;
        uint64_t v4 = v117;
        goto LABEL_37;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_46:
    sub_2487026D8(v27, v26, v125);
    uint64_t v17 = v130;
    if ((sub_2486B9378(v41, v42) & 1) != 0 || (sub_2486B94C8(v35, v119) & 1) == 0)
    {
      if (sub_2486B9378(v41, v42))
      {
        uint64_t v112 = swift_bridgeObjectRetain();
        sub_248706008(v112);
        swift_bridgeObjectRelease();
        uint64_t v113 = swift_bridgeObjectRetain();
        sub_24870F970(v113);
        swift_bridgeObjectRelease();
        uint64_t v5 = v121;
        uint64_t v4 = v117;
        uint64_t v6 = v123;
        goto LABEL_16;
      }
      uint64_t v5 = v121;
      uint64_t v4 = v117;
      uint64_t v6 = v123;
      if (v124) {
        goto LABEL_110;
      }
      goto LABEL_104;
    }
    uint64_t v76 = swift_bridgeObjectRetain();
    sub_248706008(v76);
    swift_bridgeObjectRelease();
    uint64_t v77 = swift_bridgeObjectRetain();
    sub_24870F970(v77);
    swift_bridgeObjectRelease();
    uint64_t v5 = v121;
    uint64_t v4 = v117;
    uint64_t v6 = v123;
LABEL_105:
    uint64_t v24 = MEMORY[0x263F8EE88];
    goto LABEL_106;
  }
LABEL_118:
  __break(1u);
LABEL_119:
  __break(1u);
LABEL_120:
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  uint64_t result = sub_24872CF90();
  __break(1u);
  return result;
}

uint64_t sub_2487010E0(char **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_248701D30((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  uint64_t result = sub_24870114C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_24870114C(uint64_t *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_24872CDD0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_169;
    }
    if (v3) {
      return sub_248701894(0, v3, 1, v2);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_168;
  }
  uint64_t v6 = result;
  if (v3 <= 1)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    uint64_t v100 = (char *)(MEMORY[0x263F8EE78] + 32);
    uint64_t v96 = MEMORY[0x263F8EE78];
    if (v3 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x263F8EE78] + 16);
      if (v11 < 2) {
        goto LABEL_146;
      }
      goto LABEL_134;
    }
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t result = sub_24872C7D0();
    *(void *)(result + 16) = v7;
    uint64_t v96 = result;
    uint64_t v100 = (char *)(result + 32);
  }
  uint64_t v9 = 0;
  long long v95 = v2;
  uint64_t v10 = *v2;
  uint64_t v8 = MEMORY[0x263F8EE78];
  uint64_t v97 = v6;
  uint64_t v98 = v3;
  while (2)
  {
    uint64_t v12 = v9 + 1;
    if (v9 + 1 >= v3) {
      goto LABEL_53;
    }
    uint64_t v13 = v10 + 24 * v12;
    if (*(unsigned char *)(v13 + 17)) {
      goto LABEL_17;
    }
    uint64_t v16 = v10 + 24 * v9;
    if ((*(unsigned char *)(v16 + 17) & 1) == 0 && *(void *)v13 >= *(void *)v16)
    {
      if (*(void *)v13 == *(void *)v16)
      {
        if (*(unsigned char *)(v13 + 16))
        {
          if ((*(unsigned char *)(v16 + 16) & 1) == 0) {
            goto LABEL_21;
          }
        }
        else if ((*(unsigned char *)(v16 + 16) & 1) == 0 && *(void *)(v13 + 8) < *(void *)(v16 + 8))
        {
          goto LABEL_21;
        }
      }
LABEL_17:
      uint64_t v14 = v9 + 2;
      if (v9 + 2 >= v3) {
        goto LABEL_52;
      }
      int v15 = 0;
      goto LABEL_23;
    }
LABEL_21:
    uint64_t v14 = v9 + 2;
    if (v9 + 2 >= v3) {
      goto LABEL_46;
    }
    int v15 = 1;
LABEL_23:
    if (v3 <= v14 + 1) {
      uint64_t v17 = v14 + 1;
    }
    else {
      uint64_t v17 = v3;
    }
    char v18 = (unsigned char *)(v10 + 17 + 24 * v14);
    do
    {
      if ((*v18 & 1) == 0)
      {
        uint64_t v19 = v10 + 24 * v12;
        if ((*(unsigned char *)(v19 + 17) & 1) != 0 || (uint64_t v20 = *(void *)(v18 - 17), v20 < *(void *)v19))
        {
LABEL_32:
          if ((v15 & 1) == 0) {
            goto LABEL_52;
          }
          goto LABEL_28;
        }
        if (v20 == *(void *)v19)
        {
          if (*(v18 - 1))
          {
            if ((*(unsigned char *)(v19 + 16) & 1) == 0) {
              goto LABEL_32;
            }
          }
          else if ((*(unsigned char *)(v19 + 16) & 1) == 0 && *(void *)(v18 - 9) < *(void *)(v19 + 8))
          {
            if (!v15) {
              goto LABEL_52;
            }
            goto LABEL_28;
          }
        }
      }
      if (v15)
      {
        uint64_t v17 = v14;
        goto LABEL_45;
      }
LABEL_28:
      uint64_t v12 = v14;
      v18 += 24;
      ++v14;
    }
    while (v14 < v3);
    if (!v15) {
      goto LABEL_63;
    }
LABEL_45:
    uint64_t v14 = v17;
    if (v17 < v9) {
      goto LABEL_170;
    }
LABEL_46:
    if (v9 < v14)
    {
      uint64_t v21 = 24 * v14;
      uint64_t v22 = 24 * v9;
      uint64_t v23 = v14;
      uint64_t v24 = v9;
      do
      {
        if (v24 != --v23)
        {
          if (!v10) {
            goto LABEL_175;
          }
          uint64_t v25 = v10 + v22;
          uint64_t v26 = v10 + v21;
          char v27 = *(unsigned char *)(v10 + v22 + 16);
          char v28 = *(unsigned char *)(v10 + v22 + 17);
          long long v29 = *(_OWORD *)(v10 + v22);
          uint64_t v30 = *(void *)(v10 + v21 - 8);
          *(_OWORD *)uint64_t v25 = *(_OWORD *)(v10 + v21 - 24);
          *(void *)(v25 + 16) = v30;
          *(_OWORD *)(v26 - 24) = v29;
          *(unsigned char *)(v26 - 8) = v27;
          *(unsigned char *)(v26 - 7) = v28;
        }
        ++v24;
        v21 -= 24;
        v22 += 24;
      }
      while (v24 < v23);
    }
LABEL_52:
    uint64_t v12 = v14;
LABEL_53:
    if (v12 >= v3) {
      goto LABEL_62;
    }
    if (__OFSUB__(v12, v9)) {
      goto LABEL_167;
    }
    if (v12 - v9 >= v6)
    {
LABEL_62:
      uint64_t v17 = v12;
      goto LABEL_63;
    }
    if (__OFADD__(v9, v6)) {
      goto LABEL_171;
    }
    if (v9 + v6 >= v3) {
      uint64_t v17 = v3;
    }
    else {
      uint64_t v17 = v9 + v6;
    }
    if (v17 >= v9)
    {
      if (v12 == v17) {
        goto LABEL_62;
      }
      uint64_t v80 = v10 - 24 + 24 * v12;
      do
      {
        uint64_t v81 = v9;
        uint64_t v82 = v80;
        do
        {
          if (*(unsigned char *)(v82 + 41)) {
            break;
          }
          uint64_t v83 = v82 + 24;
          uint64_t v84 = *(void *)(v82 + 24);
          uint64_t v85 = *(void *)(v82 + 32);
          char v86 = *(unsigned char *)(v82 + 40);
          if ((*(unsigned char *)(v82 + 17) & 1) == 0 && v84 >= *(void *)v82)
          {
            if (v84 != *(void *)v82) {
              break;
            }
            if (*(unsigned char *)(v82 + 40))
            {
              if (*(unsigned char *)(v82 + 16)) {
                break;
              }
            }
            else if ((*(unsigned char *)(v82 + 16) & 1) != 0 || v85 >= *(void *)(v82 + 8))
            {
              break;
            }
          }
          if (!v10) {
            goto LABEL_173;
          }
          long long v87 = *(_OWORD *)v82;
          uint64_t v88 = *(void *)(v82 + 16);
          *(void *)uint64_t v82 = v84;
          *(void *)(v82 + 8) = v85;
          *(unsigned char *)(v82 + 16) = v86;
          *(unsigned char *)(v82 + 17) = 0;
          v82 -= 24;
          *(_OWORD *)uint64_t v83 = v87;
          *(void *)(v83 + 16) = v88;
          ++v81;
        }
        while (v12 != v81);
        ++v12;
        v80 += 24;
      }
      while (v12 != v17);
LABEL_63:
      if (v17 < v9) {
        goto LABEL_162;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_248701C0C(0, *(void *)(v8 + 16) + 1, 1, (char *)v8);
        uint64_t v8 = result;
      }
      unint64_t v32 = *(void *)(v8 + 16);
      unint64_t v31 = *(void *)(v8 + 24);
      unint64_t v11 = v32 + 1;
      uint64_t v99 = v17;
      if (v32 >= v31 >> 1)
      {
        uint64_t result = (uint64_t)sub_248701C0C((char *)(v31 > 1), v32 + 1, 1, (char *)v8);
        uint64_t v8 = result;
      }
      *(void *)(v8 + 16) = v11;
      uint64_t v33 = v8 + 32;
      uint64_t v34 = (uint64_t *)(v8 + 32 + 16 * v32);
      *uint64_t v34 = v9;
      v34[1] = v99;
      if (v32)
      {
        while (2)
        {
          unint64_t v35 = v11 - 1;
          if (v11 >= 4)
          {
            unint64_t v40 = v33 + 16 * v11;
            uint64_t v41 = *(void *)(v40 - 64);
            uint64_t v42 = *(void *)(v40 - 56);
            BOOL v46 = __OFSUB__(v42, v41);
            uint64_t v43 = v42 - v41;
            if (v46) {
              goto LABEL_151;
            }
            uint64_t v45 = *(void *)(v40 - 48);
            uint64_t v44 = *(void *)(v40 - 40);
            BOOL v46 = __OFSUB__(v44, v45);
            uint64_t v38 = v44 - v45;
            char v39 = v46;
            if (v46) {
              goto LABEL_152;
            }
            unint64_t v47 = v11 - 2;
            long long v48 = (uint64_t *)(v33 + 16 * (v11 - 2));
            uint64_t v50 = *v48;
            uint64_t v49 = v48[1];
            BOOL v46 = __OFSUB__(v49, v50);
            uint64_t v51 = v49 - v50;
            if (v46) {
              goto LABEL_153;
            }
            BOOL v46 = __OFADD__(v38, v51);
            uint64_t v52 = v38 + v51;
            if (v46) {
              goto LABEL_155;
            }
            if (v52 >= v43)
            {
              uint64_t v70 = (uint64_t *)(v33 + 16 * v35);
              uint64_t v72 = *v70;
              uint64_t v71 = v70[1];
              BOOL v46 = __OFSUB__(v71, v72);
              uint64_t v73 = v71 - v72;
              if (v46) {
                goto LABEL_161;
              }
              BOOL v63 = v38 < v73;
            }
            else
            {
LABEL_82:
              if (v39) {
                goto LABEL_154;
              }
              unint64_t v47 = v11 - 2;
              long long v53 = (uint64_t *)(v33 + 16 * (v11 - 2));
              uint64_t v55 = *v53;
              uint64_t v54 = v53[1];
              BOOL v56 = __OFSUB__(v54, v55);
              uint64_t v57 = v54 - v55;
              char v58 = v56;
              if (v56) {
                goto LABEL_156;
              }
              uint64_t v59 = (uint64_t *)(v33 + 16 * v35);
              uint64_t v61 = *v59;
              uint64_t v60 = v59[1];
              BOOL v46 = __OFSUB__(v60, v61);
              uint64_t v62 = v60 - v61;
              if (v46) {
                goto LABEL_158;
              }
              if (__OFADD__(v57, v62)) {
                goto LABEL_160;
              }
              if (v57 + v62 < v38) {
                goto LABEL_94;
              }
              BOOL v63 = v38 < v62;
            }
            if (v63) {
              unint64_t v35 = v47;
            }
          }
          else
          {
            if (v11 == 3)
            {
              uint64_t v37 = *(void *)(v8 + 32);
              uint64_t v36 = *(void *)(v8 + 40);
              BOOL v46 = __OFSUB__(v36, v37);
              uint64_t v38 = v36 - v37;
              char v39 = v46;
              goto LABEL_82;
            }
            uint64_t v64 = *(void *)(v8 + 32);
            uint64_t v65 = *(void *)(v8 + 40);
            BOOL v46 = __OFSUB__(v65, v64);
            uint64_t v57 = v65 - v64;
            char v58 = v46;
LABEL_94:
            if (v58) {
              goto LABEL_157;
            }
            uint64_t v66 = (uint64_t *)(v33 + 16 * v35);
            uint64_t v68 = *v66;
            uint64_t v67 = v66[1];
            BOOL v46 = __OFSUB__(v67, v68);
            uint64_t v69 = v67 - v68;
            if (v46) {
              goto LABEL_159;
            }
            if (v69 < v57) {
              goto LABEL_14;
            }
          }
          unint64_t v74 = v35 - 1;
          if (v35 - 1 >= v11)
          {
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
            goto LABEL_172;
          }
          if (!v10) {
            goto LABEL_174;
          }
          BOOL v75 = (uint64_t *)(v33 + 16 * v74);
          uint64_t v76 = *v75;
          uint64_t v77 = (void *)(v33 + 16 * v35);
          uint64_t v78 = v77[1];
          uint64_t result = sub_248701954((char *)(v10 + 24 * *v75), (char *)(v10 + 24 * *v77), v10 + 24 * v78, v100);
          if (v1) {
            goto LABEL_146;
          }
          if (v78 < v76) {
            goto LABEL_148;
          }
          if (v35 > *(void *)(v8 + 16)) {
            goto LABEL_149;
          }
          *BOOL v75 = v76;
          *(void *)(v33 + 16 * v74 + 8) = v78;
          unint64_t v79 = *(void *)(v8 + 16);
          if (v35 >= v79) {
            goto LABEL_150;
          }
          unint64_t v11 = v79 - 1;
          uint64_t result = (uint64_t)memmove((void *)(v33 + 16 * v35), v77 + 2, 16 * (v79 - 1 - v35));
          *(void *)(v8 + 16) = v79 - 1;
          if (v79 <= 2) {
            goto LABEL_14;
          }
          continue;
        }
      }
      unint64_t v11 = 1;
LABEL_14:
      uint64_t v3 = v98;
      uint64_t v9 = v99;
      uint64_t v6 = v97;
      if (v99 >= v98)
      {
        uint64_t v2 = v95;
        if (v11 < 2)
        {
LABEL_146:
          swift_bridgeObjectRelease();
          *(void *)(v96 + 16) = 0;
          return swift_bridgeObjectRelease();
        }
LABEL_134:
        uint64_t v89 = *v2;
        while (1)
        {
          unint64_t v90 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_163;
          }
          if (!v89) {
            goto LABEL_176;
          }
          uint64_t v91 = *(void *)(v8 + 32 + 16 * v90);
          uint64_t v92 = *(void *)(v8 + 32 + 16 * (v11 - 1) + 8);
          uint64_t result = sub_248701954((char *)(v89 + 24 * v91), (char *)(v89 + 24 * *(void *)(v8 + 32 + 16 * (v11 - 1))), v89 + 24 * v92, v100);
          if (v1) {
            goto LABEL_146;
          }
          if (v92 < v91) {
            goto LABEL_164;
          }
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_248701D08(v8);
            uint64_t v8 = result;
          }
          if (v90 >= *(void *)(v8 + 16)) {
            goto LABEL_165;
          }
          long long v93 = (void *)(v8 + 32 + 16 * v90);
          *long long v93 = v91;
          v93[1] = v92;
          unint64_t v94 = *(void *)(v8 + 16);
          if (v11 > v94) {
            goto LABEL_166;
          }
          uint64_t result = (uint64_t)memmove((void *)(v8 + 32 + 16 * (v11 - 1)), (const void *)(v8 + 32 + 16 * v11), 16 * (v94 - v11));
          *(void *)(v8 + 16) = v94 - 1;
          unint64_t v11 = v94 - 1;
          if (v94 <= 2) {
            goto LABEL_146;
          }
        }
      }
      continue;
    }
    break;
  }
LABEL_172:
  __break(1u);
LABEL_173:
  __break(1u);
LABEL_174:
  __break(1u);
LABEL_175:
  __break(1u);
LABEL_176:
  __break(1u);
  return result;
}

uint64_t sub_248701894(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 24 * a3 - 24;
LABEL_5:
    uint64_t v6 = result;
    uint64_t v7 = v5;
    while (1)
    {
      if (*(unsigned char *)(v7 + 41))
      {
LABEL_4:
        ++a3;
        v5 += 24;
        if (a3 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v8 = v7 + 24;
      uint64_t v9 = *(void *)(v7 + 24);
      uint64_t v10 = *(void *)(v7 + 32);
      char v11 = *(unsigned char *)(v7 + 40);
      if ((*(unsigned char *)(v7 + 17) & 1) == 0 && v9 >= *(void *)v7)
      {
        if (v9 != *(void *)v7) {
          goto LABEL_4;
        }
        if (*(unsigned char *)(v7 + 40))
        {
          if (*(unsigned char *)(v7 + 16)) {
            goto LABEL_4;
          }
        }
        else if ((*(unsigned char *)(v7 + 16) & 1) != 0 || v10 >= *(void *)(v7 + 8))
        {
          goto LABEL_4;
        }
      }
      if (!v4) {
        break;
      }
      long long v12 = *(_OWORD *)v7;
      uint64_t v13 = *(void *)(v7 + 16);
      *(void *)uint64_t v7 = v9;
      *(void *)(v7 + 8) = v10;
      *(unsigned char *)(v7 + 16) = v11;
      *(unsigned char *)(v7 + 17) = 0;
      v7 -= 24;
      *(_OWORD *)uint64_t v8 = v12;
      *(void *)(v8 + 16) = v13;
      if (a3 == ++v6) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_248701954(char *__src, char *__dst, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __dst;
  uint64_t v7 = __src;
  int64_t v8 = __dst - __src;
  int64_t v9 = (__dst - __src) / 24;
  uint64_t v10 = a3 - (void)__dst;
  uint64_t v11 = (uint64_t)(a3 - (void)__dst) / 24;
  if (v9 >= v11)
  {
    uint64_t v17 = 24 * v11;
    if (a4 != __dst || &__dst[v17] <= a4) {
      memmove(a4, __dst, 24 * v11);
    }
    uint64_t v13 = &v4[v17];
    if (v7 >= v6 || v10 < 24) {
      goto LABEL_56;
    }
    unint64_t v18 = a3 - 24;
    while (1)
    {
      uint64_t v19 = (char *)(v18 + 24);
      uint64_t v20 = *((void *)v13 - 3);
      if (*(v13 - 7)) {
        break;
      }
      uint64_t v21 = v6 - 24;
      uint64_t v23 = *((void *)v6 - 3);
      if ((*(v6 - 7) & 1) == 0 && v20 >= v23)
      {
        if (v20 != v23) {
          break;
        }
        if (*(v13 - 8))
        {
          if (*(v6 - 8)) {
            break;
          }
        }
        else if ((*(v6 - 8) & 1) != 0 || *((void *)v13 - 2) >= *((void *)v6 - 2))
        {
          break;
        }
      }
      if (v19 != v6)
      {
        v6 -= 24;
        goto LABEL_49;
      }
      BOOL v22 = v18 >= (unint64_t)v6;
      v6 -= 24;
      if (v22) {
        goto LABEL_49;
      }
LABEL_50:
      if (v6 > v7)
      {
        v18 -= 24;
        if (v13 > v4) {
          continue;
        }
      }
      goto LABEL_56;
    }
    uint64_t v21 = v13 - 24;
    if (v19 != v13)
    {
      v13 -= 24;
LABEL_49:
      long long v24 = *(_OWORD *)v21;
      *(void *)(v18 + 16) = *((void *)v21 + 2);
      *(_OWORD *)unint64_t v18 = v24;
      goto LABEL_50;
    }
    BOOL v22 = v18 >= (unint64_t)v13;
    v13 -= 24;
    if (v22) {
      goto LABEL_49;
    }
    goto LABEL_50;
  }
  size_t v12 = 24 * v9;
  if (a4 != __src || &__src[v12] <= a4) {
    memmove(a4, __src, v12);
  }
  uint64_t v13 = &v4[v12];
  if ((unint64_t)v6 < a3 && v8 >= 24)
  {
    while ((v6[17] & 1) == 0)
    {
      if ((v4[17] & 1) == 0 && *(void *)v6 >= *(void *)v4)
      {
        if (*(void *)v6 != *(void *)v4) {
          break;
        }
        if (v6[16])
        {
          if (v4[16]) {
            break;
          }
        }
        else if ((v4[16] & 1) != 0 || *((void *)v6 + 1) >= *((void *)v4 + 1))
        {
          break;
        }
      }
      uint64_t v14 = v6;
      BOOL v15 = v7 == v6;
      v6 += 24;
      if (!v15) {
        goto LABEL_9;
      }
LABEL_10:
      v7 += 24;
      if (v4 >= v13 || (unint64_t)v6 >= a3) {
        goto LABEL_55;
      }
    }
    uint64_t v14 = v4;
    BOOL v15 = v7 == v4;
    v4 += 24;
    if (v15) {
      goto LABEL_10;
    }
LABEL_9:
    long long v16 = *(_OWORD *)v14;
    *((void *)v7 + 2) = *((void *)v14 + 2);
    *(_OWORD *)uint64_t v7 = v16;
    goto LABEL_10;
  }
LABEL_55:
  uint64_t v6 = v7;
LABEL_56:
  uint64_t v25 = (unsigned __int128)((v13 - v4) * (__int128)0x2AAAAAAAAAAAAAABLL) >> 64;
  size_t v26 = 24 * ((v25 >> 2) + ((unint64_t)v25 >> 63));
  if (v6 != v4 || v6 >= &v4[v26]) {
    memmove(v6, v4, v26);
  }
  return 1;
}

char *sub_248701C0C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E560);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_248701D08(uint64_t a1)
{
  return sub_248701C0C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_248701D1C(uint64_t a1)
{
  return sub_2486BA1AC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_248701D30(uint64_t a1)
{
  return sub_2486BAA74(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_248701D44(uint64_t result, uint64_t a2, unint64_t a3)
{
  int64_t v3 = a3 >> 1;
  if (a3 >> 1 == a2)
  {
    return 0;
  }
  else
  {
    uint64_t v4 = (int8x16_t *)(result + (a2 << 6) + 24);
    while (a2 < v3)
    {
      uint64_t v5 = v4[-1].i64[1];
      if ((v5 & 0x6000000000000000) == 0x4000000000000000)
      {
        int8x16_t v6 = vorrq_s8(*v4, *(int8x16_t *)((char *)v4 - 24));
        int8x16_t v7 = vextq_s8(v6, v6, 8uLL);
        int8x8_t v8 = vorr_s8(*(int8x8_t *)v7.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v7, v7, 8uLL));
        if (v5 == 0x4000000000000000 && *(void *)&v8 == 0) {
          return a2;
        }
      }
      ++a2;
      v4 += 4;
      if (v3 == a2) {
        return 0;
      }
    }
    __break(1u);
  }
  return result;
}

unint64_t sub_248701DD0(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a4 + 16);
  if (v4 < result || v4 < a3)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = a3 - result;
  if (a2 >= 1)
  {
    if (v6 < 0 || v6 >= (unint64_t)a2) {
      goto LABEL_13;
    }
    return 0;
  }
  if (v6 <= 0 && v6 > a2) {
    return 0;
  }
LABEL_13:
  BOOL v7 = __OFADD__(result, a2);
  result += a2;
  if (v7) {
    goto LABEL_16;
  }
  if (result > v4) {
LABEL_17:
  }
    __break(1u);
  return result;
}

uint64_t sub_248701E3C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4, unsigned __int8 a5, char a6, unsigned char *a7, char *a8, uint64_t a9)
{
  uint64_t v12 = *a4;
  int v13 = a5;
  char v67 = *a8;
  uint64_t v14 = *(void *)(a9 + 16);
  uint64_t v68 = *(void *)a9;
  uint64_t v70 = *(void *)(a9 + 8);
  uint64_t v16 = *(void *)(a9 + 24);
  uint64_t v15 = *(void *)(a9 + 32);
  uint64_t v17 = *(void *)(a9 + 40);
  char v60 = *(unsigned char *)(a9 + 48);
  if (*a7)
  {
    uint64_t v18 = sub_2486F2944(0x656C62616E65, 0xE600000000000000, 1, v12, a1, a2, a3);
    uint64_t v19 = 0x656C6261736964;
    uint64_t v20 = 0xE700000000000000;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v21 = swift_bridgeObjectRetain();
    uint64_t v18 = sub_2486F9CA0(v21, a1, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v19 = 28526;
    uint64_t v20 = 0xE200000000000000;
  }
  uint64_t v22 = sub_2486F2944(v19, v20, 0, v12, a1, a2, a3);
  uint64_t v23 = v22;
  if (v13 == 2)
  {
    uint64_t v24 = 0;
  }
  else
  {
    if (v13) {
      uint64_t v24 = v18;
    }
    else {
      uint64_t v24 = v22;
    }
    swift_bridgeObjectRetain();
  }
  char v25 = v60;
  v85[0] = v68;
  v85[1] = v70;
  v85[2] = v14;
  v85[3] = v16;
  v85[4] = v15;
  v85[5] = v17;
  char v86 = v60;
  char v66 = v13;
  uint64_t v64 = v23;
  uint64_t v65 = v18;
  uint64_t v48 = v14;
  if (v24)
  {
    if (*(void *)(v24 + 16))
    {
      uint64_t v26 = *(void *)(v24 + 32);
      uint64_t v27 = *(void *)(v24 + 40);
      unsigned __int8 v28 = *(unsigned char *)(v24 + 48);
      uint64_t v29 = v17;
      sub_2486D0334(v68, v70);
      sub_2486B7650(v26, v27, v28);
      swift_bridgeObjectRelease();
      uint64_t v30 = sub_248714E64(v26, v27, v28);
      uint64_t v32 = v31;
      sub_2486B7668(v26, v27, v28);
      goto LABEL_16;
    }
    uint64_t v29 = v17;
    sub_2486D0334(v68, v70);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v29 = v17;
    sub_2486D0334(v68, v70);
  }
  uint64_t v30 = 0;
  uint64_t v32 = 0;
LABEL_16:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v33 = MEMORY[0x263F8EE78];
  sub_24870AD3C(MEMORY[0x263F8EE78], (a6 & 1) == 0, v85, v30, v32, a1, a2, a3, (uint64_t)&v87, 1);
  long long v51 = v87;
  uint64_t v50 = v88;
  char v61 = v90;
  long long v57 = v92;
  long long v59 = v91;
  uint64_t v55 = v94;
  uint64_t v56 = v93;
  char v54 = v95;
  uint64_t v52 = v97;
  uint64_t v53 = v96;
  v72[0] = v68;
  v72[1] = v70;
  v72[2] = v48;
  v72[3] = v16;
  v72[4] = v15;
  v72[5] = v29;
  char v73 = v25;
  sub_2486D0334(v68, v70);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24870AD3C(v33, 1, v72, 0, 0, a1, a2, a3, (uint64_t)&v74, 0);
  uint64_t v34 = v75;
  char v35 = v77;
  long long v44 = v74;
  long long v45 = v78;
  long long v71 = v79;
  uint64_t v36 = v80;
  uint64_t v69 = v81;
  char v49 = v82;
  uint64_t v46 = v84;
  uint64_t v47 = v83;
  long long v43 = v76;
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = a1;
  *(void *)(v37 + 24) = a2;
  *(void *)(v37 + 32) = a3;
  *(unsigned char *)(v37 + 40) = v67;
  uint64_t v38 = swift_allocObject();
  *(unsigned char *)(v38 + 16) = v66;
  *(void *)(v38 + 24) = a1;
  *(void *)(v38 + 32) = a2;
  *(void *)(v38 + 40) = a3;
  LOBYTE(v72[0]) = 0;
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = a1;
  *(void *)(v39 + 24) = a2;
  *(void *)(v39 + 32) = a3;
  *(unsigned char *)(v39 + 40) = v67;
  LOBYTE(v74) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_24872DB70;
  *(void *)(v40 + 32) = v65;
  *(_OWORD *)(v40 + 40) = v51;
  *(void *)(v40 + 56) = v50;
  *(_OWORD *)(v40 + 64) = v89;
  *(unsigned char *)(v40 + 80) = v61;
  *(_OWORD *)(v40 + 88) = v59;
  *(_OWORD *)(v40 + 104) = v57;
  *(void *)(v40 + 120) = v56;
  *(void *)(v40 + 128) = v55;
  *(unsigned char *)(v40 + 136) = v54;
  *(void *)(v40 + 144) = v53;
  *(void *)(v40 + 152) = v52;
  *(void *)(v40 + 160) = 0;
  *(void *)(v40 + 168) = 0;
  *(_WORD *)(v40 + 176) = 4;
  *(void *)(v40 + 184) = sub_24870255C;
  *(void *)(v40 + 192) = v37;
  *(unsigned char *)(v40 + 200) = v72[0];
  *(void *)(v40 + 208) = sub_2487025B8;
  *(void *)(v40 + 216) = v38;
  *(void *)(v40 + 224) = v64;
  *(_OWORD *)(v40 + 232) = v44;
  *(void *)(v40 + 248) = v34;
  *(_OWORD *)(v40 + 256) = v43;
  *(unsigned char *)(v40 + 272) = v35;
  *(_OWORD *)(v40 + 280) = v45;
  *(_OWORD *)(v40 + 296) = v71;
  *(void *)(v40 + 312) = v36;
  *(void *)(v40 + 320) = v69;
  *(unsigned char *)(v40 + 328) = v49;
  *(void *)(v40 + 336) = v47;
  *(void *)(v40 + 344) = v46;
  *(void *)(v40 + 352) = 0;
  *(void *)(v40 + 360) = 0;
  *(_WORD *)(v40 + 368) = 4;
  *(void *)(v40 + 376) = sub_248702620;
  *(void *)(v40 + 384) = v39;
  *(unsigned char *)(v40 + 392) = v74;
  *(void *)(v40 + 400) = nullsub_1;
  *(void *)(v40 + 408) = 0;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  return sub_2486CDED4(v40);
}

uint64_t sub_2487023D0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_2486B9D40(0, v1, 0);
    uint64_t v2 = 32;
    do
    {
      uint64_t v3 = sub_24870B518();
      uint64_t v5 = v4;
      unint64_t v7 = *(void *)(v11 + 16);
      unint64_t v6 = *(void *)(v11 + 24);
      if (v7 >= v6 >> 1) {
        sub_2486B9D40((char *)(v6 > 1), v7 + 1, 1);
      }
      *(void *)(v11 + 16) = v7 + 1;
      uint64_t v8 = v11 + 16 * v7;
      *(void *)(v8 + 32) = v3;
      *(void *)(v8 + 40) = v5;
      v2 += 192;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
  sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
  uint64_t v9 = sub_24872C4F0();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_24870255C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5)
{
  return sub_24870263C(a1, a2, a3, a4, a5, 1);
}

uint64_t sub_248702578()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_2487025B8(uint64_t a1, uint64_t a2)
{
  return sub_2486FC608(a1, a2, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t objectdestroyTm_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 41, 7);
}

uint64_t sub_248702620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5)
{
  return sub_24870263C(a1, a2, a3, a4, a5, 0);
}

uint64_t sub_24870263C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, int a6)
{
  return sub_2486FAC70(*(void *)(v6 + 16), *(void *)(v6 + 24), *(void **)(v6 + 32), a6, a1, a5, *(unsigned char *)(v6 + 40));
}

uint64_t sub_24870266C(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = (a3 >> 61) & 3;
  if (v3 == 1) {
    return swift_bridgeObjectRetain();
  }
  if (!v3) {
    return sub_24870268C(result, a2, a3);
  }
  return result;
}

uint64_t sub_24870268C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 < 0)
  {
    sub_2486B7650(a1, a2, a3);
    return swift_bridgeObjectRetain();
  }
  else
  {
    return sub_2486B7650(a1, a2, a3);
  }
}

uint64_t sub_2487026D8(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = (a3 >> 61) & 3;
  if (v3 == 1) {
    return swift_bridgeObjectRelease();
  }
  if (!v3) {
    return sub_2487026F8(result, a2, a3);
  }
  return result;
}

uint64_t sub_2487026F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 < 0)
  {
    sub_2486B7668(a1, a2, a3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    return sub_2486B7668(a1, a2, a3);
  }
}

uint64_t sub_248702744(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_2487027A0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t *sub_2487027FC(uint64_t *a1)
{
  return a1;
}

uint64_t sub_248702830(uint64_t a1)
{
  return a1;
}

unint64_t sub_24870285C()
{
  unint64_t result = qword_26B13FC90;
  if (!qword_26B13FC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B13FC90);
  }
  return result;
}

uint64_t sub_2487028B0(uint64_t a1)
{
  return a1;
}

uint64_t sub_2487028EC(uint64_t result, uint64_t a2, unint64_t a3)
{
  if ((a3 & 0x7FFFFFFFFFFFFF3ELL) != 0x7FFFFFF3ELL) {
    return sub_2487026D8(result, a2, a3);
  }
  return result;
}

uint64_t destroy for ArgumentSet()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s22ArgumentParserInternal11ArgumentSetVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ArgumentSet(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for ArgumentSet(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ArgumentSet()
{
  return &type metadata for ArgumentSet;
}

void destroy for ParserError(uint64_t a1)
{
}

uint64_t initializeWithCopy for ParserError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v13 = *(void *)(a2 + 72);
  char v14 = *(unsigned char *)(a2 + 80);
  sub_2486DC6B0(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v13;
  *(unsigned char *)(a1 + 80) = v14;
  return a1;
}

uint64_t assignWithCopy for ParserError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v24 = *(void *)(a2 + 72);
  char v25 = *(unsigned char *)(a2 + 80);
  sub_2486DC6B0(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v24, v25);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  uint64_t v20 = *(void *)(a1 + 64);
  uint64_t v21 = *(void *)(a1 + 72);
  char v22 = *(unsigned char *)(a1 + 80);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v24;
  *(unsigned char *)(a1 + 80) = v25;
  sub_2486DC870(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  return a1;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for ParserError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 80);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 72);
  char v14 = *(unsigned char *)(a1 + 80);
  long long v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v15;
  long long v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v16;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = v3;
  sub_2486DC870(v4, v6, v5, v7, v8, v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ParserError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF1 && *(unsigned char *)(a1 + 81)) {
    return (*(_DWORD *)a1 + 241);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 80);
  if (v3 <= 0xF) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ParserError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)__n128 result = a2 - 241;
    if (a3 >= 0xF1) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF1) {
      *(unsigned char *)(result + 81) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 80) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_248702D54(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 80) <= 0xEu) {
    return *(unsigned __int8 *)(a1 + 80);
  }
  else {
    return (*(_DWORD *)a1 + 15);
  }
}

uint64_t sub_248702D6C(uint64_t result, unsigned int a2)
{
  if (a2 >= 0xF)
  {
    *(void *)__n128 result = a2 - 15;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)(result + 72) = 0;
    LOBYTE(a2) = 15;
  }
  *(unsigned char *)(result + 80) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ParserError()
{
  return &type metadata for ParserError;
}

uint64_t sub_248702DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (!a6)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for InternalParseError(uint64_t a1)
{
  return sub_248702E18(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
}

uint64_t sub_248702E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (!a6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for InternalParseError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_248702DAC(*(void *)a2, v4, v5, v6, v7, v8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for InternalParseError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_248702DAC(*(void *)a2, v4, v5, v6, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  char v14 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v8;
  sub_248702E18(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for InternalParseError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(void *)(a1 + 32) = v3;
  char v11 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v4;
  sub_248702E18(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for InternalParseError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for InternalParseError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)uint64_t result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24870305C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) <= 3u) {
    return *(unsigned __int8 *)(a1 + 40);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_248703074(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)uint64_t result = a2 - 4;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for InternalParseError()
{
  return &type metadata for InternalParseError;
}

void destroy for CommandError(uint64_t a1)
{
}

uint64_t initializeWithCopy for CommandError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 64);
  uint64_t v15 = v3;
  uint64_t v11 = *(void *)(a2 + 80);
  char v12 = *(unsigned char *)(a2 + 88);
  swift_bridgeObjectRetain();
  sub_2486DC6B0(v15, v4, v5, v6, v7, v8, v9, v14, v10, v11, v12);
  *(void *)(a1 + 8) = v15;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v14;
  *(void *)(a1 + 72) = v10;
  *(void *)(a1 + 80) = v11;
  *(unsigned char *)(a1 + 88) = v12;
  return a1;
}

uint64_t assignWithCopy for CommandError(uint64_t a1, void *a2)
{
  long long v2 = a2;
  *(void *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = v2[1];
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = v2[6];
  uint64_t v10 = v2[7];
  uint64_t v11 = v2[8];
  uint64_t v24 = v2[9];
  uint64_t v25 = v2[10];
  LOBYTE(v2) = *((unsigned char *)v2 + 88);
  sub_2486DC6B0(v4, v5, v6, v7, v8, v9, v10, v11, v24, v25, (char)v2);
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 48);
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v19 = *(void *)(a1 + 64);
  uint64_t v20 = *(void *)(a1 + 72);
  uint64_t v21 = *(void *)(a1 + 80);
  char v22 = *(unsigned char *)(a1 + 88);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v24;
  *(void *)(a1 + 80) = v25;
  *(unsigned char *)(a1 + 88) = (_BYTE)v2;
  sub_2486DC870(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  return a1;
}

__n128 __swift_memcpy89_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for CommandError(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  char v4 = *(unsigned char *)(a2 + 88);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 72);
  uint64_t v14 = *(void *)(a1 + 80);
  char v15 = *(unsigned char *)(a1 + 88);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = v4;
  sub_2486DC870(v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for CommandError(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 89)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CommandError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 88) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 89) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 89) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CommandError()
{
  return &type metadata for CommandError;
}

uint64_t sub_248703428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_8:
    sub_2486CB64C(&v30);
    uint64_t v27 = &v30;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  long long v11 = *(_OWORD *)(a1 + 176);
  long long v38 = *(_OWORD *)(a1 + 160);
  long long v39 = v11;
  long long v12 = *(_OWORD *)(a1 + 208);
  long long v40 = *(_OWORD *)(a1 + 192);
  long long v41 = v12;
  long long v13 = *(_OWORD *)(a1 + 112);
  long long v34 = *(_OWORD *)(a1 + 96);
  long long v35 = v13;
  long long v14 = *(_OWORD *)(a1 + 144);
  long long v36 = *(_OWORD *)(a1 + 128);
  long long v37 = v14;
  long long v15 = *(_OWORD *)(a1 + 48);
  long long v30 = *(_OWORD *)(a1 + 32);
  long long v31 = v15;
  long long v16 = *(_OWORD *)(a1 + 80);
  long long v32 = *(_OWORD *)(a1 + 64);
  long long v33 = v16;
  if ((sub_2486D8998(a2, a3, a4, v32) & 1) == 0)
  {
    uint64_t v17 = 224;
    while (--v8)
    {
      uint64_t v18 = v17 + 192;
      uint64_t v19 = (long long *)(a1 + v17);
      long long v20 = v19[9];
      long long v38 = v19[8];
      long long v39 = v20;
      long long v21 = v19[11];
      long long v40 = v19[10];
      long long v41 = v21;
      long long v22 = v19[5];
      long long v34 = v19[4];
      long long v35 = v22;
      long long v23 = v19[7];
      long long v36 = v19[6];
      long long v37 = v23;
      long long v24 = v19[1];
      long long v30 = *v19;
      long long v31 = v24;
      long long v25 = v19[3];
      long long v32 = v19[2];
      long long v33 = v25;
      char v26 = sub_2486D8998(a2, a3, a4, v32);
      uint64_t v17 = v18;
      if (v26) {
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_6:
  sub_2486B76D8((uint64_t)&v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v29[8] = v38;
  v29[9] = v39;
  v29[10] = v40;
  v29[11] = v41;
  v29[4] = v34;
  v29[5] = v35;
  v29[6] = v36;
  v29[7] = v37;
  v29[0] = v30;
  v29[1] = v31;
  uint64_t v29[2] = v32;
  v29[3] = v33;
  nullsub_1(v29);
  uint64_t v27 = v29;
LABEL_9:
  sub_2486CDB94((uint64_t)v27, a5, &qword_26931E248);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2487035E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *v2;
  uint64_t v5 = v2[1];
  uint64_t v6 = v2[2];
  sub_24870652C(a1, (void *)*v2);
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v57 = sub_248718588(v7);
  int64_t v58 = v8;
  uint64_t v59 = v9;
  sub_248705568(&v57, v4, v5, v6);
  sub_248704E40(&v57);
  sub_2487044E8(v57, v58, v59, v2[1], v2[2], (uint64_t)v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2486C2100((uint64_t)v49, (uint64_t)v48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FDB8);
  if (!swift_dynamicCast())
  {
    uint64_t result = sub_2486B7680(v49, a2);
    goto LABEL_31;
  }
  if (v52)
  {
LABEL_34:
    uint64_t result = sub_24872CC40();
    __break(1u);
    return result;
  }
  uint64_t v11 = v51;
  uint64_t v10 = v50;
  uint64_t v12 = v53;
  uint64_t v13 = v54;
  char v14 = v55;
  char v15 = BYTE8(v56);
  uint64_t v16 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400D8);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_24872D630;
  *(_OWORD *)(v17 + 32) = *(_OWORD *)(v16 + 16);
  uint64_t v40 = *(void *)(v10 + 16);
  if (!v40) {
    goto LABEL_30;
  }
  char v36 = v15;
  char v37 = v14;
  uint64_t v38 = v13;
  uint64_t v39 = v12;
  uint64_t v43 = v10 + 32;
  sub_2486CDBF8(v10, v11, 0);
  sub_2486CDBF8(v10, v11, 0);
  swift_retain();
  unint64_t v18 = 0;
  uint64_t v41 = v11;
  uint64_t v42 = v10;
  while (1)
  {
    uint64_t v44 = v17;
    if (v18 >= *(void *)(v10 + 16))
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    unint64_t v45 = v18;
    uint64_t v19 = (uint64_t *)(v43 + 16 * v18);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    swift_beginAccess();
    unint64_t v22 = *(void *)(v16 + 40);
    if (v22 >> 62) {
      break;
    }
    uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    if (!v23) {
      goto LABEL_28;
    }
LABEL_8:
    unint64_t v46 = v45 + 1;
    uint64_t v24 = 4;
    while (1)
    {
      if ((v22 & 0xC000000000000001) != 0)
      {
        uint64_t v25 = MEMORY[0x24C57C5F0](v24 - 4, v22);
      }
      else
      {
        uint64_t v25 = *(void *)(v22 + 8 * v24);
        swift_retain();
      }
      uint64_t v26 = v24 - 3;
      if (__OFADD__(v24 - 4, 1))
      {
        __break(1u);
        goto LABEL_33;
      }
      if ((*(uint64_t (**)(void))(*(void *)(v25 + 24) + 24))() == v20 && v27 == v21) {
        break;
      }
      char v29 = sub_24872CEB0();
      swift_bridgeObjectRelease();
      if (v29) {
        goto LABEL_21;
      }
      swift_release();
      ++v24;
      if (v26 == v23) {
        goto LABEL_28;
      }
    }
    swift_bridgeObjectRelease();
LABEL_21:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v30 = *(_OWORD *)(v25 + 16);
    uint64_t v17 = v44;
    unint64_t v32 = *(void *)(v44 + 16);
    unint64_t v31 = *(void *)(v44 + 24);
    if (v32 >= v31 >> 1)
    {
      long long v47 = *(_OWORD *)(v25 + 16);
      long long v33 = sub_24871A3EC((char *)(v31 > 1), v32 + 1, 1, (char *)v44);
      long long v30 = v47;
      uint64_t v17 = (uint64_t)v33;
    }
    uint64_t v11 = v41;
    uint64_t v10 = v42;
    *(void *)(v17 + 16) = v32 + 1;
    *(_OWORD *)(v17 + 16 * v32 + 32) = v30;
    swift_release();
    uint64_t v16 = v25;
    unint64_t v18 = v46;
    if (v46 == v40)
    {
      sub_2486B4E28(v42, v41, 0);
      swift_release();
      goto LABEL_29;
    }
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_24872CC60();
  swift_bridgeObjectRelease();
  if (v23) {
    goto LABEL_8;
  }
LABEL_28:
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  uint64_t v11 = v41;
  uint64_t v10 = v42;
  sub_2486B4E28(v42, v41, 0);
  swift_release();
  uint64_t v17 = v44;
LABEL_29:
  sub_2486B4E28(v10, v11, 0);
  uint64_t v13 = v38;
  uint64_t v12 = v39;
  char v14 = v37;
  char v15 = v36;
LABEL_30:
  swift_bridgeObjectRelease();
  *(void *)(a2 + 24) = &type metadata for HelpCommand;
  *(void *)(a2 + 32) = sub_2486C5338();
  uint64_t v35 = swift_allocObject();
  *(void *)a2 = v35;
  *(void *)(v35 + 16) = v10;
  *(void *)(v35 + 24) = v11;
  *(unsigned char *)(v35 + 32) = 0;
  *(void *)(v35 + 40) = v12;
  *(void *)(v35 + 48) = v13;
  *(unsigned char *)(v35 + 56) = v14;
  *(void *)(v35 + 64) = v17;
  *(unsigned char *)(v35 + 72) = v15;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v49);
LABEL_31:
  *(unsigned char *)(a2 + 89) = 0;
  return result;
}

uint64_t sub_248703FD8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, char a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t v9 = a8;
  uint64_t v10 = a7;
  uint64_t v11 = a5;
  uint64_t v14 = *(void *)(a4 + 16);
  if (v14)
  {
    uint64_t v16 = HIBYTE(a2) & 0xF;
    if ((a2 & 0x2000000000000000) == 0) {
      uint64_t v16 = a1 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v54 = v16;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v51 = a3;
    swift_bridgeObjectRetain();
    uint64_t v17 = (unsigned __int8 *)(a4 + 48);
    unint64_t v18 = (char *)MEMORY[0x263F8EE78];
    while (1)
    {
      uint64_t v20 = *((void *)v17 - 2);
      uint64_t v19 = *((void *)v17 - 1);
      unsigned int v21 = *v17;
      if (!(v21 >> 6)) {
        break;
      }
      if (v21 >> 6 == 1)
      {
        char v22 = v21 & 1 | 0x40;
LABEL_9:
        unint64_t v23 = *((void *)v17 - 2);
        uint64_t v24 = *((void *)v17 - 1);
        goto LABEL_10;
      }
      if (v19 | v20 || v21 != 128)
      {
        if (!v54)
        {
          sub_24872CAD0();
          sub_24872C600();
          swift_bridgeObjectRetain();
          sub_24872C600();
          swift_bridgeObjectRelease();
          sub_24872C600();
          uint64_t result = sub_24872CC40();
          __break(1u);
          return result;
        }
        swift_bridgeObjectRetain();
        unint64_t v23 = sub_24872C6A0();
        uint64_t v24 = v29;
        swift_bridgeObjectRelease();
        sub_2486B7C8C(1, 0, 128);
        char v22 = 64;
      }
      else
      {
        swift_bridgeObjectRetain();
        unint64_t v23 = sub_2486B8604(45, 0xE100000000000000, a1, a2);
        uint64_t v24 = v28;
        swift_bridgeObjectRelease();
        char v22 = 0;
      }
LABEL_10:
      sub_2486B7C7C(v20, v19, v21);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v18 = sub_24871A0CC(0, *((void *)v18 + 2) + 1, 1, v18);
      }
      unint64_t v26 = *((void *)v18 + 2);
      unint64_t v25 = *((void *)v18 + 3);
      if (v26 >= v25 >> 1) {
        unint64_t v18 = sub_24871A0CC((char *)(v25 > 1), v26 + 1, 1, v18);
      }
      v17 += 24;
      *((void *)v18 + 2) = v26 + 1;
      uint64_t v27 = &v18[24 * v26];
      *((void *)v27 + 4) = v23;
      *((void *)v27 + 5) = v24;
      v27[48] = v22;
      if (!--v14)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v9 = a8;
        a3 = v51;
        uint64_t v10 = a7;
        uint64_t v11 = a5;
        goto LABEL_22;
      }
    }
    char v22 = (_BYTE)v21 << 7;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v18 = (char *)MEMORY[0x263F8EE78];
LABEL_22:
  if (a9 == 255) {
    uint64_t v30 = 0;
  }
  else {
    uint64_t v30 = v10;
  }
  uint64_t v55 = v30;
  if (a9 == 255) {
    uint64_t v31 = 0;
  }
  else {
    uint64_t v31 = v9;
  }
  uint64_t v52 = v31;
  if (a9 == 255) {
    char v32 = 4;
  }
  else {
    char v32 = a9;
  }
  char v50 = v32;
  sub_2486CDB94((uint64_t)v11, (uint64_t)v58, &qword_26B13FD98);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2486D02F8(v11);
  sub_2486D0384(v10, v9, a9);
  sub_24870AD3C(MEMORY[0x263F8EE78], 0, v58, 0, 0, a1, a2, a3, (uint64_t)&v59, 0);
  long long v41 = v59;
  uint64_t v33 = v60;
  char v34 = v62;
  long long v46 = v64;
  long long v48 = v63;
  uint64_t v35 = v65;
  uint64_t v44 = v66;
  char v43 = v67;
  uint64_t v36 = v68;
  uint64_t v42 = v69;
  char v37 = (void *)swift_allocObject();
  uint64_t v37[2] = sub_2486D00C4;
  v37[3] = 0;
  v37[4] = a1;
  v37[5] = a2;
  v37[6] = a3;
  v58[0] = 0;
  v58[1] = 0;
  uint64_t v38 = (void *)swift_allocObject();
  uint64_t v38[2] = v18;
  sub_2486CDB94((uint64_t)v58, (uint64_t)(v38 + 3), &qword_26B140090);
  v38[5] = a1;
  v38[6] = a2;
  v38[7] = a3;
  char v70 = 1;
  long long v57 = v61;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_24872D630;
  *(void *)(v39 + 32) = v18;
  *(_OWORD *)(v39 + 40) = v41;
  *(void *)(v39 + 56) = v33;
  *(_OWORD *)(v39 + 64) = v57;
  *(unsigned char *)(v39 + 80) = v34;
  *(_OWORD *)(v39 + 88) = v48;
  *(_OWORD *)(v39 + 104) = v46;
  *(void *)(v39 + 120) = v35;
  *(void *)(v39 + 128) = v44;
  *(unsigned char *)(v39 + 136) = v43;
  *(void *)(v39 + 144) = v36;
  *(void *)(v39 + 152) = v42;
  *(void *)(v39 + 160) = v55;
  *(void *)(v39 + 168) = v52;
  *(unsigned char *)(v39 + 176) = v50;
  *(unsigned char *)(v39 + 177) = a6;
  *(void *)(v39 + 184) = sub_24870836C;
  *(void *)(v39 + 192) = v37;
  *(unsigned char *)(v39 + 200) = v70;
  *(void *)(v39 + 208) = sub_2487083F8;
  *(void *)(v39 + 216) = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_2486CDED4(v39);
}

uint64_t sub_2487044E8@<X0>(uint64_t a1@<X0>, int64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t result = sub_24870714C(a1, a2, a3, 0, a4, a5);
  if (!v6)
  {
    uint64_t result = sub_24871898C(a1, a2);
    if (result)
    {
      int64_t v13 = *(void *)(a1 + 16);
      if (v13 < a2)
      {
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      if (a2 < 0)
      {
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }
      if (v13 != a2)
      {
        uint64_t v14 = a1 + (a2 << 6) + 48;
        int64_t v15 = a2;
        while (v15 < v13)
        {
          uint64_t v16 = *(void *)v14;
          if ((*(void *)v14 & 0x6000000000000000) == 0)
          {
            uint64_t v27 = *(void *)(v14 - 16);
            uint64_t v28 = *(void *)(v14 - 8);
            uint64_t v29 = *(void *)(v14 + 24);
            uint64_t v30 = *(void *)(v14 + 32);
            uint64_t v31 = *(unsigned __int8 *)(v14 + 40);
            sub_2486B4DD4();
            swift_allocError();
            *(void *)uint64_t v32 = v29;
            *(void *)(v32 + 8) = v30;
            *(void *)(v32 + 16) = v31;
            *(void *)(v32 + 24) = v27;
            *(void *)(v32 + 32) = v28;
            *(void *)(v32 + 40) = v16;
            *(_OWORD *)(v32 + 48) = 0u;
            *(_OWORD *)(v32 + 64) = 0u;
            *(unsigned char *)(v32 + 80) = 4;
            sub_2486B7650(v27, v28, v16);
            return swift_willThrow();
          }
          ++v15;
          v14 += 64;
          if (v13 == v15) {
            goto LABEL_10;
          }
        }
        __break(1u);
        goto LABEL_38;
      }
LABEL_10:
      uint64_t v17 = sub_248715D18(a1, a2, a3);
      sub_2486B4DD4();
      swift_allocError();
      *(void *)uint64_t v18 = v17;
      *(_OWORD *)(v18 + 8) = 0u;
      *(_OWORD *)(v18 + 24) = 0u;
      *(_OWORD *)(v18 + 40) = 0u;
      *(_OWORD *)(v18 + 56) = 0u;
      *(void *)(v18 + 72) = 0;
      char v19 = 9;
    }
    else
    {
      uint64_t v34 = a6;
      uint64_t v46 = 0;
      unint64_t v20 = *(void *)(a5 + 16);
      if (v20)
      {
        uint64_t v21 = a5 + 32;
        swift_bridgeObjectRetain();
        unint64_t v33 = v20;
        while (1)
        {
          sub_24870789C(v21, (uint64_t)&v38);
          sub_2486C2100((uint64_t)v39, (uint64_t)&v35);
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FDD0);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FDB8);
          if ((swift_dynamicCast() & 1) == 0)
          {
            uint64_t v42 = 0;
            long long v40 = 0u;
            long long v41 = 0u;
          }
          sub_2487078F8((uint64_t)&v38);
          sub_2486CDB94((uint64_t)&v40, (uint64_t)&v38, &qword_26B13FDC0);
          swift_bridgeObjectRelease();
          uint64_t v22 = v39[1];
          sub_24870794C((uint64_t)&v38);
          if (v22) {
            break;
          }
          v21 += 56;
          if (!--v20) {
            goto LABEL_25;
          }
        }
        unint64_t v23 = v33 - 1;
        uint64_t v24 = a5 + 56 * v33 - 24;
        while (1)
        {
          sub_24870789C(v24, (uint64_t)&v38);
          sub_2486C2100((uint64_t)v39, (uint64_t)&v35);
          if ((swift_dynamicCast() & 1) == 0)
          {
            uint64_t v42 = 0;
            long long v40 = 0u;
            long long v41 = 0u;
          }
          sub_2487078F8((uint64_t)&v38);
          uint64_t v25 = *((void *)&v41 + 1);
          sub_24870794C((uint64_t)&v40);
          if (v25) {
            break;
          }
          --v23;
          v24 -= 56;
          if (v23 >= v33)
          {
            __break(1u);
            goto LABEL_25;
          }
        }
        sub_24870789C(v24, (uint64_t)&v38);
        sub_2486C2100((uint64_t)v39, (uint64_t)&v40);
        if ((swift_dynamicCast() & 1) == 0)
        {
          uint64_t v37 = 0;
          long long v35 = 0u;
          long long v36 = 0u;
        }
        sub_2487078F8((uint64_t)&v38);
        sub_2486CDB94((uint64_t)&v35, (uint64_t)&v40, &qword_26B13FDC0);
        uint64_t result = sub_2487079AC((uint64_t)&v40, (uint64_t)&v35);
        uint64_t v26 = v34;
        if (!*((void *)&v36 + 1)) {
          goto LABEL_40;
        }
        sub_2486B7680(&v35, (uint64_t)&v38);
        sub_24870794C((uint64_t)&v40);
        sub_2486B7680(&v38, (uint64_t)&v43);
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_25:
        uint64_t v45 = 0;
        long long v43 = 0u;
        long long v44 = 0u;
        uint64_t v26 = v34;
      }
      swift_bridgeObjectRelease();
      if (*((void *)&v44 + 1)) {
        return sub_2486B7680(&v43, v26);
      }
      sub_24870794C((uint64_t)&v43);
      sub_2486B4DD4();
      swift_allocError();
      *(void *)uint64_t v18 = 3;
      *(_OWORD *)(v18 + 8) = 0u;
      *(_OWORD *)(v18 + 24) = 0u;
      *(_OWORD *)(v18 + 40) = 0u;
      *(_OWORD *)(v18 + 56) = 0u;
      *(void *)(v18 + 72) = 0;
      char v19 = 15;
    }
    *(unsigned char *)(v18 + 80) = v19;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_248704918@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v9 = *(void *)(v5 + 8);
  LOBYTE(v43) = 2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_2486B583C(v4, v9, (unsigned __int8 *)&v43, 0, 0, 0);
  uint64_t v50 = v4;
  uint64_t v51 = v5;
  uint64_t v52 = v10;
  uint64_t v53 = v11;
  uint64_t v54 = v6;
  uint64_t v55 = v7;
  uint64_t v56 = v8;
  uint64_t v12 = v60;
  sub_248700020((uint64_t)&v57);
  if (v12)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v60 = (char **)v10;
    if (sub_2486B9420(*(void *)(v3 + 16), *(void *)(v3 + 24)))
    {
      uint64_t v14 = *(void *)(v42 + 16);
      long long v15 = v58;
      uint64_t v16 = v59;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_24870714C(v15, *((uint64_t *)&v15 + 1), v16, 0, v3, v14);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
    }
    uint64_t v17 = *(void *)(v42 + 16);
    uint64_t v18 = type metadata accessor for ArgumentDecoder();
    uint64_t v19 = swift_allocObject();
    uint64_t v20 = MEMORY[0x263F8EE78];
    *(void *)(v19 + 64) = 0;
    *(void *)(v19 + 72) = v20;
    *(void *)(v19 + 80) = v20;
    swift_bridgeObjectRetain();
    *(void *)(v19 + 88) = sub_2486CE258(v20);
    long long v21 = v58;
    *(_OWORD *)(v19 + 16) = v57;
    *(_OWORD *)(v19 + 32) = v21;
    *(void *)(v19 + 48) = v59;
    *(void *)(v19 + 72) = v17;
    swift_bridgeObjectRelease();
    *(void *)(v19 + 56) = MEMORY[0x263F8EE88];
    uint64_t v23 = *(void *)(v3 + 16);
    uint64_t v22 = *(void *)(v3 + 24);
    uint64_t v48 = v18;
    unint64_t v49 = sub_248707AF0();
    uint64_t v47 = v19;
    *((void *)&v44 + 1) = v23;
    *(void *)&long long v45 = v22;
    __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v43);
    swift_retain();
    sub_24872C850();
    sub_2486B7680(&v43, (uint64_t)a2);
    swift_beginAccess();
    uint64_t v24 = swift_bridgeObjectRetain();
    sub_248706008(v24);
    swift_bridgeObjectRelease();
    uint64_t v25 = swift_bridgeObjectRetain();
    uint64_t v26 = sub_248707740(v25, v42);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v60 = (char **)(v42 + 16);
    sub_24871BA1C(v26);
    uint64_t v27 = *(void *)(v3 + 16);
    uint64_t v28 = *(void *)(*(void *)(v3 + 24) + 8);
    uint64_t v29 = a2[3];
    uint64_t v30 = a2[4];
    uint64_t v31 = __swift_project_boxed_opaque_existential_1(a2, v29);
    *((void *)&v45 + 1) = v29;
    uint64_t v46 = *(void *)(v30 + 8);
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v44);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(boxed_opaque_existential_1Tm, v31, v29);
    *(void *)&long long v43 = v27;
    *((void *)&v43 + 1) = v28;
    unint64_t v33 = *(char **)(v42 + 16);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v33 = sub_24871A4E8(0, *((void *)v33 + 2) + 1, 1, v33);
    }
    unint64_t v35 = *((void *)v33 + 2);
    unint64_t v34 = *((void *)v33 + 3);
    long long v36 = v60;
    if (v35 >= v34 >> 1) {
      unint64_t v33 = sub_24871A4E8((char *)(v34 > 1), v35 + 1, 1, v33);
    }
    *((void *)v33 + 2) = v35 + 1;
    uint64_t v37 = &v33[56 * v35];
    long long v38 = v43;
    long long v39 = v44;
    long long v40 = v45;
    *((void *)v37 + 10) = v46;
    *((_OWORD *)v37 + 3) = v39;
    *((_OWORD *)v37 + 4) = v40;
    *((_OWORD *)v37 + 2) = v38;
    uint64_t result = swift_release();
    *long long v36 = v33;
  }
  return result;
}

uint64_t sub_248704E40(uint64_t *a1)
{
  uint64_t v3 = v1;
  uint64_t v4 = a1;
  uint64_t result = sub_248704918(a1, v86);
  uint64_t v6 = v2;
  if (v2) {
    return result;
  }
  uint64_t v64 = v1;
  do
  {
    uint64_t v8 = v87;
    uint64_t v7 = v88;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v86, v87);
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v7 + 8) + 24))(v8);
    if (v6)
    {
      uint64_t v58 = *(void *)(v3 + 8);
      uint64_t v59 = *(void *)(v3 + 16);
      sub_24870714C(*v4, v4[1], v4[2], 0, v58, v59);
      uint64_t v60 = sub_248706F20(v58, v59);
      sub_2486BAF70();
      swift_allocError();
      *(void *)uint64_t v61 = v60;
      *(void *)(v61 + 8) = v6;
      *(_OWORD *)(v61 + 16) = 0u;
      *(_OWORD *)(v61 + 32) = 0u;
      *(_OWORD *)(v61 + 48) = 0u;
      *(_OWORD *)(v61 + 64) = 0u;
      *(void *)(v61 + 80) = 0;
      *(unsigned char *)(v61 + 88) = 13;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v86);
    }
    uint64_t v9 = *(void *)(v3 + 16);
    if (!*(void *)(v9 + 16)) {
      goto LABEL_61;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if (result)
    {
      uint64_t v10 = *(void *)(v9 + 16);
      if (!v10) {
        goto LABEL_62;
      }
    }
    else
    {
      uint64_t result = (uint64_t)sub_2487224B0(v9);
      uint64_t v9 = result;
      uint64_t v10 = *(void *)(result + 16);
      if (!v10) {
        goto LABEL_62;
      }
    }
    uint64_t v11 = v10 - 1;
    uint64_t v12 = v9 + 56 * v11;
    uint64_t v13 = *(void *)(v12 + 80);
    long long v15 = *(_OWORD *)(v12 + 48);
    long long v14 = *(_OWORD *)(v12 + 64);
    long long v16 = *(_OWORD *)(v12 + 32);
    *(void *)(v9 + 16) = v11;
    *(void *)(v3 + 16) = v9;
    long long v77 = v16;
    long long v78 = v15;
    long long v79 = v14;
    *(void *)&long long v80 = v13;
    uint64_t v17 = v87;
    uint64_t v18 = v88;
    uint64_t v19 = __swift_project_boxed_opaque_existential_1(v86, v87);
    *((void *)&v69 + 1) = v17;
    *(void *)&long long v70 = *(void *)(v18 + 8);
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v68);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(boxed_opaque_existential_1Tm, v19, v17);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v78);
    sub_2486B7680(&v68, (uint64_t)&v78);
    sub_24870789C((uint64_t)&v77, (uint64_t)&v68);
    long long v21 = *(char **)(v3 + 16);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v21 = sub_24871A4E8(0, *((void *)v21 + 2) + 1, 1, v21);
    }
    unint64_t v23 = *((void *)v21 + 2);
    unint64_t v22 = *((void *)v21 + 3);
    uint64_t v94 = 0;
    if (v23 >= v22 >> 1) {
      long long v21 = sub_24871A4E8((char *)(v22 > 1), v23 + 1, 1, v21);
    }
    *((void *)v21 + 2) = v23 + 1;
    uint64_t v24 = &v21[56 * v23];
    long long v25 = v68;
    long long v26 = v69;
    long long v27 = v70;
    *((void *)v24 + 10) = v71;
    *((_OWORD *)v24 + 3) = v26;
    *((_OWORD *)v24 + 4) = v27;
    *((_OWORD *)v24 + 2) = v25;
    *(void *)(v3 + 16) = v21;
    sub_2487078F8((uint64_t)&v77);
    uint64_t v28 = *(void *)(v3 + 8);
    uint64_t v29 = v4[2];
    unint64_t v65 = v4[1];
    uint64_t v66 = *v4;
    sub_2487188AC(*v4, v65, (uint64_t)v89);
    sub_2486CDB94((uint64_t)v89, (uint64_t)&v91, &qword_26B13FDA8);
    uint64_t v30 = v93;
    uint64_t v67 = v28;
    if ((v93 & 0x7FFFFFFFFFFFFF3ELL) == 0x7FFFFFF3ELL) {
      goto LABEL_31;
    }
    unint64_t v31 = v91;
    char v32 = v92;
    uint64_t result = sub_248707A68((uint64_t)v89);
    if (v30 & 0x6000000000000000) != 0x2000000000000000 || (v32) {
      goto LABEL_31;
    }
    if ((v31 & 0x8000000000000000) != 0) {
      goto LABEL_63;
    }
    if (v31 >= *(void *)(v29 + 16)) {
      goto LABEL_64;
    }
    uint64_t v62 = v29;
    long long v63 = v4;
    uint64_t v33 = v29 + 16 * v31;
    uint64_t v34 = *(void *)(v33 + 32);
    uint64_t v35 = *(void *)(v33 + 40);
    swift_beginAccess();
    unint64_t v36 = *(void *)(v28 + 40);
    if (!(v36 >> 62))
    {
      uint64_t v37 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      if (!v37) {
        goto LABEL_30;
      }
      goto LABEL_18;
    }
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_24872CC60();
    if (!v37)
    {
LABEL_30:
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v4 = v63;
      uint64_t v3 = v64;
      uint64_t v28 = v67;
      uint64_t v29 = v62;
LABEL_31:
      uint64_t v47 = v94;
      sub_24870714C(v66, v65, v29, 1, v28, *(void *)(v3 + 16));
      if (!v47)
      {
        (*(void (**)(long long *__return_ptr))(*(void *)(v28 + 24) + 16))(&v68);
        long long v83 = v74;
        long long v84 = v75;
        uint64_t v85 = v76;
        long long v79 = v70;
        long long v80 = v71;
        long long v81 = v72;
        long long v82 = v73;
        long long v77 = v68;
        long long v78 = v69;
        sub_2486BAFC4((uint64_t)&v77);
        uint64_t v48 = v84;
        if ((void)v84)
        {
          swift_beginAccess();
          unint64_t v49 = *(void *)(v28 + 40);
          uint64_t v94 = 0;
          if (v49 >> 62)
          {
            swift_bridgeObjectRetain_n();
            uint64_t v50 = sub_24872CC60();
            swift_bridgeObjectRelease();
            if (v50) {
              goto LABEL_35;
            }
          }
          else
          {
            uint64_t v50 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain_n();
            if (v50)
            {
LABEL_35:
              uint64_t v51 = 4;
              do
              {
                uint64_t v52 = v51 - 4;
                if ((v49 & 0xC000000000000001) != 0)
                {
                  uint64_t result = MEMORY[0x24C57C5F0](v51 - 4, v49);
                  uint64_t v53 = result;
                  BOOL v54 = __OFADD__(v52, 1);
                  uint64_t v55 = v51 - 3;
                  if (v54) {
                    goto LABEL_59;
                  }
                }
                else
                {
                  uint64_t v53 = *(void *)(v49 + 8 * v51);
                  uint64_t result = swift_retain();
                  BOOL v54 = __OFADD__(v52, 1);
                  uint64_t v55 = v51 - 3;
                  if (v54)
                  {
LABEL_59:
                    __break(1u);
                    goto LABEL_60;
                  }
                }
                if (*(void *)(v53 + 16) == v48)
                {
                  swift_release();
                  swift_bridgeObjectRelease_n();
                  uint64_t v3 = v64;
                  *(void *)(v64 + 8) = v53;
                  goto LABEL_47;
                }
                swift_release();
                ++v51;
              }
              while (v55 != v50);
            }
          }
          swift_bridgeObjectRelease_n();
          sub_2486B4DD4();
          swift_allocError();
          *(void *)uint64_t v57 = 3;
          *(_OWORD *)(v57 + 8) = 0u;
          *(_OWORD *)(v57 + 24) = 0u;
          *(_OWORD *)(v57 + 40) = 0u;
          *(_OWORD *)(v57 + 56) = 0u;
          *(void *)(v57 + 72) = 0;
          *(unsigned char *)(v57 + 80) = 15;
          swift_willThrow();
        }
      }
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v86);
    }
LABEL_18:
    uint64_t v38 = 4;
    while (1)
    {
      uint64_t v39 = v38 - 4;
      if ((v36 & 0xC000000000000001) != 0)
      {
        uint64_t result = MEMORY[0x24C57C5F0](v38 - 4, v36);
        uint64_t v40 = result;
        uint64_t v41 = v38 - 3;
        if (__OFADD__(v39, 1))
        {
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
          return result;
        }
      }
      else
      {
        uint64_t v40 = *(void *)(v36 + 8 * v38);
        uint64_t result = swift_retain();
        uint64_t v41 = v38 - 3;
        if (__OFADD__(v39, 1)) {
          goto LABEL_60;
        }
      }
      if ((*(uint64_t (**)(void))(*(void *)(v40 + 24) + 24))() == v34 && v42 == v35) {
        break;
      }
      uint64_t v44 = v34;
      uint64_t v45 = v35;
      char v46 = sub_24872CEB0();
      swift_bridgeObjectRelease();
      if (v46) {
        goto LABEL_46;
      }
      swift_release();
      ++v38;
      uint64_t v35 = v45;
      uint64_t v34 = v44;
      if (v41 == v37) {
        goto LABEL_30;
      }
    }
    swift_bridgeObjectRelease();
LABEL_46:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_248715C38((uint64_t)v90);
    sub_248702830((uint64_t)v90);
    swift_release();
    uint64_t v3 = v64;
    *(void *)(v64 + 8) = v40;
    uint64_t v4 = v63;
LABEL_47:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v86);
    uint64_t v56 = v94;
    uint64_t result = sub_248704918(v4, v86);
    uint64_t v6 = v56;
  }
  while (!v56);
  return result;
}

uint64_t sub_248705568(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  (*(void (**)(void *__return_ptr))(*(void *)(a2 + 24) + 16))(v25);
  uint64_t result = sub_2486BAFC4((uint64_t)v25);
  if (!v25[3])
  {
    unint64_t v9 = sub_248707B9C();
    v24[5] = sub_248706204((uint64_t)&type metadata for GenerateCompletions, v9);
    v24[6] = v10;
    v24[7] = v11;
    sub_248704918(a1, v24);
    if (v4)
    {
      MEMORY[0x24C57CE50](v4);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FDB8);
      if (swift_dynamicCast())
      {
        uint64_t v12 = sub_248706F20(a3, a4);
        if ((v23 & 1) == 0)
        {
          uint64_t v13 = v12;
          sub_2486BAF70();
          swift_allocError();
          *(void *)uint64_t v14 = v13;
          *(void *)(v14 + 8) = v21;
          *(void *)(v14 + 16) = v22;
          *(_OWORD *)(v14 + 24) = 0u;
          *(_OWORD *)(v14 + 40) = 0u;
          *(_OWORD *)(v14 + 56) = 0u;
          *(_OWORD *)(v14 + 72) = 0u;
          *(unsigned char *)(v14 + 88) = 1;
          swift_willThrow();
LABEL_13:
          swift_release();
          swift_release();
          return swift_bridgeObjectRelease();
        }
        goto LABEL_15;
      }
    }
    unint64_t v15 = sub_248707BF0();
    sub_248706204((uint64_t)&type metadata for AutodetectedGenerateCompletions, v15);
    sub_248704918(a1, v24);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FDB8);
    if ((swift_dynamicCast() & 1) == 0)
    {
LABEL_12:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    if ((v20 & 1) == 0)
    {
      sub_2486B4E38(v18, v19, 0);
      sub_2486B4E38(v18, v19, 0);
      if (v18)
      {
        long long v16 = sub_248706F20(a3, a4);
        sub_2486BAF70();
        swift_allocError();
        *(void *)uint64_t v17 = v16;
        *(_OWORD *)(v17 + 8) = 0u;
        *(_OWORD *)(v17 + 24) = 0u;
        *(_OWORD *)(v17 + 40) = 0u;
        *(_OWORD *)(v17 + 56) = 0u;
        *(_OWORD *)(v17 + 72) = 0u;
        *(unsigned char *)(v17 + 88) = 1;
        swift_willThrow();
      }
      sub_2486B4E38(v18, v19, 0);
      goto LABEL_12;
    }
LABEL_15:
    uint64_t result = sub_24872CC40();
    __break(1u);
  }
  return result;
}

uint64_t sub_248705898@<X0>(uint64_t a1@<X8>)
{
  char v6 = 0;
  memset(v5, 0, sizeof(v5));
  uint64_t v2 = sub_2486B7AA4((uint64_t)&unk_26FC75950);
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  uint64_t result = sub_2486CDB94((uint64_t)v5, v3 + 24, &qword_26B13FD98);
  *(unsigned char *)(v3 + 73) = 0;
  *(void *)(v3 + 80) = 0;
  *(void *)(v3 + 88) = 0;
  *(unsigned char *)(v3 + 96) = -1;
  *(void *)a1 = sub_2487082EC;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = 1;
  return result;
}

uint64_t sub_248705978@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v13 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400B8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v11 = MEMORY[0x263F8EE88];
  sub_2486B7AA4((uint64_t)&unk_26FC75A10);
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24870841C();
  sub_24872D0B0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1401A8);
    sub_2486C54FC(qword_26B13FFF8, &qword_26B1401A8);
    sub_24872CD40();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRelease();
    char v9 = v12;
    *(_OWORD *)uint64_t v8 = v11;
    *(unsigned char *)(v8 + 16) = v9;
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
}

unint64_t sub_248705B8C()
{
  return 0xD000000000000018;
}

uint64_t sub_248705BA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24870617C(a1, a2);
  *a3 = result & 1;
  return result;
}

void sub_248705BD4(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_248705BE0(uint64_t a1)
{
  unint64_t v2 = sub_24870841C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248705C1C(uint64_t a1)
{
  unint64_t v2 = sub_24870841C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_248705C5C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_248705978(a1, a2);
}

uint64_t sub_248705C74@<X0>(uint64_t a1@<X8>)
{
  char v6 = 0;
  memset(v5, 0, sizeof(v5));
  uint64_t v2 = sub_2486B7AA4((uint64_t)&unk_26FC75988);
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(unsigned char *)(v3 + 24) = 0;
  uint64_t result = sub_2486CDB94((uint64_t)v5, v3 + 32, &qword_26B13FD98);
  *(void *)a1 = sub_2486D02E8;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = 1;
  return result;
}

uint64_t sub_248705D48@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x263F8EE88];
  sub_2486B7AA4((uint64_t)&unk_26FC75A48);
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248708230();
  sub_24872D0B0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B140190);
    sub_2486C54FC(&qword_26B140188, &qword_26B140190);
    sub_24872CD40();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v9 = v14;
    uint64_t v10 = v15;
    char v11 = v16;
    sub_2486BB118(v14, v15, v16);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v8 = v9;
    *(void *)(v8 + 8) = v10;
    *(unsigned char *)(v8 + 16) = v11;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return sub_2486B4E38(v9, v10, v11);
  }
}

uint64_t sub_248705F74(uint64_t a1)
{
  unint64_t v2 = sub_248708230();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248705FB0(uint64_t a1)
{
  unint64_t v2 = sub_248708230();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_248705FF0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_248705D48(a1, a2);
}

uint64_t sub_248706008(uint64_t a1)
{
  uint64_t v2 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (v5)
  {
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v10 = v9 | (v8 << 6);
LABEL_22:
    uint64_t v14 = *(void *)(a1 + 48) + 24 * v10;
    if ((*(unsigned char *)(v14 + 17) & 1) == 0) {
      uint64_t result = sub_248717668(*(void *)v14, *(void *)(v14 + 8), *(unsigned char *)(v14 + 16) & 1);
    }
  }
  int64_t v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v11 >= v6) {
    return swift_release();
  }
  unint64_t v12 = *(void *)(v2 + 8 * v11);
  ++v8;
  if (v12) {
    goto LABEL_21;
  }
  int64_t v8 = v11 + 1;
  if (v11 + 1 >= v6) {
    return swift_release();
  }
  unint64_t v12 = *(void *)(v2 + 8 * v8);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v8 = v11 + 2;
  if (v11 + 2 >= v6) {
    return swift_release();
  }
  unint64_t v12 = *(void *)(v2 + 8 * v8);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v8 = v11 + 3;
  if (v11 + 3 >= v6) {
    return swift_release();
  }
  unint64_t v12 = *(void *)(v2 + 8 * v8);
  if (v12)
  {
LABEL_21:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_22;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v6) {
    return swift_release();
  }
  unint64_t v12 = *(void *)(v2 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v6) {
      return swift_release();
    }
    unint64_t v12 = *(void *)(v2 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_21;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_24870617C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x80000002487328E0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_24872CEB0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

void *sub_248706204(uint64_t a1, uint64_t a2)
{
  char v2 = sub_2486E2060(a1, a2);
  swift_beginAccess();
  unint64_t v3 = v2[5];
  if (v3 >> 62)
  {
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_24872CC60();
    swift_bridgeObjectRelease();
    if (!v9) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain_n();
    if (!v4) {
      goto LABEL_6;
    }
  }
  unint64_t v5 = sub_2486C5338();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1401A0);
  int64_t v6 = (void *)swift_allocObject();
  swift_weakInit();
  v6[2] = &type metadata for HelpCommand;
  v6[3] = v5;
  swift_weakAssign();
  v6[5] = MEMORY[0x263F8EE78];
  swift_beginAccess();
  uint64_t v7 = swift_retain();
  MEMORY[0x24C57C270](v7);
  if (*(void *)((v2[5] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v2[5] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_24872C7B0();
  }
  sub_24872C7E0();
  sub_24872C7A0();
  swift_endAccess();
  swift_weakAssign();
  swift_release();
LABEL_6:
  swift_release();
  return v2;
}

uint64_t sub_24870652C(uint64_t result, void *a2)
{
  uint64_t v6 = v2;
  unint64_t v7 = *(void *)(result + 16);
  if (v7)
  {
    uint64_t v9 = result;
    uint64_t v10 = result + 32;
    BOOL v11 = *(void *)(result + 32) == 0x6C706D6F632D2D2DLL && *(void *)(result + 40) == 0xED00006E6F697465;
    if (v11 || (uint64_t result = sub_24872CEB0(), (result & 1) != 0))
    {
      uint64_t v80 = v9;
      swift_bridgeObjectRetain();
      swift_retain();
      if (v7 == 1)
      {
LABEL_8:
        sub_2486B4DD4();
        swift_allocError();
        *(void *)uint64_t v13 = 3;
        *(_OWORD *)(v13 + 8) = 0u;
        *(_OWORD *)(v13 + 24) = 0u;
        *(_OWORD *)(v13 + 40) = 0u;
        *(_OWORD *)(v13 + 56) = 0u;
        *(void *)(v13 + 72) = 0;
        *(unsigned char *)(v13 + 80) = 15;
        swift_willThrow();
        swift_unknownObjectRelease();
        return swift_release();
      }
      uint64_t v75 = v10;
      uint64_t v14 = 1;
      unint64_t v76 = v7;
      while (2)
      {
        if (v14 == v7)
        {
          __break(1u);
        }
        else
        {
          uint64_t v15 = (unint64_t *)(v10 + 16 * v14);
          unint64_t v4 = *v15;
          uint64_t v6 = v15[1];
          unint64_t v81 = v14 + 1;
          BOOL v16 = *v15 == 11565 && v6 == 0xE200000000000000;
          if (!v16 && (sub_24872CEB0() & 1) == 0)
          {
            swift_beginAccess();
            unint64_t v5 = a2[5];
            if (v5 >> 62)
            {
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              uint64_t v17 = sub_24872CC60();
              swift_bridgeObjectRelease();
              if (v17)
              {
LABEL_18:
                uint64_t v79 = v14 + 1;
                unint64_t v88 = v5 & 0xC000000000000001;
                uint64_t v18 = 4;
                while (1)
                {
                  uint64_t v19 = v18 - 4;
                  if (v88)
                  {
                    uint64_t v20 = MEMORY[0x24C57C5F0](v18 - 4, v5);
                    uint64_t v21 = v18 - 3;
                    if (__OFADD__(v19, 1)) {
                      goto LABEL_61;
                    }
                  }
                  else
                  {
                    uint64_t v20 = *(void *)(v5 + 8 * v18);
                    swift_retain();
                    uint64_t v21 = v18 - 3;
                    if (__OFADD__(v19, 1))
                    {
LABEL_61:
                      __break(1u);
                      goto LABEL_62;
                    }
                  }
                  if ((*(uint64_t (**)(void))(*(void *)(v20 + 24) + 24))() == v4 && v22 == v6) {
                    break;
                  }
                  uint64_t v3 = sub_24872CEB0();
                  swift_bridgeObjectRelease();
                  if (v3) {
                    goto LABEL_32;
                  }
                  swift_release();
                  ++v18;
                  if (v21 == v17) {
                    goto LABEL_35;
                  }
                }
                swift_bridgeObjectRelease();
LABEL_32:
                uint64_t v10 = v75;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                a2 = (void *)v20;
                unint64_t v7 = v76;
                uint64_t v14 = v81;
                if (v81 != v76) {
                  continue;
                }
                goto LABEL_8;
              }
            }
            else
            {
              uint64_t v17 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              if (v17) {
                goto LABEL_18;
              }
            }
LABEL_35:
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
LABEL_36:
            sub_2486B4DD4();
            swift_allocError();
            *(void *)uint64_t v24 = 3;
            *(_OWORD *)(v24 + 8) = 0u;
            *(_OWORD *)(v24 + 24) = 0u;
            *(_OWORD *)(v24 + 40) = 0u;
            *(_OWORD *)(v24 + 56) = 0u;
            *(void *)(v24 + 72) = 0;
            *(unsigned char *)(v24 + 80) = 15;
            swift_willThrow();
            swift_unknownObjectRelease();
            return swift_release();
          }
          unint64_t v5 = v2;
          if (v81 == v7) {
            goto LABEL_8;
          }
          uint64_t v3 = v80;
          if (v81 >= v7) {
            goto LABEL_79;
          }
          long long v25 = (uint64_t *)(v10 + 16 * v81);
          uint64_t v6 = *v25;
          unint64_t v4 = v25[1];
          v14 += 2;
          sub_24872CEE0();
          swift_unknownObjectRetain_n();
          swift_bridgeObjectRetain();
          uint64_t v26 = swift_dynamicCastClass();
          if (!v26)
          {
            swift_unknownObjectRelease();
            uint64_t v26 = MEMORY[0x263F8EE78];
          }
          uint64_t v27 = *(void *)(v26 + 16);
          swift_release();
          unint64_t v12 = v76;
          if (v27 == v76 - v14)
          {
            uint64_t v28 = swift_dynamicCastClass();
            if (!v28)
            {
              swift_unknownObjectRelease();
              uint64_t v28 = MEMORY[0x263F8EE78];
            }
LABEL_46:
            swift_unknownObjectRelease();
            uint64_t v29 = a2[2];
            uint64_t v30 = *(void *)(a2[3] + 8);
            LOBYTE(v87[0]) = 2;
            uint64_t v31 = sub_2486B583C(v29, v30, (unsigned __int8 *)v87, 0, 0, 0);
            uint64_t v33 = v32;
            uint64_t v34 = sub_248715EC4(v6, v4, 0);
            if (v5)
            {
LABEL_80:
              swift_bridgeObjectRelease();
              uint64_t result = swift_unexpectedError();
              __break(1u);
              return result;
            }
            uint64_t v35 = (void *)v34;
            swift_bridgeObjectRelease();
            if (!v35[2]) {
              goto LABEL_78;
            }
            uint64_t v18 = v35[4];
            uint64_t v20 = v35[5];
            unint64_t v5 = v35[6];
            unint64_t v88 = v35[8];
            sub_24870266C(v18, v20, v5);
            swift_bridgeObjectRelease();
            uint64_t v36 = (v5 >> 61) & 3;
            if (v36)
            {
              if (v36 != 1)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
                goto LABEL_36;
              }
              swift_bridgeObjectRetain();
              uint64_t v37 = sub_24871B768(v18, v20);
              unint64_t v81 = v28;
              uint64_t v79 = v31;
              if (!v38)
              {
LABEL_62:
                uint64_t v54 = v18;
                uint64_t v55 = v20;
                goto LABEL_65;
              }
              if (v37 == 95 && v38 == 0xE100000000000000)
              {
                swift_bridgeObjectRelease();
              }
              else
              {
                char v56 = sub_24872CEB0();
                swift_bridgeObjectRelease();
                uint64_t v54 = v18;
                uint64_t v55 = v20;
                if ((v56 & 1) == 0) {
                  goto LABEL_65;
                }
              }
              unint64_t v57 = sub_24871B2F0(1uLL, v18, v20);
              uint64_t v78 = v58;
              uint64_t v60 = v59;
              uint64_t v62 = v61;
              sub_2487026D8(v18, v20, v5);
              uint64_t v54 = MEMORY[0x24C57C040](v57, v78, v60, v62);
              uint64_t v55 = v63;
              swift_bridgeObjectRelease();
LABEL_65:
              swift_bridgeObjectRetain();
              sub_248703428(v79, v54, v55, MEMORY[0x263F8EE78], (uint64_t)v87);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_2487026D8(v18, v20, v5);
              sub_2486CDB94((uint64_t)v87, (uint64_t)v82, &qword_26931E248);
              sub_2486CDB94((uint64_t)v82, (uint64_t)v83, &qword_26931E248);
              uint64_t v28 = v81;
              if (sub_2486CB4CC((uint64_t)v83) != 1)
              {
                uint64_t v52 = v84;
                uint64_t v64 = v85;
                int v65 = v86;
                sub_2486B77D8((uint64_t)v84, v85, v86);
                sub_2486CB4E4((uint64_t)v82);
                if (v65 == 3)
                {
LABEL_67:
                  uint64_t v66 = v52(v28);
                  swift_release();
                  *(void *)&v87[0] = v66;
                  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
                  sub_2486C54FC((unint64_t *)&qword_26931E1E0, &qword_26931E1D8);
                  uint64_t v67 = sub_24872C4F0();
                  uint64_t v69 = v68;
                  swift_bridgeObjectRelease();
                  sub_2486B4DD4();
                  swift_allocError();
                  *(void *)uint64_t v70 = v67;
                  *(void *)(v70 + 8) = v69;
                  *(_OWORD *)(v70 + 16) = 0u;
                  *(_OWORD *)(v70 + 32) = 0u;
                  *(_OWORD *)(v70 + 48) = 0u;
                  *(_OWORD *)(v70 + 64) = 0u;
                  *(unsigned char *)(v70 + 80) = 2;
                  swift_willThrow();
                  swift_unknownObjectRelease();
                  swift_release();
                  return swift_release();
                }
                sub_2486C549C((uint64_t)v52, v64, v65);
              }
              swift_release();
              sub_2486B4DD4();
              swift_allocError();
              *(void *)uint64_t v72 = 3;
              *(_OWORD *)(v72 + 8) = 0u;
              *(_OWORD *)(v72 + 24) = 0u;
              *(_OWORD *)(v72 + 40) = 0u;
              *(_OWORD *)(v72 + 56) = 0u;
              *(void *)(v72 + 72) = 0;
              *(unsigned char *)(v72 + 80) = 15;
              swift_willThrow();
              swift_unknownObjectRelease();
              return swift_release();
            }
            if (*(void *)(v33 + 16))
            {
              sub_2486B7650(v18, v20, v5);
              unint64_t v39 = sub_248710538(v18, v20, v5);
              if (v40)
              {
                unint64_t v41 = *(void *)(*(void *)(v33 + 56) + 8 * v39);
                sub_2486B7668(v18, v20, v5);
                if ((v41 & 0x8000000000000000) != 0)
                {
                  __break(1u);
                }
                else if (v41 < *(void *)(v31 + 16))
                {
                  uint64_t v42 = (_OWORD *)(v31 + 192 * v41);
                  long long v43 = v42[2];
                  long long v44 = v42[3];
                  long long v45 = v42[5];
                  v87[2] = v42[4];
                  v87[3] = v45;
                  v87[0] = v43;
                  v87[1] = v44;
                  long long v46 = v42[6];
                  long long v47 = v42[7];
                  long long v48 = v42[9];
                  v87[6] = v42[8];
                  v87[7] = v48;
                  v87[4] = v46;
                  v87[5] = v47;
                  long long v49 = v42[10];
                  long long v50 = v42[11];
                  long long v51 = v42[13];
                  v87[10] = v42[12];
                  v87[11] = v51;
                  v87[8] = v49;
                  v87[9] = v50;
                  uint64_t v77 = *((void *)&v49 + 1);
                  uint64_t v52 = (uint64_t (*)(uint64_t))v49;
                  int v53 = v50;
                  sub_2486B76D8((uint64_t)v87);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_2487026D8(v18, v20, v5);
                  sub_2486B77D8((uint64_t)v52, v77, v53);
                  sub_2486C539C((uint64_t)v87);
                  if (v53 == 3) {
                    goto LABEL_67;
                  }
                  sub_2486C549C((uint64_t)v52, v77, v53);
LABEL_70:
                  swift_release();
                  sub_2486B4DD4();
                  swift_allocError();
                  *(void *)uint64_t v71 = 3;
                  *(_OWORD *)(v71 + 8) = 0u;
                  *(_OWORD *)(v71 + 24) = 0u;
                  *(_OWORD *)(v71 + 40) = 0u;
                  *(_OWORD *)(v71 + 56) = 0u;
                  *(void *)(v71 + 72) = 0;
                  *(unsigned char *)(v71 + 80) = 15;
                  swift_willThrow();
                  swift_unknownObjectRelease();
                  return swift_release();
                }
                __break(1u);
LABEL_78:
                swift_bridgeObjectRelease();
                __break(1u);
LABEL_79:
                __break(1u);
                goto LABEL_80;
              }
              sub_2486B7668(v18, v20, v5);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_2487026D8(v18, v20, v5);
            goto LABEL_70;
          }
        }
        break;
      }
      unint64_t v73 = (2 * v12) | 1;
      swift_unknownObjectRelease();
      sub_2486B9904(v3, v75, v14, v73);
      uint64_t v28 = v74;
      goto LABEL_46;
    }
  }
  return result;
}

char *sub_248706F20(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3)
  {
    uint64_t v4 = a2 + 32;
    swift_bridgeObjectRetain();
    unint64_t v5 = (char *)MEMORY[0x263F8EE78];
    do
    {
      sub_24870789C(v4, (uint64_t)v19);
      uint64_t v7 = v19[0];
      uint64_t v8 = swift_conformsToProtocol2();
      if (v8) {
        uint64_t v9 = v8;
      }
      else {
        uint64_t v9 = 0;
      }
      if (v8) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 0;
      }
      sub_2487078F8((uint64_t)v19);
      if (v10)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v5 = sub_24871A3EC(0, *((void *)v5 + 2) + 1, 1, v5);
        }
        unint64_t v12 = *((void *)v5 + 2);
        unint64_t v11 = *((void *)v5 + 3);
        if (v12 >= v11 >> 1) {
          unint64_t v5 = sub_24871A3EC((char *)(v11 > 1), v12 + 1, 1, v5);
        }
        *((void *)v5 + 2) = v12 + 1;
        uint64_t v6 = &v5[16 * v12];
        *((void *)v6 + 4) = v10;
        *((void *)v6 + 5) = v9;
      }
      v4 += 56;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v5 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = *((void *)v5 + 2);
  if (!v13 || *(void *)(a1 + 16) != *(void *)&v5[16 * v13 + 16])
  {
    long long v18 = *(_OWORD *)(a1 + 16);
    swift_bridgeObjectRetain();
    uint64_t v14 = v5;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v14 = sub_24871A3EC(0, v13 + 1, 1, v5);
    }
    unint64_t v16 = *((void *)v14 + 2);
    unint64_t v15 = *((void *)v14 + 3);
    if (v16 >= v15 >> 1) {
      uint64_t v14 = sub_24871A3EC((char *)(v15 > 1), v16 + 1, 1, v14);
    }
    *((void *)v14 + 2) = v16 + 1;
    *(_OWORD *)&v14[16 * v16 + 32] = v18;
    swift_bridgeObjectRelease();
    return v14;
  }
  return v5;
}

uint64_t sub_2487070FC()
{
  sub_2486B4E28(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  sub_2486B4E38(*(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 73, 7);
}

uint64_t sub_24870714C(uint64_t result, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = result;
  if ((a4 & 1) != 0 && *(void *)(a3 + 16) != 1) {
    return result;
  }
  uint64_t v8 = sub_248706F20(a5, a6);
  uint64_t v55 = sub_2486CAC4C(0, (uint64_t)v8);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v52 = v7;
  uint64_t v9 = *(void *)(v7 + 16);
  if (v9 < a2)
  {
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }
  if (a2 < 0)
  {
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
    return result;
  }
  uint64_t v66 = v7 + 32;
  uint64_t v57 = v9;
  uint64_t v58 = a2;
  if (v9 != a2)
  {
    uint64_t v18 = a2;
    while (v18 < v9)
    {
      uint64_t v19 = (uint64_t *)(v66 + (v18 << 6));
      uint64_t v20 = v19[2];
      if ((v20 & 0x6000000000000000) == 0)
      {
        uint64_t v21 = *(void *)(v55 + 16);
        if (v21)
        {
          uint64_t v22 = *v19;
          uint64_t v23 = v19[1];
          int v24 = v20 & 0xC0;
          long long v25 = (unsigned __int8 *)(v55 + 48);
          do
          {
            uint64_t result = *((void *)v25 - 2);
            uint64_t v26 = *((void *)v25 - 1);
            unsigned int v27 = *v25;
            if (v27 >> 6)
            {
              if (v27 >> 6 == 1)
              {
                if (v24 == 64)
                {
                  if (result == v22 && v26 == v23)
                  {
                    if (((v20 ^ v27) & 1) == 0) {
                      goto LABEL_41;
                    }
                  }
                  else
                  {
                    uint64_t result = sub_24872CEB0();
                    if ((v20 ^ v27) & 1) == 0 && (result) {
                      goto LABEL_41;
                    }
                  }
                }
                goto LABEL_22;
              }
              if (v24 != 128) {
                goto LABEL_22;
              }
            }
            else if (v20 >= 0x40u)
            {
              goto LABEL_22;
            }
            BOOL v29 = result == v22 && v26 == v23;
            if (v29 || (uint64_t result = sub_24872CEB0(), (result & 1) != 0))
            {
LABEL_41:
              swift_bridgeObjectRelease();
              sub_248707A14();
              swift_allocError();
              *uint64_t v30 = 0;
              return swift_willThrow();
            }
LABEL_22:
            v25 += 24;
            --v21;
          }
          while (v21);
        }
      }
      ++v18;
      uint64_t v9 = v57;
      a2 = v58;
      if (v18 == v57) {
        goto LABEL_6;
      }
    }
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }
LABEL_6:
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_248706F20(a5, a6);
  uint64_t v11 = sub_2486CAC4C(1, (uint64_t)v10);
  uint64_t result = swift_bridgeObjectRelease();
  if (v9 == a2)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    unint64_t v12 = sub_248706F20(a5, a6);
    uint64_t v13 = *((void *)v12 + 2);
    if (!v13) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v14 = v12 + 40;
    for (uint64_t i = v13 - 1; ; --i)
    {
      (*(void (**)(_OWORD *__return_ptr))(*(void *)v14 + 16))(v59);
      v64[6] = v61;
      v64[7] = v62;
      uint64_t v65 = v63;
      void v64[2] = v59[2];
      v64[3] = v59[3];
      v64[4] = v59[4];
      v64[5] = v60;
      v64[0] = v59[0];
      v64[1] = v59[1];
      long long v16 = v60;
      swift_bridgeObjectRetain();
      sub_2486BAFC4((uint64_t)v64);
      swift_bridgeObjectRelease();
      uint64_t v17 = HIBYTE(*((void *)&v16 + 1)) & 0xFLL;
      if ((*((void *)&v16 + 1) & 0x2000000000000000) == 0) {
        uint64_t v17 = v16 & 0xFFFFFFFFFFFFLL;
      }
      if (v17) {
        break;
      }
      if (!i) {
        return swift_bridgeObjectRelease();
      }
      v14 += 16;
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v9 == a2) {
      return result;
    }
    long long v44 = (void *)(v52 + (a2 << 6) + 48);
    while (a2 < v9)
    {
      if ((*v44 & 0x60000000000000C0) == 0)
      {
        BOOL v45 = *(v44 - 2) == 0x6E6F6973726576 && *(v44 - 1) == 0xE700000000000000;
        if (v45 || (uint64_t result = sub_24872CEB0(), (result & 1) != 0))
        {
          long long v46 = sub_248706F20(a5, a6);
          sub_2486BAF70();
          swift_allocError();
          *(void *)uint64_t v47 = v46;
          *(_OWORD *)(v47 + 8) = 0u;
          *(_OWORD *)(v47 + 24) = 0u;
          *(_OWORD *)(v47 + 40) = 0u;
          *(_OWORD *)(v47 + 56) = 0u;
          *(_OWORD *)(v47 + 72) = 0u;
          goto LABEL_93;
        }
      }
      ++a2;
      v44 += 8;
      if (v9 == a2) {
        return result;
      }
    }
    goto LABEL_99;
  }
  uint64_t v56 = v11;
  long long v51 = (unsigned __int8 *)(v11 + 48);
  uint64_t v31 = a2;
  while (1)
  {
    if (v31 >= v9) {
      goto LABEL_95;
    }
    uint64_t v32 = (uint64_t *)(v66 + (v31 << 6));
    uint64_t v33 = v32[2];
    if ((v33 & 0x6000000000000000) == 0)
    {
      uint64_t v34 = *(void *)(v56 + 16);
      if (v34) {
        break;
      }
    }
LABEL_43:
    ++v31;
    uint64_t v9 = v57;
    a2 = v58;
    if (v31 == v57)
    {
      uint64_t result = swift_bridgeObjectRelease();
      long long v48 = (void *)(v52 + (v58 << 6) + 48);
      uint64_t v49 = v58;
      while (v49 < v57)
      {
        if ((*v48 & 0x60000000000000C0) == 0)
        {
          if (*(v48 - 2) == 0xD000000000000016 && *(v48 - 1) == 0x8000000248732820
            || (uint64_t result = sub_24872CEB0(), (result & 1) != 0))
          {
            long long v50 = sub_248706F20(a5, a6);
            sub_2486BAF70();
            swift_allocError();
            *(void *)uint64_t v47 = v50;
            *(void *)(v47 + 8) = 1;
            *(_OWORD *)(v47 + 16) = 0u;
            *(_OWORD *)(v47 + 32) = 0u;
            *(_OWORD *)(v47 + 48) = 0u;
            *(_OWORD *)(v47 + 64) = 0u;
            *(void *)(v47 + 80) = 0;
LABEL_93:
            *(unsigned char *)(v47 + 88) = 15;
            return swift_willThrow();
          }
        }
        ++v49;
        v48 += 8;
        if (v57 == v49) {
          goto LABEL_8;
        }
      }
      goto LABEL_96;
    }
  }
  uint64_t v35 = *v32;
  uint64_t v36 = v32[1];
  int v37 = v33 & 0xC0;
  uint64_t v38 = v51;
  while (1)
  {
    uint64_t result = *((void *)v38 - 2);
    uint64_t v39 = *((void *)v38 - 1);
    unsigned int v40 = *v38;
    if (v40 >> 6) {
      break;
    }
    if (v33 < 0x40u) {
      goto LABEL_63;
    }
LABEL_49:
    v38 += 24;
    if (!--v34) {
      goto LABEL_43;
    }
  }
  if (v40 >> 6 == 1)
  {
    if (v37 == 64)
    {
      if (result == v35 && v39 == v36)
      {
        if (((v33 ^ v40) & 1) == 0) {
          goto LABEL_68;
        }
      }
      else
      {
        uint64_t result = sub_24872CEB0();
        if ((v33 ^ v40) & 1) == 0 && (result) {
          goto LABEL_68;
        }
      }
    }
    goto LABEL_49;
  }
  if (v37 != 128) {
    goto LABEL_49;
  }
LABEL_63:
  if (result != v35 || v39 != v36)
  {
    uint64_t result = sub_24872CEB0();
    if ((result & 1) == 0) {
      goto LABEL_49;
    }
  }
LABEL_68:
  swift_bridgeObjectRelease();
  sub_248707A14();
  swift_allocError();
  *long long v43 = 1;
  return swift_willThrow();
}

uint64_t sub_248707740(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = MEMORY[0x263F8EE78];
  uint64_t v20 = MEMORY[0x263F8EE78];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v5 = 0;
    uint64_t v6 = a1 + 32;
    do
    {
      sub_24870789C(v6 + 56 * v5, (uint64_t)v18);
      uint64_t v7 = *(void *)(a2 + 16);
      uint64_t v8 = *(void *)(v7 + 16);
      if (v8)
      {
        uint64_t v9 = (void *)(v7 + 32);
        while (*v9 != *(void *)&v18[0])
        {
          v9 += 7;
          if (!--v8) {
            goto LABEL_9;
          }
        }
        sub_2487078F8((uint64_t)v18);
      }
      else
      {
LABEL_9:
        long long v14 = v18[0];
        long long v15 = v18[1];
        long long v16 = v18[2];
        uint64_t v17 = v19;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_2486B9D00(0, *(void *)(v2 + 16) + 1, 1);
        }
        uint64_t v2 = v20;
        unint64_t v11 = *(void *)(v20 + 16);
        unint64_t v10 = *(void *)(v20 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_2486B9D00((char *)(v10 > 1), v11 + 1, 1);
          uint64_t v2 = v20;
        }
        *(void *)(v2 + 16) = v11 + 1;
        uint64_t v12 = v2 + 56 * v11;
        *(_OWORD *)(v12 + 32) = v14;
        *(_OWORD *)(v12 + 48) = v15;
        *(_OWORD *)(v12 + 64) = v16;
        *(void *)(v12 + 80) = v17;
      }
      ++v5;
    }
    while (v5 != v3);
  }
  return v2;
}

uint64_t sub_24870789C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_2487078F8(uint64_t a1)
{
  return a1;
}

uint64_t sub_24870794C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FDC0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2487079AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FDC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_248707A14()
{
  unint64_t result = qword_26931E570;
  if (!qword_26931E570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E570);
  }
  return result;
}

uint64_t sub_248707A68(uint64_t a1)
{
  return a1;
}

uint64_t sub_248707ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x7FFFFFFFFFFFFF3ELL) != 0x7FFFFFF3ELL) {
    return sub_2487026D8(a4, a5, a6);
  }
  return result;
}

unint64_t sub_248707AF0()
{
  unint64_t result = qword_26B13FDA0;
  if (!qword_26B13FDA0)
  {
    type metadata accessor for ArgumentDecoder();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B13FDA0);
  }
  return result;
}

uint64_t __swift_deallocate_boxed_opaque_existential_1(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    JUMPOUT(0x24C57D020);
  }
  return result;
}

unint64_t sub_248707B9C()
{
  unint64_t result = qword_26B140158;
  if (!qword_26B140158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B140158);
  }
  return result;
}

unint64_t sub_248707BF0()
{
  unint64_t result = qword_26B140178;
  if (!qword_26B140178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B140178);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for AutodetectedGenerateCompletions(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_248707D00(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_2486BB118);
}

uint64_t destroy for AutodetectedGenerateCompletions(uint64_t a1)
{
  return sub_2486B4E38(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t *assignWithCopy for AutodetectedGenerateCompletions(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_248707D7C(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_2486BB118, (void (*)(uint64_t, uint64_t, uint64_t))sub_2486B4E38);
}

uint64_t *assignWithTake for AutodetectedGenerateCompletions(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_248707E00(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_2486B4E38);
}

ValueMetadata *type metadata accessor for AutodetectedGenerateCompletions()
{
  return &type metadata for AutodetectedGenerateCompletions;
}

uint64_t initializeBufferWithCopyOfBuffer for GenerateCompletions(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_248707D00(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_2486BB108);
}

uint64_t destroy for GenerateCompletions(uint64_t a1)
{
  return sub_248707CF0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_248707CF0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_248707D00(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v6, v7);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  return a1;
}

uint64_t *assignWithCopy for GenerateCompletions(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_248707D7C(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_2486BB108, (void (*)(uint64_t, uint64_t, uint64_t))sub_248707CF0);
}

uint64_t *sub_248707D7C(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v8, v9);
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v12 = *((unsigned __int8 *)a1 + 16);
  *a1 = v7;
  a1[1] = v8;
  *((unsigned char *)a1 + 16) = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *assignWithTake for GenerateCompletions(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_248707E00(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_248707CF0);
}

uint64_t *sub_248707E00(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5 = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v8 = *((unsigned __int8 *)a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((unsigned char *)a1 + 16) = v5;
  a4(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArgumentDefinition.Update(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ArgumentDefinition.Update(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerateCompletions()
{
  return &type metadata for GenerateCompletions;
}

unsigned char *storeEnumTagSinglePayload for HelpRequested(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x248707FB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HelpRequested()
{
  return &type metadata for HelpRequested;
}

unint64_t sub_248707FEC(uint64_t a1)
{
  unint64_t result = sub_248708014();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_248708014()
{
  unint64_t result = qword_26B140150;
  if (!qword_26B140150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B140150);
  }
  return result;
}

unint64_t sub_248708068(uint64_t a1)
{
  unint64_t result = sub_248708090();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_248708090()
{
  unint64_t result = qword_26B13FE68[0];
  if (!qword_26B13FE68[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B13FE68);
  }
  return result;
}

unint64_t sub_2487080E4(uint64_t a1)
{
  unint64_t result = sub_24870810C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24870810C()
{
  unint64_t result = qword_26B140180;
  if (!qword_26B140180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B140180);
  }
  return result;
}

unint64_t sub_248708160(uint64_t a1)
{
  unint64_t result = sub_248708188();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_248708188()
{
  unint64_t result = qword_26B140160;
  if (!qword_26B140160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B140160);
  }
  return result;
}

uint64_t sub_2487081DC()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x270FA0238](v0, 81, 7);
}

unint64_t sub_248708230()
{
  unint64_t result = qword_26B13FE60;
  if (!qword_26B13FE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B13FE60);
  }
  return result;
}

uint64_t sub_248708284()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  int v1 = *(unsigned __int8 *)(v0 + 96);
  if (v1 != 255) {
    sub_2486C549C(*(void *)(v0 + 80), *(void *)(v0 + 88), v1);
  }
  return MEMORY[0x270FA0238](v0, 97, 7);
}

uint64_t sub_2487082EC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_248703FD8(a1, a2, a3, *(void *)(v3 + 16), (uint64_t *)(v3 + 24), *(unsigned char *)(v3 + 73), *(void *)(v3 + 80), *(void *)(v3 + 88), *(unsigned char *)(v3 + 96));
}

uint64_t sub_248708324()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

void *sub_24870836C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_2486CFA30(a1, a2, a3, a4, a5, a6, a7, *(void *(**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16), *(void *)(v7 + 24), *(void *)(v7 + 32), *(void *)(v7 + 40), *(void *)(v7 + 48));
}

uint64_t sub_2487083A0()
{
  if (*(void *)(v0 + 16) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_2487083F8(uint64_t a1, uint64_t a2)
{
  return sub_2486CFD9C(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

unint64_t sub_24870841C()
{
  unint64_t result = qword_26B140140;
  if (!qword_26B140140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B140140);
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerateCompletions.CodingKeys()
{
  return &type metadata for GenerateCompletions.CodingKeys;
}

unsigned char *_s22ArgumentParserInternal19GenerateCompletionsV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x248708524);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AutodetectedGenerateCompletions.CodingKeys()
{
  return &type metadata for AutodetectedGenerateCompletions.CodingKeys;
}

unint64_t sub_248708560()
{
  unint64_t result = qword_26931E578;
  if (!qword_26931E578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E578);
  }
  return result;
}

unint64_t sub_2487085B8()
{
  unint64_t result = qword_26931E580;
  if (!qword_26931E580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E580);
  }
  return result;
}

unint64_t sub_248708610()
{
  unint64_t result = qword_26B13FDD8[0];
  if (!qword_26B13FDD8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B13FDD8);
  }
  return result;
}

unint64_t sub_248708668()
{
  unint64_t result = qword_26B140148;
  if (!qword_26B140148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B140148);
  }
  return result;
}

unint64_t sub_2487086C0()
{
  unint64_t result = qword_26B140170;
  if (!qword_26B140170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B140170);
  }
  return result;
}

unint64_t sub_248708718()
{
  unint64_t result = qword_26B140168;
  if (!qword_26B140168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B140168);
  }
  return result;
}

ValueMetadata *type metadata accessor for InputOrigin()
{
  return &type metadata for InputOrigin;
}

uint64_t sub_248708784(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (sub_2486FAB30(a1, a2, a3 & 0x1FF, a4) & 1) != 0 || (uint64_t v10 = v4, (sub_2486FAB30(a1, a2, a3 & 0x1FF, v4)))
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_248712AF4((uint64_t)v9, a1, a2, a3 & 0x1FF);
    return v10;
  }
  return v4;
}

BOOL sub_248708830(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 17)) {
    return 0;
  }
  if (*(unsigned char *)(a2 + 17)) {
    return 1;
  }
  if (*(void *)a1 < *(void *)a2) {
    return 1;
  }
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return (*(unsigned char *)(a2 + 16) & 1) == 0 && *(void *)(a1 + 8) < *(void *)(a2 + 8);
  }
  return (*(unsigned char *)(a2 + 16) & 1) == 0;
}

uint64_t sub_2487088A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_248708914(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_2487088B8);
}

BOOL sub_2487088B8(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5, __int16 a6)
{
  if ((a6 & 0x100) == 0)
  {
    if ((a3 & 0x100) != 0 || a4 < a1) {
      return 0;
    }
    if (a4 == a1)
    {
      if ((a6 & 1) == 0) {
        return (a3 & 1) != 0 || a5 >= a2;
      }
      if ((a3 & 1) == 0) {
        return 0;
      }
    }
  }
  return 1;
}

uint64_t sub_2487088FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_248708914(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_248708950);
}

uint64_t sub_248708914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void, void, void, void, void))
{
  return a5(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16) | (*(unsigned __int8 *)(a1 + 17) << 8), *(void *)a2, *(void *)(a2 + 8), *(unsigned __int8 *)(a2 + 16) | (*(unsigned __int8 *)(a2 + 17) << 8));
}

BOOL sub_248708950(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5, __int16 a6)
{
  if ((a3 & 0x100) == 0)
  {
    if ((a6 & 0x100) != 0 || a1 < a4) {
      return 0;
    }
    if (a1 == a4)
    {
      if ((a3 & 1) == 0) {
        return (a6 & 1) != 0 || a2 >= a5;
      }
      if ((a6 & 1) == 0) {
        return 0;
      }
    }
  }
  return 1;
}

BOOL sub_248708994(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 17)) {
    return 0;
  }
  if (*(unsigned char *)(a1 + 17)) {
    return 1;
  }
  if (*(void *)a2 < *(void *)a1) {
    return 1;
  }
  if (*(void *)a2 != *(void *)a1) {
    return 0;
  }
  if ((*(unsigned char *)(a2 + 16) & 1) == 0) {
    return (*(unsigned char *)(a1 + 16) & 1) == 0 && *(void *)(a2 + 8) < *(void *)(a1 + 8);
  }
  return (*(unsigned char *)(a1 + 16) & 1) == 0;
}

uint64_t sub_248708A04()
{
  char v1 = *(unsigned char *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 17);
  sub_24872D030();
  if ((v2 & 1) == 0)
  {
    sub_24872D040();
    sub_24872D040();
    if ((v1 & 1) == 0) {
      sub_24872D040();
    }
  }
  sub_24872D040();
  return sub_24872D070();
}

uint64_t sub_248708A94()
{
  if ((*(unsigned char *)(v0 + 17) & 1) == 0)
  {
    char v1 = *(unsigned char *)(v0 + 16);
    sub_24872D040();
    sub_24872D040();
    if ((v1 & 1) == 0) {
      sub_24872D040();
    }
  }
  return sub_24872D040();
}

uint64_t sub_248708AFC()
{
  char v1 = *(unsigned char *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 17);
  sub_24872D030();
  if ((v2 & 1) == 0)
  {
    sub_24872D040();
    sub_24872D040();
    if ((v1 & 1) == 0) {
      sub_24872D040();
    }
  }
  sub_24872D040();
  return sub_24872D070();
}

uint64_t sub_248708B84(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 *)(a2 + 17);
  if ((*(unsigned char *)(a1 + 17) & 1) == 0)
  {
    if ((v2 & 1) == 0 && *(void *)a1 == *(void *)a2)
    {
      if (*(unsigned char *)(a1 + 16))
      {
        if (*(unsigned char *)(a2 + 16)) {
          return 1;
        }
      }
      else if ((*(unsigned char *)(a2 + 16) & 1) == 0 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
      {
        return 1;
      }
    }
    return 0;
  }
  return v2;
}

uint64_t sub_248708BDC(uint64_t *a1, uint64_t *a2)
{
  return sub_248708C28(*a1, *a2);
}

uint64_t sub_248708BE8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_248708EE8(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_248708C28(uint64_t result, uint64_t a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
      return 0;
    }
    int64_t v4 = 0;
    uint64_t v25 = result + 56;
    uint64_t v5 = 1 << *(unsigned char *)(result + 32);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(result + 56);
    int64_t v26 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = a2 + 56;
LABEL_7:
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      int64_t v27 = v4;
      unint64_t v10 = v9 | (v4 << 6);
LABEL_25:
      uint64_t v15 = *(void *)(v3 + 48) + 24 * v10;
      uint64_t v16 = *(void *)v15;
      uint64_t v17 = *(void *)(v15 + 8);
      char v18 = *(unsigned char *)(v15 + 16);
      char v19 = *(unsigned char *)(v15 + 17);
      sub_24872D030();
      if ((v19 & 1) == 0)
      {
        sub_24872D040();
        sub_24872D040();
        if ((v18 & 1) == 0) {
          sub_24872D040();
        }
      }
      sub_24872D040();
      uint64_t result = sub_24872D070();
      uint64_t v20 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v21 = result & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21))
      {
        uint64_t v22 = ~v20;
        while (1)
        {
          uint64_t v23 = *(void *)(a2 + 48) + 24 * v21;
          if (*(unsigned char *)(v23 + 17))
          {
            if (v19)
            {
              int64_t v4 = v27;
              goto LABEL_7;
            }
          }
          else
          {
            if (*(void *)v23 == v16) {
              char v24 = v19;
            }
            else {
              char v24 = 1;
            }
            if ((v24 & 1) == 0)
            {
              if (*(unsigned char *)(v23 + 16))
              {
                if (v18)
                {
                  int64_t v4 = v27;
                  goto LABEL_7;
                }
              }
              else if ((v18 & 1) == 0 && *(void *)(v23 + 8) == v17)
              {
                int64_t v4 = v27;
                goto LABEL_7;
              }
            }
          }
          unint64_t v21 = (v21 + 1) & v22;
          if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
            return 0;
          }
        }
      }
      return 0;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_48:
      __break(1u);
      return result;
    }
    if (v11 < v26)
    {
      unint64_t v12 = *(void *)(v25 + 8 * v11);
      int64_t v13 = v4 + 1;
      if (v12) {
        goto LABEL_24;
      }
      int64_t v13 = v4 + 2;
      if (v4 + 2 >= v26) {
        return 1;
      }
      unint64_t v12 = *(void *)(v25 + 8 * v13);
      if (v12) {
        goto LABEL_24;
      }
      int64_t v13 = v4 + 3;
      if (v4 + 3 >= v26) {
        return 1;
      }
      unint64_t v12 = *(void *)(v25 + 8 * v13);
      if (v12) {
        goto LABEL_24;
      }
      int64_t v13 = v4 + 4;
      if (v4 + 4 >= v26) {
        return 1;
      }
      unint64_t v12 = *(void *)(v25 + 8 * v13);
      if (v12)
      {
LABEL_24:
        unint64_t v7 = (v12 - 1) & v12;
        int64_t v27 = v13;
        unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
        goto LABEL_25;
      }
      uint64_t v14 = v4 + 5;
      if (v4 + 5 < v26)
      {
        unint64_t v12 = *(void *)(v25 + 8 * v14);
        if (v12)
        {
          int64_t v13 = v4 + 5;
          goto LABEL_24;
        }
        while (1)
        {
          int64_t v13 = v14 + 1;
          if (__OFADD__(v14, 1)) {
            goto LABEL_48;
          }
          if (v13 >= v26) {
            return 1;
          }
          unint64_t v12 = *(void *)(v25 + 8 * v13);
          ++v14;
          if (v12) {
            goto LABEL_24;
          }
        }
      }
    }
  }
  return 1;
}

uint64_t sub_248708EE8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_24870285C();
  uint64_t result = sub_24872C860();
  uint64_t v10 = result;
  if (v2)
  {
    int64_t v4 = (unsigned __int8 *)(a1 + 49);
    do
    {
      uint64_t v5 = *(void *)(v4 - 17);
      uint64_t v6 = *(void *)(v4 - 9);
      int v7 = *(v4 - 1);
      int v8 = *v4;
      v4 += 24;
      sub_248712AF4((uint64_t)v9, v5, v6, v7 | (v8 << 8));
      --v2;
    }
    while (v2);
    return v10;
  }
  return result;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for InputOrigin.Element(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 18)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for InputOrigin.Element(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(_WORD *)(result + 16) = 0;
    *(_DWORD *)__n128 result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 18) = v3;
  return result;
}

uint64_t sub_248708FD0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_248708FEC(uint64_t result, int a2)
{
  if (a2)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 17) = 1;
  }
  else
  {
    *(unsigned char *)(result + 17) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for InputOrigin.Element()
{
  return &type metadata for InputOrigin.Element;
}

unint64_t sub_248709024()
{
  unint64_t result = qword_26B13FC98;
  if (!qword_26B13FC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B13FC98);
  }
  return result;
}

uint64_t sub_248709078(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_24870908C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_2487090A0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_248709138(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(void *)a2;
    *char v3 = *(void *)a2;
    char v3 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 != 1)
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v5) = 0;
      return v3;
    }
    uint64_t v14 = *((void *)a2 + 1);
    *char v3 = *(void *)a2;
    v3[1] = v14;
    *((unsigned char *)v3 + v5) = 1;
  }
  swift_retain();
  return v3;
}

uint64_t sub_2487092B0(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 0x10) {
    unint64_t v2 = 16;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
}

void *sub_2487093B0(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    uint64_t v10 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v10;
    swift_retain();
    char v11 = 1;
  }
  else
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v11 = 0;
  }
  *((unsigned char *)a1 + v4) = v11;
  return a1;
}

unsigned __int8 *sub_2487094EC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      uint64_t v18 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v18;
      a1[v7] = 1;
      swift_retain();
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      a1[v7] = 0;
    }
  }
  return a1;
}

_OWORD *sub_248709708(_OWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *a1 = *(_OWORD *)a2;
    char v10 = 1;
  }
  else
  {
    (*(void (**)(_OWORD *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 0;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_248709840(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      char v18 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 0;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_248709A58(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 16;
  if (*(void *)(v3 + 64) > 0x10uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_248709B8C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x10) {
    unint64_t v5 = 16;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x248709D54);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_248709D7C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 16;
  if (*(void *)(v2 + 64) > 0x10uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_248709E34(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    size_t v4 = 16;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t type metadata accessor for Parsed()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_248709F24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v38 = a4;
  uint64_t v37 = a3;
  uint64_t v36 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = type metadata accessor for Parsed();
  MEMORY[0x270FA5388](v6);
  unsigned int v8 = (char *)&v29 - v7;
  uint64_t v9 = sub_24872C8E0();
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  int v12 = (char *)&v29 - v11;
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v29 - v14;
  uint64_t v51 = a1;
  sub_2486C2100(a1, (uint64_t)v47);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B140118);
  if (swift_dynamicCast())
  {
    uint64_t v32 = v12;
    uint64_t v33 = v15;
    uint64_t v30 = v9;
    uint64_t v31 = v6;
    uint64_t v34 = v13;
    uint64_t v16 = v51;
    v49[1] = v43;
    long long v49[2] = v44;
    v49[3] = v45;
    char v50 = v46;
    v48[0] = v39;
    v48[1] = v40;
    v48[2] = v41;
    v49[0] = v42;
    sub_2486D0BA8((uint64_t)v49, (uint64_t)&v39, &qword_26B13FDB0);
    BOOL v29 = v49;
    if (*((void *)&v39 + 1))
    {
      sub_2486D0BA8((uint64_t)&v40 + 8, (uint64_t)v47, &qword_26B140128);
      sub_2486D0820((uint64_t)&v39);
    }
    else
    {
      sub_2486B73DC((uint64_t)&v39, &qword_26B13FDB0);
      memset(v47, 0, 32);
    }
    char v19 = v8;
    uint64_t v20 = v33;
    uint64_t v21 = v34;
    uint64_t v22 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B140128);
    char v23 = swift_dynamicCast();
    char v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
    if (v23)
    {
      v24(v22, 0, 1, AssociatedTypeWitness);
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v20, v22, AssociatedTypeWitness);
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v19, v20, AssociatedTypeWitness);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t))(v37 + 40))(v19, v36);
      __swift_destroy_boxed_opaque_existential_1Tm(v16);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v20, AssociatedTypeWitness);
    }
    else
    {
      v24(v22, 1, 1, AssociatedTypeWitness);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v22, v30);
      sub_2486D0BA8((uint64_t)v29, (uint64_t)&v39, &qword_26B13FDB0);
      uint64_t v25 = *((void *)&v39 + 1);
      if (*((void *)&v39 + 1))
      {
        uint64_t v26 = v39;
        uint64_t v27 = v40;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_2486D0820((uint64_t)&v39);
        sub_24870AC58((uint64_t)v48, (uint64_t)&v39);
      }
      else
      {
        sub_2486B73DC((uint64_t)&v39, &qword_26B13FDB0);
        sub_24870AC58((uint64_t)v48, (uint64_t)&v39);
        uint64_t v26 = *((void *)&v40 + 1);
        uint64_t v27 = *((void *)&v41 + 1);
        uint64_t v25 = v41;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_2486EF464((uint64_t)&v39);
      sub_2486B4DD4();
      swift_allocError();
      *(void *)uint64_t v28 = v26;
      *(void *)(v28 + 8) = v25;
      *(void *)(v28 + 16) = v27;
      *(_OWORD *)(v28 + 24) = 0u;
      *(_OWORD *)(v28 + 40) = 0u;
      *(_OWORD *)(v28 + 56) = 0u;
      *(void *)(v28 + 72) = 0;
      *(unsigned char *)(v28 + 80) = 11;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1Tm(v16);
    }
    return sub_2486EF464((uint64_t)v48);
  }
  else
  {
    char v46 = 0;
    long long v44 = 0u;
    long long v45 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    long long v40 = 0u;
    long long v41 = 0u;
    long long v39 = 0u;
    sub_2486B73DC((uint64_t)&v39, qword_26931E3F0);
    sub_2486B4DD4();
    swift_allocError();
    *(void *)uint64_t v17 = 3;
    *(_OWORD *)(v17 + 8) = 0u;
    *(_OWORD *)(v17 + 24) = 0u;
    *(_OWORD *)(v17 + 40) = 0u;
    *(_OWORD *)(v17 + 56) = 0u;
    *(void *)(v17 + 72) = 0;
    *(unsigned char *)(v17 + 80) = 15;
    swift_willThrow();
    return __swift_destroy_boxed_opaque_existential_1Tm(v51);
  }
}

uint64_t sub_24870A444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_24870A4C0(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_24870A4C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_getAssociatedTypeWitness();
  uint64_t v10 = type metadata accessor for Parsed();
  MEMORY[0x270FA5388](v10);
  int v12 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))((char *)&v15 - v11);
  (*(void (**)(uint64_t, uint64_t))(a5 + 32))(a4, a5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = (*v12)(a1, a2, a3);
    swift_release();
    return v13;
  }
  else
  {
    uint64_t result = sub_24872CC40();
    __break(1u);
  }
  return result;
}

uint64_t sub_24870A630@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  type metadata accessor for Parsed();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24870A67C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_24870A4C0(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_24870A6F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v27 = a4;
  uint64_t v41 = a3;
  uint64_t v28 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_24872C8E0();
  uint64_t v22 = *(void *)(v7 - 8);
  uint64_t v23 = v7;
  MEMORY[0x270FA5388](v7);
  char v24 = (char *)&v22 - v8;
  uint64_t v26 = type metadata accessor for Parsed();
  uint64_t v9 = MEMORY[0x270FA5388](v26);
  uint64_t v25 = (char *)&v22 - v10;
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v22 - v15;
  sub_2486C2100(a1, (uint64_t)v38);
  sub_24872C850();
  if (!v4)
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v14, AssociatedTypeWitness);
LABEL_10:
    uint64_t v20 = v25;
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v25, v16, AssociatedTypeWitness);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t))(v41 + 40))(v20, v28);
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, AssociatedTypeWitness);
  }
  sub_2486C2100(a1, (uint64_t)v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B140118);
  if (swift_dynamicCast())
  {
    v39[1] = v33;
    v39[2] = v34;
    v39[3] = v35;
    char v40 = v36;
    v38[0] = v29;
    v38[1] = v30;
    uint64_t v38[2] = v31;
    v39[0] = v32;
    sub_2486D0BA8((uint64_t)v39, (uint64_t)&v29, &qword_26B13FDB0);
    sub_2486EF464((uint64_t)v38);
    if (*((void *)&v29 + 1))
    {
      sub_2486D0BA8((uint64_t)&v30 + 8, (uint64_t)v37, &qword_26B140128);
      sub_2486D0820((uint64_t)&v29);
    }
    else
    {
      sub_2486B73DC((uint64_t)&v29, &qword_26B13FDB0);
      memset(v37, 0, 32);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B140128);
    uint64_t v17 = v24;
    char v18 = swift_dynamicCast();
    char v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    if (v18)
    {
      v19(v17, 0, 1, AssociatedTypeWitness);
      MEMORY[0x24C57CE50](v4);
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v17, AssociatedTypeWitness);
      goto LABEL_10;
    }
    v19(v17, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v17, v23);
  }
  else
  {
    char v36 = 0;
    long long v34 = 0u;
    long long v35 = 0u;
    long long v32 = 0u;
    long long v33 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    long long v29 = 0u;
    sub_2486B73DC((uint64_t)&v29, qword_26931E3F0);
  }
  swift_willThrow();
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t sub_24870AB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_24870A4C0(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_24870ABDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_24870A4C0(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_24870AC58(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_24870ACB4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = (unsigned __int8 *)(a1 + 48);
  while (1)
  {
    unsigned __int8 v3 = *v2;
    if ((*v2 & 0xC0) != 0x40) {
      break;
    }
    v2 += 24;
    if (!--v1)
    {
      uint64_t v4 = *(void *)(a1 + 32);
      uint64_t v5 = *(void *)(a1 + 40);
      unsigned __int8 v3 = *(unsigned char *)(a1 + 48);
      goto LABEL_8;
    }
  }
  uint64_t v4 = *((void *)v2 - 2);
  uint64_t v5 = *((void *)v2 - 1);
LABEL_8:
  sub_2486B7650(v4, v5, v3);
  return v4;
}

uint64_t sub_24870AD3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10)
{
  unint64_t v16 = a3[1];
  unint64_t v17 = a3[3];
  uint64_t v27 = *a3;
  uint64_t v28 = a3[2];
  unint64_t v18 = a3[5];
  uint64_t v29 = a3[4];
  char v26 = *((unsigned char *)a3 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B140100);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_24872D630;
  *(void *)(v19 + 32) = a6;
  *(void *)(v19 + 40) = a7;
  *(void *)(v19 + 48) = a8;
  if (v16)
  {
    if (v18)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      unint64_t v20 = v18;
      unint64_t v21 = v17;
      unint64_t v22 = v16;
      goto LABEL_8;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v21 = v17;
    unint64_t v22 = v16;
  }
  else
  {
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    unint64_t v21 = 0xE000000000000000;
    unint64_t v22 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!v16)
  {
    char v26 = 0;
    uint64_t v29 = 0;
    unint64_t v20 = 0xE000000000000000;
    goto LABEL_10;
  }
  uint64_t v29 = 0;
  unint64_t v20 = 0xE000000000000000;
LABEL_8:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_10:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  uint64_t result = swift_bridgeObjectRelease_n();
  *(void *)a9 = a2;
  *(void *)(a9 + 8) = a4;
  *(void *)(a9 + 16) = a5;
  *(void *)(a9 + 24) = v19;
  *(void *)(a9 + 32) = a1;
  *(unsigned char *)(a9 + 40) = a10 & 1;
  *(void *)(a9 + 48) = v27;
  *(void *)(a9 + 56) = v22;
  *(void *)(a9 + 64) = v28;
  *(void *)(a9 + 72) = v21;
  *(void *)(a9 + 80) = v29;
  *(void *)(a9 + 88) = v20;
  *(unsigned char *)(a9 + 96) = v26;
  *(void *)(a9 + 104) = 0;
  *(void *)(a9 + 112) = 0xE000000000000000;
  return result;
}

double sub_24870AF84@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, unint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W6>, uint64_t a7@<X7>, _OWORD *a8@<X8>, uint64_t *a9, uint64_t a10, uint64_t a11)
{
  unint64_t v54 = a4;
  uint64_t v55 = a7;
  int v50 = a6;
  uint64_t v52 = a2;
  uint64_t v53 = a3;
  uint64_t v51 = a1;
  uint64_t v13 = *(void *)(a11 + 8);
  swift_getAssociatedTypeWitness();
  uint64_t v45 = sub_24872C8E0();
  uint64_t v42 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v15 = (char *)&v38 - v14;
  long long v48 = *(_OWORD *)a5;
  long long v46 = *(_OWORD *)(a5 + 16);
  uint64_t v16 = *(void *)(a5 + 32);
  uint64_t v44 = *(void *)(a5 + 40);
  int v41 = *(unsigned __int8 *)(a5 + 48);
  uint64_t v17 = *a9;
  uint64_t v39 = a9[1];
  uint64_t v40 = v17;
  int v43 = *((unsigned __int8 *)a9 + 16);
  uint64_t v49 = v13;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v47 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(AssociatedTypeWitness, AssociatedConformanceWitness);
  v61[0] = v48;
  v61[1] = v46;
  uint64_t v62 = v16;
  uint64_t v20 = v55;
  uint64_t v63 = v44;
  char v64 = v41;
  uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a11 + 24))(v55, a10, a11);
  uint64_t v22 = v42;
  *(void *)&long long v46 = v21;
  uint64_t v44 = v23;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = a10;
  *(void *)(v24 + 24) = a11;
  uint64_t v25 = v45;
  char v26 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  *(void *)&long long v48 = v15;
  v26(v15, v20, v45);
  char v27 = v43;
  if (v43 == 255)
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(&v58, AssociatedTypeWitness, AssociatedConformanceWitness);
    uint64_t v28 = v58;
    uint64_t v29 = v59;
    char v27 = v60;
  }
  else
  {
    uint64_t v29 = v39;
    uint64_t v28 = v40;
    uint64_t v58 = v40;
    uint64_t v59 = v39;
    char v60 = v43;
  }
  v56[0] = v28;
  v56[1] = v29;
  char v57 = v27;
  double v30 = sub_24870BF08(v51, v52, v53, v54, v47, v61, v46, (uint64_t)v65, v44, v50, (uint64_t)sub_24870DF60, v24, v48, (uint64_t)v56, a10, v49);
  (*(void (**)(uint64_t, uint64_t, double))(v22 + 8))(v55, v25, v30);
  long long v31 = v73;
  a8[8] = v72;
  a8[9] = v31;
  long long v32 = v75;
  a8[10] = v74;
  a8[11] = v32;
  long long v33 = v69;
  a8[4] = v68;
  a8[5] = v33;
  long long v34 = v71;
  a8[6] = v70;
  a8[7] = v34;
  long long v35 = v65[1];
  *a8 = v65[0];
  a8[1] = v35;
  double result = *(double *)&v66;
  long long v37 = v67;
  a8[2] = v66;
  a8[3] = v37;
  return result;
}

double sub_24870B2D8@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, unint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W6>, uint64_t a7@<X7>, _OWORD *a8@<X8>, uint64_t a9, uint64_t a10, uint64_t *a11, uint64_t a12, uint64_t a13)
{
  uint64_t v39 = a7;
  int v40 = a6;
  uint64_t v43 = a3;
  unint64_t v44 = a4;
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  uint64_t v38 = a10;
  uint64_t v37 = a9;
  swift_getAssociatedTypeWitness();
  uint64_t v15 = sub_24872C8E0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  unint64_t v18 = (char *)&v34 - v17;
  LOBYTE(v17) = *(unsigned char *)(a5 + 48);
  uint64_t v19 = *a11;
  uint64_t v36 = a11[1];
  int v35 = *((unsigned __int8 *)a11 + 16);
  long long v20 = *(_OWORD *)(a5 + 16);
  v47[0] = *(_OWORD *)a5;
  v47[1] = v20;
  v47[2] = *(_OWORD *)(a5 + 32);
  char v48 = v17;
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = a12;
  v21[3] = a13;
  uint64_t v22 = v38;
  uint64_t v23 = v37;
  v21[4] = v39;
  v21[5] = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v22, v15);
  v45[0] = v19;
  v45[1] = v36;
  char v46 = v35;
  double v24 = sub_24870BF08(v41, v42, v43, v44, MEMORY[0x263F8EE78], v47, 0, (uint64_t)v49, 0, v40, (uint64_t)sub_24870DC24, (uint64_t)v21, (uint64_t)v18, (uint64_t)v45, a12, a13);
  (*(void (**)(uint64_t, uint64_t, double))(v16 + 8))(v22, v15, v24);
  long long v25 = v57;
  long long v26 = v58;
  long long v27 = v55;
  a8[8] = v56;
  a8[9] = v25;
  long long v28 = v59;
  a8[10] = v26;
  a8[11] = v28;
  long long v29 = v53;
  long long v30 = v54;
  long long v31 = v51;
  a8[4] = v52;
  a8[5] = v29;
  a8[6] = v30;
  a8[7] = v27;
  long long v32 = v49[1];
  *a8 = v49[0];
  a8[1] = v32;
  double result = *(double *)&v50;
  a8[2] = v50;
  a8[3] = v31;
  return result;
}

uint64_t sub_24870B518()
{
  long long v1 = v0[9];
  long long v37 = v0[8];
  v38[0] = v1;
  long long v2 = v0[11];
  v38[1] = v0[10];
  uint64_t v38[2] = v2;
  long long v3 = v0[5];
  *(_OWORD *)&v36[64] = v0[4];
  *(_OWORD *)&v36[80] = v3;
  long long v4 = v0[7];
  *(_OWORD *)&v36[96] = v0[6];
  *(_OWORD *)&v36[112] = v4;
  long long v5 = v0[1];
  *(_OWORD *)uint64_t v36 = *v0;
  *(_OWORD *)&v36[16] = v5;
  long long v6 = v0[3];
  *(_OWORD *)&v36[32] = v0[2];
  *(_OWORD *)&v36[48] = v6;
  sub_24870DB80(v36, &v40);
  sub_24870DB80(&v40, &v50);
  uint64_t v7 = v50;
  if (!v50)
  {
    v39[0] = 60;
    v39[1] = 0xE100000000000000;
    long long v46 = *(_OWORD *)&v36[72];
    long long v47 = *(_OWORD *)&v36[88];
    long long v48 = *(_OWORD *)&v36[104];
    uint64_t v49 = *(void *)&v36[120];
    long long v42 = *(_OWORD *)&v36[8];
    long long v43 = *(_OWORD *)&v36[24];
    long long v44 = *(_OWORD *)&v36[40];
    long long v45 = *(_OWORD *)&v36[56];
    long long v51 = *(_OWORD *)&v36[88];
    uint64_t v9 = *(void *)&v36[88] & 0xFFFFFFFFFFFFLL;
    if ((*(void *)&v36[96] & 0x2000000000000000) != 0) {
      uint64_t v9 = HIBYTE(*(void *)&v36[96]) & 0xFLL;
    }
    if (v9)
    {
      long long v41 = v47;
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_2486B76D8((uint64_t)v36);
      sub_2486CB40C((uint64_t)&v51);
      sub_24870BD14((uint64_t *)v36, (unint64_t *)&v41);
      sub_2486CB438((uint64_t)&v51);
      sub_2486C539C((uint64_t)v36);
    }
    sub_24872C600();
    swift_bridgeObjectRelease();
    sub_24872C600();
    return v39[0];
  }
  if (v50 == 1) {
    return 0;
  }
  sub_2486CB3B0((uint64_t)v38 + 8, (uint64_t)v39);
  sub_2486CB3B0((uint64_t)v39, (uint64_t)&v51);
  int64_t v10 = *(void *)(v7 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
  if ((v52 & 1) == 0)
  {
    if (!v10)
    {
LABEL_32:
      *(void *)&long long v42 = v11;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
      sub_2486D040C();
      uint64_t v8 = sub_24872C4F0();
      swift_bridgeObjectRelease();
      return v8;
    }
    *(void *)&long long v41 = MEMORY[0x263F8EE78];
    sub_2486B9D40(0, v10, 0);
    uint64_t v11 = v41;
    long long v20 = (unsigned __int8 *)(v7 + 48);
    while (1)
    {
      uint64_t v22 = *((void *)v20 - 2);
      uint64_t v21 = *((void *)v20 - 1);
      unsigned int v23 = *v20;
      if (!(v23 >> 6)) {
        break;
      }
      if (v23 >> 6 != 1)
      {
        *(void *)&long long v42 = 45;
        unint64_t v24 = 0xE100000000000000;
        goto LABEL_28;
      }
      *(void *)&long long v42 = 0;
      *((void *)&v42 + 1) = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_24872C600();
      sub_24872C4E0();
LABEL_29:
      sub_2486B7668(v22, v21, v23);
      long long v25 = v42;
      *(void *)&long long v41 = v11;
      unint64_t v27 = *(void *)(v11 + 16);
      unint64_t v26 = *(void *)(v11 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_2486B9D40((char *)(v26 > 1), v27 + 1, 1);
        uint64_t v11 = v41;
      }
      v20 += 24;
      *(void *)(v11 + 16) = v27 + 1;
      *(_OWORD *)(v11 + 16 * v27 + 32) = v25;
      if (!--v10) {
        goto LABEL_32;
      }
    }
    *(void *)&long long v42 = 11565;
    unint64_t v24 = 0xE200000000000000;
LABEL_28:
    *((void *)&v42 + 1) = v24;
    swift_bridgeObjectRetain();
    sub_24872C600();
    goto LABEL_29;
  }
  if (v10)
  {
    *(void *)&long long v41 = MEMORY[0x263F8EE78];
    sub_2486B9D40(0, v10, 0);
    uint64_t v11 = v41;
    uint64_t v12 = (unsigned __int8 *)(v7 + 48);
    while (1)
    {
      uint64_t v14 = *((void *)v12 - 2);
      uint64_t v13 = *((void *)v12 - 1);
      unsigned int v15 = *v12;
      if (!(v15 >> 6)) {
        break;
      }
      if (v15 >> 6 != 1)
      {
        *(void *)&long long v42 = 45;
        unint64_t v16 = 0xE100000000000000;
        goto LABEL_16;
      }
      *(void *)&long long v42 = 0;
      *((void *)&v42 + 1) = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_24872C600();
      sub_24872C4E0();
LABEL_17:
      sub_2486B7668(v14, v13, v15);
      long long v17 = v42;
      *(void *)&long long v41 = v11;
      unint64_t v19 = *(void *)(v11 + 16);
      unint64_t v18 = *(void *)(v11 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_2486B9D40((char *)(v18 > 1), v19 + 1, 1);
        uint64_t v11 = v41;
      }
      v12 += 24;
      *(void *)(v11 + 16) = v19 + 1;
      *(_OWORD *)(v11 + 16 * v19 + 32) = v17;
      if (!--v10) {
        goto LABEL_35;
      }
    }
    *(void *)&long long v42 = 11565;
    unint64_t v16 = 0xE200000000000000;
LABEL_16:
    *((void *)&v42 + 1) = v16;
    swift_bridgeObjectRetain();
    sub_24872C600();
    goto LABEL_17;
  }
LABEL_35:
  *(void *)&long long v42 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
  sub_2486D040C();
  uint64_t v28 = sub_24872C4F0();
  unint64_t v30 = v29;
  swift_bridgeObjectRelease();
  uint64_t v34 = 15392;
  unint64_t v35 = 0xE200000000000000;
  long long v46 = *(_OWORD *)&v36[72];
  long long v47 = *(_OWORD *)&v36[88];
  long long v48 = *(_OWORD *)&v36[104];
  uint64_t v49 = *(void *)&v36[120];
  long long v42 = *(_OWORD *)&v36[8];
  long long v43 = *(_OWORD *)&v36[24];
  long long v44 = *(_OWORD *)&v36[40];
  long long v45 = *(_OWORD *)&v36[56];
  long long v41 = *(_OWORD *)&v36[88];
  uint64_t v31 = *(void *)&v36[88] & 0xFFFFFFFFFFFFLL;
  if ((*(void *)&v36[96] & 0x2000000000000000) != 0) {
    uint64_t v31 = HIBYTE(*((void *)&v41 + 1)) & 0xFLL;
  }
  if (v31)
  {
    long long v33 = v47;
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_2486B76D8((uint64_t)v36);
    sub_2486CB40C((uint64_t)&v41);
    sub_24870BD14((uint64_t *)v36, (unint64_t *)&v33);
    sub_2486CB438((uint64_t)&v41);
    sub_2486C539C((uint64_t)v36);
  }
  sub_24872C600();
  swift_bridgeObjectRelease();
  sub_24872C600();
  uint64_t v34 = v28;
  unint64_t v35 = v30;
  swift_bridgeObjectRetain();
  sub_24872C600();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v34;
}

BOOL sub_24870BA9C()
{
  if (*v0 < 2uLL)
  {
    uint64_t v1 = MEMORY[0x263F8EE78];
    uint64_t v2 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (v2) {
      goto LABEL_3;
    }
LABEL_11:
    BOOL v6 = 0;
    goto LABEL_12;
  }
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    goto LABEL_11;
  }
LABEL_3:
  long long v3 = (unsigned __int8 *)(v1 + 48);
  uint64_t v4 = v2 - 1;
  do
  {
    int v5 = *v3;
    v3 += 24;
    BOOL v6 = (v5 & 0xFFFFFFC1) == 65;
  }
  while ((v5 & 0xFFFFFFC1) != 0x41 && v4-- != 0);
LABEL_12:
  swift_bridgeObjectRelease();
  return v6;
}

void *sub_24870BB14@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void *sub_24870BB20@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_24870BB34@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_24870BB48@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_24870BB5C(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_24870BB8C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_24870BBB8@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_24870BBDC(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_24870BBF0(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_24870BC04(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_24870BC18@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_24870BC2C(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_24870BC40(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_24870BC54(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_24870BC68()
{
  return *v0 == 0;
}

uint64_t sub_24870BC78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

void *sub_24870BC90(void *result)
{
  *v1 &= ~*result;
  return result;
}

void *sub_24870BCA4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_24870BCB4(void *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_24870BCC0(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24870BCD4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_24870E83C(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_24870BD14@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v4 = *a1;
  if ((unint64_t)*a1 >= 2)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = *(void *)(v4 + 16);
    if (v5)
    {
LABEL_3:
      uint64_t v6 = v4 + 32;
      while (*(unsigned __int8 *)(v6 + 16) >> 6 == 1)
      {
        v6 += 24;
        if (!--v5)
        {
          unint64_t v7 = *(void *)(v4 + 32);
          uint64_t v8 = *(void *)(v4 + 40);
          sub_2486B7650(v7, v8, *(unsigned char *)(v4 + 48));
          goto LABEL_11;
        }
      }
      unint64_t v7 = *(void *)v6;
      uint64_t v8 = *(void *)(v6 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v4 = MEMORY[0x263F8EE78];
    uint64_t v5 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (v5) {
      goto LABEL_3;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  int64_t v10 = (void *)a1[4];
  if (!v10[2])
  {
    uint64_t v8 = 0xE500000000000000;
    unint64_t v7 = 0x65756C6176;
    goto LABEL_12;
  }
  uint64_t v11 = v10[4];
  unint64_t v12 = v10[5];
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_2486B8604(45, 0xE100000000000000, v11, v12);
  uint64_t v8 = v13;
LABEL_11:
  uint64_t result = swift_bridgeObjectRelease();
LABEL_12:
  *a2 = v7;
  a2[1] = v8;
  return result;
}

uint64_t sub_24870BE20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15 = a7;
  sub_2486B4DD4();
  swift_allocError();
  *(void *)uint64_t v16 = a4;
  *(void *)(v16 + 8) = a5;
  *(void *)(v16 + 16) = a6;
  *(void *)(v16 + 24) = v15;
  *(void *)(v16 + 32) = a8;
  *(void *)(v16 + 40) = a9;
  *(void *)(v16 + 48) = a1;
  *(void *)(v16 + 56) = a2;
  *(void *)(v16 + 64) = a3;
  *(void *)(v16 + 72) = 0;
  *(unsigned char *)(v16 + 80) = 12;
  swift_bridgeObjectRetain();
  sub_2486DC85C(a5, a6, a7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

double sub_24870BF08@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, unint64_t a4@<X4>, uint64_t a5@<X5>, long long *a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, unsigned __int8 a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v68 = a7;
  uint64_t v66 = a5;
  unint64_t v73 = a4;
  uint64_t v77 = a3;
  uint64_t v76 = a2;
  uint64_t v78 = a1;
  int v74 = a10;
  *(void *)&long long v72 = a12;
  uint64_t v71 = a11;
  uint64_t v65 = a9;
  uint64_t v75 = a13;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v70 = sub_24872C8E0();
  uint64_t v67 = *(void *)(v70 - 8);
  uint64_t v69 = *(void *)(v67 + 64);
  MEMORY[0x270FA5388](v70);
  char v64 = (char *)&v53 - v19;
  long long v63 = *a6;
  long long v62 = a6[1];
  uint64_t v21 = *((void *)a6 + 4);
  uint64_t v20 = *((void *)a6 + 5);
  char v22 = *((unsigned char *)a6 + 48);
  uint64_t v58 = *(void *)a14;
  uint64_t v57 = *(void *)(a14 + 8);
  int v23 = *(unsigned __int8 *)(a14 + 16);
  unint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(a16 + 24);
  uint64_t v53 = a15;
  uint64_t v25 = v24(a15, a16);
  uint64_t v26 = v75;
  int v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v75, 1, AssociatedTypeWitness);
  v84[0] = v63;
  v84[1] = v62;
  uint64_t v28 = v25 | (v27 != 1);
  uint64_t v85 = v21;
  uint64_t v86 = v20;
  char v87 = v22;
  uint64_t v29 = v76;
  swift_bridgeObjectRetain();
  uint64_t v30 = v77;
  swift_bridgeObjectRetain();
  uint64_t v31 = v78;
  sub_24870AD3C(v66, v28, (uint64_t *)v84, v68, v65, v78, v29, v30, (uint64_t)&v88, 0);
  long long v55 = v88;
  uint64_t v54 = v89;
  int v56 = v91;
  long long v63 = v92;
  long long v62 = v93;
  uint64_t v61 = v94;
  uint64_t v60 = v95;
  int v59 = v96;
  uint64_t v32 = v58;
  if (v23 == 255) {
    uint64_t v32 = 0;
  }
  uint64_t v68 = v32;
  uint64_t v33 = v57;
  if (v23 == 255) {
    uint64_t v33 = 0;
  }
  uint64_t v66 = v33;
  if (v23 == 255) {
    int v34 = 4;
  }
  else {
    int v34 = v23;
  }
  LODWORD(v65) = v34;
  uint64_t v57 = v97;
  uint64_t v58 = v98;
  unint64_t v35 = (void *)swift_allocObject();
  uint64_t v36 = v53;
  uint64_t v35[2] = v53;
  v35[3] = a16;
  uint64_t v37 = v72;
  v35[4] = v71;
  v35[5] = v37;
  v35[6] = v31;
  v35[7] = v29;
  v35[8] = v30;
  uint64_t v38 = v67;
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
  long long v72 = v90;
  uint64_t v40 = v64;
  uint64_t v41 = v26;
  uint64_t v42 = v70;
  v39(v64, v41, v70);
  unint64_t v43 = (*(unsigned __int8 *)(v38 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  unint64_t v44 = (v69 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
  long long v45 = (char *)swift_allocObject();
  *((void *)v45 + 2) = v36;
  *((void *)v45 + 3) = a16;
  unint64_t v46 = v73;
  *((void *)v45 + 4) = v73;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&v45[v43], v40, v42);
  long long v47 = &v45[v44];
  uint64_t v48 = v76;
  *(void *)long long v47 = v78;
  *((void *)v47 + 1) = v48;
  *((void *)v47 + 2) = v77;
  char v80 = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2486B77C8(v46);
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v75, v42);
  *(void *)a8 = v46;
  *(_OWORD *)(a8 + 8) = v55;
  *(void *)(a8 + 24) = v54;
  *(_OWORD *)(a8 + 32) = v72;
  *(unsigned char *)(a8 + 48) = v56;
  *(_DWORD *)(a8 + 49) = v84[0];
  *(_DWORD *)(a8 + 52) = *(_DWORD *)((char *)v84 + 3);
  *(_OWORD *)(a8 + 56) = v63;
  double result = *(double *)&v62;
  *(_OWORD *)(a8 + 72) = v62;
  uint64_t v50 = v60;
  *(void *)(a8 + 88) = v61;
  *(void *)(a8 + 96) = v50;
  *(unsigned char *)(a8 + 104) = v59;
  *(_DWORD *)(a8 + 108) = *(_DWORD *)&v83[3];
  *(_DWORD *)(a8 + 105) = *(_DWORD *)v83;
  uint64_t v51 = v58;
  *(void *)(a8 + 112) = v57;
  *(void *)(a8 + 120) = v51;
  uint64_t v52 = v66;
  *(void *)(a8 + 128) = v68;
  *(void *)(a8 + 136) = v52;
  *(unsigned char *)(a8 + 144) = v65;
  *(unsigned char *)(a8 + 145) = v74;
  *(_DWORD *)(a8 + 146) = v81;
  *(_WORD *)(a8 + 150) = v82;
  *(void *)(a8 + 152) = sub_24870DCA4;
  *(void *)(a8 + 160) = v35;
  *(unsigned char *)(a8 + 168) = v80;
  *(_DWORD *)(a8 + 169) = *(_DWORD *)v79;
  *(_DWORD *)(a8 + 172) = *(_DWORD *)&v79[3];
  *(void *)(a8 + 176) = sub_24870DE5C;
  *(void *)(a8 + 184) = v45;
  return result;
}

uint64_t sub_24870C4F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v31 = a6;
  uint64_t v32 = a7;
  uint64_t v29 = a4;
  uint64_t v30 = a5;
  uint64_t v34 = a3;
  uint64_t v33 = a2;
  uint64_t v27 = a9;
  uint64_t v28 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_24872C8E0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v26 - v14;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  long long v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 8);
  swift_bridgeObjectRetain();
  v17(a8, a10, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v18 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v15, 1, AssociatedTypeWitness) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(v27, v15, AssociatedTypeWitness);
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  unsigned __int8 v19 = v32;
  uint64_t v20 = v32;
  sub_2486B4DD4();
  swift_allocError();
  uint64_t v21 = v30;
  *(void *)uint64_t v22 = v29;
  *(void *)(v22 + 8) = v21;
  uint64_t v23 = v31;
  *(void *)(v22 + 16) = v31;
  *(void *)(v22 + 24) = v20;
  *(void *)(v22 + 32) = a8;
  *(void *)(v22 + 40) = a10;
  uint64_t v24 = v33;
  *(void *)(v22 + 48) = v28;
  *(void *)(v22 + 56) = v24;
  *(void *)(v22 + 64) = v34;
  *(void *)(v22 + 72) = 0;
  *(unsigned char *)(v22 + 80) = 12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2486DC85C(v21, v23, v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

uint64_t sub_24870C76C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t, uint64_t))
{
  uint64_t result = a10(a8, a9);
  if (v10)
  {
    sub_2486B4DD4();
    swift_allocError();
    *(void *)uint64_t v19 = a4;
    *(void *)(v19 + 8) = a5;
    *(void *)(v19 + 16) = a6;
    *(void *)(v19 + 24) = a7;
    *(void *)(v19 + 32) = a8;
    *(void *)(v19 + 40) = a9;
    *(void *)(v19 + 48) = a1;
    *(void *)(v19 + 56) = a2;
    *(void *)(v19 + 64) = a3;
    *(void *)(v19 + 72) = v10;
    *(unsigned char *)(v19 + 80) = 12;
    swift_bridgeObjectRetain();
    sub_2486DC85C(a5, a6, a7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_24870C87C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t), uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v28 = a5;
  uint64_t v30 = a8;
  uint64_t v25 = a7;
  uint64_t v26 = a3;
  unsigned int v27 = a4;
  uint64_t v24 = a14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v22 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v23 = AssociatedTypeWitness;
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v19 = (char *)&v22 - v18;
  uint64_t v20 = v29;
  uint64_t result = v30(a10, a11, a12, a1, a2, v26, v27, v28, a6);
  if (!v20)
  {
    (*(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 32))(v25, v19, a10, a11, a12, a1, a13);
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v19, v23);
  }
  return result;
}

uint64_t sub_24870CA00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v21 = a5;
  uint64_t v22 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = sub_24872C8E0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v20 - v15;
  if (a3 == 1) {
    a1 = sub_248708EE8((uint64_t)&unk_26FC75DB8);
  }
  else {
    swift_bridgeObjectRetain();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a4, v13);
  uint64_t v17 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    long long v26 = 0u;
    long long v27 = 0u;
  }
  else
  {
    *((void *)&v27 + 1) = AssociatedTypeWitness;
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v26);
    (*(void (**)(uint64_t *, char *, uint64_t))(v17 + 32))(boxed_opaque_existential_1Tm, v16, AssociatedTypeWitness);
  }
  sub_2486B747C((uint64_t)&v26, (uint64_t)v24);
  v23[0] = v21;
  v23[1] = a6;
  v23[2] = a7;
  v24[4] = a1;
  char v25 = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24870FAE8(v23);
  sub_2486D0820((uint64_t)v23);
  swift_bridgeObjectRelease();
  return sub_2486B73DC((uint64_t)&v26, &qword_26B140128);
}

uint64_t sub_24870CC4C()
{
  return 0;
}

uint64_t sub_24870CC58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_24870CC98(a1, a2, a3, a4, a5, a6, *(void *)(a7 + 16));
}

uint64_t sub_24870CC78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24870CD8C(a1, *(void *)(a2 + 16), *(void *)(a3 - 8));
}

uint64_t sub_24870CC98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _OWORD v18[3] = a7;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v18);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 16))(boxed_opaque_existential_1Tm, a2, a7);
  sub_2486B747C((uint64_t)v18, (uint64_t)v16);
  v15[0] = a3;
  v15[1] = a4;
  v15[2] = a5;
  v16[4] = a6;
  char v17 = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24870FAE8(v15);
  sub_2486D0820((uint64_t)v15);
  return sub_2486B73DC((uint64_t)v18, &qword_26B140128);
}

uint64_t sub_24870CD8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24872C8E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, a2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v10, a2);
    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, a2);
  }
  return v14;
}

uint64_t sub_24870CF84(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_24870CFC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v10 = sub_24872C440();
  sub_24870F170(a3, a4, a5, a6, v10, (void (*)(uint64_t *))sub_24870DB90);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24870D068(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24872C830();
  return sub_24872C800();
}

uint64_t sub_24870D130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  return sub_24870CFC0(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_24870D138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    *(void *)&long long v14 = a1;
    uint64_t v6 = sub_24872C830();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    if ((sub_24872C8C0() & 1) == 0)
    {
      *(void *)&long long v14 = a1;
      uint64_t WitnessTable = swift_getWitnessTable();
      MEMORY[0x24C57C200](&v11, v6, WitnessTable);
      swift_bridgeObjectRelease();
      uint64_t v13 = v11;
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = a2;
      *(void *)(v9 + 24) = a3;
      sub_24872CAF0();
      swift_getWitnessTable();
      sub_24872CCD0();
      swift_release();
      swift_bridgeObjectRelease();
      long long v11 = v14;
      uint64_t v12 = v15;
      sub_24872CB90();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v7 = sub_24872C4F0();
      swift_release();
      swift_bridgeObjectRelease();
      return v7;
    }
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_24870D35C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_24870D138(*a1, *(void *)(a2 + 16), *(void *)(a3 - 8));
}

uint64_t sub_24870D36C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_24870D3A8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_24870D3BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 32))();
}

uint64_t sub_24870D3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t destroy for ArgumentDefinition(uint64_t a1)
{
  if (*(void *)a1 >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2486C549C(*(void *)(a1 + 128), *(void *)(a1 + 136), *(unsigned char *)(a1 + 144));
  sub_2486C54F4();
  return swift_release();
}

uint64_t initializeWithCopy for ArgumentDefinition(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  if (*(void *)a2 >= 2uLL) {
    uint64_t v4 = swift_bridgeObjectRetain();
  }
  *(void *)a1 = v4;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  uint64_t v10 = *(void *)(a2 + 128);
  uint64_t v11 = *(void *)(a2 + 136);
  char v16 = *(unsigned char *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2486B77D8(v10, v11, v16);
  *(void *)(a1 + 128) = v10;
  *(void *)(a1 + 136) = v11;
  *(unsigned char *)(a1 + 144) = v16;
  *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
  uint64_t v12 = *(void *)(a2 + 152);
  uint64_t v13 = *(void *)(a2 + 160);
  LOBYTE(v6) = *(unsigned char *)(a2 + 168);
  sub_2486B7830();
  *(void *)(a1 + 152) = v12;
  *(void *)(a1 + 160) = v13;
  *(unsigned char *)(a1 + 168) = v6;
  uint64_t v14 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v14;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ArgumentDefinition(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)a2;
  if (v4 >= 2)
  {
    if (v5 >= 2)
    {
      *(void *)a1 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2486B73DC(a1, &qword_26931E588);
      *(void *)a1 = *(void *)a2;
    }
  }
  else
  {
    *(void *)a1 = v5;
    if (v5 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 128);
  uint64_t v7 = *(void *)(a2 + 136);
  char v8 = *(unsigned char *)(a2 + 144);
  sub_2486B77D8(v6, v7, v8);
  uint64_t v9 = *(void *)(a1 + 128);
  uint64_t v10 = *(void *)(a1 + 136);
  *(void *)(a1 + 128) = v6;
  *(void *)(a1 + 136) = v7;
  char v11 = *(unsigned char *)(a1 + 144);
  *(unsigned char *)(a1 + 144) = v8;
  sub_2486C549C(v9, v10, v11);
  *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
  uint64_t v12 = *(void *)(a2 + 152);
  uint64_t v13 = *(void *)(a2 + 160);
  char v14 = *(unsigned char *)(a2 + 168);
  sub_2486B7830();
  *(void *)(a1 + 152) = v12;
  *(void *)(a1 + 160) = v13;
  *(unsigned char *)(a1 + 168) = v14;
  sub_2486C54F4();
  uint64_t v15 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v15;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy192_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 128) = result;
  *(_OWORD *)(a1 + 144) = v9;
  return result;
}

uint64_t assignWithTake for ArgumentDefinition(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a2;
  if (*(void *)a1 >= 2uLL)
  {
    if (v4 >= 2)
    {
      *(void *)a1 = v4;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_2486B73DC(a1, &qword_26931E588);
  }
  *(void *)a1 = v4;
LABEL_6:
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v8 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v8;
  swift_bridgeObjectRelease();
  char v9 = *(unsigned char *)(a2 + 144);
  uint64_t v10 = *(void *)(a1 + 128);
  uint64_t v11 = *(void *)(a1 + 136);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  char v12 = *(unsigned char *)(a1 + 144);
  *(unsigned char *)(a1 + 144) = v9;
  sub_2486C549C(v10, v11, v12);
  *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
  char v13 = *(unsigned char *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(unsigned char *)(a1 + 168) = v13;
  sub_2486C54F4();
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArgumentDefinition(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 192)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArgumentDefinition(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 192) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 192) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArgumentDefinition()
{
  return &type metadata for ArgumentDefinition;
}

unsigned char *storeEnumTagSinglePayload for ArgumentDefinition.ParsingStrategy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24870DAB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArgumentDefinition.ParsingStrategy()
{
  return &type metadata for ArgumentDefinition.ParsingStrategy;
}

unint64_t sub_24870DAF0()
{
  unint64_t result = qword_26931E590[0];
  if (!qword_26931E590[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26931E590);
  }
  return result;
}

uint64_t sub_24870DB44(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

void *sub_24870DB80(void *a1, void *a2)
{
  *a2 = *a1;
  return a2;
}

uint64_t sub_24870DB90(uint64_t a1)
{
  return sub_24870D068(a1);
}

uint64_t sub_24870DB98()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24870DBA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(v1 + 24) + 16))(*(void *)(v1 + 16));
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_24870DBEC()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_24870DC24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7, uint64_t a8, uint64_t a9)
{
  return sub_24870C76C(a1, a2, a3, a4, a5, a6, a7, a8, a9, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 32));
}

uint64_t sub_24870DC5C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_24870DCA4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_24870C87C(a1, a2, a3, a4, a5, a6, a7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))(v7 + 32), *(void *)(v7 + 40), *(void *)(v7 + 48), *(void *)(v7 + 56), *(void *)(v7 + 64), *(void *)(v7 + 16), *(void *)(v7 + 24));
}

uint64_t sub_24870DCDC()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(sub_24872C8E0() - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  if (*(void *)(v0 + 32) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v4, 1, AssociatedTypeWitness)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v4, AssociatedTypeWitness);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, ((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 24, v3 | 7);
}

uint64_t sub_24870DE5C(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(sub_24872C8E0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_24870CA00(a1, a2, *(void *)(v2 + 32), v2 + v6, *(void *)(v2 + v7), *(void *)(v2 + v7 + 8), *(void *)(v2 + v7 + 16));
}

uint64_t sub_24870DF50()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24870DF60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  return sub_24870C4F4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_24870DF90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 8);
}

uint64_t type metadata accessor for Bare()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t destroy for ArgumentDefinition.Update()
{
  return sub_2486C54F4();
}

uint64_t _s22ArgumentParserInternal18ArgumentDefinitionV6UpdateOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_2486B7830();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ArgumentDefinition.Update(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_2486B7830();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_2486C54F4();
  return a1;
}

uint64_t assignWithTake for ArgumentDefinition.Update(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_2486C54F4();
  return a1;
}

uint64_t sub_24870E0B0(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ArgumentDefinition.Update()
{
  return &type metadata for ArgumentDefinition.Update;
}

uint64_t destroy for ArgumentDefinition.Help()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ArgumentDefinition.Help(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v7 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArgumentDefinition.Help(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for ArgumentDefinition.Help(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v7 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArgumentDefinition.Help(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArgumentDefinition.Help(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArgumentDefinition.Help()
{
  return &type metadata for ArgumentDefinition.Help;
}

uint64_t *initializeBufferWithCopyOfBuffer for ArgumentDefinition.Kind(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    uint64_t v3 = swift_bridgeObjectRetain();
  }
  *a1 = v3;
  return a1;
}

unint64_t destroy for ArgumentDefinition.Kind(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t *assignWithCopy for ArgumentDefinition.Kind(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF) {
      swift_bridgeObjectRetain();
    }
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

unint64_t *assignWithTake for ArgumentDefinition.Kind(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  if (v3 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArgumentDefinition.Kind(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ArgumentDefinition.Kind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_24870E684(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_24870E69C(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ArgumentDefinition.Kind()
{
  return &type metadata for ArgumentDefinition.Kind;
}

ValueMetadata *type metadata accessor for ArgumentDefinition.Help.Options()
{
  return &type metadata for ArgumentDefinition.Help.Options;
}

unint64_t sub_24870E6E0()
{
  unint64_t result = qword_26931E618;
  if (!qword_26931E618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E618);
  }
  return result;
}

unint64_t sub_24870E738()
{
  unint64_t result = qword_26931E620;
  if (!qword_26931E620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E620);
  }
  return result;
}

unint64_t sub_24870E790()
{
  unint64_t result = qword_26931E628;
  if (!qword_26931E628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E628);
  }
  return result;
}

unint64_t sub_24870E7E8()
{
  unint64_t result = qword_26931E630;
  if (!qword_26931E630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E630);
  }
  return result;
}

uint64_t sub_24870E83C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  unsigned int v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t destroy for ParsedValues()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ParsedValues(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ParsedValues(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ParsedValues(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ParsedValues(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ParsedValues(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParsedValues()
{
  return &type metadata for ParsedValues;
}

uint64_t destroy for ParsedValues.Element(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 48)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 24);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ParsedValues.Element(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v5 = (_OWORD *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    *(void *)(a1 + 48) = v6;
    (**(void (***)(uint64_t, _OWORD *, uint64_t))(v6 - 8))(a1 + 24, v5, v6);
  }
  else
  {
    long long v7 = v5[1];
    *(_OWORD *)(a1 + 24) = *v5;
    *(_OWORD *)(a1 + 40) = v7;
  }
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ParsedValues.Element(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 48);
  if (!*(void *)(a1 + 48))
  {
    if (v4)
    {
      *(void *)(a1 + 48) = v4;
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 24, a2 + 24);
      goto LABEL_8;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v5;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 24);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
LABEL_8:
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    long long v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        __n128 result = (uint64_t *)swift_release();
        *long long v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *__n128 result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *long long v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for ParsedValues.Element(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 48)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 24);
  }
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for ParsedValues.Element(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ParsedValues.Element(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParsedValues.Element()
{
  return &type metadata for ParsedValues.Element;
}

uint64_t sub_24870F06C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (*(void *)(a1 + 8))
  {
    long long v8 = *(_OWORD *)(a1 + 48);
    void v13[2] = *(_OWORD *)(a1 + 32);
    uint64_t v13[3] = v8;
    char v14 = *(unsigned char *)(a1 + 64);
    long long v9 = *(_OWORD *)(a1 + 16);
    v13[0] = *(_OWORD *)a1;
    v13[1] = v9;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    sub_248712620((uint64_t)v13, a2, a3, a4, isUniquelyReferenced_nonNull_native);
    uint64_t *v4 = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_2486B73DC(a1, &qword_26B13FDB0);
    sub_248712254(a2, a3, a4, (uint64_t)v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_2486B73DC((uint64_t)v13, &qword_26B13FDB0);
  }
}

uint64_t sub_24870F170(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t *))
{
  long long v12 = v6[1];
  long long v27 = *v6;
  long long v28 = v12;
  uint64_t v29 = *((void *)v6 + 4);
  sub_24870F36C(a1, a2, a3, (uint64_t)&v18);
  if (*((void *)&v18 + 1))
  {
    v24[1] = v20;
    long long v25 = v21;
    char v26 = v22;
    long long v23 = v18;
    v24[0] = v19;
  }
  else
  {
    uint64_t v13 = sub_24872C830();
    *(void *)&long long v23 = a1;
    *((void *)&v23 + 1) = a2;
    *(void *)&v24[0] = a3;
    *((void *)&v24[0] + 1) = a5;
    *(void *)&long long v25 = v13;
    *((void *)&v25 + 1) = MEMORY[0x263F8EE88];
    char v26 = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2486B73DC((uint64_t)&v18, &qword_26B13FDB0);
  }
  sub_2486B747C((uint64_t)v24 + 8, (uint64_t)&v18);
  if (!*((void *)&v19 + 1))
  {
    sub_2486B73DC((uint64_t)&v18, &qword_26B140128);
    goto LABEL_8;
  }
  sub_24872C830();
  if (!swift_dynamicCast())
  {
LABEL_8:
    uint64_t v17 = a5;
    swift_bridgeObjectRetain();
  }
  if (v26 == 1)
  {
    sub_24872C830();
    sub_24872C820();
    char v26 = 0;
  }
  a6(&v17);
  uint64_t v14 = v17;
  *((void *)&v19 + 1) = sub_24872C830();
  *(void *)&long long v18 = v14;
  sub_2486D0880((uint64_t)&v18, (uint64_t)v24 + 8);
  uint64_t v15 = swift_bridgeObjectRetain();
  sub_24870F970(v15);
  sub_24870FAE8((uint64_t *)&v23);
  return sub_2486D0820((uint64_t)&v23);
}

uint64_t sub_24870F36C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *v4;
  if (*(void *)(v6 + 16))
  {
    uint64_t v9 = result;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_2487104AC(v9, a2, a3);
    if (v11)
    {
      sub_2486D08E8(*(void *)(v6 + 56) + 72 * v10, a4);
    }
    else
    {
      *(unsigned char *)(a4 + 64) = 0;
      *(_OWORD *)(a4 + 32) = 0u;
      *(_OWORD *)(a4 + 48) = 0u;
      *(_OWORD *)a4 = 0u;
      *(_OWORD *)(a4 + 16) = 0u;
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(unsigned char *)(a4 + 64) = 0;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

uint64_t sub_24870F440(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(char *), uint64_t a7, uint64_t a8)
{
  uint64_t v51 = a7;
  uint64_t v52 = a6;
  uint64_t v53 = a4;
  uint64_t v49 = sub_24872C8E0();
  uint64_t v48 = *(void *)(v49 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v49);
  char v16 = (char *)&v43 - v15;
  uint64_t v17 = *(void *)(a8 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v14);
  long long v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  long long v55 = (char *)&v43 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v43 - v23;
  long long v25 = v8[1];
  long long v64 = *v8;
  long long v65 = v25;
  uint64_t v54 = v8;
  uint64_t v66 = *((void *)v8 + 4);
  uint64_t v47 = a1;
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  sub_24870F36C(v26, v28, a3, (uint64_t)v58);
  uint64_t v30 = a5;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v31(v24, a5, a8);
  if (*((void *)&v58[0] + 1))
  {
    uint64_t v50 = *(void (**)(char *, uint64_t))(v17 + 8);
    v50(v24, a8);
    v61[1] = v58[2];
    long long v62 = v58[3];
    char v63 = v59;
    long long v60 = v58[0];
    v61[0] = v58[1];
  }
  else
  {
    uint64_t v57 = a8;
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v56);
    v31((char *)boxed_opaque_existential_1Tm, (uint64_t)v24, a8);
    uint64_t v46 = a5;
    long long v45 = v20;
    uint64_t v33 = *(void (**)(char *, uint64_t))(v17 + 8);
    unint64_t v44 = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v50 = v33;
    v33(v24, a8);
    long long v20 = v45;
    uint64_t v30 = v46;
    *(void *)&long long v60 = v47;
    *((void *)&v60 + 1) = v27;
    uint64_t v31 = v44;
    *(void *)&v61[0] = v29;
    sub_2486B75C0((uint64_t)v56, (uint64_t)v61 + 8);
    *((void *)&v62 + 1) = MEMORY[0x263F8EE88];
    char v63 = 1;
    sub_2486B73DC((uint64_t)v58, &qword_26B13FDB0);
  }
  sub_2486B747C((uint64_t)v61 + 8, (uint64_t)v56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B140128);
  int v34 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v16, v34 ^ 1u, 1, a8);
  v31(v20, v30, a8);
  int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, a8);
  uint64_t v36 = v55;
  if (v35 == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v55, v20, a8);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v16, v49);
    uint64_t v37 = v50;
  }
  else
  {
    uint64_t v38 = v50;
    v50(v20, a8);
    uint64_t v39 = v16;
    uint64_t v37 = v38;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v36, v39, a8);
  }
  v52(v36);
  uint64_t v57 = a8;
  uint64_t v40 = __swift_allocate_boxed_opaque_existential_1Tm(v56);
  v31((char *)v40, (uint64_t)v36, a8);
  sub_2486D0880((uint64_t)v56, (uint64_t)v61 + 8);
  uint64_t v41 = swift_bridgeObjectRetain();
  sub_24870F970(v41);
  sub_24870FAE8((uint64_t *)&v60);
  v37(v36, a8);
  return sub_2486D0820((uint64_t)&v60);
}

uint64_t sub_24870F970(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v10 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    __n128 result = sub_248712AF4((uint64_t)v13, *(void *)(*(void *)(v1 + 48) + 24 * v9), *(void *)(*(void *)(v1 + 48) + 24 * v9 + 8), *(unsigned __int8 *)(*(void *)(v1 + 48) + 24 * v9 + 16) | (*(unsigned __int8 *)(*(void *)(v1 + 48)+ 24 * v9+ 17) << 8));
  }
  int64_t v12 = v10 + 4;
  if (v12 < v7)
  {
    unint64_t v11 = *(void *)(v3 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        int64_t v2 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        ++v12;
        if (v11) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v12;
    goto LABEL_22;
  }
LABEL_23:
  return swift_release();
}

uint64_t sub_24870FAE8(uint64_t *a1)
{
  uint64_t v3 = *v1;
  if (*(void *)(v3 + 16))
  {
    uint64_t v5 = *a1;
    uint64_t v4 = a1[1];
    unint64_t v6 = (void *)a1[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_2487104AC(v5, v4, v6);
    if (v8)
    {
      sub_2486D08E8(*(void *)(v3 + 56) + 72 * v7, (uint64_t)&v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v17 + 1))
      {
        _OWORD v22[2] = v19;
        v22[3] = v20;
        char v23 = v21;
        v22[0] = v17;
        v22[1] = v18;
        sub_2486D08E8((uint64_t)a1, (uint64_t)&v17);
        uint64_t v9 = swift_bridgeObjectRetain();
        sub_24870F970(v9);
        long long v10 = v17;
        unint64_t v11 = (void *)v18;
        sub_2486D08E8((uint64_t)&v17, (uint64_t)v16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24870F06C((uint64_t)v16, v10, *((uint64_t *)&v10 + 1), v11);
        sub_2486D0820((uint64_t)&v17);
        return sub_2486D0820((uint64_t)v22);
      }
    }
    else
    {
      char v21 = 0;
      long long v19 = 0u;
      long long v20 = 0u;
      long long v17 = 0u;
      long long v18 = 0u;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    char v21 = 0;
    long long v19 = 0u;
    long long v20 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
  }
  sub_2486B73DC((uint64_t)&v17, &qword_26B13FDB0);
  uint64_t v13 = *a1;
  uint64_t v14 = a1[1];
  uint64_t v15 = (void *)a1[2];
  sub_2486D08E8((uint64_t)a1, (uint64_t)v22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_24870F06C((uint64_t)v22, v13, v14, v15);
}

uint64_t sub_24870FC9C(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = sub_24872CEB0(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (uint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_24872CEB0() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_24870FD64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (uint64_t *)(a1 + 48);
    for (uint64_t i = (uint64_t *)(a2 + 48); ; i += 8)
    {
      uint64_t v6 = *(v3 - 2);
      uint64_t v7 = *(v3 - 1);
      unint64_t v8 = *v3;
      uint64_t v10 = v3[3];
      uint64_t v9 = v3[4];
      int v11 = *((unsigned __int8 *)v3 + 40);
      uint64_t v12 = *(i - 2);
      uint64_t v13 = *(i - 1);
      uint64_t v15 = *i;
      uint64_t v14 = i[1];
      uint64_t v16 = i[2];
      uint64_t v17 = i[3];
      uint64_t v18 = i[4];
      uint64_t v19 = ((unint64_t)*v3 >> 61) & 3;
      char v20 = *((unsigned char *)i + 40);
      if (v19)
      {
        if (v19 != 1)
        {
          uint64_t result = 0;
          if ((v15 & 0x6000000000000000) != 0x4000000000000000
            || v15 != 0x4000000000000000
            || v13 | v12 | v14 | v16)
          {
            return result;
          }
          uint64_t v27 = v3[4];
          int v28 = *((unsigned __int8 *)v3 + 40);
          uint64_t v29 = i[4];
          sub_24870266C(0, 0, 0x4000000000000000uLL);
          uint64_t v18 = v29;
          int v11 = v28;
          uint64_t v9 = v27;
LABEL_33:
          if (v10 != v17) {
            return 0;
          }
          goto LABEL_34;
        }
        if ((v15 & 0x6000000000000000) != 0x2000000000000000) {
          return 0;
        }
        goto LABEL_13;
      }
      if ((v15 & 0x6000000000000000) != 0) {
        return 0;
      }
      if ((v8 & 0x8000000000000000) != 0)
      {
        if ((v15 & 0x8000000000000000) == 0) {
          return 0;
        }
        uint64_t v30 = v3[1];
        uint64_t v31 = v3[2];
        uint64_t v50 = i[4];
        if (v8 >> 6)
        {
          int v32 = v15 & 0xC0;
          if (v8 >> 6 == 1)
          {
            if (v32 != 64) {
              return 0;
            }
            if (v6 == v12 && v7 == v13)
            {
              if ((v8 ^ v15)) {
                return 0;
              }
            }
            else
            {
              uint64_t v47 = v3[2];
              uint64_t v49 = v3[4];
              uint64_t v44 = v3[1];
              int v45 = *((unsigned __int8 *)v3 + 40);
              char v40 = sub_24872CEB0();
              uint64_t result = 0;
              if ((v40 & 1) == 0) {
                return result;
              }
              uint64_t v9 = v49;
              uint64_t v18 = v50;
              int v11 = v45;
              uint64_t v30 = v44;
              uint64_t v31 = v47;
              if ((v8 ^ v15)) {
                return result;
              }
            }
LABEL_61:
            if (v30 == v14 && v31 == v16) {
              goto LABEL_33;
            }
            int v41 = v11;
            uint64_t v42 = v9;
            char v43 = sub_24872CEB0();
            uint64_t result = 0;
            if ((v43 & 1) == 0) {
              return result;
            }
            BOOL v39 = v10 == v17;
            uint64_t v9 = v42;
            int v11 = v41;
            goto LABEL_65;
          }
          if (v32 != 128) {
            return 0;
          }
        }
        else if (*i >= 0x40u)
        {
          return 0;
        }
        if (v6 != v12 || v7 != v13)
        {
          uint64_t v46 = v3[2];
          uint64_t v48 = v3[4];
          int v33 = *((unsigned __int8 *)v3 + 40);
          uint64_t v34 = v3[1];
          char v35 = sub_24872CEB0();
          uint64_t v31 = v46;
          uint64_t v9 = v48;
          uint64_t v30 = v34;
          uint64_t v18 = v50;
          int v11 = v33;
          if ((v35 & 1) == 0) {
            return 0;
          }
        }
        goto LABEL_61;
      }
      if (v15 < 0) {
        return 0;
      }
      if (!(v8 >> 6)) {
        break;
      }
      int v26 = v15 & 0xC0;
      if (v8 >> 6 != 1)
      {
        if (v26 != 128) {
          return 0;
        }
        goto LABEL_13;
      }
      if (v26 != 64) {
        return 0;
      }
      if (v6 != v12 || v7 != v13)
      {
        uint64_t v50 = i[4];
        int v36 = *((unsigned __int8 *)v3 + 40);
        uint64_t v37 = v3[4];
        char v38 = sub_24872CEB0();
        uint64_t result = 0;
        if (v38 & 1) == 0 || ((v8 ^ v15)) {
          return result;
        }
        BOOL v39 = v10 == v17;
        uint64_t v9 = v37;
        int v11 = v36;
LABEL_65:
        uint64_t v18 = v50;
        if (!v39) {
          return result;
        }
        goto LABEL_34;
      }
      uint64_t result = 0;
      if (((v8 ^ v15) & 1) != 0 || v10 != v17) {
        return result;
      }
LABEL_34:
      if (v11)
      {
        if ((v20 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        if (v9 == v18) {
          char v5 = v20;
        }
        else {
          char v5 = 1;
        }
        if (v5) {
          return 0;
        }
      }
      v3 += 8;
      if (!--v2) {
        return 1;
      }
    }
    if (*i >= 0x40u) {
      return 0;
    }
LABEL_13:
    if (v6 == v12 && v7 == v13) {
      goto LABEL_33;
    }
    uint64_t v21 = i[4];
    int v22 = *((unsigned __int8 *)v3 + 40);
    uint64_t v23 = v3[4];
    char v24 = sub_24872CEB0();
    uint64_t result = 0;
    if ((v24 & 1) == 0) {
      return result;
    }
    uint64_t v9 = v23;
    int v11 = v22;
    uint64_t v18 = v21;
    if (v10 != v17) {
      return result;
    }
    goto LABEL_34;
  }
  return 1;
}

uint64_t sub_2487100C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v10 = 1;
    }
    else
    {
      uint64_t v3 = (_OWORD *)(a2 + 56);
      uint64_t v4 = (_OWORD *)(a1 + 56);
      uint64_t v5 = v2 - 1;
      do
      {
        long long v20 = *(_OWORD *)((char *)v4 - 24);
        long long v6 = v4[1];
        long long v22 = *v4;
        long long v23 = v6;
        long long v7 = v4[3];
        long long v24 = v4[2];
        long long v25 = v7;
        long long v14 = *(_OWORD *)((char *)v3 - 24);
        long long v8 = v3[1];
        long long v16 = *v3;
        long long v17 = v8;
        long long v9 = v3[3];
        long long v18 = v3[2];
        uint64_t v21 = *((void *)v4 - 1);
        uint64_t v15 = *((void *)v3 - 1);
        long long v19 = v9;
        char v10 = static CommandInfoV0.== infix(_:_:)(&v20, &v14);
        BOOL v12 = v5-- != 0;
        if ((v10 & 1) == 0) {
          break;
        }
        uint64_t v3 = (_OWORD *)((char *)v3 + 88);
        uint64_t v4 = (_OWORD *)((char *)v4 + 88);
      }
      while (v12);
    }
  }
  else
  {
    char v10 = 0;
  }
  return v10 & 1;
}

BOOL sub_2487101A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      return 1;
    }
    else
    {
      uint64_t v3 = a1 + 32;
      uint64_t v4 = a2 + 32;
      uint64_t v5 = v2 - 1;
      do
      {
        uint64_t v6 = v5;
        long long v7 = *(_OWORD *)(v3 + 112);
        v19[6] = *(_OWORD *)(v3 + 96);
        void v19[7] = v7;
        uint64_t v20 = *(void *)(v3 + 128);
        long long v8 = *(_OWORD *)(v3 + 48);
        _OWORD v19[2] = *(_OWORD *)(v3 + 32);
        v19[3] = v8;
        long long v9 = *(_OWORD *)(v3 + 80);
        void v19[4] = *(_OWORD *)(v3 + 64);
        void v19[5] = v9;
        long long v10 = *(_OWORD *)(v3 + 16);
        v19[0] = *(_OWORD *)v3;
        v19[1] = v10;
        long long v11 = *(_OWORD *)(v4 + 112);
        v17[6] = *(_OWORD *)(v4 + 96);
        v17[7] = v11;
        uint64_t v18 = *(void *)(v4 + 128);
        long long v12 = *(_OWORD *)(v4 + 48);
        v17[2] = *(_OWORD *)(v4 + 32);
        v17[3] = v12;
        long long v13 = *(_OWORD *)(v4 + 80);
        v17[4] = *(_OWORD *)(v4 + 64);
        _OWORD v17[5] = v13;
        long long v14 = *(_OWORD *)(v4 + 16);
        v17[0] = *(_OWORD *)v4;
        v17[1] = v14;
        BOOL v15 = _s22ArgumentParserInternal0A6InfoV0V2eeoiySbAC_ACtFZ_0((uint64_t)v19, (uint64_t)v17);
        if (!v15) {
          break;
        }
        uint64_t v5 = v6 - 1;
        v4 += 136;
        v3 += 136;
      }
      while (v6);
    }
  }
  else
  {
    return 0;
  }
  return v15;
}

uint64_t sub_248710280(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = (uint64_t *)(a2 + 48);
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v7 = *(v4 - 1);
    uint64_t v6 = *v4;
    int v8 = *((unsigned __int8 *)v4 - 16);
    int v9 = *((unsigned __int8 *)v3 - 16);
    uint64_t v11 = *(v3 - 1);
    uint64_t v10 = *v3;
    v3 += 3;
    v4 += 3;
    if (v8 == 1) {
      unint64_t v12 = 0x74726F6873;
    }
    else {
      unint64_t v12 = 0xD000000000000012;
    }
    unint64_t v13 = 0x80000002487311E0;
    if (v8 == 1) {
      unint64_t v13 = 0xE500000000000000;
    }
    if (v8) {
      uint64_t v14 = v12;
    }
    else {
      uint64_t v14 = 1735290732;
    }
    if (v8) {
      unint64_t v15 = v13;
    }
    else {
      unint64_t v15 = 0xE400000000000000;
    }
    unint64_t v16 = 0x80000002487311E0;
    if (v9 == 1) {
      unint64_t v17 = 0x74726F6873;
    }
    else {
      unint64_t v17 = 0xD000000000000012;
    }
    if (v9 == 1) {
      unint64_t v16 = 0xE500000000000000;
    }
    if (v9) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 1735290732;
    }
    if (v9) {
      unint64_t v19 = v16;
    }
    else {
      unint64_t v19 = 0xE400000000000000;
    }
    if (v14 == v18 && v15 == v19)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease_n();
      goto LABEL_33;
    }
    char v20 = sub_24872CEB0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0) {
      break;
    }
LABEL_33:
    if (v7 == v11 && v6 == v10)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v5 = sub_24872CEB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    if (!--v2) {
      return 1;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_248710484(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)(a3 + 16) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2487104A4(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

unint64_t sub_2487104AC(uint64_t a1, uint64_t a2, void *a3)
{
  sub_24872D030();
  sub_248719B8C((uint64_t)v8, a1, a2, (uint64_t)a3);
  uint64_t v6 = sub_24872D070();
  return sub_248711BF4(a1, a2, a3, v6);
}

unint64_t sub_248710538(uint64_t a1, uint64_t a2, int a3)
{
  sub_24872D030();
  if (a3 >> 6 && a3 >> 6 == 1)
  {
    sub_24872D040();
    sub_24872C4D0();
    sub_24872D050();
  }
  else
  {
    sub_24872D040();
    sub_24872C4D0();
  }
  uint64_t v6 = sub_24872D070();
  return sub_248711D90(a1, a2, a3, v6);
}

unint64_t sub_248710618(uint64_t a1)
{
  sub_24872CBF0();
  uint64_t v2 = sub_24872C460();
  return sub_248711ED0(a1, v2);
}

unint64_t sub_24871067C(uint64_t a1, uint64_t a2)
{
  sub_24872D030();
  sub_24872C4D0();
  uint64_t v4 = sub_24872D070();
  return sub_248712068(a1, a2, v4);
}

unint64_t sub_2487106F4(uint64_t a1)
{
  sub_24872D030();
  sub_24872D040();
  uint64_t v2 = sub_24872D070();
  return sub_24871214C(a1, v2);
}

void *sub_248710760()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400A8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24872CC80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1)) {
      goto LABEL_26;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    if (!v25) {
      break;
    }
LABEL_23:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 24 * v15;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = *(void *)(v4 + 48) + v16;
    unsigned __int8 v23 = *(unsigned char *)(v17 + 16);
    *(void *)uint64_t v22 = *(void *)v17;
    *(void *)(v22 + 8) = v19;
    *(unsigned char *)(v22 + 16) = v23;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    uint64_t result = (void *)sub_2486B7650(v18, v19, v23);
  }
  int64_t v26 = v9 + 1;
  if (v9 + 1 >= v13) {
    goto LABEL_24;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

void *sub_248710904()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E2B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24872CC80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_248710ABC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E2A8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24872CC80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    swift_retain();
    uint64_t result = (void *)swift_retain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_248710C68()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24872CC80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 24 * v15;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = 72 * v15;
    long long v28 = *(_OWORD *)(v17 + 8);
    sub_2486D08E8(*(void *)(v2 + 56) + 72 * v15, (uint64_t)v29);
    uint64_t v20 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v20 = v18;
    *(_OWORD *)(v20 + 8) = v28;
    uint64_t v21 = *(void *)(v4 + 56) + v19;
    *(_OWORD *)uint64_t v21 = v29[0];
    long long v22 = v29[1];
    long long v23 = v29[2];
    long long v24 = v29[3];
    *(unsigned char *)(v21 + 64) = v30;
    *(_OWORD *)(v21 + 32) = v23;
    *(_OWORD *)(v21 + 48) = v24;
    *(_OWORD *)(v21 + 16) = v22;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_248710E7C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400A8);
  uint64_t v6 = sub_24872CC90();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v34 = v2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  char v35 = a2;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_20;
    }
    if (__OFADD__(v13++, 1)) {
      goto LABEL_42;
    }
    if (v13 >= v36) {
      break;
    }
    uint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v37 + 8 * v13);
    if (!v20)
    {
      int64_t v21 = v13 + 1;
      if (v13 + 1 >= v36)
      {
LABEL_33:
        swift_release();
        uint64_t v3 = v34;
        if ((a2 & 1) == 0) {
          goto LABEL_40;
        }
        goto LABEL_36;
      }
      unint64_t v20 = *(void *)(v37 + 8 * v21);
      if (!v20)
      {
        while (1)
        {
          int64_t v13 = v21 + 1;
          if (__OFADD__(v21, 1)) {
            break;
          }
          if (v13 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = *(void *)(v37 + 8 * v13);
          ++v21;
          if (v20) {
            goto LABEL_19;
          }
        }
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return result;
      }
      ++v13;
    }
LABEL_19:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_20:
    uint64_t v22 = *(void *)(v5 + 48) + 24 * v17;
    uint64_t v24 = *(void *)v22;
    uint64_t v23 = *(void *)(v22 + 8);
    unsigned int v25 = *(unsigned __int8 *)(v22 + 16);
    uint64_t v38 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
    if ((a2 & 1) == 0) {
      sub_2486B7650(v24, v23, v25);
    }
    sub_24872D030();
    sub_24872D040();
    sub_24872C4D0();
    if (v25 >> 6 == 1)
    {
      a2 = v35;
      sub_24872D050();
    }
    uint64_t result = sub_24872D070();
    uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = *(void *)(v7 + 48) + 24 * v14;
    *(void *)uint64_t v15 = v24;
    *(void *)(v15 + 8) = v23;
    *(unsigned char *)(v15 + 16) = v25;
    *(void *)(*(void *)(v7 + 56) + 8 * v14) = v38;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  uint64_t v19 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v19 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2487111EC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E2B0);
  char v36 = a2;
  uint64_t v6 = sub_24872CC90();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    char v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_24872D030();
    sub_24872C4D0();
    uint64_t result = sub_24872D070();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_248711504(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E2A8);
  uint64_t result = sub_24872CC90();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v32 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v31 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v31) {
          goto LABEL_33;
        }
        unint64_t v21 = v32[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v31) {
            goto LABEL_33;
          }
          unint64_t v21 = v32[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v31)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
              if (v30 >= 64) {
                bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v32 = -1 << v30;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v32[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v31) {
                  goto LABEL_33;
                }
                unint64_t v21 = v32[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = 8 * v19;
      uint64_t v28 = *(void *)(*(void *)(v5 + 48) + v27);
      uint64_t v29 = *(void *)(*(void *)(v5 + 56) + v27);
      if ((a2 & 1) == 0)
      {
        swift_retain();
        swift_retain();
      }
      sub_24872D030();
      sub_24872D040();
      uint64_t result = sub_24872D070();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t v17 = 8 * v16;
      *(void *)(*(void *)(v7 + 48) + v17) = v28;
      *(void *)(*(void *)(v7 + 56) + v17) = v29;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2487117E8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400B0);
  char v48 = a2;
  uint64_t v6 = sub_24872CC90();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_45;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v47 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int v45 = v2;
  int64_t v46 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  for (int64_t i = 0; ; int64_t i = v49)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (i << 6);
      goto LABEL_22;
    }
    int64_t v23 = i + 1;
    if (__OFADD__(i, 1))
    {
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
      return result;
    }
    if (v23 >= v46) {
      break;
    }
    unint64_t v24 = v47;
    unint64_t v25 = v47[v23];
    ++i;
    if (!v25)
    {
      int64_t i = v23 + 1;
      if (v23 + 1 >= v46) {
        goto LABEL_38;
      }
      unint64_t v25 = v47[i];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v46)
        {
LABEL_38:
          swift_release();
          uint64_t v3 = v45;
          if ((v48 & 1) == 0) {
            goto LABEL_45;
          }
          goto LABEL_41;
        }
        unint64_t v25 = v47[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t i = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_47;
            }
            if (i >= v46) {
              goto LABEL_38;
            }
            unint64_t v25 = v47[i];
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
        int64_t i = v26;
      }
    }
LABEL_21:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (i << 6);
LABEL_22:
    uint64_t v27 = *(void *)(v5 + 48) + 24 * v22;
    uint64_t v28 = *(void *)v27;
    uint64_t v29 = *(void *)(v5 + 56) + 72 * v22;
    uint64_t v30 = *(void *)(v27 + 16);
    int64_t v49 = i;
    long long v50 = *(_OWORD *)(v27 + 8);
    if (v48)
    {
      long long v51 = *(_OWORD *)v29;
      long long v31 = *(_OWORD *)(v29 + 16);
      long long v32 = *(_OWORD *)(v29 + 32);
      long long v33 = *(_OWORD *)(v29 + 48);
      char v55 = *(unsigned char *)(v29 + 64);
      long long v53 = v32;
      long long v54 = v33;
      long long v52 = v31;
    }
    else
    {
      sub_2486D08E8(v29, (uint64_t)&v51);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_24872D030();
    swift_bridgeObjectRetain();
    sub_24872C4D0();
    swift_bridgeObjectRelease();
    sub_24872D040();
    uint64_t v34 = *(void *)(v30 + 16);
    if (v34)
    {
      uint64_t v35 = v5;
      swift_bridgeObjectRetain();
      uint64_t v36 = v30 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_24872C4D0();
        swift_bridgeObjectRelease();
        v36 += 16;
        --v34;
      }
      while (v34);
      swift_bridgeObjectRelease();
      uint64_t v5 = v35;
    }
    uint64_t result = sub_24872D070();
    uint64_t v37 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v38 = result & ~v37;
    unint64_t v39 = v38 >> 6;
    if (((-1 << v38) & ~*(void *)(v11 + 8 * (v38 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v38) & ~*(void *)(v11 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
      long long v15 = v50;
    }
    else
    {
      char v40 = 0;
      unint64_t v41 = (unint64_t)(63 - v37) >> 6;
      long long v15 = v50;
      do
      {
        if (++v39 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        BOOL v42 = v39 == v41;
        if (v39 == v41) {
          unint64_t v39 = 0;
        }
        v40 |= v42;
        uint64_t v43 = *(void *)(v11 + 8 * v39);
      }
      while (v43 == -1);
      unint64_t v14 = __clz(__rbit64(~v43)) + (v39 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v16 = *(void *)(v7 + 48) + 24 * v14;
    *(void *)uint64_t v16 = v28;
    *(_OWORD *)(v16 + 8) = v15;
    uint64_t v17 = *(void *)(v7 + 56) + 72 * v14;
    *(_OWORD *)uint64_t v17 = v51;
    long long v18 = v52;
    long long v19 = v53;
    long long v20 = v54;
    *(unsigned char *)(v17 + 64) = v55;
    *(_OWORD *)(v17 + 32) = v19;
    *(_OWORD *)(v17 + 48) = v20;
    *(_OWORD *)(v17 + 16) = v18;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v45;
  unint64_t v24 = v47;
  if ((v48 & 1) == 0) {
    goto LABEL_45;
  }
LABEL_41:
  uint64_t v44 = 1 << *(unsigned char *)(v5 + 32);
  if (v44 >= 64) {
    bzero(v24, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v44;
  }
  *(void *)(v5 + 16) = 0;
LABEL_45:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_248711BF4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = v4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = a4 & ~v6;
  if ((*(void *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v11 = ~v6;
    uint64_t v12 = *(void *)(v4 + 48);
    unint64_t v24 = a3 + 9;
    do
    {
      uint64_t v13 = (void *)(v12 + 24 * v7);
      unint64_t v14 = (void *)v13[2];
      BOOL v15 = *v13 == a1 && v13[1] == a2;
      if (v15 || (sub_24872CEB0() & 1) != 0)
      {
        uint64_t v16 = v14[2];
        if (v16 == a3[2])
        {
          if (!v16 || v14 == a3) {
            return v7;
          }
          BOOL v17 = v14[4] == a3[4] && v14[5] == a3[5];
          if (v17 || (sub_24872CEB0() & 1) != 0)
          {
            if (v16 == 1) {
              return v7;
            }
            BOOL v18 = v14[6] == a3[6] && v14[7] == a3[7];
            if (v18 || (sub_24872CEB0() & 1) != 0)
            {
              uint64_t v19 = v16 - 2;
              if (!v19) {
                return v7;
              }
              long long v20 = v14 + 9;
              for (int64_t i = v24; ; i += 2)
              {
                BOOL v22 = *(v20 - 1) == *(i - 1) && *v20 == *i;
                if (!v22 && (sub_24872CEB0() & 1) == 0) {
                  break;
                }
                v20 += 2;
                if (!--v19) {
                  return v7;
                }
              }
            }
          }
        }
      }
      unint64_t v7 = (v7 + 1) & v11;
    }
    while (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

unint64_t sub_248711D90(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = v4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = a4 & ~v6;
  if ((*(void *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v11 = ~v6;
    uint64_t v12 = *(void *)(v4 + 48);
    unsigned __int8 v13 = a3 & 0xC0;
    do
    {
      unint64_t v14 = (uint64_t *)(v12 + 24 * v7);
      uint64_t v15 = *v14;
      uint64_t v16 = v14[1];
      unsigned int v17 = *((unsigned __int8 *)v14 + 16);
      if (v17 >> 6)
      {
        if (v17 >> 6 == 1)
        {
          if (v13 == 64)
          {
            BOOL v18 = v15 == a1 && v16 == a2;
            if (v18 || (sub_24872CEB0()) && ((a3 ^ v17) & 1) == 0) {
              return v7;
            }
          }
          goto LABEL_4;
        }
        if (v13 != 128) {
          goto LABEL_4;
        }
      }
      else if (a3 >= 0x40u)
      {
        goto LABEL_4;
      }
      BOOL v19 = v15 == a1 && v16 == a2;
      if (v19 || (sub_24872CEB0() & 1) != 0) {
        return v7;
      }
LABEL_4:
      unint64_t v7 = (v7 + 1) & v11;
    }
    while (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

unint64_t sub_248711ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a1;
  uint64_t v4 = sub_24872CBF0();
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v20 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    unsigned __int8 v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v11 = v5 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      uint64_t v16 = v11;
      v12(v7, *(void *)(v22 + 48) + v14 * v9, v4);
      char v17 = sub_24872C500();
      (*v15)(v7, v4);
      if (v17) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
      uint64_t v11 = v16;
    }
    while (((*(void *)(v20 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_248712068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_24872CEB0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        unsigned __int8 v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_24872CEB0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_24871214C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_2487121E8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  unint64_t v6 = (void *)(a6[6] + 24 * result);
  *unint64_t v6 = a2;
  v6[1] = a3;
  v6[2] = a4;
  uint64_t v7 = a6[7] + 72 * result;
  *(unsigned char *)(v7 + 64) = *(unsigned char *)(a5 + 64);
  long long v8 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(v7 + 48) = v8;
  long long v9 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)a5;
  *(_OWORD *)(v7 + 16) = v9;
  uint64_t v10 = a6[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a6[2] = v12;
  }
  return result;
}

double sub_248712254@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_2487104AC(a1, a2, a3);
  LOBYTE(a3) = v11;
  swift_bridgeObjectRelease();
  if (a3)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v5;
    uint64_t v18 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_248710C68();
      uint64_t v13 = v18;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void *)(v13 + 56) + 72 * v10;
    long long v15 = *(_OWORD *)(v14 + 48);
    *(_OWORD *)(a4 + 32) = *(_OWORD *)(v14 + 32);
    *(_OWORD *)(a4 + 48) = v15;
    *(unsigned char *)(a4 + 64) = *(unsigned char *)(v14 + 64);
    long long v16 = *(_OWORD *)(v14 + 16);
    *(_OWORD *)a4 = *(_OWORD *)v14;
    *(_OWORD *)(a4 + 16) = v16;
    sub_248712388(v10, v13);
    *uint64_t v5 = v13;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(unsigned char *)(a4 + 64) = 0;
    double result = 0.0;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

unint64_t sub_248712388(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_24872C9D0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      unint64_t v28 = v8;
      do
      {
        uint64_t v9 = *(void *)(*(void *)(a2 + 48) + 24 * v6 + 16);
        sub_24872D030();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24872C4D0();
        sub_24872D040();
        uint64_t v10 = *(void *)(v9 + 16);
        if (v10)
        {
          uint64_t v11 = v4;
          swift_bridgeObjectRetain();
          uint64_t v12 = v9 + 40;
          do
          {
            swift_bridgeObjectRetain();
            sub_24872C4D0();
            swift_bridgeObjectRelease();
            v12 += 16;
            --v10;
          }
          while (v10);
          swift_bridgeObjectRelease();
          uint64_t v4 = v11;
          unint64_t v8 = v28;
        }
        uint64_t v13 = sub_24872D070();
        swift_bridgeObjectRelease();
        double result = swift_bridgeObjectRelease();
        unint64_t v14 = v13 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v14 < v8) {
            goto LABEL_5;
          }
        }
        else if (v14 >= v8)
        {
          goto LABEL_15;
        }
        if (v3 >= (uint64_t)v14)
        {
LABEL_15:
          uint64_t v15 = *(void *)(a2 + 48);
          unint64_t v16 = v15 + 24 * v3;
          char v17 = (long long *)(v15 + 24 * v6);
          if (v3 != v6 || v16 >= (unint64_t)v17 + 24)
          {
            long long v18 = *v17;
            *(void *)(v16 + 16) = *((void *)v17 + 2);
            *(_OWORD *)unint64_t v16 = v18;
          }
          uint64_t v19 = *(void *)(a2 + 56);
          double result = v19 + 72 * v3;
          uint64_t v20 = (const void *)(v19 + 72 * v6);
          if (72 * v3 < (uint64_t)(72 * v6) || result >= (unint64_t)v20 + 72 || (v21 = v3 == v6, int64_t v3 = v6, !v21))
          {
            double result = (unint64_t)memmove((void *)result, v20, 0x48uLL);
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_248712620(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char a5)
{
  unint64_t v6 = (void **)v5;
  uint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_2487104AC(a2, a3, a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a5 & 1) == 0)
  {
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_248710C68();
      goto LABEL_7;
    }
    sub_2487117E8(v17, a5 & 1);
    unint64_t v23 = sub_2487104AC(a2, a3, a4);
    if ((v18 & 1) == (v24 & 1))
    {
      unint64_t v14 = v23;
      uint64_t v20 = *v6;
      if (v18) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_24872CFA0();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v20 = *v6;
  if (v18)
  {
LABEL_8:
    uint64_t v21 = v20[7] + 72 * v14;
    return sub_248714A1C(a1, v21);
  }
LABEL_13:
  sub_2487121E8(v14, a2, a3, (uint64_t)a4, a1, v20);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_248712790(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8 = *v4;
  sub_24872D030();
  int v9 = a4 >> 6;
  if (a4 >> 6)
  {
    sub_24872D040();
    if (v9 == 1)
    {
      sub_24872C4D0();
      sub_24872D050();
    }
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_24872D040();
    swift_bridgeObjectRetain();
    sub_2486B7C7C(a2, a3, a4);
    sub_24872C4D0();
    sub_24872D050();
    sub_2486B7C8C(a2, a3, a4);
  }
  uint64_t v10 = sub_24872D070();
  uint64_t v11 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v12 = v10 & ~v11;
  if (((*(void *)(v8 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_43:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v38 = *v34;
    *uint64_t v34 = 0x8000000000000000;
    sub_2486B7C7C(a2, a3, a4);
    sub_248713A64(a2, a3, a4, v12, isUniquelyReferenced_nonNull_native);
    *uint64_t v34 = v38;
    swift_bridgeObjectRelease();
    *(void *)a1 = a2;
    *(void *)(a1 + 8) = a3;
    uint64_t result = 1;
    *(unsigned char *)(a1 + 16) = a4;
    return result;
  }
  uint64_t v13 = ~v11;
  BOOL v15 = a2 == 1 && a3 == 0;
  if (a4 == 128)
  {
    BOOL v16 = (a3 | a2) != 0;
  }
  else
  {
    BOOL v15 = 0;
    BOOL v16 = 1;
  }
  BOOL v17 = v9 == 2 && v15;
  char v18 = v9 != 2 || v16;
  char v36 = v18;
  BOOL v37 = v17;
  while (1)
  {
    uint64_t v19 = *(void *)(v8 + 48) + 24 * v12;
    uint64_t v20 = *(void *)v19;
    uint64_t v21 = *(void *)(v19 + 8);
    unsigned int v22 = *(unsigned __int8 *)(v19 + 16);
    if (v22 >> 6) {
      break;
    }
    if (a4 >= 0x40u) {
      goto LABEL_24;
    }
LABEL_30:
    BOOL v23 = v20 == a2 && v21 == a3;
    if (v23 || (sub_24872CEB0()) && ((a4 ^ v22) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v27 = a2;
      uint64_t v28 = a3;
      char v29 = a4;
      goto LABEL_48;
    }
LABEL_24:
    unint64_t v12 = (v12 + 1) & v13;
    if (((*(void *)(v8 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
      goto LABEL_43;
    }
  }
  if (v22 >> 6 == 1)
  {
    if (v9 != 1) {
      goto LABEL_24;
    }
    goto LABEL_30;
  }
  if (!(v21 | v20) && v22 == 128)
  {
    if ((v36 & 1) == 0)
    {
      sub_2486B7C8C(0, 0, 128);
      swift_bridgeObjectRelease();
      uint64_t v27 = 0;
      goto LABEL_47;
    }
    uint64_t v24 = 0;
    goto LABEL_42;
  }
  if (!v37)
  {
    uint64_t v24 = 1;
LABEL_42:
    sub_2486B7C8C(v24, 0, 128);
    goto LABEL_24;
  }
  sub_2486B7C8C(1, 0, 128);
  swift_bridgeObjectRelease();
  uint64_t v27 = 1;
LABEL_47:
  uint64_t v28 = 0;
  char v29 = 0x80;
LABEL_48:
  sub_2486B7C8C(v27, v28, v29);
  uint64_t v30 = *(void *)(*v34 + 48) + 24 * v12;
  uint64_t v31 = *(void *)v30;
  uint64_t v32 = *(void *)(v30 + 8);
  *(void *)a1 = *(void *)v30;
  *(void *)(a1 + 8) = v32;
  char v33 = *(unsigned char *)(v30 + 16);
  *(unsigned char *)(a1 + 16) = v33;
  sub_2486B7C7C(v31, v32, v33);
  return 0;
}

uint64_t sub_248712AF4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v5 = v4;
  unsigned int v6 = a4;
  unsigned int v10 = a4 >> 8;
  uint64_t v11 = *v5;
  sub_24872D030();
  if ((v10 & 1) == 0)
  {
    sub_24872D040();
    sub_24872D040();
    if ((v6 & 1) == 0) {
      sub_24872D040();
    }
  }
  sub_24872D040();
  uint64_t v12 = sub_24872D070();
  uint64_t v13 = -1 << *(unsigned char *)(v11 + 32);
  unint64_t v14 = v12 & ~v13;
  if (((*(void *)(v11 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
  {
LABEL_17:
    int v19 = (v6 >> 8) & 1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    sub_248713D5C(a2, a3, v6 & 0x1FF, v14, isUniquelyReferenced_nonNull_native);
    *uint64_t v5 = v21;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_18;
  }
  uint64_t v15 = ~v13;
  while (1)
  {
    uint64_t v16 = *(void *)(v11 + 48) + 24 * v14;
    if (*(unsigned char *)(v16 + 17))
    {
      if ((v6 & 0x100) != 0) {
        goto LABEL_16;
      }
      goto LABEL_7;
    }
    if ((v6 & 0x100) != 0 || *(void *)v16 != a2) {
      goto LABEL_7;
    }
    if ((*(unsigned char *)(v16 + 16) & 1) == 0) {
      break;
    }
    if (v6) {
      goto LABEL_16;
    }
LABEL_7:
    unint64_t v14 = (v14 + 1) & v15;
    if (((*(void *)(v11 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
      goto LABEL_17;
    }
  }
  if ((v6 & 1) != 0 || *(void *)(v16 + 8) != a3) {
    goto LABEL_7;
  }
LABEL_16:
  uint64_t result = 0;
  uint64_t v18 = *(void *)(*v5 + 48) + 24 * v14;
  a2 = *(void *)v18;
  a3 = *(void *)(v18 + 8);
  LOBYTE(v6) = *(unsigned char *)(v18 + 16);
  LOBYTE(v19) = *(unsigned char *)(v18 + 17);
LABEL_18:
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  *(unsigned char *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 17) = v19;
  return result;
}

uint64_t sub_248712CB0(uint64_t *a1, uint64_t a2)
{
  int64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_24872CA10();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1401A0);
      swift_dynamicCast();
      *a1 = v19;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_24872CA00();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v17 = sub_248712EF8(v7, result + 1);
    uint64_t v21 = v17;
    if (*(void *)(v17 + 24) <= *(void *)(v17 + 16))
    {
      swift_retain();
      sub_2487135AC();
      uint64_t v18 = v21;
    }
    else
    {
      uint64_t v18 = v17;
      swift_retain();
    }
    sub_2487139C0(a2, v18);
    *int64_t v3 = v18;
  }
  else
  {
    sub_24872D030();
    sub_24872D040();
    uint64_t v10 = sub_24872D070();
    uint64_t v11 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v12 = v10 & ~v11;
    if ((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
    {
      uint64_t v13 = *(void *)(v6 + 48);
      if (*(void *)(v13 + 8 * v12) == a2)
      {
LABEL_12:
        swift_release();
        *a1 = *(void *)(*(void *)(*v2 + 48) + 8 * v12);
        swift_retain();
        return 0;
      }
      uint64_t v14 = ~v11;
      while (1)
      {
        unint64_t v12 = (v12 + 1) & v14;
        if (((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
          break;
        }
        if (*(void *)(v13 + 8 * v12) == a2) {
          goto LABEL_12;
        }
      }
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    uint64_t v16 = swift_retain();
    sub_248713F3C(v16, v12, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v20;
  }
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

uint64_t sub_248712EF8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E340);
    uint64_t v2 = sub_24872CA80();
    uint64_t v14 = v2;
    sub_24872C9F0();
    for (; sub_24872CA20(); ++*(void *)(v2 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1401A0);
      swift_dynamicCast();
      if (*(void *)(v2 + 24) <= *(void *)(v2 + 16))
      {
        sub_2487135AC();
        uint64_t v2 = v14;
      }
      sub_24872D030();
      sub_24872D040();
      uint64_t result = sub_24872D070();
      uint64_t v4 = v2 + 56;
      uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v6 = result & ~v5;
      unint64_t v7 = v6 >> 6;
      if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
      {
        unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v9 = 0;
        unint64_t v10 = (unint64_t)(63 - v5) >> 6;
        do
        {
          if (++v7 == v10 && (v9 & 1) != 0)
          {
            __break(1u);
            return result;
          }
          BOOL v11 = v7 == v10;
          if (v7 == v10) {
            unint64_t v7 = 0;
          }
          v9 |= v11;
          uint64_t v12 = *(void *)(v4 + 8 * v7);
        }
        while (v12 == -1);
        unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
      }
      *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
      *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE88];
  }
  return v2;
}

unint64_t sub_2487130F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B140098);
  uint64_t v3 = sub_24872CA70();
  if (*(void *)(v2 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v5 = (void *)(v2 + 56);
    uint64_t v6 = -1;
    if (v4 < 64) {
      uint64_t v6 = ~(-1 << v4);
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v4 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v11 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v12 = v11 | (v10 << 6);
      }
      else
      {
        int64_t v13 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
LABEL_26:
          __break(1u);
          return result;
        }
        if (v13 >= v8) {
          goto LABEL_20;
        }
        unint64_t v14 = v5[v13];
        ++v10;
        if (!v14)
        {
          int64_t v10 = v13 + 1;
          if (v13 + 1 >= v8) {
            goto LABEL_20;
          }
          unint64_t v14 = v5[v10];
          if (!v14)
          {
            int64_t v15 = v13 + 2;
            if (v15 >= v8)
            {
LABEL_20:
              swift_release();
              uint64_t v16 = 1 << *(unsigned char *)(v2 + 32);
              if (v16 > 63) {
                bzero((void *)(v2 + 56), ((unint64_t)(v16 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v5 = -1 << v16;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v14 = v5[v15];
            if (!v14)
            {
              while (1)
              {
                int64_t v10 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_26;
                }
                if (v10 >= v8) {
                  goto LABEL_20;
                }
                unint64_t v14 = v5[v10];
                ++v15;
                if (v14) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v10 = v15;
          }
        }
LABEL_19:
        unint64_t v7 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
      }
      unint64_t result = sub_248713858(*(void *)(*(void *)(v2 + 48) + 24 * v12), *(void *)(*(void *)(v2 + 48) + 24 * v12 + 8), *(unsigned char *)(*(void *)(v2 + 48) + 24 * v12 + 16), v3);
    }
  }
  unint64_t result = swift_release();
  *uint64_t v1 = v3;
  return result;
}

uint64_t sub_2487132B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FCB0);
  uint64_t result = sub_24872CA70();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v31 = (void *)(v2 + 56);
    uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v30 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v9 = result + 56;
    while (1)
    {
      if (v8)
      {
        unint64_t v12 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v13 = v12 | (v5 << 6);
      }
      else
      {
        int64_t v14 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = v2 + 56;
        if (v14 >= v30) {
          goto LABEL_34;
        }
        unint64_t v15 = v31[v14];
        ++v5;
        if (!v15)
        {
          int64_t v5 = v14 + 1;
          if (v14 + 1 >= v30) {
            goto LABEL_34;
          }
          unint64_t v15 = v31[v5];
          if (!v15)
          {
            int64_t v16 = v14 + 2;
            if (v16 >= v30)
            {
LABEL_34:
              uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
              if (v29 > 63) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v31 = -1 << v29;
              }
              uint64_t v1 = v0;
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v15 = v31[v16];
            if (!v15)
            {
              while (1)
              {
                int64_t v5 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_40;
                }
                if (v5 >= v30) {
                  goto LABEL_34;
                }
                unint64_t v15 = v31[v5];
                ++v16;
                if (v15) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v5 = v16;
          }
        }
LABEL_21:
        unint64_t v8 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v5 << 6);
      }
      uint64_t v17 = *(void *)(v2 + 48) + 24 * v13;
      uint64_t v18 = *(void *)v17;
      uint64_t v19 = *(void *)(v17 + 8);
      char v20 = *(unsigned char *)(v17 + 16);
      char v21 = *(unsigned char *)(v17 + 17);
      sub_24872D030();
      if ((v21 & 1) == 0)
      {
        sub_24872D040();
        sub_24872D040();
        if ((v20 & 1) == 0) {
          sub_24872D040();
        }
      }
      sub_24872D040();
      uint64_t result = sub_24872D070();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v10 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v10 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      uint64_t v11 = *(void *)(v4 + 48) + 24 * v10;
      *(void *)uint64_t v11 = v18;
      *(void *)(v11 + 8) = v19;
      *(unsigned char *)(v11 + 16) = v20;
      *(unsigned char *)(v11 + 17) = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_2487135AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E340);
  uint64_t result = sub_24872CA70();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      sub_24872D030();
      sub_24872D040();
      uint64_t result = sub_24872D070();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_248713858(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  sub_24872D030();
  if (a3 >> 6)
  {
    sub_24872D040();
    if (a3 >> 6 == 1)
    {
      sub_24872C4D0();
      sub_24872D050();
    }
  }
  else
  {
    sub_24872D040();
    swift_bridgeObjectRetain();
    sub_24872C4D0();
    sub_24872D050();
    sub_2486B7C8C(a1, a2, a3);
  }
  sub_24872D070();
  unint64_t result = sub_24872C9E0();
  *(void *)(a4 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  uint64_t v9 = *(void *)(a4 + 48) + 24 * result;
  *(void *)uint64_t v9 = a1;
  *(void *)(v9 + 8) = a2;
  *(unsigned char *)(v9 + 16) = a3;
  ++*(void *)(a4 + 16);
  return result;
}

unint64_t sub_2487139C0(uint64_t a1, uint64_t a2)
{
  sub_24872D030();
  sub_24872D040();
  sub_24872D070();
  unint64_t result = sub_24872C9E0();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_248713A64(uint64_t result, uint64_t a2, int a3, unint64_t a4, char a5)
{
  uint64_t v9 = result;
  unint64_t v10 = *(void *)(*v5 + 16);
  unint64_t v11 = *(void *)(*v5 + 24);
  if (v11 > v10 && (a5 & 1) != 0) {
    goto LABEL_48;
  }
  if (a5)
  {
    sub_2487130F4();
  }
  else
  {
    if (v11 > v10)
    {
      unint64_t result = (uint64_t)sub_248714090();
      goto LABEL_48;
    }
    sub_248714588();
  }
  uint64_t v12 = *v5;
  sub_24872D030();
  int v13 = a3 >> 6;
  if (a3 >> 6)
  {
    sub_24872D040();
    if (v13 == 1)
    {
      sub_24872C4D0();
      sub_24872D050();
    }
  }
  else
  {
    sub_24872D040();
    swift_bridgeObjectRetain();
    sub_24872C4D0();
    sub_24872D050();
    sub_2486B7C8C(v9, a2, a3);
  }
  unint64_t result = sub_24872D070();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a4 = result & ~v14;
  if ((*(void *)(v12 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4))
  {
    uint64_t v15 = ~v14;
    BOOL v17 = v9 == 1 && a2 == 0;
    if (a3 == 128)
    {
      BOOL v18 = (a2 | v9) != 0;
    }
    else
    {
      BOOL v17 = 0;
      BOOL v18 = 1;
    }
    BOOL v19 = v13 == 2 && v17;
    char v20 = v13 != 2 || v18;
    char v30 = v20;
    BOOL v31 = v19;
    do
    {
      uint64_t v21 = *(void *)(v12 + 48) + 24 * a4;
      unint64_t result = *(void *)v21;
      uint64_t v22 = *(void *)(v21 + 8);
      unsigned int v23 = *(unsigned __int8 *)(v21 + 16);
      if (v23 >> 6)
      {
        if (v23 >> 6 != 1)
        {
          if (v22 | result || v23 != 128)
          {
            unint64_t result = sub_2486B7C8C(1, 0, 128);
            if (v31) {
              goto LABEL_47;
            }
          }
          else
          {
            unint64_t result = sub_2486B7C8C(0, 0, 128);
            if ((v30 & 1) == 0) {
              goto LABEL_47;
            }
          }
          goto LABEL_30;
        }
        if (v13 != 1) {
          goto LABEL_30;
        }
      }
      else if (a3 >= 0x40u)
      {
        goto LABEL_30;
      }
      BOOL v24 = result == v9 && v22 == a2;
      if (v24 || (unint64_t result = sub_24872CEB0(), (result & 1) != 0))
      {
        if (((a3 ^ v23) & 1) == 0)
        {
LABEL_47:
          unint64_t result = sub_24872CF90();
          __break(1u);
          break;
        }
      }
LABEL_30:
      a4 = (a4 + 1) & v15;
    }
    while (((*(void *)(v12 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
  }
LABEL_48:
  uint64_t v25 = *v32;
  *(void *)(*v32 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  uint64_t v26 = *(void *)(v25 + 48) + 24 * a4;
  *(void *)uint64_t v26 = v9;
  *(void *)(v26 + 8) = a2;
  *(unsigned char *)(v26 + 16) = a3;
  uint64_t v27 = *(void *)(v25 + 16);
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28) {
    __break(1u);
  }
  else {
    *(void *)(v25 + 16) = v29;
  }
  return result;
}

uint64_t sub_248713D5C(uint64_t result, uint64_t a2, __int16 a3, unint64_t a4, char a5)
{
  char v7 = a3;
  uint64_t v9 = result;
  unint64_t v11 = *(void *)(*v5 + 16);
  unint64_t v12 = *(void *)(*v5 + 24);
  if (v12 > v11 && (a5 & 1) != 0) {
    goto LABEL_24;
  }
  if (a5)
  {
    sub_2487132B8();
  }
  else
  {
    if (v12 > v11)
    {
      unint64_t result = (uint64_t)sub_24871423C();
      goto LABEL_24;
    }
    sub_24871474C();
  }
  uint64_t v13 = *v5;
  sub_24872D030();
  if ((a3 & 0x100) == 0)
  {
    sub_24872D040();
    sub_24872D040();
    if ((a3 & 1) == 0) {
      sub_24872D040();
    }
  }
  sub_24872D040();
  unint64_t result = sub_24872D070();
  uint64_t v14 = -1 << *(unsigned char *)(v13 + 32);
  a4 = result & ~v14;
  if ((*(void *)(v13 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4))
  {
    uint64_t v15 = ~v14;
    do
    {
      uint64_t v16 = *(void *)(v13 + 48) + 24 * a4;
      if (*(unsigned char *)(v16 + 17))
      {
        if ((a3 & 0x100) != 0) {
          goto LABEL_23;
        }
      }
      else if ((a3 & 0x100) == 0 && *(void *)v16 == v9)
      {
        if (*(unsigned char *)(v16 + 16))
        {
          if (a3) {
            goto LABEL_23;
          }
        }
        else if ((a3 & 1) == 0 && *(void *)(v16 + 8) == a2)
        {
LABEL_23:
          unint64_t result = sub_24872CF90();
          __break(1u);
          break;
        }
      }
      a4 = (a4 + 1) & v15;
    }
    while (((*(void *)(v13 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
  }
LABEL_24:
  uint64_t v17 = *v5;
  *(void *)(*v5 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  uint64_t v18 = *(void *)(v17 + 48) + 24 * a4;
  *(void *)uint64_t v18 = v9;
  *(void *)(v18 + 8) = a2;
  *(unsigned char *)(v18 + 16) = v7;
  *(unsigned char *)(v18 + 17) = HIBYTE(a3) & 1;
  uint64_t v19 = *(void *)(v17 + 16);
  BOOL v20 = __OFADD__(v19, 1);
  uint64_t v21 = v19 + 1;
  if (v20) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v21;
  }
  return result;
}

uint64_t sub_248713F3C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_2487135AC();
  }
  else
  {
    if (v7 > v6)
    {
      unint64_t result = (uint64_t)sub_2487143DC();
      goto LABEL_14;
    }
    sub_248714A54();
  }
  uint64_t v8 = *v3;
  sub_24872D030();
  sub_24872D040();
  unint64_t result = sub_24872D070();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1401A0);
      unint64_t result = sub_24872CF90();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void *sub_248714090()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B140098);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24872CA60();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v4 + 48) + v16;
    char v21 = *(unsigned char *)(v17 + 16);
    *(void *)uint64_t v20 = *(void *)v17;
    *(void *)(v20 + 8) = v19;
    *(unsigned char *)(v20 + 16) = v21;
    unint64_t result = (void *)sub_2486B7C7C(v18, v19, v21);
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24871423C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FCB0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24872CA60();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v24 = __clz(__rbit64(v22));
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = v24 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    char v18 = *(unsigned char *)(v17 + 16);
    char v19 = *(unsigned char *)(v17 + 17);
    uint64_t v20 = *(void *)(v4 + 48) + v16;
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v17;
    *(unsigned char *)(v20 + 16) = v18;
    *(unsigned char *)(v20 + 17) = v19;
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2487143DC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E340);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24872CA60();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    unint64_t result = (void *)swift_retain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

unint64_t sub_248714588()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B140098);
  uint64_t v3 = sub_24872CA70();
  if (!*(void *)(v2 + 16))
  {
LABEL_21:
    unint64_t result = swift_release();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v20 = v1;
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = v2 + 56;
  uint64_t v6 = -1;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v4 + 63) >> 6;
  unint64_t result = swift_retain_n();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_6;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v17 >= v8) {
      goto LABEL_20;
    }
    unint64_t v18 = *(void *)(v5 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v8) {
        goto LABEL_20;
      }
      unint64_t v18 = *(void *)(v5 + 8 * v10);
      if (!v18) {
        break;
      }
    }
LABEL_19:
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v12 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_6:
    uint64_t v13 = *(void *)(v2 + 48) + 24 * v12;
    uint64_t v14 = *(void *)v13;
    uint64_t v15 = *(void *)(v13 + 8);
    char v16 = *(unsigned char *)(v13 + 16);
    sub_2486B7C7C(*(void *)v13, v15, v16);
    unint64_t result = sub_248713858(v14, v15, v16, v3);
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v8)
  {
LABEL_20:
    swift_release_n();
    uint64_t v1 = v20;
    goto LABEL_21;
  }
  unint64_t v18 = *(void *)(v5 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_20;
    }
    unint64_t v18 = *(void *)(v5 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_19;
    }
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_24871474C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FCB0);
  uint64_t result = sub_24872CA70();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_36:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v29 = v2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v30 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = result + 56;
  while (v8)
  {
    unint64_t v12 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v13 = v12 | (v5 << 6);
LABEL_22:
    uint64_t v17 = *(void *)(v2 + 48) + 24 * v13;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    char v20 = *(unsigned char *)(v17 + 16);
    char v21 = *(unsigned char *)(v17 + 17);
    sub_24872D030();
    if ((v21 & 1) == 0)
    {
      sub_24872D040();
      sub_24872D040();
      if ((v20 & 1) == 0) {
        sub_24872D040();
      }
    }
    sub_24872D040();
    uint64_t result = sub_24872D070();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_37;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v10 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    uint64_t v11 = *(void *)(v4 + 48) + 24 * v10;
    *(void *)uint64_t v11 = v18;
    *(void *)(v11 + 8) = v19;
    *(unsigned char *)(v11 + 16) = v20;
    *(unsigned char *)(v11 + 17) = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (v14 >= v30) {
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v29 + 8 * v14);
  ++v5;
  if (v15) {
    goto LABEL_21;
  }
  int64_t v5 = v14 + 1;
  if (v14 + 1 >= v30) {
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v29 + 8 * v5);
  if (v15)
  {
LABEL_21:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v5 << 6);
    goto LABEL_22;
  }
  int64_t v16 = v14 + 2;
  if (v16 >= v30)
  {
LABEL_34:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_36;
  }
  unint64_t v15 = *(void *)(v29 + 8 * v16);
  if (v15)
  {
    int64_t v5 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v30) {
      goto LABEL_34;
    }
    unint64_t v15 = *(void *)(v29 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_21;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_248714A1C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_248714A54()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E340);
  uint64_t result = sub_24872CA70();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    sub_24872D030();
    sub_24872D040();
    uint64_t result = sub_24872D070();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
    uint64_t result = swift_retain();
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t destroy for Name(uint64_t a1)
{
  return sub_2486B7668(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s22ArgumentParserInternal4NameOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_2486B7650(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Name(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_2486B7650(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_2486B7668(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for Name(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_2486B7668(v4, v5, v6);
  return a1;
}

uint64_t sub_248714DDC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 6;
}

uint64_t sub_248714DE8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = *(unsigned char *)(result + 16) & 1 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for Name()
{
  return &type metadata for Name;
}

unint64_t sub_248714E10()
{
  unint64_t result = qword_26B13FEF0[0];
  if (!qword_26B13FEF0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B13FEF0);
  }
  return result;
}

uint64_t sub_248714E64(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (!(a3 >> 6))
  {
    uint64_t v3 = 11565;
LABEL_6:
    uint64_t v5 = v3;
    sub_24872C600();
    return v5;
  }
  if (a3 >> 6 != 1)
  {
    uint64_t v3 = 45;
    goto LABEL_6;
  }
  uint64_t v5 = 0;
  sub_24872C600();
  sub_24872C4E0();
  return v5;
}

uint64_t sub_248714F10(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 >> 6 && a3 >> 6 == 1)
  {
    sub_24872D040();
    sub_24872C4D0();
    sub_24872D050();
  }
  else
  {
    sub_24872D040();
    sub_24872C4D0();
  }
  return sub_24872D070();
}

uint64_t sub_248714FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  unsigned __int8 v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = sub_248714E64(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  uint64_t v7 = v6;
  if (v5 == sub_248714E64(v2, v3, v4) && v7 == v8) {
    char v10 = 0;
  }
  else {
    char v10 = sub_24872CEB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

uint64_t sub_248715070(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = sub_248714E64(*(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
  uint64_t v7 = v6;
  if (v5 == sub_248714E64(v2, v3, v4) && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
    char v11 = 1;
  }
  else
  {
    char v10 = sub_24872CEB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v11 = v10 ^ 1;
  }
  return v11 & 1;
}

uint64_t sub_248715128(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  unsigned __int8 v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = sub_248714E64(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  uint64_t v7 = v6;
  if (v5 == sub_248714E64(v2, v3, v4) && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
    char v11 = 1;
  }
  else
  {
    char v10 = sub_24872CEB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v11 = v10 ^ 1;
  }
  return v11 & 1;
}

uint64_t sub_2487151E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = sub_248714E64(*(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
  uint64_t v7 = v6;
  if (v5 == sub_248714E64(v2, v3, v4) && v7 == v8) {
    char v10 = 0;
  }
  else {
    char v10 = sub_24872CEB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

uint64_t sub_24871528C(uint64_t a1, uint64_t a2)
{
  return sub_2487155AC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_2487152A8()
{
  return sub_248714F10(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_2487152B4()
{
  if (*(unsigned __int8 *)(v0 + 16) >> 6 == 1)
  {
    sub_24872D040();
    sub_24872C4D0();
    return sub_24872D050();
  }
  else
  {
    sub_24872D040();
    return sub_24872C4D0();
  }
}

uint64_t sub_248715368()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_24872D030();
  sub_24872D040();
  sub_24872C4D0();
  if (v1 >> 6 == 1) {
    sub_24872D050();
  }
  return sub_24872D070();
}

BOOL sub_248715414(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v5 = a4 >> 14;
  swift_bridgeObjectRetain();
  if (v5 == a3 >> 14)
  {
LABEL_10:
    sub_24872C620();
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    BOOL v15 = v14 == 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    while (1)
    {
      while (1)
      {
        uint64_t v7 = sub_24872C930();
        uint64_t v9 = v8;
        unint64_t v10 = sub_24872C8F0();
        uint64_t v11 = sub_24872C620();
        if (!v12)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          BOOL v15 = 1;
          goto LABEL_13;
        }
        if (v7 != v11 || v12 != v9) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v5 == v10 >> 14)
        {
LABEL_9:
          swift_bridgeObjectRelease();
          goto LABEL_10;
        }
      }
      char v6 = sub_24872CEB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v6 & 1) == 0) {
        break;
      }
      if (v5 == v10 >> 14) {
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    BOOL v15 = 0;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_2487155AC(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a3 >> 6)
  {
    if (a3 >> 6 == 1)
    {
      if ((a6 & 0xC0) == 0x40)
      {
        if (a1 == a4 && a2 == a5 || (char v8 = sub_24872CEB0(), v9 = 0, (v8 & 1) != 0)) {
          char v9 = ((a3 & 1) == 0) ^ a6;
        }
        return v9 & 1;
      }
      goto LABEL_13;
    }
    if ((a6 & 0xC0) != 0x80)
    {
LABEL_13:
      char v9 = 0;
      return v9 & 1;
    }
  }
  else if (a6 >= 0x40u)
  {
    goto LABEL_13;
  }
  if (a1 == a4 && a2 == a5)
  {
    char v9 = 1;
    return v9 & 1;
  }
  return sub_24872CEB0();
}

uint64_t sub_248715684(unint64_t a1, unint64_t a2)
{
  if (sub_248715414(11565, 0xE200000000000000, a1, a2))
  {
    unint64_t v4 = sub_24872C910();
    if (v5) {
      unint64_t v4 = a2;
    }
    if (a2 >> 14 >= v4 >> 14)
    {
LABEL_12:
      uint64_t v10 = sub_24872C950();
      uint64_t v12 = v11;
      uint64_t v14 = v13;
      uint64_t v16 = v15;
      swift_bridgeObjectRelease();
      uint64_t v7 = MEMORY[0x24C57C040](v10, v12, v14, v16);
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_24872C920();
  swift_bridgeObjectRelease();
  if (v6 != 2)
  {
    unint64_t v8 = sub_24872C910();
    if (v9) {
      unint64_t v8 = a2;
    }
    if (a2 >> 14 >= v8 >> 14) {
      goto LABEL_12;
    }
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if ((a2 ^ a1) >= 0x4000)
  {
    sub_24872C900();
    uint64_t v7 = sub_24872C930();
LABEL_13:
    swift_bridgeObjectRelease();
    return v7;
  }
LABEL_16:
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_248715898@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int16 a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *v4;
  uint64_t v7 = v4[1];
  uint64_t result = sub_248718808(a1, a2, a3 & 0x1FF, *v4, v7);
  int64x2_t v9 = 0uLL;
  if (v10) {
    goto LABEL_16;
  }
  if (v7 < 0)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  int64_t v11 = result;
  int64_t v12 = *(void *)(v6 + 16);
  if (v12 < (unint64_t)v7 || v12 < result) {
    goto LABEL_20;
  }
  if (result >= v7)
  {
    if (result != v12)
    {
      uint64_t v14 = v6 + (result << 6) + 48;
      while (1)
      {
        if (v11 >= v12)
        {
          __break(1u);
          goto LABEL_19;
        }
        if (*(unsigned char *)(v14 + 40)) {
          break;
        }
        ++v11;
        v14 += 64;
        if (v12 == v11) {
          goto LABEL_16;
        }
      }
      if ((*(void *)v14 & 0x6000000000000000) != 0x2000000000000000) {
        goto LABEL_16;
      }
      uint64_t v15 = *(void *)(v14 - 16);
      uint64_t v16 = *(void *)(v14 - 8);
      uint64_t v17 = *(void *)(v14 + 24);
      int64x2_t v18 = vdupq_n_s64(1uLL);
      v18.i64[0] = *(void *)(v14 + 32);
      int64x2_t v19 = v18;
      sub_24870266C(v15, v16, *(void *)v14);
      uint64_t result = sub_248717504((uint64_t)v4, v11);
      int64x2_t v9 = v19;
      goto LABEL_17;
    }
LABEL_16:
    uint64_t v17 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
LABEL_17:
    *(void *)a4 = v17;
    *(int64x2_t *)(a4 + 8) = v9;
    *(void *)(a4 + 24) = v15;
    *(void *)(a4 + 32) = v16;
    return result;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_2487159BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int16 a3@<W2>, void *a4@<X8>)
{
  uint64_t v6 = *v4;
  uint64_t v7 = v4[1];
  uint64_t result = sub_248718808(a1, a2, a3 & 0x1FF, *v4, v7);
  if (v9) {
    goto LABEL_16;
  }
  if (v7 < 0)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  int64_t v10 = result;
  int64_t v11 = *(void *)(v6 + 16);
  if (v11 < (unint64_t)v7 || v11 < result) {
    goto LABEL_24;
  }
  if (result < v7) {
    goto LABEL_25;
  }
  if (result == v11)
  {
LABEL_16:
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    goto LABEL_17;
  }
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v13 = v6 + (v10 << 6) + 48;
  while (1)
  {
    if (v10 >= v11)
    {
      __break(1u);
      goto LABEL_23;
    }
    uint64_t v14 = (*(void *)v13 >> 61) & 3;
    if (v14) {
      break;
    }
LABEL_10:
    ++v10;
    v13 += 64;
    if (v11 == v10)
    {
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_16;
    }
  }
  if (v14 == 2)
  {
    uint64_t result = sub_2487026D8(*(void *)(v13 - 16), *(void *)(v13 - 8), *(void *)v13);
    goto LABEL_10;
  }
  uint64_t result = swift_bridgeObjectRelease();
  int64_t v20 = *(void *)(v6 + 16);
  if (v20 < v7) {
    goto LABEL_26;
  }
  if (v10 >= v20)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    return result;
  }
  unint64_t v21 = *(void *)v13;
  if ((*(void *)v13 & 0x6000000000000000) != 0x2000000000000000) {
    goto LABEL_28;
  }
  uint64_t v18 = *(void *)(v13 - 16);
  uint64_t v19 = *(void *)(v13 - 8);
  uint64_t v17 = *(unsigned __int8 *)(v13 + 40);
  uint64_t v22 = v13 + 24;
  uint64_t v15 = *(void *)(v13 + 24);
  uint64_t v16 = *(void *)(v22 + 8);
  sub_24870266C(v18, v19, v21);
  uint64_t result = sub_248717504((uint64_t)v4, v10);
LABEL_17:
  *a4 = v15;
  a4[1] = v16;
  a4[2] = v17;
  a4[3] = v18;
  a4[4] = v19;
  return result;
}

uint64_t sub_248715B2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int16 a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *v4;
  uint64_t v7 = v4[1];
  uint64_t result = sub_248718808(a1, a2, a3 & 0x1FF, *v4, v7);
  int64x2_t v9 = 0uLL;
  if (v10) {
    goto LABEL_13;
  }
  if (v7 < 0)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    return result;
  }
  int64_t v11 = *(void *)(v6 + 16);
  if (v11 < (unint64_t)v7 || v11 < result) {
    goto LABEL_20;
  }
  if (result < v7) {
    goto LABEL_21;
  }
  if (result != v11)
  {
    uint64_t v13 = (unsigned char *)(v6 + (result << 6) + 88);
    while (1)
    {
      if (result >= v11)
      {
        __break(1u);
        goto LABEL_19;
      }
      if (*v13) {
        break;
      }
      ++result;
      v13 += 64;
      if (v11 == result) {
        goto LABEL_13;
      }
    }
    unint64_t v14 = *((void *)v13 - 2);
    uint64_t v16 = *((void *)v13 - 1);
    uint64_t result = sub_248717668(v14, v16, 1);
    if ((v14 & 0x8000000000000000) != 0) {
      goto LABEL_22;
    }
    uint64_t v17 = v4[2];
    if (v14 < *(void *)(v17 + 16))
    {
      uint64_t v15 = *(void *)(v17 + 16 * v14 + 32);
      uint64_t result = swift_bridgeObjectRetain();
      int64x2_t v9 = vdupq_n_s64(1uLL);
      v9.i64[0] = v16;
      goto LABEL_14;
    }
    goto LABEL_23;
  }
LABEL_13:
  unint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t result = 0;
LABEL_14:
  *(void *)a4 = v14;
  *(int64x2_t *)(a4 + 8) = v9;
  *(void *)(a4 + 24) = v15;
  *(void *)(a4 + 32) = result;
  return result;
}

uint64_t sub_248715C38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[1];
  uint64_t v4 = *(void *)(*v1 + 16);
  if (v4 < v3)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v3 < 0)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  long long v5 = 0uLL;
  if (v3 != v4)
  {
    uint64_t v6 = *v1 + (v3 << 6) + 48;
    while (v3 < v4)
    {
      if ((*(void *)v6 & 0x6000000000000000) == 0x2000000000000000)
      {
        uint64_t v8 = *(void *)(v6 - 16);
        uint64_t v9 = *(void *)(v6 - 8);
        long long v11 = *(_OWORD *)(v6 + 24);
        uint64_t v7 = *(unsigned __int8 *)(v6 + 40);
        sub_24870266C(v8, v9, *(void *)v6);
        uint64_t result = sub_248717828(v3);
        long long v5 = v11;
        goto LABEL_10;
      }
      ++v3;
      v6 += 64;
      if (v4 == v3) {
        goto LABEL_8;
      }
    }
    __break(1u);
    goto LABEL_12;
  }
LABEL_8:
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
LABEL_10:
  *(_OWORD *)a1 = v5;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  return result;
}

uint64_t sub_248715D18(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3 < a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (a2 < 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v6 = result;
  uint64_t v7 = v3 - a2;
  if (v3 == a2)
  {
    uint64_t v8 = (char *)MEMORY[0x263F8EE78];
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_248718A04(v6 + 32, a2, (2 * v3) | 1, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_248718C10(v13, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v14;
  }
  if (v3 > (unint64_t)a2)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = (unsigned char *)(v6 + (a2 << 6) + 88);
    uint64_t v8 = (char *)MEMORY[0x263F8EE78];
    do
    {
      if (*v9 == 1)
      {
        uint64_t v10 = *((void *)v9 - 2);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v8 = sub_24871A608(0, *((void *)v8 + 2) + 1, 1, v8);
        }
        unint64_t v12 = *((void *)v8 + 2);
        unint64_t v11 = *((void *)v8 + 3);
        if (v12 >= v11 >> 1) {
          uint64_t v8 = sub_24871A608((char *)(v11 > 1), v12 + 1, 1, v8);
        }
        *((void *)v8 + 2) = v12 + 1;
        *(void *)&v8[8 * v12 + 32] = v10;
      }
      v9 += 64;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_248715EC4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v6 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v6)
  {
LABEL_11:
    unint64_t v11 = sub_24872C5A0();
    if (v11 < 2)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FCC0);
      unint64_t v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_24872D630;
      *(void *)(v3 + 32) = a1;
      *(void *)(v3 + 40) = a2;
      *(void *)(v3 + 48) = 0x2000000000000000;
      *(void *)(v3 + 56) = 0;
      *(void *)(v3 + 64) = 0;
      *(void *)(v3 + 72) = a3;
      *(void *)(v3 + 80) = 0;
      *(unsigned char *)(v3 + 88) = 1;
      swift_bridgeObjectRetain();
      return v3;
    }
    if (v11 != 2) {
      goto LABEL_25;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FCC0);
    uint64_t v12 = swift_allocObject();
    unint64_t v3 = v12;
    *(_OWORD *)(v12 + 16) = xmmword_24872D630;
    *(void *)(v12 + 32) = 0;
    *(void *)(v12 + 40) = 0;
    *(void *)(v12 + 48) = 0x4000000000000000;
    *(void *)(v12 + 56) = 0;
    *(void *)(v12 + 64) = 0;
    *(void *)(v12 + 72) = a3;
    goto LABEL_15;
  }
  unint64_t v7 = 0;
  unint64_t v8 = 4 * v6;
  unint64_t v3 = 15;
  while (1)
  {
    if (sub_24872C6A0() == 45 && v10 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    char v9 = sub_24872CEB0();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0) {
      break;
    }
LABEL_7:
    unint64_t v3 = sub_24872C5B0();
    unint64_t v7 = v3 >> 14;
    if (v3 >> 14 == v8) {
      goto LABEL_11;
    }
  }
  uint64_t v13 = sub_24872C670();
  if (v8 < v7)
  {
    __break(1u);
    goto LABEL_46;
  }
  uint64_t v14 = v13;
  uint64_t v15 = sub_24872C6D0();
  uint64_t v19 = v18;
  if (v14 == 1)
  {
    unint64_t v20 = v15;
    unint64_t v21 = v16;
    uint64_t v22 = v17;
    swift_bridgeObjectRetain();
    sub_2487181B0(v20, v21, v22, v19, v53);
    if (v50)
    {
LABEL_21:
      swift_bridgeObjectRelease();
      return v3;
    }
    uint64_t v47 = v53[0];
    uint64_t v48 = v53[1];
    uint64_t v27 = v53[3];
    uint64_t v51 = v53[2];
    uint64_t v28 = v53[4];
    sub_248702744((uint64_t)v53, (uint64_t)v56);
    if (v57 < 0)
    {
      v57 &= ~0x8000000000000000;
    }
    else
    {
      sub_2487027A0((uint64_t)v56, (uint64_t)v58);
      sub_2487027A0((uint64_t)v58, (uint64_t)&v59);
      if (v60 >> 6 > 1u)
      {
        v60 &= 0x3Fu;
        sub_2486B7650(v47, v48, v51);
        uint64_t v29 = sub_2486FB9D4();
        sub_2487027FC(v53);
        goto LABEL_33;
      }
      v60 &= 0x3Fu;
    }
    uint64_t v29 = MEMORY[0x263F8EE78];
LABEL_33:
    uint64_t v30 = *(void *)(v29 + 16);
    if (v30)
    {
      if (v30 != 1)
      {
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FCC0);
        unint64_t v3 = swift_allocObject();
        *(_OWORD *)(v3 + 16) = xmmword_24872D630;
        *(void *)(v3 + 32) = v47;
        *(void *)(v3 + 40) = v48;
        *(void *)(v3 + 48) = v51;
        *(void *)(v3 + 56) = v27;
        *(void *)(v3 + 64) = v28;
        *(void *)(v3 + 72) = a3;
        *(void *)(v3 + 80) = 0;
        *(unsigned char *)(v3 + 88) = 1;
        uint64_t v35 = *(void *)(v29 + 16);
        if (v35)
        {
          char v36 = (uint64_t *)(v29 + 72);
          do
          {
            uint64_t v37 = *(v36 - 4);
            uint64_t v49 = *(v36 - 5);
            uint64_t v38 = *(v36 - 3);
            uint64_t v39 = *(v36 - 2);
            uint64_t v40 = *(v36 - 1);
            uint64_t v41 = *v36;
            sub_24870268C(v37, v38, v39);
            unint64_t v43 = *(void *)(v3 + 16);
            unint64_t v42 = *(void *)(v3 + 24);
            unint64_t v44 = v43 + 1;
            if (v43 >= v42 >> 1)
            {
              int64_t v46 = sub_24871A2E8((char *)(v42 > 1), v43 + 1, 1, (char *)v3);
              unint64_t v44 = v43 + 1;
              unint64_t v3 = (unint64_t)v46;
            }
            v36 += 6;
            *(void *)(v3 + 16) = v44;
            unint64_t v45 = v3 + (v43 << 6);
            *(void *)(v45 + 32) = v37;
            *(void *)(v45 + 40) = v38;
            *(void *)(v45 + 48) = v39;
            *(void *)(v45 + 56) = v40;
            *(void *)(v45 + 64) = v41;
            *(void *)(v45 + 72) = a3;
            *(void *)(v45 + 80) = v49;
            *(unsigned char *)(v45 + 88) = 0;
            --v35;
          }
          while (v35);
        }
        goto LABEL_21;
      }
      sub_2487027FC(v53);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FCC0);
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_24872D630;
      if ((v20 ^ v21) >> 14)
      {
        unint64_t v3 = v31;
        uint64_t v32 = sub_24872C930();
        uint64_t v34 = v33;
        swift_bridgeObjectRelease();
        *(void *)(v3 + 32) = v32;
        *(void *)(v3 + 40) = v34;
        *(void *)(v3 + 48) = 64;
        *(void *)(v3 + 56) = 0;
        *(void *)(v3 + 64) = 0;
LABEL_24:
        *(void *)(v3 + 72) = a3;
        *(void *)(v3 + 80) = 0;
        *(unsigned char *)(v3 + 88) = 1;
        return v3;
      }
LABEL_46:
      uint64_t result = swift_bridgeObjectRelease();
      __break(1u);
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FCC0);
    uint64_t v12 = swift_allocObject();
    unint64_t v3 = v12;
    *(_OWORD *)(v12 + 16) = xmmword_24872D630;
    *(void *)(v12 + 32) = v47;
    *(void *)(v12 + 40) = v48;
    *(void *)(v12 + 48) = v51;
    *(void *)(v12 + 56) = v27;
    *(void *)(v12 + 64) = v28;
    *(void *)(v12 + 72) = a3;
LABEL_15:
    *(void *)(v12 + 80) = 0;
    *(unsigned char *)(v12 + 88) = 1;
    return v3;
  }
  if (!v14)
  {
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FCC0);
    unint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_24872D630;
    *(void *)(v3 + 32) = a1;
    *(void *)(v3 + 40) = a2;
    *(void *)(v3 + 48) = 0x2000000000000000;
    *(void *)(v3 + 56) = 0;
    *(void *)(v3 + 64) = 0;
    *(void *)(v3 + 72) = a3;
    *(void *)(v3 + 80) = 0;
    *(unsigned char *)(v3 + 88) = 1;
    swift_bridgeObjectRetain();
    return v3;
  }
  swift_bridgeObjectRelease();
  if (v14 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FCC0);
    unint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_24872D630;
    swift_bridgeObjectRetain();
    sub_2487164F8(a1, a2, (uint64_t *)v54);
    uint64_t v23 = v55;
    long long v24 = v54[1];
    *(_OWORD *)(v3 + 32) = v54[0];
    *(_OWORD *)(v3 + 48) = v24;
    *(void *)(v3 + 64) = v23;
    goto LABEL_24;
  }
LABEL_25:
  sub_2486B4DD4();
  swift_allocError();
  *(void *)uint64_t v25 = a1;
  *(void *)(v25 + 8) = a2;
  *(_OWORD *)(v25 + 16) = 0u;
  *(_OWORD *)(v25 + 32) = 0u;
  *(_OWORD *)(v25 + 48) = 0u;
  *(_OWORD *)(v25 + 64) = 0u;
  *(unsigned char *)(v25 + 80) = 5;
  swift_bridgeObjectRetain();
  swift_willThrow();
  return v3;
}

unint64_t sub_2487164F8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v6 = sub_2486D35A4(61, 0xE100000000000000, a1, a2);
  if (v7)
  {
    uint64_t v9 = HIBYTE(a2) & 0xF;
    if ((a2 & 0x2000000000000000) == 0) {
      uint64_t v9 = a1;
    }
    uint64_t v10 = v9 << 16;
    if ((a2 & 0x1000000000000000) == 0 || (a1 & 0x800000000000000) != 0) {
      unint64_t v8 = v10 | 7;
    }
    else {
      unint64_t v8 = v10 | 0xB;
    }
  }
  else
  {
    unint64_t v8 = v6;
  }
  unint64_t v11 = sub_24872C6D0();
  unint64_t v13 = v12;
  sub_2486D0F90(v8, a1, a2);
  unint64_t v15 = v14;
  unint64_t result = sub_24872C910();
  if (v17) {
    unint64_t result = v15;
  }
  if (v15 >> 14 < result >> 14)
  {
    __break(1u);
  }
  else
  {
    uint64_t v18 = sub_24872C950();
    unint64_t v20 = v19;
    uint64_t v22 = v21;
    uint64_t v24 = v23;
    swift_bridgeObjectRelease();
    uint64_t v25 = sub_248715684(v11, v13);
    uint64_t v27 = v26;
    unsigned __int8 v29 = v28;
    if ((v18 ^ v20) >> 14)
    {
      uint64_t v30 = MEMORY[0x24C57C040](v18, v20, v22, v24);
      uint64_t v31 = v33;
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
      unint64_t v32 = v29 | 0x8000000000000000;
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      unint64_t v32 = v29;
    }
    *a3 = v25;
    a3[1] = v27;
    a3[2] = v32;
    a3[3] = v30;
    a3[4] = v31;
  }
  return result;
}

uint64_t sub_2487166C4()
{
  sub_248702744(v0, (uint64_t)v7);
  unsigned __int8 v1 = v8;
  if (v8 < 0)
  {
    v8 &= ~0x8000000000000000;
    v10[0] = sub_248714E64(v7[0], v7[1], v1);
    v10[1] = v3;
    sub_24872C600();
    sub_24872C600();
    return v10[0];
  }
  sub_2487027A0((uint64_t)v7, (uint64_t)v9);
  sub_2487027A0((uint64_t)v9, (uint64_t)v10);
  int v2 = v11 >> 6;
  if (!v2)
  {
    v11 &= 0x3Fu;
    uint64_t v5 = 11565;
LABEL_8:
    uint64_t v6 = v5;
    sub_24872C600();
    return v6;
  }
  if (v2 != 1)
  {
    v11 &= 0x3Fu;
    uint64_t v5 = 45;
    goto LABEL_8;
  }
  v11 &= 0x3Fu;
  uint64_t v6 = 0;
  sub_24872C600();
  sub_24872C4E0();
  return v6;
}

uint64_t sub_2487167EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24871687C(a1, a2, a3, a4, (void (*)(uint64_t, unsigned char *))sub_248702744, (uint64_t (*)(unsigned char *, unsigned char *))sub_248717B40);
}

uint64_t sub_248716818()
{
  sub_248702744(v0, (uint64_t)v2);
  return sub_2487166C4();
}

uint64_t sub_248716850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24871687C(a1, a2, a3, a4, (void (*)(uint64_t, unsigned char *))sub_2486B7680, (uint64_t (*)(unsigned char *, unsigned char *))sub_248717E00);
}

uint64_t sub_24871687C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, unsigned char *), uint64_t (*a6)(unsigned char *, unsigned char *))
{
  a5(a1, v10);
  a5(a2, v11);
  return a6(v10, v11) & 1;
}

uint64_t sub_2487168E4(uint64_t a1, uint64_t a2)
{
  sub_248702744(a1, (uint64_t)v12);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  int v6 = *(unsigned __int8 *)(a1 + 56);
  sub_248702744(a2, (uint64_t)v13);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  int v9 = *(unsigned __int8 *)(a2 + 56);
  if ((sub_248717E00((uint64_t)v12, (uint64_t)v13) & 1) != 0 && v5 == v8)
  {
    if (v6)
    {
      if (v9) {
        return 1;
      }
    }
    else
    {
      if (v4 == v7) {
        int v11 = v9;
      }
      else {
        int v11 = 1;
      }
      if (v11 != 1) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_248716980()
{
  return sub_24872D070();
}

uint64_t sub_2487169C8()
{
  return sub_24872D040();
}

uint64_t sub_2487169F4()
{
  return sub_24872D070();
}

BOOL sub_248716A38(void *a1, void *a2)
{
  return *a1 < *a2;
}

BOOL sub_248716A4C(void *a1, void *a2)
{
  return *a2 >= *a1;
}

BOOL sub_248716A60(void *a1, void *a2)
{
  return *a1 >= *a2;
}

BOOL sub_248716A74(void *a1, void *a2)
{
  return *a2 < *a1;
}

uint64_t sub_248716A88()
{
  char v1 = *(unsigned char *)(v0 + 8);
  sub_24872D030();
  if ((v1 & 1) == 0) {
    sub_24872D040();
  }
  sub_24872D040();
  return sub_24872D070();
}

uint64_t sub_248716AE8()
{
  if ((*(unsigned char *)(v0 + 8) & 1) == 0) {
    sub_24872D040();
  }
  return sub_24872D040();
}

uint64_t sub_248716B30()
{
  char v1 = *(unsigned char *)(v0 + 8);
  sub_24872D030();
  if ((v1 & 1) == 0) {
    sub_24872D040();
  }
  sub_24872D040();
  return sub_24872D070();
}

uint64_t sub_248716B90(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    if ((*(unsigned char *)(a2 + 8) & 1) == 0) {
      return 1;
    }
  }
  else
  {
    if (*(void *)a1 >= *(void *)a2) {
      char v2 = 1;
    }
    if ((v2 & 1) == 0) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_248716BC8(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a1 + 8);
  if (*(unsigned char *)(a2 + 8) == 1)
  {
    if ((*(unsigned char *)(a1 + 8) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(void *)a2 >= *(void *)a1) {
      char v2 = 1;
    }
    if ((v2 & 1) == 0) {
      return 0;
    }
  }
  return 1;
}

uint64_t sub_248716C00(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    if ((*(unsigned char *)(a2 + 8) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(void *)a1 >= *(void *)a2) {
      char v2 = 1;
    }
    if ((v2 & 1) == 0) {
      return 0;
    }
  }
  return 1;
}

uint64_t sub_248716C38(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a1 + 8);
  if (*(unsigned char *)(a2 + 8) == 1)
  {
    if ((*(unsigned char *)(a1 + 8) & 1) == 0) {
      return 1;
    }
  }
  else
  {
    if (*(void *)a2 >= *(void *)a1) {
      char v2 = 1;
    }
    if ((v2 & 1) == 0) {
      return 1;
    }
  }
  return 0;
}

BOOL sub_248716C70(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 8) == 1) {
    return (*(unsigned char *)(a2 + 8) & 1) != 0;
  }
  if (*(unsigned char *)(a2 + 8)) {
    return 0;
  }
  return *(void *)a1 == *(void *)a2;
}

uint64_t sub_248716CAC()
{
  char v1 = *(unsigned char *)(v0 + 16);
  sub_24872D030();
  sub_24872D040();
  if ((v1 & 1) == 0) {
    sub_24872D040();
  }
  sub_24872D040();
  return sub_24872D070();
}

uint64_t sub_248716D20()
{
  char v1 = *(unsigned char *)(v0 + 16);
  sub_24872D040();
  if ((v1 & 1) == 0) {
    sub_24872D040();
  }
  return sub_24872D040();
}

uint64_t sub_248716D74()
{
  char v1 = *(unsigned char *)(v0 + 16);
  sub_24872D030();
  sub_24872D040();
  if ((v1 & 1) == 0) {
    sub_24872D040();
  }
  sub_24872D040();
  return sub_24872D070();
}

uint64_t sub_248716DE8(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 < *(void *)a2) {
    return 1;
  }
  if (*(void *)a1 == *(void *)a2)
  {
    int v3 = *(unsigned __int8 *)(a2 + 16);
    if (*(unsigned char *)(a1 + 16))
    {
      if ((v3 & 1) == 0) {
        return 1;
      }
    }
    else
    {
      if (*(void *)(a1 + 8) >= *(void *)(a2 + 8)) {
        int v3 = 1;
      }
      if (v3 != 1) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_248716E38(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < *(void *)a1) {
    return 0;
  }
  if (*(void *)a2 == *(void *)a1)
  {
    int v3 = *(unsigned __int8 *)(a1 + 16);
    if (*(unsigned char *)(a2 + 16))
    {
      if ((v3 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      if (*(void *)(a2 + 8) >= *(void *)(a1 + 8)) {
        int v3 = 1;
      }
      if (v3 != 1) {
        return 0;
      }
    }
  }
  return 1;
}

uint64_t sub_248716E88(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 < *(void *)a2) {
    return 0;
  }
  if (*(void *)a1 == *(void *)a2)
  {
    int v3 = *(unsigned __int8 *)(a2 + 16);
    if (*(unsigned char *)(a1 + 16))
    {
      if ((v3 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      if (*(void *)(a1 + 8) >= *(void *)(a2 + 8)) {
        int v3 = 1;
      }
      if (v3 != 1) {
        return 0;
      }
    }
  }
  return 1;
}

uint64_t sub_248716ED8(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < *(void *)a1) {
    return 1;
  }
  if (*(void *)a2 == *(void *)a1)
  {
    int v3 = *(unsigned __int8 *)(a1 + 16);
    if (*(unsigned char *)(a2 + 16))
    {
      if ((v3 & 1) == 0) {
        return 1;
      }
    }
    else
    {
      if (*(void *)(a2 + 8) >= *(void *)(a1 + 8)) {
        int v3 = 1;
      }
      if (v3 != 1) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_248716F28(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == *(void *)a2)
  {
    int v2 = *(unsigned __int8 *)(a2 + 16);
    if (*(unsigned char *)(a1 + 16) == 1)
    {
      if (v2) {
        return 1;
      }
    }
    else
    {
      if (*(void *)(a1 + 8) != *(void *)(a2 + 8)) {
        int v2 = 1;
      }
      if (v2 != 1) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_248716F74(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  int v3 = (void *)a1[2];
  uint64_t v4 = a2[1];
  uint64_t v5 = (void *)a2[2];
  if ((sub_24870FD64(*a1, *a2) & 1) == 0 || v2 != v4) {
    return 0;
  }
  return sub_24870FC9C(v3, v5);
}

uint64_t sub_248716FEC()
{
  sub_248702744(v0, (uint64_t)v10);
  sub_248702744((uint64_t)v10, (uint64_t)&v11);
  uint64_t v1 = (v12 >> 61) & 3;
  if (!v1)
  {
    v12 &= 0x9FFFFFFFFFFFFFFFLL;
    sub_248702744((uint64_t)&v11, (uint64_t)v13);
    sub_248702744((uint64_t)v13, (uint64_t)&v14);
    unsigned __int8 v3 = v16;
    if (v16 < 0)
    {
      v16 &= ~0x8000000000000000;
      uint64_t v5 = sub_248714E64(v14, v15, v3);
      unint64_t v7 = v6;
      uint64_t v18 = 0x2065756C6176203BLL;
      unint64_t v19 = 0xE900000000000027;
      sub_24872C600();
      sub_24872C600();
      uint64_t v18 = v5;
      unint64_t v19 = v7;
      swift_bridgeObjectRetain();
      sub_24872C600();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v18;
    }
    sub_2487027A0((uint64_t)&v14, (uint64_t)v17);
    sub_2487027A0((uint64_t)v17, (uint64_t)&v18);
    int v4 = v20 >> 6;
    if (v4)
    {
      if (v4 == 1)
      {
        v20 &= 0x3Fu;
        uint64_t v9 = 0;
        sub_24872C600();
        sub_24872C4E0();
        return v9;
      }
      v20 &= 0x3Fu;
      uint64_t v8 = 45;
    }
    else
    {
      v20 &= 0x3Fu;
      uint64_t v8 = 11565;
    }
    uint64_t v9 = v8;
    sub_24872C600();
    return v9;
  }
  if (v1 != 1) {
    return 0x74616E696D726574;
  }
  v12 &= 0x9FFFFFFFFFFFFFFFLL;
  uint64_t v14 = 0x272065756C6176;
  uint64_t v15 = 0xE700000000000000;
  sub_24872C600();
  sub_24872C600();
  return v14;
}

uint64_t sub_248717208()
{
  return sub_248716FEC();
}

uint64_t sub_24871724C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return sub_24872CDE0();
  }
  uint64_t v4 = sub_24872CDE0();
  sub_24872C600();
  sub_24872CDE0();
  sub_24872C600();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_248717304()
{
  return sub_24871724C(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_248717310@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  char v9 = *(unsigned char *)(a1 + 56);
  uint64_t v10 = (v6 >> 61) & 3;
  if (v10)
  {
    if (v10 != 1)
    {
      sub_24871724C(v7, v8, v9);
      sub_24872C600();
      swift_bridgeObjectRelease();
LABEL_9:
      uint64_t result = sub_24872C600();
      goto LABEL_10;
    }
    sub_24871724C(v7, v8, v9);
    sub_24872C600();
    swift_bridgeObjectRelease();
    sub_24872C600();
LABEL_8:
    sub_24872C600();
    goto LABEL_9;
  }
  if ((v6 & 0x8000000000000000) != 0)
  {
    sub_24871724C(v7, v8, v9);
    sub_24872C600();
    swift_bridgeObjectRelease();
    sub_24872C600();
    sub_248714E64(v5, v4, v6);
    sub_24872C600();
    swift_bridgeObjectRelease();
    sub_24872C600();
    goto LABEL_8;
  }
  sub_24871724C(v7, v8, v9);
  sub_24872C600();
  swift_bridgeObjectRelease();
  sub_24872C600();
  sub_248714E64(v5, v4, v6);
  sub_24872C600();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_10:
  *a2 = 91;
  a2[1] = 0xE100000000000000;
  return result;
}

uint64_t sub_2487174FC()
{
  return sub_248718FAC(*v0, v0[1]);
}

uint64_t sub_248717504(uint64_t result, int64_t a2)
{
  int64_t v2 = *(void *)(result + 8);
  if (v2 <= a2)
  {
    unsigned __int8 v3 = (char **)result;
    if (v2 != a2)
    {
      uint64_t v4 = a2;
      uint64_t v5 = *(char **)result;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *unsigned __int8 v3 = v5;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        goto LABEL_16;
      }
      while (1)
      {
        uint64_t v7 = (v4 << 6) + 88;
        int64_t v17 = v2;
        while (v2 < v4)
        {
          unint64_t v8 = v4 - 1;
          if (v4 < 1) {
            goto LABEL_13;
          }
          unint64_t v9 = *((void *)v5 + 2);
          if (v8 >= v9) {
            goto LABEL_14;
          }
          uint64_t v10 = &v5[v7];
          uint64_t v4 = *(void *)&v5[v7 - 120];
          uint64_t v11 = *(void *)&v5[v7 - 112];
          uint64_t v21 = v5;
          int64_t v2 = *(void *)&v5[v7 - 104];
          uint64_t v5 = *(char **)&v5[v7 - 96];
          uint64_t v12 = *((void *)v10 - 11);
          uint64_t v19 = *((void *)v10 - 9);
          uint64_t v20 = *((void *)v10 - 10);
          char v18 = *(v10 - 64);
          sub_24870266C(v4, v11, v2);
          *unsigned __int8 v3 = v21;
          unint64_t v13 = v8 + 1;
          if (v13 >= v9) {
            goto LABEL_15;
          }
          uint64_t v14 = *((void *)v10 - 7);
          uint64_t v15 = *((void *)v10 - 6);
          unint64_t v16 = *((void *)v10 - 5);
          *((void *)v10 - 7) = v4;
          *((void *)v10 - 6) = v11;
          *((void *)v10 - 5) = v2;
          *((void *)v10 - 4) = v5;
          *((void *)v10 - 3) = v12;
          *((void *)v10 - 2) = v20;
          *((void *)v10 - 1) = v19;
          *uint64_t v10 = v18;
          uint64_t result = sub_2487026D8(v14, v15, v16);
          uint64_t v5 = *v3;
          v7 -= 64;
          uint64_t v4 = v13 - 1;
          int64_t v2 = v17;
          if (v13 - 1 == v17) {
            goto LABEL_10;
          }
        }
        __break(1u);
LABEL_13:
        __break(1u);
LABEL_14:
        __break(1u);
LABEL_15:
        __break(1u);
LABEL_16:
        uint64_t v5 = sub_24872249C((uint64_t)v5);
      }
    }
LABEL_10:
    if (__OFADD__(v2, 1)) {
      __break(1u);
    }
    else {
      v3[1] = (char *)(v2 + 1);
    }
  }
  return result;
}

uint64_t sub_248717668(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = *(void *)(*v3 + 16);
  if (v6 < v5)
  {
    __break(1u);
    goto LABEL_43;
  }
  if (v5 < 0)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if (v5 != v6)
  {
    uint64_t v8 = result;
    uint64_t v9 = v3[1];
    if (v5 < (unint64_t)v6)
    {
      uint64_t v10 = (uint64_t *)(v4 + (v5 << 6) + 72);
      uint64_t v9 = v3[1];
      while (1)
      {
        uint64_t v11 = *v10;
        v10 += 8;
        BOOL v12 = v11 <= result;
        if (v11 == result) {
          break;
        }
        if (!v12 || v6 - 1 == v9++) {
          return result;
        }
      }
    }
    if (v9 < v6)
    {
      if ((a3 & 1) == 0)
      {
        if (v9 < v5)
        {
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
          goto LABEL_48;
        }
        if (*(unsigned char *)(v4 + (v9 << 6) + 88) == 1)
        {
          uint64_t result = sub_248717828(v9++);
          uint64_t v4 = *v3;
          uint64_t v5 = v3[1];
        }
        if (v5 < 0) {
          goto LABEL_46;
        }
        uint64_t v14 = *(void *)(v4 + 16);
        if (v14 < (unint64_t)v5 || v14 < v9) {
          goto LABEL_47;
        }
        if (v9 < v5)
        {
LABEL_48:
          __break(1u);
          goto LABEL_49;
        }
        if (v9 == v14) {
          return result;
        }
        char v18 = (unsigned char *)(v4 + (v9 << 6) + 88);
        while (v9 < v14)
        {
          if (*((void *)v18 - 2) == v8 && (*v18 & 1) == 0 && *((void *)v18 - 1) == a2)
          {
            return sub_248717828(v9);
          }
          ++v9;
          v18 += 64;
          if (v14 == v9) {
            return result;
          }
        }
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      if (v9 < v5)
      {
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      uint64_t v15 = (uint64_t *)(v4 + (v9 << 6) + 72);
      int64_t v16 = v9;
      while (1)
      {
        uint64_t v17 = *v15;
        v15 += 8;
        if (v17 != result) {
          break;
        }
        if (v6 == ++v16)
        {
          int64_t v16 = *(void *)(*v3 + 16);
          break;
        }
      }
      if (v16 < v9) {
        goto LABEL_50;
      }
      return sub_24871797C(v9, v16);
    }
  }
  return result;
}

uint64_t sub_248717828(uint64_t result)
{
  uint64_t v2 = (uint64_t)v1[1];
  if (v2 <= result)
  {
    if (v2 != result)
    {
      uint64_t v3 = result;
      char v18 = *v1;
      int64_t v16 = v1;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_17:
      }
        char v18 = sub_24872249C((uint64_t)v18);
      uint64_t v4 = (uint64_t)&v18[64 * v3 + 32];
      uint64_t v17 = v2;
      do
      {
        if (v2 >= v3)
        {
          __break(1u);
LABEL_14:
          __break(1u);
LABEL_15:
          __break(1u);
LABEL_16:
          __break(1u);
          goto LABEL_17;
        }
        unint64_t v5 = v3 - 1;
        if (v3 < 1) {
          goto LABEL_14;
        }
        unint64_t v6 = *((void *)v18 + 2);
        if (v5 >= v6) {
          goto LABEL_15;
        }
        uint64_t v3 = *(void *)(v4 - 64);
        uint64_t v2 = *(void *)(v4 - 56);
        unint64_t v7 = *(void *)(v4 - 48);
        uint64_t v8 = *(void *)(v4 - 40);
        uint64_t v9 = *(void *)(v4 - 32);
        uint64_t v19 = *(void *)(v4 - 24);
        uint64_t v10 = *(void *)(v4 - 16);
        char v11 = *(unsigned char *)(v4 - 8);
        sub_24870266C(v3, v2, v7);
        unint64_t v12 = v5 + 1;
        if (v12 >= v6) {
          goto LABEL_16;
        }
        uint64_t v13 = *(void *)v4;
        uint64_t v14 = *(void *)(v4 + 8);
        unint64_t v15 = *(void *)(v4 + 16);
        *(void *)uint64_t v4 = v3;
        *(void *)(v4 + 8) = v2;
        *(void *)(v4 + 16) = v7;
        *(void *)(v4 + 24) = v8;
        *(void *)(v4 + 32) = v9;
        *(void *)(v4 + 40) = v19;
        *(void *)(v4 + 48) = v10;
        *(unsigned char *)(v4 + 56) = v11;
        uint64_t result = sub_2487026D8(v13, v14, v15);
        v4 -= 64;
        uint64_t v3 = v12 - 1;
        uint64_t v2 = v17;
      }
      while (v12 - 1 != v17);
      uint64_t v1 = v16;
      *int64_t v16 = v18;
    }
    if (__OFADD__(v2, 1)) {
      __break(1u);
    }
    else {
      v1[1] = (char *)(v2 + 1);
    }
  }
  return result;
}

uint64_t sub_24871797C(uint64_t result, unint64_t a2)
{
  uint64_t v4 = result;
  uint64_t v25 = (uint64_t)v2[1];
  if (v25 >= result) {
    goto LABEL_10;
  }
  uint64_t v24 = *v2;
  uint64_t v23 = v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_19;
  }
  while (1)
  {
    uint64_t v21 = v4;
    unint64_t v22 = a2;
    uint64_t v5 = v4;
    unint64_t v6 = &v24[64 * v4];
    do
    {
      BOOL v7 = __OFSUB__(a2--, 1);
      if (v7)
      {
        __break(1u);
LABEL_14:
        __break(1u);
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }
      if (v5-- < 1) {
        goto LABEL_14;
      }
      unint64_t v9 = *((void *)v24 + 2);
      if (v5 >= v9) {
        goto LABEL_15;
      }
      uint64_t v10 = *((void *)v6 - 4);
      uint64_t v11 = *((void *)v6 - 3);
      unint64_t v12 = *((void *)v6 - 2);
      uint64_t v13 = *((void *)v6 - 1);
      uint64_t v14 = *(void *)v6;
      uint64_t v4 = *((void *)v6 + 1);
      uint64_t v27 = *((void *)v6 + 2);
      char v26 = v6[24];
      sub_24870266C(v10, v11, v12);
      if (a2 >= v9) {
        goto LABEL_16;
      }
      uint64_t v15 = (uint64_t)&v24[64 * a2 + 32];
      uint64_t v16 = *(void *)v15;
      uint64_t v17 = *(void *)(v15 + 8);
      unint64_t v18 = *(void *)(v15 + 16);
      *(void *)uint64_t v15 = v10;
      *(void *)(v15 + 8) = v11;
      *(void *)(v15 + 16) = v12;
      *(void *)(v15 + 24) = v13;
      *(void *)(v15 + 32) = v14;
      *(void *)(v15 + 40) = v4;
      *(void *)(v15 + 48) = v27;
      *(unsigned char *)(v15 + 56) = v26;
      uint64_t result = sub_2487026D8(v16, v17, v18);
      v6 -= 64;
    }
    while (v25 < v5);
    a2 = v22;
    uint64_t v2 = v23;
    *uint64_t v23 = v24;
    uint64_t v4 = v21;
LABEL_10:
    unint64_t v19 = a2 - v4;
    if (__OFSUB__(a2, v4))
    {
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
    BOOL v7 = __OFADD__(v25, v19);
    uint64_t v20 = (char *)(v25 + v19);
    if (!v7) {
      break;
    }
LABEL_18:
    __break(1u);
LABEL_19:
    uint64_t v24 = sub_24872249C((uint64_t)v24);
  }
  v2[1] = v20;
  return result;
}

uint64_t sub_248717AF4(uint64_t result, uint64_t a2, __int16 a3)
{
  if ((a3 & 0x100) == 0) {
    return sub_248717668(result, a2, a3 & 1);
  }
  return result;
}

uint64_t sub_248717B24(uint64_t result, uint64_t a2)
{
  if (*(void *)(a2 + 16) < result)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (result < 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_248717B40(uint64_t a1, uint64_t a2)
{
  sub_248702744(a1, (uint64_t)v35);
  unsigned __int8 v3 = v36;
  if ((v36 & 0x8000000000000000) == 0)
  {
    sub_2487027A0((uint64_t)v35, (uint64_t)v39);
    sub_248702744(a2, (uint64_t)&v30);
    if (v32 < 0) {
      goto LABEL_36;
    }
    sub_2487027A0((uint64_t)&v30, (uint64_t)v26);
    sub_2487027A0((uint64_t)v39, (uint64_t)&v40);
    int v4 = v42;
    int v5 = v42 >> 6;
    if (v5)
    {
      if (v5 == 1)
      {
        v42 &= 0x3Fu;
        uint64_t v6 = v40;
        uint64_t v7 = v41;
        sub_2487027A0((uint64_t)v26, (uint64_t)&v27);
        int v8 = v29;
        if ((v29 & 0xC0) == 0x40)
        {
          v29 &= 0x3Fu;
          if (v6 == v27 && v7 == v28)
          {
            if ((v4 ^ v8)) {
              goto LABEL_36;
            }
          }
          else
          {
            char v23 = sub_24872CEB0();
            if (((v4 ^ v8) & 1) != 0 || (v23 & 1) == 0) {
              goto LABEL_36;
            }
          }
LABEL_42:
          char v22 = 1;
          return v22 & 1;
        }
LABEL_36:
        char v22 = 0;
        return v22 & 1;
      }
      v42 &= 0x3Fu;
      uint64_t v19 = v40;
      uint64_t v20 = v41;
      sub_2487027A0((uint64_t)v26, (uint64_t)&v27);
      if ((v29 & 0xC0) != 0x80) {
        goto LABEL_36;
      }
      v29 &= 0x3Fu;
    }
    else
    {
      v42 &= 0x3Fu;
      uint64_t v19 = v40;
      uint64_t v20 = v41;
      sub_2487027A0((uint64_t)v26, (uint64_t)&v27);
      if (v29 >= 0x40u) {
        goto LABEL_36;
      }
    }
    if ((v19 != v27 || v20 != v28) && (sub_24872CEB0() & 1) == 0) {
      goto LABEL_36;
    }
    goto LABEL_42;
  }
  v36 &= ~0x8000000000000000;
  uint64_t v10 = v35[0];
  uint64_t v9 = v35[1];
  uint64_t v11 = v37;
  uint64_t v12 = v38;
  sub_248702744(a2, (uint64_t)&v30);
  unsigned __int8 v13 = v32;
  if ((v32 & 0x8000000000000000) == 0)
  {
    sub_2487027A0((uint64_t)&v30, (uint64_t)&v40);
    goto LABEL_36;
  }
  int v14 = v3;
  v32 &= ~0x8000000000000000;
  unsigned int v15 = v13;
  int v16 = v3 >> 6;
  uint64_t v18 = v33;
  uint64_t v17 = v34;
  if (!v16)
  {
    if (v15 >= 0x40) {
      goto LABEL_36;
    }
    goto LABEL_30;
  }
  if (v16 != 1)
  {
    if ((v15 & 0xC0) != 0x80) {
      goto LABEL_36;
    }
LABEL_30:
    if (v10 == v30 && v9 == v31) {
      goto LABEL_40;
    }
    char v21 = sub_24872CEB0();
    char v22 = 0;
    if (v21) {
      goto LABEL_40;
    }
    return v22 & 1;
  }
  if ((v15 & 0xC0) != 0x40) {
    goto LABEL_36;
  }
  if (v10 == v30 && v9 == v31)
  {
    if ((v14 ^ v15)) {
      goto LABEL_36;
    }
LABEL_40:
    if (v11 != v18 || v12 != v17)
    {
      char v22 = sub_24872CEB0();
      return v22 & 1;
    }
    goto LABEL_42;
  }
  char v25 = sub_24872CEB0();
  char v22 = 0;
  if ((v14 ^ v15) & 1) == 0 && (v25) {
    goto LABEL_40;
  }
  return v22 & 1;
}

uint64_t sub_248717E00(uint64_t a1, uint64_t a2)
{
  sub_248702744(a1, (uint64_t)v39);
  uint64_t v3 = (v40 >> 61) & 3;
  if (!v3)
  {
    v40 &= 0x9FFFFFFFFFFFFFFFLL;
    sub_248702744((uint64_t)v39, (uint64_t)v41);
    sub_248702744(a2, (uint64_t)v28);
    if ((v29 & 0x6000000000000000) != 0) {
      goto LABEL_48;
    }
    v29 &= 0x9FFFFFFFFFFFFFFFLL;
    sub_248702744((uint64_t)v28, (uint64_t)v30);
    sub_248702744((uint64_t)v41, (uint64_t)&v42);
    unsigned __int8 v7 = v43;
    if ((v43 & 0x8000000000000000) == 0)
    {
      sub_2487027A0((uint64_t)&v42, (uint64_t)v45);
      sub_248702744((uint64_t)v30, (uint64_t)&v35);
      if (v36 < 0) {
        goto LABEL_48;
      }
      sub_2487027A0((uint64_t)&v35, (uint64_t)v31);
      sub_2487027A0((uint64_t)v45, (uint64_t)&v46);
      int v8 = v48;
      int v9 = v48 >> 6;
      if (v9)
      {
        if (v9 == 1)
        {
          v48 &= 0x3Fu;
          uint64_t v10 = v46;
          uint64_t v11 = v47;
          sub_2487027A0((uint64_t)v31, (uint64_t)&v32);
          int v12 = v34;
          if ((v34 & 0xC0) == 0x40)
          {
            v34 &= 0x3Fu;
            if (v10 == v32 && v11 == v33)
            {
              if (((v8 ^ v12) & 1) == 0) {
                goto LABEL_19;
              }
            }
            else
            {
              char v25 = sub_24872CEB0();
              if ((v8 ^ v12) & 1) == 0 && (v25) {
                goto LABEL_19;
              }
            }
          }
LABEL_48:
          char v6 = 0;
          return v6 & 1;
        }
        v48 &= 0x3Fu;
        uint64_t v23 = v46;
        uint64_t v24 = v47;
        sub_2487027A0((uint64_t)v31, (uint64_t)&v32);
        if ((v34 & 0xC0) != 0x80) {
          goto LABEL_48;
        }
        v34 &= 0x3Fu;
      }
      else
      {
        v48 &= 0x3Fu;
        uint64_t v23 = v46;
        uint64_t v24 = v47;
        sub_2487027A0((uint64_t)v31, (uint64_t)&v32);
        if (v34 >= 0x40u) {
          goto LABEL_48;
        }
      }
      if (v23 == v32 && v24 == v33) {
        goto LABEL_19;
      }
LABEL_47:
      if (sub_24872CEB0()) {
        goto LABEL_19;
      }
      goto LABEL_48;
    }
    v43 &= ~0x8000000000000000;
    int8x16_t v15 = v42;
    int8x16_t v16 = v44;
    sub_248702744((uint64_t)v30, (uint64_t)&v35);
    unsigned __int8 v17 = v36;
    if ((v36 & 0x8000000000000000) == 0)
    {
      sub_2487027A0((uint64_t)&v35, (uint64_t)&v46);
      goto LABEL_48;
    }
    int v18 = v7;
    v36 &= ~0x8000000000000000;
    unsigned int v19 = v17;
    int v20 = v7 >> 6;
    unint64_t v22 = v37;
    unint64_t v21 = v38;
    if (v20)
    {
      if (v20 == 1)
      {
        if ((v19 & 0xC0) != 0x40) {
          goto LABEL_48;
        }
        if (*(_OWORD *)&v15 == v35)
        {
          if ((v18 ^ v19)) {
            goto LABEL_48;
          }
        }
        else
        {
          char v26 = sub_24872CEB0();
          if (((v18 ^ v19) & 1) != 0 || (v26 & 1) == 0) {
            goto LABEL_48;
          }
        }
        goto LABEL_46;
      }
      if ((v19 & 0xC0) != 0x80) {
        goto LABEL_48;
      }
    }
    else if (v19 >= 0x40)
    {
      goto LABEL_48;
    }
    if (*(_OWORD *)&v15 != v35 && (sub_24872CEB0() & 1) == 0) {
      goto LABEL_48;
    }
LABEL_46:
    if (*(_OWORD *)&v16 == __PAIR128__(v21, v22)) {
      goto LABEL_19;
    }
    goto LABEL_47;
  }
  if (v3 != 1)
  {
    sub_248702744(a2, (uint64_t)&v42);
    if ((v43 & 0x6000000000000000) == 0x4000000000000000 && v43 == 0x4000000000000000)
    {
      int8x16_t v13 = vorrq_s8(v44, v42);
      int8x16_t v14 = vextq_s8(v13, v13, 8uLL);
      if (!*(void *)&vorr_s8(*(int8x8_t *)v14.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v14, v14, 8uLL))) {
        goto LABEL_19;
      }
    }
    goto LABEL_48;
  }
  v40 &= 0x9FFFFFFFFFFFFFFFLL;
  unint64_t v4 = v39[0];
  unint64_t v5 = v39[1];
  sub_248702744(a2, (uint64_t)&v42);
  if ((v43 & 0x6000000000000000) != 0x2000000000000000) {
    goto LABEL_48;
  }
  v43 &= 0x9FFFFFFFFFFFFFFFLL;
  if (__PAIR128__(v5, v4) == *(_OWORD *)&v42)
  {
LABEL_19:
    char v6 = 1;
    return v6 & 1;
  }
  char v6 = sub_24872CEB0();
  return v6 & 1;
}

unint64_t sub_2487181B0@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  unint64_t result = sub_2486D3428(61, 0xE100000000000000, a1, a2);
  if (v11)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_24872C920();
    unint64_t result = swift_bridgeObjectRelease();
    if (v21 == 1)
    {
      if ((a2 ^ a1) < 0x4000)
      {
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_24872C930();
      uint64_t v24 = v23;
      unint64_t result = swift_bridgeObjectRelease_n();
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      unint64_t v27 = 64;
    }
    else
    {
      uint64_t v22 = MEMORY[0x24C57C040](a1, a2, a3, a4);
      uint64_t v24 = v28;
      unint64_t result = swift_bridgeObjectRelease();
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      unint64_t v27 = 128;
    }
LABEL_18:
    *a5 = v22;
    a5[1] = v24;
    a5[2] = v27;
    a5[3] = v25;
    a5[4] = v26;
    return result;
  }
  if (a1 >> 14 > result >> 14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v12 = sub_24872C950();
  uint64_t v48 = v15;
  if ((v12 ^ v13) < 0x4000)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_24872C920();
    unint64_t result = swift_bridgeObjectRelease();
    if (v16 != 1)
    {
      uint64_t v17 = MEMORY[0x24C57C040](a1, a2, a3, a4);
      uint64_t v19 = v41;
      unsigned __int8 v20 = 0x80;
      goto LABEL_15;
    }
    if (a1 >> 14 != a2 >> 14)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_24872C930();
      uint64_t v19 = v18;
      swift_bridgeObjectRelease();
      unsigned __int8 v20 = 64;
LABEL_15:
      swift_bridgeObjectRelease();
      uint64_t v42 = sub_248714E64(v17, v19, v20);
      uint64_t v44 = v43;
      sub_2486B7668(v17, v19, v20);
      sub_2486B4DD4();
      swift_allocError();
      *(void *)uint64_t v45 = v42;
      *(void *)(v45 + 8) = v44;
      *(_OWORD *)(v45 + 16) = 0u;
      *(_OWORD *)(v45 + 32) = 0u;
      *(_OWORD *)(v45 + 48) = 0u;
      *(_OWORD *)(v45 + 64) = 0u;
      *(unsigned char *)(v45 + 80) = 5;
      return swift_willThrow();
    }
    goto LABEL_22;
  }
  uint64_t v29 = v12;
  unint64_t v30 = v13;
  uint64_t v47 = v14;
  unint64_t result = sub_24872C8F0();
  if (a2 >> 14 >= result >> 14)
  {
    unint64_t v27 = 0x8000000000000040;
    uint64_t v31 = sub_24872C950();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    uint64_t v25 = MEMORY[0x24C57C040](v31, v33, v35, v37);
    uint64_t v26 = v38;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_24872C920();
    swift_bridgeObjectRelease();
    if (v39 == 1)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_24872C930();
      uint64_t v24 = v40;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v22 = MEMORY[0x24C57C040](v29, v30, v48, v47);
      uint64_t v24 = v46;
      unint64_t v27 = 0x8000000000000080;
    }
    unint64_t result = swift_bridgeObjectRelease();
    goto LABEL_18;
  }
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_248718588(uint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v4 = (char *)MEMORY[0x263F8EE78];
  unint64_t v27 = (char *)MEMORY[0x263F8EE78];
  unint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    unsigned __int8 v7 = (uint64_t *)(a1 + 56);
    unint64_t v26 = v5 - 1;
    while (1)
    {
      uint64_t v9 = *(v7 - 3);
      unint64_t v8 = *(v7 - 2);
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_248715EC4(v9, v8, v6);
      if (v2)
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v4 = v27;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (uint64_t)v4;
      }
      char v11 = (void *)v10;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24871B930((uint64_t)v11);
      if (!v11[2]) {
        goto LABEL_30;
      }
      uint64_t v12 = v11[4];
      uint64_t v13 = v11[5];
      uint64_t v14 = v11[6];
      uint64_t v15 = v11[7];
      uint64_t v16 = v11[8];
      swift_bridgeObjectRelease();
      if ((v14 & 0x6000000000000000) == 0x4000000000000000)
      {
        BOOL v18 = v14 == 0x4000000000000000 && (v13 | v12 | v15 | v16) == 0;
        if (v26 == v6 || v18)
        {
          if (v26 == v6)
          {
LABEL_17:
            swift_unknownObjectRelease();
            return (uint64_t)v27;
          }
          uint64_t v19 = v6 + 1;
          if (v6 + 1 < v5)
          {
            unint64_t v4 = v27;
            swift_unknownObjectRetain();
            do
            {
              uint64_t v21 = *(v7 - 1);
              uint64_t v20 = *v7;
              swift_bridgeObjectRetain();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v4 = sub_24871A2E8(0, *((void *)v4 + 2) + 1, 1, v4);
              }
              unint64_t v23 = *((void *)v4 + 2);
              unint64_t v22 = *((void *)v4 + 3);
              if (v23 >= v22 >> 1) {
                unint64_t v4 = sub_24871A2E8((char *)(v22 > 1), v23 + 1, 1, v4);
              }
              uint64_t v24 = &v4[64 * v23];
              *((void *)v24 + 8) = 0;
              *((void *)v24 + 9) = v19;
              v7 += 2;
              *((void *)v4 + 2) = v23 + 1;
              *((void *)v24 + 4) = v21;
              *((void *)v24 + 5) = v20;
              *((void *)v24 + 6) = 0x2000000000000000;
              *((void *)v24 + 7) = 0;
              *((void *)v24 + 10) = 0;
              ++v19;
              v24[88] = 1;
            }
            while (v5 != v19);
            swift_unknownObjectRelease_n();
            return (uint64_t)v4;
          }
LABEL_29:
          __break(1u);
LABEL_30:
          uint64_t result = swift_bridgeObjectRelease();
          __break(1u);
          return result;
        }
      }
      else if (v26 == v6)
      {
        goto LABEL_17;
      }
      ++v6;
      v7 += 2;
      uint64_t v2 = 0;
      if (v5 == v6)
      {
        __break(1u);
        goto LABEL_29;
      }
    }
  }
  return (uint64_t)v4;
}

uint64_t sub_248718808(uint64_t result, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  if ((a3 & 0x100) != 0) {
    return 0;
  }
  uint64_t v5 = *(void *)(a4 + 16);
  if (v5 < a5)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if ((a5 & 0x8000000000000000) == 0)
  {
    if (v5 != a5)
    {
      uint64_t v6 = (unsigned __int8 *)(a4 + (a5 << 6) + 88);
      while (a5 < v5)
      {
        uint64_t v7 = *((void *)v6 - 2);
        if (v7 > result) {
          return a5;
        }
        if (v7 == result)
        {
          int v8 = *v6;
          if (a3)
          {
            if ((v8 & 1) == 0) {
              return a5;
            }
          }
          else
          {
            if (*((void *)v6 - 1) <= a2) {
              int v8 = 1;
            }
            if (v8 != 1) {
              return a5;
            }
          }
        }
        if (__OFADD__(a5, 1)) {
          goto LABEL_20;
        }
        ++a5;
        v6 += 64;
        if (a5 == v5) {
          return 0;
        }
      }
      __break(1u);
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    return 0;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_2487188AC@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = *(void *)(result + 16);
  if ((uint64_t)v4 < (uint64_t)a2)
  {
    __break(1u);
    goto LABEL_9;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v4 == a2)
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    char v12 = 0;
    unint64_t v13 = 0x7FFFFFF3ELL;
LABEL_7:
    *(void *)a3 = v5;
    *(void *)(a3 + 8) = v6;
    *(void *)(a3 + 16) = v7;
    *(void *)(a3 + 24) = v8;
    *(void *)(a3 + 32) = v9;
    *(void *)(a3 + 40) = v13;
    *(void *)(a3 + 48) = v10;
    *(void *)(a3 + 56) = v11;
    *(void *)(a3 + 64) = v5;
    *(void *)(a3 + 72) = v6;
    *(unsigned char *)(a3 + 80) = v12;
    return result;
  }
  if (v4 > a2)
  {
    uint64_t v14 = result + (a2 << 6);
    uint64_t v8 = *(void *)(v14 + 32);
    uint64_t v9 = *(void *)(v14 + 40);
    unint64_t v13 = *(void *)(v14 + 48);
    uint64_t v10 = *(void *)(v14 + 56);
    uint64_t v11 = *(void *)(v14 + 64);
    uint64_t v5 = *(void *)(v14 + 72);
    uint64_t v6 = *(void *)(v14 + 80);
    uint64_t v7 = *(unsigned __int8 *)(v14 + 88);
    uint64_t result = sub_24870266C(v8, v9, v13);
    char v12 = v7;
    goto LABEL_7;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_24871898C(uint64_t result, unint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if ((uint64_t)v2 < (uint64_t)a2)
  {
    __break(1u);
    goto LABEL_15;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    return result;
  }
  if (v2 == a2) {
    return 0;
  }
  if ((uint64_t)(v2 - a2) > 1) {
    return 1;
  }
  if (v2 <= a2) {
    goto LABEL_16;
  }
  uint64_t v3 = result + (a2 << 6);
  int8x16_t v4 = vorrq_s8(*(int8x16_t *)(v3 + 32), *(int8x16_t *)(v3 + 56));
  int8x8_t v5 = vorr_s8(*(int8x8_t *)v4.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL));
  return *(void *)(v3 + 48) != 0x4000000000000000 || *(void *)&v5 != 0;
}

uint64_t sub_248718A04(uint64_t result, uint64_t a2, unint64_t a3, void *a4)
{
  int64_t v4 = a3 >> 1;
  if (a3 >> 1 == a2) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v5 = MEMORY[0x263F8EE78];
  uint64_t v7 = a2;
  unint64_t v29 = a3 >> 1;
  uint64_t v30 = a2;
  uint64_t v28 = result;
  do
  {
    uint64_t v8 = v7;
    while (1)
    {
      if (v8 < a2 || v7 >= v4) {
        goto LABEL_33;
      }
      uint64_t v9 = result + (v7 << 6);
      uint64_t v10 = *(void *)v9;
      uint64_t v11 = *(void *)(v9 + 8);
      unint64_t v12 = *(void *)(v9 + 16);
      uint64_t v13 = *(void *)(v9 + 24);
      ++v7;
      BOOL v14 = (v12 & 0x6000000000000000) == 0x4000000000000000 && v12 == 0x4000000000000000;
      if (!v14 || (v11 | *(void *)v9 | v13 | *(void *)(v9 + 32)) != 0)
      {
        uint64_t v16 = *(void *)(v9 + 40);
        char v17 = *(unsigned char *)(v9 + 56);
        if (v17) {
          goto LABEL_26;
        }
        uint64_t v18 = a4[2];
        if (!v18) {
          goto LABEL_26;
        }
        if (a4[4] != v16)
        {
          if (v18 == 1) {
            goto LABEL_26;
          }
          if (a4[5] != v16) {
            break;
          }
        }
      }
LABEL_6:
      if (v7 == v4) {
        return v5;
      }
    }
    if (v18 != 2)
    {
      uint64_t v19 = 6;
      while (1)
      {
        uint64_t v20 = v19 - 3;
        if (__OFADD__(v19 - 4, 1)) {
          break;
        }
        if (a4[v19] == v16) {
          goto LABEL_6;
        }
        ++v19;
        if (v20 == v18) {
          goto LABEL_26;
        }
      }
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
LABEL_26:
    uint64_t v31 = *(void *)(v9 + 48);
    uint64_t v32 = *(void *)(v9 + 32);
    sub_24870266C(v10, v11, v12);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_2486B9CE0(0, *(void *)(v5 + 16) + 1, 1);
    }
    int64_t v4 = v29;
    a2 = v30;
    unint64_t v22 = *(void *)(v5 + 16);
    unint64_t v21 = *(void *)(v5 + 24);
    unint64_t v23 = v22 + 1;
    uint64_t result = v28;
    uint64_t v24 = v32;
    if (v22 >= v21 >> 1)
    {
      unint64_t v26 = v22 + 1;
      unint64_t v27 = *(void *)(v5 + 16);
      sub_2486B9CE0((char *)(v21 > 1), v22 + 1, 1);
      unint64_t v23 = v26;
      unint64_t v22 = v27;
      uint64_t v24 = v32;
      uint64_t result = v28;
      int64_t v4 = v29;
      a2 = v30;
    }
    *(void *)(v5 + 16) = v23;
    uint64_t v25 = v5 + (v22 << 6);
    *(void *)(v25 + 32) = v10;
    *(void *)(v25 + 40) = v11;
    *(void *)(v25 + 48) = v12;
    *(void *)(v25 + 56) = v13;
    *(void *)(v25 + 64) = v24;
    *(void *)(v25 + 72) = v16;
    *(void *)(v25 + 80) = v31;
    *(unsigned char *)(v25 + 88) = v17;
  }
  while (v7 != v4);
  return v5;
}

uint64_t sub_248718C10(uint64_t a1, uint64_t a2)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (!v3) {
    return result;
  }
  uint64_t v29 = MEMORY[0x263F8EE78];
  sub_2486B9D20(0, v3, 0);
  uint64_t result = v29;
  uint64_t v20 = a2 + 32;
  uint64_t v21 = a2;
  for (uint64_t i = a1 + 48; ; i += 64)
  {
    uint64_t v7 = *(void *)(i - 16);
    uint64_t v8 = *(void *)(i - 8);
    unint64_t v9 = *(void *)i;
    unint64_t v10 = *(void *)(i + 24);
    uint64_t v24 = *(void *)(i + 32);
    uint64_t v25 = result;
    unsigned int v23 = *(unsigned __int8 *)(i + 40);
    if (v23 == 1) {
      break;
    }
    if ((v9 & 0x6000000000000000) == 0)
    {
      int v17 = v9 >> 6;
      if ((v9 & 0x8000000000000000) != 0)
      {
        if (v9 >> 6)
        {
          if (v17 == 1)
          {
            uint64_t v26 = 0;
            unint64_t v27 = 0xE000000000000000;
            sub_24870266C(v7, v8, v9);
            sub_24872C600();
            sub_24872C4E0();
LABEL_29:
            sub_24872C600();
            sub_24872C600();
            unint64_t v12 = v27;
            uint64_t v22 = v26;
            goto LABEL_11;
          }
          uint64_t v26 = 45;
          unint64_t v19 = 0xE100000000000000;
        }
        else
        {
          uint64_t v26 = 11565;
          unint64_t v19 = 0xE200000000000000;
        }
        unint64_t v27 = v19;
        sub_24870266C(v7, v8, v9);
        sub_24872C600();
        goto LABEL_29;
      }
      if (v9 >> 6)
      {
        if (v17 == 1)
        {
          uint64_t v26 = 0;
          unint64_t v27 = 0xE000000000000000;
          sub_24870266C(v7, v8, v9);
          sub_24872C600();
          sub_24872C4E0();
LABEL_25:
          unint64_t v12 = v27;
          uint64_t v22 = v26;
          goto LABEL_11;
        }
        uint64_t v26 = 45;
        unint64_t v18 = 0xE100000000000000;
      }
      else
      {
        uint64_t v26 = 11565;
        unint64_t v18 = 0xE200000000000000;
      }
      unint64_t v27 = v18;
      sub_24870266C(v7, v8, v9);
      sub_24872C600();
      goto LABEL_25;
    }
    if ((v10 & 0x8000000000000000) != 0) {
      goto LABEL_33;
    }
    if (v10 >= *(void *)(v21 + 16)) {
      goto LABEL_34;
    }
LABEL_10:
    uint64_t v11 = (uint64_t *)(v20 + 16 * v10);
    unint64_t v12 = v11[1];
    uint64_t v22 = *v11;
    sub_24870266C(v7, v8, v9);
    swift_bridgeObjectRetain();
LABEL_11:
    sub_24870285C();
    uint64_t v28 = sub_24872C860();
    sub_248712AF4((uint64_t)&v26, v10, v24, v23);
    uint64_t v13 = v28;
    sub_2487026D8(v7, v8, v9);
    uint64_t result = v25;
    uint64_t v29 = v25;
    unint64_t v15 = *(void *)(v25 + 16);
    unint64_t v14 = *(void *)(v25 + 24);
    if (v15 >= v14 >> 1)
    {
      sub_2486B9D20((void *)(v14 > 1), v15 + 1, 1);
      uint64_t result = v29;
    }
    *(void *)(result + 16) = v15 + 1;
    uint64_t v16 = (void *)(result + 24 * v15);
    v16[4] = v13;
    void v16[5] = v22;
    void v16[6] = v12;
    if (!--v3) {
      return result;
    }
  }
  if ((v10 & 0x8000000000000000) == 0)
  {
    if (v10 >= *(void *)(v21 + 16)) {
      goto LABEL_32;
    }
    goto LABEL_10;
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_248718FAC(uint64_t result, uint64_t a2)
{
  uint64_t v20 = *(void *)(result + 16);
  if (v20 < a2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (a2 < 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v2 = v20 - a2;
  if (v20 != a2)
  {
    uint64_t v4 = result;
    uint64_t v25 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    uint64_t result = (uint64_t)sub_2486B9D40(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
    {
LABEL_19:
      __break(1u);
      return result;
    }
    uint64_t v5 = 0;
    uint64_t v6 = v25;
    uint64_t v7 = a2;
    uint64_t v8 = (unsigned char *)(v4 + (a2 << 6) + 88);
    uint64_t v19 = v2;
    while (1)
    {
      uint64_t v9 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        break;
      }
      if (v7 + v5 >= v20 || v5 >= v2) {
        goto LABEL_16;
      }
      uint64_t v10 = *((void *)v8 - 1);
      char v11 = *v8;
      long long v12 = *(_OWORD *)(v8 - 40);
      v21[0] = *(_OWORD *)(v8 - 56);
      v21[1] = v12;
      v21[2] = *(_OWORD *)(v8 - 24);
      uint64_t v22 = v10;
      char v23 = v11;
      uint64_t result = sub_248717310((uint64_t)v21, v24);
      uint64_t v14 = v24[0];
      uint64_t v13 = v24[1];
      uint64_t v25 = v6;
      unint64_t v16 = *(void *)(v6 + 16);
      unint64_t v15 = *(void *)(v6 + 24);
      if (v16 >= v15 >> 1)
      {
        uint64_t result = (uint64_t)sub_2486B9D40((char *)(v15 > 1), v16 + 1, 1);
        uint64_t v7 = a2;
        uint64_t v6 = v25;
      }
      *(void *)(v6 + 16) = v16 + 1;
      uint64_t v17 = v6 + 16 * v16;
      *(void *)(v17 + 32) = v14;
      *(void *)(v17 + 40) = v13;
      ++v5;
      v8 += 64;
      uint64_t v2 = v19;
      if (v9 == v19)
      {
        swift_bridgeObjectRelease();
        *(void *)&v21[0] = v6;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
        sub_2486D040C();
        uint64_t v3 = sub_24872C4F0();
        swift_bridgeObjectRelease();
        return v3;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  return 0x3E7974706D653CLL;
}

ValueMetadata *type metadata accessor for SplitArguments.InputIndex()
{
  return &type metadata for SplitArguments.InputIndex;
}

uint64_t destroy for ParsedArgument(void *a1, uint64_t a2)
{
  return sub_248719548(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_2487026F8);
}

void *initializeWithCopy for ParsedArgument(void *a1, void *a2, uint64_t a3)
{
  return sub_248719290(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_24870268C);
}

uint64_t *assignWithCopy for ParsedArgument(uint64_t *a1, void *a2, uint64_t a3)
{
  return sub_248719328(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_24870268C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2487026F8);
}

void *assignWithTake for ParsedArgument(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2487193CC(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2487026F8);
}

uint64_t sub_24871921C(uint64_t a1)
{
  return *(void *)(a1 + 16) >> 63;
}

uint64_t sub_248719228(uint64_t result)
{
  *(void *)(result + 16) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_248719238(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = *(void *)(result + 16) & 0xC1 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for ParsedArgument()
{
  return &type metadata for ParsedArgument;
}

uint64_t destroy for SplitArguments.Element.Value(void *a1, uint64_t a2)
{
  return sub_248719548(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_2487026D8);
}

void *initializeWithCopy for SplitArguments.Element.Value(void *a1, void *a2, uint64_t a3)
{
  return sub_248719290(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_24870266C);
}

void *sub_248719290(void *a1, void *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  a4(*a2, v6, v7, v8, v9);
  *a1 = v5;
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = v8;
  a1[4] = v9;
  return a1;
}

uint64_t *assignWithCopy for SplitArguments.Element.Value(uint64_t *a1, void *a2, uint64_t a3)
{
  return sub_248719328(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_24870266C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2487026D8);
}

uint64_t *sub_248719328(uint64_t *a1, void *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v10 = a2[3];
  uint64_t v11 = a2[4];
  a4(*a2, v8, v9, v10, v11);
  uint64_t v12 = *a1;
  uint64_t v13 = a1[1];
  uint64_t v14 = a1[2];
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v9;
  a1[3] = v10;
  a1[4] = v11;
  a5(v12, v13, v14, v15, v16);
  return a1;
}

void *assignWithTake for SplitArguments.Element.Value(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2487193CC(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2487026D8);
}

void *sub_2487193CC(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v12;
  a1[4] = v6;
  a4(v7, v9, v8, v10, v11);
  return a1;
}

uint64_t _s22ArgumentParserInternal14ParsedArgumentOwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = (*(void *)(a1 + 16) >> 3) & 0xFFFFFFE0 | (*(void *)(a1 + 16) >> 1) & 0x1F;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t sub_248719470(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 24) = 0;
      *(void *)(result + 32) = 0;
      *(void *)(result + 16) = (8 * -a2) & 0x7FFFFFF00 | (2 * (-a2 & 0x1FLL));
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_2487194CC(uint64_t a1)
{
  if (((*(void *)(a1 + 16) >> 61) & 2) != 0) {
    return (*(_DWORD *)a1 + 2);
  }
  else {
    return (*(void *)(a1 + 16) >> 61) & 3;
  }
}

uint64_t sub_2487194EC(uint64_t result)
{
  *(void *)(result + 16) &= 0x9FFFFFFFFFFFFFFFLL;
  return result;
}

uint64_t sub_2487194FC(uint64_t result, uint64_t a2)
{
  if (a2 < 2)
  {
    *(void *)(result + 16) = *(void *)(result + 16) & 0x80000000000000C1 | (a2 << 61);
  }
  else
  {
    *(void *)uint64_t result = (a2 - 2);
    *(_OWORD *)(result + 8) = xmmword_24872FBE0;
    *(void *)(result + 24) = 0;
    *(void *)(result + 32) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SplitArguments.Element.Value()
{
  return &type metadata for SplitArguments.Element.Value;
}

uint64_t sub_248719548(void *a1, uint64_t a2, uint64_t (*a3)(void, void, void, void, void))
{
  return a3(*a1, a1[1], a1[2], a1[3], a1[4]);
}

uint64_t initializeWithCopy for SplitArguments.Element(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  sub_24870266C(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t assignWithCopy for SplitArguments.Element(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  sub_24870266C(*(void *)a2, v5, v6);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  unint64_t v11 = *(void *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  sub_2487026D8(v9, v10, v11);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v12;
  return a1;
}

uint64_t assignWithTake for SplitArguments.Element(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  sub_2487026D8(v4, v5, v6);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for SplitArguments.Element(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = (*(void *)(a1 + 16) >> 3) & 0xFFFFFFE0 | (*(void *)(a1 + 16) >> 1) & 0x1F;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for SplitArguments.Element(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 24) = 0;
      *(void *)(result + 32) = 0;
      *(void *)(result + 16) = (8 * -a2) & 0x7FFFFFF00 | (2 * (-a2 & 0x1FLL));
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SplitArguments.Element()
{
  return &type metadata for SplitArguments.Element;
}

uint64_t getEnumTagSinglePayload for SplitArguments.Index(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SplitArguments.Index(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SplitArguments.Index()
{
  return &type metadata for SplitArguments.Index;
}

uint64_t destroy for SplitArguments()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s22ArgumentParserInternal14SplitArgumentsVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SplitArguments(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

void *assignWithTake for SplitArguments(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SplitArguments(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SplitArguments(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SplitArguments()
{
  return &type metadata for SplitArguments;
}

unint64_t sub_2487199D8()
{
  unint64_t result = qword_26931E638;
  if (!qword_26931E638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E638);
  }
  return result;
}

unint64_t sub_248719A30()
{
  unint64_t result = qword_26931E640;
  if (!qword_26931E640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E640);
  }
  return result;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for SplitArguments.SubIndex(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SplitArguments.SubIndex(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_248719AE8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_248719B04(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SplitArguments.SubIndex()
{
  return &type metadata for SplitArguments.SubIndex;
}

unint64_t sub_248719B38()
{
  unint64_t result = qword_26931E648;
  if (!qword_26931E648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E648);
  }
  return result;
}

uint64_t sub_248719B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain();
  sub_24872C4D0();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a4 + 16);
  uint64_t result = sub_24872D040();
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = a4 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_24872C4D0();
      swift_bridgeObjectRelease();
      v7 += 16;
      --v5;
    }
    while (v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_248719C5C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  sub_24872D030();
  sub_248719B8C((uint64_t)v5, v1, v2, v3);
  return sub_24872D070();
}

uint64_t sub_248719CB8(uint64_t a1)
{
  return sub_248719B8C(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_248719CC4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  sub_24872D030();
  sub_248719B8C((uint64_t)v5, v1, v2, v3);
  return sub_24872D070();
}

uint64_t sub_248719D1C(void *a1, void *a2)
{
  uint64_t v2 = (void *)a1[2];
  uint64_t v3 = (void *)a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_24872CEB0() & 1) == 0) {
    return 0;
  }
  return sub_24870FC9C(v2, v3);
}

uint64_t sub_248719D90(uint64_t a1, uint64_t a2, char *a3)
{
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    a3 = sub_248719EA4(0, *((void *)a3 + 2) + 1, 1, a3);
  }
  unint64_t v7 = *((void *)a3 + 2);
  unint64_t v6 = *((void *)a3 + 3);
  if (v7 >= v6 >> 1) {
    a3 = sub_248719EA4((char *)(v6 > 1), v7 + 1, 1, a3);
  }
  *((void *)a3 + 2) = v7 + 1;
  uint64_t v8 = &a3[16 * v7];
  *((void *)v8 + 4) = a1;
  *((void *)v8 + 5) = a2;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
  sub_2486D040C();
  uint64_t v9 = sub_24872C4F0();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_248719E98()
{
  return sub_248719D90(*(void *)v0, *(void *)(v0 + 8), *(char **)(v0 + 16));
}

char *sub_248719EA4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B140108);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_248719FA8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400F8);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    void v10[2] = v8;
    uint64_t v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[4 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B140198);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_24871A0CC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400F0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_24871A1E4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400D0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_24871A2E8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FCC0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8]) {
      memmove(v13, v14, v8 << 6);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_24871A3EC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400D8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_24871A4E8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400E0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_24871A608(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E668);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_24871A704(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E168);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_24871A81C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E660);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_24871A938(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1400C8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 192);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[192 * v8]) {
      memmove(v12, v13, 192 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_24871AA54(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E150);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_24871AB58(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E658);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 136);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[136 * v8]) {
      memmove(v12, v13, 136 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_24871AC70(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E650);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    void v10[2] = v8;
    uint64_t v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_24871AD94(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E210);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_24871AE98(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E170);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_24871AF94(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B140110);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    void v10[2] = v8;
    uint64_t v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B140120);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_24871B0CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v5 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  int64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 32))(v7);
  uint64_t v8 = sub_24872D120();
  uint64_t v10 = v8;
  int64_t v11 = *(void *)(a2 + 16);
  if (v11)
  {
    uint64_t v21 = v9;
    uint64_t v22 = v8;
    uint64_t v24 = v3;
    uint64_t v26 = MEMORY[0x263F8EE78];
    sub_2486B9D40(0, v11, 0);
    uint64_t v23 = a2;
    uint64_t v12 = a2 + 32;
    uint64_t v13 = v26;
    do
    {
      sub_2486C2100(v12, (uint64_t)v25);
      __swift_project_boxed_opaque_existential_1(v25, v25[3]);
      uint64_t v14 = sub_24872D120();
      uint64_t v16 = v15;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2486B9D40(0, *(void *)(v13 + 16) + 1, 1);
        uint64_t v13 = v26;
      }
      unint64_t v18 = *(void *)(v13 + 16);
      unint64_t v17 = *(void *)(v13 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_2486B9D40((char *)(v17 > 1), v18 + 1, 1);
        uint64_t v13 = v26;
      }
      *(void *)(v13 + 16) = v18 + 1;
      uint64_t v19 = v13 + 16 * v18;
      *(void *)(v19 + 32) = v14;
      *(void *)(v19 + 40) = v16;
      v12 += 40;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    uint64_t v3 = v24;
    uint64_t v10 = v22;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
  return v10;
}

unint64_t sub_24871B2F0(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  uint64_t result = sub_24872C5D0();
  if (v6) {
    uint64_t result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }
  return sub_24872C6D0();
}

uint64_t sub_24871B3A0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_24871B768(a1, a2);
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  if (v12)
  {
    if (v10 == 95 && v12 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v13 = sub_24872CEB0();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0) {
        goto LABEL_7;
      }
    }
    unint64_t v14 = sub_24871B2F0(1uLL, a1, a2);
    uint64_t v16 = v15;
    uint64_t v18 = v17;
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    a1 = MEMORY[0x24C57C040](v14, v16, v18, v20);
    swift_bridgeObjectRelease();
  }
LABEL_7:
  if (a4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v21 = (char *)a5;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v21 = sub_248719EA4(0, *(void *)(a5 + 16) + 1, 1, (char *)a5);
    }
    unint64_t v23 = *((void *)v21 + 2);
    unint64_t v22 = *((void *)v21 + 3);
    if (v23 >= v22 >> 1) {
      uint64_t v21 = sub_248719EA4((char *)(v22 > 1), v23 + 1, 1, v21);
    }
    *((void *)v21 + 2) = v23 + 1;
    uint64_t v24 = &v21[16 * v23];
    *((void *)v24 + 4) = a3;
    *((void *)v24 + 5) = a4;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t destroy for InputKey()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s22ArgumentParserInternal8InputKeyVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for InputKey(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for InputKey(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InputKey(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InputKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InputKey()
{
  return &type metadata for InputKey;
}

unint64_t sub_24871B714()
{
  unint64_t result = qword_26B140080;
  if (!qword_26B140080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B140080);
  }
  return result;
}

uint64_t sub_24871B768(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return sub_24872C6A0();
  }
  else {
    return 0;
  }
}

uint64_t sub_24871B7B0(uint64_t a1)
{
  uint64_t result = sub_248722714(a1);
  if (v4) {
    goto LABEL_7;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32)) {
    return 0;
  }
  else {
    return sub_2487227B4(result, v3, 0, a1);
  }
}

uint64_t sub_24871B844(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = (uint64_t)sub_248719EA4((char *)result, v10, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = *(void *)(v3 + 16);
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + 16) = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_24871B930(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = (uint64_t)sub_24871A2E8((char *)result, v10, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = *(void *)(v3 + 16);
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + 16) = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_24871BA1C(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = (uint64_t)sub_24871A4E8((char *)result, v10, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = *(void *)(v3 + 16);
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + 16) = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_24871BB0C(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = (uint64_t)sub_24871A0CC((char *)result, v10, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = *(void *)(v3 + 16);
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + 16) = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_24871BBFC(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = (uint64_t)sub_24871A704((char *)result, v10, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = *(void *)(v3 + 16);
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + 16) = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_24871BCEC(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v6 = *(void *)(a3 + 16);
  if (v6 < a1 || v6 < a2)
  {
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  int64_t v10 = a2 - a1;
  int64_t v4 = *v5;
  int64_t v11 = *((void *)*v5 + 2);
  int64_t v12 = v11 + a2 - a1;
  if (__OFADD__(v11, a2 - a1)) {
    goto LABEL_19;
  }
  unint64_t v14 = a3;
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v16 = *((void *)v4 + 3) >> 1, v16 < v12))
  {
    if (v11 <= v12) {
      int64_t v17 = v12;
    }
    else {
      int64_t v17 = v11;
    }
    int64_t v4 = sub_24871A938(isUniquelyReferenced_nonNull_native, v17, 1, v4);
    int64_t v16 = *((void *)v4 + 3) >> 1;
  }
  uint64_t v18 = *((void *)v4 + 2);
  uint64_t v19 = (uint64_t *)(v16 - v18);
  uint64_t v20 = sub_24872257C(&v71, &v4[192 * v18 + 32], v16 - v18, a1, a2, v14, a4);
  if ((uint64_t)v20 < v10) {
    goto LABEL_20;
  }
  if ((uint64_t)v20 >= 1)
  {
    uint64_t v21 = *((void *)v4 + 2);
    BOOL v22 = __OFADD__(v21, v20);
    unint64_t v23 = (char *)v20 + v21;
    if (v22)
    {
      __break(1u);
      goto LABEL_24;
    }
    *((void *)v4 + 2) = v23;
  }
  if (v20 != v19)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *int64_t v5 = v4;
    return result;
  }
LABEL_21:
  int64_t v12 = *((void *)v4 + 2);
  unint64_t v14 = v74;
  a4 = v72;
  if (v74 == v72)
  {
    sub_2486CB64C(v69);
    sub_2486CB464((uint64_t)v69, (uint64_t)__dst);
    goto LABEL_27;
  }
LABEL_24:
  uint64_t v25 = v73;
  uint64_t v26 = sub_2486CD828(v68, v14, v71, a4, v73);
  long long v28 = v27[2];
  long long v30 = *v27;
  long long v29 = v27[1];
  v69[3] = v27[3];
  v69[2] = v28;
  v69[0] = v30;
  v69[1] = v29;
  long long v31 = v27[6];
  long long v33 = v27[4];
  long long v32 = v27[5];
  v69[7] = v27[7];
  v69[6] = v31;
  v69[4] = v33;
  v69[5] = v32;
  long long v34 = v27[10];
  long long v36 = v27[8];
  long long v35 = v27[9];
  v69[11] = v27[11];
  v69[10] = v34;
  v69[8] = v36;
  v69[9] = v35;
  memmove(__dst, v27, 0xC0uLL);
  sub_2486B76D8((uint64_t)v69);
  uint64_t result = ((uint64_t (*)(void *, void))v26)(v68, 0);
  if (v14 < *(void *)(v25 + 16))
  {
    ++v14;
    nullsub_1(__dst);
LABEL_27:
    while (1)
    {
      sub_2486CB464((uint64_t)__dst, (uint64_t)v68);
      sub_2486CB464((uint64_t)v68, (uint64_t)v69);
      if (sub_2486CB4CC((uint64_t)v69) == 1) {
        goto LABEL_18;
      }
      unint64_t v37 = *((void *)v4 + 3);
      int64_t v38 = v37 >> 1;
      if ((uint64_t)(v37 >> 1) < v12 + 1)
      {
        int64_t v4 = sub_24871A938((char *)(v37 > 1), v12 + 1, 1, v4);
        int64_t v38 = *((void *)v4 + 3) >> 1;
      }
      sub_2486CB464((uint64_t)__dst, (uint64_t)v66);
      sub_2486CB464((uint64_t)v66, (uint64_t)v67);
      if (sub_2486CB4CC((uint64_t)v67) != 1 && v12 < v38)
      {
        uint64_t v62 = v71;
        uint64_t v39 = v73;
        while (1)
        {
          uint64_t v40 = &v4[192 * v12 + 32];
          int64_t v41 = v12 + 1;
          while (1)
          {
            int64_t v12 = v41;
            sub_2486CB464((uint64_t)v66, (uint64_t)v65);
            long long v42 = v65[3];
            long long v44 = v65[0];
            long long v43 = v65[1];
            *((_OWORD *)v40 + 2) = v65[2];
            *((_OWORD *)v40 + 3) = v42;
            *(_OWORD *)uint64_t v40 = v44;
            *((_OWORD *)v40 + 1) = v43;
            long long v45 = v65[7];
            long long v47 = v65[4];
            long long v46 = v65[5];
            *((_OWORD *)v40 + 6) = v65[6];
            *((_OWORD *)v40 + 7) = v45;
            *((_OWORD *)v40 + 4) = v47;
            *((_OWORD *)v40 + 5) = v46;
            long long v48 = v65[11];
            long long v50 = v65[8];
            long long v49 = v65[9];
            *((_OWORD *)v40 + 10) = v65[10];
            *((_OWORD *)v40 + 11) = v48;
            *((_OWORD *)v40 + 8) = v50;
            *((_OWORD *)v40 + 9) = v49;
            if (v14 != a4) {
              break;
            }
            sub_2486CB64C(v64);
            sub_2486CB464((uint64_t)v64, (uint64_t)__dst);
            sub_2486CB464((uint64_t)__dst, (uint64_t)v66);
            sub_2486CB464((uint64_t)v66, (uint64_t)v67);
            if (sub_2486CB4CC((uint64_t)v67) == 1)
            {
              unint64_t v14 = a4;
              *((void *)v4 + 2) = v12;
              goto LABEL_27;
            }
            v40 += 192;
            int64_t v41 = v12 + 1;
            if (v12 >= v38)
            {
              unint64_t v14 = a4;
              *((void *)v4 + 2) = v12;
              goto LABEL_27;
            }
          }
          uint64_t v51 = sub_2486CD828(v63, v14, v62, a4, v39);
          long long v53 = v52[3];
          long long v55 = *v52;
          long long v54 = v52[1];
          void v64[2] = v52[2];
          v64[3] = v53;
          v64[0] = v55;
          v64[1] = v54;
          long long v56 = v52[7];
          long long v58 = v52[4];
          long long v57 = v52[5];
          v64[6] = v52[6];
          v64[7] = v56;
          v64[4] = v58;
          v64[5] = v57;
          long long v59 = v52[11];
          long long v61 = v52[8];
          long long v60 = v52[9];
          v64[10] = v52[10];
          v64[11] = v59;
          _OWORD v64[8] = v61;
          v64[9] = v60;
          memmove(__dst, v52, 0xC0uLL);
          sub_2486B76D8((uint64_t)v64);
          uint64_t result = ((uint64_t (*)(void *, void))v51)(v63, 0);
          if (v14 >= *(void *)(v39 + 16)) {
            break;
          }
          ++v14;
          nullsub_1(__dst);
          sub_2486CB464((uint64_t)__dst, (uint64_t)v66);
          sub_2486CB464((uint64_t)v66, (uint64_t)v67);
          if (sub_2486CB4CC((uint64_t)v67) == 1 || v12 >= v38) {
            goto LABEL_26;
          }
        }
        __break(1u);
        break;
      }
LABEL_26:
      *((void *)v4 + 2) = v12;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24871C124(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = (uint64_t)sub_24871AA54((char *)result, v10, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = *(void *)(v3 + 16);
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + 16) = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

void *sub_24871C210(void *result)
{
  uint64_t v2 = result[2];
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= v3[3] >> 1)
  {
    if (v6[2]) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = sub_24871AF94(result, v10, 1, v3);
  uint64_t v3 = result;
  if (!v6[2])
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((v3[3] >> 1) - v3[2] < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B140120);
  uint64_t result = (void *)swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = (void *)swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = v3[2];
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    v3[2] = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_24871C310(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 8) + 72);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v6 = v3 + 32;
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_24870789C(v6, (uint64_t)v9);
      if (v2)
      {
        sub_2487078F8((uint64_t)v9);
        uint64_t result = swift_bridgeObjectRelease();
        __break(1u);
        return result;
      }
      if (*(void *)&v9[0] == a1) {
        break;
      }
      sub_2487078F8((uint64_t)v9);
      v6 += 56;
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    long long v11 = v9[0];
    long long v12 = v9[1];
    long long v13 = v9[2];
    uint64_t v14 = v10;
    swift_bridgeObjectRelease();
    if (!(void)v11) {
      goto LABEL_9;
    }
    long long v15 = v11;
    v16[0] = v12;
    v16[1] = v13;
    uint64_t v17 = v14;
    sub_2486B7680(v16, (uint64_t)&v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B13FDD0);
    return swift_dynamicCast();
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_8:
    uint64_t v14 = 0;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v11 = 0u;
    swift_bridgeObjectRelease();
LABEL_9:
    sub_2486B73DC((uint64_t)&v11, qword_26931E6A0);
    sub_2486B4DD4();
    swift_allocError();
    *(void *)uint64_t v7 = 3;
    *(_OWORD *)(v7 + 8) = 0u;
    *(_OWORD *)(v7 + 24) = 0u;
    *(_OWORD *)(v7 + 40) = 0u;
    *(_OWORD *)(v7 + 56) = 0u;
    *(void *)(v7 + 72) = 0;
    *(unsigned char *)(v7 + 80) = 15;
    return swift_willThrow();
  }
}

__n128 sub_24871C4E0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v9 = *(void *)(v4 + 8);
  *((void *)&v21 + 1) = a3;
  unint64_t v22 = a4;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v20);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1Tm, a1, a3);
  v19.n128_u64[0] = a2;
  v19.n128_u64[1] = a4;
  long long v11 = *(char **)(v9 + 72);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v9 + 72) = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    long long v11 = sub_24871A4E8(0, *((void *)v11 + 2) + 1, 1, v11);
    *(void *)(v9 + 72) = v11;
  }
  unint64_t v14 = *((void *)v11 + 2);
  unint64_t v13 = *((void *)v11 + 3);
  if (v14 >= v13 >> 1)
  {
    long long v11 = sub_24871A4E8((char *)(v13 > 1), v14 + 1, 1, v11);
    *(void *)(v9 + 72) = v11;
  }
  *((void *)v11 + 2) = v14 + 1;
  long long v15 = &v11[56 * v14];
  __n128 result = v19;
  long long v17 = v20;
  long long v18 = v21;
  *((void *)v15 + 10) = v22;
  *((_OWORD *)v15 + 3) = v17;
  *((_OWORD *)v15 + 4) = v18;
  *((__n128 *)v15 + 2) = v19;
  return result;
}

uint64_t sub_24871C600()
{
  type metadata accessor for ParsedArgumentsContainer();
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = v0;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  return sub_24872CD60();
}

uint64_t sub_24871C6A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a3;
  *(void *)(result + 24) = a1;
  return result;
}

uint64_t sub_24871C6E4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24871C754()
{
  sub_24871C6E4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ArgumentDecoder()
{
  return self;
}

uint64_t sub_24871C7AC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24871C800()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24871C80C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24871C818()
{
  return sub_24871C600();
}

uint64_t sub_24871C83C()
{
  sub_248722334();
  swift_allocError();
  *uint64_t v0 = 0u;
  v0[1] = 0u;
  return swift_willThrow();
}

uint64_t sub_24871C88C()
{
  sub_248722334();
  swift_allocError();
  *uint64_t v0 = 1;
  v0[1] = 0;
  v0[2] = 0;
  v0[3] = 0;
  return swift_willThrow();
}

double sub_24871C8E0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *(void *)(v4 + 16);
  if (*(void *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_2487104AC(a1, a2, a3);
    if (v11)
    {
      sub_2486D08E8(*(void *)(v6 + 56) + 72 * v10, (uint64_t)&v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v16 + 1))
      {
        long long v21 = v16;
        long long v22 = v17;
        long long v23 = v18;
        uint64_t v12 = *((void *)&v19 + 1);
        uint64_t v24 = v19;
        char v13 = v20;
        swift_beginAccess();
        swift_bridgeObjectRetain_n();
        sub_24870F970(v12);
        swift_endAccess();
        swift_bridgeObjectRelease();
        long long v14 = v22;
        *(_OWORD *)a4 = v21;
        *(_OWORD *)(a4 + 16) = v14;
        double result = *(double *)&v23;
        *(_OWORD *)(a4 + 32) = v23;
        *(void *)(a4 + 48) = v24;
        *(void *)(a4 + 56) = v12;
        *(unsigned char *)(a4 + 64) = v13;
        return result;
      }
    }
    else
    {
      char v20 = 0;
      long long v18 = 0u;
      long long v19 = 0u;
      long long v16 = 0u;
      long long v17 = 0u;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    char v20 = 0;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
  }
  sub_2486B73DC((uint64_t)&v16, &qword_26B13FDB0);
  *(unsigned char *)(a4 + 64) = 0;
  double result = 0.0;
  *(_OWORD *)(a4 + 32) = 0u;
  *(_OWORD *)(a4 + 48) = 0u;
  *(_OWORD *)a4 = 0u;
  *(_OWORD *)(a4 + 16) = 0u;
  return result;
}

uint64_t sub_24871CA50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a3;
  *(void *)(v3 + 24) = a1;
  return v3;
}

uint64_t sub_24871CA5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(*v2 + 80);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v13 - v5;
  uint64_t v7 = v2[2];
  (*(void (**)(char *))(v8 + 16))((char *)&v13 - v5);
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_24871B0CC((uint64_t)v6, v7, v4);
  sub_24871C8E0(v9, v10, v11, a2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

BOOL sub_24871CB84(uint64_t a1)
{
  sub_24871CA5C(a1, (uint64_t)v3);
  BOOL v1 = v4 != 0;
  sub_2486B73DC((uint64_t)v3, &qword_26B13FDB0);
  return v1;
}

uint64_t sub_24871CBD0(uint64_t a1)
{
  sub_24871CA5C(a1, (uint64_t)v3);
  if (!v4)
  {
    sub_2486B73DC((uint64_t)v3, &qword_26B13FDB0);
    long long v6 = 0u;
    long long v7 = 0u;
    goto LABEL_5;
  }
  sub_2486D0BA8((uint64_t)&v5, (uint64_t)&v6, &qword_26B140128);
  sub_2486D0820((uint64_t)v3);
  if (!*((void *)&v7 + 1))
  {
LABEL_5:
    uint64_t v1 = 1;
    goto LABEL_6;
  }
  uint64_t v1 = 0;
LABEL_6:
  sub_2486B73DC((uint64_t)&v6, &qword_26B140128);
  return v1;
}

uint64_t sub_24871CC74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v59 = a4;
  uint64_t v53 = *v5;
  uint64_t v56 = *(void *)(v53 + 80);
  uint64_t v55 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](a1);
  long long v54 = (char *)&v50 - v10;
  uint64_t v11 = sub_24872C8E0();
  uint64_t v50 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  long long v14 = (char *)&v50 - v13;
  unint64_t v51 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v12);
  long long v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = a2;
  uint64_t v17 = a2;
  long long v18 = v5;
  sub_24871CA5C(v17, (uint64_t)v72);
  sub_2486D0BA8((uint64_t)v72, (uint64_t)&v67, &qword_26B13FDB0);
  uint64_t v61 = v6;
  uint64_t v73 = a3;
  uint64_t v60 = a5;
  if (!v68)
  {
    long long v29 = &qword_26B13FDB0;
    long long v30 = &v67;
LABEL_10:
    sub_2486B73DC((uint64_t)v30, v29);
LABEL_12:
    uint64_t v31 = v18[2];
    uint64_t v32 = *(void *)(v18[3] + 88);
    unint64_t v51 = v18[3];
    long long v52 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B140110);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24872D630;
    uint64_t v34 = v56;
    *(void *)(inited + 56) = v56;
    uint64_t v53 = *(void *)(v53 + 88);
    *(void *)(inited + 64) = v53;
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(inited + 32));
    long long v36 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v55 + 16);
    uint64_t v37 = v57;
    v36(boxed_opaque_existential_1Tm, v57, v34);
    uint64_t v67 = v31;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_24871C210((void *)inited);
    uint64_t v55 = v67;
    uint64_t v38 = (uint64_t)v54;
    v36((uint64_t *)v54, v37, v34);
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_24871B0CC(v38, v31, v34);
    uint64_t v41 = v40;
    uint64_t v43 = v42;
    sub_24871CA5C(v37, (uint64_t)v71);
    uint64_t v67 = v32;
    unint64_t v68 = v51;
    uint64_t v69 = v55;
    v70[0] = v39;
    v70[1] = v41;
    v70[2] = v43;
    long long v65 = &type metadata for SingleValueDecoder;
    unint64_t v66 = sub_248722820();
    *(void *)&long long v64 = swift_allocObject();
    sub_24870AC58((uint64_t)&v67, v64 + 16);
    sub_24872C850();
    sub_2486EF464((uint64_t)&v67);
    return sub_2486B73DC((uint64_t)v72, &qword_26B13FDB0);
  }
  uint64_t v19 = v71[1];
  swift_bridgeObjectRetain();
  sub_2486D0820((uint64_t)&v67);
  if (*(void *)(v19 + 16) != 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  sub_24871B7B0(v19);
  int v21 = v20;
  swift_bridgeObjectRelease();
  if ((v21 & 0x10000) != 0 || (v21 & 0x100) == 0) {
    goto LABEL_12;
  }
  sub_2486D0BA8((uint64_t)v72, (uint64_t)&v67, &qword_26B13FDB0);
  if (!v68)
  {
    sub_2486B73DC((uint64_t)&v67, &qword_26B13FDB0);
    long long v62 = 0u;
    long long v63 = 0u;
    goto LABEL_15;
  }
  sub_2486D0BA8((uint64_t)v70, (uint64_t)&v62, &qword_26B140128);
  sub_2486D0820((uint64_t)&v67);
  if (!*((void *)&v63 + 1))
  {
LABEL_15:
    long long v29 = &qword_26B140128;
    long long v30 = (uint64_t *)&v62;
    goto LABEL_10;
  }
  sub_2486D0A7C(&v62, &v64);
  sub_2486B7330((uint64_t)&v64, (uint64_t)&v67);
  long long v22 = v14;
  uint64_t v23 = v73;
  int v24 = swift_dynamicCast();
  unint64_t v25 = v51;
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56);
  if (v24)
  {
    v26(v22, 0, 1, v23);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v64);
    sub_2486B73DC((uint64_t)v72, &qword_26B13FDB0);
    unint64_t v27 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    v27(v16, v22, v23);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v27)(v60, v16, v23);
  }
  v26(v22, 1, 1, v23);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v22, v11);
  uint64_t v67 = 0;
  unint64_t v68 = 0xE000000000000000;
  sub_24872CBB0();
  uint64_t v44 = v67;
  unint64_t v45 = v68;
  uint64_t result = sub_2486D0BA8((uint64_t)v72, (uint64_t)&v67, &qword_26B13FDB0);
  unint64_t v46 = v68;
  if (v68)
  {
    uint64_t v47 = v67;
    uint64_t v48 = v69;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2486D0820((uint64_t)&v67);
    sub_2487228F8();
    swift_allocError();
    *(void *)uint64_t v49 = v44;
    *(void *)(v49 + 8) = v45;
    *(void *)(v49 + 16) = v47;
    *(void *)(v49 + 24) = v46;
    *(void *)(v49 + 32) = v48;
    *(unsigned char *)(v49 + 40) = 0;
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v64);
    return sub_2486B73DC((uint64_t)v72, &qword_26B13FDB0);
  }
  __break(1u);
  return result;
}

uint64_t sub_24871D288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v10 = *v4;
  uint64_t v11 = *(void *)(*v4 + 80);
  *(void *)&long long v46 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](a1);
  *(void *)&long long v45 = (char *)&v38 - v12;
  *(void *)&long long v44 = v13;
  sub_24871CA5C(v13, (uint64_t)v57);
  sub_2486D0BA8((uint64_t)v57, (uint64_t)&v47, &qword_26B13FDB0);
  if (*((void *)&v47 + 1))
  {
    long long v54 = *(_OWORD *)&v48[16];
    long long v55 = *(_OWORD *)&v48[32];
    char v56 = v48[48];
    long long v52 = v47;
    long long v53 = *(_OWORD *)v48;
    if (*(void *)(*(void *)&v48[40] + 16) == 1)
    {
      sub_24871B7B0(*(uint64_t *)&v48[40]);
      if ((v14 & 0x10100) == 0x100)
      {
        sub_2486B73DC((uint64_t)v57, &qword_26B13FDB0);
        sub_2486D0BA8((uint64_t)&v53 + 8, (uint64_t)&v47, &qword_26B140128);
        sub_2486D0820((uint64_t)&v52);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B140128);
        int v15 = swift_dynamicCast();
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(a4, v15 ^ 1u, 1, a2);
      }
    }
    uint64_t v38 = a1;
    uint64_t v39 = a3;
    uint64_t v40 = a4;
    uint64_t v41 = a2;
    uint64_t v42 = v5;
    sub_2486D0820((uint64_t)&v52);
  }
  else
  {
    uint64_t v38 = a1;
    uint64_t v39 = a3;
    uint64_t v40 = a4;
    uint64_t v41 = a2;
    uint64_t v42 = v5;
    sub_2486B73DC((uint64_t)&v47, &qword_26B13FDB0);
  }
  uint64_t v17 = v4[2];
  uint64_t v18 = *(void *)(v4[3] + 88);
  uint64_t v43 = v4[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B140110);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24872D630;
  *(void *)(inited + 56) = v11;
  uint64_t v58 = *(void *)(v10 + 88);
  *(void *)(inited + 64) = v58;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(inited + 32));
  int v21 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v46 + 16);
  uint64_t v22 = v44;
  v21(boxed_opaque_existential_1Tm, v44, v11);
  *(void *)&long long v47 = v17;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_24871C210((void *)inited);
  *(void *)&long long v46 = v47;
  uint64_t v23 = v45;
  v21((uint64_t *)v45, v22, v11);
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_24871B0CC(v23, v17, v11);
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  sub_2486D0BA8((uint64_t)v57, (uint64_t)&v55, &qword_26B13FDB0);
  *(void *)&long long v52 = v18;
  *((void *)&v52 + 1) = v43;
  *(void *)&long long v53 = v46;
  *((void *)&v53 + 1) = v24;
  *(void *)&long long v54 = v26;
  *((void *)&v54 + 1) = v28;
  *(void *)&v48[8] = &type metadata for SingleValueDecoder;
  *(void *)&v48[16] = sub_248722820();
  *(void *)&long long v47 = swift_allocObject();
  sub_24870AC58((uint64_t)&v52, v47 + 16);
  uint64_t v30 = v40;
  uint64_t v29 = v41;
  uint64_t v31 = v42;
  sub_24872C850();
  if (v31)
  {
    uint64_t v51 = v31;
    MEMORY[0x24C57CE60](v31);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E320);
    if (swift_dynamicCast())
    {
      MEMORY[0x24C57CE50](v31);
      uint64_t v33 = *((void *)&v47 + 1);
      uint64_t v32 = *(void *)v48;
      char v34 = v50;
      if (v50 == 11)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2486EF464((uint64_t)&v52);
        sub_2486B73DC((uint64_t)v57, &qword_26B13FDB0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v30, 1, 1, v29);
        return MEMORY[0x24C57CE50](v51);
      }
      uint64_t v35 = v49;
      long long v45 = *(_OWORD *)&v48[24];
      long long v46 = *(_OWORD *)&v48[40];
      long long v44 = *(_OWORD *)&v48[8];
      uint64_t v36 = v47;
      sub_2486B4DD4();
      swift_allocError();
      *(void *)uint64_t v37 = v36;
      *(void *)(v37 + 8) = v33;
      *(void *)(v37 + 16) = v32;
      *(_OWORD *)(v37 + 24) = v44;
      *(_OWORD *)(v37 + 40) = v45;
      *(_OWORD *)(v37 + 56) = v46;
      *(void *)(v37 + 72) = v35;
      *(unsigned char *)(v37 + 80) = v34;
      swift_willThrow();
    }
    sub_2486EF464((uint64_t)&v52);
    sub_2486B73DC((uint64_t)v57, &qword_26B13FDB0);
    return MEMORY[0x24C57CE50](v51);
  }
  else
  {
    sub_2486EF464((uint64_t)&v52);
    sub_2486B73DC((uint64_t)v57, &qword_26B13FDB0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v30, 0, 1, v29);
  }
}

void sub_24871D7CC()
{
}

void sub_24871D818()
{
}

void sub_24871D864()
{
}

void sub_24871D8B0()
{
}

uint64_t sub_24871D8FC()
{
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_24871D924()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ParsedArgumentsContainer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24871D97C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_24871D9B0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_24871D9C4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_24871D9D8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t destroy for DecodedArguments(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1Tm(a1 + 16);
}

_OWORD *initializeWithCopy for DecodedArguments(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  long long v3 = *(_OWORD *)((char *)a2 + 40);
  *(_OWORD *)((char *)a1 + 40) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))((uint64_t)(a1 + 1), (uint64_t)(a2 + 1));
  return a1;
}

uint64_t assignWithCopy for DecodedArguments(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    long long v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *long long v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *long long v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for DecodedArguments(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

ValueMetadata *type metadata accessor for DecodedArguments()
{
  return &type metadata for DecodedArguments;
}

uint64_t destroy for SingleValueDecoder(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 56);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 96)) {
      __swift_destroy_boxed_opaque_existential_1Tm(a1 + 72);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SingleValueDecoder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v7;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    uint64_t v8 = *(void *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8)
    {
      *(void *)(a1 + 96) = v8;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(a1 + 72, a2 + 72, v8);
    }
    else
    {
      long long v11 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = v11;
    }
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v9;
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    long long v10 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v10;
  }
  return a1;
}

uint64_t assignWithCopy for SingleValueDecoder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 48);
  uint64_t v5 = (_OWORD *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v6)
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(a2 + 96);
      if (*(void *)(a1 + 96))
      {
        if (v7)
        {
          __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 72), (uint64_t *)(a2 + 72));
LABEL_15:
          *(void *)(a1 + 104) = *(void *)(a2 + 104);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
          return a1;
        }
        __swift_destroy_boxed_opaque_existential_1Tm(a1 + 72);
      }
      else if (v7)
      {
        *(void *)(a1 + 96) = v7;
        (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 72, a2 + 72);
        goto LABEL_15;
      }
      long long v15 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = v15;
      goto LABEL_15;
    }
    sub_2486D0820(a1 + 48);
    _OWORD *v4 = *v5;
    long long v10 = *(_OWORD *)(a2 + 80);
    long long v9 = *(_OWORD *)(a2 + 96);
    long long v11 = *(_OWORD *)(a2 + 64);
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    *(_OWORD *)(a1 + 80) = v10;
    *(_OWORD *)(a1 + 96) = v9;
    *(_OWORD *)(a1 + 64) = v11;
  }
  else if (v6)
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    uint64_t v8 = *(void *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8)
    {
      *(void *)(a1 + 96) = v8;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(a1 + 72, a2 + 72, v8);
    }
    else
    {
      long long v16 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = v16;
    }
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    swift_bridgeObjectRetain();
  }
  else
  {
    _OWORD *v4 = *v5;
    long long v12 = *(_OWORD *)(a2 + 64);
    long long v13 = *(_OWORD *)(a2 + 80);
    long long v14 = *(_OWORD *)(a2 + 96);
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    *(_OWORD *)(a1 + 80) = v13;
    *(_OWORD *)(a1 + 96) = v14;
    *(_OWORD *)(a1 + 64) = v12;
  }
  return a1;
}

__n128 __swift_memcpy113_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for SingleValueDecoder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 56)) {
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 56);
  if (!v5)
  {
    sub_2486D0820(a1 + 48);
LABEL_7:
    long long v7 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v7;
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    long long v8 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v8;
    return a1;
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 96)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 72);
  }
  long long v6 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v6;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for SingleValueDecoder(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 113)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SingleValueDecoder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 112) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 113) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 113) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SingleValueDecoder()
{
  return &type metadata for SingleValueDecoder;
}

uint64_t sub_24871E350()
{
  return swift_bridgeObjectRetain();
}

void sub_24871E35C()
{
}

BOOL sub_24871E368(uint64_t a1)
{
  return sub_24871CB84(a1);
}

uint64_t sub_24871E390(uint64_t a1)
{
  return sub_24871CBD0(a1) & 1;
}

uint64_t sub_24871E3B8(uint64_t a1)
{
  sub_24871CC74(MEMORY[0x263F8D4F8], a1, MEMORY[0x263F8D4F8], MEMORY[0x263F8D518], (uint64_t)&v4);
  if (!v1) {
    char v2 = v4;
  }
  return v2 & 1;
}

uint64_t sub_24871E408(uint64_t a1)
{
  uint64_t result = sub_24871CC74(MEMORY[0x263F8D310], a1, MEMORY[0x263F8D310], MEMORY[0x263F8D348], (uint64_t)&v3);
  if (!v1) {
    return v3;
  }
  return result;
}

double sub_24871E45C(uint64_t a1)
{
  sub_24871CC74(MEMORY[0x263F8D538], a1, MEMORY[0x263F8D538], MEMORY[0x263F8D570], (uint64_t)&v3);
  if (!v1) {
    return v3;
  }
  return result;
}

float sub_24871E4A8(uint64_t a1)
{
  sub_24871CC74(MEMORY[0x263F8D5C8], a1, MEMORY[0x263F8D5C8], MEMORY[0x263F8D600], (uint64_t)&v3);
  if (!v1) {
    return v3;
  }
  return result;
}

uint64_t sub_24871E4F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24871E768(a1, a2, a3, MEMORY[0x263F8D6C8], MEMORY[0x263F8D6F8]);
}

uint64_t sub_24871E51C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24871E624(a1, a2, a3, MEMORY[0x263F8E498], MEMORY[0x263F8E4B8]);
}

uint64_t sub_24871E544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24871E690(a1, a2, a3, MEMORY[0x263F8E4F0], MEMORY[0x263F8E510]);
}

uint64_t sub_24871E56C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24871E6FC(a1, a2, a3, MEMORY[0x263F8E548], MEMORY[0x263F8E578]);
}

uint64_t sub_24871E594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24871E768(a1, a2, a3, MEMORY[0x263F8E5C0], MEMORY[0x263F8E5F0]);
}

uint64_t sub_24871E5BC()
{
  return sub_24872CF60();
}

uint64_t sub_24871E5D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24871E768(a1, a2, a3, MEMORY[0x263F8D9D0], MEMORY[0x263F8DA00]);
}

uint64_t sub_24871E5FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24871E624(a1, a2, a3, MEMORY[0x263F8E778], MEMORY[0x263F8E7A0]);
}

uint64_t sub_24871E624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = sub_24871CC74(a4, a1, a4, a5, (uint64_t)&v7);
  if (!v5) {
    return v7;
  }
  return result;
}

uint64_t sub_24871E668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24871E690(a1, a2, a3, MEMORY[0x263F8E888], MEMORY[0x263F8E8B8]);
}

uint64_t sub_24871E690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = sub_24871CC74(a4, a1, a4, a5, (uint64_t)&v7);
  if (!v5) {
    return v7;
  }
  return result;
}

uint64_t sub_24871E6D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24871E6FC(a1, a2, a3, MEMORY[0x263F8E8F8], MEMORY[0x263F8E928]);
}

uint64_t sub_24871E6FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = sub_24871CC74(a4, a1, a4, a5, (uint64_t)&v7);
  if (!v5) {
    return v7;
  }
  return result;
}

uint64_t sub_24871E740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24871E768(a1, a2, a3, MEMORY[0x263F8E970], MEMORY[0x263F8E9A0]);
}

uint64_t sub_24871E768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = sub_24871CC74(a4, a1, a4, a5, (uint64_t)&v7);
  if (!v5) {
    return v7;
  }
  return result;
}

uint64_t sub_24871E7AC()
{
  return sub_24872CF70();
}

uint64_t sub_24871E7C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_24871CC74(a1, a2, a3, a4, a5);
}

uint64_t sub_24871E7E8()
{
  return sub_24872CF00();
}

uint64_t sub_24871E800()
{
  return sub_24872CEF0();
}

uint64_t sub_24871E818()
{
  uint64_t result = sub_24872CF10();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_24871E83C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24871EA68(a1, a2, a3, MEMORY[0x263F8E340]);
}

uint64_t sub_24871E868()
{
  uint64_t result = sub_24872CF20();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_24871E88C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24871E9B0(a1, a2, a3, MEMORY[0x263F8E358]);
}

uint64_t sub_24871E8B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24871EA0C(a1, a2, a3, MEMORY[0x263F8E360]);
}

uint64_t sub_24871E8E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24871EA68(a1, a2, a3, MEMORY[0x263F8E368]);
}

uint64_t sub_24871E910()
{
  uint64_t result = sub_24872CF40();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_24871E934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24871EAF0(a1, a2, a3, MEMORY[0x263F8E380]);
}

uint64_t sub_24871E960()
{
  uint64_t result = sub_24872CF30();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_24871E984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24871E9B0(a1, a2, a3, MEMORY[0x263F8E378]);
}

uint64_t sub_24871E9B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4() & 0x1FF;
}

uint64_t sub_24871E9E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24871EA0C(a1, a2, a3, MEMORY[0x263F8E388]);
}

uint64_t sub_24871EA0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4() & 0x1FFFF;
}

uint64_t sub_24871EA3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24871EA68(a1, a2, a3, MEMORY[0x263F8E390]);
}

uint64_t sub_24871EA68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  unint64_t v4 = a4();
  return v4 | ((HIDWORD(v4) & 1) << 32);
}

uint64_t sub_24871EAA0()
{
  uint64_t result = sub_24872CF50();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_24871EAC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24871EAF0(a1, a2, a3, MEMORY[0x263F8E3A0]);
}

uint64_t sub_24871EAF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t result = a4();
  if (v4) {
    return v6;
  }
  return result;
}

uint64_t sub_24871EB1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_24871D288(a1, a2, a3, a4);
}

void sub_24871EB40()
{
}

void sub_24871EB50()
{
}

void sub_24871EB60()
{
}

void sub_24871EB70()
{
}

uint64_t sub_24871EB80()
{
  type metadata accessor for ParsedArgumentsContainer();
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  return sub_24872CD60();
}

void sub_24871EC2C(uint64_t *a1@<X8>)
{
  sub_2486D0BA8(v1 + 48, (uint64_t)&v23, &qword_26B13FDB0);
  if (*((void *)&v23 + 1))
  {
    v29[1] = v25;
    uint64_t v29[2] = v26;
    char v30 = v27;
    long long v28 = v23;
    v29[0] = v24;
    sub_2486D0BA8((uint64_t)v29 + 8, (uint64_t)&v23, &qword_26B140128);
    if (*((void *)&v24 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26931E688);
      if (swift_dynamicCast())
      {
        uint64_t v3 = *(void *)(v1 + 16);
        sub_2486D08E8((uint64_t)&v28, (uint64_t)&v23);
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26931E690);
        uint64_t v22 = &off_26FC791D8;
        *((void *)&v20 + 1) = 0;
        swift_bridgeObjectRetain();
        sub_2486D0820((uint64_t)&v28);
        a1[3] = (uint64_t)&type metadata for SingleValueDecoder.UnkeyedContainer;
        a1[4] = sub_248722AA4();
        uint64_t v4 = swift_allocObject();
        *a1 = v4;
        *(void *)(v4 + 16) = v3;
        long long v5 = v23;
        *(_OWORD *)(v4 + 40) = v24;
        long long v6 = v26;
        *(_OWORD *)(v4 + 56) = v25;
        *(_OWORD *)(v4 + 72) = v6;
        *(unsigned char *)(v4 + 88) = v27;
        *(_OWORD *)(v4 + 24) = v5;
        sub_2486B7680(&v20, v4 + 96);
        return;
      }
    }
    else
    {
      sub_2486B73DC((uint64_t)&v23, &qword_26B140128);
    }
    sub_2486B4DD4();
    swift_allocError();
    *(void *)uint64_t v19 = 3;
    *(_OWORD *)(v19 + 8) = 0u;
    *(_OWORD *)(v19 + 24) = 0u;
    *(_OWORD *)(v19 + 40) = 0u;
    *(_OWORD *)(v19 + 56) = 0u;
    *(void *)(v19 + 72) = 0;
    *(unsigned char *)(v19 + 80) = 15;
    swift_willThrow();
    sub_2486D0820((uint64_t)&v28);
  }
  else
  {
    sub_2486B73DC((uint64_t)&v23, &qword_26B13FDB0);
    *(void *)&long long v20 = *(void *)(v1 + 16);
    swift_bridgeObjectRetain();
    sub_24871EF78((uint64_t)&v23);
    if (*((void *)&v24 + 1))
    {
      sub_2486B7680(&v23, (uint64_t)&v28);
      sub_2486C2100((uint64_t)&v28, (uint64_t)&v23);
      uint64_t v7 = v20;
      uint64_t v8 = *((void *)&v24 + 1);
      uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v23, *((uint64_t *)&v24 + 1));
      MEMORY[0x270FA5388](v9);
      long long v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v12 + 16))(v11);
      uint64_t v13 = sub_24871B0CC((uint64_t)v11, v7, v8);
      uint64_t v15 = v14;
      uint64_t v17 = v16;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v23);
      sub_2486B4DD4();
      swift_allocError();
      *(void *)uint64_t v18 = v13;
      *(void *)(v18 + 8) = v15;
      *(void *)(v18 + 16) = v17;
      *(_OWORD *)(v18 + 24) = 0u;
      *(_OWORD *)(v18 + 40) = 0u;
      *(_OWORD *)(v18 + 56) = 0u;
      *(void *)(v18 + 72) = 0;
      *(unsigned char *)(v18 + 80) = 11;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v28);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_24871EF78(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)(*(void *)v1 + 16))
  {
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      uint64_t v4 = v3[2];
      if (v4)
      {
LABEL_4:
        uint64_t v5 = v4 - 1;
        sub_2486B7680((long long *)&v3[5 * v4 - 1], (uint64_t)v6);
        v3[2] = v5;
        *(void *)uint64_t v1 = v3;
        sub_2486B7680(v6, (uint64_t)v7);
        sub_2486B7680(v7, a1);
        return;
      }
    }
    else
    {
      uint64_t v3 = sub_248722568(v3);
      uint64_t v4 = v3[2];
      if (v4) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
}

void sub_24871F028()
{
  sub_2486D0BA8(v0 + 128, (uint64_t)&v17, &qword_26B13FDB0);
  if (*((void *)&v17 + 1))
  {
    v23[1] = v19;
    v23[2] = v20;
    char v24 = v21;
    long long v22 = v17;
    v23[0] = v18;
    sub_2486D0BA8((uint64_t)v23 + 8, (uint64_t)&v17, &qword_26B140128);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B140128);
    if ((swift_dynamicCast() & 1) == 0)
    {
      long long v13 = v22;
      uint64_t v14 = *(void *)&v23[0];
      sub_2487228F8();
      swift_allocError();
      *(_OWORD *)uint64_t v15 = xmmword_2487300A0;
      *(_OWORD *)(v15 + 16) = v13;
      *(void *)(v15 + 32) = v14;
      *(unsigned char *)(v15 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
    }
    sub_2486D0820((uint64_t)&v22);
  }
  else
  {
    sub_2486B73DC((uint64_t)&v17, &qword_26B13FDB0);
    uint64_t v25 = *(void *)(v0 + 120);
    swift_bridgeObjectRetain();
    sub_24871EF78((uint64_t)&v17);
    if (*((void *)&v18 + 1))
    {
      sub_2486B7680(&v17, (uint64_t)&v22);
      sub_2486C2100((uint64_t)&v22, (uint64_t)&v17);
      uint64_t v1 = v25;
      uint64_t v2 = *((void *)&v18 + 1);
      uint64_t v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v17, *((uint64_t *)&v18 + 1));
      MEMORY[0x270FA5388](v3);
      uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v6 + 16))(v5);
      uint64_t v7 = sub_24871B0CC((uint64_t)v5, v1, v2);
      uint64_t v9 = v8;
      uint64_t v11 = v10;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v17);
      sub_2486B4DD4();
      swift_allocError();
      *(void *)uint64_t v12 = v7;
      *(void *)(v12 + 8) = v9;
      *(void *)(v12 + 16) = v11;
      *(_OWORD *)(v12 + 24) = 0u;
      *(_OWORD *)(v12 + 40) = 0u;
      *(_OWORD *)(v12 + 56) = 0u;
      *(void *)(v12 + 72) = 0;
      *(unsigned char *)(v12 + 80) = 11;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v22);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_24871F2CC()
{
  sub_2486D0BA8(v0 + 128, (uint64_t)&v18, &qword_26B13FDB0);
  if (*((void *)&v18 + 1))
  {
    v24[1] = v20;
    void v24[2] = v21;
    char v25 = v22;
    long long v23 = v18;
    v24[0] = v19;
    sub_2486D0BA8((uint64_t)v24 + 8, (uint64_t)&v18, &qword_26B140128);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B140128);
    if ((swift_dynamicCast() & 1) == 0)
    {
      long long v13 = v23;
      uint64_t v14 = *(void *)&v24[0];
      sub_2487228F8();
      swift_allocError();
      *(_OWORD *)uint64_t v15 = xmmword_2487300A0;
      *(_OWORD *)(v15 + 16) = v13;
      *(void *)(v15 + 32) = v14;
      *(unsigned char *)(v15 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
    }
    sub_2486D0820((uint64_t)&v23);
  }
  else
  {
    sub_2486B73DC((uint64_t)&v18, &qword_26B13FDB0);
    uint64_t v17 = *(void *)(v0 + 120);
    swift_bridgeObjectRetain();
    sub_24871EF78((uint64_t)&v18);
    if (*((void *)&v19 + 1))
    {
      sub_2486B7680(&v18, (uint64_t)&v23);
      sub_2486C2100((uint64_t)&v23, (uint64_t)&v18);
      uint64_t v1 = v17;
      uint64_t v2 = *((void *)&v19 + 1);
      uint64_t v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v18, *((uint64_t *)&v19 + 1));
      MEMORY[0x270FA5388](v3);
      uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v6 + 16))(v5);
      uint64_t v7 = sub_24871B0CC((uint64_t)v5, v1, v2);
      uint64_t v9 = v8;
      uint64_t v11 = v10;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v18);
      sub_2486B4DD4();
      swift_allocError();
      *(void *)uint64_t v12 = v7;
      *(void *)(v12 + 8) = v9;
      *(void *)(v12 + 16) = v11;
      *(_OWORD *)(v12 + 24) = 0u;
      *(_OWORD *)(v12 + 40) = 0u;
      *(_OWORD *)(v12 + 56) = 0u;
      *(void *)(v12 + 72) = 0;
      *(unsigned char *)(v12 + 80) = 11;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v23);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_24871F568()
{
  sub_2486D0BA8(v0 + 128, (uint64_t)&v19, &qword_26B13FDB0);
  if (*((void *)&v19 + 1))
  {
    v25[1] = v21;
    uint64_t v25[2] = v22;
    char v26 = v23;
    long long v24 = v19;
    v25[0] = v20;
    sub_2486D0BA8((uint64_t)v25 + 8, (uint64_t)&v19, &qword_26B140128);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B140128);
    if (swift_dynamicCast())
    {
      char v18 = 0;
    }
    else
    {
      long long v13 = v24;
      uint64_t v14 = *(void *)&v25[0];
      sub_2487228F8();
      swift_allocError();
      *(_OWORD *)uint64_t v15 = xmmword_2487300A0;
      *(_OWORD *)(v15 + 16) = v13;
      *(void *)(v15 + 32) = v14;
      *(unsigned char *)(v15 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
    }
    sub_2486D0820((uint64_t)&v24);
  }
  else
  {
    sub_2486B73DC((uint64_t)&v19, &qword_26B13FDB0);
    uint64_t v17 = *(void *)(v0 + 120);
    swift_bridgeObjectRetain();
    sub_24871EF78((uint64_t)&v19);
    if (*((void *)&v20 + 1))
    {
      sub_2486B7680(&v19, (uint64_t)&v24);
      sub_2486C2100((uint64_t)&v24, (uint64_t)&v19);
      uint64_t v1 = v17;
      uint64_t v2 = *((void *)&v20 + 1);
      uint64_t v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v19, *((uint64_t *)&v20 + 1));
      MEMORY[0x270FA5388](v3);
      uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v6 + 16))(v5);
      uint64_t v7 = sub_24871B0CC((uint64_t)v5, v1, v2);
      uint64_t v9 = v8;
      uint64_t v11 = v10;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v19);
      sub_2486B4DD4();
      swift_allocError();
      *(void *)uint64_t v12 = v7;
      *(void *)(v12 + 8) = v9;
      *(void *)(v12 + 16) = v11;
      *(_OWORD *)(v12 + 24) = 0u;
      *(_OWORD *)(v12 + 40) = 0u;
      *(_OWORD *)(v12 + 56) = 0u;
      *(void *)(v12 + 72) = 0;
      *(unsigned char *)(v12 + 80) = 11;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v24);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_24871F808()
{
  sub_2486D0BA8(v0 + 128, (uint64_t)&v17, &qword_26B13FDB0);
  if (*((void *)&v17 + 1))
  {
    v23[1] = v19;
    v23[2] = v20;
    char v24 = v21;
    long long v22 = v17;
    v23[0] = v18;
    sub_2486D0BA8((uint64_t)v23 + 8, (uint64_t)&v17, &qword_26B140128);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B140128);
    if (swift_dynamicCast())
    {
      BYTE4(v25) = 0;
    }
    else
    {
      long long v13 = v22;
      uint64_t v14 = *(void *)&v23[0];
      sub_2487228F8();
      swift_allocError();
      *(_OWORD *)uint64_t v15 = xmmword_2487300A0;
      *(_OWORD *)(v15 + 16) = v13;
      *(void *)(v15 + 32) = v14;
      *(unsigned char *)(v15 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
    }
    sub_2486D0820((uint64_t)&v22);
  }
  else
  {
    sub_2486B73DC((uint64_t)&v17, &qword_26B13FDB0);
    uint64_t v25 = *(void *)(v0 + 120);
    swift_bridgeObjectRetain();
    sub_24871EF78((uint64_t)&v17);
    if (*((void *)&v18 + 1))
    {
      sub_2486B7680(&v17, (uint64_t)&v22);
      sub_2486C2100((uint64_t)&v22, (uint64_t)&v17);
      uint64_t v1 = v25;
      uint64_t v2 = *((void *)&v18 + 1);
      uint64_t v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v17, *((uint64_t *)&v18 + 1));
      MEMORY[0x270FA5388](v3);
      uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v6 + 16))(v5);
      uint64_t v7 = sub_24871B0CC((uint64_t)v5, v1, v2);
      uint64_t v9 = v8;
      uint64_t v11 = v10;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v17);
      sub_2486B4DD4();
      swift_allocError();
      *(void *)uint64_t v12 = v7;
      *(void *)(v12 + 8) = v9;
      *(void *)(v12 + 16) = v11;
      *(_OWORD *)(v12 + 24) = 0u;
      *(_OWORD *)(v12 + 40) = 0u;
      *(_OWORD *)(v12 + 56) = 0u;
      *(void *)(v12 + 72) = 0;
      *(unsigned char *)(v12 + 80) = 11;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v22);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_24871FAA8()
{
  sub_2486D0BA8(v0 + 128, (uint64_t)&v19, &qword_26B13FDB0);
  if (*((void *)&v19 + 1))
  {
    v25[1] = v21;
    uint64_t v25[2] = v22;
    char v26 = v23;
    long long v24 = v19;
    v25[0] = v20;
    sub_2486D0BA8((uint64_t)v25 + 8, (uint64_t)&v19, &qword_26B140128);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B140128);
    if (swift_dynamicCast())
    {
      char v18 = 0;
    }
    else
    {
      long long v13 = v24;
      uint64_t v14 = *(void *)&v25[0];
      sub_2487228F8();
      swift_allocError();
      *(_OWORD *)uint64_t v15 = xmmword_2487300A0;
      *(_OWORD *)(v15 + 16) = v13;
      *(void *)(v15 + 32) = v14;
      *(unsigned char *)(v15 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
    }
    sub_2486D0820((uint64_t)&v24);
  }
  else
  {
    sub_2486B73DC((uint64_t)&v19, &qword_26B13FDB0);
    uint64_t v17 = *(void *)(v0 + 120);
    swift_bridgeObjectRetain();
    sub_24871EF78((uint64_t)&v19);
    if (*((void *)&v20 + 1))
    {
      sub_2486B7680(&v19, (uint64_t)&v24);
      sub_2486C2100((uint64_t)&v24, (uint64_t)&v19);
      uint64_t v1 = v17;
      uint64_t v2 = *((void *)&v20 + 1);
      uint64_t v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v19, *((uint64_t *)&v20 + 1));
      MEMORY[0x270FA5388](v3);
      uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v6 + 16))(v5);
      uint64_t v7 = sub_24871B0CC((uint64_t)v5, v1, v2);
      uint64_t v9 = v8;
      uint64_t v11 = v10;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v19);
      sub_2486B4DD4();
      swift_allocError();
      *(void *)uint64_t v12 = v7;
      *(void *)(v12 + 8) = v9;
      *(void *)(v12 + 16) = v11;
      *(_OWORD *)(v12 + 24) = 0u;
      *(_OWORD *)(v12 + 40) = 0u;
      *(_OWORD *)(v12 + 56) = 0u;
      *(void *)(v12 + 72) = 0;
      *(unsigned char *)(v12 + 80) = 11;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v24);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_24871FD48()
{
  sub_2486D0BA8(v0 + 128, (uint64_t)&v17, &qword_26B13FDB0);
  if (*((void *)&v17 + 1))
  {
    v23[1] = v19;
    v23[2] = v20;
    char v24 = v21;
    long long v22 = v17;
    v23[0] = v18;
    sub_2486D0BA8((uint64_t)v23 + 8, (uint64_t)&v17, &qword_26B140128);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B140128);
    if (swift_dynamicCast())
    {
      BYTE1(v25) = 0;
    }
    else
    {
      long long v13 = v22;
      uint64_t v14 = *(void *)&v23[0];
      sub_2487228F8();
      swift_allocError();
      *(_OWORD *)uint64_t v15 = xmmword_2487300A0;
      *(_OWORD *)(v15 + 16) = v13;
      *(void *)(v15 + 32) = v14;
      *(unsigned char *)(v15 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
    }
    sub_2486D0820((uint64_t)&v22);
  }
  else
  {
    sub_2486B73DC((uint64_t)&v17, &qword_26B13FDB0);
    uint64_t v25 = *(void *)(v0 + 120);
    swift_bridgeObjectRetain();
    sub_24871EF78((uint64_t)&v17);
    if (*((void *)&v18 + 1))
    {
      sub_2486B7680(&v17, (uint64_t)&v22);
      sub_2486C2100((uint64_t)&v22, (uint64_t)&v17);
      uint64_t v1 = v25;
      uint64_t v2 = *((void *)&v18 + 1);
      uint64_t v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v17, *((uint64_t *)&v18 + 1));
      MEMORY[0x270FA5388](v3);
      uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v6 + 16))(v5);
      uint64_t v7 = sub_24871B0CC((uint64_t)v5, v1, v2);
      uint64_t v9 = v8;
      uint64_t v11 = v10;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v17);
      sub_2486B4DD4();
      swift_allocError();
      *(void *)uint64_t v12 = v7;
      *(void *)(v12 + 8) = v9;
      *(void *)(v12 + 16) = v11;
      *(_OWORD *)(v12 + 24) = 0u;
      *(_OWORD *)(v12 + 40) = 0u;
      *(_OWORD *)(v12 + 56) = 0u;
      *(void *)(v12 + 72) = 0;
      *(unsigned char *)(v12 + 80) = 11;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v22);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_24871FFE8()
{
  sub_2486D0BA8(v0 + 128, (uint64_t)&v17, &qword_26B13FDB0);
  if (*((void *)&v17 + 1))
  {
    v23[1] = v19;
    v23[2] = v20;
    char v24 = v21;
    long long v22 = v17;
    v23[0] = v18;
    sub_2486D0BA8((uint64_t)v23 + 8, (uint64_t)&v17, &qword_26B140128);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B140128);
    if (swift_dynamicCast())
    {
      BYTE2(v25) = 0;
    }
    else
    {
      long long v13 = v22;
      uint64_t v14 = *(void *)&v23[0];
      sub_2487228F8();
      swift_allocError();
      *(_OWORD *)uint64_t v15 = xmmword_2487300A0;
      *(_OWORD *)(v15 + 16) = v13;
      *(void *)(v15 + 32) = v14;
      *(unsigned char *)(v15 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
    }
    sub_2486D0820((uint64_t)&v22);
  }
  else
  {
    sub_2486B73DC((uint64_t)&v17, &qword_26B13FDB0);
    uint64_t v25 = *(void *)(v0 + 120);
    swift_bridgeObjectRetain();
    sub_24871EF78((uint64_t)&v17);
    if (*((void *)&v18 + 1))
    {
      sub_2486B7680(&v17, (uint64_t)&v22);
      sub_2486C2100((uint64_t)&v22, (uint64_t)&v17);
      uint64_t v1 = v25;
      uint64_t v2 = *((void *)&v18 + 1);
      uint64_t v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v17, *((uint64_t *)&v18 + 1));
      MEMORY[0x270FA5388](v3);
      uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v6 + 16))(v5);
      uint64_t v7 = sub_24871B0CC((uint64_t)v5, v1, v2);
      uint64_t v9 = v8;
      uint64_t v11 = v10;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v17);
      sub_2486B4DD4();
      swift_allocError();
      *(void *)uint64_t v12 = v7;
      *(void *)(v12 + 8) = v9;
      *(void *)(v12 + 16) = v11;
      *(_OWORD *)(v12 + 24) = 0u;
      *(_OWORD *)(v12 + 40) = 0u;
      *(_OWORD *)(v12 + 56) = 0u;
      *(void *)(v12 + 72) = 0;
      *(unsigned char *)(v12 + 80) = 11;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v22);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_248720288()
{
  sub_2486D0BA8(v0 + 128, (uint64_t)&v17, &qword_26B13FDB0);
  if (*((void *)&v17 + 1))
  {
    v23[1] = v19;
    v23[2] = v20;
    char v24 = v21;
    long long v22 = v17;
    v23[0] = v18;
    sub_2486D0BA8((uint64_t)v23 + 8, (uint64_t)&v17, &qword_26B140128);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B140128);
    if (swift_dynamicCast())
    {
      BYTE4(v25) = 0;
    }
    else
    {
      long long v13 = v22;
      uint64_t v14 = *(void *)&v23[0];
      sub_2487228F8();
      swift_allocError();
      *(_OWORD *)uint64_t v15 = xmmword_2487300A0;
      *(_OWORD *)(v15 + 16) = v13;
      *(void *)(v15 + 32) = v14;
      *(unsigned char *)(v15 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
    }
    sub_2486D0820((uint64_t)&v22);
  }
  else
  {
    sub_2486B73DC((uint64_t)&v17, &qword_26B13FDB0);
    uint64_t v25 = *(void *)(v0 + 120);
    swift_bridgeObjectRetain();
    sub_24871EF78((uint64_t)&v17);
    if (*((void *)&v18 + 1))
    {
      sub_2486B7680(&v17, (uint64_t)&v22);
      sub_2486C2100((uint64_t)&v22, (uint64_t)&v17);
      uint64_t v1 = v25;
      uint64_t v2 = *((void *)&v18 + 1);
      uint64_t v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v17, *((uint64_t *)&v18 + 1));
      MEMORY[0x270FA5388](v3);
      uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v6 + 16))(v5);
      uint64_t v7 = sub_24871B0CC((uint64_t)v5, v1, v2);
      uint64_t v9 = v8;
      uint64_t v11 = v10;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v17);
      sub_2486B4DD4();
      swift_allocError();
      *(void *)uint64_t v12 = v7;
      *(void *)(v12 + 8) = v9;
      *(void *)(v12 + 16) = v11;
      *(_OWORD *)(v12 + 24) = 0u;
      *(_OWORD *)(v12 + 40) = 0u;
      *(_OWORD *)(v12 + 56) = 0u;
      *(void *)(v12 + 72) = 0;
      *(unsigned char *)(v12 + 80) = 11;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v22);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_248720528(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_24872C8E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v27 - v7;
  sub_2486D0BA8(v2 + 128, (uint64_t)&v28, &qword_26B13FDB0);
  if (*((void *)&v28 + 1))
  {
    v34[1] = v30;
    uint64_t v34[2] = v31;
    char v35 = v32;
    long long v33 = v28;
    v34[0] = v29;
    sub_2486D0BA8((uint64_t)v34 + 8, (uint64_t)&v28, &qword_26B140128);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B140128);
    char v9 = swift_dynamicCast();
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56);
    if (v9)
    {
      uint64_t v11 = *(void *)(a1 - 8);
      v10(v8, 0, 1, a1);
      sub_2486D0820((uint64_t)&v33);
      (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2, v8, a1);
    }
    else
    {
      v10(v8, 1, 1, a1);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      long long v24 = v33;
      uint64_t v25 = *(void *)&v34[0];
      sub_2487228F8();
      swift_allocError();
      *(_OWORD *)uint64_t v26 = xmmword_2487300A0;
      *(_OWORD *)(v26 + 16) = v24;
      *(void *)(v26 + 32) = v25;
      *(unsigned char *)(v26 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
      sub_2486D0820((uint64_t)&v33);
    }
  }
  else
  {
    sub_2486B73DC((uint64_t)&v28, &qword_26B13FDB0);
    uint64_t v36 = *(void *)(v2 + 120);
    swift_bridgeObjectRetain();
    sub_24871EF78((uint64_t)&v28);
    if (*((void *)&v29 + 1))
    {
      sub_2486B7680(&v28, (uint64_t)&v33);
      sub_2486C2100((uint64_t)&v33, (uint64_t)&v28);
      uint64_t v12 = v36;
      uint64_t v13 = *((void *)&v29 + 1);
      uint64_t v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v28, *((uint64_t *)&v29 + 1));
      MEMORY[0x270FA5388](v14);
      uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v17 + 16))(v16);
      uint64_t v18 = sub_24871B0CC((uint64_t)v16, v12, v13);
      uint64_t v20 = v19;
      uint64_t v22 = v21;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v28);
      sub_2486B4DD4();
      swift_allocError();
      *(void *)uint64_t v23 = v18;
      *(void *)(v23 + 8) = v20;
      *(void *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = 0u;
      *(_OWORD *)(v23 + 40) = 0u;
      *(_OWORD *)(v23 + 56) = 0u;
      *(void *)(v23 + 72) = 0;
      *(unsigned char *)(v23 + 80) = 11;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v33);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_2487208E0()
{
  return swift_bridgeObjectRetain();
}

BOOL sub_2487208E8()
{
  sub_2486D0BA8(v0 + 128, (uint64_t)v3, &qword_26B13FDB0);
  BOOL v1 = v4 == 0;
  sub_2486B73DC((uint64_t)v3, &qword_26B13FDB0);
  return v1;
}

uint64_t sub_248720940()
{
  sub_24871F028();
  return v0 & 1;
}

void sub_24872095C()
{
}

void sub_248720974()
{
}

void sub_24872098C()
{
}

void sub_2487209A4()
{
}

void sub_2487209C4()
{
}

void sub_2487209E4()
{
}

void sub_248720A04()
{
}

void sub_248720A24()
{
}

uint64_t sub_248720A44()
{
  return sub_24872CEC0();
}

void sub_248720A5C()
{
}

void sub_248720A7C()
{
}

void sub_248720A9C()
{
}

void sub_248720ABC()
{
}

void sub_248720ADC()
{
}

uint64_t sub_248720AFC()
{
  return sub_24872CED0();
}

void sub_248720B14(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
}

uint64_t sub_248720B2C()
{
  BOOL v1 = v0;
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 10), v2);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v3 + 32))(&v12, v2, v3);
  if (v13)
  {
    sub_2486D0A7C(&v12, v14);
    sub_2486B7330((uint64_t)v14, (uint64_t)&v12);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
      char v4 = v11 & 1;
    }
    else
    {
      *(void *)&long long v12 = 0;
      *((void *)&v12 + 1) = 0xE000000000000000;
      sub_24872CBB0();
      long long v5 = v12;
      uint64_t v7 = v0[1];
      uint64_t v6 = v0[2];
      uint64_t v8 = v1[3];
      sub_2487228F8();
      swift_allocError();
      *(_OWORD *)uint64_t v9 = v5;
      *(void *)(v9 + 16) = v7;
      *(void *)(v9 + 24) = v6;
      *(void *)(v9 + 32) = v8;
      *(unsigned char *)(v9 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
    }
    return v4 & 1;
  }
  else
  {
    sub_2486B73DC((uint64_t)&v12, &qword_26B140128);
    uint64_t result = sub_24872CC40();
    __break(1u);
  }
  return result;
}

uint64_t sub_248720CD4()
{
  BOOL v1 = v0;
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 10), v2);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v3 + 32))(&v11, v2, v3);
  if (v12)
  {
    sub_2486D0A7C(&v11, v13);
    sub_2486B7330((uint64_t)v13, (uint64_t)&v11);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
      return v10;
    }
    else
    {
      *(void *)&long long v11 = 0;
      *((void *)&v11 + 1) = 0xE000000000000000;
      sub_24872CBB0();
      long long v5 = v11;
      uint64_t v7 = v0[1];
      uint64_t v6 = v0[2];
      uint64_t v8 = v1[3];
      sub_2487228F8();
      swift_allocError();
      *(_OWORD *)uint64_t v9 = v5;
      *(void *)(v9 + 16) = v7;
      *(void *)(v9 + 24) = v6;
      *(void *)(v9 + 32) = v8;
      *(unsigned char *)(v9 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
    }
  }
  else
  {
    sub_2486B73DC((uint64_t)&v11, &qword_26B140128);
    uint64_t result = sub_24872CC40();
    __break(1u);
  }
  return result;
}

uint64_t sub_248720E74()
{
  BOOL v1 = v0;
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 10), v2);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v3 + 32))(&v10, v2, v3);
  if (v11)
  {
    sub_2486D0A7C(&v10, v12);
    sub_2486B7330((uint64_t)v12, (uint64_t)&v10);
    if ((swift_dynamicCast() & 1) == 0)
    {
      *(void *)&long long v10 = 0;
      *((void *)&v10 + 1) = 0xE000000000000000;
      sub_24872CBB0();
      long long v5 = v10;
      uint64_t v7 = v0[1];
      uint64_t v6 = v0[2];
      uint64_t v8 = v1[3];
      sub_2487228F8();
      swift_allocError();
      *(_OWORD *)uint64_t v9 = v5;
      *(void *)(v9 + 16) = v7;
      *(void *)(v9 + 24) = v6;
      *(void *)(v9 + 32) = v8;
      *(unsigned char *)(v9 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
    }
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  }
  else
  {
    sub_2486B73DC((uint64_t)&v10, &qword_26B140128);
    uint64_t result = sub_24872CC40();
    __break(1u);
  }
  return result;
}

uint64_t sub_248721018()
{
  BOOL v1 = v0;
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 10), v2);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v3 + 32))(&v10, v2, v3);
  if (v11)
  {
    sub_2486D0A7C(&v10, v12);
    sub_2486B7330((uint64_t)v12, (uint64_t)&v10);
    if ((swift_dynamicCast() & 1) == 0)
    {
      *(void *)&long long v10 = 0;
      *((void *)&v10 + 1) = 0xE000000000000000;
      sub_24872CBB0();
      long long v5 = v10;
      uint64_t v7 = v0[1];
      uint64_t v6 = v0[2];
      uint64_t v8 = v1[3];
      sub_2487228F8();
      swift_allocError();
      *(_OWORD *)uint64_t v9 = v5;
      *(void *)(v9 + 16) = v7;
      *(void *)(v9 + 24) = v6;
      *(void *)(v9 + 32) = v8;
      *(unsigned char *)(v9 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
    }
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  }
  else
  {
    sub_2486B73DC((uint64_t)&v10, &qword_26B140128);
    uint64_t result = sub_24872CC40();
    __break(1u);
  }
  return result;
}

uint64_t sub_2487211BC()
{
  BOOL v1 = v0;
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 10), v2);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v3 + 32))(&v11, v2, v3);
  if (v12)
  {
    sub_2486D0A7C(&v11, v13);
    sub_2486B7330((uint64_t)v13, (uint64_t)&v11);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
      return v10;
    }
    else
    {
      *(void *)&long long v11 = 0;
      *((void *)&v11 + 1) = 0xE000000000000000;
      sub_24872CBB0();
      long long v5 = v11;
      uint64_t v7 = v0[1];
      uint64_t v6 = v0[2];
      uint64_t v8 = v1[3];
      sub_2487228F8();
      swift_allocError();
      *(_OWORD *)uint64_t v9 = v5;
      *(void *)(v9 + 16) = v7;
      *(void *)(v9 + 24) = v6;
      *(void *)(v9 + 32) = v8;
      *(unsigned char *)(v9 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
    }
  }
  else
  {
    sub_2486B73DC((uint64_t)&v11, &qword_26B140128);
    uint64_t result = sub_24872CC40();
    __break(1u);
  }
  return result;
}

uint64_t sub_248721360()
{
  BOOL v1 = v0;
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 10), v2);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v3 + 32))(&v11, v2, v3);
  if (v12)
  {
    sub_2486D0A7C(&v11, v13);
    sub_2486B7330((uint64_t)v13, (uint64_t)&v11);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
      return v10;
    }
    else
    {
      *(void *)&long long v11 = 0;
      *((void *)&v11 + 1) = 0xE000000000000000;
      sub_24872CBB0();
      long long v5 = v11;
      uint64_t v7 = v0[1];
      uint64_t v6 = v0[2];
      uint64_t v8 = v1[3];
      sub_2487228F8();
      swift_allocError();
      *(_OWORD *)uint64_t v9 = v5;
      *(void *)(v9 + 16) = v7;
      *(void *)(v9 + 24) = v6;
      *(void *)(v9 + 32) = v8;
      *(unsigned char *)(v9 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
    }
  }
  else
  {
    sub_2486B73DC((uint64_t)&v11, &qword_26B140128);
    uint64_t result = sub_24872CC40();
    __break(1u);
  }
  return result;
}

uint64_t sub_248721504()
{
  BOOL v1 = v0;
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 10), v2);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v3 + 32))(&v11, v2, v3);
  if (v12)
  {
    sub_2486D0A7C(&v11, v13);
    sub_2486B7330((uint64_t)v13, (uint64_t)&v11);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
      return v10;
    }
    else
    {
      *(void *)&long long v11 = 0;
      *((void *)&v11 + 1) = 0xE000000000000000;
      sub_24872CBB0();
      long long v5 = v11;
      uint64_t v7 = v0[1];
      uint64_t v6 = v0[2];
      uint64_t v8 = v1[3];
      sub_2487228F8();
      swift_allocError();
      *(_OWORD *)uint64_t v9 = v5;
      *(void *)(v9 + 16) = v7;
      *(void *)(v9 + 24) = v6;
      *(void *)(v9 + 32) = v8;
      *(unsigned char *)(v9 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
    }
  }
  else
  {
    sub_2486B73DC((uint64_t)&v11, &qword_26B140128);
    uint64_t result = sub_24872CC40();
    __break(1u);
  }
  return result;
}

uint64_t sub_2487216A8()
{
  BOOL v1 = v0;
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 10), v2);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v3 + 32))(&v11, v2, v3);
  if (v12)
  {
    sub_2486D0A7C(&v11, v13);
    sub_2486B7330((uint64_t)v13, (uint64_t)&v11);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
      return v10;
    }
    else
    {
      *(void *)&long long v11 = 0;
      *((void *)&v11 + 1) = 0xE000000000000000;
      sub_24872CBB0();
      long long v5 = v11;
      uint64_t v7 = v0[1];
      uint64_t v6 = v0[2];
      uint64_t v8 = v1[3];
      sub_2487228F8();
      swift_allocError();
      *(_OWORD *)uint64_t v9 = v5;
      *(void *)(v9 + 16) = v7;
      *(void *)(v9 + 24) = v6;
      *(void *)(v9 + 32) = v8;
      *(unsigned char *)(v9 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
    }
  }
  else
  {
    sub_2486B73DC((uint64_t)&v11, &qword_26B140128);
    uint64_t result = sub_24872CC40();
    __break(1u);
  }
  return result;
}

uint64_t sub_24872184C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v23 = a2;
  uint64_t v5 = sub_24872C8E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20 - v7;
  uint64_t v9 = v2[13];
  uint64_t v10 = v2[14];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v2 + 10), v9);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v10 + 32))(&v20, v9, v10);
  if (v21)
  {
    sub_2486D0A7C(&v20, v22);
    sub_2486B7330((uint64_t)v22, (uint64_t)&v20);
    char v11 = swift_dynamicCast();
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56);
    if (v11)
    {
      uint64_t v13 = *(void *)(a1 - 8);
      v12(v8, 0, 1, a1);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(v23, v8, a1);
    }
    else
    {
      v12(v8, 1, 1, a1);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      *(void *)&long long v20 = 0;
      *((void *)&v20 + 1) = 0xE000000000000000;
      sub_24872CBB0();
      long long v15 = v20;
      uint64_t v17 = v2[1];
      uint64_t v16 = v2[2];
      uint64_t v18 = v3[3];
      sub_2487228F8();
      swift_allocError();
      *(_OWORD *)uint64_t v19 = v15;
      *(void *)(v19 + 16) = v17;
      *(void *)(v19 + 24) = v16;
      *(void *)(v19 + 32) = v18;
      *(unsigned char *)(v19 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
    }
  }
  else
  {
    sub_2486B73DC((uint64_t)&v20, &qword_26B140128);
    uint64_t result = sub_24872CC40();
    __break(1u);
  }
  return result;
}

void sub_248721B18()
{
}

uint64_t sub_248721B64()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_248721B6C()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  __swift_project_boxed_opaque_existential_1(v0 + 10, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t sub_248721BC4()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  __swift_project_boxed_opaque_existential_1(v0 + 10, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2) & 1;
}

uint64_t sub_248721C1C()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  __swift_project_boxed_opaque_existential_1(v0 + 10, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
}

uint64_t sub_248721C70()
{
  return sub_248720B2C() & 1;
}

uint64_t sub_248721C8C()
{
  return sub_248720CD4();
}

uint64_t sub_248721CA4()
{
  return sub_248720E74();
}

uint64_t sub_248721CBC()
{
  return sub_248721018();
}

uint64_t sub_248721CD4()
{
  return sub_2487211BC();
}

uint64_t sub_248721CF4()
{
  return sub_248721360();
}

uint64_t sub_248721D14()
{
  return sub_248721504();
}

uint64_t sub_248721D34()
{
  return sub_2487216A8();
}

uint64_t sub_248721D54()
{
  return sub_2487211BC();
}

uint64_t sub_248721D74()
{
  return sub_24872CE70();
}

uint64_t sub_248721D8C()
{
  return sub_2487211BC();
}

uint64_t sub_248721DAC()
{
  return sub_248721360();
}

uint64_t sub_248721DCC()
{
  return sub_248721504();
}

uint64_t sub_248721DEC()
{
  return sub_2487216A8();
}

uint64_t sub_248721E0C()
{
  return sub_2487211BC();
}

uint64_t sub_248721E2C()
{
  return sub_24872CE80();
}

uint64_t sub_248721E44@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_24872184C(a1, a2);
}

uint64_t sub_248721E5C()
{
  return sub_24872CE00();
}

uint64_t sub_248721E74()
{
  return sub_24872CDF0();
}

uint64_t sub_248721E8C()
{
  uint64_t result = sub_24872CE10();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_248721EB0(uint64_t a1, uint64_t a2)
{
  return sub_2487220DC(a1, a2, MEMORY[0x263F8E110]);
}

uint64_t sub_248721EDC()
{
  uint64_t result = sub_24872CE20();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_248721F00(uint64_t a1, uint64_t a2)
{
  return sub_248722024(a1, a2, MEMORY[0x263F8E118]);
}

uint64_t sub_248721F2C(uint64_t a1, uint64_t a2)
{
  return sub_248722080(a1, a2, MEMORY[0x263F8E120]);
}

uint64_t sub_248721F58(uint64_t a1, uint64_t a2)
{
  return sub_2487220DC(a1, a2, MEMORY[0x263F8E128]);
}

uint64_t sub_248721F84()
{
  uint64_t result = sub_24872CE50();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_248721FA8(uint64_t a1, uint64_t a2)
{
  return sub_248722164(a1, a2, MEMORY[0x263F8E138]);
}

uint64_t sub_248721FD4()
{
  uint64_t result = sub_24872CE30();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_248721FF8(uint64_t a1, uint64_t a2)
{
  return sub_248722024(a1, a2, MEMORY[0x263F8E130]);
}

uint64_t sub_248722024(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3() & 0x1FF;
}

uint64_t sub_248722054(uint64_t a1, uint64_t a2)
{
  return sub_248722080(a1, a2, MEMORY[0x263F8E140]);
}

uint64_t sub_248722080(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3() & 0x1FFFF;
}

uint64_t sub_2487220B0(uint64_t a1, uint64_t a2)
{
  return sub_2487220DC(a1, a2, MEMORY[0x263F8E148]);
}

uint64_t sub_2487220DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  unint64_t v3 = a3();
  return v3 | ((HIDWORD(v3) & 1) << 32);
}

uint64_t sub_248722114()
{
  uint64_t result = sub_24872CE60();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_248722138(uint64_t a1, uint64_t a2)
{
  return sub_248722164(a1, a2, MEMORY[0x263F8E150]);
}

uint64_t sub_248722164(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t result = a3();
  if (v3) {
    return v5;
  }
  return result;
}

uint64_t sub_248722190()
{
  return sub_24872CE40();
}

void sub_2487221BC()
{
}

void sub_2487221CC()
{
}

void sub_248722218()
{
}

uint64_t sub_248722264()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24872226C()
{
  return sub_24871EB80();
}

void sub_248722284(uint64_t *a1@<X8>)
{
}

uint64_t sub_24872229C@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = (uint64_t)&type metadata for SingleValueDecoder.SingleValueContainer;
  a1[4] = sub_248722998();
  uint64_t v3 = swift_allocObject();
  *a1 = v3;
  sub_24870AC58(v1, v3 + 16);
  uint64_t v4 = *(void *)(v1 + 16);
  sub_2486D0BA8(v1 + 48, v3 + 144, &qword_26B13FDB0);
  *(void *)(v3 + 136) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24872232C(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 88);
}

unint64_t sub_248722334()
{
  unint64_t result = qword_26931E670;
  if (!qword_26931E670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E670);
  }
  return result;
}

uint64_t sub_248722388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x24C57C2D0](a1, a3);
}

BOOL sub_2487223A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x24C57C2F0](a1, a3) <= a2;
}

double sub_2487223D8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2[1];
  uint64_t v5 = *(void *)(a1 + 16);
  if (v4 >= MEMORY[0x24C57C2F0](*v2, v5))
  {
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  else
  {
    *(void *)(a2 + 24) = v5;
    __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)a2);
    sub_24872C840();
    v2[1] = v4 + 1;
  }
  return result;
}

uint64_t sub_248722458(uint64_t a1, uint64_t a2)
{
  return sub_248722388(*v2, a2, *(void *)(a1 + 16));
}

BOOL sub_248722480(uint64_t a1)
{
  return sub_2487223A8(*v1, v1[1], *(void *)(a1 + 16));
}

uint64_t sub_248722490()
{
  return *(void *)(v0 + 8);
}

char *sub_24872249C(uint64_t a1)
{
  return sub_24871A2E8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_2487224B0(uint64_t a1)
{
  return sub_24871A4E8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void sub_2487224C4(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_24872CC60();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x24C57C600);
}

char *sub_248722540(uint64_t a1)
{
  return sub_24871AE98(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_248722554(uint64_t a1)
{
  return sub_24871A938(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_248722568(void *a1)
{
  return sub_24871AF94(0, a1[2], 0, a1);
}

uint64_t *sub_24872257C(uint64_t *result, char *__dst, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v11 = result;
  if (!__dst) {
    goto LABEL_5;
  }
  if (!a3)
  {
    uint64_t v7 = a4;
    double result = 0;
    goto LABEL_21;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    if (a5 == a4)
    {
LABEL_5:
      double result = 0;
      uint64_t v7 = a4;
LABEL_21:
      *char v11 = a4;
      v11[1] = a5;
      v11[2] = a6;
      v11[3] = a7;
      v11[4] = v7;
      return result;
    }
    uint64_t v25 = a7;
    uint64_t v24 = a5 - a4;
    if (a5 <= a4)
    {
LABEL_18:
      __break(1u);
LABEL_19:
      sub_2486B76D8((uint64_t)result);
      a7 = v25;
      double result = (uint64_t *)a3;
      goto LABEL_21;
    }
    uint64_t v12 = __dst;
    uint64_t v13 = 0;
    uint64_t v14 = *(void *)(a6 + 16);
    if (v14 <= a4) {
      uint64_t v14 = a4;
    }
    uint64_t v27 = v14 - a4;
    uint64_t v15 = a3 - 1;
    uint64_t v16 = (_OWORD *)(a6 + 192 * a4 + 32);
    uint64_t v17 = a4 - a5 + 1;
    while ((a4 & 0x8000000000000000) == 0)
    {
      if ((unint64_t)(a4 + v13) >= *(void *)(a6 + 16)) {
        goto LABEL_23;
      }
      long long v18 = v16[9];
      v28[8] = v16[8];
      v28[9] = v18;
      long long v19 = v16[11];
      v28[10] = v16[10];
      v28[11] = v19;
      long long v20 = v16[5];
      v28[4] = v16[4];
      v28[5] = v20;
      long long v21 = v16[7];
      v28[6] = v16[6];
      v28[7] = v21;
      long long v22 = v16[1];
      v28[0] = *v16;
      v28[1] = v22;
      long long v23 = v16[3];
      uint64_t v28[2] = v16[2];
      v28[3] = v23;
      if (v27 == v13) {
        goto LABEL_24;
      }
      uint64_t v7 = a4 + v13 + 1;
      memmove(v12, v16, 0xC0uLL);
      double result = (uint64_t *)v28;
      if (v15 == v13) {
        goto LABEL_19;
      }
      if (!(v17 + v13))
      {
        sub_2486B76D8((uint64_t)v28);
        uint64_t v7 = a5;
        double result = (uint64_t *)v24;
        a7 = v25;
        goto LABEL_21;
      }
      double result = (uint64_t *)sub_2486B76D8((uint64_t)v28);
      if (v7 >= a4)
      {
        v12 += 192;
        ++v13;
        v16 += 12;
        if (v7 < a5) {
          continue;
        }
      }
      goto LABEL_18;
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_248722714(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_2487227B4(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 48) + 24 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

unint64_t sub_248722820()
{
  unint64_t result = qword_26B140138;
  if (!qword_26B140138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B140138);
  }
  return result;
}

uint64_t sub_248722874()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 72))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 112)) {
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 88);
    }
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x270FA0238](v0, 129, 7);
}

unint64_t sub_2487228F8()
{
  unint64_t result = qword_26931E678;
  if (!qword_26931E678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E678);
  }
  return result;
}

void sub_24872294C()
{
}

unint64_t sub_248722998()
{
  unint64_t result = qword_26931E680;
  if (!qword_26931E680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E680);
  }
  return result;
}

uint64_t sub_2487229EC()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0[9])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v0[14]) {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 11));
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (v0[19])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v0[24]) {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 21));
    }
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x270FA0238](v0, 209, 7);
}

unint64_t sub_248722AA4()
{
  unint64_t result = qword_26931E698;
  if (!qword_26931E698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E698);
  }
  return result;
}

uint64_t sub_248722AF8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 72)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 48);
  }
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 96);
  return MEMORY[0x270FA0238](v0, 136, 7);
}

uint64_t destroy for SingleValueDecoder.UnkeyedContainer(uint64_t a1)
{
  if (*(void *)(a1 + 56)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
  }
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm(a1 + 80);
}

uint64_t initializeWithCopy for SingleValueDecoder.UnkeyedContainer(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  unsigned int v6 = (_OWORD *)(a1 + 32);
  unint64_t v7 = (_OWORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8)
  {
    *(void *)(a1 + 56) = v8;
    (**(void (***)(uint64_t, _OWORD *, uint64_t))(v8 - 8))(a1 + 32, v7, v8);
  }
  else
  {
    long long v9 = v7[1];
    *unsigned int v6 = *v7;
    *(_OWORD *)(a1 + 48) = v9;
  }
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v10 = a2 + 80;
  long long v11 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v11;
  uint64_t v12 = v11;
  uint64_t v13 = **(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8);
  swift_bridgeObjectRetain();
  v13(a1 + 80, v10, v12);
  return a1;
}

uint64_t assignWithCopy for SingleValueDecoder.UnkeyedContainer(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 56);
  if (!*(void *)(a1 + 56))
  {
    if (v4)
    {
      *(void *)(a1 + 56) = v4;
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 32, a2 + 32);
      goto LABEL_8;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v5;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
LABEL_8:
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 80), (uint64_t *)(a2 + 80));
  return a1;
}

uint64_t assignWithTake for SingleValueDecoder.UnkeyedContainer(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
  }
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for SingleValueDecoder.UnkeyedContainer(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SingleValueDecoder.UnkeyedContainer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SingleValueDecoder.UnkeyedContainer()
{
  return &type metadata for SingleValueDecoder.UnkeyedContainer;
}

void *sub_248722F4C(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_248722F7C()
{
  return swift_bridgeObjectRelease();
}

void *sub_248722F84(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

void *sub_248722FD4(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

uint64_t type metadata accessor for ArrayWrapper()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t destroy for SingleValueDecoder.SingleValueContainer(void *a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[7])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a1[12]) {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(a1 + 9));
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t result = a1[17];
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a1[22]) {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(a1 + 19));
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SingleValueDecoder.SingleValueContainer(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v7;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    uint64_t v8 = *(void *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8)
    {
      *(void *)(a1 + 96) = v8;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(a1 + 72, a2 + 72, v8);
    }
    else
    {
      long long v11 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = v11;
    }
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v9;
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    long long v10 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v10;
  }
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  uint64_t v12 = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  if (v12)
  {
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v12;
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    uint64_t v13 = *(void *)(a2 + 176);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13)
    {
      *(void *)(a1 + 176) = v13;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v13 - 8))(a1 + 152, a2 + 152, v13);
    }
    else
    {
      long long v16 = *(_OWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 168) = v16;
    }
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v14 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v14;
    *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
    long long v15 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v15;
  }
  return a1;
}

uint64_t assignWithCopy for SingleValueDecoder.SingleValueContainer(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 48);
  uint64_t v5 = (_OWORD *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (!v6)
    {
      sub_2486D0820(a1 + 48);
      _OWORD *v4 = *v5;
      long long v10 = *(_OWORD *)(a2 + 80);
      long long v9 = *(_OWORD *)(a2 + 96);
      long long v11 = *(_OWORD *)(a2 + 64);
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      *(_OWORD *)(a1 + 80) = v10;
      *(_OWORD *)(a1 + 96) = v9;
      *(_OWORD *)(a1 + 64) = v11;
      goto LABEL_18;
    }
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v7 = *(void *)(a2 + 96);
    if (*(void *)(a1 + 96))
    {
      if (v7)
      {
        __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 72), (uint64_t *)(a2 + 72));
LABEL_15:
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
        goto LABEL_18;
      }
      __swift_destroy_boxed_opaque_existential_1Tm(a1 + 72);
    }
    else if (v7)
    {
      *(void *)(a1 + 96) = v7;
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 72, a2 + 72);
      goto LABEL_15;
    }
    long long v15 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v15;
    goto LABEL_15;
  }
  if (v6)
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    uint64_t v8 = *(void *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8)
    {
      *(void *)(a1 + 96) = v8;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(a1 + 72, a2 + 72, v8);
    }
    else
    {
      long long v16 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = v16;
    }
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    swift_bridgeObjectRetain();
  }
  else
  {
    _OWORD *v4 = *v5;
    long long v12 = *(_OWORD *)(a2 + 64);
    long long v13 = *(_OWORD *)(a2 + 80);
    long long v14 = *(_OWORD *)(a2 + 96);
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    *(_OWORD *)(a1 + 80) = v13;
    *(_OWORD *)(a1 + 96) = v14;
    *(_OWORD *)(a1 + 64) = v12;
  }
LABEL_18:
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = (_OWORD *)(a1 + 128);
  long long v18 = (_OWORD *)(a2 + 128);
  uint64_t v19 = *(void *)(a2 + 136);
  if (*(void *)(a1 + 136))
  {
    if (v19)
    {
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v20 = *(void *)(a2 + 176);
      if (*(void *)(a1 + 176))
      {
        if (v20)
        {
          __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 152), (uint64_t *)(a2 + 152));
LABEL_32:
          *(void *)(a1 + 184) = *(void *)(a2 + 184);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
          return a1;
        }
        __swift_destroy_boxed_opaque_existential_1Tm(a1 + 152);
      }
      else if (v20)
      {
        *(void *)(a1 + 176) = v20;
        (**(void (***)(uint64_t, uint64_t))(v20 - 8))(a1 + 152, a2 + 152);
        goto LABEL_32;
      }
      long long v28 = *(_OWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 168) = v28;
      goto LABEL_32;
    }
    sub_2486D0820(a1 + 128);
    *uint64_t v17 = *v18;
    long long v23 = *(_OWORD *)(a2 + 160);
    long long v22 = *(_OWORD *)(a2 + 176);
    long long v24 = *(_OWORD *)(a2 + 144);
    *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
    *(_OWORD *)(a1 + 160) = v23;
    *(_OWORD *)(a1 + 176) = v22;
    *(_OWORD *)(a1 + 144) = v24;
  }
  else if (v19)
  {
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    uint64_t v21 = *(void *)(a2 + 176);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v21)
    {
      *(void *)(a1 + 176) = v21;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v21 - 8))(a1 + 152, a2 + 152, v21);
    }
    else
    {
      long long v29 = *(_OWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 168) = v29;
    }
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
    swift_bridgeObjectRetain();
  }
  else
  {
    *uint64_t v17 = *v18;
    long long v25 = *(_OWORD *)(a2 + 144);
    long long v26 = *(_OWORD *)(a2 + 160);
    long long v27 = *(_OWORD *)(a2 + 176);
    *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
    *(_OWORD *)(a1 + 160) = v26;
    *(_OWORD *)(a1 + 176) = v27;
    *(_OWORD *)(a1 + 144) = v25;
  }
  return a1;
}

__n128 __swift_memcpy193_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for SingleValueDecoder.SingleValueContainer(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 56)) {
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 56);
  if (!v5)
  {
    sub_2486D0820(a1 + 48);
LABEL_7:
    long long v7 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v7;
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    long long v8 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v8;
    goto LABEL_8;
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 96)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 72);
  }
  long long v6 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v6;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
LABEL_8:
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 136))
  {
LABEL_14:
    long long v11 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v11;
    *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
    long long v12 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v12;
    return a1;
  }
  uint64_t v9 = *(void *)(a2 + 136);
  if (!v9)
  {
    sub_2486D0820(a1 + 128);
    goto LABEL_14;
  }
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 176)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 152);
  }
  long long v10 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = v10;
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  return a1;
}

uint64_t getEnumTagSinglePayload for SingleValueDecoder.SingleValueContainer(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 193)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SingleValueDecoder.SingleValueContainer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 192) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 193) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 193) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SingleValueDecoder.SingleValueContainer()
{
  return &type metadata for SingleValueDecoder.SingleValueContainer;
}

uint64_t getEnumTagSinglePayload for ArgumentDecoder.Error(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *((unsigned char *)a1 + 32)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ArgumentDecoder.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2 + 2;
    }
  }
  return result;
}

void *sub_248723AA4(void *result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    result[2] = 0;
    result[3] = 0;
    result[1] = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *__n128 result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ArgumentDecoder.Error()
{
  return &type metadata for ArgumentDecoder.Error;
}

uint64_t sub_248723ADC(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEA00000000006C61;
  uint64_t v3 = 0x6E6F697469736F70;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x6E6F6974706FLL;
    }
    else {
      uint64_t v5 = 1734437990;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE600000000000000;
    }
    else {
      unint64_t v6 = 0xE400000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x6E6F697469736F70;
  unint64_t v6 = 0xEA00000000006C61;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x6E6F6974706FLL;
    }
    else {
      uint64_t v3 = 1734437990;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xE600000000000000;
    }
    else {
      unint64_t v2 = 0xE400000000000000;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_24872CEB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_248723BE0(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v3 = 0x74726F6873;
    }
    else {
      unint64_t v3 = 0xD000000000000012;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE500000000000000;
    }
    else {
      unint64_t v4 = 0x80000002487311E0;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        unint64_t v6 = 0x74726F6873;
      }
      else {
        unint64_t v6 = 0xD000000000000012;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE500000000000000;
      }
      else {
        unint64_t v7 = 0x80000002487311E0;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE400000000000000;
    unint64_t v3 = 1735290732;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE400000000000000;
  if (v3 != 1735290732)
  {
LABEL_21:
    char v8 = sub_24872CEB0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

__n128 ToolInfoV0.init(command:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  *(void *)a2 = 0;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)(a2 + 24) = v2;
  long long v3 = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 48) = v3;
  __n128 result = *(__n128 *)(a1 + 56);
  long long v5 = *(_OWORD *)(a1 + 72);
  *(__n128 *)(a2 + 64) = result;
  *(_OWORD *)(a2 + 80) = v5;
  return result;
}

uint64_t CommandInfoV0.init(superCommands:commandName:abstract:discussion:defaultSubcommand:subcommands:arguments:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, unint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v17 = a1;
  if (!*(void *)(a1 + 16))
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = 0;
  }
  unint64_t v19 = a10;
  if ((a5 & 0x2000000000000000) != 0) {
    uint64_t v20 = HIBYTE(a5) & 0xF;
  }
  else {
    uint64_t v20 = a4 & 0xFFFFFFFFFFFFLL;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v20)
  {
    swift_bridgeObjectRelease();
    a4 = 0;
    a5 = 0;
  }
  uint64_t v21 = a11;
  if ((a7 & 0x2000000000000000) != 0) {
    uint64_t v22 = HIBYTE(a7) & 0xF;
  }
  else {
    uint64_t v22 = a6 & 0xFFFFFFFFFFFFLL;
  }
  swift_bridgeObjectRetain();
  if (v22)
  {
    uint64_t v23 = a12;
    if (!a10) {
      goto LABEL_18;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    a6 = 0;
    a7 = 0;
    uint64_t v23 = a12;
    if (!a10) {
      goto LABEL_18;
    }
  }
  uint64_t v24 = HIBYTE(a10) & 0xF;
  if ((a10 & 0x2000000000000000) == 0) {
    uint64_t v24 = a8 & 0xFFFFFFFFFFFFLL;
  }
  if (v24)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    if (*(void *)(a11 + 16)) {
      goto LABEL_19;
    }
LABEL_22:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v21 = 0;
    if (*(void *)(v23 + 16)) {
      goto LABEL_20;
    }
LABEL_23:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v23 = 0;
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a8 = 0;
  unint64_t v19 = 0;
  if (!*(void *)(a11 + 16)) {
    goto LABEL_22;
  }
LABEL_19:
  swift_bridgeObjectRetain();
  if (!*(void *)(v23 + 16)) {
    goto LABEL_23;
  }
LABEL_20:
  swift_bridgeObjectRetain();
LABEL_24:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a9 = v17;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = v19;
  a9[9] = v21;
  a9[10] = v23;
  return result;
}

__n128 ArgumentInfoV0.init(kind:shouldDisplay:sectionTitle:isOptional:isRepeating:names:preferredName:valueName:defaultValue:allValues:abstract:discussion:)@<Q0>(char *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, __n128 *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, unint64_t a11, uint64_t a12, unint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, unint64_t a18)
{
  uint64_t v18 = a7;
  unint64_t v24 = a13;
  uint64_t v25 = a10;
  unint64_t v26 = a11;
  __n128 v50 = *a8;
  unint64_t v27 = a8[1].n128_u64[0];
  char v47 = *a1;
  if (a7 && !*(void *)(a7 + 16))
  {
    swift_bridgeObjectRelease();
    uint64_t v25 = a10;
    uint64_t v18 = 0;
  }
  uint64_t v28 = a14;
  uint64_t v29 = a12;
  uint64_t v53 = a4;
  if (a11)
  {
    uint64_t v30 = HIBYTE(a11) & 0xF;
    if ((a11 & 0x2000000000000000) == 0) {
      uint64_t v30 = v25 & 0xFFFFFFFFFFFFLL;
    }
    if (!v30)
    {
      swift_bridgeObjectRelease();
      uint64_t v29 = a12;
      uint64_t v25 = 0;
      unint64_t v26 = 0;
    }
  }
  unint64_t v31 = a16;
  char v51 = a5;
  char v52 = a6;
  if (a13)
  {
    uint64_t v32 = HIBYTE(a13) & 0xF;
    if ((a13 & 0x2000000000000000) == 0) {
      uint64_t v32 = v29 & 0xFFFFFFFFFFFFLL;
    }
    if (!v32)
    {
      uint64_t v33 = v25;
      swift_bridgeObjectRelease();
      uint64_t v25 = v33;
      uint64_t v29 = 0;
      unint64_t v24 = 0;
    }
  }
  unint64_t v34 = a18;
  uint64_t v35 = a15;
  unint64_t v49 = v27;
  if (a14)
  {
    uint64_t v36 = a3;
    if (!*(void *)(a14 + 16))
    {
      uint64_t v37 = v25;
      uint64_t v38 = v29;
      swift_bridgeObjectRelease();
      uint64_t v29 = v38;
      uint64_t v25 = v37;
      uint64_t v28 = 0;
    }
  }
  else
  {
    uint64_t v36 = a3;
  }
  uint64_t v39 = a17;
  if (!a16) {
    goto LABEL_22;
  }
  uint64_t v40 = HIBYTE(a16) & 0xF;
  if ((a16 & 0x2000000000000000) == 0) {
    uint64_t v40 = a15 & 0xFFFFFFFFFFFFLL;
  }
  if (!v40)
  {
    uint64_t v44 = v25;
    uint64_t v45 = v29;
    swift_bridgeObjectRelease();
    uint64_t v29 = v45;
    uint64_t v25 = v44;
    uint64_t v35 = 0;
    unint64_t v31 = 0;
    if (!a18) {
      goto LABEL_28;
    }
  }
  else
  {
LABEL_22:
    if (!a18) {
      goto LABEL_28;
    }
  }
  uint64_t v41 = HIBYTE(a18) & 0xF;
  if ((a18 & 0x2000000000000000) == 0) {
    uint64_t v41 = a17 & 0xFFFFFFFFFFFFLL;
  }
  if (!v41)
  {
    uint64_t v42 = v25;
    uint64_t v43 = v29;
    swift_bridgeObjectRelease();
    uint64_t v29 = v43;
    uint64_t v25 = v42;
    uint64_t v39 = 0;
    unint64_t v34 = 0;
  }
LABEL_28:
  *(unsigned char *)a9 = v47;
  *(unsigned char *)(a9 + 1) = a2 & 1;
  *(void *)(a9 + 8) = v36;
  *(void *)(a9 + 16) = v53;
  *(unsigned char *)(a9 + 24) = v51 & 1;
  *(unsigned char *)(a9 + 25) = v52 & 1;
  *(void *)(a9 + 32) = v18;
  __n128 result = v50;
  *(__n128 *)(a9 + 40) = v50;
  *(void *)(a9 + 56) = v49;
  *(void *)(a9 + 64) = v25;
  *(void *)(a9 + 72) = v26;
  *(void *)(a9 + 80) = v29;
  *(void *)(a9 + 88) = v24;
  *(void *)(a9 + 96) = v28;
  *(void *)(a9 + 104) = v35;
  *(void *)(a9 + 112) = v31;
  *(void *)(a9 + 120) = v39;
  *(void *)(a9 + 128) = v34;
  return result;
}

ArgumentParserInternal::ArgumentInfoV0::NameInfoV0 __swiftcall ArgumentInfoV0.NameInfoV0.init(kind:name:)(ArgumentParserInternal::ArgumentInfoV0::NameInfoV0::KindV0 kind, Swift::String name)
{
  *(unsigned char *)uint64_t v2 = *(unsigned char *)kind;
  *(Swift::String *)(v2 + 8) = name;
  result.name = name;
  result.kind = kind;
  return result;
}

uint64_t ToolInfoHeader.serializationVersion.getter()
{
  return *(void *)v0;
}

uint64_t ToolInfoHeader.serializationVersion.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

uint64_t (*ToolInfoHeader.serializationVersion.modify())(void)
{
  return nullsub_1;
}

ArgumentParserInternal::ToolInfoHeader __swiftcall ToolInfoHeader.init(serializationVersion:)(ArgumentParserInternal::ToolInfoHeader serializationVersion)
{
  v1->serializationVersion = serializationVersion.serializationVersion;
  return serializationVersion;
}

unint64_t sub_24872414C()
{
  return 0xD000000000000014;
}

uint64_t sub_248724168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_248729958(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_248724194(uint64_t a1)
{
  unint64_t v2 = sub_24872768C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2487241D0(uint64_t a1)
{
  unint64_t v2 = sub_24872768C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ToolInfoHeader.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26931E728);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24872768C();
  sub_24872D0B0();
  if (!v2)
  {
    uint64_t v9 = sub_24872CD30();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_24872435C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ToolInfoHeader.init(from:)(a1, a2);
}

uint64_t ToolInfoV0.serializationVersion.getter()
{
  return *(void *)v0;
}

uint64_t ToolInfoV0.serializationVersion.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

uint64_t (*ToolInfoV0.serializationVersion.modify())(void)
{
  return nullsub_1;
}

uint64_t ToolInfoV0.command.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 72);
  uint64_t v5 = *(void *)(v1 + 80);
  uint64_t v6 = *(void *)(v1 + 88);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v2;
  long long v7 = *(_OWORD *)(v1 + 56);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 40);
  *(_OWORD *)(a1 + 48) = v7;
  *(void *)(a1 + 64) = v4;
  *(void *)(a1 + 72) = v5;
  *(void *)(a1 + 80) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 ToolInfoV0.command.setter(long long *a1)
{
  long long v7 = a1[1];
  long long v8 = *a1;
  long long v5 = a1[3];
  long long v6 = a1[2];
  __n128 v4 = (__n128)a1[4];
  uint64_t v2 = *((void *)a1 + 10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(v1 + 8) = v8;
  *(_OWORD *)(v1 + 24) = v7;
  *(_OWORD *)(v1 + 40) = v6;
  *(_OWORD *)(v1 + 56) = v5;
  __n128 result = v4;
  *(__n128 *)(v1 + 72) = v4;
  *(void *)(v1 + 88) = v2;
  return result;
}

uint64_t (*ToolInfoV0.command.modify())(void)
{
  return nullsub_1;
}

uint64_t ToolInfoV0.hash(into:)(uint64_t a1)
{
  return CommandInfoV0.hash(into:)(a1);
}

uint64_t static ToolInfoV0.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == *(void *)a2)
  {
    long long v15 = *(_OWORD *)(a1 + 8);
    long long v2 = *(_OWORD *)(a1 + 48);
    long long v17 = *(_OWORD *)(a1 + 32);
    long long v18 = v2;
    long long v3 = *(_OWORD *)(a1 + 80);
    long long v19 = *(_OWORD *)(a1 + 64);
    long long v20 = v3;
    long long v9 = *(_OWORD *)(a2 + 8);
    long long v4 = *(_OWORD *)(a2 + 48);
    long long v11 = *(_OWORD *)(a2 + 32);
    long long v12 = v4;
    long long v5 = *(_OWORD *)(a2 + 80);
    long long v13 = *(_OWORD *)(a2 + 64);
    uint64_t v6 = *(void *)(a2 + 24);
    uint64_t v16 = *(void *)(a1 + 24);
    uint64_t v10 = v6;
    long long v14 = v5;
    char v7 = _s22ArgumentParserInternal13CommandInfoV0V2eeoiySbAC_ACtFZ_0((uint64_t)&v15, (uint64_t)&v9);
  }
  else
  {
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_248724674()
{
  if (*v0) {
    return 0x646E616D6D6F63;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t sub_2487246B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24872951C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2487246DC(uint64_t a1)
{
  unint64_t v2 = sub_24872A28C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248724718(uint64_t a1)
{
  unint64_t v2 = sub_24872A28C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ToolInfoV0.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26931E738);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[1];
  uint64_t v24 = v1[2];
  uint64_t v25 = v8;
  uint64_t v9 = v1[3];
  uint64_t v22 = v1[4];
  uint64_t v23 = v9;
  uint64_t v10 = v1[5];
  uint64_t v20 = v1[6];
  uint64_t v21 = v10;
  uint64_t v11 = v1[7];
  uint64_t v18 = v1[8];
  uint64_t v19 = v11;
  uint64_t v12 = v1[9];
  uint64_t v16 = v1[10];
  uint64_t v17 = v12;
  uint64_t v15 = v1[11];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24872A28C();
  sub_24872D0C0();
  LOBYTE(v26) = 0;
  sub_24872CDB0();
  if (!v2)
  {
    uint64_t v26 = v25;
    uint64_t v27 = v24;
    uint64_t v28 = v23;
    uint64_t v29 = v22;
    uint64_t v30 = v21;
    uint64_t v31 = v20;
    uint64_t v32 = v19;
    uint64_t v33 = v18;
    uint64_t v34 = v17;
    uint64_t v35 = v16;
    uint64_t v36 = v15;
    char v37 = 1;
    sub_24872A2E0();
    sub_24872CDC0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ToolInfoV0.hashValue.getter()
{
  sub_24872D030();
  sub_24872D040();
  CommandInfoV0.hash(into:)((uint64_t)v1);
  return sub_24872D070();
}

uint64_t ToolInfoV0.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26931E750);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24872A28C();
  sub_24872D0B0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  LOBYTE(v19) = 0;
  uint64_t v9 = sub_24872CD30();
  char v27 = 1;
  sub_24872A334();
  sub_24872CD40();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v11 = v20;
  uint64_t v10 = v21;
  uint64_t v12 = v24;
  uint64_t v13 = v25;
  uint64_t v14 = v26;
  long long v15 = v19;
  long long v16 = v22;
  long long v17 = v23;
  *(void *)a2 = v9;
  *(_OWORD *)(a2 + 8) = v15;
  *(void *)(a2 + 24) = v11;
  *(void *)(a2 + 32) = v10;
  *(_OWORD *)(a2 + 40) = v16;
  *(_OWORD *)(a2 + 56) = v17;
  *(void *)(a2 + 72) = v12;
  *(void *)(a2 + 80) = v13;
  *(void *)(a2 + 88) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_248724C64@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ToolInfoV0.init(from:)(a1, a2);
}

uint64_t sub_248724C7C(void *a1)
{
  return ToolInfoV0.encode(to:)(a1);
}

uint64_t sub_248724C94()
{
  sub_24872D030();
  sub_24872D040();
  CommandInfoV0.hash(into:)((uint64_t)v1);
  return sub_24872D070();
}

uint64_t sub_248724D38(uint64_t a1)
{
  return CommandInfoV0.hash(into:)(a1);
}

uint64_t sub_248724DD0()
{
  sub_24872D030();
  sub_24872D040();
  CommandInfoV0.hash(into:)((uint64_t)v1);
  return sub_24872D070();
}

uint64_t sub_248724E70(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == *(void *)a2)
  {
    long long v15 = *(_OWORD *)(a1 + 8);
    long long v2 = *(_OWORD *)(a1 + 48);
    long long v17 = *(_OWORD *)(a1 + 32);
    long long v18 = v2;
    long long v3 = *(_OWORD *)(a1 + 80);
    long long v19 = *(_OWORD *)(a1 + 64);
    long long v20 = v3;
    long long v9 = *(_OWORD *)(a2 + 8);
    long long v4 = *(_OWORD *)(a2 + 48);
    long long v11 = *(_OWORD *)(a2 + 32);
    long long v12 = v4;
    long long v5 = *(_OWORD *)(a2 + 80);
    long long v13 = *(_OWORD *)(a2 + 64);
    uint64_t v6 = *(void *)(a2 + 24);
    uint64_t v16 = *(void *)(a1 + 24);
    uint64_t v10 = v6;
    long long v14 = v5;
    char v7 = _s22ArgumentParserInternal13CommandInfoV0V2eeoiySbAC_ACtFZ_0((uint64_t)&v15, (uint64_t)&v9);
  }
  else
  {
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t CommandInfoV0.superCommands.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CommandInfoV0.superCommands.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*CommandInfoV0.superCommands.modify())(void)
{
  return nullsub_1;
}

uint64_t CommandInfoV0.commandName.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CommandInfoV0.commandName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*CommandInfoV0.commandName.modify())(void)
{
  return nullsub_1;
}

uint64_t CommandInfoV0.abstract.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CommandInfoV0.abstract.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*CommandInfoV0.abstract.modify())(void)
{
  return nullsub_1;
}

uint64_t CommandInfoV0.discussion.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CommandInfoV0.discussion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*CommandInfoV0.discussion.modify())(void)
{
  return nullsub_1;
}

uint64_t CommandInfoV0.defaultSubcommand.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CommandInfoV0.defaultSubcommand.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return result;
}

uint64_t (*CommandInfoV0.defaultSubcommand.modify())(void)
{
  return nullsub_1;
}

uint64_t CommandInfoV0.subcommands.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CommandInfoV0.subcommands.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 72) = a1;
  return result;
}

uint64_t (*CommandInfoV0.subcommands.modify())(void)
{
  return nullsub_1;
}

uint64_t CommandInfoV0.arguments.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CommandInfoV0.arguments.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 80) = a1;
  return result;
}

uint64_t (*CommandInfoV0.arguments.modify())(void)
{
  return nullsub_1;
}

uint64_t CommandInfoV0.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[6];
  uint64_t v7 = v1[8];
  uint64_t v6 = v1[9];
  uint64_t v8 = v1[10];
  if (*v1)
  {
    sub_24872D050();
    sub_24872D040();
    uint64_t v9 = *(void *)(v3 + 16);
    if (v9)
    {
      uint64_t v17 = v7;
      swift_bridgeObjectRetain();
      uint64_t v10 = v3 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_24872C4D0();
        swift_bridgeObjectRelease();
        v10 += 16;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease();
      uint64_t v7 = v17;
    }
  }
  else
  {
    sub_24872D050();
  }
  swift_bridgeObjectRetain();
  sub_24872C4D0();
  swift_bridgeObjectRelease();
  if (v4)
  {
    sub_24872D050();
    swift_bridgeObjectRetain();
    sub_24872C4D0();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_9;
    }
  }
  else
  {
    sub_24872D050();
    if (v5)
    {
LABEL_9:
      sub_24872D050();
      swift_bridgeObjectRetain();
      sub_24872C4D0();
      swift_bridgeObjectRelease();
      if (v7) {
        goto LABEL_10;
      }
      goto LABEL_25;
    }
  }
  sub_24872D050();
  if (v7)
  {
LABEL_10:
    sub_24872D050();
    swift_bridgeObjectRetain();
    sub_24872C4D0();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_11;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_24872D050();
  if (v6)
  {
LABEL_11:
    sub_24872D050();
    uint64_t v11 = *(void *)(v6 + 16);
    sub_24872D040();
    if (v11)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = v6 + 56;
      do
      {
        CommandInfoV0.hash(into:)(a1);
        v12 += 88;
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease();
    }
    if (v8) {
      goto LABEL_16;
    }
    return sub_24872D050();
  }
LABEL_26:
  sub_24872D050();
  if (!v8) {
    return sub_24872D050();
  }
LABEL_16:
  sub_24872D050();
  uint64_t v13 = *(void *)(v8 + 16);
  uint64_t result = sub_24872D040();
  if (v13)
  {
    swift_bridgeObjectRetain();
    ArgumentInfoV0.hash(into:)(a1);
    uint64_t v15 = v13 - 1;
    if (v15)
    {
      uint64_t v16 = v8 + 168;
      do
      {
        ArgumentInfoV0.hash(into:)(a1);
        v16 += 136;
        --v15;
      }
      while (v15);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_248725558(char a1)
{
  unint64_t result = 0x6D6F437265707573;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4E646E616D6D6F63;
      break;
    case 2:
      unint64_t result = 0x7463617274736261;
      break;
    case 3:
      unint64_t result = 0x6973737563736964;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x616D6D6F63627573;
      break;
    case 6:
      unint64_t result = 0x746E656D75677261;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_248725668()
{
  return sub_248725558(*v0);
}

uint64_t sub_248725670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24872960C(a1, a2);
  *a3 = result;
  return result;
}

void sub_248725698(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_2487256A4(uint64_t a1)
{
  unint64_t v2 = sub_24872A388();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2487256E0(uint64_t a1)
{
  unint64_t v2 = sub_24872A388();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CommandInfoV0.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26931E760);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v24 = v1[2];
  uint64_t v25 = v8;
  uint64_t v10 = v1[3];
  uint64_t v22 = v1[4];
  uint64_t v23 = v10;
  uint64_t v11 = v1[5];
  uint64_t v20 = v1[6];
  uint64_t v21 = v11;
  uint64_t v12 = v1[7];
  uint64_t v18 = v1[8];
  uint64_t v19 = v12;
  uint64_t v13 = v1[9];
  uint64_t v16 = v1[10];
  uint64_t v17 = v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24872A388();
  sub_24872D0C0();
  uint64_t v27 = v9;
  char v26 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
  sub_24872A430(&qword_26931E770);
  sub_24872CD80();
  if (!v2)
  {
    LOBYTE(v27) = 1;
    sub_24872CD90();
    LOBYTE(v27) = 2;
    sub_24872CD70();
    LOBYTE(v27) = 3;
    sub_24872CD70();
    LOBYTE(v27) = 4;
    sub_24872CD70();
    uint64_t v27 = v17;
    char v26 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E778);
    sub_24872A734(&qword_26931E780, &qword_26931E778, (void (*)(void))sub_24872A2E0);
    sub_24872CD80();
    uint64_t v27 = v16;
    char v26 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E788);
    sub_24872A734(&qword_26931E790, &qword_26931E788, (void (*)(void))sub_24872A3DC);
    sub_24872CD80();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t CommandInfoV0.hashValue.getter()
{
  uint64_t v1 = *((void *)v0 + 2);
  long long v4 = *v0;
  uint64_t v5 = v1;
  long long v6 = *(long long *)((char *)v0 + 24);
  long long v7 = *(long long *)((char *)v0 + 40);
  long long v8 = *(long long *)((char *)v0 + 56);
  long long v9 = *(long long *)((char *)v0 + 72);
  sub_24872D030();
  CommandInfoV0.hash(into:)((uint64_t)v3);
  return sub_24872D070();
}

uint64_t CommandInfoV0.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26931E7A0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24872A388();
  sub_24872D0B0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
    char v40 = 0;
    sub_24872A430((unint64_t *)&qword_26931E2A0);
    sub_24872CD00();
    uint64_t v10 = v41;
    LOBYTE(v41) = 1;
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_24872CD10();
    uint64_t v38 = v10;
    LOBYTE(v41) = 2;
    uint64_t v12 = v11;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_24872CCF0();
    uint64_t v39 = v12;
    uint64_t v15 = v14;
    uint64_t v36 = v13;
    LOBYTE(v41) = 3;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_24872CCF0();
    uint64_t v34 = a2;
    uint64_t v35 = v15;
    LOBYTE(v41) = 4;
    uint64_t v18 = v17;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_24872CCF0();
    uint64_t v21 = v20;
    uint64_t v31 = v19;
    uint64_t v32 = v16;
    uint64_t v33 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E778);
    char v40 = 5;
    sub_24872A734(&qword_26931E7A8, &qword_26931E778, (void (*)(void))sub_24872A334);
    swift_bridgeObjectRetain();
    sub_24872CD00();
    uint64_t v22 = v41;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26931E788);
    char v40 = 6;
    sub_24872A734(&qword_26931E7B0, &qword_26931E788, (void (*)(void))sub_24872A494);
    swift_bridgeObjectRetain();
    sub_24872CD00();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v23 = v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v24 = v37;
    uint64_t v25 = v34;
    uint64_t v26 = v35;
    *uint64_t v34 = v38;
    v25[1] = v24;
    uint64_t v27 = v36;
    uint64_t v25[2] = v39;
    _OWORD v25[3] = v27;
    uint64_t v28 = v32;
    uint64_t v29 = v33;
    void v25[4] = v26;
    void v25[5] = v28;
    uint64_t v30 = v31;
    v25[6] = v29;
    v25[7] = v30;
    v25[8] = v21;
    v25[9] = v22;
    v25[10] = v23;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_248726160@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return CommandInfoV0.init(from:)(a1, a2);
}

uint64_t sub_248726178(void *a1)
{
  return CommandInfoV0.encode(to:)(a1);
}

uint64_t sub_248726190()
{
  uint64_t v1 = *((void *)v0 + 2);
  long long v4 = *v0;
  uint64_t v5 = v1;
  long long v6 = *(long long *)((char *)v0 + 24);
  long long v7 = *(long long *)((char *)v0 + 40);
  long long v8 = *(long long *)((char *)v0 + 56);
  long long v9 = *(long long *)((char *)v0 + 72);
  sub_24872D030();
  CommandInfoV0.hash(into:)((uint64_t)v3);
  return sub_24872D070();
}

uint64_t sub_24872620C()
{
  uint64_t v1 = *((void *)v0 + 2);
  long long v4 = *v0;
  uint64_t v5 = v1;
  long long v6 = *(long long *)((char *)v0 + 24);
  long long v7 = *(long long *)((char *)v0 + 40);
  long long v8 = *(long long *)((char *)v0 + 56);
  long long v9 = *(long long *)((char *)v0 + 72);
  sub_24872D030();
  CommandInfoV0.hash(into:)((uint64_t)v3);
  return sub_24872D070();
}

ArgumentParserInternal::ArgumentInfoV0::NameInfoV0::KindV0_optional __swiftcall ArgumentInfoV0.NameInfoV0.KindV0.init(rawValue:)(Swift::String rawValue)
{
  return (ArgumentParserInternal::ArgumentInfoV0::NameInfoV0::KindV0_optional)sub_248726F84(v1);
}

uint64_t ArgumentInfoV0.NameInfoV0.KindV0.rawValue.getter()
{
  unint64_t v1 = 0x74726F6873;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000012;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1735290732;
  }
}

uint64_t sub_2487262E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_248723BE0(*a1, *a2);
}

ArgumentParserInternal::ArgumentInfoV0::NameInfoV0::KindV0_optional sub_2487262F0(Swift::String *a1)
{
  return ArgumentInfoV0.NameInfoV0.KindV0.init(rawValue:)(*a1);
}

void sub_2487262FC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE500000000000000;
  unint64_t v5 = 0x74726F6873;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD000000000000012;
    unint64_t v4 = 0x80000002487311E0;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1735290732;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_248726354()
{
  return sub_24872C780();
}

uint64_t sub_2487263B4()
{
  return sub_24872C770();
}

uint64_t sub_248726404()
{
  return sub_24872D070();
}

uint64_t sub_2487264A0()
{
  sub_24872C4D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_248726528()
{
  return sub_24872D070();
}

void ArgumentInfoV0.NameInfoV0.kind.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *ArgumentInfoV0.NameInfoV0.kind.setter(unsigned char *result)
{
  *unint64_t v1 = *result;
  return result;
}

uint64_t (*ArgumentInfoV0.NameInfoV0.kind.modify())(void)
{
  return nullsub_1;
}

uint64_t ArgumentInfoV0.NameInfoV0.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArgumentInfoV0.NameInfoV0.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*ArgumentInfoV0.NameInfoV0.name.modify())(void)
{
  return nullsub_1;
}

uint64_t ArgumentInfoV0.NameInfoV0.hash(into:)()
{
  sub_24872C4D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24872C4D0();
  return swift_bridgeObjectRelease();
}

uint64_t static ArgumentInfoV0.NameInfoV0.== infix(_:_:)(unsigned __int8 *a1, uint64_t a2)
{
  int v2 = *a1;
  uint64_t v3 = *((void *)a1 + 1);
  uint64_t v4 = *((void *)a1 + 2);
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  unint64_t v7 = 0xE500000000000000;
  unint64_t v8 = 0x74726F6873;
  unint64_t v9 = 0x80000002487311E0;
  if (v2 != 1)
  {
    unint64_t v8 = 0xD000000000000012;
    unint64_t v7 = 0x80000002487311E0;
  }
  if (*a1) {
    uint64_t v10 = v8;
  }
  else {
    uint64_t v10 = 1735290732;
  }
  if (v2) {
    unint64_t v11 = v7;
  }
  else {
    unint64_t v11 = 0xE400000000000000;
  }
  unint64_t v12 = 0x74726F6873;
  if (*(unsigned char *)a2 == 1) {
    unint64_t v9 = 0xE500000000000000;
  }
  else {
    unint64_t v12 = 0xD000000000000012;
  }
  if (*(unsigned char *)a2) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 1735290732;
  }
  if (*(unsigned char *)a2) {
    unint64_t v14 = v9;
  }
  else {
    unint64_t v14 = 0xE400000000000000;
  }
  if (v10 == v13 && v11 == v14)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v15 = sub_24872CEB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v15 & 1) == 0) {
      return result;
    }
  }
  if (v3 == v5 && v4 == v6) {
    return 1;
  }
  return sub_24872CEB0();
}

uint64_t sub_2487268A0()
{
  if (*v0) {
    return 1701667182;
  }
  else {
    return 1684957547;
  }
}

uint64_t sub_2487268C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_248728EDC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2487268EC(uint64_t a1)
{
  unint64_t v2 = sub_24872A4E8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248726928(uint64_t a1)
{
  unint64_t v2 = sub_24872A4E8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ArgumentInfoV0.NameInfoV0.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26931E7C0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  uint64_t v9 = *((void *)v1 + 1);
  v11[0] = *((void *)v1 + 2);
  v11[1] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24872A4E8();
  sub_24872D0C0();
  char v14 = v8;
  char v13 = 0;
  sub_24872A53C();
  sub_24872CDC0();
  if (!v2)
  {
    char v12 = 1;
    sub_24872CD90();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ArgumentInfoV0.NameInfoV0.hashValue.getter()
{
  return sub_24872D070();
}

uint64_t ArgumentInfoV0.NameInfoV0.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26931E7D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24872A4E8();
  sub_24872D0B0();
  if (!v2)
  {
    char v16 = 0;
    sub_24872A590();
    sub_24872CD40();
    char v9 = v17;
    char v15 = 1;
    uint64_t v11 = sub_24872CD10();
    uint64_t v13 = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(unsigned char *)a2 = v9;
    *(void *)(a2 + 8) = v11;
    *(void *)(a2 + 16) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_248726D60@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ArgumentInfoV0.NameInfoV0.init(from:)(a1, a2);
}

uint64_t sub_248726D78(void *a1)
{
  return ArgumentInfoV0.NameInfoV0.encode(to:)(a1);
}

uint64_t sub_248726D94()
{
  sub_24872C4D0();
  swift_bridgeObjectRelease();
  return sub_24872C4D0();
}

uint64_t sub_248726E3C()
{
  return sub_24872D070();
}

uint64_t sub_248726EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  if ((sub_248723BE0(*(unsigned char *)a1, *(unsigned char *)a2) & 1) == 0) {
    return 0;
  }
  if (v2 == v4 && v3 == v5) {
    return 1;
  }
  return sub_24872CEB0();
}

ArgumentParserInternal::ArgumentInfoV0::KindV0_optional __swiftcall ArgumentInfoV0.KindV0.init(rawValue:)(Swift::String rawValue)
{
  return (ArgumentParserInternal::ArgumentInfoV0::KindV0_optional)sub_248726F84(v1);
}

uint64_t sub_248726F84@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_24872CCE0();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 3;
  if (v2 < 3) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t ArgumentInfoV0.KindV0.rawValue.getter()
{
  uint64_t v1 = 0x6E6F6974706FLL;
  if (*v0 != 1) {
    uint64_t v1 = 1734437990;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E6F697469736F70;
  }
}

uint64_t sub_248727030(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_248723ADC(*a1, *a2);
}

ArgumentParserInternal::ArgumentInfoV0::KindV0_optional sub_24872703C(Swift::String *a1)
{
  return ArgumentInfoV0.KindV0.init(rawValue:)(*a1);
}

void sub_248727048(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEA00000000006C61;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = 0x6E6F6974706FLL;
  if (v2 != 1)
  {
    uint64_t v5 = 1734437990;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E6F697469736F70;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_2487270A0()
{
  return sub_24872C780();
}

uint64_t sub_248727100()
{
  return sub_24872C770();
}

uint64_t sub_248727150()
{
  return sub_24872D070();
}

uint64_t sub_2487271EC()
{
  sub_24872C4D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_248727274()
{
  return sub_24872D070();
}

void ArgumentInfoV0.kind.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *ArgumentInfoV0.kind.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*ArgumentInfoV0.kind.modify())(void)
{
  return nullsub_1;
}

uint64_t ArgumentInfoV0.shouldDisplay.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t ArgumentInfoV0.shouldDisplay.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*ArgumentInfoV0.shouldDisplay.modify())(void)
{
  return nullsub_1;
}

uint64_t ArgumentInfoV0.sectionTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArgumentInfoV0.sectionTitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*ArgumentInfoV0.sectionTitle.modify())(void)
{
  return nullsub_1;
}

uint64_t ArgumentInfoV0.isOptional.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t ArgumentInfoV0.isOptional.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 24) = result;
  return result;
}

uint64_t (*ArgumentInfoV0.isOptional.modify())(void)
{
  return nullsub_1;
}

uint64_t ArgumentInfoV0.isRepeating.getter()
{
  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t ArgumentInfoV0.isRepeating.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 25) = result;
  return result;
}

uint64_t (*ArgumentInfoV0.isRepeating.modify())(void)
{
  return nullsub_1;
}

uint64_t ArgumentInfoV0.names.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ArgumentInfoV0.names.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*ArgumentInfoV0.names.modify())(void)
{
  return nullsub_1;
}

uint64_t ArgumentInfoV0.preferredName.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 40);
  *(void *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

__n128 ArgumentInfoV0.preferredName.setter(__n128 *a1)
{
  __n128 v4 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  swift_bridgeObjectRelease();
  __n128 result = v4;
  *(__n128 *)(v1 + 40) = v4;
  *(void *)(v1 + 56) = v2;
  return result;
}

uint64_t (*ArgumentInfoV0.preferredName.modify())(void)
{
  return nullsub_1;
}

uint64_t ArgumentInfoV0.valueName.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArgumentInfoV0.valueName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

uint64_t (*ArgumentInfoV0.valueName.modify())(void)
{
  return nullsub_1;
}

uint64_t ArgumentInfoV0.defaultValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArgumentInfoV0.defaultValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return result;
}

uint64_t (*ArgumentInfoV0.defaultValue.modify())(void)
{
  return nullsub_1;
}

uint64_t (*ArgumentInfoV0.allValues.modify())(void)
{
  return nullsub_1;
}

uint64_t ArgumentInfoV0.allValueStrings.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ArgumentInfoV0.allValueStrings.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 96) = a1;
  return result;
}

unint64_t sub_24872768C()
{
  unint64_t result = qword_26931E730;
  if (!qword_26931E730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26931E730);
  }
  return result;
}

uint64_t (*ArgumentInfoV0.allValueStrings.modify(void *a1))(uint64_t *a1, char a2)
{
  *a1 = *(void *)(v1 + 96);
  a1[1] = v1;
  swift_bridgeObjectRetain();
  return sub_24872772C;
}

uint64_t sub_24872772C(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v3 + 96) = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v3 + 96) = v2;
  }
  return result;
}

uint64_t ArgumentInfoV0.abstract.getter()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArgumentInfoV0.abstract.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  return result;
}

uint64_t (*ArgumentInfoV0.abstract.modify())(void)
{
  return nullsub_1;
}

uint64_t ArgumentInfoV0.discussion.getter()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArgumentInfoV0.discussion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = a2;
  return result;
}

uint64_t (*ArgumentInfoV0.discussion.modify())(void)
{
  return nullsub_1;
}

uint64_t ArgumentInfoV0.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1[2];
  uint64_t v3 = v1[4];
  uint64_t v4 = v1[7];
  uint64_t v5 = v1[12];
  uint64_t v12 = v1[9];
  uint64_t v13 = v1[11];
  uint64_t v11 = v1[14];
  uint64_t v14 = v1[16];
  sub_24872C4D0();
  swift_bridgeObjectRelease();
  sub_24872D050();
  sub_24872D050();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_24872C4D0();
    swift_bridgeObjectRelease();
  }
  sub_24872D050();
  sub_24872D050();
  if (!v3)
  {
    sub_24872D050();
    uint64_t v7 = v11;
    if (v4) {
      goto LABEL_5;
    }
LABEL_7:
    sub_24872D050();
    if (v12) {
      goto LABEL_12;
    }
LABEL_8:
    sub_24872D050();
    if (v13) {
      goto LABEL_13;
    }
LABEL_9:
    sub_24872D050();
    if (v5) {
      goto LABEL_14;
    }
LABEL_10:
    sub_24872D050();
    goto LABEL_18;
  }
  sub_24872D050();
  swift_bridgeObjectRetain();
  sub_248728DEC(a1, v3);
  swift_bridgeObjectRelease();
  uint64_t v7 = v11;
  if (!v4) {
    goto LABEL_7;
  }
LABEL_5:
  sub_24872D050();
  swift_bridgeObjectRetain_n();
  sub_24872C4D0();
  swift_bridgeObjectRelease();
  sub_24872C4D0();
  swift_bridgeObjectRelease_n();
  if (!v12) {
    goto LABEL_8;
  }
LABEL_12:
  sub_24872D050();
  swift_bridgeObjectRetain();
  sub_24872C4D0();
  swift_bridgeObjectRelease();
  if (!v13) {
    goto LABEL_9;
  }
LABEL_13:
  sub_24872D050();
  swift_bridgeObjectRetain();
  sub_24872C4D0();
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_10;
  }
LABEL_14:
  sub_24872D050();
  sub_24872D040();
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = v5 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_24872C4D0();
      swift_bridgeObjectRelease();
      v9 += 16;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
LABEL_18:
  if (!v7)
  {
    sub_24872D050();
    if (v14) {
      goto LABEL_20;
    }
    return sub_24872D050();
  }
  sub_24872D050();
  swift_bridgeObjectRetain();
  sub_24872C4D0();
  swift_bridgeObjectRelease();
  if (!v14) {
    return sub_24872D050();
  }
LABEL_20:
  sub_24872D050();
  swift_bridgeObjectRetain();
  sub_24872C4D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_248727CB4(char a1)
{
  uint64_t result = 1684957547;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6944646C756F6873;
      break;
    case 2:
      uint64_t result = 0x546E6F6974636573;
      break;
    case 3:
      uint64_t result = 0x6E6F6974704F7369;
      break;
    case 4:
      uint64_t result = 0x7461657065527369;
      break;
    case 5:
      uint64_t result = 0x73656D616ELL;
      break;
    case 6:
      uint64_t result = 0x6572726566657270;
      break;
    case 7:
      uint64_t result = 0x6D614E65756C6176;
      break;
    case 8:
      uint64_t result = 0x56746C7561666564;
      break;
    case 9:
      uint64_t result = 0x65756C61566C6C61;
      break;
    case 10:
      uint64_t result = 0x7463617274736261;
      break;
    case 11:
      uint64_t result = 0x6973737563736964;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_248727E68()
{
  return sub_248727CB4(*v0);
}

uint64_t sub_248727E70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_248728FB0(a1, a2);
  *a3 = result;
  return result;
}

void sub_248727E98(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_248727EA4(uint64_t a1)
{
  unint64_t v2 = sub_24872A5E4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248727EE0(uint64_t a1)
{
  unint64_t v2 = sub_24872A5E4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ArgumentInfoV0.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26931E7E8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  BOOL v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  LODWORD(v35) = v1[1];
  uint64_t v8 = *((void *)v1 + 1);
  uint64_t v33 = *((void *)v1 + 2);
  uint64_t v34 = v8;
  int v40 = v1[24];
  int v32 = v1[25];
  uint64_t v9 = *((void *)v1 + 4);
  uint64_t v10 = *((void *)v1 + 6);
  uint64_t v28 = *((void *)v1 + 5);
  uint64_t v29 = v10;
  uint64_t v30 = *((void *)v1 + 7);
  uint64_t v31 = v9;
  uint64_t v11 = *((void *)v1 + 9);
  uint64_t v26 = *((void *)v1 + 8);
  uint64_t v27 = v11;
  uint64_t v12 = *((void *)v1 + 10);
  uint64_t v24 = *((void *)v1 + 11);
  uint64_t v25 = v12;
  uint64_t v13 = *((void *)v1 + 12);
  _OWORD v22[2] = *((void *)v1 + 13);
  uint64_t v23 = v13;
  v22[1] = *((void *)v1 + 14);
  uint64_t v14 = *((void *)v1 + 16);
  uint64_t v15 = a1[3];
  char v16 = a1;
  uint64_t v18 = v17;
  __swift_project_boxed_opaque_existential_1(v16, v15);
  sub_24872A5E4();
  sub_24872D0C0();
  LOBYTE(v37) = v7;
  char v41 = 0;
  sub_24872A638();
  uint64_t v19 = v36;
  sub_24872CDC0();
  if (v19) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v18);
  }
  uint64_t v36 = v14;
  LOBYTE(v37) = 1;
  sub_24872CDA0();
  LOBYTE(v37) = 2;
  sub_24872CD70();
  LOBYTE(v37) = 3;
  sub_24872CDA0();
  LOBYTE(v37) = 4;
  sub_24872CDA0();
  uint64_t v37 = v31;
  char v41 = 5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E800);
  uint64_t v35 = v6;
  sub_24872A734(&qword_26931E808, &qword_26931E800, (void (*)(void))sub_24872A68C);
  sub_24872CD80();
  uint64_t v37 = v28;
  uint64_t v38 = v29;
  uint64_t v39 = v30;
  char v41 = 6;
  sub_24872A68C();
  sub_24872CD80();
  LOBYTE(v37) = 7;
  sub_24872CD70();
  LOBYTE(v37) = 8;
  sub_24872CD70();
  uint64_t v37 = v23;
  char v41 = 9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26931E1D8);
  sub_24872A430(&qword_26931E770);
  sub_24872CD80();
  LOBYTE(v37) = 10;
  sub_24872CD70();
  LOBYTE(v37) = 11;
  uint64_t v20 = v35;
  sub_24872CD70();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v20, v18);
}