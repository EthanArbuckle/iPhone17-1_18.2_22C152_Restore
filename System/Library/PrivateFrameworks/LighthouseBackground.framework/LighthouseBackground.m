uint64_t VertexEdges.init(vertex:edges:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  result = type metadata accessor for VertexEdges();
  *(void *)(a4 + *(int *)(result + 52)) = a2;
  return result;
}

uint64_t type metadata accessor for VertexEdges()
{
  return swift_getGenericMetadata();
}

uint64_t Graph.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_254488874@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_25448AD3C();

  return swift_bridgeObjectRetain();
}

uint64_t sub_2544888B0()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_254488904(v0);
}

uint64_t sub_2544888DC()
{
  sub_25448AD3C();

  return swift_bridgeObjectRetain();
}

uint64_t sub_254488904(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_25448894C())()
{
  return j__swift_endAccess;
}

uint64_t sub_2544889A4()
{
  return sub_254527290();
}

uint64_t sub_254488AC0()
{
  uint64_t v1 = *(void *)(*v0 + 96);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = v4;
  MEMORY[0x270FA5388](v3);
  v7 = (char *)&v32 - v6;
  uint64_t v46 = *(void *)(v8 + 88);
  uint64_t v47 = v1;
  long long v48 = *(_OWORD *)(v9 + 104);
  uint64_t v40 = type metadata accessor for VertexEdges();
  uint64_t v10 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  v38 = (char *)&v32 - v11;
  uint64_t v45 = sub_254527210();
  swift_beginAccess();
  uint64_t v12 = v0[4];
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v34 = v12 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(v12 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  uint64_t v37 = v10 + 16;
  uint64_t v39 = v10;
  int64_t v35 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v36 = v10 + 8;
  uint64_t v41 = v12;
  uint64_t result = swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v43)
  {
    if (v16)
    {
      uint64_t v42 = (v16 - 1) & v16;
      int64_t v43 = i;
      unint64_t v19 = __clz(__rbit64(v16)) | (i << 6);
    }
    else
    {
      int64_t v20 = i + 1;
      if (__OFADD__(i, 1))
      {
        __break(1u);
        goto LABEL_33;
      }
      if (v20 >= v35) {
        goto LABEL_31;
      }
      unint64_t v21 = *(void *)(v34 + 8 * v20);
      int64_t v22 = i + 1;
      if (!v21)
      {
        int64_t v22 = i + 2;
        if (i + 2 >= v35) {
          goto LABEL_31;
        }
        unint64_t v21 = *(void *)(v34 + 8 * v22);
        if (!v21)
        {
          int64_t v22 = i + 3;
          if (i + 3 >= v35) {
            goto LABEL_31;
          }
          unint64_t v21 = *(void *)(v34 + 8 * v22);
          if (!v21)
          {
            uint64_t v23 = i + 4;
            if (i + 4 >= v35) {
              goto LABEL_31;
            }
            unint64_t v21 = *(void *)(v34 + 8 * v23);
            if (!v21)
            {
              while (1)
              {
                int64_t v22 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  break;
                }
                if (v22 >= v35) {
                  goto LABEL_31;
                }
                unint64_t v21 = *(void *)(v34 + 8 * v22);
                ++v23;
                if (v21) {
                  goto LABEL_20;
                }
              }
LABEL_33:
              __break(1u);
LABEL_34:
              __break(1u);
              return result;
            }
            int64_t v22 = i + 4;
          }
        }
      }
LABEL_20:
      uint64_t v42 = (v21 - 1) & v21;
      int64_t v43 = v22;
      unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
    }
    uint64_t v24 = v40;
    v26 = v38;
    uint64_t v25 = v39;
    (*(void (**)(char *, unint64_t, uint64_t))(v39 + 16))(v38, *(void *)(v41 + 56) + *(void *)(v39 + 72) * v19, v40);
    uint64_t v27 = *(void *)&v26[*(int *)(v24 + 52)];
    v28 = *(void (**)(char *, uint64_t))(v25 + 8);
    swift_bridgeObjectRetain();
    v28(v26, v24);
    if (MEMORY[0x25A27BA40](v27, v1)) {
      break;
    }
LABEL_4:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v16 = v42;
  }
  uint64_t v29 = 0;
  while (1)
  {
    char v30 = sub_254527230();
    sub_2545271F0();
    if ((v30 & 1) == 0) {
      break;
    }
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v7, v27+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v29, v1);
    uint64_t v31 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      goto LABEL_30;
    }
LABEL_25:
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v7, v1);
    sub_254527280();
    sub_254527260();
    ++v29;
    if (v31 == MEMORY[0x25A27BA40](v27, v1)) {
      goto LABEL_4;
    }
  }
  uint64_t result = sub_254527660();
  if (v33 != 8) {
    goto LABEL_34;
  }
  uint64_t v44 = result;
  (*(void (**)(char *, uint64_t *, uint64_t))(v2 + 16))(v7, &v44, v1);
  swift_unknownObjectRelease();
  uint64_t v31 = v29 + 1;
  if (!__OFADD__(v29, 1)) {
    goto LABEL_25;
  }
LABEL_30:
  __break(1u);
LABEL_31:
  swift_release();
  return v45;
}

uint64_t Graph.__allocating_init(name:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  Graph.init(name:)(a1, a2);
  return v4;
}

void *Graph.init(name:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for VertexEdges();
  swift_getTupleTypeMetadata2();
  sub_254527210();
  swift_getAssociatedConformanceWitness();
  v2[4] = sub_254526EF0();
  v2[2] = a1;
  v2[3] = a2;
  sub_254527210();
  uint64_t v5 = sub_254526EF0();
  swift_beginAccess();
  v2[4] = v5;
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_25448911C(uint64_t a1)
{
  uint64_t v3 = (void *)*v1;
  int64_t v20 = v1 + 4;
  uint64_t v4 = v3[11];
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  v7 = (char *)&v17 - v6;
  uint64_t v8 = v3[12];
  uint64_t v9 = v3[13];
  uint64_t v18 = v3[14];
  uint64_t v21 = v4;
  uint64_t v22 = v8;
  uint64_t v23 = v9;
  uint64_t v24 = v18;
  uint64_t v10 = type metadata accessor for VertexEdges();
  uint64_t v11 = sub_2545274E0();
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v17 - v13;
  uint64_t v19 = v3[10];
  MEMORY[0x270FA5388](v12);
  (*(void (**)(uint64_t, uint64_t))(v9 + 64))(v4, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v15 = sub_254526EB0();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v14, v7, v4);
  uint64_t v21 = v4;
  uint64_t v22 = v8;
  uint64_t v23 = v9;
  uint64_t v24 = v18;
  *(void *)&v14[*(int *)(type metadata accessor for VertexEdges() + 52)] = v15;
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v14, 0, 1, v10);
  swift_beginAccess();
  swift_getAssociatedConformanceWitness();
  sub_254526F10();
  sub_254526F40();
  return swift_endAccess();
}

uint64_t sub_254489400(uint64_t a1, uint64_t a2)
{
  uint64_t v52 = a2;
  uint64_t v55 = a1;
  uint64_t v3 = MEMORY[0x270FA5388](a1);
  uint64_t v47 = (char *)&v43 - v4;
  uint64_t v6 = *(void *)(v5 + 80);
  uint64_t v51 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v3);
  uint64_t v46 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v45 = (char *)&v43 - v10;
  MEMORY[0x270FA5388](v9);
  v49 = (char *)&v43 - v11;
  uint64_t v13 = v12[11];
  uint64_t v14 = v12[13];
  uint64_t v15 = v12[14];
  v57[0] = v13;
  v57[1] = v16;
  uint64_t v48 = v16;
  v57[2] = v14;
  v57[3] = v15;
  uint64_t v44 = v15;
  uint64_t v17 = type metadata accessor for VertexEdges();
  uint64_t v18 = sub_2545274E0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  v50 = (uint64_t (*)())((char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v43 - v22;
  swift_beginAccess();
  uint64_t v24 = *(void *)(v2 + 32);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_bridgeObjectRetain();
  uint64_t v54 = v6;
  MEMORY[0x25A27B700](v55, v24, v6, v17, AssociatedConformanceWitness);
  swift_bridgeObjectRelease();
  v53 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  LODWORD(v24) = v53(v23, 1, v17);
  v26 = *(void (**)(char *, uint64_t))(v19 + 8);
  uint64_t v27 = v23;
  uint64_t v28 = v18;
  v26(v27, v18);
  if (v24 == 1) {
    return 0;
  }
  uint64_t v29 = v51;
  swift_beginAccess();
  uint64_t v30 = *(void *)(v2 + 32);
  swift_bridgeObjectRetain();
  uint64_t v31 = v50;
  MEMORY[0x25A27B700](v52, v30, v54, v17, AssociatedConformanceWitness);
  swift_bridgeObjectRelease();
  LODWORD(v30) = v53((char *)v31, 1, v17);
  v26((char *)v31, v28);
  if (v30 == 1) {
    return 0;
  }
  uint64_t v33 = v29;
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 16);
  int64_t v35 = v49;
  uint64_t v36 = v55;
  v34(v49, v55, v54);
  v50 = sub_25448894C();
  sub_254526F10();
  uint64_t v37 = (void (*)(unsigned char *, void))sub_254526F20();
  if (v53(v38, 1, v17))
  {
    v37(v56, 0);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v54);
  }
  else
  {
    uint64_t v39 = v45;
    uint64_t v40 = v54;
    v34(v45, v36, v54);
    uint64_t v41 = v37;
    uint64_t v42 = v46;
    v34(v46, v52, v40);
    (*(void (**)(char *, char *, uint64_t))(v44 + 80))(v39, v42, v48);
    sub_254527280();
    sub_254527260();
    v41(v56, 0);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v40);
  }
  ((void (*)(void *, void))v50)(v57, 0);
  return 1;
}

uint64_t sub_254489988(uint64_t a1, uint64_t a2)
{
  uint64_t v32 = a2;
  uint64_t v33 = a1;
  uint64_t v3 = *v2;
  uint64_t v5 = *(void *)(*v2 + 96);
  uint64_t v6 = *(void *)(*v2 + 104);
  uint64_t v7 = *(void *)(*v2 + 112);
  uint64_t v35 = *(void *)(*v2 + 88);
  uint64_t v4 = v35;
  uint64_t v36 = v5;
  uint64_t v31 = v5;
  uint64_t v37 = v6;
  uint64_t v38 = v7;
  uint64_t v28 = v7;
  uint64_t v8 = type metadata accessor for VertexEdges();
  uint64_t v27 = sub_2545274E0();
  uint64_t v9 = *(void *)(v27 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v27);
  uint64_t v12 = (char *)&v26 - v11;
  uint64_t v13 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v26 - v14;
  swift_beginAccess();
  uint64_t v16 = v2[4];
  uint64_t v17 = *(void *)(v3 + 80);
  uint64_t v29 = v6;
  uint64_t v30 = v4;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_bridgeObjectRetain();
  MEMORY[0x25A27B700](v33, v16, v17, v8, AssociatedConformanceWitness);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v27);
    char v19 = 0;
  }
  else
  {
    uint64_t v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v13 + 32))(v15, v12, v8);
    uint64_t v34 = *(void *)&v15[*(int *)(v8 + 52)];
    MEMORY[0x270FA5388](v20);
    uint64_t v22 = v30;
    uint64_t v21 = v31;
    *(&v26 - 6) = v17;
    *(&v26 - 5) = v22;
    uint64_t v23 = v29;
    *(&v26 - 4) = v21;
    *(&v26 - 3) = v23;
    uint64_t v24 = v32;
    *(&v26 - 2) = v28;
    *(&v26 - 1) = v24;
    sub_254527280();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    char v19 = sub_254527130();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v8);
  }
  return v19 & 1;
}

uint64_t sub_254489CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(v7 + 72))(v8, v7);
  swift_getAssociatedConformanceWitness();
  char v9 = sub_254526FB0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a3);
  return v9 & 1;
}

uint64_t sub_254489E14(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t result = MEMORY[0x25A27BA20](a1, v4);
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v16 = result - 1;
    uint64_t v17 = 1;
    MEMORY[0x270FA5388](result);
    uint64_t v6 = *(void *)(v3 + 88);
    v10[2] = v4;
    v10[3] = v6;
    long long v14 = *(_OWORD *)(v3 + 96);
    long long v11 = v14;
    uint64_t v12 = *(void *)(v3 + 112);
    uint64_t v13 = a1;
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF2F18);
    unint64_t v8 = sub_25448AE04();
    return sub_25448A058((void (*)(char *, char *))sub_25448AD98, (uint64_t)v10, v7, (char *)v14, MEMORY[0x263F8E628], v8, MEMORY[0x263F8E658], v9);
  }
  return result;
}

uint64_t sub_254489F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = MEMORY[0x270FA5388](a1);
  long long v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t *)MEMORY[0x270FA5388](v9);
  long long v14 = (char *)v17 - v13;
  uint64_t v15 = *v12;
  sub_2545272A0();
  uint64_t result = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
  }
  else
  {
    sub_2545272A0();
    return (*(uint64_t (**)(char *, char *, uint64_t, uint64_t))(a7 + 80))(v14, v11, a5, a7);
  }
  return result;
}

uint64_t sub_25448A058(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a8;
  uint64_t v44 = a5;
  uint64_t v9 = v8;
  uint64_t v58 = a2;
  v59 = a4;
  v57 = a1;
  uint64_t v42 = *(void *)(a5 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](a1);
  uint64_t v55 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  v53 = (char *)&v40 - v13;
  uint64_t v15 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v41 = (char *)&v40 - v17;
  uint64_t v18 = sub_2545274E0();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v51 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v40 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v40 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v50 = *((void *)v15 - 1);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a6;
  uint64_t v52 = v15;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v30 = (char *)&v40 - v29;
  uint64_t v31 = sub_254527120();
  uint64_t v61 = sub_254526EB0();
  uint64_t v56 = sub_2545276E0();
  sub_2545276B0();
  (*(void (**)(char *, uint64_t, void))(v50 + 16))(v28, v48, v52);
  v59 = v30;
  uint64_t result = sub_254527110();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    uint64_t v33 = (uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
    uint64_t v34 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_2545274F0();
      uint64_t result = (*v33)(v23, 1, AssociatedTypeWitness);
      if (result == 1) {
        goto LABEL_18;
      }
      v57(v23, v55);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v55, v44);
        return (*v34)(v23, AssociatedTypeWitness);
      }
      uint64_t v9 = 0;
      (*v34)(v23, AssociatedTypeWitness);
      sub_2545276C0();
      if (!--v31)
      {
        uint64_t v35 = v54;
        uint64_t v36 = v51;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v35 = v54;
  uint64_t v36 = v51;
LABEL_9:
  sub_2545274F0();
  uint64_t v55 = *(char **)(v35 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v36, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v37 = v51;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v46);
    return v61;
  }
  else
  {
    uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v54 = v35 + 32;
    uint64_t v38 = (void (**)(char *, uint64_t))(v35 + 8);
    uint64_t v39 = v41;
    uint64_t v37 = v51;
    while (1)
    {
      v52(v39, v37, AssociatedTypeWitness);
      v57(v39, v53);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      (*v38)(v39, AssociatedTypeWitness);
      sub_2545276C0();
      sub_2545274F0();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v37, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_14;
      }
    }
    (*v38)(v39, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v53, v44);
  }
}

uint64_t sub_25448A754@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = v2;
  v53 = a2;
  uint64_t v52 = *v2;
  uint64_t v5 = *(void *)(v52 + 80);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v50 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v63 = (uint64_t)&v50 - v13;
  sub_2545272A0();
  uint64_t v65 = 1;
  uint64_t v66 = a1;
  sub_254527280();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF2F28);
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_254526FA0();
  uint64_t v14 = v68;
  uint64_t v16 = v69;
  unint64_t v15 = v70;
  swift_unknownObjectRetain();
  uint64_t v17 = sub_254527530();
  swift_unknownObjectRelease();
  uint64_t v54 = v5;
  if (v17 == sub_254527550())
  {
    swift_unknownObjectRelease();
    uint64_t v64 = 0;
    uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 32);
    uint64_t v19 = v9;
LABEL_10:
    uint64_t v39 = v54;
    v18(v19, v63, v54);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v41 = swift_getAssociatedConformanceWitness();
    uint64_t v42 = swift_getAssociatedConformanceWitness();
    uint64_t v43 = v53;
    unsigned char *v53 = 1;
    uint64_t v67 = v39;
    uint64_t v68 = AssociatedConformanceWitness;
    uint64_t v69 = v41;
    uint64_t v70 = v42;
    uint64_t v44 = type metadata accessor for WalkResult();
    uint64_t result = v18(&v43[*(int *)(v44 + 52)], (uint64_t)v19, v39);
LABEL_12:
    *(void *)&v43[*(int *)(v44 + 56)] = v64;
  }
  else
  {
    uint64_t v51 = v9;
    uint64_t v20 = 0;
    uint64_t v60 = v6;
    int64_t v61 = v15 >> 1;
    uint64_t v58 = v6 + 16;
    uint64_t v59 = v6 + 8;
    v62 = (uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 32);
    uint64_t v21 = v54;
    uint64_t v56 = v17;
    unint64_t v57 = v15;
    while (1)
    {
      uint64_t result = sub_254527540();
      if (v17 < v16 || v61 <= v17 + v20) {
        break;
      }
      uint64_t v64 = v20;
      uint64_t v23 = v16;
      uint64_t v24 = v60;
      uint64_t v25 = v14;
      (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v12, v14 + *(void *)(v60 + 72) * (v17 + v20), v21);
      uint64_t v26 = v3;
      uint64_t v27 = v63;
      uint64_t v28 = (uint64_t)v12;
      uint64_t v29 = v12;
      uint64_t v30 = v26;
      char v31 = sub_254489988(v63, v28);
      uint64_t v32 = *(void (**)(char *, uint64_t))(v24 + 8);
      if ((v31 & 1) == 0)
      {
        v32(v29, v21);
        swift_unknownObjectRelease();
        uint64_t v45 = *v62;
        uint64_t v46 = v51;
        (*v62)(v51, v27, v21);
        uint64_t v47 = swift_getAssociatedConformanceWitness();
        uint64_t v48 = swift_getAssociatedConformanceWitness();
        uint64_t v49 = swift_getAssociatedConformanceWitness();
        uint64_t v43 = v53;
        unsigned char *v53 = 0;
        uint64_t v67 = v21;
        uint64_t v68 = v47;
        uint64_t v69 = v48;
        uint64_t v70 = v49;
        uint64_t v44 = type metadata accessor for WalkResult();
        uint64_t result = v45(&v43[*(int *)(v44 + 52)], (uint64_t)v46, v21);
        goto LABEL_12;
      }
      v32((char *)v27, v21);
      uint64_t v33 = v27;
      uint64_t v34 = v29;
      uint64_t v55 = *v62;
      uint64_t result = v55((char *)v33, (uint64_t)v29, v21);
      uint64_t v35 = v64;
      uint64_t v36 = v64 + 1;
      if (__OFADD__(v64, 1)) {
        goto LABEL_14;
      }
      uint64_t v14 = v25;
      uint64_t v16 = v23;
      uint64_t v37 = sub_254527550();
      uint64_t v20 = v35 + 1;
      uint64_t v17 = v56;
      uint64_t v38 = v30;
      uint64_t v12 = v34;
      uint64_t v3 = v38;
      if (v56 + v20 == v37)
      {
        swift_unknownObjectRelease();
        uint64_t v64 = v36;
        uint64_t v19 = v51;
        uint64_t v18 = v55;
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
  }
  return result;
}

uint64_t Graph.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Graph.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0228](v0, 40, 7);
}

uint64_t default argument 0 of ResetTasksRequest.init(reload:)()
{
  return 0;
}

uint64_t default argument 0 of CleanTasksRequest.init(deep:)()
{
  return 1;
}

uint64_t default argument 0 of GetNotificationsConfigRequest.init(registeredOnly:)()
{
  return 1;
}

uint64_t default argument 0 of ResetNotificationsRequest.init(reload:)()
{
  return 0;
}

uint64_t sub_25448AD3C()
{
  swift_beginAccess();
  return *(void *)(v0 + 32);
}

uint64_t sub_25448AD70(uint64_t a1)
{
  return sub_254489CDC(a1, *(void *)(v1 + 56), *(void *)(v1 + 16)) & 1;
}

uint64_t sub_25448AD98(uint64_t a1)
{
  return sub_254489F48(a1, v1[7], v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_25448AE04()
{
  unint64_t result = qword_269DF2F20;
  if (!qword_269DF2F20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DF2F18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF2F20);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_25448AEA8()
{
  return 40;
}

__n128 sub_25448AEB4(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t dispatch thunk of Vertex.index.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of Edge.start.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of Edge.end.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of Edge.init(start:end:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t sub_25448AF18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

uint64_t sub_25448AF20()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_25448AFBC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_25448B0B8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25448B128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 48) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 48) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_25448B1A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 40) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 40) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25448B234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_25448B2B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25448B334(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x25448B480);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_25448B494(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x25448B670);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0) {
            uint64_t v19 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v19 = a2 - 1;
          }
          *uint64_t v18 = v19;
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_25448B698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 48);
}

uint64_t sub_25448B6A0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_25448B748(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  long long v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64) + 7;
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v6 + ((v5 + 1) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *long long v3 = *a2;
    long long v3 = (uint64_t *)(v9 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v10 = ((unint64_t)a1 + v5 + 1) & ~v5;
    uint64_t v11 = ((unint64_t)a2 + v5 + 1) & ~v5;
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v10, v11);
    *(void *)((v6 + v10) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v6 + v11) & 0xFFFFFFFFFFFFFFF8);
  }
  return v3;
}

uint64_t sub_25448B868(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));
}

unsigned char *sub_25448B8A4(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 16;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = (unint64_t)&a1[v6 + 1] & ~v6;
  uint64_t v8 = (unint64_t)&a2[v6 + 1] & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v7, v8);
  *(void *)((*(void *)(v5 + 48) + 7 + v7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 48) + 7 + v8) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

unsigned char *sub_25448B944(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 24;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = (unint64_t)&a1[v6 + 1] & ~v6;
  uint64_t v8 = (unint64_t)&a2[v6 + 1] & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 24))(v7, v8);
  *(void *)((*(void *)(v5 + 40) + 7 + v7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 40) + 7 + v8) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

unsigned char *sub_25448B9E4(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = (unint64_t)&a1[v6 + 1] & ~v6;
  uint64_t v8 = (unint64_t)&a2[v6 + 1] & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v7, v8);
  *(void *)((*(void *)(v5 + 32) + 7 + v7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 32) + 7 + v8) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

unsigned char *sub_25448BA84(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 40;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = (unint64_t)&a1[v6 + 1] & ~v6;
  uint64_t v8 = (unint64_t)&a2[v6 + 1] & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 40))(v7, v8);
  *(void *)((*(void *)(v5 + 24) + 7 + v7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 24) + 7 + v8) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_25448BB24(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v6 + 1) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
       + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x25448BC84);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 > 0xFE) {
    return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 1) & ~v6);
  }
  unsigned int v17 = *(unsigned __int8 *)a1;
  BOOL v18 = v17 >= 2;
  int v19 = (v17 + 2147483646) & 0x7FFFFFFF;
  if (v18) {
    return (v19 + 1);
  }
  else {
    return 0;
  }
}

void sub_25448BC98(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 1) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_39;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 > 0xFE)
            {
              unint64_t v18 = (unint64_t)&a1[v9 + 1] & ~v9;
              int v19 = *(void (**)(unint64_t))(v6 + 56);
              v19(v18);
            }
            else
            {
              *a1 = a2 + 1;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 1) & ~v9) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 1) & ~v9) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 1) & ~v9) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v17 = ~v8 + a2;
    bzero(a1, v10);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x25448BE84);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for WalkResult()
{
  return swift_getGenericMetadata();
}

uint64_t sub_25448BEC8()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for Graph()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for Graph(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Graph);
}

uint64_t dispatch thunk of Graph.adjacency.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of Graph.adjacency.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of Graph.adjacency.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of Graph.vertexIndices.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of Graph.edges.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of Graph.__allocating_init(name:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of Graph.addVertex(vertex:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of Graph.addEdge(startIndex:endIndex:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of Graph.hasEdge(startIndex:endIndex:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of Graph.edgesFromPath(path:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of Graph.processWalk(indices:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

void type metadata accessor for BMLighthouseLedgerDediscoPrivacyEventEventPhase(uint64_t a1)
{
}

void type metadata accessor for CFBoolean(uint64_t a1)
{
}

void type metadata accessor for CFArray(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

void sub_25448C114(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_25448C15C()
{
  uint64_t v0 = sub_254526E00();
  __swift_allocate_value_buffer(v0, qword_26B267340);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B267340);
  return sub_254526DF0();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t LedgerState.index.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LedgerState.index.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*LedgerState.index.modify())()
{
  return nullsub_1;
}

uint64_t LedgerState.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LedgerState() + 20);
  uint64_t v4 = sub_254526D90();
  unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for LedgerState()
{
  uint64_t result = qword_269DF3278;
  if (!qword_269DF3278) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t LedgerState.timestamp.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LedgerState() + 20);
  uint64_t v4 = sub_254526D90();
  unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*LedgerState.timestamp.modify())()
{
  return nullsub_1;
}

uint64_t LedgerState.init(index:timestamp:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  unsigned int v5 = (char *)a4 + *(int *)(type metadata accessor for LedgerState() + 20);
  uint64_t v6 = sub_254526D90();
  unsigned int v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);

  return v7(v5, a3, v6);
}

uint64_t LedgerState.hash(into:)()
{
  return sub_254526F50();
}

uint64_t static LedgerState.== infix(_:_:)(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (!v2 && (sub_2545279E0() & 1) == 0) {
    return 0;
  }
  type metadata accessor for LedgerState();

  return sub_254526D40();
}

uint64_t sub_25448C62C(char a1)
{
  if (a1) {
    return 0x6D617473656D6974;
  }
  else {
    return 0x7865646E69;
  }
}

BOOL sub_25448C664(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_25448C680()
{
  return sub_254527A90();
}

uint64_t sub_25448C6B0()
{
  return sub_25448C62C(*v0);
}

uint64_t sub_25448C6B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25448F0BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25448C6E0()
{
  return 0;
}

void sub_25448C6EC(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_25448C6F8(uint64_t a1)
{
  unint64_t v2 = sub_25448C96C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25448C734(uint64_t a1)
{
  unint64_t v2 = sub_25448C96C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LedgerState.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF31F8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25448C96C();
  sub_254527B00();
  v8[15] = 0;
  sub_254527930();
  if (!v1)
  {
    type metadata accessor for LedgerState();
    v8[14] = 1;
    sub_254526D90();
    sub_25448E0F8((unint64_t *)&unk_26B266FD8, MEMORY[0x263F07490]);
    sub_254527970();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_25448C96C()
{
  unint64_t result = qword_269DF3200;
  if (!qword_269DF3200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3200);
  }
  return result;
}

uint64_t LedgerState.hashValue.getter()
{
  return sub_254527AB0();
}

uint64_t LedgerState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v24 = sub_254526D90();
  uint64_t v21 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3208);
  uint64_t v23 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  unsigned int v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LedgerState();
  MEMORY[0x270FA5388](v8);
  size_t v10 = (uint64_t *)((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25448C96C();
  sub_254527AF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v19 = v8;
  uint64_t v20 = v5;
  uint64_t v12 = v23;
  uint64_t v11 = v24;
  char v27 = 0;
  uint64_t v13 = v25;
  uint64_t v14 = (uint64_t)v10;
  *size_t v10 = sub_254527830();
  v10[1] = v15;
  char v26 = 1;
  sub_25448E0F8(&qword_26B266BE0, MEMORY[0x263F07490]);
  int v16 = v20;
  sub_254527870();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v13);
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v14 + *(int *)(v19 + 20), v16, v11);
  sub_25448D018(v14, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_25448D07C(v14);
}

uint64_t sub_25448CD90@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25448CD9C()
{
  return sub_254527AB0();
}

uint64_t sub_25448CE5C()
{
  return sub_254526F50();
}

uint64_t sub_25448CF0C()
{
  return sub_254527AB0();
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_25448D018(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LedgerState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25448D07C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LedgerState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25448D0D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LedgerState.init(from:)(a1, a2);
}

uint64_t sub_25448D0F0(void *a1)
{
  return LedgerState.encode(to:)(a1);
}

uint64_t sub_25448D108(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (!v2 && (sub_2545279E0() & 1) == 0) {
    return 0;
  }

  return sub_254526D40();
}

uint64_t LedgerTransition.start.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LedgerTransition.start.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *BOOL v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*LedgerTransition.start.modify())()
{
  return nullsub_1;
}

uint64_t LedgerTransition.end.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LedgerTransition.end.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*LedgerTransition.end.modify())()
{
  return nullsub_1;
}

LighthouseBackground::LedgerTransition __swiftcall LedgerTransition.init(start:end:)(Swift::String start, Swift::String end)
{
  *uint64_t v2 = start;
  v2[1] = end;
  result.end = end;
  result.start = start;
  return result;
}

uint64_t LedgerTransition.description.getter()
{
  uint64_t v2 = *v0;
  swift_bridgeObjectRetain();
  sub_254527080();
  swift_bridgeObjectRetain();
  sub_254527080();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t LedgerTransition.init<A>(codingKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_254527B10();
  sub_25448D434();
  uint64_t v6 = (void *)sub_254527520();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v8 = v6[2];
  if (v8)
  {
    if (v8 != 1)
    {
      uint64_t v10 = v6[4];
      uint64_t v9 = v6[5];
      uint64_t v12 = v6[6];
      uint64_t v11 = v6[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
      *a3 = v10;
      a3[1] = v9;
      a3[2] = v12;
      a3[3] = v11;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_25448D434()
{
  unint64_t result = qword_269DF3210;
  if (!qword_269DF3210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3210);
  }
  return result;
}

uint64_t LedgerTransition.codingKey.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_254527080();
  swift_bridgeObjectRetain();
  sub_254527080();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  a1[3] = (uint64_t)&type metadata for LedgerTransitionCodingKey;
  a1[4] = sub_25448D560();
  uint64_t result = swift_allocObject();
  *a1 = result;
  *(void *)(result + 16) = v4;
  *(void *)(result + 24) = v5;
  *(void *)(result + 32) = 0;
  *(unsigned char *)(result + 40) = 0;
  return result;
}

unint64_t sub_25448D560()
{
  unint64_t result = qword_269DF3218;
  if (!qword_269DF3218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3218);
  }
  return result;
}

uint64_t sub_25448D5B4()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 41, 7);
}

uint64_t LedgerTransition.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_254527060();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_254527060();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25448D674(char a1)
{
  if (a1) {
    return 6581861;
  }
  else {
    return 0x7472617473;
  }
}

uint64_t sub_25448D6A0()
{
  return sub_254527AB0();
}

uint64_t sub_25448D6E8()
{
  return sub_254527AB0();
}

uint64_t sub_25448D72C()
{
  return sub_25448D674(*v0);
}

uint64_t sub_25448D734@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25448F1A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25448D75C(uint64_t a1)
{
  unint64_t v2 = sub_25448DF8C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25448D798(uint64_t a1)
{
  unint64_t v2 = sub_25448DF8C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LedgerTransition.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3220);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  v10[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25448DF8C();
  sub_254527B00();
  char v12 = 0;
  uint64_t v8 = v10[3];
  sub_254527930();
  if (!v8)
  {
    char v11 = 1;
    sub_254527930();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t LedgerTransition.hashValue.getter()
{
  return sub_254527AB0();
}

uint64_t LedgerTransition.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3230);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25448DF8C();
  sub_254527AF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v20 = 0;
  uint64_t v9 = sub_254527830();
  uint64_t v11 = v10;
  char v19 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_254527830();
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v18 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v18;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25448DBD8@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void *sub_25448DBE4@<X0>(void *result@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = result[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  *a3 = *result;
  a3[1] = v3;
  a3[2] = v4;
  a3[3] = v5;
  return result;
}

uint64_t sub_25448DBF8()
{
  return sub_254527AB0();
}

uint64_t sub_25448DC80()
{
  swift_bridgeObjectRetain();
  sub_254527060();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_254527060();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25448DD04()
{
  return sub_254527AB0();
}

uint64_t sub_25448DD88@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return LedgerTransition.init(from:)(a1, a2);
}

uint64_t sub_25448DDA0(void *a1)
{
  return LedgerTransition.encode(to:)(a1);
}

uint64_t sub_25448DDC8()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_25448DDF8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(void *)(a3 + 8) = a2;
  *(void *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 24) = 0;
  return result;
}

uint64_t sub_25448DE08()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_25448DE14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_2545279B0();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = a1;
  *(unsigned char *)(a2 + 24) = 0;
  return result;
}

uint64_t sub_25448DE70(uint64_t a1)
{
  unint64_t v2 = sub_25448D560();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25448DEAC(uint64_t a1)
{
  unint64_t v2 = sub_25448D560();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t _s20LighthouseBackground16LedgerTransitionV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_2545279E0(), uint64_t result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_2545279E0();
    }
  }
  return result;
}

unint64_t sub_25448DF8C()
{
  unint64_t result = qword_269DF3228;
  if (!qword_269DF3228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3228);
  }
  return result;
}

uint64_t sub_25448DFE0()
{
  return MEMORY[0x263F8D348];
}

uint64_t sub_25448DFEC()
{
  return MEMORY[0x263F8D318];
}

uint64_t sub_25448DFF8()
{
  return MEMORY[0x263F8D320];
}

uint64_t sub_25448E004(void *a1)
{
  a1[1] = sub_25448E0F8(&qword_269DF3238, (void (*)(uint64_t))type metadata accessor for LedgerState);
  a1[2] = sub_25448E0F8(&qword_269DF3240, (void (*)(uint64_t))type metadata accessor for LedgerState);
  uint64_t result = sub_25448E0F8(&qword_269DF3248, (void (*)(uint64_t))type metadata accessor for LedgerState);
  a1[3] = result;
  return result;
}

uint64_t sub_25448E0B0()
{
  return sub_25448E0F8(&qword_269DF3250, (void (*)(uint64_t))type metadata accessor for LedgerState);
}

uint64_t sub_25448E0F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25448E140(void *a1)
{
  a1[1] = sub_25448E178();
  a1[2] = sub_25448E1CC();
  unint64_t result = sub_25448E220();
  a1[3] = result;
  return result;
}

unint64_t sub_25448E178()
{
  unint64_t result = qword_269DF3258;
  if (!qword_269DF3258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3258);
  }
  return result;
}

unint64_t sub_25448E1CC()
{
  unint64_t result = qword_269DF3260;
  if (!qword_269DF3260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3260);
  }
  return result;
}

unint64_t sub_25448E220()
{
  unint64_t result = qword_269DF3268;
  if (!qword_269DF3268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3268);
  }
  return result;
}

unint64_t sub_25448E278()
{
  unint64_t result = qword_269DF3270;
  if (!qword_269DF3270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3270);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for LedgerState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    char v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_254526D90();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for LedgerState(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_254526D90();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for LedgerState(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  char v7 = (char *)a2 + v5;
  uint64_t v8 = sub_254526D90();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for LedgerState(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  char v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_254526D90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for LedgerState(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_254526D90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for LedgerState(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_254526D90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for LedgerState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25448E67C);
}

uint64_t sub_25448E67C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_254526D90();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for LedgerState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25448E740);
}

uint64_t sub_25448E740(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_254526D90();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_25448E7E8()
{
  uint64_t result = sub_254526D90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for LedgerTransition(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for LedgerTransition()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for LedgerTransition(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for LedgerTransition(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for LedgerTransition(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LedgerTransition(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LedgerTransition(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LedgerTransition()
{
  return &type metadata for LedgerTransition;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for LedgerTransition.CodingKeys()
{
  return &type metadata for LedgerTransition.CodingKeys;
}

uint64_t destroy for LedgerTransitionCodingKey()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LedgerTransitionCodingKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LedgerTransitionCodingKey(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for LedgerTransitionCodingKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for LedgerTransitionCodingKey(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LedgerTransitionCodingKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LedgerTransitionCodingKey()
{
  return &type metadata for LedgerTransitionCodingKey;
}

uint64_t getEnumTagSinglePayload for XPCListenerType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s20LighthouseBackground16LedgerTransitionV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25448EDB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_25448EDD8(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_25448EDE0(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for LedgerState.CodingKeys()
{
  return &type metadata for LedgerState.CodingKeys;
}

unint64_t sub_25448EE00()
{
  unint64_t result = qword_269DF3288;
  if (!qword_269DF3288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3288);
  }
  return result;
}

unint64_t sub_25448EE58()
{
  unint64_t result = qword_269DF3290;
  if (!qword_269DF3290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3290);
  }
  return result;
}

unint64_t sub_25448EEB0()
{
  unint64_t result = qword_269DF3298;
  if (!qword_269DF3298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3298);
  }
  return result;
}

unint64_t sub_25448EF08()
{
  unint64_t result = qword_269DF32A0;
  if (!qword_269DF32A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF32A0);
  }
  return result;
}

unint64_t sub_25448EF60()
{
  unint64_t result = qword_269DF32A8;
  if (!qword_269DF32A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF32A8);
  }
  return result;
}

unint64_t sub_25448EFB8()
{
  unint64_t result = qword_269DF32B0;
  if (!qword_269DF32B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF32B0);
  }
  return result;
}

unint64_t sub_25448F010()
{
  unint64_t result = qword_269DF32B8;
  if (!qword_269DF32B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF32B8);
  }
  return result;
}

unint64_t sub_25448F068()
{
  unint64_t result = qword_269DF32C0;
  if (!qword_269DF32C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF32C0);
  }
  return result;
}

uint64_t sub_25448F0BC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x7865646E69 && a2 == 0xE500000000000000;
  if (v3 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2545279E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25448F1A8(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x7472617473 && a2 == 0xE500000000000000;
  if (v3 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6581861 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2545279E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

BOOL static XPCListenerType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t XPCListenerType.hash(into:)()
{
  return sub_254527A90();
}

void *static XPCListenerType.allCases.getter()
{
  return &unk_2703D4DD8;
}

uint64_t XPCListenerType.hashValue.getter()
{
  return sub_254527AB0();
}

void sub_25448F328(void *a1@<X8>)
{
  *a1 = &unk_2703D4E00;
}

uint64_t XPCListener.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void XPCListener.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

id XPCListener.queue.getter()
{
  return *(id *)(v0 + 40);
}

uint64_t XPCListener.connection.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_25448F384(char *a1, uint64_t a2, uint64_t a3, NSObject *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = sub_254527440();
  uint64_t v29 = *(void *)(v14 - 8);
  uint64_t v30 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v28 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_254527430();
  MEMORY[0x270FA5388](v16);
  v27[3] = (char *)v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_254526EA0();
  MEMORY[0x270FA5388](v18 - 8);
  char v19 = *a1;
  *(unsigned char *)(v7 + 32) = *a1;
  *(void *)(v7 + 56) = a5;
  *(void *)(v7 + 64) = a6;
  uint64_t v31 = a2;
  if (a4)
  {
    *(void *)(v7 + 40) = a4;
    uint64_t result = swift_retain();
    uint64_t v21 = a4;
    if (v19)
    {
LABEL_3:
      uint64_t v22 = a4;
      swift_bridgeObjectRelease();
      *(void *)(v7 + 16) = 0x756F6D796E6F6E61;
      *(void *)(v7 + 24) = 0xE900000000000073;
      mach_service = xpc_connection_create(0, v22);
LABEL_7:
      *(void *)(v7 + 48) = mach_service;
      uint64_t v36 = sub_254490018;
      uint64_t v37 = v7;
      unint64_t aBlock = MEMORY[0x263EF8330];
      unint64_t v33 = 1107296256;
      uint64_t v34 = sub_2544CF924;
      uint64_t v35 = &block_descriptor;
      uint64_t v25 = _Block_copy(&aBlock);
      swift_unknownObjectRetain();
      swift_retain();
      swift_release();
      xpc_connection_set_event_handler(mach_service, v25);
      _Block_release(v25);
      swift_unknownObjectRelease();
      char v26 = (_xpc_connection_s *)swift_unknownObjectRetain();
      xpc_connection_activate(v26);
      swift_unknownObjectRelease();

      swift_release();
      return v7;
    }
  }
  else
  {
    unint64_t aBlock = 0;
    unint64_t v33 = 0xE000000000000000;
    swift_retain();
    sub_254527630();
    swift_bridgeObjectRelease();
    unint64_t aBlock = 0xD00000000000001DLL;
    unint64_t v33 = 0x8000000254532E70;
    swift_bridgeObjectRetain();
    sub_254527080();
    swift_bridgeObjectRelease();
    v27[1] = v33;
    v27[2] = aBlock;
    v27[0] = sub_25448FF3C();
    sub_254526E90();
    unint64_t aBlock = MEMORY[0x263F8EE78];
    sub_25448FF7C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF32F0);
    sub_25448FFD4(&qword_269DF32F8, &qword_269DF32F0);
    sub_254527560();
    (*(void (**)(char *, void, uint64_t))(v29 + 104))(v28, *MEMORY[0x263F8F130], v30);
    uint64_t result = sub_254527450();
    uint64_t v21 = result;
    *(void *)(v7 + 40) = result;
    if (*(unsigned char *)(v7 + 32)) {
      goto LABEL_3;
    }
  }
  if (a3)
  {
    *(void *)(v7 + 16) = v31;
    *(void *)(v7 + 24) = a3;
    uint64_t v24 = (const char *)(sub_254527040() + 32);
    uint64_t v22 = a4;
    mach_service = xpc_connection_create_mach_service(v24, v21, 1uLL);
    swift_release();
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

void sub_25448F7C8(_xpc_connection_s *a1, uint64_t a2)
{
  uint64_t v4 = MEMORY[0x25A27CC00]();
  if (sub_254526E20() == v4)
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t))(a2 + 56);
    uint64_t v13 = *(void **)(a2 + 40);
    type metadata accessor for XPCIncomingConnection();
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = a1;
    *(void *)(v14 + 24) = v13;
    swift_unknownObjectRetain();
    uint64_t v15 = v13;
    uint64_t v16 = v12(v14);
    swift_release();
    if (v16)
    {
      swift_release();
      xpc_connection_set_target_queue(a1, v15);
      xpc_connection_activate(a1);
    }
    else
    {
      xpc_connection_cancel(a1);
    }
  }
  else if (sub_254526E10() != v4)
  {
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_254526E00();
    __swift_project_value_buffer(v5, (uint64_t)qword_26B267340);
    swift_unknownObjectRetain_n();
    uint64_t v6 = sub_254526DE0();
    os_log_type_t v7 = sub_254527420();
    if (os_log_type_enabled(v6, v7))
    {
      int v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v17 = v9;
      *(_DWORD *)int v8 = 136315138;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B266E20);
      uint64_t v10 = sub_254527030();
      sub_254498B68(v10, v11, &v17);
      sub_254527500();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_254486000, v6, v7, "Received error or other non-connection type in handler for listener: %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A27C9E0](v9, -1, -1);
      MEMORY[0x25A27C9E0](v8, -1, -1);
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
  }
}

uint64_t XPCListener.__allocating_init(serviceName:queue:handler:)(uint64_t a1, uint64_t a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  char v11 = 0;
  type metadata accessor for XPCListener();
  swift_allocObject();
  return sub_25448F384(&v11, a1, a2, a3, a4, a5);
}

uint64_t type metadata accessor for XPCListener()
{
  return self;
}

uint64_t XPCListener.__allocating_init(queue:handler:)(NSObject *a1, uint64_t a2, uint64_t a3)
{
  char v7 = 1;
  type metadata accessor for XPCListener();
  swift_allocObject();
  return sub_25448F384(&v7, 0, 0, a1, a2, a3);
}

void sub_25448FB98()
{
  xpc_connection_cancel(*(xpc_connection_t *)(v0 + 48));
}

xpc_endpoint_t sub_25448FBA0()
{
  return xpc_endpoint_create(*(xpc_connection_t *)(v0 + 48));
}

uint64_t XPCListener.deinit()
{
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t XPCListener.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0228](v0, 72, 7);
}

uint64_t XPCListener.description.getter()
{
  sub_254527630();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "<xpc listener ");
  swift_bridgeObjectRetain();
  sub_254527080();
  swift_bridgeObjectRelease();
  sub_254527080();
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B266E20);
  sub_254527030();
  sub_254527080();
  swift_bridgeObjectRelease();
  sub_254527080();
  return v1[0];
}

unint64_t sub_25448FD24()
{
  unint64_t result = qword_269DF32C8;
  if (!qword_269DF32C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF32C8);
  }
  return result;
}

uint64_t sub_25448FD78()
{
  return sub_25448FFD4(&qword_269DF32D0, &qword_269DF32D8);
}

uint64_t sub_25448FDB4()
{
  return XPCListener.description.getter();
}

unsigned char *storeEnumTagSinglePayload for XPCListenerType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25448FEA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCListenerType()
{
  return &type metadata for XPCListenerType;
}

uint64_t method lookup function for XPCListener(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for XPCListener);
}

uint64_t dispatch thunk of XPCListener.invalidate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of XPCListener.endpoint.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

unint64_t sub_25448FF3C()
{
  unint64_t result = qword_269DF32E0;
  if (!qword_269DF32E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269DF32E0);
  }
  return result;
}

unint64_t sub_25448FF7C()
{
  unint64_t result = qword_269DF32E8;
  if (!qword_269DF32E8)
  {
    sub_254527430();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF32E8);
  }
  return result;
}

uint64_t sub_25448FFD4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_254490018(_xpc_connection_s *a1)
{
  sub_25448F7C8(a1, v1);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

LighthouseBackground::TaskType_optional __swiftcall TaskType.init(rawValue:)(Swift::String rawValue)
{
  return (LighthouseBackground::TaskType_optional)sub_254491548(v1);
}

void *static TaskType.allCases.getter()
{
  return &unk_2703D4E78;
}

uint64_t TaskType.rawValue.getter()
{
  if (*v0) {
    return 0x5463696D616E7964;
  }
  else {
    return 0x6154636974617473;
  }
}

uint64_t sub_254490098(char *a1, char *a2)
{
  return sub_2544901B4(*a1, *a2);
}

uint64_t sub_2544900A4(char a1, char a2)
{
  if (*(void *)&aTispr_0[8 * a1] == *(void *)&aTispr_0[8 * a2] && qword_25452A208[a1] == qword_25452A208[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_2545279E0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_25449012C(char a1, char a2)
{
  if (*(void *)&aTaskstattasker[8 * a1] == *(void *)&aTaskstattasker[8 * a2]
    && *(void *)&aTaskstattasker[8 * a1 + 32] == *(void *)&aTaskstattasker[8 * a2 + 32])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_2545279E0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_2544901B4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x5463696D616E7964;
  }
  else {
    uint64_t v3 = 0x6154636974617473;
  }
  if (v2) {
    unint64_t v4 = 0xEA00000000006B73;
  }
  else {
    unint64_t v4 = 0xEB000000006B7361;
  }
  if (a2) {
    uint64_t v5 = 0x5463696D616E7964;
  }
  else {
    uint64_t v5 = 0x6154636974617473;
  }
  if (a2) {
    unint64_t v6 = 0xEB000000006B7361;
  }
  else {
    unint64_t v6 = 0xEA00000000006B73;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_2545279E0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_254490264(char a1, char a2)
{
  if (*(void *)&aNone_1[8 * a1] == *(void *)&aNone_1[8 * a2] && qword_25452A288[a1] == qword_25452A288[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_2545279E0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_2544902EC(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000010;
  unint64_t v3 = 0x8000000254532AD0;
  uint64_t v4 = a1;
  uint64_t v5 = 0xD000000000000010;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x616E6F6974617453;
      unint64_t v3 = 0xEA00000000007972;
      break;
    case 2:
      unint64_t v3 = 0xE700000000000000;
      unsigned int v6 = 1802264919;
      goto LABEL_7;
    case 3:
      unint64_t v3 = 0xE700000000000000;
      unsigned int v6 = 1852732754;
      goto LABEL_7;
    case 4:
      unint64_t v3 = 0xE700000000000000;
      unsigned int v6 = 1818458435;
LABEL_7:
      uint64_t v5 = v6 | 0x676E6900000000;
      break;
    case 5:
      uint64_t v5 = 0x69746F6D6F747541;
      unint64_t v3 = 0xEA00000000006576;
      break;
    case 6:
      break;
    case 7:
      uint64_t v5 = 0xD000000000000014;
      unint64_t v3 = 0x8000000254532AF0;
      break;
    default:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1701736270;
      break;
  }
  unint64_t v7 = 0x8000000254532AD0;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xEA00000000007972;
      if (v5 == 0x616E6F6974617453) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      unint64_t v7 = 0xE700000000000000;
      unsigned int v8 = 1802264919;
      goto LABEL_18;
    case 3:
      unint64_t v7 = 0xE700000000000000;
      unsigned int v8 = 1852732754;
      goto LABEL_18;
    case 4:
      unint64_t v7 = 0xE700000000000000;
      unsigned int v8 = 1818458435;
LABEL_18:
      if (v5 != (v8 | 0x676E6900000000)) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      unint64_t v2 = 0x69746F6D6F747541;
      unint64_t v7 = 0xEA00000000006576;
      goto LABEL_21;
    case 6:
LABEL_21:
      if (v5 == v2) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 7:
      unint64_t v7 = 0x8000000254532AF0;
      if (v5 != 0xD000000000000014) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
      unint64_t v7 = 0xE400000000000000;
      if (v5 != 1701736270) {
        goto LABEL_25;
      }
LABEL_22:
      if (v3 == v7) {
        char v9 = 1;
      }
      else {
LABEL_25:
      }
        char v9 = sub_2545279E0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_254490544(char a1, char a2)
{
  if (*(void *)&aStart_2[8 * a1] == *(void *)&aStart_2[8 * a2]
    && *(void *)&aFinished_1[8 * a1 + 8] == *(void *)&aFinished_1[8 * a2 + 8])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_2545279E0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_2544905CC(char a1, char a2)
{
  if (qword_25452A300[a1] == qword_25452A300[a2] && qword_25452A328[a1] == qword_25452A328[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_2545279E0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_254490654(char a1, char a2)
{
  if (*(void *)&aNone_2[8 * a1] == *(void *)&aNone_2[8 * a2]
    && *(void *)&aUserinit[8 * a1 + 8] == *(void *)&aUserinit[8 * a2 + 8])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_2545279E0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_2544906DC(char a1, char a2)
{
  unint64_t v3 = 0xD000000000000030;
  unint64_t v4 = 0x8000000254532BF0;
  switch(a1)
  {
    case 1:
      uint64_t v5 = "com.apple.LighthouseLedger.TaskStatusTelemetry";
      goto LABEL_5;
    case 2:
      unint64_t v3 = 0xD00000000000002DLL;
      unsigned int v6 = "com.apple.LighthouseLedger.TaskErrorTelemetry";
      goto LABEL_9;
    case 3:
      uint64_t v5 = "com.apple.LighthouseLedger.TaskCustomTelemetry";
LABEL_5:
      unint64_t v4 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      unint64_t v3 = 0xD00000000000002ELL;
      break;
    case 4:
      unint64_t v3 = 0xD00000000000002CLL;
      unsigned int v6 = "com.apple.LighthouseLedger.PushTaskTelemetry";
      goto LABEL_9;
    case 5:
      unint64_t v3 = 0xD000000000000025;
      unsigned int v6 = "com.apple.MLHost.CloudWorkerTelemetry";
      goto LABEL_9;
    case 6:
      unint64_t v3 = 0xD00000000000002BLL;
      unsigned int v6 = "com.apple.LighthouseLedger.DediscoTelemetry";
LABEL_9:
      unint64_t v4 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xD000000000000030;
  unint64_t v8 = 0x8000000254532BF0;
  switch(a2)
  {
    case 1:
      char v9 = "com.apple.LighthouseLedger.TaskStatusTelemetry";
      goto LABEL_14;
    case 2:
      unint64_t v10 = 0xD00000000000002DLL;
      char v11 = "com.apple.LighthouseLedger.TaskErrorTelemetry";
      goto LABEL_20;
    case 3:
      char v9 = "com.apple.LighthouseLedger.TaskCustomTelemetry";
LABEL_14:
      unint64_t v8 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      unint64_t v7 = 0xD00000000000002ELL;
      goto LABEL_15;
    case 4:
      unint64_t v10 = 0xD00000000000002CLL;
      char v11 = "com.apple.LighthouseLedger.PushTaskTelemetry";
      goto LABEL_20;
    case 5:
      unint64_t v10 = 0xD000000000000025;
      char v11 = "com.apple.MLHost.CloudWorkerTelemetry";
      goto LABEL_20;
    case 6:
      unint64_t v10 = 0xD00000000000002BLL;
      char v11 = "com.apple.LighthouseLedger.DediscoTelemetry";
LABEL_20:
      unint64_t v8 = (unint64_t)(v11 - 32) | 0x8000000000000000;
      if (v3 == v10) {
        goto LABEL_21;
      }
      goto LABEL_23;
    default:
LABEL_15:
      if (v3 != v7) {
        goto LABEL_23;
      }
LABEL_21:
      if (v4 == v8) {
        char v12 = 1;
      }
      else {
LABEL_23:
      }
        char v12 = sub_2545279E0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12 & 1;
  }
}

uint64_t sub_2544908CC(char a1, char a2)
{
  if (*(void *)&aDefaultpallpai[8 * a1] == *(void *)&aDefaultpallpai[8 * a2]
    && *(void *)&aAired[8 * a1] == *(void *)&aAired[8 * a2])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_2545279E0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_254490954(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0x8000000254532D50;
  int v3 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v4 = 0xD000000000000016;
    }
    else {
      unint64_t v4 = 0xD000000000000011;
    }
    if (v3 == 1) {
      unint64_t v5 = 0x8000000254532D70;
    }
    else {
      unint64_t v5 = 0x8000000254532D90;
    }
    int v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1) {
        unint64_t v7 = 0xD000000000000016;
      }
      else {
        unint64_t v7 = 0xD000000000000011;
      }
      if (v6 == 1) {
        unint64_t v2 = 0x8000000254532D70;
      }
      else {
        unint64_t v2 = 0x8000000254532D90;
      }
      if (v4 != v7) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xD000000000000019;
    unint64_t v5 = 0x8000000254532D50;
    int v6 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  if (v4 != 0xD000000000000019)
  {
LABEL_21:
    char v8 = sub_2545279E0();
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v2) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_254490A54(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 1819047280;
  }
  else {
    uint64_t v2 = 1752397168;
  }
  if (a2) {
    uint64_t v3 = 1819047280;
  }
  else {
    uint64_t v3 = 1752397168;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_2545279E0();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_254490AC4(char a1, char a2)
{
  if (*(void *)&aCyclecomcyclef[8 * a1] == *(void *)&aCyclecomcyclef[8 * a2]
    && qword_25452A3F0[a1] == qword_25452A3F0[a2])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_2545279E0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_254490B4C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xD000000000000014;
  unint64_t v3 = 0x8000000254532920;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD00000000000001ELL;
    }
    else {
      unint64_t v5 = 0xD000000000000023;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x8000000254532940;
    }
    else {
      unint64_t v6 = 0x8000000254532960;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0xD000000000000014;
  unint64_t v6 = 0x8000000254532920;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v2 = 0xD00000000000001ELL;
    }
    else {
      unint64_t v2 = 0xD000000000000023;
    }
    if (v7 == 1) {
      unint64_t v3 = 0x8000000254532940;
    }
    else {
      unint64_t v3 = 0x8000000254532960;
    }
  }
LABEL_15:
  if (v5 == v2 && v6 == v3) {
    char v8 = 1;
  }
  else {
    char v8 = sub_2545279E0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_254490C4C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x706D6F436B736174;
  }
  else {
    uint64_t v3 = 0x656863536B736174;
  }
  if (v2) {
    unint64_t v4 = 0xED000064656C7564;
  }
  else {
    unint64_t v4 = 0xED0000646574656CLL;
  }
  if (a2) {
    uint64_t v5 = 0x706D6F436B736174;
  }
  else {
    uint64_t v5 = 0x656863536B736174;
  }
  if (a2) {
    unint64_t v6 = 0xED0000646574656CLL;
  }
  else {
    unint64_t v6 = 0xED000064656C7564;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_2545279E0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

BOOL sub_254490D08(char a1, char a2)
{
  return dbl_25452A420[a1] == dbl_25452A420[a2];
}

uint64_t sub_254490D2C(char a1, char a2)
{
  if (*(void *)&aMessagefmessag[8 * a1] == *(void *)&aMessagefmessag[8 * a2]
    && *(void *)&aMessagefmessag[8 * a1 + 32] == *(void *)&aMessagefmessag[8 * a2 + 32])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_2545279E0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_254490DB4(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000012;
  unint64_t v3 = 0x8000000254532A00;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000012;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xEB0000000064696CLL;
      unint64_t v5 = 0x61766E496B736174;
      break;
    case 2:
      unint64_t v3 = 0xEB00000000676E69;
      unint64_t v5 = 0x6E6E75526B736174;
      break;
    case 3:
      unint64_t v3 = 0xEB00000000676E69;
      unint64_t v5 = 0x646E65506B736174;
      break;
    case 4:
      unint64_t v3 = 0xEF726F727245676ELL;
      unint64_t v5 = 0x696C756465686373;
      break;
    default:
      break;
  }
  unint64_t v6 = 0x8000000254532A00;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEB0000000064696CLL;
      if (v5 == 0x61766E496B736174) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xEB00000000676E69;
      if (v5 != 0x6E6E75526B736174) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xEB00000000676E69;
      unint64_t v2 = 0x646E65506B736174;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xEF726F727245676ELL;
      if (v5 != 0x696C756465686373) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_2545279E0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_254490FC0(char a1, char a2)
{
  if (*(void *)&aNNRc[8 * a1] == *(void *)&aNNRc[8 * a2]
    && *(void *)&aDCCDCFFFN[8 * a1 + 24] == *(void *)&aDCCDCFFFN[8 * a2 + 24])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_2545279E0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_254491048(char a1, char a2)
{
  if (qword_25452A510[a1] == qword_25452A510[a2] && qword_25452A540[a1] == qword_25452A540[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_2545279E0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_2544910D0(char a1, char a2)
{
  unint64_t v3 = 0xD00000000000001ALL;
  unint64_t v4 = 0x8000000254532870;
  switch(a1)
  {
    case 1:
      unint64_t v4 = 0xEC00000064657669;
      unint64_t v3 = 0x656365526B736154;
      break;
    case 2:
      break;
    case 3:
      unint64_t v5 = "TaskFailedToRegister";
      goto LABEL_6;
    case 4:
      unint64_t v5 = "TaskParametersStored";
LABEL_6:
      unint64_t v4 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      unint64_t v3 = 0xD000000000000014;
      break;
    case 5:
      unint64_t v3 = 0xD00000000000001BLL;
      unint64_t v4 = 0x80000002545328D0;
      break;
    case 6:
      unint64_t v4 = 0xEB00000000646574;
      unint64_t v3 = 0x7261745320746F4ELL;
      break;
    case 7:
      unint64_t v4 = 0xE700000000000000;
      unint64_t v3 = 0x676E696E6E7552;
      break;
    case 8:
      unint64_t v4 = 0xE800000000000000;
      unint64_t v3 = 0x6465727265666544;
      break;
    case 9:
      unint64_t v4 = 0xE900000000000064;
      unint64_t v3 = 0x6574656C706D6F43;
      break;
    case 10:
      unint64_t v4 = 0xE600000000000000;
      unint64_t v3 = 0x64656C696146;
      break;
    default:
      unint64_t v4 = 0xEB00000000646574;
      unint64_t v3 = 0x616572436B736154;
      break;
  }
  unint64_t v6 = 0xD00000000000001ALL;
  unint64_t v7 = 0x8000000254532870;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xEC00000064657669;
      if (v3 == 0x656365526B736154) {
        goto LABEL_32;
      }
      goto LABEL_35;
    case 2:
      goto LABEL_31;
    case 3:
      char v8 = "TaskFailedToRegister";
      goto LABEL_20;
    case 4:
      char v8 = "TaskParametersStored";
LABEL_20:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      if (v3 != 0xD000000000000014) {
        goto LABEL_35;
      }
      goto LABEL_32;
    case 5:
      unint64_t v7 = 0x80000002545328D0;
      if (v3 != 0xD00000000000001BLL) {
        goto LABEL_35;
      }
      goto LABEL_32;
    case 6:
      unint64_t v7 = 0xEB00000000646574;
      if (v3 != 0x7261745320746F4ELL) {
        goto LABEL_35;
      }
      goto LABEL_32;
    case 7:
      unint64_t v7 = 0xE700000000000000;
      if (v3 != 0x676E696E6E7552) {
        goto LABEL_35;
      }
      goto LABEL_32;
    case 8:
      unint64_t v7 = 0xE800000000000000;
      if (v3 != 0x6465727265666544) {
        goto LABEL_35;
      }
      goto LABEL_32;
    case 9:
      unint64_t v7 = 0xE900000000000064;
      if (v3 != 0x6574656C706D6F43) {
        goto LABEL_35;
      }
      goto LABEL_32;
    case 10:
      unint64_t v7 = 0xE600000000000000;
      unint64_t v6 = 0x64656C696146;
LABEL_31:
      if (v3 == v6) {
        goto LABEL_32;
      }
      goto LABEL_35;
    default:
      unint64_t v7 = 0xEB00000000646574;
      if (v3 != 0x616572436B736154) {
        goto LABEL_35;
      }
LABEL_32:
      if (v4 == v7) {
        char v9 = 1;
      }
      else {
LABEL_35:
      }
        char v9 = sub_2545279E0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_254491430()
{
  return sub_25451A1E8();
}

uint64_t sub_254491438()
{
  return sub_25451AAC4();
}

uint64_t sub_254491440()
{
  return sub_25451BED0();
}

LighthouseBackground::TaskType_optional sub_254491448(Swift::String *a1)
{
  return TaskType.init(rawValue:)(*a1);
}

uint64_t sub_254491454@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = TaskType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_25449147C(void *a1@<X8>)
{
  *a1 = &unk_2703D4EA0;
}

uint64_t sub_25449148C()
{
  return sub_254527170();
}

uint64_t sub_2544914EC()
{
  return sub_254527150();
}

LighthouseBackground::DynamicTaskSource_optional __swiftcall DynamicTaskSource.init(rawValue:)(Swift::String rawValue)
{
  return (LighthouseBackground::DynamicTaskSource_optional)sub_254491548(v1);
}

uint64_t sub_254491548@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_254527790();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void *static DynamicTaskSource.allCases.getter()
{
  return &unk_2703D4F18;
}

uint64_t DynamicTaskSource.rawValue.getter()
{
  if (*v0) {
    return 1819047280;
  }
  else {
    return 1752397168;
  }
}

uint64_t sub_2544915D8(char *a1, char *a2)
{
  return sub_254490A54(*a1, *a2);
}

uint64_t sub_2544915E4()
{
  return sub_25451A278();
}

uint64_t sub_2544915EC()
{
  return sub_25451AFA0();
}

uint64_t sub_2544915F4()
{
  return sub_25451B95C();
}

LighthouseBackground::DynamicTaskSource_optional sub_2544915FC(Swift::String *a1)
{
  return DynamicTaskSource.init(rawValue:)(*a1);
}

uint64_t sub_254491608@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DynamicTaskSource.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_254491630(void *a1@<X8>)
{
  *a1 = &unk_2703D4F40;
}

uint64_t sub_254491640()
{
  return sub_254527170();
}

uint64_t sub_2544916A0()
{
  return sub_254527150();
}

uint64_t static TaskStatus.isTerminated(_:)(unsigned char *a1)
{
  int v1 = *a1;
  char v2 = 1;
  switch(*a1)
  {
    case 9:
      goto LABEL_6;
    default:
      char v3 = sub_2545279E0();
      swift_bridgeObjectRelease();
      if (v3)
      {
        char v2 = 1;
      }
      else
      {
        char v2 = 1;
        switch(v1)
        {
          case 0:
          case 1:
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
          case 8:
          case 9:
            char v2 = sub_2545279E0();
            break;
          case 10:
            break;
          default:
            JUMPOUT(0);
        }
LABEL_6:
        swift_bridgeObjectRelease();
      }
      return v2 & 1;
  }
}

void sub_254491A2C()
{
  qword_269DF3300 = (uint64_t)&unk_2703D4F68;
}

uint64_t static TaskStatus.coreStates.getter()
{
  if (qword_269DF2EF8 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

LighthouseBackground::TaskStatus_optional __swiftcall TaskStatus.init(rawValue:)(Swift::String rawValue)
{
  char v2 = v1;
  unint64_t v3 = sub_254527790();
  result.value = swift_bridgeObjectRelease();
  char v5 = 11;
  if (v3 < 0xB) {
    char v5 = v3;
  }
  *char v2 = v5;
  return result;
}

void *static TaskStatus.allCases.getter()
{
  return &unk_2703D50B8;
}

unint64_t TaskStatus.rawValue.getter()
{
  unint64_t result = 0xD00000000000001ALL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x656365526B736154;
      break;
    case 2:
      return result;
    case 3:
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 6:
      unint64_t result = 0x7261745320746F4ELL;
      break;
    case 7:
      unint64_t result = 0x676E696E6E7552;
      break;
    case 8:
      unint64_t result = 0x6465727265666544;
      break;
    case 9:
      unint64_t result = 0x6574656C706D6F43;
      break;
    case 0xA:
      unint64_t result = 0x64656C696146;
      break;
    default:
      unint64_t result = 0x616572436B736154;
      break;
  }
  return result;
}

uint64_t sub_254491C64()
{
  return sub_254527AB0();
}

uint64_t sub_254491CAC()
{
  return sub_25451B384();
}

uint64_t sub_254491CB4()
{
  return sub_254527AB0();
}

LighthouseBackground::TaskStatus_optional sub_254491CF8(Swift::String *a1)
{
  return TaskStatus.init(rawValue:)(*a1);
}

unint64_t sub_254491D04@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = TaskStatus.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_254491D2C(void *a1@<X8>)
{
  *a1 = &unk_2703D50B8;
}

uint64_t sub_254491D3C(char *a1, char *a2)
{
  return sub_2544910D0(*a1, *a2);
}

uint64_t sub_254491D48()
{
  return sub_254527170();
}

uint64_t sub_254491DA8()
{
  return sub_254527150();
}

uint64_t PushMetadata.topic.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PushMetadata.channelID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PushMetadata.pushType.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PushMetadata.pushType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*PushMetadata.pushType.modify())()
{
  return nullsub_1;
}

uint64_t PushMetadata.pushPriority.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PushMetadata.creationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PushMetadata(0) + 32);
  uint64_t v4 = sub_254526D90();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PushMetadata(uint64_t a1)
{
  return sub_2544991E0(a1, (uint64_t *)&unk_269DF3500);
}

uint64_t PushMetadata.init(topic:channelID:pushType:pushPriority:creationDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  unint64_t v10 = (char *)a9 + *(int *)(type metadata accessor for PushMetadata(0) + 32);
  uint64_t v11 = sub_254526D90();
  char v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);

  return v12(v10, a10, v11);
}

uint64_t sub_254492034(char a1)
{
  return *(void *)&aTopic_1[8 * a1];
}

uint64_t sub_254492054()
{
  return sub_254492034(*v0);
}

uint64_t sub_25449205C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544A0248(a1, a2);
  *a3 = result;
  return result;
}

void sub_254492084(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_254492090(uint64_t a1)
{
  unint64_t v2 = sub_254492338();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544920CC(uint64_t a1)
{
  unint64_t v2 = sub_254492338();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PushMetadata.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3308);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254492338();
  sub_254527B00();
  v8[15] = 0;
  sub_254527930();
  if (!v1)
  {
    v8[14] = 1;
    sub_254527930();
    v8[13] = 2;
    sub_254527930();
    v8[12] = 3;
    sub_254527930();
    type metadata accessor for PushMetadata(0);
    v8[11] = 4;
    sub_254526D90();
    sub_254492804((unint64_t *)&unk_26B266FD8, MEMORY[0x263F07490]);
    sub_254527970();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_254492338()
{
  unint64_t result = qword_269DF3310;
  if (!qword_269DF3310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3310);
  }
  return result;
}

uint64_t PushMetadata.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v3 = sub_254526D90();
  uint64_t v22 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3318);
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v25 = v6;
  MEMORY[0x270FA5388](v6);
  char v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PushMetadata(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (void *)((char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254492338();
  char v26 = v8;
  char v12 = v27;
  sub_254527AF0();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v13 = (uint64_t)a1;
  char v27 = v5;
  uint64_t v14 = v24;
  uint64_t v15 = v25;
  char v32 = 0;
  *uint64_t v11 = sub_254527830();
  v11[1] = v16;
  char v31 = 1;
  v11[2] = sub_254527830();
  v11[3] = v17;
  char v30 = 2;
  v21[1] = 0;
  v11[4] = sub_254527830();
  v11[5] = v18;
  char v29 = 3;
  v11[6] = sub_254527830();
  v11[7] = v19;
  char v28 = 4;
  sub_254492804(&qword_26B266BE0, MEMORY[0x263F07490]);
  sub_254527870();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v26, v15);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))((char *)v11 + *(int *)(v9 + 32), v27, v3);
  sub_2544938DC((uint64_t)v11, v23, type metadata accessor for PushMetadata);
  __swift_destroy_boxed_opaque_existential_1(v13);
  return sub_254493944((uint64_t)v11, type metadata accessor for PushMetadata);
}

uint64_t sub_254492804(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25449284C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PushMetadata.init(from:)(a1, a2);
}

uint64_t sub_254492864(void *a1)
{
  return PushMetadata.encode(to:)(a1);
}

uint64_t PullMetadata.creationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_254526D90();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t PullMetadata.init(creationDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_254526D90();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);

  return v5(a2, a1, v4);
}

uint64_t sub_254492950()
{
  return 1;
}

uint64_t sub_254492958()
{
  return sub_254527AB0();
}

uint64_t sub_25449299C()
{
  return sub_254527A90();
}

uint64_t sub_2544929C4()
{
  return sub_254527AB0();
}

uint64_t sub_254492A08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544A0468(a1, a2);
  *a3 = result & 1;
  return result;
}

void sub_254492A34(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_254492A40(uint64_t a1)
{
  unint64_t v2 = sub_254492C2C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254492A7C(uint64_t a1)
{
  unint64_t v2 = sub_254492C2C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PullMetadata.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3320);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254492C2C();
  sub_254527B00();
  sub_254526D90();
  sub_254492804((unint64_t *)&unk_26B266FD8, MEMORY[0x263F07490]);
  sub_254527970();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_254492C2C()
{
  unint64_t result = qword_269DF3328;
  if (!qword_269DF3328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3328);
  }
  return result;
}

uint64_t PullMetadata.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = sub_254526D90();
  uint64_t v14 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v17 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3330);
  uint64_t v16 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PullMetadata(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254492C2C();
  sub_254527AF0();
  if (!v2)
  {
    sub_254492804(&qword_26B266BE0, MEMORY[0x263F07490]);
    sub_254527870();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v6);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v17, v4);
    sub_254499218((uint64_t)v11, v15, type metadata accessor for PullMetadata);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t type metadata accessor for PullMetadata(uint64_t a1)
{
  return sub_2544991E0(a1, (uint64_t *)&unk_269DF3510);
}

uint64_t sub_254492F34@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PullMetadata.init(from:)(a1, a2);
}

uint64_t sub_254492F4C(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3320);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254492C2C();
  sub_254527B00();
  sub_254526D90();
  sub_254492804((unint64_t *)&unk_26B266FD8, MEMORY[0x263F07490]);
  sub_254527970();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t TaskMetadata.pushMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_254493CFC(v1, a1, &qword_269DF3338);
}

uint64_t TaskMetadata.pullMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2544974E8(type metadata accessor for TaskMetadata, (uint64_t)&unk_269DF3340, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_254493CFC, a1);
}

uint64_t type metadata accessor for TaskMetadata(uint64_t a1)
{
  return sub_2544991E0(a1, (uint64_t *)&unk_269DF3520);
}

uint64_t TaskMetadata.init(pushMetadata:pullMetadata:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_254493190(a1, a3, &qword_269DF3338);
  uint64_t v5 = type metadata accessor for TaskMetadata(0);
  return sub_254493190(a2, a3 + *(int *)(v5 + 20), &qword_269DF3340);
}

uint64_t sub_254493190(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2544931F4(char a1)
{
  if (a1) {
    return 0x6174654D6C6C7570;
  }
  else {
    return 0x6174654D68737570;
  }
}

uint64_t sub_25449322C()
{
  return sub_2544931F4(*v0);
}

uint64_t sub_254493234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544A0500(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25449325C(uint64_t a1)
{
  unint64_t v2 = sub_2544934D4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254493298(uint64_t a1)
{
  unint64_t v2 = sub_2544934D4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TaskMetadata.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3348);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544934D4();
  sub_254527B00();
  v8[15] = 0;
  type metadata accessor for PushMetadata(0);
  sub_254492804(&qword_269DF3358, (void (*)(uint64_t))type metadata accessor for PushMetadata);
  sub_254527910();
  if (!v1)
  {
    type metadata accessor for TaskMetadata(0);
    v8[14] = 1;
    type metadata accessor for PullMetadata(0);
    sub_254492804(&qword_269DF3360, (void (*)(uint64_t))type metadata accessor for PullMetadata);
    sub_254527910();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2544934D4()
{
  unint64_t result = qword_269DF3350;
  if (!qword_269DF3350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3350);
  }
  return result;
}

uint64_t TaskMetadata.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3340);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3338);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v23 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3368);
  uint64_t v22 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TaskMetadata(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544934D4();
  sub_254527AF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v20 = v11;
  uint64_t v14 = v22;
  uint64_t v15 = (uint64_t)v13;
  type metadata accessor for PushMetadata(0);
  char v26 = 0;
  sub_254492804(&qword_269DF3370, (void (*)(uint64_t))type metadata accessor for PushMetadata);
  uint64_t v16 = (uint64_t)v23;
  uint64_t v17 = v24;
  sub_254527810();
  sub_254493190(v16, v15, &qword_269DF3338);
  type metadata accessor for PullMetadata(0);
  char v25 = 1;
  sub_254492804(&qword_269DF3378, (void (*)(uint64_t))type metadata accessor for PullMetadata);
  sub_254527810();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v17);
  sub_254493190((uint64_t)v6, v15 + *(int *)(v20 + 20), &qword_269DF3340);
  sub_2544938DC(v15, v21, type metadata accessor for TaskMetadata);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_254493944(v15, type metadata accessor for TaskMetadata);
}

uint64_t sub_2544938DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_254493944(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2544939A4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TaskMetadata.init(from:)(a1, a2);
}

uint64_t sub_2544939BC(void *a1)
{
  return TaskMetadata.encode(to:)(a1);
}

uint64_t TaskDefinition.taskRequest.getter@<X0>(_OWORD *a1@<X8>)
{
  long long v2 = v1[15];
  long long v3 = v1[13];
  long long v37 = v1[14];
  long long v38 = v2;
  long long v4 = v1[15];
  long long v5 = v1[17];
  long long v39 = v1[16];
  long long v6 = v39;
  long long v40 = v5;
  long long v7 = v1[11];
  long long v9 = v1[9];
  long long v33 = v1[10];
  long long v8 = v33;
  long long v34 = v7;
  long long v10 = v1[11];
  long long v11 = v1[13];
  long long v35 = v1[12];
  long long v12 = v35;
  long long v36 = v11;
  long long v13 = v1[7];
  long long v15 = v1[5];
  long long v29 = v1[6];
  long long v14 = v29;
  long long v30 = v13;
  long long v16 = v1[7];
  long long v17 = v1[9];
  long long v31 = v1[8];
  long long v18 = v31;
  long long v32 = v17;
  long long v19 = v1[3];
  v26[0] = v1[2];
  v26[1] = v19;
  long long v20 = v1[5];
  long long v22 = v1[2];
  long long v21 = v1[3];
  long long v27 = v1[4];
  long long v23 = v27;
  long long v28 = v20;
  a1[12] = v37;
  a1[13] = v4;
  long long v24 = v1[17];
  a1[14] = v6;
  a1[15] = v24;
  a1[8] = v8;
  a1[9] = v10;
  a1[10] = v12;
  a1[11] = v3;
  a1[4] = v14;
  a1[5] = v16;
  a1[6] = v18;
  a1[7] = v9;
  *a1 = v22;
  a1[1] = v21;
  a1[2] = v23;
  a1[3] = v15;
  return sub_254493A84((uint64_t)v26);
}

uint64_t sub_254493A84(uint64_t a1)
{
  return a1;
}

__n128 TaskDefinition.taskRequest.setter(uint64_t a1)
{
  long long v3 = v1[15];
  v20[12] = v1[14];
  v20[13] = v3;
  long long v4 = v1[17];
  v20[14] = v1[16];
  v20[15] = v4;
  long long v5 = v1[11];
  v20[8] = v1[10];
  v20[9] = v5;
  long long v6 = v1[13];
  v20[10] = v1[12];
  v20[11] = v6;
  long long v7 = v1[7];
  v20[4] = v1[6];
  v20[5] = v7;
  long long v8 = v1[9];
  v20[6] = v1[8];
  v20[7] = v8;
  long long v9 = v1[3];
  v20[0] = v1[2];
  v20[1] = v9;
  long long v10 = v1[5];
  v20[2] = v1[4];
  v20[3] = v10;
  sub_254493BD8((uint64_t)v20);
  long long v11 = *(_OWORD *)(a1 + 208);
  v1[14] = *(_OWORD *)(a1 + 192);
  v1[15] = v11;
  long long v12 = *(_OWORD *)(a1 + 240);
  v1[16] = *(_OWORD *)(a1 + 224);
  v1[17] = v12;
  long long v13 = *(_OWORD *)(a1 + 144);
  v1[10] = *(_OWORD *)(a1 + 128);
  v1[11] = v13;
  long long v14 = *(_OWORD *)(a1 + 176);
  v1[12] = *(_OWORD *)(a1 + 160);
  v1[13] = v14;
  long long v15 = *(_OWORD *)(a1 + 80);
  v1[6] = *(_OWORD *)(a1 + 64);
  v1[7] = v15;
  long long v16 = *(_OWORD *)(a1 + 112);
  v1[8] = *(_OWORD *)(a1 + 96);
  v1[9] = v16;
  long long v17 = *(_OWORD *)(a1 + 16);
  void v1[2] = *(_OWORD *)a1;
  v1[3] = v17;
  __n128 result = *(__n128 *)(a1 + 32);
  long long v19 = *(_OWORD *)(a1 + 48);
  v1[4] = result;
  v1[5] = v19;
  return result;
}

uint64_t sub_254493BD8(uint64_t a1)
{
  return a1;
}

uint64_t (*TaskDefinition.taskRequest.modify())()
{
  return nullsub_1;
}

uint64_t TaskDefinition.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for TaskDefinition(0);
  return sub_254493CFC(v1 + *(int *)(v3 + 28), a1, &qword_26B266B98);
}

uint64_t type metadata accessor for TaskDefinition(uint64_t a1)
{
  return sub_2544991E0(a1, qword_26B266D70);
}

uint64_t sub_254493CFC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t TaskDefinition.startDate.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TaskDefinition(0) + 28);

  return sub_254493DA4(a1, v3);
}

uint64_t sub_254493DA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*TaskDefinition.startDate.modify())()
{
  return nullsub_1;
}

uint64_t TaskDefinition.endDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_254497644(type metadata accessor for TaskDefinition, a1);
}

uint64_t TaskDefinition.endDate.setter(uint64_t a1)
{
  return sub_2544976A4(a1, type metadata accessor for TaskDefinition);
}

uint64_t (*TaskDefinition.endDate.modify())()
{
  return nullsub_1;
}

uint64_t TaskDefinition.supportedOSTypes.getter()
{
  type metadata accessor for TaskDefinition(0);

  return swift_bridgeObjectRetain();
}

uint64_t TaskDefinition.supportedOSTypes.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for TaskDefinition(0) + 36);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*TaskDefinition.supportedOSTypes.modify())()
{
  return nullsub_1;
}

uint64_t TaskDefinition.init(name:bundleIdentifier:taskRequest:startDate:endDate:supportedOSTypes:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, long long *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  long long v36 = a5[12];
  long long v37 = a5[13];
  long long v38 = a5[14];
  long long v39 = a5[15];
  long long v32 = a5[8];
  long long v33 = a5[9];
  long long v34 = a5[10];
  long long v35 = a5[11];
  long long v28 = a5[4];
  long long v29 = a5[5];
  long long v30 = a5[6];
  long long v31 = a5[7];
  long long v24 = *a5;
  long long v25 = a5[1];
  long long v26 = a5[2];
  long long v27 = a5[3];
  long long v13 = (int *)type metadata accessor for TaskDefinition(0);
  uint64_t v14 = a9 + v13[7];
  uint64_t v15 = sub_254526D90();
  long long v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  v16(v14, 1, 1, v15);
  uint64_t v17 = a9 + v13[8];
  v16(v17, 1, 1, v15);
  uint64_t v18 = v13[9];
  *(void *)(a9 + v18) = 0;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(_OWORD *)(a9 + 224) = v36;
  *(_OWORD *)(a9 + 240) = v37;
  *(_OWORD *)(a9 + 256) = v38;
  *(_OWORD *)(a9 + 272) = v39;
  *(_OWORD *)(a9 + 160) = v32;
  *(_OWORD *)(a9 + 176) = v33;
  *(_OWORD *)(a9 + 192) = v34;
  *(_OWORD *)(a9 + 208) = v35;
  *(_OWORD *)(a9 + 96) = v28;
  *(_OWORD *)(a9 + 112) = v29;
  *(_OWORD *)(a9 + 128) = v30;
  *(_OWORD *)(a9 + 144) = v31;
  *(_OWORD *)(a9 + 32) = v24;
  *(_OWORD *)(a9 + 48) = v25;
  *(_OWORD *)(a9 + 64) = v26;
  *(_OWORD *)(a9 + 80) = v27;
  sub_254493DA4(a6, v14);
  sub_254493DA4(a7, v17);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a9 + v18) = a8;
  return result;
}

unint64_t sub_25449411C(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
    case 5:
      return result;
    case 2:
      unint64_t result = 0x757165526B736174;
      break;
    case 3:
      unint64_t result = 0x7461447472617473;
      break;
    case 4:
      unint64_t result = 0x65746144646E65;
      break;
    default:
      unint64_t result = 1701667182;
      break;
  }
  return result;
}

unint64_t sub_2544941EC()
{
  return sub_25449411C(*v0);
}

uint64_t sub_2544941F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544A0608(a1, a2);
  *a3 = result;
  return result;
}

void sub_25449421C(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_254494228(uint64_t a1)
{
  unint64_t v2 = sub_2544945CC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254494264(uint64_t a1)
{
  unint64_t v2 = sub_2544945CC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TaskDefinition.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3380);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544945CC();
  sub_254527B00();
  LOBYTE(v20) = 0;
  sub_254527930();
  if (!v2)
  {
    char v36 = 1;
    sub_254527930();
    long long v9 = v3[15];
    long long v32 = v3[14];
    long long v33 = v9;
    long long v10 = v3[17];
    long long v34 = v3[16];
    long long v35 = v10;
    long long v11 = v3[11];
    long long v28 = v3[10];
    long long v29 = v11;
    long long v12 = v3[13];
    long long v30 = v3[12];
    long long v31 = v12;
    long long v13 = v3[7];
    long long v24 = v3[6];
    long long v25 = v13;
    long long v14 = v3[9];
    long long v26 = v3[8];
    long long v27 = v14;
    long long v15 = v3[3];
    long long v20 = v3[2];
    long long v21 = v15;
    long long v16 = v3[5];
    long long v22 = v3[4];
    long long v23 = v16;
    char v19 = 2;
    sub_254494620();
    sub_254527970();
    uint64_t v37 = type metadata accessor for TaskDefinition(0);
    LOBYTE(v20) = 3;
    sub_254526D90();
    sub_254492804((unint64_t *)&unk_26B266FD8, MEMORY[0x263F07490]);
    sub_254527910();
    LOBYTE(v20) = 4;
    sub_254527910();
    *(void *)&long long v20 = *(void *)((char *)v3 + *(int *)(v37 + 36));
    char v19 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B266EF8);
    sub_254494D74(&qword_269DF3390, (void (*)(void))sub_254494674);
    sub_254527910();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_2544945CC()
{
  unint64_t result = qword_26B266D50;
  if (!qword_26B266D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B266D50);
  }
  return result;
}

unint64_t sub_254494620()
{
  unint64_t result = qword_269DF3388;
  if (!qword_269DF3388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3388);
  }
  return result;
}

unint64_t sub_254494674()
{
  unint64_t result = qword_269DF3398;
  if (!qword_269DF3398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3398);
  }
  return result;
}

uint64_t TaskDefinition.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v42 = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v43 = (uint64_t)v40 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266E28);
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v45 = v7;
  MEMORY[0x270FA5388](v7);
  long long v9 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TaskDefinition(0);
  long long v11 = (int *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  long long v13 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v14 = &v13[v11[9]];
  uint64_t v15 = sub_254526D90();
  long long v16 = *(void (**)(void))(*(void *)(v15 - 8) + 56);
  uint64_t v49 = (uint64_t)v14;
  uint64_t v17 = v14;
  uint64_t v18 = (void *)a1;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v16)(v17, 1, 1, v15);
  uint64_t v48 = &v13[v11[10]];
  v16();
  uint64_t v47 = v11[11];
  *(void *)&v13[v47] = 0;
  __swift_project_boxed_opaque_existential_1(v18, v18[3]);
  sub_2544945CC();
  uint64_t v46 = v9;
  uint64_t v19 = v69;
  sub_254527AF0();
  if (v19)
  {
    uint64_t v21 = (uint64_t)v48;
    uint64_t v22 = v49;
    __swift_destroy_boxed_opaque_existential_1(a1);
    sub_254498AB8(v22, &qword_26B266B98);
    sub_254498AB8(v21, &qword_26B266B98);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = v44;
    LOBYTE(v53) = 0;
    *(void *)long long v13 = sub_254527830();
    *((void *)v13 + 1) = v23;
    LOBYTE(v53) = 1;
    *((void *)v13 + 2) = sub_254527830();
    *((void *)v13 + 3) = v24;
    char v52 = 2;
    sub_254494D20();
    sub_254527870();
    uint64_t v25 = v49;
    long long v26 = v66;
    long long v27 = v67;
    long long v28 = v64;
    *((_OWORD *)v13 + 14) = v65;
    *((_OWORD *)v13 + 15) = v26;
    long long v29 = v68;
    *((_OWORD *)v13 + 16) = v27;
    *((_OWORD *)v13 + 17) = v29;
    long long v30 = v62;
    long long v31 = v63;
    long long v32 = v60;
    *((_OWORD *)v13 + 10) = v61;
    *((_OWORD *)v13 + 11) = v30;
    *((_OWORD *)v13 + 12) = v31;
    *((_OWORD *)v13 + 13) = v28;
    long long v33 = v58;
    *((_OWORD *)v13 + 6) = v57;
    *((_OWORD *)v13 + 7) = v33;
    *((_OWORD *)v13 + 8) = v59;
    *((_OWORD *)v13 + 9) = v32;
    long long v34 = v54;
    *((_OWORD *)v13 + 2) = v53;
    *((_OWORD *)v13 + 3) = v34;
    long long v35 = v56;
    *((_OWORD *)v13 + 4) = v55;
    *((_OWORD *)v13 + 5) = v35;
    LOBYTE(v51) = 3;
    v40[1] = sub_254492804(&qword_26B266BE0, MEMORY[0x263F07490]);
    uint64_t v69 = 0;
    sub_254527810();
    sub_254493DA4(v43, v25);
    LOBYTE(v51) = 4;
    uint64_t v36 = (uint64_t)v42;
    sub_254527810();
    sub_254493DA4(v36, (uint64_t)v48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B266EF8);
    char v50 = 5;
    sub_254494D74(&qword_26B266F00, (void (*)(void))sub_254494DE4);
    sub_254527810();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v46, v45);
    uint64_t v37 = v51;
    uint64_t v38 = v47;
    swift_bridgeObjectRelease();
    *(void *)&v13[v38] = v37;
    sub_2544938DC((uint64_t)v13, v41, type metadata accessor for TaskDefinition);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    return sub_254493944((uint64_t)v13, type metadata accessor for TaskDefinition);
  }
}

unint64_t sub_254494D20()
{
  unint64_t result = qword_26B266E98;
  if (!qword_26B266E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B266E98);
  }
  return result;
}

uint64_t sub_254494D74(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B266EF8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_254494DE4()
{
  unint64_t result = qword_26B266EA0;
  if (!qword_26B266EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B266EA0);
  }
  return result;
}

uint64_t sub_254494E38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return TaskDefinition.init(from:)(a1, a2);
}

uint64_t sub_254494E50(void *a1)
{
  return TaskDefinition.encode(to:)(a1);
}

uint64_t TaskValidationError.hash(into:)()
{
  return sub_254527A90();
}

BOOL static TaskValidationError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_254494EA8(char a1)
{
  unint64_t result = 0xD000000000000017;
  switch(a1)
  {
    case 1:
      return result;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x4564696C61766E69;
      break;
    case 6:
      unint64_t result = 0x4F64696C61766E69;
      break;
    default:
      unint64_t result = 0x4E64696C61766E69;
      break;
  }
  return result;
}

unint64_t sub_254494FB4()
{
  return sub_254494EA8(*v0);
}

uint64_t sub_254494FBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544A0868(a1, a2);
  *a3 = result;
  return result;
}

void sub_254494FE4(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_254494FF0(uint64_t a1)
{
  unint64_t v2 = sub_254495AA0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25449502C(uint64_t a1)
{
  unint64_t v2 = sub_254495AA0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_254495068()
{
  return 0;
}

uint64_t sub_254495074(uint64_t a1)
{
  unint64_t v2 = sub_254495C98();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544950B0(uint64_t a1)
{
  unint64_t v2 = sub_254495C98();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2544950EC(uint64_t a1)
{
  unint64_t v2 = sub_254495C44();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254495128(uint64_t a1)
{
  unint64_t v2 = sub_254495C44();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_254495164(uint64_t a1)
{
  unint64_t v2 = sub_254495B48();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544951A0(uint64_t a1)
{
  unint64_t v2 = sub_254495B48();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2544951DC(uint64_t a1)
{
  unint64_t v2 = sub_254495CEC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254495218(uint64_t a1)
{
  unint64_t v2 = sub_254495CEC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_254495254(uint64_t a1)
{
  unint64_t v2 = sub_254495AF4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254495290(uint64_t a1)
{
  unint64_t v2 = sub_254495AF4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2544952CC(uint64_t a1)
{
  unint64_t v2 = sub_254495B9C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254495308(uint64_t a1)
{
  unint64_t v2 = sub_254495B9C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_254495344@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_254495374(uint64_t a1)
{
  unint64_t v2 = sub_254495BF0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544953B0(uint64_t a1)
{
  unint64_t v2 = sub_254495BF0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TaskValidationError.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF33A0);
  uint64_t v46 = *(void *)(v3 - 8);
  uint64_t v47 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v45 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF33A8);
  uint64_t v43 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v42 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF33B0);
  uint64_t v40 = *(void *)(v7 - 8);
  uint64_t v41 = v7;
  MEMORY[0x270FA5388](v7);
  long long v39 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF33B8);
  uint64_t v37 = *(void *)(v9 - 8);
  uint64_t v38 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v36 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF33C0);
  uint64_t v34 = *(void *)(v11 - 8);
  uint64_t v35 = v11;
  MEMORY[0x270FA5388](v11);
  long long v33 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF33C8);
  uint64_t v31 = *(void *)(v13 - 8);
  uint64_t v32 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF33D0);
  uint64_t v30 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF33D8);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v48 = v19;
  uint64_t v49 = v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254495AA0();
  sub_254527B00();
  switch(v23)
  {
    case 1:
      char v51 = 1;
      sub_254495C98();
      uint64_t v26 = v48;
      sub_2545278B0();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v32);
      goto LABEL_10;
    case 2:
      char v52 = 2;
      sub_254495C44();
      long long v27 = v33;
      uint64_t v26 = v48;
      sub_2545278B0();
      uint64_t v29 = v34;
      uint64_t v28 = v35;
      goto LABEL_9;
    case 3:
      char v53 = 3;
      sub_254495BF0();
      long long v27 = v36;
      uint64_t v26 = v48;
      sub_2545278B0();
      uint64_t v29 = v37;
      uint64_t v28 = v38;
      goto LABEL_9;
    case 4:
      char v54 = 4;
      sub_254495B9C();
      long long v27 = v39;
      uint64_t v26 = v48;
      sub_2545278B0();
      uint64_t v29 = v40;
      uint64_t v28 = v41;
      goto LABEL_9;
    case 5:
      char v55 = 5;
      sub_254495B48();
      long long v27 = v42;
      uint64_t v26 = v48;
      sub_2545278B0();
      uint64_t v29 = v43;
      uint64_t v28 = v44;
      goto LABEL_9;
    case 6:
      char v56 = 6;
      sub_254495AF4();
      long long v27 = v45;
      uint64_t v26 = v48;
      sub_2545278B0();
      uint64_t v29 = v46;
      uint64_t v28 = v47;
LABEL_9:
      (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v28);
LABEL_10:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v22, v26);
      break;
    default:
      char v50 = 0;
      sub_254495CEC();
      uint64_t v24 = v48;
      sub_2545278B0();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v18, v16);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v22, v24);
      break;
  }
  return result;
}

unint64_t sub_254495AA0()
{
  unint64_t result = qword_269DF33E0;
  if (!qword_269DF33E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF33E0);
  }
  return result;
}

unint64_t sub_254495AF4()
{
  unint64_t result = qword_269DF33E8;
  if (!qword_269DF33E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF33E8);
  }
  return result;
}

unint64_t sub_254495B48()
{
  unint64_t result = qword_269DF33F0;
  if (!qword_269DF33F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF33F0);
  }
  return result;
}

unint64_t sub_254495B9C()
{
  unint64_t result = qword_269DF33F8;
  if (!qword_269DF33F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF33F8);
  }
  return result;
}

unint64_t sub_254495BF0()
{
  unint64_t result = qword_269DF3400;
  if (!qword_269DF3400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3400);
  }
  return result;
}

unint64_t sub_254495C44()
{
  unint64_t result = qword_269DF3408;
  if (!qword_269DF3408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3408);
  }
  return result;
}

unint64_t sub_254495C98()
{
  unint64_t result = qword_269DF3410;
  if (!qword_269DF3410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3410);
  }
  return result;
}

unint64_t sub_254495CEC()
{
  unint64_t result = qword_269DF3418;
  if (!qword_269DF3418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3418);
  }
  return result;
}

uint64_t TaskValidationError.hashValue.getter()
{
  return sub_254527AB0();
}

uint64_t TaskValidationError.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  long long v64 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3420);
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v58 = v3;
  MEMORY[0x270FA5388](v3);
  long long v60 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3428);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v55 = v5;
  uint64_t v56 = v6;
  MEMORY[0x270FA5388](v5);
  long long v63 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3430);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v53 = v8;
  uint64_t v54 = v9;
  MEMORY[0x270FA5388](v8);
  long long v62 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3438);
  uint64_t v51 = *(void *)(v11 - 8);
  uint64_t v52 = v11;
  MEMORY[0x270FA5388](v11);
  long long v61 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3440);
  uint64_t v49 = *(void *)(v13 - 8);
  uint64_t v50 = v13;
  MEMORY[0x270FA5388](v13);
  long long v59 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3448);
  uint64_t v47 = *(void *)(v15 - 8);
  uint64_t v48 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3450);
  uint64_t v46 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3458);
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1[3];
  long long v65 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v25);
  sub_254495AA0();
  uint64_t v26 = v66;
  sub_254527AF0();
  if (!v26)
  {
    uint64_t v44 = v20;
    uint64_t v43 = v18;
    uint64_t v45 = v17;
    uint64_t v28 = v61;
    long long v27 = v62;
    uint64_t v29 = v63;
    uint64_t v30 = v64;
    uint64_t v66 = v22;
    uint64_t v31 = v24;
    uint64_t v32 = sub_254527890();
    if (*(void *)(v32 + 16) == 1)
    {
      char v33 = *(unsigned char *)(v32 + 32);
      switch(v33)
      {
        case 1:
          char v68 = 1;
          sub_254495C98();
          long long v27 = v45;
          sub_2545277A0();
          uint64_t v40 = v47;
          uint64_t v39 = v48;
          goto LABEL_13;
        case 2:
          char v69 = 2;
          sub_254495C44();
          long long v27 = v59;
          sub_2545277A0();
          uint64_t v40 = v49;
          uint64_t v39 = v50;
          goto LABEL_13;
        case 3:
          char v70 = 3;
          sub_254495BF0();
          long long v27 = v28;
          sub_2545277A0();
          uint64_t v40 = v51;
          uint64_t v39 = v52;
          goto LABEL_13;
        case 4:
          char v71 = 4;
          sub_254495B9C();
          sub_2545277A0();
          uint64_t v39 = v53;
          uint64_t v40 = v54;
          goto LABEL_13;
        case 5:
          char v72 = 5;
          sub_254495B48();
          sub_2545277A0();
          (*(void (**)(char *, uint64_t))(v56 + 8))(v29, v55);
          break;
        case 6:
          char v73 = 6;
          sub_254495AF4();
          long long v27 = v60;
          sub_2545277A0();
          uint64_t v40 = v57;
          uint64_t v39 = v58;
LABEL_13:
          (*(void (**)(char *, uint64_t))(v40 + 8))(v27, v39);
          break;
        default:
          char v67 = 0;
          sub_254495CEC();
          uint64_t v34 = v44;
          sub_2545277A0();
          (*(void (**)(char *, uint64_t))(v46 + 8))(v34, v43);
          break;
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v31, v21);
      *uint64_t v30 = v33;
    }
    else
    {
      uint64_t v35 = sub_254527690();
      swift_allocError();
      uint64_t v36 = v21;
      uint64_t v38 = v37;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3460);
      void *v38 = &type metadata for TaskValidationError;
      sub_2545277B0();
      sub_254527680();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v35 - 8) + 104))(v38, *MEMORY[0x263F8DCB0], v35);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v24, v36);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
}

BOOL sub_2544965C8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2544965DC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return TaskValidationError.init(from:)(a1, a2);
}

uint64_t sub_2544965F4(void *a1)
{
  return TaskValidationError.encode(to:)(a1);
}

uint64_t validateTaskDefinition(_:)(uint64_t *a1)
{
  v119 = a1;
  uint64_t v1 = type metadata accessor for TaskDefinition(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)v110 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266E68);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (uint8_t *)v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)v110 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v110 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266E78);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v110 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v120;
  uint64_t result = sub_254526DD0();
  if (v17) {
    return result;
  }
  unint64_t v114 = v1;
  v115 = v10;
  v111 = v3;
  v116 = v7;
  uint64_t v117 = v14;
  v120 = v16;
  uint64_t v118 = v13;
  uint64_t v19 = (uint64_t)v119;
  uint64_t v20 = *v119;
  unint64_t v21 = v119[1];
  uint64_t v22 = HIBYTE(v21) & 0xF;
  if ((v21 & 0x2000000000000000) == 0) {
    uint64_t v22 = *v119 & 0xFFFFFFFFFFFFLL;
  }
  if (!v22)
  {
    sub_254498B14();
    swift_allocError();
    *uint64_t v31 = 0;
LABEL_20:
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v117 + 8))(v120, v118);
  }
  v110[1] = 0;
  *(void *)&v121[0] = v20;
  *((void *)&v121[0] + 1) = v21;
  unint64_t v23 = sub_254498A64();
  sub_25448FFD4(&qword_26B266E70, &qword_26B266E78);
  uint64_t v24 = v120;
  uint64_t v25 = v118;
  sub_254526F60();
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266E60);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t, unint64_t))(v27 + 48);
  uint64_t v112 = v27 + 48;
  v113 = v28;
  int v29 = v28((uint64_t)v12, 1, v26);
  sub_254498AB8((uint64_t)v12, &qword_26B266E68);
  if (v29 == 1)
  {
    sub_254498B14();
    swift_allocError();
    *uint64_t v30 = 0;
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v117 + 8))(v24, v25);
  }
  unint64_t v32 = *(void *)(v19 + 24);
  uint64_t v33 = *(void *)(v19 + 16) & 0xFFFFFFFFFFFFLL;
  if ((v32 & 0x2000000000000000) != 0) {
    uint64_t v33 = HIBYTE(v32) & 0xF;
  }
  if (!v33)
  {
    sub_254498B14();
    swift_allocError();
    *uint64_t v44 = 1;
    goto LABEL_20;
  }
  uint64_t v34 = *(void *)(v19 + *(int *)(v114 + 36));
  uint64_t v35 = (uint64_t)v116;
  uint64_t v36 = v117;
  if (v34)
  {
    unint64_t v114 = v23;
    if (*(void *)(v34 + 16))
    {
      uint64_t v37 = *(void *)(v34 + 16);
      swift_bridgeObjectRetain();
      uint64_t v38 = 0;
      while (2)
      {
        uint64_t v39 = v34 + v38++;
        switch(*(unsigned char *)(v39 + 32))
        {
          case 1:
          case 2:
          case 3:
          case 4:
          case 5:
            char v40 = sub_2545279E0();
            swift_bridgeObjectRelease();
            if (v40) {
              goto LABEL_23;
            }
            if (v37 != v38) {
              continue;
            }
            swift_bridgeObjectRelease();
            uint64_t v36 = v117;
            break;
          default:
            swift_bridgeObjectRelease();
LABEL_23:
            swift_bridgeObjectRelease();
            uint64_t v35 = (uint64_t)v116;
            uint64_t v36 = v117;
            goto LABEL_24;
        }
        break;
      }
    }
    sub_254498B14();
    swift_allocError();
    *uint64_t v41 = 6;
    swift_willThrow();
    uint64_t v42 = *(uint64_t (**)(char *, uint64_t))(v36 + 8);
    uint64_t v43 = v120;
    return v42(v43, v118);
  }
LABEL_24:
  double v45 = *(double *)(v19 + 56);
  if ((*(unsigned char *)(v19 + 49) & 1) == 0)
  {
    double v62 = *(double *)(v19 + 32);
    if (v62 < 60.0 || v62 > 86400.0)
    {
      if (qword_26B267240 != -1) {
        swift_once();
      }
      uint64_t v64 = sub_254526E00();
      __swift_project_value_buffer(v64, (uint64_t)qword_26B267340);
      long long v65 = sub_254526DE0();
      os_log_type_t v66 = sub_254527420();
      BOOL v67 = os_log_type_enabled(v65, v66);
      char v68 = v120;
      if (!v67) {
        goto LABEL_50;
      }
      char v69 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)char v69 = 134217984;
      *(double *)v121 = v62;
      sub_254527500();
      char v70 = "Invalid interval: %f";
      goto LABEL_49;
    }
    if (*(unsigned char *)(v19 + 73)) {
      goto LABEL_52;
    }
LABEL_40:
    if (v45 >= 60.0 && v45 <= 86400.0)
    {
LABEL_52:
      unint64_t v114 = v26;
      uint64_t v75 = *(void *)(v19 + 280);
      if (v75 && (uint64_t v76 = *(void *)(v75 + 16)) != 0)
      {
        swift_bridgeObjectRetain_n();
        v111 = (_OWORD *)v75;
        v77 = (uint64_t *)(v75 + 40);
        uint64_t v78 = (uint64_t)v115;
        while (1)
        {
          uint64_t v79 = *v77;
          *(void *)&v121[0] = *(v77 - 1);
          *((void *)&v121[0] + 1) = v79;
          swift_bridgeObjectRetain();
          sub_254526F60();
          int v80 = v113(v78, 1, v114);
          sub_254498AB8(v78, &qword_26B266E68);
          swift_bridgeObjectRelease();
          if (v80 == 1) {
            break;
          }
          v77 += 2;
          if (!--v76)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v35 = (uint64_t)v116;
            uint64_t v36 = v117;
            goto LABEL_58;
          }
        }
        swift_bridgeObjectRelease();
        if (qword_26B267240 != -1) {
          swift_once();
        }
        uint64_t v88 = sub_254526E00();
        __swift_project_value_buffer(v88, (uint64_t)qword_26B267340);
        swift_bridgeObjectRetain();
        v89 = sub_254526DE0();
        os_log_type_t v90 = sub_254527420();
        if (os_log_type_enabled(v89, v90))
        {
          v91 = (uint8_t *)swift_slowAlloc();
          uint64_t v92 = swift_slowAlloc();
          *(void *)&v121[0] = v92;
          *(_DWORD *)v91 = 136315138;
          v119 = (uint64_t *)(v91 + 4);
          uint64_t v93 = swift_bridgeObjectRetain();
          uint64_t v94 = MEMORY[0x25A27B9A0](v93, MEMORY[0x263F8D310]);
          unint64_t v96 = v95;
          swift_bridgeObjectRelease();
          uint64_t v122 = sub_254498B68(v94, v96, (uint64_t *)v121);
          sub_254527500();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_254486000, v89, v90, "Invalid dependencies format: %s", v91, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x25A27C9E0](v92, -1, -1);
          v97 = v91;
LABEL_75:
          MEMORY[0x25A27C9E0](v97, -1, -1);

LABEL_77:
          uint64_t v106 = v117;
          uint64_t v107 = v118;
          v108 = v120;
          sub_254498B14();
          swift_allocError();
          unsigned char *v109 = 3;
          swift_willThrow();
          return (*(uint64_t (**)(char *, uint64_t))(v106 + 8))(v108, v107);
        }
      }
      else
      {
LABEL_58:
        v81 = *(uint64_t **)(v19 + 272);
        if (!v81) {
          return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v120, v118);
        }
        uint64_t v82 = v81[2];
        if (!v82) {
          return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v120, v118);
        }
        swift_bridgeObjectRetain_n();
        v119 = v81;
        for (int64_t i = v81 + 5; ; i += 2)
        {
          uint64_t v84 = *i;
          *(void *)&v121[0] = *(i - 1);
          *((void *)&v121[0] + 1) = v84;
          swift_bridgeObjectRetain();
          sub_254526F60();
          int v85 = v113(v35, 1, v114);
          sub_254498AB8(v35, &qword_26B266E68);
          swift_bridgeObjectRelease();
          if (v85 == 1) {
            break;
          }
          if (!--v82)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v36 = v117;
            return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v120, v118);
          }
        }
        swift_bridgeObjectRelease();
        if (qword_26B267240 != -1) {
          swift_once();
        }
        uint64_t v98 = sub_254526E00();
        __swift_project_value_buffer(v98, (uint64_t)qword_26B267340);
        swift_bridgeObjectRetain();
        v89 = sub_254526DE0();
        os_log_type_t v99 = sub_254527420();
        if (os_log_type_enabled(v89, v99))
        {
          v100 = (uint8_t *)swift_slowAlloc();
          uint64_t v101 = swift_slowAlloc();
          *(void *)&v121[0] = v101;
          *(_DWORD *)v100 = 136315138;
          v116 = v100 + 4;
          uint64_t v102 = swift_bridgeObjectRetain();
          uint64_t v103 = MEMORY[0x25A27B9A0](v102, MEMORY[0x263F8D310]);
          unint64_t v105 = v104;
          swift_bridgeObjectRelease();
          uint64_t v122 = sub_254498B68(v103, v105, (uint64_t *)v121);
          sub_254527500();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_254486000, v89, v99, "Invalid producedResultIdentifiers format: %s", v100, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x25A27C9E0](v101, -1, -1);
          v97 = v100;
          goto LABEL_75;
        }
      }

      swift_bridgeObjectRelease_n();
      goto LABEL_77;
    }
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v72 = sub_254526E00();
    __swift_project_value_buffer(v72, (uint64_t)qword_26B267340);
    long long v65 = sub_254526DE0();
    os_log_type_t v66 = sub_254527420();
    BOOL v73 = os_log_type_enabled(v65, v66);
    char v68 = v120;
    if (!v73)
    {
LABEL_50:

      sub_254498B14();
      swift_allocError();
      unsigned char *v74 = 3;
      swift_willThrow();
      uint64_t v42 = *(uint64_t (**)(char *, uint64_t))(v36 + 8);
      uint64_t v43 = v68;
      return v42(v43, v118);
    }
    char v69 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)char v69 = 134217984;
    *(double *)v121 = v45;
    sub_254527500();
    char v70 = "Invalid scheduleAfter: %f";
LABEL_49:
    _os_log_impl(&dword_254486000, v65, v66, v70, v69, 0xCu);
    MEMORY[0x25A27C9E0](v69, -1, -1);
    goto LABEL_50;
  }
  if (!*(unsigned char *)(v19 + 73)) {
    goto LABEL_40;
  }
  if (qword_26B267240 != -1) {
    swift_once();
  }
  uint64_t v46 = sub_254526E00();
  __swift_project_value_buffer(v46, (uint64_t)qword_26B267340);
  uint64_t v47 = v111;
  sub_2544938DC(v19, (uint64_t)v111, type metadata accessor for TaskDefinition);
  uint64_t v48 = sub_254526DE0();
  os_log_type_t v49 = sub_254527420();
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v50 = (uint8_t *)swift_slowAlloc();
    uint64_t v51 = swift_slowAlloc();
    uint64_t v122 = v51;
    *(_DWORD *)uint64_t v50 = 136315138;
    v119 = (uint64_t *)(v50 + 4);
    long long v52 = v47[15];
    v121[12] = v47[14];
    v121[13] = v52;
    long long v53 = v47[17];
    v121[14] = v47[16];
    v121[15] = v53;
    long long v54 = v47[11];
    v121[8] = v47[10];
    v121[9] = v54;
    long long v55 = v47[13];
    v121[10] = v47[12];
    v121[11] = v55;
    long long v56 = v47[7];
    v121[4] = v47[6];
    v121[5] = v56;
    long long v57 = v47[9];
    v121[6] = v47[8];
    v121[7] = v57;
    long long v58 = v47[3];
    v121[0] = v47[2];
    v121[1] = v58;
    long long v59 = v47[5];
    v121[2] = v47[4];
    v121[3] = v59;
    uint64_t v60 = TaskRequest.description.getter();
    *(void *)&v121[0] = sub_254498B68(v60, v61, &v122);
    sub_254527500();
    swift_bridgeObjectRelease();
    sub_254493944((uint64_t)v47, type metadata accessor for TaskDefinition);
    _os_log_impl(&dword_254486000, v48, v49, "Malformed request: %s", v50, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A27C9E0](v51, -1, -1);
    MEMORY[0x25A27C9E0](v50, -1, -1);
  }
  else
  {
    sub_254493944((uint64_t)v47, type metadata accessor for TaskDefinition);
  }

  v86 = v120;
  sub_254498B14();
  swift_allocError();
  unsigned char *v87 = 3;
  swift_willThrow();
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v86, v118);
}

void MLHostTask.taskType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t MLHostTask.taskDefinition.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2544974E8(type metadata accessor for MLHostTask, (uint64_t)type metadata accessor for TaskDefinition, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2544938DC, a1);
}

uint64_t sub_2544974E8@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = a1(0);
  return a3(v4 + *(int *)(v8 + 20), a4, a2);
}

uint64_t MLHostTask.taskFolder.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for MLHostTask(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MLHostTask.status.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for MLHostTask(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t MLHostTask.status.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for MLHostTask(0);
  *(unsigned char *)(v1 + *(int *)(result + 28)) = v2;
  return result;
}

uint64_t (*MLHostTask.status.modify())()
{
  return nullsub_1;
}

uint64_t MLHostTask.lastExecutionDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_254497644(type metadata accessor for MLHostTask, a1);
}

uint64_t sub_254497644@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1(0);
  return sub_254493CFC(v2 + *(int *)(v4 + 32), a2, &qword_26B266B98);
}

uint64_t MLHostTask.lastExecutionDate.setter(uint64_t a1)
{
  return sub_2544976A4(a1, type metadata accessor for MLHostTask);
}

uint64_t sub_2544976A4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 32);

  return sub_254493DA4(a1, v4);
}

uint64_t (*MLHostTask.lastExecutionDate.modify())()
{
  return nullsub_1;
}

uint64_t MLHostTask.expectedExecutionDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MLHostTask(0);
  return sub_254493CFC(v1 + *(int *)(v3 + 36), a1, &qword_26B266B98);
}

uint64_t MLHostTask.expectedExecutionDate.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MLHostTask(0) + 36);

  return sub_254493DA4(a1, v3);
}

uint64_t (*MLHostTask.expectedExecutionDate.modify())()
{
  return nullsub_1;
}

uint64_t MLHostTask.init(taskDefinition:taskType:taskFolder:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned char *a5@<X8>)
{
  char v9 = *a2;
  uint64_t v10 = (int *)type metadata accessor for MLHostTask(0);
  a5[v10[7]] = 6;
  uint64_t v11 = &a5[v10[8]];
  uint64_t v12 = sub_254526D90();
  uint64_t v13 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  v13(v11, 1, 1, v12);
  v13(&a5[v10[9]], 1, 1, v12);
  *a5 = v9;
  uint64_t result = sub_254499218(a1, (uint64_t)&a5[v10[5]], type metadata accessor for TaskDefinition);
  uint64_t v15 = &a5[v10[6]];
  *uint64_t v15 = a3;
  v15[1] = a4;
  return result;
}

uint64_t MLHostTask.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for MLHostTask(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MLHostTask.bundleIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for MLHostTask(0) + 20) + 16);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t MLHostTask.description.getter()
{
  return 0xD000000000000011;
}

unint64_t sub_254497C20(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696665446B736174;
      break;
    case 2:
      unint64_t result = 0x646C6F466B736174;
      break;
    case 3:
      unint64_t result = 0x737574617473;
      break;
    case 4:
      return result;
    case 5:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      unint64_t result = 0x657079546B736174;
      break;
  }
  return result;
}

unint64_t sub_254497CFC()
{
  return sub_254497C20(*v0);
}

uint64_t sub_254497D04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544A0B58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_254497D2C(uint64_t a1)
{
  unint64_t v2 = sub_254499280();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254497D68(uint64_t a1)
{
  unint64_t v2 = sub_254499280();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MLHostTask.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3470);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254499280();
  sub_254527B00();
  char v19 = *v3;
  char v18 = 0;
  sub_2544992D4();
  sub_254527970();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for MLHostTask(0);
    char v17 = 1;
    type metadata accessor for TaskDefinition(0);
    sub_254492804(&qword_269DF3488, (void (*)(uint64_t))type metadata accessor for TaskDefinition);
    sub_254527970();
    char v16 = 2;
    sub_2545278C0();
    char v15 = v3[*(int *)(v9 + 28)];
    char v14 = 3;
    sub_254499328();
    sub_254527970();
    char v13 = 4;
    sub_254526D90();
    sub_254492804((unint64_t *)&unk_26B266FD8, MEMORY[0x263F07490]);
    sub_254527910();
    char v12 = 5;
    sub_254527910();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t MLHostTask.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v36 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v37 = (char *)v34 - v6;
  uint64_t v40 = type metadata accessor for TaskDefinition(0);
  MEMORY[0x270FA5388](v40);
  uint64_t v39 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3498);
  uint64_t v38 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MLHostTask(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  char v13 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(int *)(v11 + 28);
  v13[v14] = 6;
  char v15 = &v13[*(int *)(v11 + 32)];
  uint64_t v16 = sub_254526D90();
  char v17 = *(void (**)(void))(*(void *)(v16 - 8) + 56);
  uint64_t v45 = (uint64_t)v15;
  ((void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))v17)(v15, 1, 1, v16);
  uint64_t v44 = v10;
  uint64_t v42 = &v13[*(int *)(v10 + 36)];
  v17();
  uint64_t v18 = a1[3];
  uint64_t v43 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_254499280();
  uint64_t v19 = v46;
  sub_254527AF0();
  if (v19)
  {
    uint64_t v23 = (uint64_t)v42;
    uint64_t v24 = v45;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
    sub_254498AB8(v24, &qword_26B266B98);
    return sub_254498AB8(v23, &qword_26B266B98);
  }
  else
  {
    uint64_t v20 = (uint64_t)v39;
    v34[1] = v16;
    uint64_t v46 = v14;
    uint64_t v21 = v38;
    char v53 = 0;
    sub_25449937C();
    uint64_t v22 = v41;
    sub_254527870();
    *char v13 = v54;
    char v52 = 1;
    sub_254492804(&qword_26B266D68, (void (*)(uint64_t))type metadata accessor for TaskDefinition);
    sub_254527870();
    uint64_t v25 = v44;
    sub_254499218(v20, (uint64_t)&v13[*(int *)(v44 + 20)], type metadata accessor for TaskDefinition);
    char v51 = 2;
    uint64_t v40 = (uint64_t)v9;
    uint64_t v26 = sub_2545277C0();
    uint64_t v27 = v45;
    uint64_t v28 = (uint64_t *)&v13[*(int *)(v25 + 24)];
    *uint64_t v28 = v26;
    v28[1] = v29;
    char v49 = 3;
    sub_2544993D0();
    sub_254527870();
    v13[v46] = v50;
    char v48 = 4;
    uint64_t v30 = sub_254492804(&qword_26B266BE0, MEMORY[0x263F07490]);
    uint64_t v31 = (uint64_t)v37;
    uint64_t v46 = v30;
    sub_254527810();
    sub_254493DA4(v31, v27);
    char v47 = 5;
    uint64_t v32 = (uint64_t)v36;
    sub_254527810();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v40, v22);
    sub_254493DA4(v32, (uint64_t)v42);
    sub_2544938DC((uint64_t)v13, v35, type metadata accessor for MLHostTask);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
    return sub_254493944((uint64_t)v13, type metadata accessor for MLHostTask);
  }
}

uint64_t sub_25449873C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MLHostTask.init(from:)(a1, a2);
}

uint64_t sub_254498754(void *a1)
{
  return MLHostTask.encode(to:)(a1);
}

LighthouseBackground::TaskStatus_optional __swiftcall TaskStatus.init(raw:)(Swift::String raw)
{
  uint64_t v2 = v1;
  result.value = TaskStatus.init(rawValue:)(raw).value;
  *uint64_t v2 = v4;
  return result;
}

uint64_t TaskStatus.characterRepresentation.getter()
{
  return qword_25452A5C0[*v0];
}

uint64_t static TaskStatus.fromCharacter(char:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v4 = result;
  if (result == 84 && a2 == 0xE100000000000000)
  {
    char v6 = 0;
  }
  else
  {
    LighthouseBackground::TaskStatus_optional result = sub_2545279E0();
    char v6 = 0;
    if ((result & 1) == 0)
    {
      if (v4 == 73 && a2 == 0xE100000000000000 || (LighthouseBackground::TaskStatus_optional result = sub_2545279E0(), (result & 1) != 0))
      {
        char v6 = 1;
      }
      else if (v4 == 83 && a2 == 0xE100000000000000 || (LighthouseBackground::TaskStatus_optional result = sub_2545279E0(), (result & 1) != 0))
      {
        char v6 = 2;
      }
      else if (v4 == 71 && a2 == 0xE100000000000000 || (LighthouseBackground::TaskStatus_optional result = sub_2545279E0(), (result & 1) != 0))
      {
        char v6 = 3;
      }
      else if (v4 == 80 && a2 == 0xE100000000000000 || (LighthouseBackground::TaskStatus_optional result = sub_2545279E0(), (result & 1) != 0))
      {
        char v6 = 4;
      }
      else if (v4 == 90 && a2 == 0xE100000000000000 || (LighthouseBackground::TaskStatus_optional result = sub_2545279E0(), (result & 1) != 0))
      {
        char v6 = 5;
      }
      else if (v4 == 78 && a2 == 0xE100000000000000 || (LighthouseBackground::TaskStatus_optional result = sub_2545279E0(), (result & 1) != 0))
      {
        char v6 = 6;
      }
      else if (v4 == 82 && a2 == 0xE100000000000000 || (LighthouseBackground::TaskStatus_optional result = sub_2545279E0(), (result & 1) != 0))
      {
        char v6 = 7;
      }
      else if (v4 == 68 && a2 == 0xE100000000000000 || (LighthouseBackground::TaskStatus_optional result = sub_2545279E0(), (result & 1) != 0))
      {
        char v6 = 8;
      }
      else if (v4 == 67 && a2 == 0xE100000000000000 || (LighthouseBackground::TaskStatus_optional result = sub_2545279E0(), (result & 1) != 0))
      {
        char v6 = 9;
      }
      else
      {
        char v6 = 10;
        if (v4 != 70 || a2 != 0xE100000000000000)
        {
          LighthouseBackground::TaskStatus_optional result = sub_2545279E0();
          if (result) {
            char v6 = 10;
          }
          else {
            char v6 = 11;
          }
        }
      }
    }
  }
  *a3 = v6;
  return result;
}

unint64_t sub_254498A64()
{
  unint64_t result = qword_26B266E10;
  if (!qword_26B266E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B266E10);
  }
  return result;
}

uint64_t sub_254498AB8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_254498B14()
{
  unint64_t result = qword_269DF3468;
  if (!qword_269DF3468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3468);
  }
  return result;
}

uint64_t sub_254498B68(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_254498C3C(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_2544A0EC4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_2544A0EC4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_254498C3C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_254527510();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_254498DF8(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_2545276A0();
  if (!v8)
  {
    sub_254527710();
    __break(1u);
LABEL_17:
    uint64_t result = sub_254527770();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_254498DF8(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_254498E90(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_254499070(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_254499070(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_254498E90(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_254499008(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_254527640();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_254527710();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_2545270A0();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_254527770();
    __break(1u);
LABEL_14:
    uint64_t result = sub_254527710();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_254499008(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3648);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_254499070(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3648);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  char v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_254527770();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MLHostTask(uint64_t a1)
{
  return sub_2544991E0(a1, (uint64_t *)&unk_26B266BA0);
}

uint64_t sub_2544991E0(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_254499218(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_254499280()
{
  unint64_t result = qword_269DF3478;
  if (!qword_269DF3478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3478);
  }
  return result;
}

unint64_t sub_2544992D4()
{
  unint64_t result = qword_269DF3480;
  if (!qword_269DF3480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3480);
  }
  return result;
}

unint64_t sub_254499328()
{
  unint64_t result = qword_269DF3490;
  if (!qword_269DF3490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3490);
  }
  return result;
}

unint64_t sub_25449937C()
{
  unint64_t result = qword_269DF34A0;
  if (!qword_269DF34A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF34A0);
  }
  return result;
}

unint64_t sub_2544993D0()
{
  unint64_t result = qword_269DF34A8;
  if (!qword_269DF34A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF34A8);
  }
  return result;
}

unint64_t sub_254499428()
{
  unint64_t result = qword_269DF34B0;
  if (!qword_269DF34B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF34B0);
  }
  return result;
}

uint64_t sub_25449947C()
{
  return sub_25448FFD4(&qword_269DF34B8, &qword_269DF34C0);
}

unint64_t sub_2544994BC()
{
  unint64_t result = qword_269DF34C8;
  if (!qword_269DF34C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF34C8);
  }
  return result;
}

uint64_t sub_254499510()
{
  return sub_25448FFD4(&qword_269DF34D0, &qword_269DF34D8);
}

unint64_t sub_254499550()
{
  unint64_t result = qword_269DF34E0;
  if (!qword_269DF34E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF34E0);
  }
  return result;
}

uint64_t sub_2544995A4()
{
  return sub_25448FFD4(&qword_269DF34E8, &qword_269DF34F0);
}

unint64_t sub_2544995E4()
{
  unint64_t result = qword_269DF34F8;
  if (!qword_269DF34F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF34F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for TaskType()
{
  return &type metadata for TaskType;
}

ValueMetadata *type metadata accessor for DynamicTaskSource()
{
  return &type metadata for DynamicTaskSource;
}

uint64_t getEnumTagSinglePayload for TaskStatus(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TaskStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2544997B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TaskStatus()
{
  return &type metadata for TaskStatus;
}

uint64_t *initializeBufferWithCopyOfBuffer for PushMetadata(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v8 = a2[7];
    uint64_t v9 = *(int *)(a3 + 32);
    uint64_t v10 = (char *)a2 + v9;
    size_t v11 = (char *)a1 + v9;
    a1[6] = a2[6];
    a1[7] = v8;
    uint64_t v12 = sub_254526D90();
    char v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v11, v10, v12);
  }
  return v3;
}

uint64_t destroy for PushMetadata(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_254526D90();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for PushMetadata(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[7];
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = (char *)a2 + v8;
  uint64_t v10 = (char *)a1 + v8;
  a1[6] = a2[6];
  a1[7] = v7;
  uint64_t v11 = sub_254526D90();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v10, v9, v11);
  return a1;
}

void *assignWithCopy for PushMetadata(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_254526D90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for PushMetadata(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_254526D90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

void *assignWithTake for PushMetadata(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_254526D90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for PushMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_254499CC0);
}

uint64_t sub_254499CC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_254526D90();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PushMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_254499D84);
}

uint64_t sub_254499D84(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_254526D90();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_254499E2C()
{
  uint64_t result = sub_254526D90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for PullMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_254526D90();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t destroy for PullMetadata(uint64_t a1)
{
  uint64_t v2 = sub_254526D90();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for PullMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_254526D90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for PullMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_254526D90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for PullMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_254526D90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for PullMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_254526D90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for PullMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25449A13C);
}

uint64_t sub_25449A13C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_254526D90();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PullMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25449A1BC);
}

uint64_t sub_25449A1BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_254526D90();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_25449A22C()
{
  uint64_t result = sub_254526D90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for TaskMetadata(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for PushMetadata(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3338);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      uint64_t v12 = a2[3];
      a1[2] = a2[2];
      a1[3] = v12;
      uint64_t v13 = a2[5];
      a1[4] = a2[4];
      a1[5] = v13;
      uint64_t v14 = a2[7];
      a1[6] = a2[6];
      a1[7] = v14;
      uint64_t v15 = *(int *)(v7 + 32);
      uint64_t v26 = (char *)a2 + v15;
      uint64_t v27 = (char *)a1 + v15;
      uint64_t v16 = sub_254526D90();
      uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v25(v27, v26, v16);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v17 = *(int *)(a3 + 20);
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = type metadata accessor for PullMetadata(0);
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3340);
      memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      uint64_t v23 = sub_254526D90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v18, v19, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
  }
  return a1;
}

uint64_t destroy for TaskMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PushMetadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = a1 + *(int *)(v4 + 32);
    uint64_t v6 = sub_254526D90();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  uint64_t v8 = type metadata accessor for PullMetadata(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = sub_254526D90();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    return v11(v7, v10);
  }
  return result;
}

void *initializeWithCopy for TaskMetadata(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PushMetadata(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3338);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    uint64_t v10 = a2[3];
    a1[2] = a2[2];
    a1[3] = v10;
    uint64_t v11 = a2[5];
    a1[4] = a2[4];
    a1[5] = v11;
    uint64_t v12 = a2[7];
    a1[6] = a2[6];
    a1[7] = v12;
    uint64_t v13 = *(int *)(v6 + 32);
    uint64_t v24 = (char *)a2 + v13;
    uint64_t v25 = (char *)a1 + v13;
    uint64_t v14 = sub_254526D90();
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23(v25, v24, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = type metadata accessor for PullMetadata(0);
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3340);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    uint64_t v21 = sub_254526D90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v16, v17, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  return a1;
}

void *assignWithCopy for TaskMetadata(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PushMetadata(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      a1[5] = a2[5];
      a1[6] = a2[6];
      a1[7] = a2[7];
      uint64_t v11 = *(int *)(v6 + 32);
      uint64_t v31 = (char *)a2 + v11;
      uint64_t v32 = (char *)a1 + v11;
      uint64_t v12 = sub_254526D90();
      uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v30(v32, v31, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_254493944((uint64_t)a1, type metadata accessor for PushMetadata);
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3338);
    memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = *(int *)(v6 + 32);
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = sub_254526D90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 24))(v26, v27, v28);
LABEL_7:
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for PullMetadata(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (!v21)
    {
      uint64_t v29 = sub_254526D90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 24))(v15, v16, v29);
      return a1;
    }
    sub_254493944((uint64_t)v15, type metadata accessor for PullMetadata);
    goto LABEL_12;
  }
  if (v21)
  {
LABEL_12:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3340);
    memcpy(v15, v16, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  uint64_t v22 = sub_254526D90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v15, v16, v22);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  return a1;
}

_OWORD *initializeWithTake for TaskMetadata(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PushMetadata(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3338);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    long long v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    long long v10 = a2[3];
    a1[2] = a2[2];
    a1[3] = v10;
    uint64_t v11 = *(int *)(v6 + 32);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_254526D90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = type metadata accessor for PullMetadata(0);
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3340);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    uint64_t v21 = sub_254526D90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v16, v17, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  return a1;
}

void *assignWithTake for TaskMetadata(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PushMetadata(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      long long v11 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v11;
      long long v12 = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 3) = v12;
      uint64_t v13 = *(int *)(v6 + 32);
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_254526D90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_254493944((uint64_t)a1, type metadata accessor for PushMetadata);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3338);
    memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v29 = a2[1];
  *a1 = *a2;
  a1[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v30 = a2[3];
  a1[2] = a2[2];
  a1[3] = v30;
  swift_bridgeObjectRelease();
  uint64_t v31 = a2[5];
  a1[4] = a2[4];
  a1[5] = v31;
  swift_bridgeObjectRelease();
  uint64_t v32 = a2[7];
  a1[6] = a2[6];
  a1[7] = v32;
  swift_bridgeObjectRelease();
  uint64_t v33 = *(int *)(v6 + 32);
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  uint64_t v36 = sub_254526D90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 40))(v34, v35, v36);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 20);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = type metadata accessor for PullMetadata(0);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      uint64_t v37 = sub_254526D90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 40))(v19, v20, v37);
      return a1;
    }
    sub_254493944((uint64_t)v19, type metadata accessor for PullMetadata);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3340);
    memcpy(v19, v20, *(void *)(*(void *)(v27 - 8) + 64));
    return a1;
  }
  uint64_t v26 = sub_254526D90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v19, v20, v26);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for TaskMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25449B464);
}

uint64_t sub_25449B464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3338);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3340);
    long long v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for TaskMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25449B578);
}

uint64_t sub_25449B578(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3338);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3340);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_25449B684()
{
  sub_25449B784(319, &qword_269DF3530, (void (*)(uint64_t))type metadata accessor for PushMetadata);
  if (v0 <= 0x3F)
  {
    sub_25449B784(319, &qword_269DF3538, (void (*)(uint64_t))type metadata accessor for PullMetadata);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_25449B784(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2545274E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for TaskDefinition(uint64_t a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_WORD *)(a1 + 48) = *((_WORD *)a2 + 24);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    *(_WORD *)(a1 + 72) = *((_WORD *)a2 + 36);
    *(_DWORD *)(a1 + 74) = *(_DWORD *)((char *)a2 + 74);
    *(unsigned char *)(a1 + 78) = *((unsigned char *)a2 + 78);
    *(void *)(a1 + 80) = a2[10];
    *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
    *(void *)(a1 + 89) = *(uint64_t *)((char *)a2 + 89);
    *(void *)(a1 + 104) = a2[13];
    *(_WORD *)(a1 + 112) = *((_WORD *)a2 + 56);
    *(void *)(a1 + 120) = a2[15];
    *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
    uint64_t v8 = a2[17];
    *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
    *(void *)(a1 + 136) = v8;
    *(unsigned char *)(a1 + 145) = *((unsigned char *)a2 + 145);
    *(unsigned char *)(a1 + 146) = *((unsigned char *)a2 + 146);
    uint64_t v9 = a2[20];
    *(void *)(a1 + 152) = a2[19];
    *(void *)(a1 + 160) = v9;
    *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
    *(void *)(a1 + 168) = a2[21];
    uint64_t v10 = a2[24];
    *(void *)(a1 + 184) = a2[23];
    *(void *)(a1 + 192) = v10;
    *(unsigned char *)(a1 + 208) = *((unsigned char *)a2 + 208);
    *(void *)(a1 + 200) = a2[25];
    *(_WORD *)(a1 + 209) = *(_WORD *)((char *)a2 + 209);
    uint64_t v11 = a2[28];
    *(void *)(a1 + 216) = a2[27];
    *(void *)(a1 + 224) = v11;
    *(unsigned char *)(a1 + 232) = *((unsigned char *)a2 + 232);
    *(_WORD *)(a1 + 233) = *(_WORD *)((char *)a2 + 233);
    uint64_t v12 = a2[31];
    *(void *)(a1 + 240) = a2[30];
    *(void *)(a1 + 248) = v12;
    *(void *)(a1 + 256) = a2[32];
    *(unsigned char *)(a1 + 264) = *((unsigned char *)a2 + 264);
    *(unsigned char *)(a1 + 265) = *((unsigned char *)a2 + 265);
    uint64_t v13 = a2[35];
    uint64_t v14 = a3[7];
    __dst = (void *)(a1 + v14);
    int v25 = (char *)a2 + v14;
    *(void *)(a1 + 272) = a2[34];
    *(void *)(a1 + 280) = v13;
    uint64_t v15 = sub_254526D90();
    uint64_t v26 = *(void *)(v15 - 8);
    int v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v24(v25, 1, v15))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
      memcpy(__dst, v25, *(void *)(*(void *)(v16 - 8) + 64));
      uint64_t v17 = v26;
    }
    else
    {
      uint64_t v17 = v26;
      (*(void (**)(void *, char *, uint64_t))(v26 + 16))(__dst, v25, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v15);
    }
    uint64_t v19 = a3[8];
    uint64_t v20 = (char *)v4 + v19;
    uint64_t v21 = (char *)a2 + v19;
    if (v24((char *)a2 + v19, 1, v15))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v21, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v15);
    }
    *(void *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for TaskDefinition(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_254526D90();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 32);
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TaskDefinition(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(_DWORD *)(a1 + 74) = *(_DWORD *)(a2 + 74);
  *(unsigned char *)(a1 + 78) = *(unsigned char *)(a2 + 78);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 89) = *(void *)(a2 + 89);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  uint64_t v7 = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 136) = v7;
  *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
  *(unsigned char *)(a1 + 146) = *(unsigned char *)(a2 + 146);
  uint64_t v8 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v8;
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  uint64_t v9 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v9;
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(_WORD *)(a1 + 209) = *(_WORD *)(a2 + 209);
  uint64_t v10 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v10;
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(_WORD *)(a1 + 233) = *(_WORD *)(a2 + 233);
  uint64_t v11 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v11;
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  *(unsigned char *)(a1 + 265) = *(unsigned char *)(a2 + 265);
  uint64_t v12 = *(void *)(a2 + 280);
  uint64_t v13 = a3[7];
  __dst = (void *)(a1 + v13);
  uint64_t v22 = (const void *)(a2 + v13);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v12;
  uint64_t v14 = sub_254526D90();
  uint64_t v24 = *(void *)(v14 - 8);
  uint64_t v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v23(v22, 1, v14))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(__dst, v22, *(void *)(*(void *)(v15 - 8) + 64));
    uint64_t v16 = v24;
  }
  else
  {
    uint64_t v16 = v24;
    (*(void (**)(void *, const void *, uint64_t))(v24 + 16))(__dst, v22, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v14);
  }
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  if (v23((const void *)(a2 + v17), 1, v14))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v18, v19, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v18, 0, 1, v14);
  }
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TaskDefinition(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v6;
  long long v7 = *(_OWORD *)(a2 + 56);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v7;
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(unsigned char *)(a1 + 78) = *(unsigned char *)(a2 + 78);
  uint64_t v8 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = v8;
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  *(unsigned char *)(a1 + 90) = *(unsigned char *)(a2 + 90);
  *(unsigned char *)(a1 + 91) = *(unsigned char *)(a2 + 91);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  *(unsigned char *)(a1 + 93) = *(unsigned char *)(a2 + 93);
  *(unsigned char *)(a1 + 94) = *(unsigned char *)(a2 + 94);
  *(unsigned char *)(a1 + 95) = *(unsigned char *)(a2 + 95);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
  uint64_t v9 = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 120) = v9;
  uint64_t v10 = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 136) = v10;
  *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
  *(unsigned char *)(a1 + 146) = *(unsigned char *)(a2 + 146);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 168) = v11;
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 200);
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(void *)(a1 + 200) = v12;
  *(unsigned char *)(a1 + 209) = *(unsigned char *)(a2 + 209);
  *(unsigned char *)(a1 + 210) = *(unsigned char *)(a2 + 210);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(unsigned char *)(a1 + 233) = *(unsigned char *)(a2 + 233);
  *(unsigned char *)(a1 + 234) = *(unsigned char *)(a2 + 234);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  *(unsigned char *)(a1 + 265) = *(unsigned char *)(a2 + 265);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = sub_254526D90();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
LABEL_6:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 24))(v14, v15, v16);
LABEL_7:
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  int v25 = v18((void *)(a1 + v22), 1, v16);
  int v26 = v18(v24, 1, v16);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 24))(v23, v24, v16);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v23, v16);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v23, v24, v16);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v23, 0, 1, v16);
LABEL_13:
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for TaskDefinition(_OWORD *a1, char *a2, int *a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *a1 = *(_OWORD *)a2;
  a1[1] = v6;
  long long v7 = *((_OWORD *)a2 + 15);
  a1[14] = *((_OWORD *)a2 + 14);
  a1[15] = v7;
  long long v8 = *((_OWORD *)a2 + 17);
  a1[16] = *((_OWORD *)a2 + 16);
  a1[17] = v8;
  long long v9 = *((_OWORD *)a2 + 11);
  a1[10] = *((_OWORD *)a2 + 10);
  a1[11] = v9;
  long long v10 = *((_OWORD *)a2 + 13);
  a1[12] = *((_OWORD *)a2 + 12);
  a1[13] = v10;
  long long v11 = *((_OWORD *)a2 + 7);
  a1[6] = *((_OWORD *)a2 + 6);
  a1[7] = v11;
  long long v12 = *((_OWORD *)a2 + 9);
  a1[8] = *((_OWORD *)a2 + 8);
  a1[9] = v12;
  long long v13 = *((_OWORD *)a2 + 3);
  a1[2] = *((_OWORD *)a2 + 2);
  a1[3] = v13;
  long long v14 = *((_OWORD *)a2 + 5);
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = &a2[v15];
  a1[4] = *((_OWORD *)a2 + 4);
  a1[5] = v14;
  uint64_t v18 = sub_254526D90();
  uint64_t v19 = *(void *)(v18 - 8);
  int v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v20(v17, 1, v18))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v22 = a3[8];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = &a2[v22];
  if (v20(&a2[v22], 1, v18))
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v23, v24, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v23, 0, 1, v18);
  }
  *(void *)((char *)a1 + a3[9]) = *(void *)&a2[a3[9]];
  return a1;
}

uint64_t assignWithTake for TaskDefinition(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(_DWORD *)(a1 + 74) = *(_DWORD *)(a2 + 74);
  *(unsigned char *)(a1 + 78) = *(unsigned char *)(a2 + 78);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 89) = *(void *)(a2 + 89);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_WORD *)(a1 + 145) = *(_WORD *)(a2 + 145);
  uint64_t v8 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  uint64_t v9 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(_WORD *)(a1 + 209) = *(_WORD *)(a2 + 209);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(_WORD *)(a1 + 233) = *(_WORD *)(a2 + 233);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v10;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 264) = *(_WORD *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[7];
  long long v12 = (void *)(a1 + v11);
  long long v13 = (void *)(a2 + v11);
  uint64_t v14 = sub_254526D90();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_7:
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  int v23 = v16((void *)(a1 + v20), 1, v14);
  int v24 = v16(v22, 1, v14);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v21, v22, v14);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v21, v14);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v21, v22, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v21, 0, 1, v14);
LABEL_13:
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TaskDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25449CB94);
}

uint64_t sub_25449CB94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for TaskDefinition(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25449CC5C);
}

uint64_t sub_25449CC5C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_25449CD08()
{
  sub_25449B784(319, qword_26B266BE8, MEMORY[0x263F07490]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for TaskValidationError()
{
  return &type metadata for TaskValidationError;
}

void *initializeBufferWithCopyOfBuffer for MLHostTask(void *a1, void *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    uint64_t v21 = (void *)(v20 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = a3[5];
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = *(void *)((char *)a2 + v5 + 8);
    *(void *)uint64_t v6 = *(void *)((char *)a2 + v5);
    *((void *)v6 + 1) = v8;
    uint64_t v9 = *(void *)((char *)a2 + v5 + 24);
    *((void *)v6 + 2) = *(void *)((char *)a2 + v5 + 16);
    *((void *)v6 + 3) = v9;
    *((_WORD *)v6 + 24) = *(_WORD *)((char *)a2 + v5 + 48);
    *((_OWORD *)v6 + 2) = *(_OWORD *)((char *)a2 + v5 + 32);
    *((_WORD *)v6 + 36) = *(_WORD *)((char *)a2 + v5 + 72);
    *(_OWORD *)(v6 + 56) = *(_OWORD *)((char *)a2 + v5 + 56);
    *(_DWORD *)(v6 + 74) = *(_DWORD *)((char *)a2 + v5 + 74);
    v6[78] = *((unsigned char *)a2 + v5 + 78);
    *((void *)v6 + 10) = *(void *)((char *)a2 + v5 + 80);
    v6[88] = *((unsigned char *)a2 + v5 + 88);
    *(void *)(v6 + 89) = *(void *)((char *)a2 + v5 + 89);
    *((void *)v6 + 13) = *(void *)((char *)a2 + v5 + 104);
    *((_WORD *)v6 + 56) = *(_WORD *)((char *)a2 + v5 + 112);
    v6[128] = *((unsigned char *)a2 + v5 + 128);
    *((void *)v6 + 15) = *(void *)((char *)a2 + v5 + 120);
    v6[144] = *((unsigned char *)a2 + v5 + 144);
    *((void *)v6 + 17) = *(void *)((char *)a2 + v5 + 136);
    *(_WORD *)(v6 + 145) = *(_WORD *)((char *)a2 + v5 + 145);
    uint64_t v10 = *(void *)((char *)a2 + v5 + 160);
    *((void *)v6 + 19) = *(void *)((char *)a2 + v5 + 152);
    *((void *)v6 + 20) = v10;
    v6[176] = *((unsigned char *)a2 + v5 + 176);
    *((void *)v6 + 21) = *(void *)((char *)a2 + v5 + 168);
    uint64_t v11 = *(void *)((char *)a2 + v5 + 192);
    *((void *)v6 + 23) = *(void *)((char *)a2 + v5 + 184);
    *((void *)v6 + 24) = v11;
    v6[208] = *((unsigned char *)a2 + v5 + 208);
    *((void *)v6 + 25) = *(void *)((char *)a2 + v5 + 200);
    *(_WORD *)(v6 + 209) = *(_WORD *)((char *)a2 + v5 + 209);
    uint64_t v13 = *(void *)((char *)a2 + v5 + 216);
    uint64_t v12 = *(void *)((char *)a2 + v5 + 224);
    *((void *)v6 + 27) = v13;
    *((void *)v6 + 28) = v12;
    v6[232] = v7[232];
    *(_WORD *)(v6 + 233) = *(_WORD *)(v7 + 233);
    uint64_t v14 = *((void *)v7 + 31);
    *((void *)v6 + 30) = *((void *)v7 + 30);
    *((void *)v6 + 31) = v14;
    *((void *)v6 + 32) = *((void *)v7 + 32);
    v6[264] = v7[264];
    v6[265] = v7[265];
    uint64_t v15 = *((void *)v7 + 35);
    *((void *)v6 + 34) = *((void *)v7 + 34);
    *((void *)v6 + 35) = v15;
    char v47 = (int *)type metadata accessor for TaskDefinition(0);
    uint64_t v16 = v47[7];
    __dst = &v6[v16];
    uint64_t v42 = &v7[v16];
    uint64_t v17 = sub_254526D90();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v41(v42, 1, v17))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
      memcpy(__dst, v42, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(__dst, v42, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
    }
    uint64_t v22 = v47[8];
    int v23 = &v6[v22];
    int v24 = &v7[v22];
    if (v41(&v7[v22], 1, v17))
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v23, v24, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v23, 0, 1, v17);
    }
    *(void *)&v6[v47[9]] = *(void *)&v7[v47[9]];
    uint64_t v26 = a3[6];
    uint64_t v27 = a3[7];
    uint64_t v21 = a1;
    uint64_t v28 = (void *)((char *)a1 + v26);
    uint64_t v29 = (void *)((char *)a2 + v26);
    uint64_t v30 = *v29;
    uint64_t v31 = v29[1];
    LOBYTE(v29) = *((unsigned char *)a2 + v27);
    *uint64_t v28 = v30;
    v28[1] = v31;
    *((unsigned char *)a1 + v27) = (_BYTE)v29;
    uint64_t v32 = a3[8];
    uint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v41(v34, 1, v17))
    {
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v33, v34, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v33, 0, 1, v17);
    }
    uint64_t v36 = a3[9];
    uint64_t v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    if (v41((char *)a2 + v36, 1, v17))
    {
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v37, v38, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v37, 0, 1, v17);
    }
  }
  return v21;
}

uint64_t destroy for MLHostTask(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for TaskDefinition(0);
  uint64_t v6 = v4 + *(int *)(v5 + 28);
  uint64_t v7 = sub_254526D90();
  uint64_t v14 = *(void *)(v7 - 8);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  if (!v8(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v6, v7);
  }
  uint64_t v9 = v4 + *(int *)(v5 + 32);
  if (!v8(v9, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v9, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = a1 + a2[8];
  if (!v8(v10, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v10, v7);
  }
  uint64_t v11 = a1 + a2[9];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(v11, 1, v7);
  if (!result)
  {
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
    return v13(v11, v7);
  }
  return result;
}

unsigned char *initializeWithCopy for MLHostTask(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v3 = a3[5];
  uint64_t v4 = &a1[v3];
  uint64_t v5 = &a2[v3];
  uint64_t v6 = *(void *)&a2[v3 + 8];
  *(void *)uint64_t v4 = *(void *)&a2[v3];
  *((void *)v4 + 1) = v6;
  uint64_t v7 = *(void *)&a2[v3 + 24];
  *((void *)v4 + 2) = *(void *)&a2[v3 + 16];
  *((void *)v4 + 3) = v7;
  *((_WORD *)v4 + 24) = *(_WORD *)&a2[v3 + 48];
  *((_OWORD *)v4 + 2) = *(_OWORD *)&a2[v3 + 32];
  *((_WORD *)v4 + 36) = *(_WORD *)&a2[v3 + 72];
  *(_OWORD *)(v4 + 56) = *(_OWORD *)&a2[v3 + 56];
  *(_DWORD *)(v4 + 74) = *(_DWORD *)&a2[v3 + 74];
  v4[78] = a2[v3 + 78];
  *((void *)v4 + 10) = *(void *)&a2[v3 + 80];
  v4[88] = a2[v3 + 88];
  *(void *)(v4 + 89) = *(void *)&a2[v3 + 89];
  *((void *)v4 + 13) = *(void *)&a2[v3 + 104];
  *((_WORD *)v4 + 56) = *(_WORD *)&a2[v3 + 112];
  v4[128] = a2[v3 + 128];
  *((void *)v4 + 15) = *(void *)&a2[v3 + 120];
  v4[144] = a2[v3 + 144];
  *((void *)v4 + 17) = *(void *)&a2[v3 + 136];
  *(_WORD *)(v4 + 145) = *(_WORD *)&a2[v3 + 145];
  uint64_t v8 = *(void *)&a2[v3 + 160];
  *((void *)v4 + 19) = *(void *)&a2[v3 + 152];
  *((void *)v4 + 20) = v8;
  v4[176] = a2[v3 + 176];
  *((void *)v4 + 21) = *(void *)&a2[v3 + 168];
  uint64_t v9 = *(void *)&a2[v3 + 192];
  *((void *)v4 + 23) = *(void *)&a2[v3 + 184];
  *((void *)v4 + 24) = v9;
  v4[208] = a2[v3 + 208];
  *((void *)v4 + 25) = *(void *)&a2[v3 + 200];
  *(_WORD *)(v4 + 209) = *(_WORD *)&a2[v3 + 209];
  uint64_t v11 = *(void *)&a2[v3 + 216];
  uint64_t v10 = *(void *)&a2[v3 + 224];
  *((void *)v4 + 27) = v11;
  *((void *)v4 + 28) = v10;
  v4[232] = v5[232];
  *(_WORD *)(v4 + 233) = *(_WORD *)(v5 + 233);
  uint64_t v12 = *((void *)v5 + 31);
  *((void *)v4 + 30) = *((void *)v5 + 30);
  *((void *)v4 + 31) = v12;
  *((void *)v4 + 32) = *((void *)v5 + 32);
  v4[264] = v5[264];
  v4[265] = v5[265];
  uint64_t v13 = *((void *)v5 + 35);
  *((void *)v4 + 34) = *((void *)v5 + 34);
  *((void *)v4 + 35) = v13;
  uint64_t v45 = (int *)type metadata accessor for TaskDefinition(0);
  uint64_t v14 = v45[7];
  __dst = &v4[v14];
  uint64_t v39 = &v5[v14];
  uint64_t v15 = sub_254526D90();
  uint64_t v40 = *(void *)(v15 - 8);
  uint64_t v16 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v40 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v46 = v16;
  if (v16(v39, 1, v15))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(__dst, v39, *(void *)(*(void *)(v17 - 8) + 64));
    uint64_t v18 = v40;
  }
  else
  {
    uint64_t v18 = v40;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v40 + 16))(__dst, v39, v15);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v40 + 56))(__dst, 0, 1, v15);
  }
  uint64_t v19 = v15;
  uint64_t v20 = v45[8];
  uint64_t v21 = &v4[v20];
  uint64_t v22 = &v5[v20];
  if (v46(&v5[v20], 1, v19))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 16))(v21, v22, v19);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v21, 0, 1, v19);
  }
  *(void *)&v4[v45[9]] = *(void *)&v5[v45[9]];
  uint64_t v24 = a3[6];
  uint64_t v25 = a3[7];
  uint64_t v26 = &a1[v24];
  uint64_t v27 = (uint64_t *)&a2[v24];
  uint64_t v28 = *v27;
  uint64_t v29 = v27[1];
  LOBYTE(v27) = a2[v25];
  void *v26 = v28;
  v26[1] = v29;
  a1[v25] = (_BYTE)v27;
  uint64_t v30 = a3[8];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v46(v32, 1, v19))
  {
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 16))(v31, v32, v19);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v31, 0, 1, v19);
  }
  uint64_t v34 = a3[9];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  if (v46(&a2[v34], 1, v19))
  {
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 16))(v35, v36, v19);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v35, 0, 1, v19);
  }
  return a1;
}

unsigned char *assignWithCopy for MLHostTask(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v4 = a3[5];
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  *(void *)uint64_t v5 = *(void *)&a2[v4];
  *((void *)v5 + 1) = *(void *)&a2[v4 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v5 + 2) = *((void *)v6 + 2);
  *((void *)v5 + 3) = *((void *)v6 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v7 = *((_OWORD *)v6 + 2);
  *((_WORD *)v5 + 24) = *((_WORD *)v6 + 24);
  *((_OWORD *)v5 + 2) = v7;
  long long v8 = *(_OWORD *)(v6 + 56);
  *((_WORD *)v5 + 36) = *((_WORD *)v6 + 36);
  *(_OWORD *)(v5 + 56) = v8;
  v5[74] = v6[74];
  v5[75] = v6[75];
  v5[76] = v6[76];
  v5[77] = v6[77];
  v5[78] = v6[78];
  uint64_t v9 = *((void *)v6 + 10);
  v5[88] = v6[88];
  *((void *)v5 + 10) = v9;
  v5[89] = v6[89];
  v5[90] = v6[90];
  v5[91] = v6[91];
  v5[92] = v6[92];
  v5[93] = v6[93];
  v5[94] = v6[94];
  v5[95] = v6[95];
  v5[96] = v6[96];
  *((void *)v5 + 13) = *((void *)v6 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[112] = v6[112];
  v5[113] = v6[113];
  uint64_t v10 = *((void *)v6 + 15);
  v5[128] = v6[128];
  *((void *)v5 + 15) = v10;
  uint64_t v11 = *((void *)v6 + 17);
  v5[144] = v6[144];
  *((void *)v5 + 17) = v11;
  v5[145] = v6[145];
  v5[146] = v6[146];
  *((void *)v5 + 19) = *((void *)v6 + 19);
  *((void *)v5 + 20) = *((void *)v6 + 20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = *((void *)v6 + 21);
  v5[176] = v6[176];
  *((void *)v5 + 21) = v12;
  *((void *)v5 + 23) = *((void *)v6 + 23);
  *((void *)v5 + 24) = *((void *)v6 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = *((void *)v6 + 25);
  v5[208] = v6[208];
  *((void *)v5 + 25) = v13;
  v5[209] = v6[209];
  v5[210] = v6[210];
  *((void *)v5 + 27) = *((void *)v6 + 27);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v5 + 28) = *((void *)v6 + 28);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[232] = v6[232];
  v5[233] = v6[233];
  v5[234] = v6[234];
  *((void *)v5 + 30) = *((void *)v6 + 30);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v5 + 31) = *((void *)v6 + 31);
  *((void *)v5 + 32) = *((void *)v6 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[264] = v6[264];
  v5[265] = v6[265];
  *((void *)v5 + 34) = *((void *)v6 + 34);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v5 + 35) = *((void *)v6 + 35);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = (int *)type metadata accessor for TaskDefinition(0);
  uint64_t v15 = v14[7];
  uint64_t v16 = &v5[v15];
  uint64_t v17 = &v6[v15];
  uint64_t v18 = sub_254526D90();
  uint64_t v47 = *(void *)(v18 - 8);
  uint64_t v19 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v47 + 48);
  int v20 = v19(v16, 1, v18);
  char v48 = v19;
  int v21 = v19(v17, 1, v18);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 16))(v16, v17, v18);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v47 + 56))(v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(unsigned char *, uint64_t))(v47 + 8))(v16, v18);
LABEL_6:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 24))(v16, v17, v18);
LABEL_7:
  uint64_t v23 = v14[8];
  uint64_t v24 = &v5[v23];
  uint64_t v25 = &v6[v23];
  int v26 = v19(&v5[v23], 1, v18);
  int v27 = v19(v25, 1, v18);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 16))(v24, v25, v18);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v47 + 56))(v24, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v27)
  {
    (*(void (**)(unsigned char *, uint64_t))(v47 + 8))(v24, v18);
LABEL_12:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 24))(v24, v25, v18);
LABEL_13:
  *(void *)&v5[v14[9]] = *(void *)&v6[v14[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[6];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  *uint64_t v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[7]] = a2[a3[7]];
  uint64_t v32 = a3[8];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  int v35 = v19(&a1[v32], 1, v18);
  int v36 = v19(v34, 1, v18);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 16))(v33, v34, v18);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v47 + 56))(v33, 0, 1, v18);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v36)
  {
    (*(void (**)(unsigned char *, uint64_t))(v47 + 8))(v33, v18);
LABEL_18:
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 24))(v33, v34, v18);
LABEL_19:
  uint64_t v38 = a3[9];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  int v41 = v48(&a1[v38], 1, v18);
  int v42 = v48(v40, 1, v18);
  if (!v41)
  {
    if (!v42)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 24))(v39, v40, v18);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v47 + 8))(v39, v18);
    goto LABEL_24;
  }
  if (v42)
  {
LABEL_24:
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 16))(v39, v40, v18);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v47 + 56))(v39, 0, 1, v18);
  return a1;
}

unsigned char *initializeWithTake for MLHostTask(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v5 = a3[5];
  uint64_t v6 = &a1[v5];
  long long v7 = &a2[v5];
  long long v8 = *(_OWORD *)&a2[v5 + 16];
  *uint64_t v6 = *(_OWORD *)&a2[v5];
  v6[1] = v8;
  long long v9 = *(_OWORD *)&a2[v5 + 80];
  v6[4] = *(_OWORD *)&a2[v5 + 64];
  v6[5] = v9;
  long long v10 = *(_OWORD *)&a2[v5 + 48];
  v6[2] = *(_OWORD *)&a2[v5 + 32];
  v6[3] = v10;
  long long v11 = *(_OWORD *)&a2[v5 + 144];
  v6[8] = *(_OWORD *)&a2[v5 + 128];
  v6[9] = v11;
  long long v12 = *(_OWORD *)&a2[v5 + 112];
  v6[6] = *(_OWORD *)&a2[v5 + 96];
  v6[7] = v12;
  long long v13 = *(_OWORD *)&a2[v5 + 208];
  v6[12] = *(_OWORD *)&a2[v5 + 192];
  v6[13] = v13;
  long long v14 = *(_OWORD *)&a2[v5 + 176];
  v6[10] = *(_OWORD *)&a2[v5 + 160];
  v6[11] = v14;
  long long v15 = *(_OWORD *)&a2[v5 + 272];
  v6[16] = *(_OWORD *)&a2[v5 + 256];
  v6[17] = v15;
  long long v16 = *(_OWORD *)&a2[v5 + 240];
  v6[14] = *(_OWORD *)&a2[v5 + 224];
  v6[15] = v16;
  uint64_t v17 = (int *)type metadata accessor for TaskDefinition(0);
  uint64_t v18 = v17[7];
  uint64_t v19 = (char *)v6 + v18;
  int v20 = &v7[v18];
  uint64_t v21 = sub_254526D90();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v39 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v22 + 48);
  if (v39(v20, 1, v21))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, unsigned char *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  uint64_t v24 = v17[8];
  uint64_t v25 = (char *)v6 + v24;
  int v26 = &v7[v24];
  if (v39(&v7[v24], 1, v21))
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, unsigned char *, uint64_t))(v22 + 32))(v25, v26, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v25, 0, 1, v21);
  }
  *(void *)((char *)v6 + v17[9]) = *(void *)&v7[v17[9]];
  uint64_t v28 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  a1[v28] = a2[v28];
  uint64_t v29 = a3[8];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  if (v39(&a2[v29], 1, v21))
  {
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v22 + 32))(v30, v31, v21);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v22 + 56))(v30, 0, 1, v21);
  }
  uint64_t v33 = a3[9];
  uint64_t v34 = &a1[v33];
  int v35 = &a2[v33];
  if (v39(v35, 1, v21))
  {
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v22 + 32))(v34, v35, v21);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v22 + 56))(v34, 0, 1, v21);
  }
  return a1;
}

unsigned char *assignWithTake for MLHostTask(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v4 = a3[5];
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = *(void *)&a2[v4 + 8];
  *(void *)uint64_t v5 = *(void *)&a2[v4];
  *((void *)v5 + 1) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *((void *)v6 + 3);
  *((void *)v5 + 2) = *((void *)v6 + 2);
  *((void *)v5 + 3) = v8;
  swift_bridgeObjectRelease();
  *((_OWORD *)v5 + 2) = *((_OWORD *)v6 + 2);
  *((_WORD *)v5 + 24) = *((_WORD *)v6 + 24);
  *(_OWORD *)(v5 + 56) = *(_OWORD *)(v6 + 56);
  *((_WORD *)v5 + 36) = *((_WORD *)v6 + 36);
  *(_DWORD *)(v5 + 74) = *(_DWORD *)(v6 + 74);
  v5[78] = v6[78];
  *((void *)v5 + 10) = *((void *)v6 + 10);
  v5[88] = v6[88];
  *(void *)(v5 + 89) = *(void *)(v6 + 89);
  *((void *)v5 + 13) = *((void *)v6 + 13);
  swift_bridgeObjectRelease();
  *((_WORD *)v5 + 56) = *((_WORD *)v6 + 56);
  *((void *)v5 + 15) = *((void *)v6 + 15);
  v5[128] = v6[128];
  *((void *)v5 + 17) = *((void *)v6 + 17);
  v5[144] = v6[144];
  *(_WORD *)(v5 + 145) = *(_WORD *)(v6 + 145);
  uint64_t v9 = *((void *)v6 + 20);
  *((void *)v5 + 19) = *((void *)v6 + 19);
  *((void *)v5 + 20) = v9;
  swift_bridgeObjectRelease();
  *((void *)v5 + 21) = *((void *)v6 + 21);
  v5[176] = v6[176];
  uint64_t v10 = *((void *)v6 + 24);
  *((void *)v5 + 23) = *((void *)v6 + 23);
  *((void *)v5 + 24) = v10;
  swift_bridgeObjectRelease();
  *((void *)v5 + 25) = *((void *)v6 + 25);
  v5[208] = v6[208];
  *(_WORD *)(v5 + 209) = *(_WORD *)(v6 + 209);
  *((void *)v5 + 27) = *((void *)v6 + 27);
  swift_bridgeObjectRelease();
  *((void *)v5 + 28) = *((void *)v6 + 28);
  swift_bridgeObjectRelease();
  v5[232] = v6[232];
  *(_WORD *)(v5 + 233) = *(_WORD *)(v6 + 233);
  *((void *)v5 + 30) = *((void *)v6 + 30);
  swift_bridgeObjectRelease();
  uint64_t v11 = *((void *)v6 + 32);
  *((void *)v5 + 31) = *((void *)v6 + 31);
  *((void *)v5 + 32) = v11;
  swift_bridgeObjectRelease();
  *((_WORD *)v5 + 132) = *((_WORD *)v6 + 132);
  *((void *)v5 + 34) = *((void *)v6 + 34);
  swift_bridgeObjectRelease();
  *((void *)v5 + 35) = *((void *)v6 + 35);
  swift_bridgeObjectRelease();
  long long v12 = (int *)type metadata accessor for TaskDefinition(0);
  uint64_t v13 = v12[7];
  long long v14 = &v5[v13];
  long long v15 = &v6[v13];
  uint64_t v16 = sub_254526D90();
  uint64_t v47 = *(void *)(v16 - 8);
  uint64_t v17 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v47 + 48);
  int v18 = v17(v14, 1, v16);
  int v19 = v17(v15, 1, v16);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 32))(v14, v15, v16);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v47 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(unsigned char *, uint64_t))(v47 + 8))(v14, v16);
LABEL_6:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 40))(v14, v15, v16);
LABEL_7:
  uint64_t v21 = v12[8];
  uint64_t v22 = &v5[v21];
  uint64_t v23 = &v6[v21];
  int v24 = v17(&v5[v21], 1, v16);
  int v25 = v17(v23, 1, v16);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 32))(v22, v23, v16);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v47 + 56))(v22, 0, 1, v16);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v25)
  {
    (*(void (**)(unsigned char *, uint64_t))(v47 + 8))(v22, v16);
LABEL_12:
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 40))(v22, v23, v16);
LABEL_13:
  *(void *)&v5[v12[9]] = *(void *)&v6[v12[9]];
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[6];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = (uint64_t *)&a2[v27];
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *uint64_t v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  int v35 = v17(&a1[v32], 1, v16);
  int v36 = v17(v34, 1, v16);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 32))(v33, v34, v16);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v47 + 56))(v33, 0, 1, v16);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v36)
  {
    (*(void (**)(unsigned char *, uint64_t))(v47 + 8))(v33, v16);
LABEL_18:
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 40))(v33, v34, v16);
LABEL_19:
  uint64_t v38 = a3[9];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  int v41 = v17(&a1[v38], 1, v16);
  int v42 = v17(v40, 1, v16);
  if (!v41)
  {
    if (!v42)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 40))(v39, v40, v16);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v47 + 8))(v39, v16);
    goto LABEL_24;
  }
  if (v42)
  {
LABEL_24:
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 32))(v39, v40, v16);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v47 + 56))(v39, 0, 1, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for MLHostTask(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25449EC14);
}

uint64_t sub_25449EC14(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for TaskDefinition(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + a3[5];
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else if (a2 == 2147483646)
  {
    unint64_t v12 = *(void *)(a1 + a3[6] + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    int v13 = v12 - 1;
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
  else
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    long long v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + a3[8];
    return v15(v17, a2, v16);
  }
}

uint64_t storeEnumTagSinglePayload for MLHostTask(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25449ED6C);
}

uint64_t sub_25449ED6C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = type metadata accessor for TaskDefinition(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + a4[5];
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else if (a3 == 2147483646)
  {
    *(void *)(a1 + a4[6] + 8) = a2;
  }
  else
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a4[8];
    return v14(v16, a2, a2, v15);
  }
  return result;
}

void sub_25449EEA4()
{
  type metadata accessor for TaskDefinition(319);
  if (v0 <= 0x3F)
  {
    sub_25449B784(319, qword_26B266BE8, MEMORY[0x263F07490]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *sub_25449EFB0(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for MLHostTask.CodingKeys()
{
  return &type metadata for MLHostTask.CodingKeys;
}

uint64_t getEnumTagSinglePayload for CustomEventAnalytics.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s20LighthouseBackground19TaskValidationErrorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25449F124);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TaskValidationError.CodingKeys()
{
  return &type metadata for TaskValidationError.CodingKeys;
}

ValueMetadata *type metadata accessor for TaskValidationError.InvalidNameCodingKeys()
{
  return &type metadata for TaskValidationError.InvalidNameCodingKeys;
}

ValueMetadata *type metadata accessor for TaskValidationError.InvalidBundleIdentifierCodingKeys()
{
  return &type metadata for TaskValidationError.InvalidBundleIdentifierCodingKeys;
}

ValueMetadata *type metadata accessor for TaskValidationError.InvalidDefinitionCodingKeys()
{
  return &type metadata for TaskValidationError.InvalidDefinitionCodingKeys;
}

ValueMetadata *type metadata accessor for TaskValidationError.InvalidTaskRequestCodingKeys()
{
  return &type metadata for TaskValidationError.InvalidTaskRequestCodingKeys;
}

ValueMetadata *type metadata accessor for TaskValidationError.InvalidStartDateCodingKeys()
{
  return &type metadata for TaskValidationError.InvalidStartDateCodingKeys;
}

ValueMetadata *type metadata accessor for TaskValidationError.InvalidEndDateCodingKeys()
{
  return &type metadata for TaskValidationError.InvalidEndDateCodingKeys;
}

ValueMetadata *type metadata accessor for TaskValidationError.InvalidOSTypeCodingKeys()
{
  return &type metadata for TaskValidationError.InvalidOSTypeCodingKeys;
}

uint64_t getEnumTagSinglePayload for DeviceOSType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s20LighthouseBackground10MLHostTaskV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25449F328);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TaskDefinition.CodingKeys()
{
  return &type metadata for TaskDefinition.CodingKeys;
}

unsigned char *_s20LighthouseBackground8TaskTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25449F42CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TaskMetadata.CodingKeys()
{
  return &type metadata for TaskMetadata.CodingKeys;
}

uint64_t getEnumTagSinglePayload for PullMetadata.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for PullMetadata.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25449F554);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25449F57C()
{
  return 0;
}

ValueMetadata *type metadata accessor for PullMetadata.CodingKeys()
{
  return &type metadata for PullMetadata.CodingKeys;
}

uint64_t getEnumTagSinglePayload for PushMetadata.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PushMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25449F6F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PushMetadata.CodingKeys()
{
  return &type metadata for PushMetadata.CodingKeys;
}

unint64_t sub_25449F72C()
{
  unint64_t result = qword_269DF3540;
  if (!qword_269DF3540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3540);
  }
  return result;
}

unint64_t sub_25449F784()
{
  unint64_t result = qword_269DF3548;
  if (!qword_269DF3548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3548);
  }
  return result;
}

unint64_t sub_25449F7DC()
{
  unint64_t result = qword_269DF3550;
  if (!qword_269DF3550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3550);
  }
  return result;
}

unint64_t sub_25449F834()
{
  unint64_t result = qword_269DF3558;
  if (!qword_269DF3558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3558);
  }
  return result;
}

unint64_t sub_25449F88C()
{
  unint64_t result = qword_269DF3560;
  if (!qword_269DF3560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3560);
  }
  return result;
}

unint64_t sub_25449F8E4()
{
  unint64_t result = qword_269DF3568;
  if (!qword_269DF3568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3568);
  }
  return result;
}

unint64_t sub_25449F93C()
{
  unint64_t result = qword_269DF3570;
  if (!qword_269DF3570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3570);
  }
  return result;
}

unint64_t sub_25449F994()
{
  unint64_t result = qword_269DF3578;
  if (!qword_269DF3578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3578);
  }
  return result;
}

unint64_t sub_25449F9EC()
{
  unint64_t result = qword_269DF3580;
  if (!qword_269DF3580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3580);
  }
  return result;
}

unint64_t sub_25449FA44()
{
  unint64_t result = qword_269DF3588;
  if (!qword_269DF3588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3588);
  }
  return result;
}

unint64_t sub_25449FA9C()
{
  unint64_t result = qword_269DF3590;
  if (!qword_269DF3590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3590);
  }
  return result;
}

unint64_t sub_25449FAF4()
{
  unint64_t result = qword_269DF3598;
  if (!qword_269DF3598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3598);
  }
  return result;
}

unint64_t sub_25449FB4C()
{
  unint64_t result = qword_269DF35A0;
  if (!qword_269DF35A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF35A0);
  }
  return result;
}

unint64_t sub_25449FBA4()
{
  unint64_t result = qword_269DF35A8;
  if (!qword_269DF35A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF35A8);
  }
  return result;
}

unint64_t sub_25449FBFC()
{
  unint64_t result = qword_269DF35B0;
  if (!qword_269DF35B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF35B0);
  }
  return result;
}

unint64_t sub_25449FC54()
{
  unint64_t result = qword_269DF35B8;
  if (!qword_269DF35B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF35B8);
  }
  return result;
}

unint64_t sub_25449FCAC()
{
  unint64_t result = qword_269DF35C0;
  if (!qword_269DF35C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF35C0);
  }
  return result;
}

unint64_t sub_25449FD04()
{
  unint64_t result = qword_269DF35C8;
  if (!qword_269DF35C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF35C8);
  }
  return result;
}

unint64_t sub_25449FD5C()
{
  unint64_t result = qword_269DF35D0;
  if (!qword_269DF35D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF35D0);
  }
  return result;
}

unint64_t sub_25449FDB4()
{
  unint64_t result = qword_269DF35D8;
  if (!qword_269DF35D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF35D8);
  }
  return result;
}

unint64_t sub_25449FE0C()
{
  unint64_t result = qword_269DF35E0;
  if (!qword_269DF35E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF35E0);
  }
  return result;
}

unint64_t sub_25449FE64()
{
  unint64_t result = qword_269DF35E8;
  if (!qword_269DF35E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF35E8);
  }
  return result;
}

unint64_t sub_25449FEBC()
{
  unint64_t result = qword_269DF35F0;
  if (!qword_269DF35F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF35F0);
  }
  return result;
}

unint64_t sub_25449FF14()
{
  unint64_t result = qword_269DF35F8;
  if (!qword_269DF35F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF35F8);
  }
  return result;
}

unint64_t sub_25449FF6C()
{
  unint64_t result = qword_26B266D60;
  if (!qword_26B266D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B266D60);
  }
  return result;
}

unint64_t sub_25449FFC4()
{
  unint64_t result = qword_26B266D58;
  if (!qword_26B266D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B266D58);
  }
  return result;
}

unint64_t sub_2544A001C()
{
  unint64_t result = qword_269DF3600;
  if (!qword_269DF3600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3600);
  }
  return result;
}

unint64_t sub_2544A0074()
{
  unint64_t result = qword_269DF3608;
  if (!qword_269DF3608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3608);
  }
  return result;
}

unint64_t sub_2544A00CC()
{
  unint64_t result = qword_269DF3610;
  if (!qword_269DF3610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3610);
  }
  return result;
}

unint64_t sub_2544A0124()
{
  unint64_t result = qword_269DF3618;
  if (!qword_269DF3618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3618);
  }
  return result;
}

unint64_t sub_2544A017C()
{
  unint64_t result = qword_269DF3620;
  if (!qword_269DF3620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3620);
  }
  return result;
}

unint64_t sub_2544A01D4()
{
  unint64_t result = qword_269DF3628;
  if (!qword_269DF3628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3628);
  }
  return result;
}

uint64_t sub_2544A0228()
{
  return 0x6E6F697461657263;
}

uint64_t sub_2544A0248(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6369706F74 && a2 == 0xE500000000000000;
  if (v3 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x496C656E6E616863 && a2 == 0xE900000000000044 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6570795468737570 && a2 == 0xE800000000000000 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F69725068737570 && a2 == 0xEC00000079746972 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F697461657263 && a2 == 0xEC00000065746144)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_2545279E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_2544A0468(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6E6F697461657263 && a2 == 0xEC00000065746144)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_2545279E0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2544A0500(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6174654D68737570 && a2 == 0xEC00000061746164;
  if (v3 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174654D6C6C7570 && a2 == 0xEC00000061746164)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2545279E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2544A0608(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v3 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000254532F50 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x757165526B736174 && a2 == 0xEB00000000747365 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7461447472617473 && a2 == 0xE900000000000065 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65746144646E65 && a2 == 0xE700000000000000 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000254532F70)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_2545279E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_2544A0868(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x4E64696C61766E69 && a2 == 0xEB00000000656D61;
  if (v3 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000254532F90 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000254532FB0 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000254532FD0 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000254532FF0 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x4564696C61766E69 && a2 == 0xEE0065746144646ELL || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x4F64696C61766E69 && a2 == 0xED00006570795453)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_2545279E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_2544A0B58(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x657079546B736174 && a2 == 0xE800000000000000;
  if (v3 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696665446B736174 && a2 == 0xEE006E6F6974696ELL || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646C6F466B736174 && a2 == 0xEA00000000007265 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000254533010 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000254533030)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_2545279E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

unint64_t sub_2544A0DC8()
{
  unint64_t result = qword_269DF3630;
  if (!qword_269DF3630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3630);
  }
  return result;
}

unint64_t sub_2544A0E1C()
{
  unint64_t result = qword_269DF3638;
  if (!qword_269DF3638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3638);
  }
  return result;
}

unint64_t sub_2544A0E70()
{
  unint64_t result = qword_269DF3640;
  if (!qword_269DF3640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3640);
  }
  return result;
}

uint64_t sub_2544A0EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

id TaskRequest.getSystemTaskRequest(identifier:)()
{
  long long v1 = v0[13];
  long long v52 = v0[12];
  long long v53 = v1;
  long long v2 = v0[15];
  long long v54 = v0[14];
  long long v55 = v2;
  long long v3 = v0[9];
  long long v48 = v0[8];
  long long v49 = v3;
  long long v4 = v0[11];
  long long v50 = v0[10];
  long long v51 = v4;
  long long v5 = v0[5];
  long long v44 = v0[4];
  long long v45 = v5;
  long long v6 = v0[7];
  long long v46 = v0[6];
  long long v47 = v6;
  long long v7 = v0[1];
  long long v40 = *v0;
  long long v41 = v7;
  long long v8 = v0[3];
  long long v42 = v0[2];
  long long v43 = v8;
  if (BYTE1(v41))
  {
    if (BYTE9(v42)) {
      goto LABEL_10;
    }
    id v9 = objc_allocWithZone(MEMORY[0x263F298E0]);
    swift_bridgeObjectRetain();
    uint64_t v10 = (void *)sub_254526FD0();
    swift_bridgeObjectRelease();
    id v11 = objc_msgSend(v9, sel_initWithIdentifier_, v10);

    objc_msgSend(v11, sel_setScheduleAfter_, *((double *)&v41 + 1));
    if ((BYTE8(v42) & 1) == 0) {
      objc_msgSend(v11, sel_setTrySchedulingBefore_, *(double *)&v42);
    }
  }
  else
  {
    if (!BYTE9(v42)) {
      goto LABEL_10;
    }
    id v12 = objc_allocWithZone(MEMORY[0x263F298E8]);
    swift_bridgeObjectRetain();
    uint64_t v13 = (void *)sub_254526FD0();
    swift_bridgeObjectRelease();
    id v11 = objc_msgSend(v12, sel_initWithIdentifier_, v13);

    objc_msgSend(v11, sel_setInterval_, *(double *)&v40);
    if ((v41 & 1) == 0) {
      objc_msgSend(v11, sel_setMinDurationBetweenInstances_, *((double *)&v40 + 1));
    }
  }
  if (v11)
  {
    v23[0] = v11;
    id v14 = v11;
    sub_2544A12B4(v23);

    return v11;
  }
LABEL_10:
  if (qword_26B267240 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_254526E00();
  __swift_project_value_buffer(v15, (uint64_t)qword_26B267340);
  sub_254493A84((uint64_t)&v40);
  sub_254493A84((uint64_t)&v40);
  uint64_t v16 = sub_254526DE0();
  os_log_type_t v17 = sub_254527420();
  if (os_log_type_enabled(v16, v17))
  {
    int v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v39 = v19;
    *(_DWORD *)int v18 = 136315138;
    long long v35 = v52;
    long long v36 = v53;
    long long v37 = v54;
    long long v38 = v55;
    long long v31 = v48;
    long long v32 = v49;
    long long v33 = v50;
    long long v34 = v51;
    long long v27 = v44;
    long long v28 = v45;
    long long v29 = v46;
    long long v30 = v47;
    v23[1] = *((id *)&v40 + 1);
    long long v24 = v41;
    long long v25 = v42;
    long long v26 = v43;
    uint64_t v20 = TaskRequest.description.getter();
    v23[0] = (id)sub_254498B68(v20, v21, &v39);
    sub_254527500();
    swift_bridgeObjectRelease();
    sub_254493BD8((uint64_t)&v40);
    sub_254493BD8((uint64_t)&v40);
    _os_log_impl(&dword_254486000, v16, v17, "Invalid TaskRequest, can't generate BGSystemTaskRequest: %s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A27C9E0](v19, -1, -1);
    MEMORY[0x25A27C9E0](v18, -1, -1);
  }
  else
  {
    sub_254493BD8((uint64_t)&v40);
    sub_254493BD8((uint64_t)&v40);
  }

  return 0;
}

void sub_2544A12B4(id *a1)
{
  id v2 = *a1;
  char v3 = *(unsigned char *)(v1 + 43);
  objc_msgSend(*a1, sel_setRequiresNetworkConnectivity_, *(unsigned char *)(v1 + 42) & 1);
  sub_254493190(v1 + 44, (uint64_t)&v89, &qword_26B266E38);
  objc_msgSend(v2, sel_setRequiresExternalPower_, v3 & 1);
  sub_254493190((uint64_t)&v89, (uint64_t)&v90, &qword_26B266E38);
  uint64_t v4 = qword_25452A618[v90];
  sub_254493190(v1 + 45, (uint64_t)&v88, &qword_26B266E48);
  objc_msgSend(v2, sel_setPriority_, v4);
  sub_254493190((uint64_t)&v88, (uint64_t)&v91, &qword_26B266E48);
  LOBYTE(v4) = *(unsigned char *)(v1 + 46);
  objc_msgSend(v2, sel_setRequiresProtectionClass_, qword_25452A6B0[v91]);
  uint64_t v5 = v4 & 1;
  double v6 = *(double *)(v1 + 48);
  LODWORD(v4) = *(unsigned __int8 *)(v1 + 56);
  objc_msgSend(v2, sel_setPreventsDeviceSleep_, v5);
  double v7 = 0.0;
  if (!v4) {
    double v7 = v6;
  }
  char v8 = *(unsigned char *)(v1 + 57);
  objc_msgSend(v2, sel_setRandomInitialDelay_, v7);
  uint64_t v9 = v8 & 1;
  char v10 = *(unsigned char *)(v1 + 58);
  objc_msgSend(v2, sel_setPostInstall_, v9);
  uint64_t v11 = v10 & 1;
  char v12 = *(unsigned char *)(v1 + 59);
  objc_msgSend(v2, sel_setRequiresInexpensiveNetworkConnectivity_, v11);
  uint64_t v13 = v12 & 1;
  char v14 = *(unsigned char *)(v1 + 60);
  objc_msgSend(v2, sel_setRequiresUnconstrainedNetworkConnectivity_, v13);
  uint64_t v15 = v14 & 1;
  char v16 = *(unsigned char *)(v1 + 61);
  objc_msgSend(v2, sel_setAppRefresh_, v15);
  uint64_t v17 = v16 & 1;
  char v18 = *(unsigned char *)(v1 + 62);
  objc_msgSend(v2, sel_setRequiresUserInactivity_, v17);
  uint64_t v19 = v18 & 1;
  char v20 = *(unsigned char *)(v1 + 63);
  objc_msgSend(v2, sel_setRequiresSignificantUserInactivity_, v19);
  uint64_t v21 = v20 & 1;
  char v22 = *(unsigned char *)(v1 + 64);
  objc_msgSend(v2, sel_setPowerNap_, v21);
  sub_254493190(v1 + 72, (uint64_t)v87, &qword_26B266E58);
  objc_msgSend(v2, sel_setResourceIntensive_, v22 & 1);
  sub_254493190((uint64_t)v87, (uint64_t)&v92, &qword_26B266E58);
  if (v92)
  {
    uint64_t v23 = *(void *)(v92 + 16);
    if (v23)
    {
      uint64_t v24 = 0;
      long long v25 = (char *)(v92 + 32);
      do
      {
        uint64_t v26 = *v25++;
        uint64_t v27 = qword_25452A640[v26];
        if ((v27 & v24) != 0) {
          uint64_t v27 = 0;
        }
        v24 |= v27;
        --v23;
      }
      while (v23);
    }
    else
    {
      uint64_t v24 = 0;
    }
    objc_msgSend(v2, sel_setResources_, v24);
  }
  char v28 = *(unsigned char *)(v1 + 81);
  objc_msgSend(v2, sel_setMayRebootDevice_, *(unsigned char *)(v1 + 80) & 1);
  uint64_t v29 = v28 & 1;
  uint64_t v30 = *(void *)(v1 + 88);
  int v31 = *(unsigned __int8 *)(v1 + 96);
  objc_msgSend(v2, sel_setUserRequestedBackupTask_, v29);
  if (v31) {
    uint64_t v32 = 0;
  }
  else {
    uint64_t v32 = v30;
  }
  uint64_t v33 = *(void *)(v1 + 104);
  int v34 = *(unsigned __int8 *)(v1 + 112);
  objc_msgSend(v2, sel_setNetworkDownloadSize_, v32);
  if (v34) {
    uint64_t v35 = 0;
  }
  else {
    uint64_t v35 = v33;
  }
  char v36 = *(unsigned char *)(v1 + 113);
  objc_msgSend(v2, sel_setNetworkUploadSize_, v35);
  uint64_t v37 = v36 & 1;
  char v38 = *(unsigned char *)(v1 + 114);
  objc_msgSend(v2, sel_setCommunicatesWithPairedDevice_, v37);
  uint64_t v39 = v38 & 1;
  uint64_t v40 = *(void *)(v1 + 128);
  objc_msgSend(v2, sel_setShouldWakeDevice_, v39);
  if (v40)
  {
    swift_bridgeObjectRetain();
    long long v41 = (void *)sub_254526FD0();
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v41 = 0;
  }
  uint64_t v42 = *(void *)(v1 + 136);
  int v43 = *(unsigned __int8 *)(v1 + 144);
  objc_msgSend(v2, sel_setGroupName_, v41);

  if (v43) {
    uint64_t v44 = 1;
  }
  else {
    uint64_t v44 = v42;
  }
  if (v44 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v45 = *(void *)(v1 + 160);
    objc_msgSend(v2, sel_setGroupConcurrencyLimit_);
    if (v45)
    {
      swift_bridgeObjectRetain();
      long long v46 = (void *)sub_254526FD0();
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v46 = 0;
    }
    double v47 = *(double *)(v1 + 168);
    int v48 = *(unsigned __int8 *)(v1 + 176);
    objc_msgSend(v2, sel_setRateLimitConfigurationName_, v46);

    double v49 = 0.0;
    if (!v48) {
      double v49 = v47;
    }
    char v50 = *(unsigned char *)(v1 + 177);
    objc_msgSend(v2, sel_setExpectedDuration_, v49);
    uint64_t v51 = v50 & 1;
    char v52 = *(unsigned char *)(v1 + 178);
    objc_msgSend(v2, sel_setPowerBudgeted_, v51);
    uint64_t v53 = v52 & 1;
    uint64_t v54 = *(void *)(v1 + 184);
    objc_msgSend(v2, sel_setDataBudgeted_, v53);
    if (v54)
    {
      swift_bridgeObjectRetain();
      long long v55 = (void *)sub_2545271A0();
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v55 = 0;
    }
    uint64_t v56 = *(void *)(v1 + 192);
    objc_msgSend(v2, sel_setRelatedApplications_, v55);

    if (v56)
    {
      swift_bridgeObjectRetain();
      long long v57 = (void *)sub_2545271A0();
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v57 = 0;
    }
    char v58 = *(unsigned char *)(v1 + 200);
    objc_msgSend(v2, sel_setInvolvedProcesses_, v57);

    uint64_t v59 = v58 & 1;
    char v60 = *(unsigned char *)(v1 + 201);
    objc_msgSend(v2, sel_setRunOnAppForeground_, v59);
    uint64_t v61 = v60 & 1;
    char v62 = *(unsigned char *)(v1 + 202);
    objc_msgSend(v2, sel_setRequestsApplicationLaunch_, v61);
    sub_254493190(v1 + 208, (uint64_t)v86, &qword_26B266E50);
    objc_msgSend(v2, sel_setRequiresBuddyComplete_, v62 & 1);
    sub_254493190((uint64_t)v86, (uint64_t)&v93, &qword_26B266E50);
    if (v93)
    {
      uint64_t v63 = *(void *)(v93 + 16);
      if (v63)
      {
        uint64_t v64 = 0;
        long long v65 = (unsigned __int8 *)(v93 + 32);
        do
        {
          unsigned int v67 = *v65++;
          uint64_t v66 = v67;
          if ((~v64 & (v67 + 1)) != 0) {
            uint64_t v68 = v66 + 1;
          }
          else {
            uint64_t v68 = 0;
          }
          v64 |= v68;
          --v63;
        }
        while (v63);
      }
      else
      {
        uint64_t v64 = 0;
      }
      objc_msgSend(v2, sel_setTargetDevice_, v64);
    }
    if (*(void *)(v1 + 224))
    {
      swift_bridgeObjectRetain();
      char v69 = (void *)sub_254526FD0();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v69 = 0;
    }
    char v70 = *(unsigned char *)(v1 + 232);
    objc_msgSend(v2, sel_setRemoteDevice_, v69);

    sub_254493190(v1 + 233, (uint64_t)&v85, &qword_26B266E40);
    objc_msgSend(v2, sel_setRequiresRemoteDeviceWake_, v70 & 1);
    sub_254493190((uint64_t)&v85, (uint64_t)&v94, &qword_26B266E40);
    uint64_t v71 = qword_25452A668[v94];
    sub_254493190(v1 + 240, (uint64_t)v84, &qword_26B266BD8);
    objc_msgSend(v2, sel_setRunOnMotionState_, v71);
    sub_254493190((uint64_t)v84, (uint64_t)&v95, &qword_26B266BD8);
    uint64_t v72 = v95;
    if (v95)
    {
      sub_2544A54E0((uint64_t)v84);
      sub_2544A519C(v72);
      sub_2544A550C((uint64_t)v84);
      BOOL v73 = (void *)sub_254527370();
      swift_bridgeObjectRelease();
    }
    else
    {
      BOOL v73 = 0;
    }
    uint64_t v74 = *(void *)(v1 + 248);
    objc_msgSend(v2, sel_setProducedResultIdentifiers_, v73);

    if (v74)
    {
      unint64_t v75 = MEMORY[0x263F8EE78];
      unint64_t v83 = MEMORY[0x263F8EE78];
      uint64_t v76 = *(void *)(v74 + 16);
      if (v76)
      {
        swift_bridgeObjectRetain();
        uint64_t v77 = v74 + 40;
        do
        {
          id v78 = objc_allocWithZone(MEMORY[0x263F298F8]);
          swift_bridgeObjectRetain();
          uint64_t v79 = (void *)sub_254526FD0();
          swift_bridgeObjectRelease();
          id v80 = objc_msgSend(v78, sel_initWithIdentifier_batchSize_, v79, 1);

          if (v80)
          {
            MEMORY[0x25A27B960]();
            if (*(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_254527200();
            }
            sub_254527240();
            sub_2545271E0();
          }
          v77 += 16;
          --v76;
        }
        while (v76);
        swift_bridgeObjectRelease();
        unint64_t v75 = v83;
      }
      uint64_t v81 = sub_2544A5234(v75);
      swift_bridgeObjectRelease();
      sub_2544A22E8(v81);
      swift_bridgeObjectRelease();
      uint64_t v82 = (void *)sub_254527370();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v82 = 0;
    }
    objc_msgSend(v2, sel_setDependencies_, v82, v83);
  }
}

void TaskRequest.asSystemRequest<A>(request:)(id *a1)
{
  char v2 = *(unsigned char *)(v1 + 42);
  char v3 = *(unsigned char *)(v1 + 43);
  uint64_t v4 = *(char *)(v1 + 44);
  uint64_t v5 = *(char *)(v1 + 45);
  char v6 = *(unsigned char *)(v1 + 46);
  double v7 = *(double *)(v1 + 48);
  int v8 = *(unsigned __int8 *)(v1 + 56);
  char v9 = *(unsigned char *)(v1 + 57);
  char v10 = *(unsigned char *)(v1 + 58);
  char v58 = *(unsigned char *)(v1 + 59);
  char v59 = *(unsigned char *)(v1 + 60);
  char v60 = *(unsigned char *)(v1 + 61);
  char v61 = *(unsigned char *)(v1 + 62);
  char v62 = *(unsigned char *)(v1 + 63);
  char v63 = *(unsigned char *)(v1 + 64);
  uint64_t v11 = *(void *)(v1 + 72);
  char v64 = *(unsigned char *)(v1 + 80);
  char v65 = *(unsigned char *)(v1 + 81);
  uint64_t v67 = *(void *)(v1 + 88);
  int v66 = *(unsigned __int8 *)(v1 + 96);
  uint64_t v69 = *(void *)(v1 + 104);
  int v68 = *(unsigned __int8 *)(v1 + 112);
  char v70 = *(unsigned char *)(v1 + 113);
  char v71 = *(unsigned char *)(v1 + 114);
  uint64_t v72 = *(void *)(v1 + 128);
  uint64_t v74 = *(void *)(v1 + 136);
  int v73 = *(unsigned __int8 *)(v1 + 144);
  uint64_t v75 = *(void *)(v1 + 160);
  double v12 = *(double *)(v1 + 168);
  int v48 = *(unsigned __int8 *)(v1 + 176);
  char v49 = *(unsigned char *)(v1 + 177);
  char v50 = *(unsigned char *)(v1 + 178);
  uint64_t v76 = *(void *)(v1 + 184);
  uint64_t v77 = *(void *)(v1 + 192);
  char v51 = *(unsigned char *)(v1 + 200);
  char v52 = *(unsigned char *)(v1 + 201);
  char v53 = *(unsigned char *)(v1 + 202);
  uint64_t v54 = *(void *)(v1 + 208);
  uint64_t v78 = *(void *)(v1 + 224);
  char v55 = *(unsigned char *)(v1 + 232);
  uint64_t v13 = *(char *)(v1 + 233);
  char v14 = *(void **)(v1 + 240);
  uint64_t v15 = *(void *)(v1 + 248);
  uint64_t v56 = v13;
  long long v57 = v14;
  id v16 = *a1;
  objc_msgSend(*a1, sel_setRequiresNetworkConnectivity_, v2 & 1);
  objc_msgSend(v16, sel_setRequiresExternalPower_, v3 & 1);
  objc_msgSend(v16, sel_setPriority_, qword_25452A618[v4]);
  objc_msgSend(v16, sel_setRequiresProtectionClass_, qword_25452A6B0[v5]);
  objc_msgSend(v16, sel_setPreventsDeviceSleep_, v6 & 1);
  double v17 = 0.0;
  if (!v8) {
    double v17 = v7;
  }
  objc_msgSend(v16, sel_setRandomInitialDelay_, v17);
  objc_msgSend(v16, sel_setPostInstall_, v9 & 1);
  objc_msgSend(v16, sel_setRequiresInexpensiveNetworkConnectivity_, v10 & 1);
  objc_msgSend(v16, sel_setRequiresUnconstrainedNetworkConnectivity_, v58 & 1);
  objc_msgSend(v16, sel_setAppRefresh_, v59 & 1);
  objc_msgSend(v16, sel_setRequiresUserInactivity_, v60 & 1);
  objc_msgSend(v16, sel_setRequiresSignificantUserInactivity_, v61 & 1);
  objc_msgSend(v16, sel_setPowerNap_, v62 & 1);
  objc_msgSend(v16, sel_setResourceIntensive_, v63 & 1);
  if (v11)
  {
    uint64_t v18 = *(void *)(v11 + 16);
    if (v18)
    {
      uint64_t v19 = 0;
      char v20 = (char *)(v11 + 32);
      do
      {
        uint64_t v21 = *v20++;
        uint64_t v22 = qword_25452A640[v21];
        if ((v22 & v19) != 0) {
          uint64_t v22 = 0;
        }
        v19 |= v22;
        --v18;
      }
      while (v18);
    }
    else
    {
      uint64_t v19 = 0;
    }
    objc_msgSend(v16, sel_setResources_, v19);
  }
  objc_msgSend(v16, sel_setMayRebootDevice_, v64 & 1);
  objc_msgSend(v16, sel_setUserRequestedBackupTask_, v65 & 1);
  if (v66) {
    uint64_t v23 = 0;
  }
  else {
    uint64_t v23 = v67;
  }
  objc_msgSend(v16, sel_setNetworkDownloadSize_, v23);
  if (v68) {
    uint64_t v24 = 0;
  }
  else {
    uint64_t v24 = v69;
  }
  objc_msgSend(v16, sel_setNetworkUploadSize_, v24);
  objc_msgSend(v16, sel_setCommunicatesWithPairedDevice_, v70 & 1);
  objc_msgSend(v16, sel_setShouldWakeDevice_, v71 & 1);
  if (v72)
  {
    swift_bridgeObjectRetain();
    long long v25 = (void *)sub_254526FD0();
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v25 = 0;
  }
  uint64_t v26 = v15;
  objc_msgSend(v16, sel_setGroupName_, v25);

  if (v73) {
    uint64_t v27 = 1;
  }
  else {
    uint64_t v27 = v74;
  }
  if (v27 < 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v16, sel_setGroupConcurrencyLimit_);
    if (v75)
    {
      swift_bridgeObjectRetain();
      char v28 = (void *)sub_254526FD0();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v28 = 0;
    }
    objc_msgSend(v16, sel_setRateLimitConfigurationName_, v28);

    double v29 = 0.0;
    if (!v48) {
      double v29 = v12;
    }
    objc_msgSend(v16, sel_setExpectedDuration_, v29);
    objc_msgSend(v16, sel_setPowerBudgeted_, v49 & 1);
    objc_msgSend(v16, sel_setDataBudgeted_, v50 & 1);
    if (v76)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = (void *)sub_2545271A0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v30 = 0;
    }
    objc_msgSend(v16, sel_setRelatedApplications_, v30);

    if (v77)
    {
      swift_bridgeObjectRetain();
      int v31 = (void *)sub_2545271A0();
      swift_bridgeObjectRelease();
    }
    else
    {
      int v31 = 0;
    }
    objc_msgSend(v16, sel_setInvolvedProcesses_, v31);

    objc_msgSend(v16, sel_setRunOnAppForeground_, v51 & 1);
    objc_msgSend(v16, sel_setRequestsApplicationLaunch_, v52 & 1);
    objc_msgSend(v16, sel_setRequiresBuddyComplete_, v53 & 1);
    if (v54)
    {
      uint64_t v32 = *(void *)(v54 + 16);
      if (v32)
      {
        uint64_t v33 = 0;
        int v34 = (unsigned __int8 *)(v54 + 32);
        do
        {
          unsigned int v36 = *v34++;
          uint64_t v35 = v36;
          if ((~v33 & (v36 + 1)) != 0) {
            uint64_t v37 = v35 + 1;
          }
          else {
            uint64_t v37 = 0;
          }
          v33 |= v37;
          --v32;
        }
        while (v32);
      }
      else
      {
        uint64_t v33 = 0;
      }
      objc_msgSend(v16, sel_setTargetDevice_, v33);
    }
    if (v78)
    {
      swift_bridgeObjectRetain();
      char v38 = (void *)sub_254526FD0();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v38 = 0;
    }
    objc_msgSend(v16, sel_setRemoteDevice_, v38);

    objc_msgSend(v16, sel_setRequiresRemoteDeviceWake_, v55 & 1);
    objc_msgSend(v16, sel_setRunOnMotionState_, qword_25452A668[v56]);
    uint64_t v39 = v57;
    if (v57)
    {
      uint64_t v40 = swift_bridgeObjectRetain();
      sub_2544A519C(v40);
      swift_bridgeObjectRelease();
      uint64_t v39 = (void *)sub_254527370();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v16, sel_setProducedResultIdentifiers_, v39);

    if (v26)
    {
      unint64_t v41 = MEMORY[0x263F8EE78];
      unint64_t v80 = MEMORY[0x263F8EE78];
      uint64_t v42 = *(void *)(v26 + 16);
      if (v42)
      {
        swift_bridgeObjectRetain();
        uint64_t v43 = v26 + 40;
        do
        {
          id v44 = objc_allocWithZone(MEMORY[0x263F298F8]);
          swift_bridgeObjectRetain();
          uint64_t v45 = (void *)sub_254526FD0();
          swift_bridgeObjectRelease();
          id v46 = objc_msgSend(v44, sel_initWithIdentifier_batchSize_, v45, 1);

          if (v46)
          {
            MEMORY[0x25A27B960]();
            if (*(void *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_254527200();
            }
            sub_254527240();
            sub_2545271E0();
          }
          v43 += 16;
          --v42;
        }
        while (v42);
        swift_bridgeObjectRelease();
        unint64_t v41 = v80;
      }
      uint64_t v47 = sub_2544A5234(v41);
      swift_bridgeObjectRelease();
      sub_2544A22E8(v47);
      swift_bridgeObjectRelease();
      uint64_t v79 = (void *)sub_254527370();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v79 = 0;
    }
    objc_msgSend(v16, sel_setDependencies_, v79);
  }
}

uint64_t sub_2544A22E8(uint64_t a1)
{
  uint64_t v1 = a1;
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_2545275A0()) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v3 = MEMORY[0x263F8EE88];
    if (v2) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v8 = -1 << *(unsigned char *)(v1 + 32);
    uint64_t v30 = v1 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(v1 + 56);
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
    uint64_t v6 = 0;
    goto LABEL_11;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_6;
  }
LABEL_3:
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3668);
  uint64_t v3 = sub_254527610();
  if (!v2) {
    goto LABEL_7;
  }
LABEL_4:
  swift_bridgeObjectRetain();
  swift_retain();
  sub_254527590();
  sub_2544A5440();
  sub_2544A5480();
  uint64_t result = sub_254527390();
  uint64_t v1 = v34;
  uint64_t v30 = v35;
  uint64_t v5 = v36;
  uint64_t v6 = v37;
  unint64_t v7 = v38;
LABEL_11:
  int64_t v29 = (unint64_t)(v5 + 64) >> 6;
  uint64_t v11 = v3 + 56;
  while (v1 < 0)
  {
    uint64_t v16 = sub_2545275C0();
    if (!v16) {
      goto LABEL_45;
    }
    *(void *)&long long v31 = v16;
    sub_2544A5440();
    swift_dynamicCast();
LABEL_36:
    sub_2544A5440();
    swift_dynamicCast();
    uint64_t result = sub_2545275D0();
    uint64_t v22 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = *(void *)(v3 + 48) + 40 * v12;
    *(_OWORD *)uint64_t v13 = v31;
    *(_OWORD *)(v13 + 16) = v32;
    *(void *)(v13 + 32) = v33;
    ++*(void *)(v3 + 16);
  }
  if (v7)
  {
    unint64_t v14 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v15 = v14 | (v6 << 6);
LABEL_35:
    id v21 = *(id *)(*(void *)(v1 + 48) + 8 * v15);
    goto LABEL_36;
  }
  int64_t v17 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v17 >= v29) {
      goto LABEL_45;
    }
    unint64_t v18 = *(void *)(v30 + 8 * v17);
    uint64_t v19 = v6 + 1;
    if (!v18)
    {
      uint64_t v19 = v6 + 2;
      if (v6 + 2 >= v29) {
        goto LABEL_45;
      }
      unint64_t v18 = *(void *)(v30 + 8 * v19);
      if (!v18)
      {
        uint64_t v19 = v6 + 3;
        if (v6 + 3 >= v29) {
          goto LABEL_45;
        }
        unint64_t v18 = *(void *)(v30 + 8 * v19);
        if (!v18)
        {
          uint64_t v19 = v6 + 4;
          if (v6 + 4 >= v29) {
            goto LABEL_45;
          }
          unint64_t v18 = *(void *)(v30 + 8 * v19);
          if (!v18)
          {
            uint64_t v19 = v6 + 5;
            if (v6 + 5 >= v29) {
              goto LABEL_45;
            }
            unint64_t v18 = *(void *)(v30 + 8 * v19);
            if (!v18)
            {
              uint64_t v20 = v6 + 6;
              while (v29 != v20)
              {
                unint64_t v18 = *(void *)(v30 + 8 * v20++);
                if (v18)
                {
                  uint64_t v19 = v20 - 1;
                  goto LABEL_34;
                }
              }
LABEL_45:
              swift_release();
              sub_2544A54D8();
              return v3;
            }
          }
        }
      }
    }
LABEL_34:
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v19 << 6);
    uint64_t v6 = v19;
    goto LABEL_35;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_2544A26E8(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_2545275B0();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_2544A5440();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v26;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_2545275A0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_2544A3014(v7, result + 1);
    uint64_t v27 = v21;
    if (*(void *)(v21 + 24) <= *(void *)(v21 + 16))
    {
      id v25 = v8;
      sub_2544A31FC();
      uint64_t v22 = v27;
    }
    else
    {
      uint64_t v22 = v21;
      id v23 = v8;
    }
    sub_2544A2F90((uint64_t)v8, v22);
    *uint64_t v3 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_2545274B0();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_2544A5440();
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_2545274C0();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_2545274C0();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v2;
    *unint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_2544A3BD0((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *unint64_t v2 = v28;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_2544A2968(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_254527A80();
  swift_bridgeObjectRetain();
  sub_254527060();
  uint64_t v8 = sub_254527AB0();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_2545279E0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      char v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_2545279E0() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_2544A3D48(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_2544A2B18(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  sub_254527A80();
  swift_bridgeObjectRetain();
  sub_25451B384();
  uint64_t v5 = sub_254527AB0();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  uint64_t v21 = a2;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_41:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = *v22;
    *uint64_t v22 = 0x8000000000000000;
    char v19 = v21;
    sub_2544A3EE4(v21, v7, isUniquelyReferenced_nonNull_native);
    *uint64_t v22 = v24;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_44;
  }
  uint64_t v8 = ~v6;
  uint64_t v9 = a2;
  while (2)
  {
    unint64_t v10 = 0xD00000000000001ALL;
    unint64_t v11 = 0x8000000254532870;
    switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
    {
      case 1:
        unint64_t v10 = 0x656365526B736154;
        unint64_t v11 = 0xEC00000064657669;
        break;
      case 2:
        break;
      case 3:
        uint64_t v12 = "TaskSuccessfullyRegistered";
        goto LABEL_8;
      case 4:
        uint64_t v12 = "TaskFailedToRegister";
LABEL_8:
        unint64_t v11 = (unint64_t)v12 | 0x8000000000000000;
        unint64_t v10 = 0xD000000000000014;
        break;
      case 5:
        unint64_t v10 = 0xD00000000000001BLL;
        unint64_t v11 = 0x80000002545328D0;
        break;
      case 6:
        unint64_t v10 = 0x7261745320746F4ELL;
        goto LABEL_11;
      case 7:
        unint64_t v11 = 0xE700000000000000;
        unint64_t v10 = 0x676E696E6E7552;
        break;
      case 8:
        unint64_t v11 = 0xE800000000000000;
        unint64_t v10 = 0x6465727265666544;
        break;
      case 9:
        unint64_t v10 = 0x6574656C706D6F43;
        unint64_t v11 = 0xE900000000000064;
        break;
      case 0xA:
        unint64_t v11 = 0xE600000000000000;
        unint64_t v10 = 0x64656C696146;
        break;
      default:
        unint64_t v10 = 0x616572436B736154;
LABEL_11:
        unint64_t v11 = 0xEB00000000646574;
        break;
    }
    unint64_t v13 = 0xD00000000000001ALL;
    unint64_t v14 = 0x8000000254532870;
    switch(v9)
    {
      case 1:
        unint64_t v14 = 0xEC00000064657669;
        if (v10 == 0x656365526B736154) {
          goto LABEL_35;
        }
        goto LABEL_36;
      case 2:
        goto LABEL_34;
      case 3:
        uint64_t v16 = "TaskSuccessfullyRegistered";
        goto LABEL_22;
      case 4:
        uint64_t v16 = "TaskFailedToRegister";
LABEL_22:
        unint64_t v14 = (unint64_t)v16 | 0x8000000000000000;
        if (v10 != 0xD000000000000014) {
          goto LABEL_36;
        }
        goto LABEL_35;
      case 5:
        unint64_t v14 = 0x80000002545328D0;
        if (v10 != 0xD00000000000001BLL) {
          goto LABEL_36;
        }
        goto LABEL_35;
      case 6:
        uint64_t v15 = 0x7261745320746F4ELL;
        goto LABEL_27;
      case 7:
        unint64_t v14 = 0xE700000000000000;
        if (v10 != 0x676E696E6E7552) {
          goto LABEL_36;
        }
        goto LABEL_35;
      case 8:
        unint64_t v14 = 0xE800000000000000;
        if (v10 != 0x6465727265666544) {
          goto LABEL_36;
        }
        goto LABEL_35;
      case 9:
        unint64_t v13 = 0x6574656C706D6F43;
        unint64_t v14 = 0xE900000000000064;
LABEL_34:
        if (v10 == v13) {
          goto LABEL_35;
        }
        goto LABEL_36;
      case 10:
        unint64_t v14 = 0xE600000000000000;
        if (v10 != 0x64656C696146) {
          goto LABEL_36;
        }
        goto LABEL_35;
      default:
        uint64_t v15 = 0x616572436B736154;
LABEL_27:
        unint64_t v14 = 0xEB00000000646574;
        if (v10 != v15) {
          goto LABEL_36;
        }
LABEL_35:
        if (v11 != v14)
        {
LABEL_36:
          char v17 = sub_2545279E0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v17) {
            goto LABEL_43;
          }
          unint64_t v7 = (v7 + 1) & v8;
          if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
            goto LABEL_41;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_43:
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        char v19 = *(unsigned char *)(*(void *)(*v22 + 48) + v7);
LABEL_44:
        *a1 = v19;
        return result;
    }
  }
}

unint64_t sub_2544A2F90(uint64_t a1, uint64_t a2)
{
  sub_2545274B0();
  unint64_t result = sub_254527580();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_2544A3014(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3680);
    uint64_t v2 = sub_254527600();
    uint64_t v14 = v2;
    sub_254527590();
    if (sub_2545275C0())
    {
      sub_2544A5440();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_2544A31FC();
          uint64_t v2 = v14;
        }
        uint64_t result = sub_2545274B0();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_2545275C0());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE88];
  }
  return v2;
}

uint64_t sub_2544A31FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3680);
  uint64_t v3 = sub_2545275F0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v28;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = sub_2545274B0();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_2544A349C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3660);
  uint64_t v3 = sub_2545275F0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_254527A80();
      sub_254527060();
      uint64_t result = sub_254527AB0();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_2544A377C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3658);
  uint64_t v3 = sub_2545275F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_38;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v28 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v16 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v17 = v16 | (v10 << 6);
      goto LABEL_33;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v18 >= v8) {
      break;
    }
    unint64_t v19 = v28[v18];
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v8) {
        break;
      }
      unint64_t v19 = v28[v10];
      if (!v19)
      {
        int64_t v10 = v18 + 2;
        if (v18 + 2 >= v8) {
          break;
        }
        unint64_t v19 = v28[v10];
        if (!v19)
        {
          int64_t v20 = v18 + 3;
          if (v20 >= v8) {
            break;
          }
          unint64_t v19 = v28[v20];
          if (!v19)
          {
            while (1)
            {
              int64_t v10 = v20 + 1;
              if (__OFADD__(v20, 1)) {
                goto LABEL_40;
              }
              if (v10 >= v8) {
                goto LABEL_34;
              }
              unint64_t v19 = v28[v10];
              ++v20;
              if (v19) {
                goto LABEL_32;
              }
            }
          }
          int64_t v10 = v20;
        }
      }
    }
LABEL_32:
    unint64_t v7 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_33:
    char v25 = *(unsigned char *)(*(void *)(v2 + 48) + v17);
    sub_254527A80();
    sub_254527060();
    swift_bridgeObjectRelease();
    uint64_t v11 = sub_254527AB0();
    uint64_t v12 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v13 = v11 & ~v12;
    unint64_t v14 = v13 >> 6;
    if (((-1 << v13) & ~*(void *)(v9 + 8 * (v13 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v13) & ~*(void *)(v9 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v21 = 0;
    unint64_t v22 = (unint64_t)(63 - v12) >> 6;
    do
    {
      if (++v14 == v22 && (v21 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x2544A3BA4);
      }
      BOOL v23 = v14 == v22;
      if (v14 == v22) {
        unint64_t v14 = 0;
      }
      v21 |= v23;
      uint64_t v24 = *(void *)(v9 + 8 * v14);
    }
    while (v24 == -1);
    unint64_t v15 = __clz(__rbit64(~v24)) + (v14 << 6);
LABEL_8:
    *(void *)(v9 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = v25;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
  if (v26 > 63) {
    bzero(v28, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v28 = -1 << v26;
  }
  *(void *)(v2 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

void sub_2544A3BD0(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_2544A31FC();
  }
  else
  {
    if (v7 > v6)
    {
      sub_2544A4360();
      goto LABEL_14;
    }
    sub_2544A4854();
  }
  uint64_t v8 = *v3;
  uint64_t v9 = sub_2545274B0();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_2544A5440();
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = sub_2545274C0();

    if (v12)
    {
LABEL_13:
      sub_254527A20();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = sub_2545274C0();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

uint64_t sub_2544A3D48(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_2544A349C();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_2544A450C();
      goto LABEL_22;
    }
    sub_2544A4AD0();
  }
  uint64_t v11 = *v4;
  sub_254527A80();
  sub_254527060();
  uint64_t result = sub_254527AB0();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    char v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_2545279E0(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_254527A20();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        BOOL v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_2545279E0();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  char v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *char v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_2544A3EE4(uint64_t result, unint64_t a2, char a3)
{
  unsigned __int8 v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_2544A377C();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (uint64_t)sub_2544A46C0();
        goto LABEL_48;
      }
      sub_2544A4D80();
    }
    uint64_t v8 = *v3;
    sub_254527A80();
    sub_25451B384();
    uint64_t result = sub_254527AB0();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      uint64_t v11 = v5;
      while (2)
      {
        unint64_t v12 = 0xD00000000000001ALL;
        unint64_t v13 = 0x8000000254532870;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            unint64_t v12 = 0x656365526B736154;
            unint64_t v13 = 0xEC00000064657669;
            goto LABEL_23;
          case 2:
            goto LABEL_23;
          case 3:
            uint64_t v14 = "TaskSuccessfullyRegistered";
            goto LABEL_16;
          case 4:
            uint64_t v14 = "TaskFailedToRegister";
LABEL_16:
            unint64_t v13 = (unint64_t)v14 | 0x8000000000000000;
            unint64_t v12 = 0xD000000000000014;
            goto LABEL_23;
          case 5:
            unint64_t v12 = 0xD00000000000001BLL;
            unint64_t v13 = 0x80000002545328D0;
            goto LABEL_23;
          case 6:
            unint64_t v12 = 0x7261745320746F4ELL;
            goto LABEL_20;
          case 7:
            unint64_t v13 = 0xE700000000000000;
            unint64_t v12 = 0x676E696E6E7552;
            goto LABEL_23;
          case 8:
            unint64_t v13 = 0xE800000000000000;
            unint64_t v12 = 0x6465727265666544;
            goto LABEL_23;
          case 9:
            unint64_t v12 = 0x6574656C706D6F43;
            unint64_t v13 = 0xE900000000000064;
            goto LABEL_23;
          case 0xA:
            unint64_t v13 = 0xE600000000000000;
            unint64_t v12 = 0x64656C696146;
            goto LABEL_23;
          default:
            unint64_t v12 = 0x616572436B736154;
LABEL_20:
            unint64_t v13 = 0xEB00000000646574;
LABEL_23:
            unint64_t v15 = 0xD00000000000001ALL;
            unint64_t v16 = 0x8000000254532870;
            switch(v11)
            {
              case 1:
                unint64_t v16 = 0xEC00000064657669;
                if (v12 != 0x656365526B736154) {
                  goto LABEL_43;
                }
                goto LABEL_42;
              case 2:
                goto LABEL_41;
              case 3:
                BOOL v18 = "TaskSuccessfullyRegistered";
                goto LABEL_31;
              case 4:
                BOOL v18 = "TaskFailedToRegister";
LABEL_31:
                unint64_t v16 = (unint64_t)v18 | 0x8000000000000000;
                if (v12 != 0xD000000000000014) {
                  goto LABEL_43;
                }
                goto LABEL_42;
              case 5:
                unint64_t v16 = 0x80000002545328D0;
                if (v12 != 0xD00000000000001BLL) {
                  goto LABEL_43;
                }
                goto LABEL_42;
              case 6:
                uint64_t v17 = 0x7261745320746F4ELL;
                goto LABEL_38;
              case 7:
                unint64_t v16 = 0xE700000000000000;
                if (v12 != 0x676E696E6E7552) {
                  goto LABEL_43;
                }
                goto LABEL_42;
              case 8:
                unint64_t v16 = 0xE800000000000000;
                unint64_t v15 = 0x6465727265666544;
LABEL_41:
                if (v12 == v15) {
                  goto LABEL_42;
                }
                goto LABEL_43;
              case 9:
                unint64_t v16 = 0xE900000000000064;
                if (v12 != 0x6574656C706D6F43) {
                  goto LABEL_43;
                }
                goto LABEL_42;
              case 10:
                unint64_t v16 = 0xE600000000000000;
                if (v12 != 0x64656C696146) {
                  goto LABEL_43;
                }
                goto LABEL_42;
              default:
                uint64_t v17 = 0x616572436B736154;
LABEL_38:
                unint64_t v16 = 0xEB00000000646574;
                if (v12 != v17) {
                  goto LABEL_43;
                }
LABEL_42:
                if (v13 == v16) {
                  goto LABEL_51;
                }
LABEL_43:
                char v19 = sub_2545279E0();
                swift_bridgeObjectRelease();
                uint64_t result = swift_bridgeObjectRelease();
                if (v19) {
                  goto LABEL_52;
                }
                a2 = (a2 + 1) & v10;
                if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
                  goto LABEL_48;
                }
                continue;
            }
        }
      }
    }
  }
LABEL_48:
  uint64_t v20 = *v24;
  *(void *)(*v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v20 + 48) + a2) = v25;
  uint64_t v21 = *(void *)(v20 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
    __break(1u);
LABEL_51:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_52:
    sub_254527A20();
    __break(1u);
    JUMPOUT(0x2544A4308);
  }
  *(void *)(v20 + 16) = v23;
  return result;
}

id sub_2544A4360()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3680);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2545275E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2544A450C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3660);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2545275E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    unint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v19 = *v17;
    v19[1] = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2544A46C0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3658);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2545275E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2544A4854()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3680);
  uint64_t v3 = sub_2545275F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  BOOL v27 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    id v19 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = sub_2545274B0();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v27;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2544A4AD0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3660);
  uint64_t v3 = sub_2545275F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    id v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_254527A80();
    swift_bridgeObjectRetain();
    sub_254527060();
    uint64_t result = sub_254527AB0();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2544A4D80()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3658);
  uint64_t v3 = sub_2545275F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_36;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v27 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v16 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v17 = v16 | (v10 << 6);
      goto LABEL_33;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_37;
    }
    if (v18 >= v27) {
      break;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v27) {
        break;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v10);
      if (!v19)
      {
        int64_t v10 = v18 + 2;
        if (v18 + 2 >= v27) {
          break;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v10);
        if (!v19)
        {
          int64_t v20 = v18 + 3;
          if (v20 >= v27) {
            break;
          }
          unint64_t v19 = *(void *)(v6 + 8 * v20);
          if (!v19)
          {
            while (1)
            {
              int64_t v10 = v20 + 1;
              if (__OFADD__(v20, 1)) {
                goto LABEL_38;
              }
              if (v10 >= v27) {
                goto LABEL_34;
              }
              unint64_t v19 = *(void *)(v6 + 8 * v10);
              ++v20;
              if (v19) {
                goto LABEL_32;
              }
            }
          }
          int64_t v10 = v20;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_33:
    char v25 = *(unsigned char *)(*(void *)(v2 + 48) + v17);
    sub_254527A80();
    sub_254527060();
    swift_bridgeObjectRelease();
    uint64_t v11 = sub_254527AB0();
    uint64_t v12 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v13 = v11 & ~v12;
    unint64_t v14 = v13 >> 6;
    if (((-1 << v13) & ~*(void *)(v9 + 8 * (v13 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v13) & ~*(void *)(v9 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v21 = 0;
    unint64_t v22 = (unint64_t)(63 - v12) >> 6;
    do
    {
      if (++v14 == v22 && (v21 & 1) != 0)
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        JUMPOUT(0x2544A5170);
      }
      BOOL v23 = v14 == v22;
      if (v14 == v22) {
        unint64_t v14 = 0;
      }
      v21 |= v23;
      uint64_t v24 = *(void *)(v9 + 8 * v14);
    }
    while (v24 == -1);
    unint64_t v15 = __clz(__rbit64(~v24)) + (v14 << 6);
LABEL_8:
    *(void *)(v9 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = v25;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_36:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_2544A519C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_254527380();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_2544A2968(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_2544A5234(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_254527730();
    swift_bridgeObjectRelease();
  }
  sub_2544A5440();
  sub_2544A5480();
  uint64_t result = sub_254527380();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_254527730();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        uint64_t v6 = (void *)MEMORY[0x25A27BE40](i, a1);
        sub_2544A26E8(&v9, v6);
      }
    }
    else
    {
      uint64_t v7 = (void **)(a1 + 32);
      do
      {
        uint64_t v8 = *v7++;
        sub_2544A26E8(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2544A5378(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_2544A53EC();
  uint64_t result = sub_254527380();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_2544A2B18(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

unint64_t sub_2544A53EC()
{
  unint64_t result = qword_269DF3650;
  if (!qword_269DF3650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3650);
  }
  return result;
}

unint64_t sub_2544A5440()
{
  unint64_t result = qword_269DF3670;
  if (!qword_269DF3670)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269DF3670);
  }
  return result;
}

unint64_t sub_2544A5480()
{
  unint64_t result = qword_269DF3678;
  if (!qword_269DF3678)
  {
    sub_2544A5440();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3678);
  }
  return result;
}

uint64_t sub_2544A54D8()
{
  return swift_release();
}

uint64_t sub_2544A54E0(uint64_t a1)
{
  return a1;
}

uint64_t sub_2544A550C(uint64_t a1)
{
  return a1;
}

unint64_t sub_2544A5538(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF37A8);
  uint64_t v2 = (void *)sub_254527760();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_2544B9B58(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2544A564C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF37A0);
  uint64_t v2 = (void *)sub_254527760();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    uint64_t v8 = v4[1];
    uint64_t v9 = v4[2];
    uint64_t v10 = v4[3];
    uint64_t v11 = v4[4];
    uint64_t v12 = v4[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_2544B9A98(v5, v6, v7, v8);
    if (v14) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v15 = (uint64_t *)(v2[6] + 32 * result);
    *unint64_t v15 = v5;
    v15[1] = v6;
    v15[2] = v7;
    v15[3] = v8;
    unint64_t v16 = (uint64_t *)(v2[7] + 32 * result);
    *unint64_t v16 = v9;
    v16[1] = v10;
    v16[2] = v11;
    v16[3] = v12;
    uint64_t v17 = v2[2];
    BOOL v18 = __OFADD__(v17, 1);
    uint64_t v19 = v17 + 1;
    if (v18) {
      goto LABEL_11;
    }
    v4 += 8;
    v2[2] = v19;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2544A57B0(uint64_t a1)
{
  return sub_2544A5B6C(a1, &qword_269DF3790, &qword_269DF3798, &qword_269DF3788);
}

unint64_t sub_2544A57CC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B267088);
  uint64_t v2 = (void *)sub_254527760();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_2544B9B58(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2544A58E8(uint64_t a1)
{
  return sub_2544A5A38(a1, &qword_269DF3778);
}

unint64_t sub_2544A58F4(uint64_t a1)
{
  return sub_2544A590C(a1, &qword_269DF3770);
}

unint64_t sub_2544A5900(uint64_t a1)
{
  return sub_2544A590C(a1, &qword_269DF3768);
}

unint64_t sub_2544A590C(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v3 = (void *)sub_254527760();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v6 = *(v5 - 3);
    uint64_t v7 = *(v5 - 2);
    uint64_t v9 = *(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t result = sub_2544B9B58(v6, v7);
    if (v11) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v12 = v6;
    v12[1] = v7;
    BOOL v13 = (void *)(v3[7] + 16 * result);
    *BOOL v13 = v9;
    v13[1] = v8;
    uint64_t v14 = v3[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v3[2] = v16;
    v5 += 4;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2544A5A2C(uint64_t a1)
{
  return sub_2544A5A38(a1, &qword_269DF3760);
}

unint64_t sub_2544A5A38(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v3 = (void *)sub_254527760();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = *(v5 - 2);
    uint64_t v7 = *(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_2544B9B58(v6, v7);
    if (v10) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v11 = (uint64_t *)(v3[6] + 16 * result);
    *char v11 = v6;
    v11[1] = v7;
    *(void *)(v3[7] + 8 * result) = v8;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2544A5B50(uint64_t a1)
{
  return sub_2544A5B6C(a1, &qword_269DF3750, &qword_269DF3758, &qword_269DF3688);
}

unint64_t sub_2544A5B6C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  long long v31 = a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  char v10 = (void *)((char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v12 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v11 = sub_254527760();
  uint64_t v12 = (void *)v11;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  uint64_t v14 = (uint64_t)v10 + *(int *)(v7 + 48);
  v29[1] = a1;
  uint64_t v30 = v14;
  uint64_t v15 = v11 + 64;
  uint64_t v16 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  uint64_t v17 = *(void *)(v8 + 72);
  swift_retain();
  while (1)
  {
    sub_254493CFC(v16, (uint64_t)v10, v31);
    uint64_t v18 = *v10;
    uint64_t v19 = v10[1];
    unint64_t result = sub_2544B9B58(*v10, v19);
    if (v21) {
      break;
    }
    unint64_t v22 = result;
    *(void *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    BOOL v23 = (uint64_t *)(v12[6] + 16 * result);
    *BOOL v23 = v18;
    v23[1] = v19;
    uint64_t v24 = v12[7];
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(a4);
    unint64_t result = sub_254493190(v30, v24 + *(void *)(*(void *)(v25 - 8) + 72) * v22, a4);
    uint64_t v26 = v12[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27) {
      goto LABEL_11;
    }
    v12[2] = v28;
    v16 += v17;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2544A5D54(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3740);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3748);
  uint64_t v6 = sub_254527760();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_254493CFC(v12, (uint64_t)v5, &qword_269DF3740);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_2544B9B58(*v5, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v19 = (uint64_t *)(v7[6] + 16 * result);
    *uint64_t v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = type metadata accessor for MLHostAnalytics();
    unint64_t result = sub_2544AB5C8(v9, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, (uint64_t (*)(void))type metadata accessor for MLHostAnalytics);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_2544A5F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3780);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v47 - v13;
  uint64_t v15 = (uint64_t *)(v4 + 32);
  swift_beginAccess();
  uint64_t v16 = *(void *)(v4 + 32);
  if (!*(void *)(v16 + 16))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3788);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v14, 1, 1, v24);
LABEL_7:
    uint64_t v29 = (uint64_t)v14;
LABEL_15:
    sub_2544AB568(v29);
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v17 = sub_2544B9B58(a1, a2);
  uint64_t v48 = a3;
  uint64_t v49 = a4;
  uint64_t v47 = a1;
  if (v18)
  {
    unint64_t v19 = v17;
    uint64_t v20 = *(void *)(v16 + 56);
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3788);
    uint64_t v22 = a2;
    uint64_t v23 = *(void *)(v21 - 8);
    sub_254493CFC(v20 + *(void *)(v23 + 72) * v19, (uint64_t)v14, &qword_269DF3788);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v14, 0, 1, v21);
    a2 = v22;
  }
  else
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3788);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v14, 1, 1, v25);
  }
  swift_bridgeObjectRelease();
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3788);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v28(v14, 1, v26) == 1) {
    goto LABEL_7;
  }
  sub_2544AB568((uint64_t)v14);
  uint64_t v30 = *v15;
  if (!*(void *)(*v15 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v12, 1, 1, v26);
LABEL_14:
    uint64_t v29 = (uint64_t)v12;
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  unint64_t v31 = sub_2544B9B58(v48, v49);
  if (v32)
  {
    sub_254493CFC(*(void *)(v30 + 56) + *(void *)(v27 + 72) * v31, (uint64_t)v12, &qword_269DF3788);
    uint64_t v33 = 0;
  }
  else
  {
    uint64_t v33 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v12, v33, 1, v26);
  swift_bridgeObjectRelease();
  if (v28(v12, 1, v26) == 1) {
    goto LABEL_14;
  }
  sub_2544AB568((uint64_t)v12);
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_25448894C();
  uint64_t v36 = v47;
  uint64_t v37 = sub_254522338(v50, v47, a2);
  uint64_t v39 = v38;
  if (v28(v38, 1, v26))
  {
    ((void (*)(void *, void))v37)(v50, 0);
    swift_bridgeObjectRelease();
    ((void (*)(unsigned char *, void))v35)(v51, 0);
  }
  else
  {
    uint64_t v40 = *(int *)(v26 + 52);
    unint64_t v41 = *(void **)&v39[v40];
    swift_bridgeObjectRetain();
    uint64_t v42 = v49;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v39[v40] = v41;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v41 = sub_2544B91E0(0, v41[2] + 1, 1, v41);
      *(void *)&v39[v40] = v41;
    }
    unint64_t v45 = v41[2];
    unint64_t v44 = v41[3];
    if (v45 >= v44 >> 1)
    {
      unint64_t v41 = sub_2544B91E0((void *)(v44 > 1), v45 + 1, 1, v41);
      *(void *)&v39[v40] = v41;
    }
    v41[2] = v45 + 1;
    id v46 = &v41[4 * v45];
    v46[4] = v36;
    v46[5] = a2;
    v46[6] = v48;
    v46[7] = v42;
    ((void (*)(void *, void))v37)(v50, 0);
    swift_bridgeObjectRelease();
    ((void (*)(unsigned char *, void))v35)(v51, 0);
  }
  return 1;
}

uint64_t sub_2544A6438(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  unint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v26 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  MEMORY[0x270FA5388](v15);
  unint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = sub_2545273C0();
  if (!v18) {
    return sub_254527210();
  }
  uint64_t v19 = v18;
  uint64_t v43 = sub_254526EB0();
  uint64_t v32 = sub_2545276E0();
  sub_2545276B0();
  uint64_t v36 = v8;
  uint64_t result = sub_2545273B0();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v34 = (void (**)(char *))(v33 + 2);
    uint64_t v35 = v14;
    ++v33;
    while (1)
    {
      uint64_t v21 = (void (*)(char *, void))sub_2545273E0();
      uint64_t v22 = v12;
      uint64_t v23 = v12;
      uint64_t v24 = AssociatedTypeWitness;
      (*v34)(v22);
      v21(v42, 0);
      uint64_t v25 = v41;
      v38(v23, v40);
      if (v25) {
        break;
      }
      uint64_t v41 = 0;
      (*v33)(v23, v24);
      sub_2545276C0();
      sub_2545273D0();
      --v19;
      uint64_t v12 = v23;
      if (!v19)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        return v43;
      }
    }
    (*v33)(v23, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
  }
  return result;
}

uint64_t CustomEventAnalytics.stateCountMap.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CustomEventAnalytics.stateCountMap.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*CustomEventAnalytics.stateCountMap.modify())()
{
  return nullsub_1;
}

uint64_t CustomEventAnalytics.transitionStatsMap.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CustomEventAnalytics.transitionStatsMap.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*CustomEventAnalytics.transitionStatsMap.modify())()
{
  return nullsub_1;
}

uint64_t CustomEventAnalytics.firstValidState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CustomEventAnalytics();
  return sub_254493CFC(v1 + *(int *)(v3 + 24), a1, &qword_269DF3688);
}

uint64_t type metadata accessor for CustomEventAnalytics()
{
  uint64_t result = qword_269DF3710;
  if (!qword_269DF3710) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t CustomEventAnalytics.firstValidState.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CustomEventAnalytics();
  return sub_2544A6C0C(a1, v1 + *(int *)(v3 + 24), &qword_269DF3688);
}

uint64_t (*CustomEventAnalytics.firstValidState.modify())()
{
  return nullsub_1;
}

uint64_t CustomEventAnalytics.latestValidState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CustomEventAnalytics();
  return sub_254493CFC(v1 + *(int *)(v3 + 28), a1, &qword_269DF3688);
}

uint64_t CustomEventAnalytics.latestValidState.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CustomEventAnalytics();
  return sub_2544A6C0C(a1, v1 + *(int *)(v3 + 28), &qword_269DF3688);
}

uint64_t (*CustomEventAnalytics.latestValidState.modify())()
{
  return nullsub_1;
}

uint64_t CustomEventAnalytics.taskName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CustomEventAnalytics() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CustomEventAnalytics.taskName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for CustomEventAnalytics() + 32));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*CustomEventAnalytics.taskName.modify())()
{
  return nullsub_1;
}

uint64_t CustomEventAnalytics.bucketStart.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CustomEventAnalytics();
  return sub_254493CFC(v1 + *(int *)(v3 + 36), a1, &qword_26B266B98);
}

uint64_t CustomEventAnalytics.bucketStart.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CustomEventAnalytics();
  return sub_2544A6C0C(a1, v1 + *(int *)(v3 + 36), &qword_26B266B98);
}

uint64_t sub_2544A6C0C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t (*CustomEventAnalytics.bucketStart.modify())()
{
  return nullsub_1;
}

uint64_t CustomEventAnalytics.bucketEnd.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CustomEventAnalytics();
  return sub_254493CFC(v1 + *(int *)(v3 + 40), a1, &qword_26B266B98);
}

uint64_t CustomEventAnalytics.bucketEnd.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CustomEventAnalytics();
  return sub_2544A6C0C(a1, v1 + *(int *)(v3 + 40), &qword_26B266B98);
}

uint64_t (*CustomEventAnalytics.bucketEnd.modify())()
{
  return nullsub_1;
}

uint64_t CustomEventAnalytics.init()@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v2 = MEMORY[0x263F8EE78];
  *a1 = sub_2544A5538(MEMORY[0x263F8EE78]);
  a1[1] = sub_2544A564C(v2);
  uint64_t v3 = (int *)type metadata accessor for CustomEventAnalytics();
  uint64_t v4 = (char *)a1 + v3[6];
  uint64_t v5 = type metadata accessor for LedgerState();
  uint64_t v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  v6((char *)a1 + v3[7], 1, 1, v5);
  uint64_t v7 = (unint64_t *)((char *)a1 + v3[8]);
  void *v7 = 0;
  v7[1] = 0;
  uint64_t v8 = (char *)a1 + v3[9];
  uint64_t v9 = sub_254526D90();
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
  ((void (*)(void *__return_ptr, char *, uint64_t, uint64_t, uint64_t))v12)((void *)(v9 - 8), v8, 1, 1, v9);
  uint64_t v10 = (char *)a1 + v3[10];

  return v12(v10, 1, 1, v9);
}

unint64_t sub_2544A6EE0(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      return result;
    case 2:
      unint64_t result = 0x6C61567473726966;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x656D614E6B736174;
      break;
    case 5:
      unint64_t result = 0x745374656B637562;
      break;
    case 6:
      unint64_t result = 0x6E4574656B637562;
      break;
    default:
      unint64_t result = 0x756F436574617473;
      break;
  }
  return result;
}

unint64_t sub_2544A6FF8()
{
  return sub_2544A6EE0(*v0);
}

uint64_t sub_2544A7000@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544A8BB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2544A7028(uint64_t a1)
{
  unint64_t v2 = sub_2544A745C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544A7064(uint64_t a1)
{
  unint64_t v2 = sub_2544A745C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CustomEventAnalytics.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3690);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544A745C();
  sub_254527B00();
  uint64_t v12 = *v3;
  char v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF36A0);
  sub_2544A7C5C(&qword_269DF36A8);
  sub_254527970();
  if (!v2)
  {
    uint64_t v12 = v3[1];
    char v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF36B0);
    sub_2544A7CC4(&qword_269DF36B8, (void (*)(void))sub_25448E1CC, (void (*)(void))sub_2544A74B0);
    sub_254527970();
    type metadata accessor for CustomEventAnalytics();
    LOBYTE(v12) = 2;
    type metadata accessor for LedgerState();
    sub_2544A8F8C(&qword_269DF3240, (void (*)(uint64_t))type metadata accessor for LedgerState);
    sub_254527910();
    LOBYTE(v12) = 3;
    sub_254527910();
    LOBYTE(v12) = 4;
    sub_2545278C0();
    LOBYTE(v12) = 5;
    sub_254526D90();
    sub_2544A8F8C((unint64_t *)&unk_26B266FD8, MEMORY[0x263F07490]);
    sub_254527910();
    LOBYTE(v12) = 6;
    sub_254527910();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_2544A745C()
{
  unint64_t result = qword_269DF3698;
  if (!qword_269DF3698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3698);
  }
  return result;
}

unint64_t sub_2544A74B0()
{
  unint64_t result = qword_269DF36C0;
  if (!qword_269DF36C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF36C0);
  }
  return result;
}

uint64_t CustomEventAnalytics.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  char v60 = a1;
  uint64_t v46 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v47 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v48 = (char *)&v41 - v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  char v55 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v54 = (char *)&v41 - v9;
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF36C8);
  uint64_t v53 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  char v59 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CustomEventAnalytics();
  uint64_t v12 = (int *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (unint64_t *)((char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = MEMORY[0x263F8EE78];
  unint64_t v52 = sub_2544A5538(MEMORY[0x263F8EE78]);
  *uint64_t v14 = v52;
  unint64_t v51 = sub_2544A564C(v15);
  v14[1] = v51;
  uint64_t v16 = (uint64_t)v14 + v12[8];
  uint64_t v17 = type metadata accessor for LedgerState();
  uint64_t v18 = *(void (**)(void))(*(void *)(v17 - 8) + 56);
  uint64_t v50 = v16;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v18)(v16, 1, 1, v17);
  uint64_t v49 = (uint64_t)v14 + v12[9];
  v18();
  uint64_t v19 = (uint64_t *)((char *)v14 + v12[10]);
  *uint64_t v19 = 0;
  v19[1] = 0;
  uint64_t v20 = (uint64_t)v14 + v12[11];
  uint64_t v21 = sub_254526D90();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  v22(v20, 1, 1, v21);
  uint64_t v23 = v12[12];
  long long v57 = v14;
  uint64_t v24 = (uint64_t)v14 + v23;
  v22((uint64_t)v14 + v23, 1, 1, v21);
  __swift_project_boxed_opaque_existential_1(v60, v60[3]);
  sub_2544A745C();
  uint64_t v25 = v58;
  sub_254527AF0();
  if (v25)
  {
    uint64_t v30 = (uint64_t)v57;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
  }
  else
  {
    uint64_t v58 = v17;
    uint64_t v43 = v20;
    unint64_t v44 = v19;
    uint64_t v45 = v21;
    uint64_t v42 = v24;
    uint64_t v27 = (uint64_t)v54;
    uint64_t v26 = (uint64_t)v55;
    uint64_t v28 = v53;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF36A0);
    char v61 = 0;
    sub_2544A7C5C(&qword_269DF36D0);
    sub_254527870();
    swift_bridgeObjectRelease();
    uint64_t v30 = (uint64_t)v57;
    *long long v57 = v62;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF36B0);
    char v61 = 1;
    sub_2544A7CC4(&qword_269DF36D8, (void (*)(void))sub_25448E178, (void (*)(void))sub_2544A7D4C);
    sub_254527870();
    swift_bridgeObjectRelease();
    *(void *)(v30 + 8) = v62;
    LOBYTE(v62) = 2;
    sub_2544A8F8C(&qword_269DF3238, (void (*)(uint64_t))type metadata accessor for LedgerState);
    sub_254527810();
    sub_2544A6C0C(v27, v50, &qword_269DF3688);
    LOBYTE(v62) = 3;
    sub_254527810();
    sub_2544A6C0C(v26, v49, &qword_269DF3688);
    LOBYTE(v62) = 4;
    uint64_t v31 = v28;
    uint64_t v32 = sub_2545277C0();
    uint64_t v34 = v33;
    uint64_t v35 = v44;
    swift_bridgeObjectRelease();
    *uint64_t v35 = v32;
    v35[1] = v34;
    LOBYTE(v62) = 5;
    sub_2544A8F8C(&qword_26B266BE0, MEMORY[0x263F07490]);
    uint64_t v36 = (uint64_t)v48;
    uint64_t v37 = v59;
    sub_254527810();
    sub_2544A6C0C(v36, v43, &qword_26B266B98);
    LOBYTE(v62) = 6;
    uint64_t v38 = (uint64_t)v47;
    uint64_t v39 = v56;
    sub_254527810();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v37, v39);
    uint64_t v40 = v60;
    sub_2544A6C0C(v38, v42, &qword_26B266B98);
    sub_2544AB630(v30, v46, (uint64_t (*)(void))type metadata accessor for CustomEventAnalytics);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  }
  return sub_2544AA0BC(v30, (uint64_t (*)(void))type metadata accessor for CustomEventAnalytics);
}

uint64_t sub_2544A7C5C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DF36A0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2544A7CC4(unint64_t *a1, void (*a2)(void), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DF36B0);
    a2();
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2544A7D4C()
{
  unint64_t result = qword_269DF36E0;
  if (!qword_269DF36E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF36E0);
  }
  return result;
}

uint64_t sub_2544A7DA0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2544A7DA8(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*sub_2544A7DD4())()
{
  return nullsub_1;
}

uint64_t sub_2544A7DF4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2544A7DFC(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*sub_2544A7E28())()
{
  return nullsub_1;
}

uint64_t sub_2544A7E48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_254493CFC(v2 + *(int *)(a1 + 24), a2, &qword_269DF3688);
}

uint64_t sub_2544A7E74(uint64_t a1, uint64_t a2)
{
  return sub_2544A6C0C(a1, v2 + *(int *)(a2 + 24), &qword_269DF3688);
}

uint64_t (*sub_2544A7E9C())()
{
  return nullsub_1;
}

uint64_t sub_2544A7EC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_254493CFC(v2 + *(int *)(a1 + 28), a2, &qword_269DF3688);
}

uint64_t sub_2544A7EEC(uint64_t a1, uint64_t a2)
{
  return sub_2544A6C0C(a1, v2 + *(int *)(a2 + 28), &qword_269DF3688);
}

uint64_t (*sub_2544A7F14())()
{
  return nullsub_1;
}

uint64_t sub_2544A7F38@<X0>(int *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v4 = MEMORY[0x263F8EE78];
  *a2 = sub_2544A5538(MEMORY[0x263F8EE78]);
  a2[1] = sub_2544A564C(v4);
  uint64_t v5 = (char *)a2 + a1[6];
  uint64_t v6 = type metadata accessor for LedgerState();
  uint64_t v7 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  v7(v5, 1, 1, v6);
  v7((char *)a2 + a1[7], 1, 1, v6);
  uint64_t v8 = a1[9];
  uint64_t v9 = (unint64_t *)((char *)a2 + a1[8]);
  *uint64_t v9 = 0;
  v9[1] = 0;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_254526D90();
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  ((void (*)(void *__return_ptr, char *, uint64_t, uint64_t, uint64_t))v14)((void *)(v11 - 8), v10, 1, 1, v11);
  uint64_t v12 = (char *)a2 + a1[10];

  return v14(v12, 1, 1, v11);
}

uint64_t sub_2544A8090@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CustomEventAnalytics.init(from:)(a1, a2);
}

uint64_t sub_2544A80A8(void *a1)
{
  return CustomEventAnalytics.encode(to:)(a1);
}

void *getCustomStateMachine<A>(states:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v64 = a3;
  uint64_t v58 = a1;
  uint64_t v67 = *(void **)(a2 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v53 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  char v61 = (char *)&v51 - v7;
  uint64_t v8 = sub_2545274E0();
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  char v70 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v51 - v11;
  uint64_t v57 = *(void *)(a3 + 8);
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v56 = *(void *)(AssociatedConformanceWitness + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  char v60 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v69 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  char v59 = (char *)&v51 - v15;
  uint64_t v16 = swift_checkMetadataState();
  uint64_t v66 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v51 - v17;
  uint64_t v79 = 0x72476D6F74737543;
  unint64_t v80 = 0xEB00000000687061;
  uint64_t v77 = a2;
  swift_getMetatypeMetadata();
  sub_254527030();
  sub_254527080();
  swift_bridgeObjectRelease();
  char v65 = (unsigned int (*)(char *, uint64_t, uint64_t))v79;
  unint64_t v62 = (void *)v80;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF36E8);
  uint64_t v19 = (void *)swift_allocObject();
  uint64_t v20 = MEMORY[0x263F8EE78];
  v19[4] = sub_2544A5B6C(MEMORY[0x263F8EE78], &qword_269DF3790, &qword_269DF3798, &qword_269DF3788);
  uint64_t v21 = (uint64_t)v62;
  v19[2] = v65;
  v19[3] = v21;
  unint64_t v22 = sub_2544A5B6C(v20, &qword_269DF3790, &qword_269DF3798, &qword_269DF3788);
  swift_beginAccess();
  v19[4] = v22;
  swift_bridgeObjectRelease();
  sub_254527650();
  uint64_t v72 = a2;
  uint64_t v73 = v64;
  unint64_t v62 = v19;
  uint64_t v74 = v19;
  sub_2544A6438((void (*)(char *, char *))sub_2544A8B90, (uint64_t)v71, v16, MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8E628], AssociatedConformanceWitness, MEMORY[0x263F8E658], v23);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v18, v16);
  uint64_t v24 = v67;
  sub_254527650();
  uint64_t v54 = v18;
  sub_254527110();
  uint64_t v55 = v16;
  uint64_t v25 = swift_getAssociatedConformanceWitness();
  sub_2545274F0();
  uint64_t v26 = (uint64_t)(v24 + 6);
  uint64_t v27 = (unsigned int (*)(char *, uint64_t, uint64_t))v24[6];
  if (v27(v12, 1, a2) == 1)
  {
    v60[1](v59, AssociatedTypeWitness);
  }
  else
  {
    uint64_t v29 = (void *)v24[4];
    uint64_t v28 = (char *)(v24 + 4);
    uint64_t v67 = v29;
    uint64_t v30 = v28 - 24;
    ++v60;
    uint64_t v31 = v61;
    uint64_t v32 = AssociatedTypeWitness;
    unint64_t v52 = v12;
    uint64_t AssociatedConformanceWitness = v26;
    char v65 = v27;
    uint64_t v66 = v25;
    ((void (*)(char *, char *, uint64_t))v29)(v61, v12, a2);
    while (1)
    {
      uint64_t v35 = v32;
      sub_254527650();
      sub_254527110();
      uint64_t v36 = (uint64_t (*)(char *, uint64_t, uint64_t))v27;
      uint64_t v37 = v70;
      sub_2545274F0();
      uint64_t v38 = v37;
      int v39 = v36(v37, 1, a2);
      uint64_t v40 = v35;
      uint64_t v41 = v53;
      if (v39 != 1)
      {
        do
        {
          ((void (*)(char *, char *, uint64_t))v67)(v41, v38, a2);
          if ((sub_2545279F0() & 1) == 0)
          {
            sub_254527140();
            uint64_t v75 = v77;
            uint64_t v76 = v78;
            uint64_t v42 = sub_2545270F0();
            uint64_t v43 = v28;
            uint64_t v45 = v44;
            sub_254527140();
            uint64_t v75 = v77;
            uint64_t v76 = v78;
            uint64_t v46 = sub_2545270F0();
            uint64_t v47 = v42;
            uint64_t v40 = AssociatedTypeWitness;
            sub_2544A5F50(v47, v45, v46, v48);
            uint64_t v28 = v43;
            uint64_t v31 = v61;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          (*(void (**)(char *, uint64_t))v30)(v41, a2);
          sub_2545274F0();
          uint64_t v38 = v70;
        }
        while (v65(v70, 1, a2) != 1);
      }
      uint64_t v32 = v40;
      uint64_t v33 = *v60;
      (*v60)(v69, v40);
      (*(void (**)(char *, uint64_t))v30)(v31, a2);
      uint64_t v34 = v52;
      sub_2545274F0();
      uint64_t v27 = v65;
      if (v65(v34, 1, a2) == 1) {
        break;
      }
      ((void (*)(char *, char *, uint64_t))v67)(v31, v34, a2);
    }
    v33(v59, AssociatedTypeWitness);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF36F0);
  swift_allocObject();
  uint64_t v49 = sub_2544AB0BC((uint64_t)v62, (uint64_t (*)(void))type metadata accessor for CustomEventAnalytics, (uint64_t (*)(void))type metadata accessor for CustomEventAnalytics);
  swift_release();
  return v49;
}

uint64_t sub_2544A8998()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3780);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for LedgerState();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (void *)((char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_254527140();
  v11[4] = v11[1];
  v11[5] = v11[2];
  uint64_t v6 = sub_2545270F0();
  uint64_t v8 = v7;
  sub_254526CF0();
  uint64_t *v5 = v6;
  v5[1] = v8;
  sub_2544AB630((uint64_t)v5, (uint64_t)v2, (uint64_t (*)(void))type metadata accessor for LedgerState);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3788);
  *(void *)&v2[*(int *)(v9 + 52)] = MEMORY[0x263F8EE78];
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v2, 0, 1, v9);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_254522188((uint64_t)v2, v6, v8);
  swift_endAccess();
  return sub_2544AA0BC((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for LedgerState);
}

uint64_t sub_2544A8B90()
{
  return sub_2544A8998();
}

uint64_t sub_2544A8BB4(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x756F436574617473 && a2 == 0xED000070614D746ELL;
  if (v3 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000254533290 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C61567473726966 && a2 == 0xEF65746174536469 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002545332B0 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656D614E6B736174 && a2 == 0xE800000000000000 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x745374656B637562 && a2 == 0xEB00000000747261 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E4574656B637562 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_2545279E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

void *sub_2544A8EB4(uint64_t a1)
{
  return sub_2544AB0BC(a1, (uint64_t (*)(void))type metadata accessor for CustomEventAnalytics, (uint64_t (*)(void))type metadata accessor for CustomEventAnalytics);
}

uint64_t sub_2544A8EE0(void *a1)
{
  a1[1] = sub_2544A8F8C(&qword_269DF36F8, (void (*)(uint64_t))type metadata accessor for CustomEventAnalytics);
  a1[2] = sub_2544A8F8C(&qword_269DF3700, (void (*)(uint64_t))type metadata accessor for CustomEventAnalytics);
  uint64_t result = sub_2544A8F8C(&qword_269DF3708, (void (*)(uint64_t))type metadata accessor for CustomEventAnalytics);
  a1[3] = result;
  return result;
}

uint64_t sub_2544A8F8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for CustomEventAnalytics(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    a1[1] = a2[1];
    uint64_t v8 = a3[6];
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for LedgerState();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(void, void, void))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v46 = v13;
      uint64_t v15 = v10[1];
      *uint64_t v9 = *v10;
      v9[1] = v15;
      uint64_t v16 = *(int *)(v11 + 20);
      uint64_t v44 = (char *)v10 + v16;
      uint64_t v45 = (char *)v9 + v16;
      uint64_t v48 = v12;
      uint64_t v17 = sub_254526D90();
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      uint64_t v13 = v46;
      swift_bridgeObjectRetain();
      uint64_t v19 = v17;
      uint64_t v12 = v48;
      v18(v45, v44, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(v9, 0, 1, v11);
    }
    uint64_t v20 = a3[7];
    uint64_t v21 = (uint64_t *)((char *)v7 + v20);
    unint64_t v22 = (uint64_t *)((char *)a2 + v20);
    if (v13((char *)a2 + v20, 1, v11))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      uint64_t v24 = v22[1];
      *uint64_t v21 = *v22;
      v21[1] = v24;
      uint64_t v25 = *(int *)(v11 + 20);
      uint64_t v47 = (char *)v22 + v25;
      uint64_t v49 = (char *)v21 + v25;
      uint64_t v26 = sub_254526D90();
      uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
      swift_bridgeObjectRetain();
      v27(v49, v47, v26);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v21, 0, 1, v11);
    }
    uint64_t v28 = a3[8];
    uint64_t v29 = a3[9];
    uint64_t v30 = (uint64_t *)((char *)v7 + v28);
    uint64_t v31 = (uint64_t *)((char *)a2 + v28);
    uint64_t v32 = v31[1];
    *uint64_t v30 = *v31;
    v30[1] = v32;
    uint64_t v33 = (char *)v7 + v29;
    uint64_t v34 = (char *)a2 + v29;
    uint64_t v35 = sub_254526D90();
    uint64_t v36 = *(void *)(v35 - 8);
    uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
    swift_bridgeObjectRetain();
    if (v37(v34, 1, v35))
    {
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
      memcpy(v33, v34, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
    }
    uint64_t v39 = a3[10];
    uint64_t v40 = (char *)v7 + v39;
    uint64_t v41 = (char *)a2 + v39;
    if (v37(v41, 1, v35))
    {
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v40, v41, v35);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v40, 0, 1, v35);
    }
  }
  return v7;
}

uint64_t destroy for CustomEventAnalytics(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = type metadata accessor for LedgerState();
  char v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  if (!v6(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = v4 + *(int *)(v5 + 20);
    uint64_t v8 = sub_254526D90();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  uint64_t v9 = a1 + a2[7];
  if (!v6(v9, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = v9 + *(int *)(v5 + 20);
    uint64_t v11 = sub_254526D90();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = a1 + a2[9];
  uint64_t v13 = sub_254526D90();
  uint64_t v18 = *(void *)(v13 - 8);
  uint64_t v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  if (!v14(v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v12, v13);
  }
  uint64_t v15 = a1 + a2[10];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v14)(v15, 1, v13);
  if (!result)
  {
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8);
    return v17(v15, v13);
  }
  return result;
}

void *initializeWithCopy for CustomEventAnalytics(void *a1, void *a2, int *a3)
{
  int v3 = a3;
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for LedgerState();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(void, void, void))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v47 = v12;
    uint64_t v14 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v14;
    uint64_t v15 = *(int *)(v10 + 20);
    uint64_t v45 = (char *)v9 + v15;
    uint64_t v46 = (char *)v8 + v15;
    uint64_t v49 = v3;
    uint64_t v16 = sub_254526D90();
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    uint64_t v12 = v47;
    swift_bridgeObjectRetain();
    uint64_t v18 = v16;
    int v3 = v49;
    v17(v46, v45, v18);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v19 = v3[7];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  if (v12((char *)a2 + v19, 1, v10))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    uint64_t v23 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v23;
    uint64_t v24 = *(int *)(v10 + 20);
    uint64_t v48 = (char *)v21 + v24;
    uint64_t v50 = (char *)v20 + v24;
    uint64_t v25 = v3;
    uint64_t v26 = sub_254526D90();
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
    swift_bridgeObjectRetain();
    uint64_t v28 = v26;
    int v3 = v25;
    v27(v50, v48, v28);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v20, 0, 1, v10);
  }
  uint64_t v29 = v3[8];
  uint64_t v30 = v3[9];
  uint64_t v31 = (void *)((char *)a1 + v29);
  uint64_t v32 = (void *)((char *)a2 + v29);
  uint64_t v33 = v32[1];
  *uint64_t v31 = *v32;
  v31[1] = v33;
  uint64_t v34 = (char *)a1 + v30;
  uint64_t v35 = (char *)a2 + v30;
  uint64_t v36 = sub_254526D90();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
  swift_bridgeObjectRetain();
  if (v38(v35, 1, v36))
  {
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v34, v35, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  uint64_t v40 = v3[10];
  uint64_t v41 = (char *)a1 + v40;
  uint64_t v42 = (char *)a2 + v40;
  if (v38(v42, 1, v36))
  {
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v41, v42, v36);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v41, 0, 1, v36);
  }
  return a1;
}

char *assignWithCopy for CustomEventAnalytics(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for LedgerState();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      *(void *)uint64_t v7 = *(void *)v8;
      *((void *)v7 + 1) = *((void *)v8 + 1);
      uint64_t v14 = *(int *)(v9 + 20);
      uint64_t v56 = &v8[v14];
      uint64_t v57 = &v7[v14];
      uint64_t v59 = v10;
      uint64_t v15 = sub_254526D90();
      uint64_t v55 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v16 = v15;
      uint64_t v10 = v59;
      v55(v57, v56, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_2544AA0BC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for LedgerState);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
    memcpy(v7, v8, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v7 = *(void *)v8;
  *((void *)v7 + 1) = *((void *)v8 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v47 = *(int *)(v9 + 20);
  uint64_t v48 = &v7[v47];
  uint64_t v49 = &v8[v47];
  uint64_t v50 = sub_254526D90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
LABEL_7:
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = (char *)a2 + v18;
  int v21 = v11(&a1[v18], 1, v9);
  int v22 = v11(v20, 1, v9);
  if (v21)
  {
    if (!v22)
    {
      *(void *)uint64_t v19 = *(void *)v20;
      *((void *)v19 + 1) = *((void *)v20 + 1);
      uint64_t v23 = *(int *)(v9 + 20);
      uint64_t v58 = &v20[v23];
      char v60 = &v19[v23];
      uint64_t v24 = sub_254526D90();
      uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
      swift_bridgeObjectRetain();
      v25(v60, v58, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    sub_2544AA0BC((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for LedgerState);
LABEL_12:
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = *((void *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v51 = *(int *)(v9 + 20);
  unint64_t v52 = &v19[v51];
  uint64_t v53 = &v20[v51];
  uint64_t v54 = sub_254526D90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 24))(v52, v53, v54);
LABEL_13:
  uint64_t v27 = a3[8];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = (void *)((char *)a2 + v27);
  *(void *)uint64_t v28 = *v29;
  *((void *)v28 + 1) = v29[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = a3;
  uint64_t v31 = a3[9];
  uint64_t v32 = &a1[v31];
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = sub_254526D90();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  int v37 = v36(v32, 1, v34);
  int v38 = v36(v33, 1, v34);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
LABEL_18:
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v32, v33, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 24))(v32, v33, v34);
LABEL_19:
  uint64_t v40 = v30[10];
  uint64_t v41 = &a1[v40];
  uint64_t v42 = (char *)a2 + v40;
  int v43 = v36(&a1[v40], 1, v34);
  int v44 = v36(v42, 1, v34);
  if (!v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 24))(v41, v42, v34);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v41, v34);
    goto LABEL_24;
  }
  if (v44)
  {
LABEL_24:
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v41, v42, v34);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v41, 0, 1, v34);
  return a1;
}

uint64_t sub_2544AA0BC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *initializeWithTake for CustomEventAnalytics(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (_OWORD *)((char *)a1 + v6);
  uint64_t v8 = (_OWORD *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for LedgerState();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    _OWORD *v7 = *v8;
    uint64_t v13 = *(int *)(v9 + 20);
    uint64_t v14 = (char *)v7 + v13;
    uint64_t v15 = (char *)v8 + v13;
    uint64_t v16 = sub_254526D90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = (_OWORD *)((char *)a1 + v17);
  uint64_t v19 = (_OWORD *)((char *)a2 + v17);
  if (v11((_OWORD *)((char *)a2 + v17), 1, v9))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    *uint64_t v18 = *v19;
    uint64_t v21 = *(int *)(v9 + 20);
    int v22 = (char *)v18 + v21;
    uint64_t v23 = (char *)v19 + v21;
    uint64_t v24 = sub_254526D90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
  }
  uint64_t v25 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = sub_254526D90();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  if (v30(v27, 1, v28))
  {
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  uint64_t v32 = a3[10];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  if (v30(v34, 1, v28))
  {
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v33, v34, v28);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v33, 0, 1, v28);
  }
  return a1;
}

char *assignWithTake for CustomEventAnalytics(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  swift_bridgeObjectRelease();
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for LedgerState();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
      uint64_t v14 = *(int *)(v9 + 20);
      uint64_t v15 = &v7[v14];
      uint64_t v16 = &v8[v14];
      uint64_t v17 = sub_254526D90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_2544AA0BC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for LedgerState);
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
    memcpy(v7, v8, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v50 = *((void *)v8 + 1);
  *(void *)uint64_t v7 = *(void *)v8;
  *((void *)v7 + 1) = v50;
  swift_bridgeObjectRelease();
  uint64_t v51 = *(int *)(v9 + 20);
  unint64_t v52 = &v7[v51];
  uint64_t v53 = &v8[v51];
  uint64_t v54 = sub_254526D90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 40))(v52, v53, v54);
LABEL_7:
  uint64_t v19 = a3[7];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = (char *)a2 + v19;
  int v22 = v11(&a1[v19], 1, v9);
  int v23 = v11(v21, 1, v9);
  if (v22)
  {
    if (!v23)
    {
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
      uint64_t v24 = *(int *)(v9 + 20);
      uint64_t v25 = &v20[v24];
      uint64_t v26 = &v21[v24];
      uint64_t v27 = sub_254526D90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v20, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    sub_2544AA0BC((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for LedgerState);
LABEL_12:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
    memcpy(v20, v21, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v55 = *((void *)v21 + 1);
  *(void *)uint64_t v20 = *(void *)v21;
  *((void *)v20 + 1) = v55;
  swift_bridgeObjectRelease();
  uint64_t v56 = *(int *)(v9 + 20);
  uint64_t v57 = &v20[v56];
  uint64_t v58 = &v21[v56];
  uint64_t v59 = sub_254526D90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 40))(v57, v58, v59);
LABEL_13:
  uint64_t v29 = a3[8];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = (void *)((char *)a2 + v29);
  uint64_t v33 = *v31;
  uint64_t v32 = v31[1];
  *(void *)uint64_t v30 = v33;
  *((void *)v30 + 1) = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[9];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = sub_254526D90();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
  int v40 = v39(v35, 1, v37);
  int v41 = v39(v36, 1, v37);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v37);
LABEL_18:
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v35, v36, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v38 + 40))(v35, v36, v37);
LABEL_19:
  uint64_t v43 = a3[10];
  int v44 = &a1[v43];
  uint64_t v45 = (char *)a2 + v43;
  int v46 = v39(&a1[v43], 1, v37);
  int v47 = v39(v45, 1, v37);
  if (!v46)
  {
    if (!v47)
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 40))(v44, v45, v37);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v38 + 8))(v44, v37);
    goto LABEL_24;
  }
  if (v47)
  {
LABEL_24:
    uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v44, v45, v37);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v44, 0, 1, v37);
  return a1;
}

uint64_t getEnumTagSinglePayload for CustomEventAnalytics(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2544AAA98);
}

uint64_t sub_2544AAA98(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
      int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for CustomEventAnalytics(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2544AABE0);
}

void *sub_2544AABE0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 24);
      int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 36);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_2544AAD14()
{
  sub_2544AAE30(319, (unint64_t *)&qword_269DF3720, (void (*)(uint64_t))type metadata accessor for LedgerState);
  if (v0 <= 0x3F)
  {
    sub_2544AAE30(319, qword_26B266BE8, MEMORY[0x263F07490]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_2544AAE30(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2545274E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for CustomEventAnalytics.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2544AAF50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CustomEventAnalytics.CodingKeys()
{
  return &type metadata for CustomEventAnalytics.CodingKeys;
}

unint64_t sub_2544AAF8C()
{
  unint64_t result = qword_269DF3728;
  if (!qword_269DF3728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3728);
  }
  return result;
}

unint64_t sub_2544AAFE4()
{
  unint64_t result = qword_269DF3730;
  if (!qword_269DF3730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3730);
  }
  return result;
}

unint64_t sub_2544AB03C()
{
  unint64_t result = qword_269DF3738;
  if (!qword_269DF3738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3738);
  }
  return result;
}

void *sub_2544AB090(uint64_t a1)
{
  return sub_2544AB0BC(a1, (uint64_t (*)(void))type metadata accessor for DediscoAnalytics, (uint64_t (*)(void))type metadata accessor for DediscoAnalytics);
}

void *sub_2544AB0BC(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  int v22 = a3;
  uint64_t v5 = a2(0);
  unsigned int v6 = (int *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (unint64_t *)((char *)&v22 - v7);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v12 = (char *)v3 + qword_269DF4E38;
  uint64_t v13 = type metadata accessor for LedgerState();
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  v3[2] = a1;
  v14(v11, 1, 1, v13);
  uint64_t v15 = (uint64_t)v3 + qword_269DF4E38;
  swift_beginAccess();
  swift_retain();
  sub_2544A6C0C((uint64_t)v11, v15, &qword_269DF3688);
  swift_endAccess();
  uint64_t v16 = MEMORY[0x263F8EE78];
  *uint64_t v8 = sub_2544A5538(MEMORY[0x263F8EE78]);
  v8[1] = sub_2544A564C(v16);
  v14((char *)v8 + v6[8], 1, 1, v13);
  v14((char *)v8 + v6[9], 1, 1, v13);
  uint64_t v17 = (unint64_t *)((char *)v8 + v6[10]);
  *uint64_t v17 = 0;
  v17[1] = 0;
  uint64_t v18 = (char *)v8 + v6[11];
  uint64_t v19 = sub_254526D90();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v18, 1, 1, v19);
  v20((char *)v8 + v6[12], 1, 1, v19);
  sub_2544AB5C8((uint64_t)v8, (uint64_t)v3 + *(void *)(*v3 + 112), v22);
  return v3;
}

void *sub_2544AB348(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for MLHostAnalytics();
  uint64_t v4 = v3 - 8;
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = (unint64_t *)((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (char *)v1 + qword_269DF4E38;
  uint64_t v11 = type metadata accessor for LedgerState();
  int v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  v12(v10, 1, 1, v11);
  void v1[2] = a1;
  v12(v9, 1, 1, v11);
  uint64_t v13 = (uint64_t)v1 + qword_269DF4E38;
  swift_beginAccess();
  swift_retain();
  sub_2544A6C0C((uint64_t)v9, v13, &qword_269DF3688);
  swift_endAccess();
  uint64_t v14 = MEMORY[0x263F8EE78];
  *unsigned int v6 = sub_2544A5538(MEMORY[0x263F8EE78]);
  v6[1] = sub_2544A564C(v14);
  v12((char *)v6 + *(int *)(v4 + 32), 1, 1, v11);
  v12((char *)v6 + *(int *)(v4 + 36), 1, 1, v11);
  sub_2544AB5C8((uint64_t)v6, (uint64_t)v1 + *(void *)(*v1 + 112), (uint64_t (*)(void))type metadata accessor for MLHostAnalytics);
  return v1;
}

uint64_t sub_2544AB568(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3780);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2544AB5C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2544AB630(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t DediscoAnalytics.stateCountMap.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DediscoAnalytics.stateCountMap.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v1 = a1;
  return result;
}

uint64_t (*DediscoAnalytics.stateCountMap.modify())()
{
  return nullsub_1;
}

uint64_t DediscoAnalytics.transitionStatsMap.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DediscoAnalytics.transitionStatsMap.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*DediscoAnalytics.transitionStatsMap.modify())()
{
  return nullsub_1;
}

uint64_t DediscoAnalytics.firstValidState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for DediscoAnalytics();
  return sub_254493CFC(v1 + *(int *)(v3 + 24), a1, &qword_269DF3688);
}

uint64_t type metadata accessor for DediscoAnalytics()
{
  uint64_t result = qword_269DF37E8;
  if (!qword_269DF37E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DediscoAnalytics.firstValidState.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DediscoAnalytics();
  return sub_2544A6C0C(a1, v1 + *(int *)(v3 + 24), &qword_269DF3688);
}

uint64_t (*DediscoAnalytics.firstValidState.modify())()
{
  return nullsub_1;
}

uint64_t DediscoAnalytics.latestValidState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for DediscoAnalytics();
  return sub_254493CFC(v1 + *(int *)(v3 + 28), a1, &qword_269DF3688);
}

uint64_t DediscoAnalytics.latestValidState.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DediscoAnalytics();
  return sub_2544A6C0C(a1, v1 + *(int *)(v3 + 28), &qword_269DF3688);
}

uint64_t (*DediscoAnalytics.latestValidState.modify())()
{
  return nullsub_1;
}

uint64_t DediscoAnalytics.taskName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for DediscoAnalytics() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DediscoAnalytics.taskName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for DediscoAnalytics() + 32));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*DediscoAnalytics.taskName.modify())()
{
  return nullsub_1;
}

uint64_t DediscoAnalytics.bucketStart.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for DediscoAnalytics();
  return sub_254493CFC(v1 + *(int *)(v3 + 36), a1, &qword_26B266B98);
}

uint64_t DediscoAnalytics.bucketStart.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DediscoAnalytics();
  return sub_2544A6C0C(a1, v1 + *(int *)(v3 + 36), &qword_26B266B98);
}

uint64_t (*DediscoAnalytics.bucketStart.modify())()
{
  return nullsub_1;
}

uint64_t DediscoAnalytics.bucketEnd.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for DediscoAnalytics();
  return sub_254493CFC(v1 + *(int *)(v3 + 40), a1, &qword_26B266B98);
}

uint64_t DediscoAnalytics.bucketEnd.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DediscoAnalytics();
  return sub_2544A6C0C(a1, v1 + *(int *)(v3 + 40), &qword_26B266B98);
}

uint64_t (*DediscoAnalytics.bucketEnd.modify())()
{
  return nullsub_1;
}

uint64_t DediscoAnalytics.init()@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v2 = MEMORY[0x263F8EE78];
  *a1 = sub_2544A5538(MEMORY[0x263F8EE78]);
  a1[1] = sub_2544A564C(v2);
  uint64_t v3 = (int *)type metadata accessor for DediscoAnalytics();
  uint64_t v4 = (char *)a1 + v3[6];
  uint64_t v5 = type metadata accessor for LedgerState();
  unsigned int v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  v6((char *)a1 + v3[7], 1, 1, v5);
  uint64_t v7 = (unint64_t *)((char *)a1 + v3[8]);
  void *v7 = 0;
  v7[1] = 0;
  uint64_t v8 = (char *)a1 + v3[9];
  uint64_t v9 = sub_254526D90();
  int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
  ((void (*)(void *__return_ptr, char *, uint64_t, uint64_t, uint64_t))v12)((void *)(v9 - 8), v8, 1, 1, v9);
  uint64_t v10 = (char *)a1 + v3[10];

  return v12(v10, 1, 1, v9);
}

unint64_t sub_2544ABCDC(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      return result;
    case 2:
      unint64_t result = 0x6C61567473726966;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x656D614E6B736174;
      break;
    case 5:
      unint64_t result = 0x745374656B637562;
      break;
    case 6:
      unint64_t result = 0x6E4574656B637562;
      break;
    default:
      unint64_t result = 0x756F436574617473;
      break;
  }
  return result;
}

unint64_t sub_2544ABDF4()
{
  return sub_2544ABCDC(*v0);
}

uint64_t sub_2544ABDFC(uint64_t a1)
{
  unint64_t v2 = sub_2544AC230();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544ABE38(uint64_t a1)
{
  unint64_t v2 = sub_2544AC230();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DediscoAnalytics.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF37B0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544AC230();
  sub_254527B00();
  uint64_t v12 = *v3;
  char v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF36A0);
  sub_2544A7C5C(&qword_269DF36A8);
  sub_254527970();
  if (!v2)
  {
    uint64_t v12 = v3[1];
    char v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF36B0);
    sub_2544A7CC4(&qword_269DF36B8, (void (*)(void))sub_25448E1CC, (void (*)(void))sub_2544A74B0);
    sub_254527970();
    type metadata accessor for DediscoAnalytics();
    LOBYTE(v12) = 2;
    type metadata accessor for LedgerState();
    sub_2544AD9E8(&qword_269DF3240, (void (*)(uint64_t))type metadata accessor for LedgerState);
    sub_254527910();
    LOBYTE(v12) = 3;
    sub_254527910();
    LOBYTE(v12) = 4;
    sub_2545278C0();
    LOBYTE(v12) = 5;
    sub_254526D90();
    sub_2544AD9E8((unint64_t *)&unk_26B266FD8, MEMORY[0x263F07490]);
    sub_254527910();
    LOBYTE(v12) = 6;
    sub_254527910();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_2544AC230()
{
  unint64_t result = qword_269DF37B8;
  if (!qword_269DF37B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF37B8);
  }
  return result;
}

uint64_t DediscoAnalytics.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  char v60 = a1;
  uint64_t v46 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  int v47 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v48 = (char *)&v41 - v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v55 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v54 = (char *)&v41 - v9;
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF37C0);
  uint64_t v53 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v59 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DediscoAnalytics();
  uint64_t v12 = (int *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (unint64_t *)((char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = MEMORY[0x263F8EE78];
  unint64_t v52 = sub_2544A5538(MEMORY[0x263F8EE78]);
  *uint64_t v14 = v52;
  unint64_t v51 = sub_2544A564C(v15);
  v14[1] = v51;
  uint64_t v16 = (uint64_t)v14 + v12[8];
  uint64_t v17 = type metadata accessor for LedgerState();
  uint64_t v18 = *(void (**)(void))(*(void *)(v17 - 8) + 56);
  uint64_t v50 = v16;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v18)(v16, 1, 1, v17);
  uint64_t v49 = (uint64_t)v14 + v12[9];
  v18();
  uint64_t v19 = (uint64_t *)((char *)v14 + v12[10]);
  *uint64_t v19 = 0;
  v19[1] = 0;
  uint64_t v20 = (uint64_t)v14 + v12[11];
  uint64_t v21 = sub_254526D90();
  int v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  v22(v20, 1, 1, v21);
  uint64_t v23 = v12[12];
  uint64_t v57 = v14;
  uint64_t v24 = (uint64_t)v14 + v23;
  v22((uint64_t)v14 + v23, 1, 1, v21);
  __swift_project_boxed_opaque_existential_1(v60, v60[3]);
  sub_2544AC230();
  uint64_t v25 = v58;
  sub_254527AF0();
  if (v25)
  {
    uint64_t v30 = (uint64_t)v57;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
  }
  else
  {
    uint64_t v58 = v17;
    uint64_t v43 = v20;
    int v44 = v19;
    uint64_t v45 = v21;
    uint64_t v42 = v24;
    uint64_t v27 = (uint64_t)v54;
    uint64_t v26 = (uint64_t)v55;
    uint64_t v28 = v53;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF36A0);
    char v61 = 0;
    sub_2544A7C5C(&qword_269DF36D0);
    sub_254527870();
    swift_bridgeObjectRelease();
    uint64_t v30 = (uint64_t)v57;
    *uint64_t v57 = v62;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF36B0);
    char v61 = 1;
    sub_2544A7CC4(&qword_269DF36D8, (void (*)(void))sub_25448E178, (void (*)(void))sub_2544A7D4C);
    sub_254527870();
    swift_bridgeObjectRelease();
    *(void *)(v30 + 8) = v62;
    LOBYTE(v62) = 2;
    sub_2544AD9E8(&qword_269DF3238, (void (*)(uint64_t))type metadata accessor for LedgerState);
    sub_254527810();
    sub_2544A6C0C(v27, v50, &qword_269DF3688);
    LOBYTE(v62) = 3;
    sub_254527810();
    sub_2544A6C0C(v26, v49, &qword_269DF3688);
    LOBYTE(v62) = 4;
    uint64_t v31 = v28;
    uint64_t v32 = sub_2545277C0();
    uint64_t v34 = v33;
    uint64_t v35 = v44;
    swift_bridgeObjectRelease();
    *uint64_t v35 = v32;
    v35[1] = v34;
    LOBYTE(v62) = 5;
    sub_2544AD9E8(&qword_26B266BE0, MEMORY[0x263F07490]);
    uint64_t v36 = (uint64_t)v48;
    uint64_t v37 = v59;
    sub_254527810();
    sub_2544A6C0C(v36, v43, &qword_26B266B98);
    LOBYTE(v62) = 6;
    uint64_t v38 = (uint64_t)v47;
    uint64_t v39 = v56;
    sub_254527810();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v37, v39);
    int v40 = v60;
    sub_2544A6C0C(v38, v42, &qword_26B266B98);
    sub_2544AECC8(v30, v46, (uint64_t (*)(void))type metadata accessor for DediscoAnalytics);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  }
  return sub_2544AE088(v30, (uint64_t (*)(void))type metadata accessor for DediscoAnalytics);
}

uint64_t sub_2544AC9DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DediscoAnalytics.init(from:)(a1, a2);
}

uint64_t sub_2544AC9F4(void *a1)
{
  return DediscoAnalytics.encode(to:)(a1);
}

uint64_t sub_2544ACA0C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3780);
  uint64_t v1 = MEMORY[0x270FA5388](v0 - 8);
  uint64_t v114 = (uint64_t)&v103 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v103 - v3;
  uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3788);
  uint64_t v112 = *(uint64_t (**)())(v121 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v121);
  uint64_t v117 = (char **)((char *)&v103 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  uint64_t v111 = (uint64_t)&v103 - v7;
  v119 = (uint64_t (*)())type metadata accessor for LedgerState();
  uint64_t v115 = *((void *)v119 - 1);
  uint64_t v8 = MEMORY[0x270FA5388](v119);
  uint64_t v118 = (uint64_t *)((char *)&v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  v113 = (uint64_t *)((char *)&v103 - v11);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (unint64_t *)((char *)&v103 - v13);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (unint64_t *)((char *)&v103 - v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF36E8);
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = MEMORY[0x263F8EE78];
  *(void *)(v17 + 32) = sub_2544A57B0(MEMORY[0x263F8EE78]);
  uint64_t v19 = (unint64_t *)(v17 + 32);
  strcpy((char *)(v17 + 16), "DediscoGraph");
  *(unsigned char *)(v17 + 29) = 0;
  *(_WORD *)(v17 + 30) = -5120;
  uint64_t v106 = v17;
  unint64_t v20 = sub_2544A57B0(v18);
  swift_beginAccess();
  v120 = v19;
  *uint64_t v19 = v20;
  swift_bridgeObjectRelease();
  for (uint64_t i = 0; i != 24; i += 4)
  {
    int v22 = *(_DWORD *)((char *)&unk_2703D5428 + i + 32);
    unint64_t v23 = 0x80000002545332D0;
    unint64_t v24 = 0xD000000000000010;
    switch(v22)
    {
      case 0:
        unint64_t v23 = 0xE700000000000000;
        unint64_t v24 = 0x6E776F6E6B6E75;
        break;
      case 1:
        break;
      case 2:
        unint64_t v24 = 0x7A696D6F646E6172;
        unint64_t v23 = 0xED00006E6F697461;
        break;
      case 3:
        unint64_t v24 = 0x6843746567647562;
        unint64_t v23 = 0xEB000000006B6365;
        break;
      case 4:
        unint64_t v24 = 0x4364616F6C796170;
        unint64_t v23 = 0xEF6E6F6974616572;
        break;
      case 5:
        unint64_t v23 = 0xE600000000000000;
        unint64_t v24 = 0x64616F6C7075;
        break;
      default:
        unint64_t v23 = 0xE700000000000000;
        unint64_t v24 = 0x746C7561666564;
        break;
    }
    unint64_t v124 = v24;
    unint64_t v125 = v23;
    swift_bridgeObjectRetain();
    sub_254527080();
    swift_bridgeObjectRelease();
    unint64_t v25 = v124;
    unint64_t v26 = v125;
    sub_254526CF0();
    *uint64_t v16 = v25;
    v16[1] = v26;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v18 = sub_2544B92F0(0, *(void *)(v18 + 16) + 1, 1, v18);
    }
    unint64_t v28 = *(void *)(v18 + 16);
    unint64_t v27 = *(void *)(v18 + 24);
    if (v28 >= v27 >> 1) {
      uint64_t v18 = sub_2544B92F0(v27 > 1, v28 + 1, 1, v18);
    }
    *(void *)(v18 + 16) = v28 + 1;
    v116 = (char *)((*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80));
    uint64_t v122 = *(void *)(v115 + 72);
    sub_2544AEC64((uint64_t)v16, (uint64_t)&v116[v18 + v122 * v28]);
    unint64_t v29 = 0x80000002545332D0;
    unint64_t v30 = 0xD000000000000010;
    switch(v22)
    {
      case 0:
        unint64_t v29 = 0xE700000000000000;
        unint64_t v30 = 0x6E776F6E6B6E75;
        break;
      case 1:
        break;
      case 2:
        unint64_t v30 = 0x7A696D6F646E6172;
        unint64_t v29 = 0xED00006E6F697461;
        break;
      case 3:
        unint64_t v30 = 0x6843746567647562;
        unint64_t v29 = 0xEB000000006B6365;
        break;
      case 4:
        unint64_t v30 = 0x4364616F6C796170;
        unint64_t v29 = 0xEF6E6F6974616572;
        break;
      case 5:
        unint64_t v29 = 0xE600000000000000;
        unint64_t v30 = 0x64616F6C7075;
        break;
      default:
        unint64_t v29 = 0xE700000000000000;
        unint64_t v30 = 0x746C7561666564;
        break;
    }
    unint64_t v124 = v30;
    unint64_t v125 = v29;
    swift_bridgeObjectRetain();
    sub_254527080();
    swift_bridgeObjectRelease();
    unint64_t v31 = v124;
    unint64_t v32 = v125;
    sub_254526CF0();
    *uint64_t v14 = v31;
    v14[1] = v32;
    unint64_t v34 = *(void *)(v18 + 16);
    unint64_t v33 = *(void *)(v18 + 24);
    uint64_t v35 = v116;
    if (v34 >= v33 >> 1) {
      uint64_t v18 = sub_2544B92F0(v33 > 1, v34 + 1, 1, v18);
    }
    *(void *)(v18 + 16) = v34 + 1;
    sub_2544AEC64((uint64_t)v14, (uint64_t)&v35[v18 + v34 * v122]);
  }
  v108 = &v35[v18];
  uint64_t v36 = v18;
  uint64_t v37 = *(void *)(v18 + 16);
  uint64_t v38 = v120;
  uint64_t v39 = v121;
  if (v37)
  {
    swift_bridgeObjectRetain();
    uint64_t v109 = v36;
    uint64_t v40 = (uint64_t)&v35[v36];
    uint64_t v41 = v113;
    do
    {
      sub_2544AECC8(v40, (uint64_t)v41, (uint64_t (*)(void))type metadata accessor for LedgerState);
      uint64_t v44 = *v41;
      uint64_t v45 = v41[1];
      uint64_t v46 = v111;
      sub_2544AECC8((uint64_t)v41, v111, (uint64_t (*)(void))type metadata accessor for LedgerState);
      *(void *)(v46 + *(int *)(v39 + 52)) = MEMORY[0x263F8EE78];
      swift_beginAccess();
      sub_2544AED30(v46, (uint64_t)v117);
      swift_bridgeObjectRetain();
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v123[0] = *v38;
      uint64_t v48 = v123[0];
      unint64_t *v38 = 0x8000000000000000;
      unint64_t v50 = sub_2544B9B58(v44, v45);
      uint64_t v51 = *(void *)(v48 + 16);
      BOOL v52 = (v49 & 1) == 0;
      uint64_t v53 = v51 + v52;
      if (__OFADD__(v51, v52))
      {
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        sub_254527A30();
        __break(1u);
        JUMPOUT(0x2544AD7A0);
      }
      char v54 = v49;
      if (*(void *)(v48 + 24) >= v53)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_2544BBD68();
        }
      }
      else
      {
        sub_2544B9DB4(v53, isUniquelyReferenced_nonNull_native);
        unint64_t v55 = sub_2544B9B58(v44, v45);
        if ((v54 & 1) != (v56 & 1)) {
          goto LABEL_77;
        }
        unint64_t v50 = v55;
      }
      uint64_t v39 = v121;
      uint64_t v57 = (void *)v123[0];
      if (v54)
      {
        uint64_t v42 = *(void *)(v123[0] + 56);
        uint64_t v115 = *((void *)v112 + 9);
        sub_2544A6C0C((uint64_t)v117, v42 + v115 * v50, &qword_269DF3788);
      }
      else
      {
        *(void *)(v123[0] + 8 * (v50 >> 6) + 64) |= 1 << v50;
        uint64_t v58 = (uint64_t *)(v57[6] + 16 * v50);
        *uint64_t v58 = v44;
        v58[1] = v45;
        uint64_t v59 = v57[7];
        uint64_t v115 = *((void *)v112 + 9);
        sub_2544AED30((uint64_t)v117, v59 + v115 * v50);
        uint64_t v60 = v57[2];
        BOOL v61 = __OFADD__(v60, 1);
        uint64_t v62 = v60 + 1;
        if (v61) {
          goto LABEL_76;
        }
        v57[2] = v62;
        swift_bridgeObjectRetain();
      }
      uint64_t v38 = v120;
      unint64_t *v120 = (unint64_t)v57;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      uint64_t v41 = v113;
      sub_2544AE088((uint64_t)v113, (uint64_t (*)(void))type metadata accessor for LedgerState);
      uint64_t v43 = v122;
      v40 += v122;
      --v37;
    }
    while (v37);
    uint64_t v63 = v109;
    swift_bridgeObjectRelease();
    uint64_t v111 = *(void *)(v63 + 16);
    uint64_t v64 = v116;
    if (v111)
    {
      v119 = (uint64_t (*)())((char *)v112 + 56);
      uint64_t v117 = (char **)((char *)v112 + 48);
      swift_bridgeObjectRetain();
      unint64_t v65 = 0;
      uint64_t v107 = (uint64_t)&v64[v63 + 8];
      uint64_t v66 = v118;
      v110 = v4;
      while (1)
      {
        unint64_t v67 = *(void *)(v63 + 16);
        if (v65 >= v67) {
          goto LABEL_75;
        }
        v113 = (uint64_t *)v65;
        sub_2544AECC8((uint64_t)&v108[v65 * v43], (uint64_t)v66, (uint64_t (*)(void))type metadata accessor for LedgerState);
        swift_bridgeObjectRetain();
        int v68 = (uint64_t *)v107;
        do
        {
          uint64_t v70 = *v66;
          uint64_t v69 = v66[1];
          uint64_t v72 = *(v68 - 1);
          uint64_t v71 = *v68;
          BOOL v73 = *v66 == v72 && v69 == v71;
          if (!v73 && (sub_2545279E0() & 1) == 0)
          {
            unint64_t v74 = *v120;
            if (*(void *)(*v120 + 16))
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              unint64_t v75 = sub_2544B9B58(v70, v69);
              if (v76)
              {
                sub_254493CFC(*(void *)(v74 + 56) + v115 * v75, (uint64_t)v4, &qword_269DF3788);
                uint64_t v77 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v119;
                (*(void (**)(char *, void, uint64_t, uint64_t))v119)(v4, 0, 1, v39);
              }
              else
              {
                uint64_t v77 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v119;
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v119)(v4, 1, 1, v39);
              }
              swift_bridgeObjectRelease();
              uint64_t v78 = *v117;
              if (((unsigned int (*)(char *, uint64_t, uint64_t))*v117)(v4, 1, v39) != 1)
              {
                v116 = v78;
                sub_2544AB568((uint64_t)v4);
                unint64_t v79 = *v120;
                if (!*(void *)(*v120 + 16))
                {
                  uint64_t v84 = v114;
                  uint64_t v39 = v121;
                  v77(v114, 1, 1, v121);
                  uint64_t v85 = v84;
                  goto LABEL_63;
                }
                swift_bridgeObjectRetain();
                unint64_t v80 = sub_2544B9B58(v72, v71);
                if (v81)
                {
                  uint64_t v82 = v114;
                  sub_254493CFC(*(void *)(v79 + 56) + v115 * v80, v114, &qword_269DF3788);
                  uint64_t v83 = 0;
                }
                else
                {
                  uint64_t v83 = 1;
                  uint64_t v82 = v114;
                }
                uint64_t v86 = v121;
                v77(v82, v83, 1, v121);
                swift_bridgeObjectRelease();
                uint64_t v87 = v86;
                char v88 = v116;
                if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v116)(v82, 1, v87) == 1)
                {
                  uint64_t v85 = v82;
                  uint64_t v4 = v110;
                  uint64_t v39 = v121;
LABEL_63:
                  uint64_t v66 = v118;
                  uint64_t v43 = v122;
                  sub_2544AB568(v85);
LABEL_44:
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  goto LABEL_45;
                }
                sub_2544AB568(v82);
                swift_bridgeObjectRetain();
                char v89 = v88;
                uint64_t v112 = sub_25448894C();
                char v90 = sub_254522338(v123, v70, v69);
                uint64_t v92 = v91;
                int v93 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v89)(v91, 1, v121);
                uint64_t v43 = v122;
                if (v93)
                {
                  ((void (*)(void *, void))v90)(v123, 0);
                  swift_bridgeObjectRelease();
                  ((void (*)(unint64_t *, void))v112)(&v124, 0);
                  uint64_t v4 = v110;
                }
                else
                {
                  v116 = (char *)v90;
                  uint64_t v94 = *(int *)(v121 + 52);
                  uint64_t v95 = *(void **)(v92 + v94);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  char v96 = swift_isUniquelyReferenced_nonNull_native();
                  uint64_t v105 = v94;
                  *(void *)(v92 + v94) = v95;
                  uint64_t v4 = v110;
                  uint64_t v104 = v92;
                  if ((v96 & 1) == 0)
                  {
                    uint64_t v95 = sub_2544B91E0(0, v95[2] + 1, 1, v95);
                    *(void *)(v92 + v105) = v95;
                  }
                  unint64_t v98 = v95[2];
                  unint64_t v97 = v95[3];
                  unint64_t v99 = v98 + 1;
                  if (v98 >= v97 >> 1)
                  {
                    uint64_t v101 = sub_2544B91E0((void *)(v97 > 1), v98 + 1, 1, v95);
                    unint64_t v99 = v98 + 1;
                    uint64_t v95 = v101;
                    *(void *)(v104 + v105) = v101;
                  }
                  uint64_t v43 = v122;
                  v95[2] = v99;
                  v100 = &v95[4 * v98];
                  v100[4] = v70;
                  v100[5] = v69;
                  v100[6] = v72;
                  v100[7] = v71;
                  ((void (*)(void *, void))v116)(v123, 0);
                  swift_bridgeObjectRelease();
                  ((void (*)(unint64_t *, void))v112)(&v124, 0);
                }
                uint64_t v39 = v121;
LABEL_43:
                uint64_t v66 = v118;
                goto LABEL_44;
              }
            }
            else
            {
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v119)(v4, 1, 1, v39);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            sub_2544AB568((uint64_t)v4);
            uint64_t v39 = v121;
            uint64_t v43 = v122;
            goto LABEL_43;
          }
LABEL_45:
          int v68 = (uint64_t *)((char *)v68 + v43);
          --v67;
        }
        while (v67);
        uint64_t v63 = v109;
        swift_bridgeObjectRelease();
        unint64_t v65 = (unint64_t)v113 + 1;
        sub_2544AE088((uint64_t)v66, (uint64_t (*)(void))type metadata accessor for LedgerState);
        if (v65 == v111)
        {
          swift_bridgeObjectRelease();
          break;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return v106;
}

uint64_t BMLighthouseLedgerDediscoPrivacyEventEventPhase.description.getter()
{
  return 0x746C7561666564;
}

void *getDediscoMachine()()
{
  uint64_t v0 = sub_2544ACA0C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF37C8);
  swift_allocObject();
  uint64_t v1 = sub_2544AB090(v0);
  swift_release();
  return v1;
}

uint64_t sub_2544AD934()
{
  return BMLighthouseLedgerDediscoPrivacyEventEventPhase.description.getter();
}

uint64_t sub_2544AD93C(void *a1)
{
  a1[1] = sub_2544AD9E8(&qword_269DF37D0, (void (*)(uint64_t))type metadata accessor for DediscoAnalytics);
  a1[2] = sub_2544AD9E8(&qword_269DF37D8, (void (*)(uint64_t))type metadata accessor for DediscoAnalytics);
  uint64_t result = sub_2544AD9E8(&qword_269DF37E0, (void (*)(uint64_t))type metadata accessor for DediscoAnalytics);
  a1[3] = result;
  return result;
}

uint64_t sub_2544AD9E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *assignWithCopy for DediscoAnalytics(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for LedgerState();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      *(void *)uint64_t v7 = *(void *)v8;
      *((void *)v7 + 1) = *((void *)v8 + 1);
      uint64_t v14 = *(int *)(v9 + 20);
      char v56 = &v8[v14];
      uint64_t v57 = &v7[v14];
      uint64_t v59 = v10;
      uint64_t v15 = sub_254526D90();
      unint64_t v55 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v16 = v15;
      uint64_t v10 = v59;
      v55(v57, v56, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_2544AE088((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for LedgerState);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
    memcpy(v7, v8, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v7 = *(void *)v8;
  *((void *)v7 + 1) = *((void *)v8 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v47 = *(int *)(v9 + 20);
  uint64_t v48 = &v7[v47];
  char v49 = &v8[v47];
  uint64_t v50 = sub_254526D90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
LABEL_7:
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  unint64_t v20 = (char *)a2 + v18;
  int v21 = v11(&a1[v18], 1, v9);
  int v22 = v11(v20, 1, v9);
  if (v21)
  {
    if (!v22)
    {
      *(void *)uint64_t v19 = *(void *)v20;
      *((void *)v19 + 1) = *((void *)v20 + 1);
      uint64_t v23 = *(int *)(v9 + 20);
      uint64_t v58 = &v20[v23];
      uint64_t v60 = &v19[v23];
      uint64_t v24 = sub_254526D90();
      unint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
      swift_bridgeObjectRetain();
      v25(v60, v58, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    sub_2544AE088((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for LedgerState);
LABEL_12:
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = *((void *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v51 = *(int *)(v9 + 20);
  BOOL v52 = &v19[v51];
  uint64_t v53 = &v20[v51];
  uint64_t v54 = sub_254526D90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 24))(v52, v53, v54);
LABEL_13:
  uint64_t v27 = a3[8];
  unint64_t v28 = &a1[v27];
  unint64_t v29 = (void *)((char *)a2 + v27);
  *(void *)unint64_t v28 = *v29;
  *((void *)v28 + 1) = v29[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v30 = a3;
  uint64_t v31 = a3[9];
  unint64_t v32 = &a1[v31];
  unint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = sub_254526D90();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  int v37 = v36(v32, 1, v34);
  int v38 = v36(v33, 1, v34);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
LABEL_18:
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v32, v33, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 24))(v32, v33, v34);
LABEL_19:
  uint64_t v40 = v30[10];
  uint64_t v41 = &a1[v40];
  uint64_t v42 = (char *)a2 + v40;
  int v43 = v36(&a1[v40], 1, v34);
  int v44 = v36(v42, 1, v34);
  if (!v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 24))(v41, v42, v34);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v41, v34);
    goto LABEL_24;
  }
  if (v44)
  {
LABEL_24:
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v41, v42, v34);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v41, 0, 1, v34);
  return a1;
}

uint64_t sub_2544AE088(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *assignWithTake for DediscoAnalytics(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  swift_bridgeObjectRelease();
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for LedgerState();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
      uint64_t v14 = *(int *)(v9 + 20);
      uint64_t v15 = &v7[v14];
      uint64_t v16 = &v8[v14];
      uint64_t v17 = sub_254526D90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_2544AE088((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for LedgerState);
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
    memcpy(v7, v8, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v50 = *((void *)v8 + 1);
  *(void *)uint64_t v7 = *(void *)v8;
  *((void *)v7 + 1) = v50;
  swift_bridgeObjectRelease();
  uint64_t v51 = *(int *)(v9 + 20);
  BOOL v52 = &v7[v51];
  uint64_t v53 = &v8[v51];
  uint64_t v54 = sub_254526D90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 40))(v52, v53, v54);
LABEL_7:
  uint64_t v19 = a3[7];
  unint64_t v20 = &a1[v19];
  int v21 = (char *)a2 + v19;
  int v22 = v11(&a1[v19], 1, v9);
  int v23 = v11(v21, 1, v9);
  if (v22)
  {
    if (!v23)
    {
      *(_OWORD *)unint64_t v20 = *(_OWORD *)v21;
      uint64_t v24 = *(int *)(v9 + 20);
      unint64_t v25 = &v20[v24];
      uint64_t v26 = &v21[v24];
      uint64_t v27 = sub_254526D90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v20, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    sub_2544AE088((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for LedgerState);
LABEL_12:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
    memcpy(v20, v21, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v55 = *((void *)v21 + 1);
  *(void *)unint64_t v20 = *(void *)v21;
  *((void *)v20 + 1) = v55;
  swift_bridgeObjectRelease();
  uint64_t v56 = *(int *)(v9 + 20);
  uint64_t v57 = &v20[v56];
  uint64_t v58 = &v21[v56];
  uint64_t v59 = sub_254526D90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 40))(v57, v58, v59);
LABEL_13:
  uint64_t v29 = a3[8];
  unint64_t v30 = &a1[v29];
  uint64_t v31 = (void *)((char *)a2 + v29);
  uint64_t v33 = *v31;
  uint64_t v32 = v31[1];
  *(void *)unint64_t v30 = v33;
  *((void *)v30 + 1) = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[9];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = sub_254526D90();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
  int v40 = v39(v35, 1, v37);
  int v41 = v39(v36, 1, v37);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v37);
LABEL_18:
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v35, v36, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v38 + 40))(v35, v36, v37);
LABEL_19:
  uint64_t v43 = a3[10];
  int v44 = &a1[v43];
  uint64_t v45 = (char *)a2 + v43;
  int v46 = v39(&a1[v43], 1, v37);
  int v47 = v39(v45, 1, v37);
  if (!v46)
  {
    if (!v47)
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 40))(v44, v45, v37);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v38 + 8))(v44, v37);
    goto LABEL_24;
  }
  if (v47)
  {
LABEL_24:
    uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v44, v45, v37);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v44, 0, 1, v37);
  return a1;
}

uint64_t getEnumTagSinglePayload for DediscoAnalytics(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2544AE6C0);
}

uint64_t sub_2544AE6C0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
      int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for DediscoAnalytics(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2544AE808);
}

void *sub_2544AE808(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 24);
      int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 36);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_2544AE93C()
{
  sub_2544AAE30(319, (unint64_t *)&qword_269DF3720, (void (*)(uint64_t))type metadata accessor for LedgerState);
  if (v0 <= 0x3F)
  {
    sub_2544AAE30(319, qword_26B266BE8, MEMORY[0x263F07490]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for DediscoAnalytics.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2544AEB24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DediscoAnalytics.CodingKeys()
{
  return &type metadata for DediscoAnalytics.CodingKeys;
}

unint64_t sub_2544AEB60()
{
  unint64_t result = qword_269DF37F8;
  if (!qword_269DF37F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF37F8);
  }
  return result;
}

unint64_t sub_2544AEBB8()
{
  unint64_t result = qword_269DF3800;
  if (!qword_269DF3800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3800);
  }
  return result;
}

unint64_t sub_2544AEC10()
{
  unint64_t result = qword_269DF3808;
  if (!qword_269DF3808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3808);
  }
  return result;
}

uint64_t sub_2544AEC64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LedgerState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2544AECC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2544AED30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t MLHostAsset.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC20LighthouseBackground11MLHostAsset_url;
  uint64_t v4 = sub_254526C60();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

id MLHostAsset.autoAsset.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC20LighthouseBackground11MLHostAsset_autoAsset);
}

uint64_t MLHostAsset.deinit()
{
  uint64_t v1 = v0;
  if (qword_26B267240 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_254526E00();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B267340);
  swift_retain_n();
  uint64_t v3 = sub_254526DE0();
  os_log_type_t v4 = sub_254527410();
  uint64_t v5 = &unk_269E07000;
  if (os_log_type_enabled(v3, v4))
  {
    unsigned int v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v27 = v7;
    *(_DWORD *)unsigned int v6 = 136315138;
    id v8 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                               + OBJC_IVAR____TtC20LighthouseBackground11MLHostAsset_autoAsset), sel_description));
    uint64_t v9 = sub_254526FE0();
    unint64_t v11 = v10;

    uint64_t v5 = (void *)&unk_269E07000;
    sub_254498B68(v9, v11, &v27);
    sub_254527500();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_254486000, v3, v4, "MAAutoAsset endLockUsage: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A27C9E0](v7, -1, -1);
    MEMORY[0x25A27C9E0](v6, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v12 = v5[385];
  uint64_t v13 = *(void **)(v0 + v12);
  uint64_t v14 = (void *)sub_254526FD0();
  id v15 = objc_msgSend(v13, sel_endLockUsageSync_, v14);

  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = sub_254526DE0();
    os_log_type_t v18 = sub_254527420();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = v12;
      unint64_t v20 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 138412290;
      uint64_t v16 = v16;
      uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v27 = v21;
      sub_254527500();
      *unint64_t v20 = v21;

      _os_log_impl(&dword_254486000, v17, v18, "MAAutoAsset endLockUsage error: %@", v19, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      swift_arrayDestroy();
      int v22 = v20;
      uint64_t v12 = v26;
      MEMORY[0x25A27C9E0](v22, -1, -1);
      MEMORY[0x25A27C9E0](v19, -1, -1);
    }
    else
    {

      uint64_t v17 = v16;
    }
  }
  uint64_t v23 = v1 + OBJC_IVAR____TtC20LighthouseBackground11MLHostAsset_url;
  uint64_t v24 = sub_254526C60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);

  swift_bridgeObjectRelease();
  return v1;
}

uint64_t MLHostAsset.__deallocating_deinit()
{
  MLHostAsset.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t sub_2544AF224()
{
  return sub_2544AF23C((SEL *)&selRef_assetType);
}

uint64_t sub_2544AF230()
{
  return sub_2544AF23C((SEL *)&selRef_assetSpecifier);
}

uint64_t sub_2544AF23C(SEL *a1)
{
  id v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC20LighthouseBackground11MLHostAsset_autoAsset), sel_assetSelector));
  id v4 = [v3 *a1];

  uint64_t v5 = sub_254526FE0();
  return v5;
}

void sub_2544AF2BC(uint64_t a1)
{
}

id static MLHostAsset.defaultInterestPolicy.getter()
{
  return sub_2544AF38C(&qword_269DF2F00, (void **)&qword_269DF3810);
}

void sub_2544AF2EC(uint64_t a1)
{
}

void sub_2544AF2F8(uint64_t a1, void *a2)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F55970]), sel_init);
  objc_msgSend(v3, sel_setInterestAcrossTermination_, 1);
  objc_msgSend(v3, sel_setPreventGarbageCollectionSecs_, 604800);

  *a2 = v3;
}

id static MLHostAsset.defaultUsagePolicy.getter()
{
  return sub_2544AF38C(&qword_269DF2F08, (void **)&qword_269DF3818);
}

id sub_2544AF38C(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  id v3 = *a2;

  return v3;
}

unint64_t sub_2544AF3D8(char a1)
{
  unint64_t result = 0xD000000000000014;
  if (a1)
  {
    if (a1 == 1) {
      return 0xD00000000000001ELL;
    }
    else {
      return 0xD000000000000023;
    }
  }
  return result;
}

uint64_t sub_2544AF438(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_254490B4C(*a1, *a2);
}

uint64_t sub_2544AF444()
{
  return sub_25451A2E0();
}

uint64_t sub_2544AF44C()
{
  return sub_25451B03C();
}

uint64_t sub_2544AF454()
{
  return sub_25451B84C();
}

uint64_t sub_2544AF45C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2544B0CD8();
  *a1 = result;
  return result;
}

unint64_t sub_2544AF48C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_2544AF3D8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t static MLHostAsset.isRemoteAssetAvailable(context:assetType:assetSpecifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269DF3830 + dword_269DF3830);
  unint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *unint64_t v11 = v5;
  v11[1] = sub_2544AF590;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t sub_2544AF590(char a1)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  unint64_t v4 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (v1) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = a1 & 1;
  }
  return v4(v5);
}

uint64_t sub_2544AF698(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3870);
    uint64_t v5 = swift_allocError();
    *unsigned int v6 = a3;
    id v7 = a3;
    return MEMORY[0x270FA2410](v3, v5);
  }
  else
  {
    **(void **)(*(void *)(v3 + 64) + 40) = a2;
    id v8 = a2;
    return MEMORY[0x270FA2408](v3);
  }
}

void sub_2544AF750(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3890);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_2544B39CC;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2544AFB18;
  aBlock[3] = &block_descriptor_16;
  uint64_t v9 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_currentStatus_, v9);
  _Block_release(v9);
}

void sub_2544AF8F8(void *a1, id a2)
{
  if (a2)
  {
    id v3 = a2;
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_254526E00();
    __swift_project_value_buffer(v4, (uint64_t)qword_26B267340);
    id v5 = a2;
    id v6 = a2;
    unint64_t v7 = sub_254526DE0();
    os_log_type_t v8 = sub_254527420();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      unint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138412290;
      id v11 = a2;
      uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
      sub_254527500();
      *unint64_t v10 = v13;

      _os_log_impl(&dword_254486000, v7, v8, "MAAutoAsset currentStatus failed: %@", v9, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      swift_arrayDestroy();
      MEMORY[0x25A27C9E0](v10, -1, -1);
      MEMORY[0x25A27C9E0](v9, -1, -1);
    }
    else
    {
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3890);
    sub_2545272E0();
  }
  else
  {
    if (a1) {
      id v12 = a1;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3890);
    sub_2545272E0();
  }
}

void sub_2544AFB18(uint64_t a1, void *a2, void *a3)
{
  id v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t static MLHostAsset.getRemoteAsset(context:assetType:assetSpecifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269DF3840 + dword_269DF3840);
  id v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *id v11 = v5;
  v11[1] = sub_2544AFC7C;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t sub_2544AFC7C(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  id v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t static MLHostAsset.getRemoteAsset(assetType:assetSpecifier:)()
{
  return sub_2544B353C(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 0);
}

void sub_2544AFDB0(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3860);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v30 = v6;
  id v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B267240 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_254526E00();
  __swift_project_value_buffer(v8, (uint64_t)qword_26B267340);
  id v9 = a2;
  unint64_t v10 = sub_254526DE0();
  os_log_type_t v11 = sub_254527400();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v28 = a1;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v29 = v4;
    uint64_t v13 = (uint8_t *)v12;
    uint64_t v26 = swift_slowAlloc();
    aBlock[0] = v26;
    *(_DWORD *)uint64_t v13 = 136315138;
    v25[1] = v13 + 4;
    id v14 = objc_msgSend(v9, sel_description);
    uint64_t v15 = sub_254526FE0();
    uint64_t v27 = v7;
    unint64_t v17 = v16;

    a1 = v28;
    uint64_t v31 = sub_254498B68(v15, v17, aBlock);
    sub_254527500();

    id v7 = v27;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_254486000, v10, v11, "MAAutoAsset lockContent: %s", v13, 0xCu);
    uint64_t v18 = v26;
    swift_arrayDestroy();
    MEMORY[0x25A27C9E0](v18, -1, -1);
    uint64_t v19 = v13;
    uint64_t v4 = v29;
    MEMORY[0x25A27C9E0](v19, -1, -1);
  }
  else
  {
  }
  unint64_t v20 = (void *)sub_254526FD0();
  if (qword_269DF2F08 != -1) {
    swift_once();
  }
  uint64_t v21 = qword_269DF3818;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  unint64_t v22 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v23 + v22, v7, v4);
  aBlock[4] = (uint64_t)sub_2544B3784;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_2544B0B54;
  aBlock[3] = (uint64_t)&block_descriptor_0;
  uint64_t v24 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v9, sel_lockContent_withUsagePolicy_withTimeout_completion_, v20, v21, 0, v24);

  _Block_release(v24);
}

void sub_2544B0184(uint64_t a1, char a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t v81 = a6;
  uint64_t v10 = sub_254526E00();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_254526C60();
  uint64_t v82 = *(void *)(v14 - 8);
  uint64_t v83 = v14;
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  unint64_t v17 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v72 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2671B8);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v23 = (char *)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  unint64_t v80 = (char *)&v72 - v24;
  if (a5)
  {
    id v25 = a5;
    if (qword_26B267240 != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v10, (uint64_t)qword_26B267340);
    id v26 = a5;
    id v27 = a5;
    uint64_t v28 = sub_254526DE0();
    os_log_type_t v29 = sub_254527420();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 138412290;
      id v32 = a5;
      uint64_t v33 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v85 = v33;
      sub_254527500();
      *uint64_t v31 = v33;

      _os_log_impl(&dword_254486000, v28, v29, "MAAutoAsset lockContent failed: %@", v30, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      swift_arrayDestroy();
      MEMORY[0x25A27C9E0](v31, -1, -1);
      MEMORY[0x25A27C9E0](v30, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v82 + 56))(v80, 1, 1, v83);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3860);
    sub_2545272E0();

    return;
  }
  uint64_t v78 = v13;
  uint64_t v79 = v11;
  if ((a2 & 1) == 0)
  {
    uint64_t v39 = v82;
    uint64_t v40 = v83;
    if (qword_26B267240 != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v10, (uint64_t)qword_26B267340);
    int v41 = sub_254526DE0();
    os_log_type_t v42 = sub_254527420();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v43 = 0;
      _os_log_impl(&dword_254486000, v41, v42, "MAAutoAsset lockContent failed: locked false", v43, 2u);
      MEMORY[0x25A27C9E0](v43, -1, -1);
    }

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v80, 1, 1, v40);
    goto LABEL_20;
  }
  sub_2544B36B0(a3, (uint64_t)v23);
  uint64_t v34 = v82;
  uint64_t v35 = v83;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v23, 1, v83) == 1)
  {
    sub_2544B3718((uint64_t)v23);
    if (qword_26B267240 != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v10, (uint64_t)qword_26B267340);
    uint64_t v36 = sub_254526DE0();
    os_log_type_t v37 = sub_254527420();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v38 = 0;
      _os_log_impl(&dword_254486000, v36, v37, "MAAutoAsset lockContent failed: url nil", v38, 2u);
      MEMORY[0x25A27C9E0](v38, -1, -1);
    }

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v80, 1, 1, v35);
LABEL_20:
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3860);
    sub_2545272E0();
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v19, v23, v35);
  if (qword_26B267240 != -1) {
    swift_once();
  }
  int v44 = __swift_project_value_buffer(v10, (uint64_t)qword_26B267340);
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
  uint64_t v74 = v34 + 16;
  unint64_t v75 = v19;
  char v76 = v45;
  v45(v17, v19, v35);
  uint64_t v77 = v44;
  int v46 = sub_254526DE0();
  os_log_type_t v47 = sub_254527400();
  BOOL v48 = os_log_type_enabled(v46, v47);
  uint64_t v49 = v34;
  uint64_t v50 = v78;
  if (v48)
  {
    uint64_t v73 = (uint64_t)a4;
    uint64_t v51 = v46;
    BOOL v52 = (uint8_t *)swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    uint64_t v85 = v53;
    *(_DWORD *)BOOL v52 = 136315138;
    uint64_t v72 = v52 + 4;
    sub_2544B3840();
    uint64_t v54 = sub_2545279B0();
    uint64_t v84 = sub_254498B68(v54, v55, &v85);
    sub_254527500();
    swift_bridgeObjectRelease();
    uint64_t v56 = *(void (**)(char *, uint64_t))(v49 + 8);
    v56(v17, v35);
    _os_log_impl(&dword_254486000, v51, v47, "MAAutoAsset url: %s", v52, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A27C9E0](v53, -1, -1);
    uint64_t v57 = v52;
    uint64_t v50 = v78;
    MEMORY[0x25A27C9E0](v57, -1, -1);

    a4 = (void *)v73;
  }
  else
  {
    uint64_t v56 = *(void (**)(char *, uint64_t))(v49 + 8);
    v56(v17, v35);
  }
  uint64_t v58 = v79;
  (*(void (**)(char *, NSObject *, uint64_t))(v79 + 16))(v50, v77, v10);
  id v59 = a4;
  uint64_t v60 = sub_254526DE0();
  os_log_type_t v61 = sub_254527400();
  uint64_t v77 = v60;
  if (os_log_type_enabled(v60, v61))
  {
    uint64_t v62 = (uint8_t *)swift_slowAlloc();
    uint64_t v73 = swift_slowAlloc();
    uint64_t v85 = v73;
    *(_DWORD *)uint64_t v62 = 136315138;
    if (a4)
    {
      id v63 = objc_msgSend(v59, sel_description);
      uint64_t v64 = sub_254526FE0();
      unint64_t v66 = v65;
    }
    else
    {
      unint64_t v66 = 0xE300000000000000;
      uint64_t v64 = 4271950;
    }
    uint64_t v84 = sub_254498B68(v64, v66, &v85);
    sub_254527500();

    swift_bridgeObjectRelease();
    unint64_t v67 = v77;
    _os_log_impl(&dword_254486000, v77, v61, "MAAutoAsset newerInProgress: %s", v62, 0xCu);
    uint64_t v68 = v73;
    swift_arrayDestroy();
    MEMORY[0x25A27C9E0](v68, -1, -1);
    MEMORY[0x25A27C9E0](v62, -1, -1);

    (*(void (**)(char *, uint64_t))(v79 + 8))(v50, v10);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v58 + 8))(v50, v10);
  }
  uint64_t v69 = v80;
  uint64_t v70 = v75;
  uint64_t v71 = v83;
  v76(v80, v75, v83);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v69, 0, 1, v71);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3860);
  sub_2545272E0();
  v56(v70, v71);
}

uint64_t sub_2544B0B54(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2671B8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void (**)(id, uint64_t, char *, void *, void *))(a1 + 32);
  if (a4)
  {
    sub_254526C20();
    uint64_t v16 = sub_254526C60();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v14, 0, 1, v16);
  }
  else
  {
    uint64_t v17 = sub_254526C60();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v14, 1, 1, v17);
  }
  swift_retain();
  id v18 = a2;
  id v19 = a5;
  id v20 = a6;
  v15(v18, a3, v14, a5, a6);

  swift_release();
  return sub_2544B3718((uint64_t)v14);
}

uint64_t sub_2544B0CD8()
{
  unint64_t v0 = sub_254527790();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_2544B0D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[9] = a4;
  v5[10] = a5;
  v5[7] = a2;
  v5[8] = a3;
  v5[6] = a1;
  uint64_t v6 = sub_254526C60();
  v5[11] = v6;
  v5[12] = *(void *)(v6 - 8);
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  v5[15] = __swift_instantiateConcreteTypeFromMangledName(qword_26B2671B8);
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2544B0E6C, 0, 0);
}

uint64_t sub_2544B0E6C()
{
  uint64_t v40 = v0;
  v39[1] = *MEMORY[0x263EF8340];
  uint64_t v1 = v0 + 2;
  if (qword_26B267240 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_254526E00();
  v0[18] = __swift_project_value_buffer(v2, (uint64_t)qword_26B267340);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v3 = sub_254526DE0();
  os_log_type_t v4 = sub_254527400();
  BOOL v5 = os_log_type_enabled(v3, v4);
  unint64_t v6 = v0[10];
  if (v5)
  {
    unint64_t v7 = v0[8];
    uint64_t v37 = v0[9];
    uint64_t v8 = v0[7];
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v39[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    swift_bridgeObjectRetain();
    v0[4] = sub_254498B68(v8, v7, v39);
    sub_254527500();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[5] = sub_254498B68(v37, v6, v39);
    sub_254527500();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_254486000, v3, v4, "Querying MAAutoAsset for %s: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    uint64_t v11 = v10;
    uint64_t v1 = v0 + 2;
    MEMORY[0x25A27C9E0](v11, -1, -1);
    MEMORY[0x25A27C9E0](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  id v12 = objc_allocWithZone(MEMORY[0x263F55978]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = (void *)sub_254526FD0();
  swift_bridgeObjectRelease();
  uint64_t v14 = (void *)sub_254526FD0();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v12, sel_initForAssetType_withAssetSpecifier_, v13, v14);
  v0[19] = v15;

  v0[2] = 0;
  id v16 = objc_allocWithZone(MEMORY[0x263F55960]);
  uint64_t v17 = v15;
  id v18 = (void *)sub_254526FD0();
  id v19 = objc_msgSend(v16, sel_initForClientName_selectingAsset_error_, v18, v17, v1);
  v0[20] = v19;

  id v20 = (void *)v0[2];
  if (v20)
  {
    uint64_t v21 = v20;
    uint64_t v22 = sub_254526DE0();
    os_log_type_t v23 = sub_254527420();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = v19;
      id v25 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 138412290;
      v0[3] = v21;
      id v26 = v21;
      sub_254527500();
      *id v25 = v20;

      _os_log_impl(&dword_254486000, v22, v23, "MAAutoAsset failed: %@", v24, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      id v27 = v25;
      uint64_t v28 = v38;
      swift_arrayDestroy();
      MEMORY[0x25A27C9E0](v27, -1, -1);
      MEMORY[0x25A27C9E0](v24, -1, -1);
      os_log_type_t v29 = v22;
      uint64_t v22 = v17;
    }
    else
    {

      os_log_type_t v29 = v21;
      id v26 = v19;
      uint64_t v28 = v17;
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v35 = (uint64_t (*)(void))v0[1];
    return v35(0);
  }
  else
  {
    uint64_t v30 = v0[6];
    uint64_t v31 = swift_task_alloc();
    v0[21] = v31;
    *(void *)(v31 + 16) = v19;
    *(void *)(v31 + 24) = v30;
    id v32 = (void *)swift_task_alloc();
    v0[22] = v32;
    *id v32 = v0;
    v32[1] = sub_2544B1448;
    uint64_t v33 = v0[17];
    uint64_t v34 = v0[15];
    return MEMORY[0x270FA2318](v33, 0, 0, 0xD000000000000031, 0x8000000254533360, sub_2544B36A8, v31, v34);
  }
}

uint64_t sub_2544B1448()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2544B158C, 0, 0);
}

uint64_t sub_2544B158C()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 96);
  sub_2544B36B0(*(void *)(v0 + 136), v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_2544B3718(*(void *)(v0 + 128));
    os_log_type_t v4 = sub_254526DE0();
    os_log_type_t v5 = sub_254527420();
    if (os_log_type_enabled(v4, v5))
    {
      unint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v6 = 0;
      _os_log_impl(&dword_254486000, v4, v5, "MAAutoAsset lockContent failed: url nil", v6, 2u);
      MEMORY[0x25A27C9E0](v6, -1, -1);
    }
    unint64_t v7 = *(void **)(v0 + 160);
    uint64_t v8 = *(void *)(v0 + 136);

    sub_2544B3718(v8);
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 160);
    uint64_t v11 = *(void *)(v0 + 128);
    uint64_t v12 = *(void *)(v0 + 136);
    uint64_t v14 = *(void *)(v0 + 104);
    uint64_t v13 = *(void *)(v0 + 112);
    uint64_t v15 = *(void *)(v0 + 88);
    uint64_t v16 = *(void *)(v0 + 96);
    uint64_t v17 = *(void *)(v0 + 48);

    sub_2544B3718(v12);
    id v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32);
    v18(v13, v11, v15);
    v18(v14, v13, v15);
    uint64_t v20 = *(void *)(v17 + OBJC_IVAR____TtC20LighthouseBackground22MLHostExtensionContext_taskName);
    uint64_t v19 = *(void *)(v17 + OBJC_IVAR____TtC20LighthouseBackground22MLHostExtensionContext_taskName + 8);
    type metadata accessor for MLHostAsset();
    uint64_t v9 = swift_allocObject();
    v18(v9 + OBJC_IVAR____TtC20LighthouseBackground11MLHostAsset_url, v14, v15);
    *(void *)(v9 + OBJC_IVAR____TtC20LighthouseBackground11MLHostAsset_autoAsset) = v10;
    uint64_t v21 = (void *)(v9 + OBJC_IVAR____TtC20LighthouseBackground11MLHostAsset_clientName);
    *uint64_t v21 = v20;
    v21[1] = v19;
    swift_bridgeObjectRetain();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v22(v9);
}

uint64_t sub_2544B17E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[41] = a4;
  v5[42] = a5;
  v5[39] = a2;
  v5[40] = a3;
  v5[38] = a1;
  return MEMORY[0x270FA2498](sub_2544B1880, 0, 0);
}

uint64_t sub_2544B1880()
{
  uint64_t v45 = v0;
  v44[1] = *MEMORY[0x263EF8340];
  if (qword_26B267240 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_254526E00();
  v0[43] = __swift_project_value_buffer(v1, (uint64_t)qword_26B267340);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_254526DE0();
  os_log_type_t v3 = sub_254527400();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[42];
  if (v4)
  {
    unint64_t v6 = v0[40];
    uint64_t v40 = v0[41];
    uint64_t v7 = v0[39];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    v44[0] = v42;
    *(_DWORD *)uint64_t v8 = 136315394;
    swift_bridgeObjectRetain();
    v0[36] = sub_254498B68(v7, v6, v44);
    sub_254527500();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[37] = sub_254498B68(v40, v5, v44);
    sub_254527500();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_254486000, v2, v3, "Querying MAAutoAsset for %s: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A27C9E0](v42, -1, -1);
    MEMORY[0x25A27C9E0](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v9 = (void **)(v0 + 33);
  id v10 = objc_allocWithZone(MEMORY[0x263F55978]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = (void *)sub_254526FD0();
  swift_bridgeObjectRelease();
  uint64_t v12 = (void *)sub_254526FD0();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v10, sel_initForAssetType_withAssetSpecifier_, v11, v12);
  v0[44] = v13;

  v0[19] = 0;
  id v14 = objc_allocWithZone(MEMORY[0x263F55960]);
  swift_bridgeObjectRetain();
  id v15 = v13;
  uint64_t v16 = (void *)sub_254526FD0();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(v14, sel_initForClientName_selectingAsset_error_, v16, v15, v0 + 19);
  v0[45] = v17;

  id v18 = (void *)v0[19];
  v0[33] = v18;
  if (v18)
  {
    id v19 = v18;
    uint64_t v20 = sub_254526DE0();
    os_log_type_t v21 = sub_254527420();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v23 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 138412290;
      swift_beginAccess();
      uint64_t v24 = *v9;
      if (*v9)
      {
        v0[35] = v24;
        id v25 = v24;
      }
      else
      {
        v0[34] = 0;
      }
      sub_254527500();
      *os_log_type_t v23 = v24;
      _os_log_impl(&dword_254486000, v20, v21, "MAAutoAsset failed: %@", v22, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      swift_arrayDestroy();
      MEMORY[0x25A27C9E0](v23, -1, -1);
      MEMORY[0x25A27C9E0](v22, -1, -1);
    }

    sub_2544B38D8();
    swift_allocError();
    *uint64_t v36 = 0;
    swift_willThrow();

    uint64_t v37 = (void *)v0[33];
    uint64_t v38 = (uint64_t (*)(void))v0[1];
    return v38(0);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    id v26 = sub_254526DE0();
    os_log_type_t v27 = sub_254527400();
    BOOL v28 = os_log_type_enabled(v26, v27);
    unint64_t v29 = v0[42];
    if (v28)
    {
      uint64_t v41 = v0[41];
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      id v43 = v17;
      uint64_t v31 = swift_slowAlloc();
      v44[0] = v31;
      *(_DWORD *)uint64_t v30 = 136315138;
      swift_bridgeObjectRetain();
      v0[32] = sub_254498B68(v41, v29, v44);
      sub_254527500();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_254486000, v26, v27, "MAAutoAsset expressing interest for assetSpecifier: %s", v30, 0xCu);
      swift_arrayDestroy();
      uint64_t v32 = v31;
      id v17 = v43;
      MEMORY[0x25A27C9E0](v32, -1, -1);
      MEMORY[0x25A27C9E0](v30, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v33 = sub_254526FD0();
    v0[46] = v33;
    if (qword_269DF2F00 != -1) {
      swift_once();
    }
    uint64_t v34 = qword_269DF3810;
    v0[2] = v0;
    v0[7] = v0 + 18;
    v0[3] = sub_2544B1FF8;
    uint64_t v35 = swift_continuation_init();
    v0[10] = MEMORY[0x263EF8330];
    v0[11] = 0x40000000;
    v0[12] = sub_2544AF698;
    v0[13] = &block_descriptor_7;
    v0[14] = v35;
    objc_msgSend(v17, sel_interestInContent_withInterestPolicy_completion_, v33, v34, v0 + 10);
    return MEMORY[0x270FA23F0](v0 + 2);
  }
}

uint64_t sub_2544B1FF8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 376) = v1;
  if (v1) {
    uint64_t v2 = sub_2544B32A8;
  }
  else {
    uint64_t v2 = sub_2544B2134;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2544B2134()
{
  uint64_t v1 = *(void *)(v0 + 360);
  uint64_t v2 = *(void **)(v0 + 368);

  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 384) = v3;
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 392) = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3888);
  *uint64_t v4 = v0;
  v4[1] = sub_2544B226C;
  return MEMORY[0x270FA2318](v0 + 184, 0, 0, 0xD000000000000039, 0x8000000254533420, sub_2544B392C, v3, v5);
}

uint64_t sub_2544B226C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2544B23B0, 0, 0);
}

uint64_t sub_2544B23B0()
{
  uint64_t v77 = v0;
  os_log_t v1 = v0;
  v76[1] = *MEMORY[0x263EF8340];
  isa = v0[23].isa;
  v0[50].isa = isa;
  if (!isa)
  {
    uint64_t v9 = sub_254526DE0();
    uint64_t v10 = sub_254527420();
    if (os_log_type_enabled(v9, (os_log_type_t)v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_254486000, v9, (os_log_type_t)v10, "MAAutoAsset failed at calling currentStatus.", v11, 2u);
      MEMORY[0x25A27C9E0](v11, -1, -1);
    }
    Class v13 = v0[44].isa;
    Class v12 = v0[45].isa;

    sub_2544B38D8();
    swift_allocError();
    *id v14 = 2;
    swift_willThrow();

    Class v15 = v0[33].isa;
    uint64_t v16 = (uint64_t (*)(uint64_t))v0[1].isa;
    uint64_t v17 = 0;
    goto LABEL_36;
  }
  unint64_t v75 = isa;
  uint64_t v3 = sub_254526DE0();
  os_log_type_t v4 = sub_254527400();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    os_log_t log = v1;
    unint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    log[31].isa = v75;
    uint64_t v7 = v75;
    sub_254527500();
    *unint64_t v6 = isa;

    _os_log_impl(&dword_254486000, v3, v4, "MAAutoAsset status: %@", v5, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
    swift_arrayDestroy();
    uint64_t v8 = v6;
    os_log_t v1 = log;
    MEMORY[0x25A27C9E0](v8, -1, -1);
    MEMORY[0x25A27C9E0](v5, -1, -1);
  }
  else
  {
  }
  p_isa = (id *)&v1[27].isa;

  id v19 = [(objc_class *)v75 availableForUseError];
  if (v19)
  {
    uint64_t v20 = (id *)&v1[28].isa;
    id *p_isa = v19;
    os_log_type_t v21 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3870);
    sub_2544B3898();
    if (swift_dynamicCast())
    {
      id v22 = *v20;
      id v23 = objc_msgSend(*v20, sel_domain);
      uint64_t v24 = sub_254526FE0();
      uint64_t v26 = v25;

      if (v24 == 0xD000000000000024 && v26 == 0x8000000254533460)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v33 = sub_2545279E0();
        swift_bridgeObjectRelease();
        if ((v33 & 1) == 0)
        {

LABEL_27:
          goto LABEL_28;
        }
      }
      if (((unint64_t)objc_msgSend(v22, sel_code) | 4) == 0x183D)
      {
        uint64_t v34 = sub_254526DE0();
        os_log_type_t v35 = sub_254527400();
        if (os_log_type_enabled(v34, v35))
        {
          Class v36 = v1[44].isa;
          uint64_t v37 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v37 = 0;
          _os_log_impl(&dword_254486000, v34, v35, "Found an error that we can proceed through, continuing...", v37, 2u);
          MEMORY[0x25A27C9E0](v37, -1, -1);

          uint64_t v38 = 45;
        }
        else
        {

          uint64_t v34 = v1[45].isa;
          uint64_t v38 = 44;
        }

        Class v44 = v1[33].isa;
LABEL_35:

        uint64_t v16 = (uint64_t (*)(uint64_t))v1[1].isa;
        uint64_t v17 = 1;
LABEL_36:
        return v16(v17);
      }
      uint64_t v39 = v22;
      uint64_t v40 = sub_254526DE0();
      os_log_type_t v41 = sub_254527420();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = (uint8_t *)swift_slowAlloc();
        uint64_t v70 = (void *)swift_slowAlloc();
        bufa = v42;
        *(_DWORD *)uint64_t v42 = 138412290;
        v1[30].isa = (Class)v39;
        id v43 = v39;
        p_isa = (id *)&v1[27].isa;
        sub_254527500();
        *uint64_t v70 = v39;

        uint64_t v39 = v40;
        _os_log_impl(&dword_254486000, v40, v41, "Found a real error, continuing: %@", bufa, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
        swift_arrayDestroy();
        MEMORY[0x25A27C9E0](v70, -1, -1);
        MEMORY[0x25A27C9E0](bufa, -1, -1);
      }
      else
      {

        id v43 = v39;
        os_log_type_t v21 = v40;
      }

      goto LABEL_27;
    }

    os_log_type_t v27 = v21;
    BOOL v28 = sub_254526DE0();
    os_log_type_t v29 = sub_254527420();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      buf = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 138412290;
      uint64_t v31 = v27;
      uint64_t v32 = _swift_stdlib_bridgeErrorToNSError();
      v1[29].isa = (Class)v32;
      sub_254527500();
      *(void *)buf = v32;

      _os_log_impl(&dword_254486000, v28, v29, "Found an error which couldn't be cast to NSError: %@", v30, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      swift_arrayDestroy();
      MEMORY[0x25A27C9E0](buf, -1, -1);
      MEMORY[0x25A27C9E0](v30, -1, -1);
    }
    else
    {
    }
  }
LABEL_28:
  id v45 = [(objc_class *)v75 availableForUseAttributes];
  if (v45)
  {
    uint64_t v46 = v45;
    sub_254526ED0();

    swift_bridgeObjectRetain();
    os_log_type_t v47 = sub_254526DE0();
    os_log_type_t v48 = sub_254527400();
    BOOL v49 = os_log_type_enabled(v47, v48);
    Class v50 = v1[45].isa;
    if (v49)
    {
      bufb = (uint8_t *)v1[44].isa;
      uint64_t v51 = (uint8_t *)swift_slowAlloc();
      uint64_t v52 = swift_slowAlloc();
      v76[0] = v52;
      *(_DWORD *)uint64_t v51 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v53 = sub_254526EE0();
      unint64_t v55 = v54;
      swift_bridgeObjectRelease();
      v1[26].isa = (Class)sub_254498B68(v53, v55, v76);
      sub_254527500();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_254486000, v47, v48, "MAAutoAsset available: %s", v51, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A27C9E0](v52, -1, -1);
      MEMORY[0x25A27C9E0](v51, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    Class v44 = v1[33].isa;
    goto LABEL_35;
  }
  uint64_t v56 = v75;
  uint64_t v57 = sub_254526DE0();
  os_log_type_t v58 = sub_254527400();
  if (os_log_type_enabled(v57, v58))
  {
    id v59 = (uint8_t *)swift_slowAlloc();
    uint64_t v60 = (void *)swift_slowAlloc();
    *(_DWORD *)id v59 = 138412290;
    v1[25].isa = v56;
    os_log_type_t v61 = v56;
    sub_254527500();
    *uint64_t v60 = isa;

    _os_log_impl(&dword_254486000, v57, v58, "MAAutoAsset not available on the device: %@", v59, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
    swift_arrayDestroy();
    MEMORY[0x25A27C9E0](v60, -1, -1);
    MEMORY[0x25A27C9E0](v59, -1, -1);
  }
  else
  {
  }
  uint64_t v63 = dword_269DF3840;
  uint64_t v64 = (objc_class *)swift_task_alloc();
  v1[51].isa = v64;
  *(void *)uint64_t v64 = v1;
  *((void *)v64 + 1) = sub_2544B2E88;
  uint64_t v65 = (uint64_t)v1[41].isa;
  uint64_t v66 = (uint64_t)v1[42].isa;
  uint64_t v67 = (uint64_t)v1[39].isa;
  uint64_t v68 = (uint64_t)v1[40].isa;
  uint64_t v69 = (uint64_t)v1[38].isa;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269DF3840 + v63))(v69, v67, v68, v65, v66);
}

uint64_t sub_2544B2E88(uint64_t a1)
{
  *(void *)(*(void *)v1 + 416) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2544B2FB4, 0, 0);
}

uint64_t sub_2544B2FB4()
{
  uint64_t v24 = v0;
  v23[1] = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void *)(v0 + 416);
  if (v1)
  {
    swift_retain_n();
    uint64_t v2 = sub_254526DE0();
    os_log_type_t v3 = sub_254527400();
    BOOL v4 = os_log_type_enabled(v2, v3);
    uint64_t v5 = *(void **)(v0 + 400);
    unint64_t v6 = *(void **)(v0 + 360);
    if (v4)
    {
      id v22 = *(void **)(v0 + 352);
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v21 = v6;
      uint64_t v8 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315138;
      v23[0] = v8;
      sub_254526C60();
      sub_2544B3840();
      uint64_t v9 = sub_2545279B0();
      *(void *)(v0 + 192) = sub_254498B68(v9, v10, v23);
      sub_254527500();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_254486000, v2, v3, "MAAutoAsset available on the filesystem: %s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A27C9E0](v8, -1, -1);
      MEMORY[0x25A27C9E0](v7, -1, -1);

      swift_release();
      uint64_t v11 = *(void **)(v0 + 264);
      goto LABEL_9;
    }

    swift_release_n();
  }
  else
  {
    Class v12 = sub_254526DE0();
    os_log_type_t v13 = sub_254527400();
    BOOL v14 = os_log_type_enabled(v12, v13);
    Class v15 = *(void **)(v0 + 400);
    uint64_t v16 = *(void **)(v0 + 352);
    uint64_t v17 = *(void **)(v0 + 360);
    if (v14)
    {
      id v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v18 = 0;
      _os_log_impl(&dword_254486000, v12, v13, "MAAutoAsset not available on the device after lock.", v18, 2u);
      MEMORY[0x25A27C9E0](v18, -1, -1);
    }
    else
    {
    }
  }
  uint64_t v11 = *(void **)(v0 + 264);
LABEL_9:

  id v19 = *(uint64_t (**)(BOOL))(v0 + 8);
  return v19(v1 != 0);
}

uint64_t sub_2544B32A8()
{
  uint64_t v1 = *(void **)(v0 + 368);
  uint64_t v2 = *(void **)(v0 + 376);
  swift_willThrow();

  *(void *)(v0 + 160) = v2;
  id v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3870);
  sub_2544B3898();
  if (swift_dynamicCast())
  {

    BOOL v4 = *(id *)(v0 + 168);
    uint64_t v5 = sub_254526DE0();
    os_log_type_t v6 = sub_254527420();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 138412290;
      *(void *)(v0 + 176) = v4;
      uint64_t v9 = v4;
      sub_254527500();
      *uint64_t v8 = v4;

      _os_log_impl(&dword_254486000, v5, v6, "MAAutoAsset interest failed: %@", v7, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      swift_arrayDestroy();
      MEMORY[0x25A27C9E0](v8, -1, -1);
      MEMORY[0x25A27C9E0](v7, -1, -1);
    }
    else
    {

      uint64_t v5 = v4;
    }
    Class v12 = *(void **)(v0 + 352);
    uint64_t v11 = *(void **)(v0 + 360);

    sub_2544B38D8();
    swift_allocError();
    *os_log_type_t v13 = 1;
    swift_willThrow();
  }
  else
  {
    unint64_t v10 = *(void **)(v0 + 360);
  }
  BOOL v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14(0);
}

uint64_t sub_2544B353C(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_2544B354C()
{
  return type metadata accessor for MLHostAsset();
}

uint64_t type metadata accessor for MLHostAsset()
{
  uint64_t result = qword_269DF3850;
  if (!qword_269DF3850) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2544B35A0()
{
  uint64_t result = sub_254526C60();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for MLHostAsset(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MLHostAsset);
}

uint64_t dispatch thunk of MLHostAsset.assetType.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of MLHostAsset.assetSpecifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

void sub_2544B36A8(uint64_t a1)
{
  sub_2544AFDB0(a1, *(void **)(v1 + 16));
}

uint64_t sub_2544B36B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2671B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2544B3718(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2671B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2544B3778()
{
  return objectdestroyTm(&qword_269DF3860);
}

void sub_2544B3784(uint64_t a1, char a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v11 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269DF3860) - 8);
  uint64_t v12 = v5 + ((*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));

  sub_2544B0184(a1, a2, a3, a4, a5, v12);
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

unint64_t sub_2544B3840()
{
  unint64_t result = qword_269DF3868;
  if (!qword_269DF3868)
  {
    sub_254526C60();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3868);
  }
  return result;
}

unint64_t sub_2544B3898()
{
  unint64_t result = qword_269DF3878;
  if (!qword_269DF3878)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269DF3878);
  }
  return result;
}

unint64_t sub_2544B38D8()
{
  unint64_t result = qword_269DF3880;
  if (!qword_269DF3880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3880);
  }
  return result;
}

void sub_2544B392C(uint64_t a1)
{
  sub_2544AF750(a1, *(void **)(v1 + 16));
}

uint64_t sub_2544B3934()
{
  return objectdestroyTm(&qword_269DF3890);
}

uint64_t objectdestroyTm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return MEMORY[0x270FA0238](v1, v6, v7);
}

void sub_2544B39CC(void *a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3890);

  sub_2544AF8F8(a1, a2);
}

uint64_t getEnumTagSinglePayload for TaskRequestDevice(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MLHostAssetError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2544B3BACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MLHostAssetError()
{
  return &type metadata for MLHostAssetError;
}

unint64_t sub_2544B3BE8()
{
  unint64_t result = qword_269DF3898;
  if (!qword_269DF3898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3898);
  }
  return result;
}

unint64_t sub_2544B3C40(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_2544B38D8();
  unint64_t result = sub_2544B3C70();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_2544B3C70()
{
  unint64_t result = qword_269DF38A0;
  if (!qword_269DF38A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF38A0);
  }
  return result;
}

uint64_t sub_2544B3CCC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&aBlock - v10;
  sub_2544BD374();
  sub_254493CFC(a2, (uint64_t)v11, &qword_26B266B98);
  sub_254493CFC(a3, (uint64_t)v9, &qword_26B266B98);
  id v12 = sub_254501DDC((uint64_t)v11, (uint64_t)v9, 0, 0, 0);
  os_log_type_t v13 = (void *)sub_254526FD0();
  id v14 = objc_msgSend(a1, sel_publisherWithUseCase_options_, v13, v12);

  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = MEMORY[0x263F8EE78];
  uint64_t v25 = (void (*)(void *))nullsub_1;
  uint64_t v26 = 0;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v22 = 1107296256;
  id v23 = sub_254501F5C;
  uint64_t v24 = &block_descriptor_1;
  uint64_t v16 = _Block_copy(&aBlock);
  uint64_t v25 = sub_2544BD404;
  uint64_t v26 = v15;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v22 = 1107296256;
  id v23 = sub_2544B4260;
  uint64_t v24 = &block_descriptor_3;
  uint64_t v17 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v18 = objc_msgSend(v14, sel_sinkWithCompletion_receiveInput_, v16, v17);

  _Block_release(v17);
  _Block_release(v16);

  swift_beginAccess();
  uint64_t v19 = *(void *)(v15 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  return v19;
}

void sub_2544B3F84(void *a1, uint64_t a2)
{
  id v4 = objc_msgSend(a1, sel_eventBody);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = (void **)(a2 + 16);
    objc_msgSend(a1, sel_timestamp);
    uint64_t v8 = v7;
    swift_beginAccess();
    uint64_t v9 = *v6;
    id v10 = v5;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v6 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v9 = sub_2544B98C4(0, v9[2] + 1, 1, v9, &qword_269DF3968, &qword_269DF3970);
      *uint64_t v6 = v9;
    }
    unint64_t v13 = v9[2];
    unint64_t v12 = v9[3];
    if (v13 >= v12 >> 1)
    {
      uint64_t v9 = sub_2544B98C4((void *)(v12 > 1), v13 + 1, 1, v9, &qword_269DF3968, &qword_269DF3970);
      *uint64_t v6 = v9;
    }
    v9[2] = v13 + 1;
    id v14 = &v9[2 * v13];
    v14[4] = v8;
    v14[5] = v10;
    swift_endAccess();
  }
  else
  {
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_254526E00();
    __swift_project_value_buffer(v15, (uint64_t)qword_26B267340);
    id v21 = a1;
    uint64_t v16 = sub_254526DE0();
    os_log_type_t v17 = sub_254527410();
    if (os_log_type_enabled(v16, v17))
    {
      id v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = (void *)swift_slowAlloc();
      *(_DWORD *)id v18 = 138412290;
      id v20 = v21;
      sub_254527500();
      *uint64_t v19 = v21;

      _os_log_impl(&dword_254486000, v16, v17, "Invalid event: %@", v18, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      swift_arrayDestroy();
      MEMORY[0x25A27C9E0](v19, -1, -1);
      MEMORY[0x25A27C9E0](v18, -1, -1);
    }
    else
    {
    }
  }
}

void sub_2544B4260(uint64_t a1, void *a2)
{
  int v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void DediscoAnalytics.coreAnalyticsDictionary.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v84 = (uint64_t)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v82 - v5;
  uint64_t v7 = sub_254526D90();
  uint64_t v86 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  id v10 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  unint64_t v12 = (char *)&v82 - v11;
  unint64_t v13 = sub_2544A57CC(MEMORY[0x263F8EE78]);
  uint64_t v14 = *v0;
  uint64_t v15 = *(void *)(*v0 + 16);
  uint64_t v85 = v6;
  if (v15) {
    sub_2544B9B58(0xD000000000000014, 0x80000002545334C0);
  }
  uint64_t v16 = sub_2545273A0();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v87 = v13;
  sub_2544BB534(v16, 0xD000000000000019, 0x80000002545334E0, isUniquelyReferenced_nonNull_native);
  unint64_t v18 = v87;
  swift_bridgeObjectRelease();
  if (*(void *)(v14 + 16)) {
    sub_2544B9B58(0xD000000000000011, 0x8000000254533500);
  }
  uint64_t v19 = sub_2545273A0();
  char v20 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v87 = v18;
  sub_2544BB534(v19, 0xD000000000000016, 0x8000000254533520, v20);
  unint64_t v21 = v87;
  swift_bridgeObjectRelease();
  if (*(void *)(v14 + 16)) {
    sub_2544B9B58(0xD000000000000010, 0x8000000254533540);
  }
  uint64_t v22 = sub_2545273A0();
  char v23 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v87 = v21;
  sub_2544BB534(v22, 0xD000000000000015, 0x8000000254533560, v23);
  unint64_t v24 = v87;
  swift_bridgeObjectRelease();
  if (*(void *)(v14 + 16)) {
    sub_2544B9B58(0x466E776F6E6B6E75, 0xED000064656C6961);
  }
  uint64_t v25 = sub_2545273A0();
  char v26 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v87 = v24;
  sub_2544BB534(v25, 0xD000000000000012, 0x8000000254533580, v26);
  unint64_t v27 = v87;
  swift_bridgeObjectRelease();
  if (*(void *)(v14 + 16)) {
    sub_2544B9B58(0xD000000000000019, 0x80000002545335A0);
  }
  uint64_t v28 = sub_2545273A0();
  char v29 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v87 = v27;
  sub_2544BB534(v28, 0xD00000000000001ELL, 0x80000002545335C0, v29);
  unint64_t v30 = v87;
  swift_bridgeObjectRelease();
  if (*(void *)(v14 + 16)) {
    sub_2544B9B58(0xD000000000000016, 0x80000002545335E0);
  }
  uint64_t v31 = sub_2545273A0();
  char v32 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v87 = v30;
  sub_2544BB534(v31, 0xD00000000000001BLL, 0x8000000254533600, v32);
  unint64_t v33 = v87;
  swift_bridgeObjectRelease();
  if (*(void *)(v14 + 16)) {
    sub_2544B9B58(0xD000000000000016, 0x8000000254533620);
  }
  uint64_t v34 = sub_2545273A0();
  char v35 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v87 = v33;
  sub_2544BB534(v34, 0xD00000000000001BLL, 0x8000000254533640, v35);
  unint64_t v36 = v87;
  swift_bridgeObjectRelease();
  if (*(void *)(v14 + 16)) {
    sub_2544B9B58(0xD000000000000013, 0x8000000254533660);
  }
  uint64_t v37 = sub_2545273A0();
  char v38 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v87 = v36;
  sub_2544BB534(v37, 0xD000000000000018, 0x8000000254533680, v38);
  unint64_t v39 = v87;
  swift_bridgeObjectRelease();
  if (*(void *)(v14 + 16)) {
    sub_2544B9B58(0xD000000000000018, 0x80000002545336A0);
  }
  uint64_t v40 = sub_2545273A0();
  char v41 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v87 = v39;
  sub_2544BB534(v40, 0xD00000000000001DLL, 0x80000002545336C0, v41);
  unint64_t v42 = v87;
  swift_bridgeObjectRelease();
  if (*(void *)(v14 + 16)) {
    sub_2544B9B58(0xD000000000000015, 0x80000002545336E0);
  }
  uint64_t v43 = sub_2545273A0();
  char v44 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v87 = v42;
  sub_2544BB534(v43, 0xD00000000000001ALL, 0x8000000254533700, v44);
  unint64_t v45 = v87;
  swift_bridgeObjectRelease();
  if (*(void *)(v14 + 16)) {
    sub_2544B9B58(0x755364616F6C7075, 0xEF64656465656363);
  }
  uint64_t v46 = sub_2545273A0();
  char v47 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v87 = v45;
  sub_2544BB534(v46, 0xD000000000000014, 0x8000000254533720, v47);
  unint64_t v48 = v87;
  swift_bridgeObjectRelease();
  if (*(void *)(v14 + 16)) {
    sub_2544B9B58(0x614664616F6C7075, 0xEC00000064656C69);
  }
  uint64_t v49 = sub_2545273A0();
  char v50 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v87 = v48;
  sub_2544BB534(v49, 0xD000000000000011, 0x8000000254533740, v50);
  unint64_t v51 = v87;
  swift_bridgeObjectRelease();
  if (*(void *)(v14 + 16)) {
    sub_2544B9B58(0x6574656C706D6F43, 0xE900000000000064);
  }
  uint64_t v52 = sub_2545273A0();
  char v53 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v87 = v51;
  sub_2544BB534(v52, 0xD000000000000012, 0x8000000254533760, v53);
  unint64_t v54 = v87;
  swift_bridgeObjectRelease();
  if (*(void *)(v14 + 16)) {
    sub_2544B9B58(0x64656C696146, 0xE600000000000000);
  }
  uint64_t v55 = v86;
  uint64_t v56 = sub_2545273A0();
  char v57 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v87 = v54;
  sub_2544BB534(v56, 0x736154746E756F63, 0xEF64656C6961466BLL, v57);
  unint64_t v58 = v87;
  swift_bridgeObjectRelease();
  if (*(void *)(v14 + 16)) {
    sub_2544B9B58(0x6465727265666544, 0xE800000000000000);
  }
  uint64_t v59 = sub_2545273A0();
  char v60 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v87 = v58;
  sub_2544BB534(v59, 0xD000000000000011, 0x8000000254533780, v60);
  unint64_t v61 = v87;
  swift_bridgeObjectRelease();
  uint64_t v62 = type metadata accessor for DediscoAnalytics();
  swift_bridgeObjectRetain();
  uint64_t v63 = sub_254526FD0();
  swift_bridgeObjectRelease();
  char v64 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v87 = v61;
  sub_2544BB534(v63, 0x656D614E6B736174, 0xE800000000000000, v64);
  unint64_t v65 = v87;
  swift_bridgeObjectRelease();
  uint64_t v66 = (uint64_t)v85;
  sub_254493CFC((uint64_t)v1 + *(int *)(v62 + 36), (uint64_t)v85, &qword_26B266B98);
  uint64_t v67 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
  if (v67(v66, 1, v7) == 1)
  {
    sub_254498AB8(v66, &qword_26B266B98);
    return;
  }
  uint64_t v83 = v10;
  uint64_t v68 = v66;
  uint64_t v69 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 32);
  v69(v12, v68, v7);
  uint64_t v70 = (uint64_t)v1 + *(int *)(v62 + 40);
  uint64_t v71 = v84;
  sub_254493CFC(v70, v84, &qword_26B266B98);
  if (v67(v71, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v55 + 8))(v12, v7);
    sub_254498AB8(v71, &qword_26B266B98);
    return;
  }
  v69(v83, v71, v7);
  sub_254526D30();
  if ((~*(void *)&v72 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_45;
  }
  if (v72 <= -9.22337204e18)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (v72 >= 9.22337204e18)
  {
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  id v73 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithLongLong_, (uint64_t)v72);
  id v74 = objc_msgSend(v73, sel_stringValue);

  if (!v74)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  char v75 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v87 = v65;
  sub_2544BB534((uint64_t)v74, 0x745374656B637562, 0xEB00000000747261, v75);
  unint64_t v76 = v87;
  swift_bridgeObjectRelease();
  sub_254526D30();
  if ((~*(void *)&v77 & 0x7FF0000000000000) == 0) {
    goto LABEL_47;
  }
  if (v77 <= -9.22337204e18)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  if (v77 >= 9.22337204e18)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  id v78 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithLongLong_, (uint64_t)v77);
  id v79 = objc_msgSend(v78, sel_stringValue);

  if (v79)
  {
    char v80 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v87 = v76;
    sub_2544BB534((uint64_t)v79, 0x6E4574656B637562, 0xE900000000000064, v80);
    swift_bridgeObjectRelease();
    uint64_t v81 = *(void (**)(char *, uint64_t))(v86 + 8);
    v81(v83, v7);
    v81(v12, v7);
    return;
  }
LABEL_51:
  __break(1u);
}

unint64_t getDediscoData(dediscoStream:telemetryRange:)(void *a1, uint64_t a2)
{
  uint64_t v106 = a1;
  uint64_t v93 = type metadata accessor for LedgerState();
  uint64_t v90 = *(void *)(v93 - 8);
  MEMORY[0x270FA5388](v93);
  unint64_t v97 = (uint64_t *)((char *)&v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_254526D90();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v101 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v102 = (char *)&v86 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v105 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v86 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v86 - v15;
  uint64_t v17 = type metadata accessor for TelemetryBucketRange();
  unint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v18(v16, a2 + *(int *)(v17 + 24), v4);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v19(v16, 0, 1, v4);
  uint64_t v20 = *(int *)(v17 + 28);
  uint64_t v21 = v4;
  uint64_t v91 = (void (*)(char *, char *, uint64_t))v18;
  uint64_t v92 = v5 + 16;
  v18(v14, a2 + v20, v4);
  uint64_t v104 = v19;
  v19(v14, 0, 1, v4);
  uint64_t v22 = sub_2544B3CCC(v106, (uint64_t)v16, (uint64_t)v14);
  sub_254498AB8((uint64_t)v14, &qword_26B266B98);
  sub_254498AB8((uint64_t)v16, &qword_26B266B98);
  unint64_t v100 = sub_2544A58E8(MEMORY[0x263F8EE78]);
  uint64_t v23 = *(void *)(v22 + 16);
  uint64_t v94 = v22;
  if (v23)
  {
    uint64_t v103 = (void (**)(void))(v5 + 32);
    unint64_t v98 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    unint64_t v99 = 0;
    uint64_t v95 = (void (**)(char *, uint64_t))(v5 + 8);
    unint64_t v24 = (id *)(v22 + 40);
    uint64_t v25 = &off_2653AD000;
    unint64_t v87 = (unint64_t)"latestValidState";
    uint64_t v96 = v21;
    uint64_t v88 = v5 + 56;
    while (1)
    {
      id v27 = *v24;
      uint64_t v28 = [v27 (SEL)v25[184]];
      if (v28)
      {
        char v29 = v28;
        id v30 = [v28 bmltIdentifiers];
        if (v30)
        {
          uint64_t v31 = v30;
          id v32 = objc_msgSend(v30, sel_trialTaskID);
          if (v32)
          {
            unint64_t v33 = v32;
            uint64_t v34 = sub_254526FE0();
            uint64_t v106 = v35;

            id v36 = objc_msgSend(v27, sel_timestamp);
            if (!v36)
            {
              uint64_t v39 = (uint64_t)v105;
              v104(v105, 1, 1, v21);
LABEL_28:
              swift_bridgeObjectRelease();
              sub_254498AB8(v39, &qword_26B266B98);
              if (qword_26B267240 != -1) {
                swift_once();
              }
              uint64_t v56 = sub_254526E00();
              __swift_project_value_buffer(v56, (uint64_t)qword_26B267340);
              char v57 = sub_254526DE0();
              os_log_type_t v58 = sub_254527410();
              if (os_log_type_enabled(v57, v58))
              {
                uint64_t v59 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v59 = 0;
                _os_log_impl(&dword_254486000, v57, v58, "Dedisco: No timestamp", v59, 2u);
                MEMORY[0x25A27C9E0](v59, -1, -1);
              }
              else
              {
              }
LABEL_39:
              uint64_t v25 = &off_2653AD000;
              goto LABEL_3;
            }
            uint64_t v37 = v36;
            sub_254526D50();

            char v38 = *v103;
            uint64_t v39 = (uint64_t)v105;
            (*v103)();
            v104((char *)v39, 0, 1, v21);
            if ((*v98)(v39, 1, v21) == 1) {
              goto LABEL_28;
            }
            ((void (*)(char *, uint64_t, uint64_t))v38)(v102, v39, v21);
            id v40 = objc_msgSend(v27, sel_event);
            if (!v40)
            {
              swift_bridgeObjectRelease();
              if (qword_26B267240 != -1) {
                swift_once();
              }
              uint64_t v60 = sub_254526E00();
              __swift_project_value_buffer(v60, (uint64_t)qword_26B267340);
              unint64_t v61 = sub_254526DE0();
              os_log_type_t v62 = sub_254527410();
              if (os_log_type_enabled(v61, v62))
              {
                uint64_t v63 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v63 = 0;
                _os_log_impl(&dword_254486000, v61, v62, "Dedisco: No event", v63, 2u);
                MEMORY[0x25A27C9E0](v63, -1, -1);
              }

              (*v95)(v102, v21);
              goto LABEL_39;
            }
            char v41 = v40;
            objc_msgSend(v40, sel_succeeded);
            unsigned int v42 = objc_msgSend(v41, sel_phase);
            id v89 = v41;
            unint64_t v43 = v87 | 0x8000000000000000;
            unint64_t v44 = 0xD000000000000010;
            switch(v42)
            {
              case 0u:
                unint64_t v43 = 0xE700000000000000;
                unint64_t v44 = 0x6E776F6E6B6E75;
                break;
              case 1u:
                break;
              case 2u:
                unint64_t v43 = 0xED00006E6F697461;
                unint64_t v44 = 0x7A696D6F646E6172;
                break;
              case 3u:
                unint64_t v43 = 0xEB000000006B6365;
                unint64_t v44 = 0x6843746567647562;
                break;
              case 4u:
                unint64_t v43 = 0xEF6E6F6974616572;
                unint64_t v44 = 0x4364616F6C796170;
                break;
              case 5u:
                unint64_t v43 = 0xE600000000000000;
                unint64_t v44 = 0x64616F6C7075;
                break;
              default:
                unint64_t v43 = 0xE700000000000000;
                unint64_t v44 = 0x746C7561666564;
                break;
            }
            uint64_t v107 = (void *)v44;
            unint64_t v108 = v43;
            swift_bridgeObjectRetain();
            sub_254527080();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            char v64 = v107;
            unint64_t v65 = v108;
            uint64_t v66 = v97;
            v91((char *)v97 + *(int *)(v93 + 20), v102, v96);
            *uint64_t v66 = v64;
            v66[1] = v65;
            sub_2544BB6A4((uint64_t)v99);
            unint64_t v67 = v100;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v107 = (void *)v67;
            unint64_t v70 = sub_2544B9B58(v34, (uint64_t)v106);
            uint64_t v71 = *(void *)(v67 + 16);
            BOOL v72 = (v69 & 1) == 0;
            uint64_t v73 = v71 + v72;
            if (__OFADD__(v71, v72))
            {
              __break(1u);
LABEL_62:
              __break(1u);
LABEL_63:
              sub_254527A30();
              __break(1u);
              JUMPOUT(0x2544B5C64);
            }
            char v74 = v69;
            if (*(void *)(v67 + 24) >= v73)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                sub_2544BC488(&qword_269DF3778);
              }
            }
            else
            {
              sub_2544BAA78(v73, isUniquelyReferenced_nonNull_native, &qword_269DF3778);
              unint64_t v75 = sub_2544B9B58(v34, (uint64_t)v106);
              if ((v74 & 1) != (v76 & 1)) {
                goto LABEL_63;
              }
              unint64_t v70 = v75;
            }
            double v77 = v107;
            swift_bridgeObjectRelease();
            if ((v74 & 1) == 0)
            {
              v77[(v70 >> 6) + 8] |= 1 << v70;
              id v78 = (uint64_t *)(v77[6] + 16 * v70);
              *id v78 = v34;
              v78[1] = (uint64_t)v106;
              *(void *)(v77[7] + 8 * v70) = MEMORY[0x263F8EE78];
              uint64_t v79 = v77[2];
              swift_bridgeObjectRetain();
              if (__OFADD__(v79, 1)) {
                goto LABEL_62;
              }
              v77[2] = v79 + 1;
            }
            swift_bridgeObjectRetain();
            uint64_t v80 = v77[7];
            swift_bridgeObjectRelease();
            unint64_t v81 = *(void *)(v80 + 8 * v70);
            char v82 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)(v80 + 8 * v70) = v81;
            unint64_t v100 = (unint64_t)v77;
            if ((v82 & 1) == 0)
            {
              unint64_t v81 = sub_2544B9324(0, *(void *)(v81 + 16) + 1, 1, v81, &qword_269DF3960, (uint64_t (*)(void))type metadata accessor for LedgerState, (uint64_t (*)(void))type metadata accessor for LedgerState);
              *(void *)(v80 + 8 * v70) = v81;
            }
            unint64_t v84 = *(void *)(v81 + 16);
            unint64_t v83 = *(void *)(v81 + 24);
            if (v84 >= v83 >> 1)
            {
              unint64_t v81 = sub_2544B9324(v83 > 1, v84 + 1, 1, v81, &qword_269DF3960, (uint64_t (*)(void))type metadata accessor for LedgerState, (uint64_t (*)(void))type metadata accessor for LedgerState);
              *(void *)(v80 + 8 * v70) = v81;
            }
            uint64_t v25 = &off_2653AD000;
            *(void *)(v81 + 16) = v84 + 1;
            sub_2544BD2A4((uint64_t)v97, v81+ ((*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80))+ *(void *)(v90 + 72) * v84, (uint64_t (*)(void))type metadata accessor for LedgerState);
            swift_bridgeObjectRelease();

            uint64_t v21 = v96;
            (*v95)(v102, v96);
            unint64_t v99 = sub_2544B5C7C;
          }
          else
          {
            if (qword_26B267240 != -1) {
              swift_once();
            }
            uint64_t v51 = sub_254526E00();
            __swift_project_value_buffer(v51, (uint64_t)qword_26B267340);
            uint64_t v52 = sub_254526DE0();
            os_log_type_t v53 = sub_254527410();
            if (!os_log_type_enabled(v52, v53))
            {

              goto LABEL_26;
            }
            unint64_t v54 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)unint64_t v54 = 0;
            _os_log_impl(&dword_254486000, v52, v53, "Dedisco: No Trial experiment ID", v54, 2u);
            uint64_t v55 = v54;
            uint64_t v25 = &off_2653AD000;
            MEMORY[0x25A27C9E0](v55, -1, -1);
          }
        }
        else
        {
          if (qword_26B267240 != -1) {
            swift_once();
          }
          uint64_t v47 = sub_254526E00();
          __swift_project_value_buffer(v47, (uint64_t)qword_26B267340);
          unint64_t v48 = sub_254526DE0();
          os_log_type_t v49 = sub_254527410();
          if (!os_log_type_enabled(v48, v49))
          {

LABEL_25:
LABEL_26:

            goto LABEL_3;
          }
          char v50 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)char v50 = 0;
          _os_log_impl(&dword_254486000, v48, v49, "Dedisco: No experiment identifiers", v50, 2u);
          MEMORY[0x25A27C9E0](v50, -1, -1);
        }
      }
      else
      {
        if (qword_26B267240 != -1) {
          swift_once();
        }
        uint64_t v45 = sub_254526E00();
        __swift_project_value_buffer(v45, (uint64_t)qword_26B267340);
        char v29 = sub_254526DE0();
        os_log_type_t v46 = sub_254527410();
        if (!os_log_type_enabled(v29, v46)) {
          goto LABEL_25;
        }
        char v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v26 = 0;
        _os_log_impl(&dword_254486000, v29, v46, "Dedisco: No identifiers", v26, 2u);
        MEMORY[0x25A27C9E0](v26, -1, -1);
      }
LABEL_3:
      v24 += 2;
      if (!--v23) {
        goto LABEL_60;
      }
    }
  }
  unint64_t v99 = 0;
LABEL_60:
  swift_bridgeObjectRelease();
  sub_2544BB6A4((uint64_t)v99);
  return v100;
}

void sub_2544B5C7C(void *a1@<X8>)
{
  *a1 = MEMORY[0x263F8EE78];
}

uint64_t processDediscoEvents(dediscoEventMap:telemetryRange:dailyTelemetryResults:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  uint64_t v4 = type metadata accessor for TaskTelemetry(0);
  v3[13] = v4;
  v3[14] = *(void *)(v4 - 8);
  v3[15] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for LedgerState();
  v3[16] = v5;
  v3[17] = *(void *)(v5 - 8);
  v3[18] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for DediscoAnalytics();
  v3[19] = v6;
  v3[20] = *(void *)(v6 - 8);
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
  v3[23] = swift_task_alloc();
  uint64_t v7 = sub_254526E00();
  v3[24] = v7;
  v3[25] = *(void *)(v7 - 8);
  v3[26] = swift_task_alloc();
  v3[27] = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF38B0);
  v3[28] = swift_task_alloc();
  v3[29] = swift_task_alloc();
  v3[30] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48E0);
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  v3[33] = swift_task_alloc();
  uint64_t v8 = sub_254526D90();
  v3[34] = v8;
  v3[35] = *(void *)(v8 - 8);
  v3[36] = swift_task_alloc();
  v3[37] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2544B5FA4, 0, 0);
}

uint64_t sub_2544B5FA4()
{
  v164 = v0;
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[35];
  uint64_t v154 = v0[30];
  uint64_t v149 = v0[27];
  uint64_t v3 = v0[25];
  uint64_t v128 = v0[20];
  uint64_t v4 = v0[17];
  uint64_t v126 = v0[14];
  uint64_t v142 = v0[13];
  uint64_t v131 = v0[12];
  v132 = (int *)v0[19];
  uint64_t v135 = v0[11];
  uint64_t v5 = sub_2544ACA0C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF37C8);
  swift_allocObject();
  uint64_t v6 = sub_2544AB090(v5);
  swift_release();
  uint64_t v133 = v1 + 64;
  uint64_t v7 = -1;
  uint64_t v8 = -1 << *(unsigned char *)(v1 + 32);
  if (-v8 < 64) {
    uint64_t v7 = ~(-1 << -(char)v8);
  }
  unint64_t v141 = v7 & *(void *)(v1 + 64);
  uint64_t v137 = (uint64_t)v6 + *(void *)(*v6 + 112);
  int64_t v134 = (unint64_t)(63 - v8) >> 6;
  v151 = (void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v148 = (void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  v160 = (void (**)(uint64_t, uint64_t))(v2 + 8);
  v146 = (void (**)(uint64_t, uint64_t))(v3 + 8);
  v147 = (void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  uint64_t v127 = v4;
  v129 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56);
  v130 = (void (**)(uint64_t, uint64_t, uint64_t, void))(v4 + 56);
  uint64_t v136 = v1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  unint64_t v11 = MEMORY[0x263F8EE78];
  v145 = v0;
  while (1)
  {
    if (v141)
    {
      unint64_t v12 = __clz(__rbit64(v141));
      int64_t v140 = v10;
      v141 &= v141 - 1;
      unint64_t v13 = v12 | (v10 << 6);
    }
    else
    {
      BOOL v14 = __OFADD__(v10, 1);
      int64_t v15 = v10 + 1;
      if (v14) {
        goto LABEL_107;
      }
      if (v15 >= v134)
      {
LABEL_95:
        swift_release();
        swift_release();
        unint64_t v139 = v11;
        goto LABEL_96;
      }
      unint64_t v16 = *(void *)(v133 + 8 * v15);
      if (!v16)
      {
        int64_t v17 = v15 + 1;
        if (v15 + 1 >= v134) {
          goto LABEL_95;
        }
        unint64_t v16 = *(void *)(v133 + 8 * v17);
        if (!v16)
        {
          int64_t v17 = v15 + 2;
          if (v15 + 2 >= v134) {
            goto LABEL_95;
          }
          unint64_t v16 = *(void *)(v133 + 8 * v17);
          if (!v16)
          {
            int64_t v17 = v15 + 3;
            if (v15 + 3 >= v134) {
              goto LABEL_95;
            }
            unint64_t v16 = *(void *)(v133 + 8 * v17);
            if (!v16)
            {
              while (1)
              {
                int64_t v15 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_108;
                }
                if (v15 >= v134) {
                  goto LABEL_95;
                }
                unint64_t v16 = *(void *)(v133 + 8 * v15);
                ++v17;
                if (v16) {
                  goto LABEL_17;
                }
              }
            }
          }
        }
        int64_t v15 = v17;
      }
LABEL_17:
      int64_t v140 = v15;
      unint64_t v141 = (v16 - 1) & v16;
      unint64_t v13 = __clz(__rbit64(v16)) + (v15 << 6);
    }
    unint64_t v18 = (uint64_t *)(*(void *)(v136 + 48) + 16 * v13);
    unint64_t v19 = v18[1];
    uint64_t v153 = *v18;
    uint64_t v20 = *(void *)(*(void *)(v136 + 56) + 8 * v13);
    swift_bridgeObjectRetain();
    uint64_t v152 = v20;
    swift_bridgeObjectRetain();
    if (sub_254527330()) {
      break;
    }
    double v21 = *(double *)v0[11];
    double v22 = *(double *)(v135 + 8);
    uint64_t result = swift_beginAccess();
    if (v22 <= v21) {
      goto LABEL_4;
    }
    uint64_t v23 = 0;
    unint64_t v162 = v19;
LABEL_21:
    unint64_t v138 = v11;
    uint64_t v24 = v23;
    do
    {
      if (__OFADD__(v24, 1))
      {
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
LABEL_104:
        __break(1u);
LABEL_105:
        __break(1u);
LABEL_106:
        __break(1u);
LABEL_107:
        __break(1u);
LABEL_108:
        __break(1u);
        return result;
      }
      sub_254526CD0();
      sub_254526D10();
      sub_2544BCD20();
      uint64_t result = sub_254526F90();
      if ((result & 1) == 0) {
        goto LABEL_100;
      }
      uint64_t v155 = v24;
      uint64_t v161 = v24 + 1;
      uint64_t v25 = v0[36];
      uint64_t v26 = v0[37];
      uint64_t v27 = v0[34];
      uint64_t v28 = v0[32];
      uint64_t v158 = v0[33];
      uint64_t v29 = v0[28];
      uint64_t v30 = v0[29];
      uint64_t v31 = v30 + *(int *)(v149 + 48);
      id v32 = *v151;
      (*v151)(v30, v25, v27);
      v32(v31, v26, v27);
      uint64_t v33 = v29 + *(int *)(v149 + 48);
      v32(v29, v30, v27);
      v150 = v32;
      v32(v33, v31, v27);
      uint64_t v34 = *v148;
      (*v148)(v28, v29, v27);
      char v35 = *v160;
      (*v160)(v33, v27);
      uint64_t v36 = v29 + *(int *)(v149 + 48);
      v34(v29, v30, v27);
      v34(v36, v31, v27);
      v34(v28 + *(int *)(v154 + 36), v36, v27);
      v156 = v35;
      v35(v29, v27);
      sub_254493190(v28, v158, (uint64_t *)&unk_269DF48E0);
      uint64_t v37 = swift_task_alloc();
      *(void *)(v37 + 16) = v158;
      swift_bridgeObjectRetain();
      uint64_t v38 = sub_2544B73F4((uint64_t (*)(char *))sub_2544BCD78, v37, v152);
      swift_task_dealloc();
      if (qword_26B267240 != -1) {
        swift_once();
      }
      uint64_t v0 = v145;
      uint64_t v39 = v145[33];
      uint64_t v40 = v145[31];
      uint64_t v41 = v145[26];
      uint64_t v42 = v145[24];
      uint64_t v43 = __swift_project_value_buffer(v42, (uint64_t)qword_26B267340);
      (*v147)(v41, v43, v42);
      sub_254493CFC(v39, v40, (uint64_t *)&unk_269DF48E0);
      unint64_t v44 = v162;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v45 = sub_254526DE0();
      os_log_type_t v46 = sub_254527410();
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = v145[31];
        uint64_t v157 = v145[26];
        uint64_t v144 = v145[24];
        uint64_t v48 = swift_slowAlloc();
        uint64_t v143 = swift_slowAlloc();
        v163[0] = v143;
        *(_DWORD *)uint64_t v48 = 134218498;
        v145[7] = *(void *)(v38 + 16);
        sub_254527500();
        swift_bridgeObjectRelease();
        *(_WORD *)(v48 + 12) = 2080;
        swift_bridgeObjectRetain();
        v145[8] = sub_254498B68(v153, v162, v163);
        sub_254527500();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v48 + 22) = 2080;
        v145[5] = 0;
        v145[6] = 0xE000000000000000;
        sub_254527700();
        sub_254527080();
        unint64_t v44 = v162;
        sub_254527700();
        v145[9] = sub_254498B68(v145[5], v145[6], v163);
        sub_254527500();
        swift_bridgeObjectRelease();
        sub_254498AB8(v47, (uint64_t *)&unk_269DF48E0);
        _os_log_impl(&dword_254486000, v45, v46, "%ld events for %s in %s.", (uint8_t *)v48, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x25A27C9E0](v143, -1, -1);
        MEMORY[0x25A27C9E0](v48, -1, -1);

        (*v146)(v157, v144);
      }
      else
      {
        uint64_t v49 = v145[31];
        uint64_t v50 = v145[26];
        uint64_t v51 = v145[24];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        sub_254498AB8(v49, (uint64_t *)&unk_269DF48E0);

        (*v146)(v50, v51);
      }
      double v52 = v21 + (double)v161 * 86400.0;
      if (*(void *)(v38 + 16))
      {
        uint64_t v57 = v145[23];
        (*v130)(v57, 1, 1, v145[16]);
        sub_2544B7D88(v57, (uint64_t (*)(void))type metadata accessor for DediscoAnalytics, (uint64_t (*)(void))type metadata accessor for DediscoAnalytics);
        sub_254498AB8(v57, &qword_269DF3688);
        uint64_t v58 = *(void *)(v38 + 16);
        if (v58)
        {
          uint64_t v59 = v38 + ((*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80));
          swift_bridgeObjectRetain();
          uint64_t v60 = *(void *)(v127 + 72);
          do
          {
            uint64_t v61 = v145[18];
            sub_2544BD1DC(v59, v61, (uint64_t (*)(void))type metadata accessor for LedgerState);
            sub_2544B8298(v61, (uint64_t (*)(void))type metadata accessor for DediscoAnalytics, (uint64_t *)type metadata accessor for DediscoAnalytics);
            sub_2544BD244(v61, (uint64_t (*)(void))type metadata accessor for LedgerState);
            v59 += v60;
            --v58;
          }
          while (v58);
          swift_bridgeObjectRelease();
        }
        uint64_t v62 = v145[36];
        uint64_t v159 = v145[37];
        uint64_t v63 = v145[34];
        uint64_t v64 = v145[22];
        sub_2544BD1DC(v137, v64, (uint64_t (*)(void))type metadata accessor for DediscoAnalytics);
        swift_bridgeObjectRelease();
        unint64_t v65 = (uint64_t *)(v64 + v132[8]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *unint64_t v65 = v153;
        v65[1] = v44;
        uint64_t v66 = v64 + v132[9];
        sub_254498AB8(v66, &qword_26B266B98);
        v150(v66, v62, v63);
        unint64_t v67 = *v129;
        (*v129)(v66, 0, 1, v63);
        uint64_t v68 = v64 + v132[10];
        sub_254498AB8(v68, &qword_26B266B98);
        v150(v68, v159, v63);
        unint64_t v11 = v138;
        v67(v68, 0, 1, v63);
        uint64_t v69 = *(void *)(v131 + 16);
        uint64_t v70 = v142;
        if (v69)
        {
          uint64_t v71 = v145[12]
              + ((*(unsigned __int8 *)(v126 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80));
          swift_bridgeObjectRetain();
          uint64_t v72 = *(void *)(v126 + 72);
          while (2)
          {
            uint64_t v73 = v145[15];
            sub_2544BD1DC(v71, v73, type metadata accessor for TaskTelemetry);
            char v74 = (void *)(v73 + *(int *)(v70 + 28));
            BOOL v75 = *v74 == v153 && v74[1] == v162;
            if (!v75 && (sub_2545279E0() & 1) == 0) {
              goto LABEL_40;
            }
            type metadata accessor for TelemetryBucketRange();
            if ((sub_254526D40() & 1) == 0) {
              goto LABEL_40;
            }
            char v76 = (uint64_t *)v145[22];
            uint64_t v77 = *(void *)(v145[15] + *(int *)(v70 + 40));
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v163[0] = *v76;
            uint64_t v79 = (void *)v163[0];
            *char v76 = 0x8000000000000000;
            unint64_t v81 = sub_2544B9B58(0x6574656C706D6F43, 0xE900000000000064);
            uint64_t v82 = v79[2];
            BOOL v83 = (v80 & 1) == 0;
            uint64_t result = v82 + v83;
            if (__OFADD__(v82, v83)) {
              goto LABEL_101;
            }
            char v84 = v80;
            if (v79[3] >= result)
            {
              if (isUniquelyReferenced_nonNull_native)
              {
                if ((v80 & 1) == 0) {
                  goto LABEL_51;
                }
              }
              else
              {
                uint64_t result = (uint64_t)sub_2544BC110();
                uint64_t v79 = (void *)v163[0];
                if ((v84 & 1) == 0) {
                  goto LABEL_51;
                }
              }
            }
            else
            {
              sub_2544BA458(result, isUniquelyReferenced_nonNull_native);
              uint64_t v79 = (void *)v163[0];
              uint64_t result = sub_2544B9B58(0x6574656C706D6F43, 0xE900000000000064);
              if ((v84 & 1) != (v85 & 1)) {
                goto LABEL_91;
              }
              unint64_t v81 = result;
              if ((v84 & 1) == 0)
              {
LABEL_51:
                v79[(v81 >> 6) + 8] |= 1 << v81;
                uint64_t v86 = (void *)(v79[6] + 16 * v81);
                void *v86 = 0x6574656C706D6F43;
                v86[1] = 0xE900000000000064;
                *(void *)(v79[7] + 8 * v81) = v77;
                uint64_t v87 = v79[2];
                BOOL v14 = __OFADD__(v87, 1);
                uint64_t v88 = v87 + 1;
                if (v14) {
                  goto LABEL_104;
                }
                v79[2] = v88;
LABEL_56:
                id v89 = (uint64_t *)v145[22];
                uint64_t v90 = v145[15];
                uint64_t *v89 = (uint64_t)v79;
                swift_bridgeObjectRelease();
                uint64_t v91 = *(void *)(v90 + *(int *)(v142 + 44));
                char v92 = swift_isUniquelyReferenced_nonNull_native();
                v163[0] = *v89;
                uint64_t v93 = (void *)v163[0];
                uint64_t *v89 = 0x8000000000000000;
                unint64_t v95 = sub_2544B9B58(0x64656C696146, 0xE600000000000000);
                uint64_t v96 = v93[2];
                BOOL v97 = (v94 & 1) == 0;
                uint64_t result = v96 + v97;
                if (__OFADD__(v96, v97)) {
                  goto LABEL_102;
                }
                char v98 = v94;
                if (v93[3] >= result)
                {
                  if (v92)
                  {
                    if ((v94 & 1) == 0) {
                      goto LABEL_60;
                    }
                  }
                  else
                  {
                    uint64_t result = (uint64_t)sub_2544BC110();
                    uint64_t v93 = (void *)v163[0];
                    if ((v98 & 1) == 0) {
                      goto LABEL_60;
                    }
                  }
                }
                else
                {
                  sub_2544BA458(result, v92);
                  uint64_t v93 = (void *)v163[0];
                  uint64_t result = sub_2544B9B58(0x64656C696146, 0xE600000000000000);
                  if ((v98 & 1) != (v99 & 1)) {
                    goto LABEL_91;
                  }
                  unint64_t v95 = result;
                  if ((v98 & 1) == 0)
                  {
LABEL_60:
                    v93[(v95 >> 6) + 8] |= 1 << v95;
                    unint64_t v100 = (void *)(v93[6] + 16 * v95);
                    void *v100 = 0x64656C696146;
                    v100[1] = 0xE600000000000000;
                    *(void *)(v93[7] + 8 * v95) = v91;
                    uint64_t v101 = v93[2];
                    BOOL v14 = __OFADD__(v101, 1);
                    uint64_t v102 = v101 + 1;
                    if (v14) {
                      goto LABEL_105;
                    }
                    v93[2] = v102;
LABEL_65:
                    uint64_t v103 = (uint64_t *)v145[22];
                    uint64_t v104 = v145[15];
                    *uint64_t v103 = (uint64_t)v93;
                    swift_bridgeObjectRelease();
                    uint64_t v105 = *(void *)(v104 + *(int *)(v142 + 48));
                    char v106 = swift_isUniquelyReferenced_nonNull_native();
                    v163[0] = *v103;
                    uint64_t v107 = (void *)v163[0];
                    *uint64_t v103 = 0x8000000000000000;
                    unint64_t v109 = sub_2544B9B58(0x6465727265666544, 0xE800000000000000);
                    uint64_t v110 = v107[2];
                    BOOL v111 = (v108 & 1) == 0;
                    uint64_t result = v110 + v111;
                    if (__OFADD__(v110, v111)) {
                      goto LABEL_103;
                    }
                    char v112 = v108;
                    if (v107[3] >= result)
                    {
                      if (v106)
                      {
                        if ((v108 & 1) == 0) {
                          goto LABEL_72;
                        }
                      }
                      else
                      {
                        uint64_t result = (uint64_t)sub_2544BC110();
                        uint64_t v107 = (void *)v163[0];
                        if ((v112 & 1) == 0) {
                          goto LABEL_72;
                        }
                      }
                    }
                    else
                    {
                      sub_2544BA458(result, v106);
                      uint64_t v107 = (void *)v163[0];
                      uint64_t result = sub_2544B9B58(0x6465727265666544, 0xE800000000000000);
                      if ((v112 & 1) != (v113 & 1))
                      {
LABEL_91:
                        return sub_254527A30();
                      }
                      unint64_t v109 = result;
                      if ((v112 & 1) == 0)
                      {
LABEL_72:
                        v107[(v109 >> 6) + 8] |= 1 << v109;
                        uint64_t v114 = (void *)(v107[6] + 16 * v109);
                        *uint64_t v114 = 0x6465727265666544;
                        v114[1] = 0xE800000000000000;
                        *(void *)(v107[7] + 8 * v109) = v105;
                        uint64_t v115 = v107[2];
                        BOOL v14 = __OFADD__(v115, 1);
                        uint64_t v116 = v115 + 1;
                        if (v14) {
                          goto LABEL_106;
                        }
                        v107[2] = v116;
LABEL_39:
                        *(void *)v145[22] = v107;
                        swift_bridgeObjectRelease();
                        uint64_t v70 = v142;
LABEL_40:
                        sub_2544BD244(v145[15], type metadata accessor for TaskTelemetry);
                        v71 += v72;
                        if (!--v69)
                        {
                          swift_bridgeObjectRelease();
                          unint64_t v11 = v138;
                          goto LABEL_81;
                        }
                        continue;
                      }
                    }
                    *(void *)(v107[7] + 8 * v109) = v105;
                    goto LABEL_39;
                  }
                }
                *(void *)(v93[7] + 8 * v95) = v91;
                goto LABEL_65;
              }
            }
            break;
          }
          *(void *)(v79[7] + 8 * v81) = v77;
          goto LABEL_56;
        }
LABEL_81:
        sub_2544BD1DC(v145[22], v145[21], (uint64_t (*)(void))type metadata accessor for DediscoAnalytics);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v11 = sub_2544B9324(0, *(void *)(v11 + 16) + 1, 1, v11, &qword_269DF3958, (uint64_t (*)(void))type metadata accessor for DediscoAnalytics, (uint64_t (*)(void))type metadata accessor for DediscoAnalytics);
        }
        unint64_t v118 = *(void *)(v11 + 16);
        unint64_t v117 = *(void *)(v11 + 24);
        if (v118 >= v117 >> 1) {
          unint64_t v11 = sub_2544B9324(v117 > 1, v118 + 1, 1, v11, &qword_269DF3958, (uint64_t (*)(void))type metadata accessor for DediscoAnalytics, (uint64_t (*)(void))type metadata accessor for DediscoAnalytics);
        }
        uint64_t v120 = v145[36];
        uint64_t v119 = v145[37];
        uint64_t v122 = v145[33];
        uint64_t v121 = v145[34];
        uint64_t v123 = v145[21];
        uint64_t v124 = v145[22];
        *(void *)(v11 + 16) = v118 + 1;
        sub_2544BD2A4(v123, v11+ ((*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80))+ *(void *)(v128 + 72) * v118, (uint64_t (*)(void))type metadata accessor for DediscoAnalytics);
        v156(v120, v121);
        v156(v119, v121);
        sub_254498AB8(v122, (uint64_t *)&unk_269DF48E0);
        uint64_t result = sub_2544BD244(v124, (uint64_t (*)(void))type metadata accessor for DediscoAnalytics);
        uint64_t v23 = v161;
        if (v22 <= v52) {
          goto LABEL_4;
        }
        goto LABEL_21;
      }
      uint64_t v53 = v145[36];
      uint64_t v54 = v145[37];
      uint64_t v56 = v145[33];
      uint64_t v55 = v145[34];
      swift_bridgeObjectRelease();
      v156(v53, v55);
      v156(v54, v55);
      uint64_t result = sub_254498AB8(v56, (uint64_t *)&unk_269DF48E0);
      uint64_t v24 = v155 + 1;
    }
    while (v22 > v52);
    unint64_t v11 = v138;
LABEL_4:
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    int64_t v10 = v140;
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v139 = 0;
LABEL_96:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v125 = (uint64_t (*)(unint64_t))v0[1];
  return v125(v139);
}

uint64_t sub_2544B7244(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48E0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LedgerState();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_254526D90();
  sub_2544BCD20();
  char v10 = sub_254526F80();
  sub_2544BD1DC(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for LedgerState);
  sub_254493CFC(a2, (uint64_t)v6, (uint64_t *)&unk_269DF48E0);
  if (v10) {
    char v11 = 0;
  }
  else {
    char v11 = sub_254526F80() ^ 1;
  }
  sub_254498AB8((uint64_t)v6, (uint64_t *)&unk_269DF48E0);
  sub_2544BD244((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for LedgerState);
  return v11 & 1;
}

uint64_t sub_2544B73F4(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for LedgerState();
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v8);
  unint64_t v12 = (char *)v20 - v11;
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t v25 = MEMORY[0x263F8EE78];
  uint64_t v22 = *(void *)(a3 + 16);
  if (v22)
  {
    unint64_t v14 = 0;
    uint64_t v15 = MEMORY[0x263F8EE78];
    v20[1] = a2;
    uint64_t v21 = a3;
    v20[0] = a1;
    while (v14 < *(void *)(a3 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      uint64_t v13 = *(void *)(v24 + 72);
      sub_2544BD1DC(a3 + v16 + v13 * v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for LedgerState);
      char v17 = a1(v12);
      if (v3)
      {
        sub_2544BD244((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for LedgerState);
        swift_release();
        swift_bridgeObjectRelease();
        return v13;
      }
      if (v17)
      {
        sub_2544BD2A4((uint64_t)v12, v23, (uint64_t (*)(void))type metadata accessor for LedgerState);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_2544FEDAC(0, *(void *)(v15 + 16) + 1, 1);
        }
        uint64_t v15 = v25;
        unint64_t v19 = *(void *)(v25 + 16);
        unint64_t v18 = *(void *)(v25 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_2544FEDAC(v18 > 1, v19 + 1, 1);
          uint64_t v15 = v25;
        }
        *(void *)(v15 + 16) = v19 + 1;
        uint64_t result = sub_2544BD2A4(v23, v15 + v16 + v19 * v13, (uint64_t (*)(void))type metadata accessor for LedgerState);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        uint64_t result = sub_2544BD244((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for LedgerState);
      }
      if (v22 == ++v14)
      {
        uint64_t v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_2544B768C(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for TaskStatusEvent(0);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v8);
  unint64_t v12 = (char *)v20 - v11;
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t v25 = MEMORY[0x263F8EE78];
  uint64_t v22 = *(void *)(a3 + 16);
  if (v22)
  {
    unint64_t v14 = 0;
    uint64_t v15 = MEMORY[0x263F8EE78];
    v20[1] = a2;
    uint64_t v21 = a3;
    v20[0] = a1;
    while (v14 < *(void *)(a3 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      uint64_t v13 = *(void *)(v24 + 72);
      sub_2544BD1DC(a3 + v16 + v13 * v14, (uint64_t)v12, type metadata accessor for TaskStatusEvent);
      char v17 = a1(v12);
      if (v3)
      {
        sub_2544BD244((uint64_t)v12, type metadata accessor for TaskStatusEvent);
        swift_release();
        swift_bridgeObjectRelease();
        return v13;
      }
      if (v17)
      {
        sub_2544BD2A4((uint64_t)v12, v23, type metadata accessor for TaskStatusEvent);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_2544FEE74(0, *(void *)(v15 + 16) + 1, 1);
        }
        uint64_t v15 = v25;
        unint64_t v19 = *(void *)(v25 + 16);
        unint64_t v18 = *(void *)(v25 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_2544FEE74(v18 > 1, v19 + 1, 1);
          uint64_t v15 = v25;
        }
        *(void *)(v15 + 16) = v19 + 1;
        uint64_t result = sub_2544BD2A4(v23, v15 + v16 + v19 * v13, type metadata accessor for TaskStatusEvent);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        uint64_t result = sub_2544BD244((uint64_t)v12, type metadata accessor for TaskStatusEvent);
      }
      if (v22 == ++v14)
      {
        uint64_t v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_2544B7924(uint64_t a1)
{
  uint64_t v26 = a1;
  uint64_t v2 = type metadata accessor for LedgerState();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v25 = (uint64_t)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for MLHostAnalytics();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (unint64_t *)((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v22 - v12;
  unint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v14((char *)&v22 - v12, 1, 1, v2);
  uint64_t v15 = v1 + qword_269DF4E38;
  swift_beginAccess();
  uint64_t v23 = v15;
  sub_2544A6C0C((uint64_t)v13, v15, &qword_269DF3688);
  swift_endAccess();
  uint64_t v16 = MEMORY[0x263F8EE78];
  unint64_t *v7 = sub_2544A5538(MEMORY[0x263F8EE78]);
  v7[1] = sub_2544A564C(v16);
  v14((char *)v7 + *(int *)(v5 + 24), 1, 1, v2);
  uint64_t v24 = v5;
  v14((char *)v7 + *(int *)(v5 + 28), 1, 1, v2);
  uint64_t v17 = v1 + *(void *)(*(void *)v1 + 112);
  swift_beginAccess();
  sub_2544BD30C((uint64_t)v7, v17, (uint64_t (*)(void))type metadata accessor for MLHostAnalytics);
  swift_endAccess();
  sub_254493CFC(v26, (uint64_t)v11, &qword_269DF3688);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) == 1) {
    return sub_254498AB8((uint64_t)v11, &qword_269DF3688);
  }
  uint64_t v19 = v25;
  sub_2544BD2A4((uint64_t)v11, v25, (uint64_t (*)(void))type metadata accessor for LedgerState);
  sub_2544BD1DC(v19, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for LedgerState);
  v14(v13, 0, 1, v2);
  uint64_t v20 = v23;
  swift_beginAccess();
  sub_2544A6C0C((uint64_t)v13, v20, &qword_269DF3688);
  swift_endAccess();
  sub_2544BD1DC(v19, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for LedgerState);
  v14(v13, 0, 1, v2);
  swift_beginAccess();
  uint64_t v21 = v24;
  sub_2544A6C0C((uint64_t)v13, v17 + *(int *)(v24 + 24), &qword_269DF3688);
  sub_2544BD1DC(v19, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for LedgerState);
  v14(v13, 0, 1, v2);
  sub_2544A6C0C((uint64_t)v13, v17 + *(int *)(v21 + 28), &qword_269DF3688);
  swift_endAccess();
  return sub_2544BD244(v19, (uint64_t (*)(void))type metadata accessor for LedgerState);
}

uint64_t sub_2544B7D5C(uint64_t a1)
{
  return sub_2544B7D88(a1, (uint64_t (*)(void))type metadata accessor for CustomEventAnalytics, (uint64_t (*)(void))type metadata accessor for CustomEventAnalytics);
}

uint64_t sub_2544B7D88(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v39 = a3;
  uint64_t v40 = a1;
  uint64_t v5 = type metadata accessor for LedgerState();
  uint64_t v38 = *(void *)(v5 - 8);
  uint64_t v6 = v38;
  MEMORY[0x270FA5388](v5);
  uint64_t v36 = (uint64_t)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)a2(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (unint64_t *)((char *)&v32 - v9);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v37 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v32 - v14;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v16((char *)&v32 - v14, 1, 1, v5);
  uint64_t v17 = v3 + qword_269DF4E38;
  swift_beginAccess();
  uint64_t v33 = v17;
  sub_2544A6C0C((uint64_t)v15, v17, &qword_269DF3688);
  swift_endAccess();
  uint64_t v18 = MEMORY[0x263F8EE78];
  *uint64_t v10 = sub_2544A5538(MEMORY[0x263F8EE78]);
  v10[1] = sub_2544A564C(v18);
  v16((char *)v10 + v8[6], 1, 1, v5);
  uint64_t v19 = (char *)v10 + v8[7];
  uint64_t v34 = v16;
  v16(v19, 1, 1, v5);
  uint64_t v20 = (unint64_t *)((char *)v10 + v8[8]);
  *uint64_t v20 = 0;
  v20[1] = 0;
  uint64_t v21 = (char *)v10 + v8[9];
  uint64_t v22 = sub_254526D90();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v21, 1, 1, v22);
  char v35 = v8;
  uint64_t v24 = v8[10];
  uint64_t v25 = (uint64_t)v37;
  v23((char *)v10 + v24, 1, 1, v22);
  uint64_t v26 = v3 + *(void *)(*(void *)v3 + 112);
  swift_beginAccess();
  sub_2544BD30C((uint64_t)v10, v26, v39);
  swift_endAccess();
  sub_254493CFC(v40, v25, &qword_269DF3688);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v25, 1, v5) == 1) {
    return sub_254498AB8(v25, &qword_269DF3688);
  }
  uint64_t v28 = v36;
  sub_2544BD2A4(v25, v36, (uint64_t (*)(void))type metadata accessor for LedgerState);
  sub_2544BD1DC(v28, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for LedgerState);
  uint64_t v29 = v34;
  v34(v15, 0, 1, v5);
  uint64_t v30 = v33;
  swift_beginAccess();
  sub_2544A6C0C((uint64_t)v15, v30, &qword_269DF3688);
  swift_endAccess();
  sub_2544BD1DC(v28, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for LedgerState);
  v29(v15, 0, 1, v5);
  swift_beginAccess();
  uint64_t v31 = v35;
  sub_2544A6C0C((uint64_t)v15, v26 + v35[6], &qword_269DF3688);
  sub_2544BD1DC(v28, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for LedgerState);
  v29(v15, 0, 1, v5);
  sub_2544A6C0C((uint64_t)v15, v26 + v31[7], &qword_269DF3688);
  swift_endAccess();
  return sub_2544BD244(v28, (uint64_t (*)(void))type metadata accessor for LedgerState);
}

uint64_t sub_2544B8240(uint64_t a1)
{
  return sub_2544B8298(a1, (uint64_t (*)(void))type metadata accessor for MLHostAnalytics, (uint64_t *)type metadata accessor for MLHostAnalytics);
}

uint64_t sub_2544B826C(uint64_t a1)
{
  return sub_2544B8298(a1, (uint64_t (*)(void))type metadata accessor for CustomEventAnalytics, (uint64_t *)type metadata accessor for CustomEventAnalytics);
}

uint64_t sub_2544B8298(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3)
{
  uint64_t v86 = a2;
  uint64_t v5 = v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v83 - v11;
  uint64_t v13 = type metadata accessor for LedgerState();
  uint64_t v14 = *(char **)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  char v85 = (uint64_t *)((char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  char v84 = (char **)((char *)&v83 - v18);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (uint64_t *)((char *)&v83 - v19);
  uint64_t v21 = (uint64_t)&v5[qword_269DF4E38];
  swift_beginAccess();
  sub_254493CFC(v21, (uint64_t)v12, &qword_269DF3688);
  int v22 = (*((uint64_t (**)(char *, uint64_t, uint64_t))v14 + 6))(v12, 1, v13);
  uint64_t v87 = v13;
  if (v22 == 1)
  {
    char v85 = a3;
    uint64_t v23 = &qword_269DF3688;
    sub_254498AB8((uint64_t)v12, &qword_269DF3688);
    sub_2544BD1DC(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for LedgerState);
    uint64_t v25 = (char **)*((void *)v14 + 7);
    uint64_t v24 = (uint64_t *)(v14 + 56);
    char v84 = v25;
    ((void (*)(char *, void, uint64_t, uint64_t))v25)(v10, 0, 1, v13);
    swift_beginAccess();
    sub_2544A6C0C((uint64_t)v10, v21, &qword_269DF3688);
    swift_endAccess();
    uint64_t v86 = (uint64_t (*)(void))a1;
    uint64_t v26 = *(void *)a1;
    uint64_t v27 = *(void *)(a1 + 8);
    uint64_t v28 = (uint64_t *)&v5[*(void *)(*(void *)v5 + 112)];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v88 = *v28;
    uint64_t v30 = v88;
    *uint64_t v28 = 0x8000000000000000;
    unint64_t v32 = sub_2544B9B58(v26, v27);
    uint64_t v33 = *(void *)(v30 + 16);
    BOOL v34 = (v31 & 1) == 0;
    uint64_t v35 = v33 + v34;
    if (__OFADD__(v33, v34))
    {
      __break(1u);
      goto LABEL_30;
    }
    LOBYTE(v36) = v31;
    if (*(void *)(v30 + 24) >= v35)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        goto LABEL_33;
      }
    }
    else
    {
      sub_2544BA458(v35, isUniquelyReferenced_nonNull_native);
      uint64_t v30 = v88;
      unint64_t v37 = sub_2544B9B58(v26, v27);
      if ((v36 & 1) != (v38 & 1)) {
        goto LABEL_38;
      }
      unint64_t v32 = v37;
    }
    while (1)
    {
      *uint64_t v28 = v30;
      swift_bridgeObjectRelease();
      uint64_t v55 = (void *)*v28;
      if ((v36 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_25451EB98(&v88);
        uint64_t v56 = v88;
        v55[(v32 >> 6) + 8] |= 1 << v32;
        uint64_t v57 = (uint64_t *)(v55[6] + 16 * v32);
        *uint64_t v57 = v26;
        v57[1] = v27;
        *(void *)(v55[7] + 8 * v32) = v56;
        uint64_t v58 = v55[2];
        BOOL v59 = __OFADD__(v58, 1);
        uint64_t v60 = v58 + 1;
        if (v59)
        {
          __break(1u);
          goto LABEL_35;
        }
        v55[2] = v60;
      }
      swift_bridgeObjectRetain();
      uint64_t v61 = v55[7];
      uint64_t v62 = *(void *)(v61 + 8 * v32);
      BOOL v59 = __OFADD__(v62, 1);
      uint64_t v63 = v62 + 1;
      if (!v59)
      {
        *(void *)(v61 + 8 * v32) = v63;
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v64 = v86;
        sub_2544BD1DC((uint64_t)v86, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for LedgerState);
        uint64_t v65 = v87;
        uint64_t v66 = (void (*)(char *, void, uint64_t, uint64_t))v84;
        ((void (*)(char *, void, uint64_t, uint64_t))v84)(v10, 0, 1, v87);
        swift_beginAccess();
        uint64_t v67 = ((uint64_t (*)(void))v85)(0);
        sub_2544A6C0C((uint64_t)v10, (uint64_t)v28 + *(int *)(v67 + 24), &qword_269DF3688);
        sub_2544BD1DC((uint64_t)v64, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for LedgerState);
        v66(v10, 0, 1, v65);
        sub_2544A6C0C((uint64_t)v10, (uint64_t)v28 + *(int *)(v67 + 28), &qword_269DF3688);
        return swift_endAccess();
      }
LABEL_30:
      __break(1u);
LABEL_31:
      swift_once();
LABEL_9:
      uint64_t v46 = sub_254526E00();
      __swift_project_value_buffer(v46, (uint64_t)qword_26B267340);
      uint64_t v47 = (uint64_t *)v84;
      sub_2544BD1DC(v87, (uint64_t)v84, (uint64_t (*)(void))type metadata accessor for LedgerState);
      uint64_t v36 = v85;
      uint64_t v28 = (uint64_t *)v86;
      sub_2544BD1DC((uint64_t)v86, (uint64_t)v85, (uint64_t (*)(void))type metadata accessor for LedgerState);
      uint64_t v48 = sub_254526DE0();
      os_log_type_t v49 = sub_254527410();
      if (os_log_type_enabled(v48, v49))
      {
        uint64_t v50 = swift_slowAlloc();
        uint64_t v26 = swift_slowAlloc();
        v89[0] = v26;
        *(_DWORD *)uint64_t v50 = 136315394;
        uint64_t v51 = *v47;
        unint64_t v52 = v47[1];
        swift_bridgeObjectRetain();
        uint64_t v88 = sub_254498B68(v51, v52, v89);
        sub_254527500();
        swift_bridgeObjectRelease();
        sub_2544BD244((uint64_t)v47, (uint64_t (*)(void))type metadata accessor for LedgerState);
        *(_WORD *)(v50 + 12) = 2080;
        uint64_t v53 = *v36;
        unint64_t v54 = v36[1];
        swift_bridgeObjectRetain();
        uint64_t v88 = sub_254498B68(v53, v54, v89);
        uint64_t v28 = (uint64_t *)v86;
        sub_254527500();
        swift_bridgeObjectRelease();
        sub_2544BD244((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for LedgerState);
        _os_log_impl(&dword_254486000, v48, v49, "Invalid StateMachine transition, incrementing state: %s -> %s", (uint8_t *)v50, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x25A27C9E0](v26, -1, -1);
        MEMORY[0x25A27C9E0](v50, -1, -1);
      }
      else
      {
        sub_2544BD244((uint64_t)v47, (uint64_t (*)(void))type metadata accessor for LedgerState);
        sub_2544BD244((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for LedgerState);
      }

      uint64_t v10 = (char *)*v28;
      uint64_t v23 = (uint64_t *)v28[1];
      uint64_t v24 = (uint64_t *)&v83[*(void *)(*(void *)v83 + 112)];
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v27 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v88 = *v24;
      uint64_t v69 = v88;
      *uint64_t v24 = 0x8000000000000000;
      unint64_t v32 = sub_2544B9B58((uint64_t)v10, (uint64_t)v23);
      uint64_t v71 = *(void *)(v69 + 16);
      BOOL v72 = (v70 & 1) == 0;
      uint64_t v73 = v71 + v72;
      if (!__OFADD__(v71, v72)) {
        break;
      }
      __break(1u);
LABEL_33:
      sub_2544BC110();
      uint64_t v30 = v88;
    }
    LOBYTE(v26) = v70;
    if (*(void *)(v69 + 24) >= v73)
    {
      if ((v27 & 1) == 0) {
        goto LABEL_36;
      }
      while (1)
      {
LABEL_23:
        *uint64_t v24 = v69;
        swift_bridgeObjectRelease();
        uint64_t v24 = (uint64_t *)*v24;
        if ((v26 & 1) == 0)
        {
          swift_bridgeObjectRetain();
          sub_25451EB98(&v88);
          uint64_t v76 = v88;
          v24[(v32 >> 6) + 8] |= 1 << v32;
          uint64_t v77 = (char **)(v24[6] + 16 * v32);
          void *v77 = v10;
          v77[1] = (char *)v23;
          *(void *)(v24[7] + 8 * v32) = v76;
          uint64_t v78 = v24[2];
          BOOL v59 = __OFADD__(v78, 1);
          uint64_t v79 = v78 + 1;
          if (v59)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24[2] = v79;
        }
        swift_bridgeObjectRetain();
        uint64_t v80 = v24[7];
        uint64_t v81 = *(void *)(v80 + 8 * v32);
        BOOL v59 = __OFADD__(v81, 1);
        uint64_t v82 = v81 + 1;
        if (!v59)
        {
          *(void *)(v80 + 8 * v32) = v82;
          swift_endAccess();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v45 = v87;
          return sub_2544BD244(v45, (uint64_t (*)(void))type metadata accessor for LedgerState);
        }
LABEL_35:
        __break(1u);
LABEL_36:
        sub_2544BC110();
        uint64_t v69 = v88;
      }
    }
    sub_2544BA458(v73, v27);
    uint64_t v69 = v88;
    unint64_t v74 = sub_2544B9B58((uint64_t)v10, (uint64_t)v23);
    if ((v26 & 1) == (v75 & 1))
    {
      unint64_t v32 = v74;
      goto LABEL_23;
    }
LABEL_38:
    uint64_t result = sub_254527A30();
    __break(1u);
  }
  else
  {
    BOOL v83 = v14;
    sub_2544BD2A4((uint64_t)v12, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for LedgerState);
    uint64_t v39 = v5;
    uint64_t v26 = *v20;
    uint64_t v40 = v20[1];
    uint64_t v41 = v20;
    uint64_t v42 = (uint64_t (*)(void))a1;
    uint64_t v43 = *(void *)a1;
    uint64_t v44 = *(void *)(a1 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LOBYTE(v43) = sub_25451E010(v26, v40, v43, v44);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v43 & 1) == 0)
    {
      BOOL v83 = v39;
      uint64_t v86 = v42;
      uint64_t v87 = (uint64_t)v41;
      if (qword_26B267240 == -1) {
        goto LABEL_9;
      }
      goto LABEL_31;
    }
    sub_2544B8C54(v41, (uint64_t *)v42, v86);
    sub_2544BD1DC((uint64_t)v42, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for LedgerState);
    (*((void (**)(char *, void, uint64_t, uint64_t))v83 + 7))(v10, 0, 1, v87);
    swift_beginAccess();
    sub_2544A6C0C((uint64_t)v10, v21, &qword_269DF3688);
    swift_endAccess();
    uint64_t v45 = (uint64_t)v41;
    return sub_2544BD244(v45, (uint64_t (*)(void))type metadata accessor for LedgerState);
  }
  return result;
}

uint64_t sub_2544B8C54(uint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  unint64_t v54 = a3;
  uint64_t v5 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[1];
  uint64_t v55 = *a1;
  uint64_t v13 = *a2;
  uint64_t v12 = a2[1];
  uint64_t v53 = type metadata accessor for LedgerState();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_254526D70();
  double v15 = v14;
  uint64_t v16 = (void *)(v5 + *(void *)(*(void *)v5 + 112));
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v56 = (void *)*v16;
  uint64_t v18 = v56;
  *uint64_t v16 = 0x8000000000000000;
  unint64_t v20 = sub_2544B9B58(v13, v12);
  uint64_t v21 = v18[2];
  BOOL v22 = (v19 & 1) == 0;
  uint64_t v23 = v21 + v22;
  if (__OFADD__(v21, v22))
  {
    __break(1u);
    goto LABEL_24;
  }
  char v4 = v19;
  if (v18[3] >= v23)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_27;
    }
    while (1)
    {
LABEL_6:
      *uint64_t v16 = v18;
      swift_bridgeObjectRelease();
      uint64_t v26 = (void *)*v16;
      if ((v4 & 1) == 0)
      {
        v26[(v20 >> 6) + 8] |= 1 << v20;
        uint64_t v27 = (uint64_t *)(v26[6] + 16 * v20);
        *uint64_t v27 = v13;
        v27[1] = v12;
        *(void *)(v26[7] + 8 * v20) = 0;
        uint64_t v28 = v26[2];
        BOOL v29 = __OFADD__(v28, 1);
        uint64_t v30 = v28 + 1;
        if (v29)
        {
          __break(1u);
LABEL_29:
          sub_2544BBF3C();
          uint64_t v35 = v56;
          goto LABEL_15;
        }
        _OWORD v26[2] = v30;
        swift_bridgeObjectRetain();
      }
      uint64_t v31 = v26[7];
      uint64_t v32 = *(void *)(v31 + 8 * v20);
      BOOL v29 = __OFADD__(v32, 1);
      uint64_t v33 = v32 + 1;
      if (v29)
      {
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
      *(void *)(v31 + 8 * v20) = v33;
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      char v34 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v56 = (void *)v16[1];
      uint64_t v35 = v56;
      v16[1] = 0x8000000000000000;
      unint64_t v20 = sub_2544B9A98(v55, v11, v13, v12);
      uint64_t v37 = v35[2];
      BOOL v38 = (v36 & 1) == 0;
      uint64_t v39 = v37 + v38;
      if (__OFADD__(v37, v38)) {
        goto LABEL_25;
      }
      char v4 = v36;
      if (v35[3] >= v39)
      {
        if (v34) {
          goto LABEL_15;
        }
        goto LABEL_29;
      }
      sub_2544BA0E4(v39, v34);
      uint64_t v35 = v56;
      unint64_t v40 = sub_2544B9A98(v55, v11, v13, v12);
      if ((v4 & 1) != (v41 & 1)) {
        goto LABEL_31;
      }
      unint64_t v20 = v40;
LABEL_15:
      v16[1] = v35;
      swift_bridgeObjectRelease();
      uint64_t v42 = v16[1];
      if ((v4 & 1) == 0)
      {
        sub_2544BBB70(v20, v55, v11, v13, v12, 0, (void *)v16[1], 1.79769313e308, 0.0, 0.0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      uint64_t v43 = *(void *)(v42 + 56);
      uint64_t v44 = (double *)(v43 + 32 * v20);
      if (v15 < *v44) {
        *uint64_t v44 = v15;
      }
      double v46 = v44[1];
      uint64_t v45 = v44 + 1;
      if (v46 < v15) {
        *uint64_t v45 = v15;
      }
      uint64_t v47 = v43 + 32 * v20;
      uint64_t v48 = *(void *)(v47 + 24);
      BOOL v29 = __OFADD__(v48, 1);
      uint64_t v49 = v48 + 1;
      if (!v29)
      {
        *(void *)(v47 + 24) = v49;
        *(double *)(v47 + 16) = *(double *)(v47 + 16) + (v15 - *(double *)(v47 + 16)) / (double)v49;
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2544BD1DC((uint64_t)a2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for LedgerState);
        (*(void (**)(char *, void, uint64_t))(*(void *)(v53 - 8) + 56))(v10, 0, 1);
        swift_beginAccess();
        uint64_t v50 = v54(0);
        sub_2544A6C0C((uint64_t)v10, (uint64_t)v16 + *(int *)(v50 + 28), &qword_269DF3688);
        return swift_endAccess();
      }
LABEL_26:
      __break(1u);
LABEL_27:
      sub_2544BC110();
      uint64_t v18 = v56;
    }
  }
  sub_2544BA458(v23, isUniquelyReferenced_nonNull_native);
  uint64_t v18 = v56;
  unint64_t v24 = sub_2544B9B58(v13, v12);
  if ((v4 & 1) == (v25 & 1))
  {
    unint64_t v20 = v24;
    goto LABEL_6;
  }
  sub_254527A30();
  __break(1u);
LABEL_31:
  uint64_t result = sub_254527A30();
  __break(1u);
  return result;
}

void *sub_2544B90D0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B266E30);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2544BCC2C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2544B91E0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269DF38C0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2544BCB38(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2544B92F0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2544B9324(a1, a2, a3, a4, &qword_269DF3960, (uint64_t (*)(void))type metadata accessor for LedgerState, (uint64_t (*)(void))type metadata accessor for LedgerState);
}

uint64_t sub_2544B9324(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_254527710();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_2544BCF78(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_2544B95A4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3928);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2544BCD98(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2544B96B4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3950);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 88);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[11 * v8 + 4]) {
          memmove(v12, a4 + 4, 88 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2544BCE84(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2544B97E0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2544B9324(a1, a2, a3, a4, &qword_269DF3948, type metadata accessor for TaskStatusEvent, type metadata accessor for TaskStatusEvent);
}

uint64_t sub_2544B9814(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2544B9324(a1, a2, a3, a4, &qword_269DF3938, type metadata accessor for TaskTelemetry, type metadata accessor for TaskTelemetry);
}

uint64_t sub_2544B9848(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2544B9324(a1, a2, a3, a4, &qword_269DF3940, type metadata accessor for DeviceTelemetry, type metadata accessor for DeviceTelemetry);
}

uint64_t sub_2544B987C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2544B9324(a1, a2, a3, a4, &qword_269DF3930, (uint64_t (*)(void))type metadata accessor for CustomEventAnalytics, (uint64_t (*)(void))type metadata accessor for CustomEventAnalytics);
}

void *sub_2544B98B0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_2544B98C4(a1, a2, a3, a4, &qword_269DF3918, &qword_269DF3920);
}

void *sub_2544B98C4(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = _swift_stdlib_malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 17;
      }
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 4);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      uint64_t v16 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[2 * v11 + 4]) {
          memmove(v16, a4 + 4, 16 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2544BD0D4(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_2544B99E0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2544B9324(a1, a2, a3, a4, &qword_269DF3900, type metadata accessor for TaskErrorEvent, type metadata accessor for TaskErrorEvent);
}

void *sub_2544B9A14(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_2544B98C4(a1, a2, a3, a4, &qword_269DF3908, &qword_269DF3910);
}

uint64_t sub_2544B9A28(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2544B9324(a1, a2, a3, a4, &qword_269DF38E8, type metadata accessor for TaskCustomEvent, type metadata accessor for TaskCustomEvent);
}

void *sub_2544B9A5C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_2544B98C4(a1, a2, a3, a4, &qword_269DF38F0, &qword_269DF38F8);
}

void *sub_2544B9A70(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_2544B98C4(a1, a2, a3, a4, &qword_269DF38D8, &qword_269DF38E0);
}

void *sub_2544B9A84(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_2544B98C4(a1, a2, a3, a4, &qword_269DF38C8, &qword_269DF38D0);
}

unint64_t sub_2544B9A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_254527A80();
  swift_bridgeObjectRetain();
  sub_254527060();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_254527060();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_254527AB0();

  return sub_2544B9BD0(a1, a2, a3, a4, v8);
}

unint64_t sub_2544B9B58(uint64_t a1, uint64_t a2)
{
  sub_254527A80();
  sub_254527060();
  uint64_t v4 = sub_254527AB0();

  return sub_2544B9CD0(a1, a2, v4);
}

unint64_t sub_2544B9BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = a5 & ~v7;
  if ((*(void *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v13 = ~v7;
    uint64_t v14 = *(void *)(v5 + 48);
    do
    {
      uint64_t v15 = (void *)(v14 + 32 * v8);
      uint64_t v16 = v15[2];
      uint64_t v17 = v15[3];
      BOOL v18 = *v15 == a1 && v15[1] == a2;
      if (v18 || (sub_2545279E0() & 1) != 0)
      {
        BOOL v19 = v16 == a3 && v17 == a4;
        if (v19 || (sub_2545279E0() & 1) != 0) {
          break;
        }
      }
      unint64_t v8 = (v8 + 1) & v13;
    }
    while (((*(void *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

unint64_t sub_2544B9CD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_2545279E0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_2545279E0() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_2544B9DB4(uint64_t a1, int a2)
{
  return sub_2544BB16C(a1, a2, &qword_269DF3788, &qword_269DF3798);
}

uint64_t sub_2544B9DC8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B267088);
  char v38 = a2;
  uint64_t v6 = sub_254527750();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    BOOL v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_254527A80();
    sub_254527060();
    uint64_t result = sub_254527AB0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    BOOL v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *BOOL v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2544BA0D8(uint64_t a1, char a2)
{
  return sub_2544BAA78(a1, a2, &qword_269DF3778);
}

uint64_t sub_2544BA0E4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF37A0);
  char v43 = a2;
  uint64_t v6 = sub_254527750();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v41 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v40 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (uint64_t i = v5; ; v5 = i)
    {
      if (v10)
      {
        unint64_t v21 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v22 = v21 | (v13 << 6);
      }
      else
      {
        int64_t v23 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v40) {
          goto LABEL_33;
        }
        unint64_t v24 = v41[v23];
        ++v13;
        if (!v24)
        {
          int64_t v13 = v23 + 1;
          if (v23 + 1 >= v40) {
            goto LABEL_33;
          }
          unint64_t v24 = v41[v13];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v40)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v43)
              {
                uint64_t v39 = 1 << *(unsigned char *)(v5 + 32);
                if (v39 >= 64) {
                  bzero(v41, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v41 = -1 << v39;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v41[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v13 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v40) {
                  goto LABEL_33;
                }
                unint64_t v24 = v41[v13];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v25;
          }
        }
LABEL_30:
        unint64_t v10 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v13 << 6);
      }
      uint64_t v30 = 32 * v22;
      uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      uint64_t v35 = v31[2];
      uint64_t v34 = v31[3];
      uint64_t v36 = *(void *)(v5 + 56) + v30;
      long long v44 = *(_OWORD *)v36;
      uint64_t v37 = *(void *)(v36 + 16);
      uint64_t v38 = *(void *)(v36 + 24);
      if ((v43 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_254527A80();
      swift_bridgeObjectRetain();
      sub_254527060();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_254527060();
      swift_bridgeObjectRelease();
      uint64_t result = sub_254527AB0();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v16 == v27;
          if (v16 == v27) {
            unint64_t v16 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v11 + 8 * v16);
        }
        while (v29 == -1);
        unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 32 * v17;
      unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
      *unint64_t v19 = v33;
      v19[1] = v32;
      v19[2] = v35;
      v19[3] = v34;
      uint64_t v20 = *(void *)(v7 + 56) + v18;
      *(_OWORD *)uint64_t v20 = v44;
      *(void *)(v20 + 16) = v37;
      *(void *)(v20 + 24) = v38;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2544BA458(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF37A8);
  char v37 = a2;
  uint64_t v6 = sub_254527750();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_254527A80();
    sub_254527060();
    uint64_t result = sub_254527AB0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2544BA764(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v7 = a2;
  uint64_t v8 = sub_254527750();
  uint64_t v9 = v8;
  if (*(void *)(v6 + 16))
  {
    uint64_t v10 = 1 << *(unsigned char *)(v6 + 32);
    char v37 = (void *)(v6 + 64);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v6 + 64);
    int64_t v36 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = v8 + 64;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v12)
      {
        unint64_t v22 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v23 = v22 | (v15 << 6);
      }
      else
      {
        int64_t v24 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v24 >= v36) {
          goto LABEL_33;
        }
        unint64_t v25 = v37[v24];
        ++v15;
        if (!v25)
        {
          int64_t v15 = v24 + 1;
          if (v24 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v25 = v37[v15];
          if (!v25)
          {
            int64_t v26 = v24 + 2;
            if (v26 >= v36)
            {
LABEL_33:
              swift_release();
              uint64_t v4 = v3;
              if (v7)
              {
                uint64_t v35 = 1 << *(unsigned char *)(v6 + 32);
                if (v35 >= 64) {
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v37 = -1 << v35;
                }
                *(void *)(v6 + 16) = 0;
              }
              break;
            }
            unint64_t v25 = v37[v26];
            if (!v25)
            {
              while (1)
              {
                int64_t v15 = v26 + 1;
                if (__OFADD__(v26, 1)) {
                  goto LABEL_40;
                }
                if (v15 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v25 = v37[v15];
                ++v26;
                if (v25) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v15 = v26;
          }
        }
LABEL_30:
        unint64_t v12 = (v25 - 1) & v25;
        unint64_t v23 = __clz(__rbit64(v25)) + (v15 << 6);
      }
      uint64_t v31 = 16 * v23;
      uint64_t v32 = (uint64_t *)(*(void *)(v6 + 48) + v31);
      uint64_t v34 = *v32;
      uint64_t v33 = v32[1];
      long long v38 = *(_OWORD *)(*(void *)(v6 + 56) + v31);
      if ((v7 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_retain();
      }
      sub_254527A80();
      sub_254527060();
      uint64_t result = sub_254527AB0();
      uint64_t v16 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v17 = result & ~v16;
      unint64_t v18 = v17 >> 6;
      if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v29 = v18 == v28;
          if (v18 == v28) {
            unint64_t v18 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v13 + 8 * v18);
        }
        while (v30 == -1);
        unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
      }
      *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t v20 = 16 * v19;
      int64_t v21 = (void *)(*(void *)(v9 + 48) + v20);
      *int64_t v21 = v34;
      v21[1] = v33;
      *(_OWORD *)(*(void *)(v9 + 56) + v20) = v38;
      ++*(void *)(v9 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v4 = v9;
  return result;
}

uint64_t sub_2544BAA6C(uint64_t a1, char a2)
{
  return sub_2544BAA78(a1, a2, &qword_269DF3760);
}

uint64_t sub_2544BAA78(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v37 = a2;
  uint64_t v7 = sub_254527750();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35) {
      break;
    }
    unint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v35) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_254527A80();
    sub_254527060();
    uint64_t result = sub_254527AB0();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  unint64_t v23 = (void *)(v6 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_2544BAD8C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for MLHostAnalytics();
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3748);
  int v43 = a2;
  uint64_t v9 = sub_254527750();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  char v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    unint64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v24 = v41[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v40) {
              goto LABEL_34;
            }
            unint64_t v24 = v41[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    char v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(v42 + 72);
    uint64_t v30 = *(void *)(v8 + 56) + v29 * v21;
    if (v43)
    {
      sub_2544BD2A4(v30, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MLHostAnalytics);
    }
    else
    {
      sub_2544BD1DC(v30, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MLHostAnalytics);
      swift_bridgeObjectRetain();
    }
    sub_254527A80();
    sub_254527060();
    uint64_t result = sub_254527AB0();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    *unint64_t v19 = v28;
    v19[1] = v27;
    uint64_t result = sub_2544BD2A4((uint64_t)v7, *(void *)(v10 + 56) + v29 * v18, (uint64_t (*)(void))type metadata accessor for MLHostAnalytics);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v38;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_2544BB16C(uint64_t a1, int a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v6 = v4;
  uint64_t v48 = a3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v46 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  int v47 = a2;
  uint64_t v12 = sub_254527750();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  uint64_t v45 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  int v43 = v4;
  int64_t v44 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v18 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  while (1)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v44) {
      break;
    }
    char v26 = v45;
    unint64_t v27 = v45[v25];
    ++v20;
    if (!v27)
    {
      int64_t v20 = v25 + 1;
      if (v25 + 1 >= v44) {
        goto LABEL_34;
      }
      unint64_t v27 = v45[v20];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v44)
        {
LABEL_34:
          swift_release();
          uint64_t v6 = v43;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v45[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v20 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v44) {
              goto LABEL_34;
            }
            unint64_t v27 = v45[v20];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v20 << 6);
LABEL_22:
    uint64_t v29 = (uint64_t *)(*(void *)(v11 + 48) + 16 * v24);
    uint64_t v30 = *v29;
    uint64_t v31 = v29[1];
    uint64_t v32 = *(void *)(v46 + 72);
    uint64_t v33 = *(void *)(v11 + 56) + v32 * v24;
    if (v47)
    {
      sub_254493190(v33, (uint64_t)v10, v48);
    }
    else
    {
      sub_254493CFC(v33, (uint64_t)v10, v48);
      swift_bridgeObjectRetain();
    }
    sub_254527A80();
    sub_254527060();
    uint64_t result = sub_254527AB0();
    uint64_t v34 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v35 = result & ~v34;
    unint64_t v36 = v35 >> 6;
    if (((-1 << v35) & ~*(void *)(v18 + 8 * (v35 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v35) & ~*(void *)(v18 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v37 = 0;
      unint64_t v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v39 = v36 == v38;
        if (v36 == v38) {
          unint64_t v36 = 0;
        }
        v37 |= v39;
        uint64_t v40 = *(void *)(v18 + 8 * v36);
      }
      while (v40 == -1);
      unint64_t v21 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    int64_t v22 = (void *)(*(void *)(v13 + 48) + 16 * v21);
    *int64_t v22 = v30;
    v22[1] = v31;
    uint64_t result = sub_254493190((uint64_t)v10, *(void *)(v13 + 56) + v32 * v21, v48);
    ++*(void *)(v13 + 16);
  }
  swift_release();
  uint64_t v6 = v43;
  char v26 = v45;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v41 = 1 << *(unsigned char *)(v11 + 32);
  if (v41 >= 64) {
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v26 = -1 << v41;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v6 = v13;
  return result;
}

uint64_t sub_2544BB520(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_2544BB9E0(a1, a2, a3, a4, &qword_269DF3788, &qword_269DF3798);
}

void sub_2544BB534(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_2544B9B58(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_2544BBD7C();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_2544B9DC8(v15, a4 & 1);
  unint64_t v20 = sub_2544B9B58(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_254527A30();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  int64_t v22 = (uint64_t *)(v18[6] + 16 * v12);
  *int64_t v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v25;

  swift_bridgeObjectRetain();
}

uint64_t sub_2544BB6A4(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_2544BB6B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_2544BB6CC(a1, a2, a3, a4, a5, &qword_269DF3770);
}

uint64_t sub_2544BB6C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_2544BB6CC(a1, a2, a3, a4, a5, &qword_269DF3768);
}

uint64_t sub_2544BB6CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t *a6)
{
  uint64_t v8 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = sub_2544B9B58(a3, a4);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= v19 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v21 >= v19 && (a5 & 1) == 0)
  {
    sub_2544BC2C0(a6);
LABEL_7:
    int64_t v22 = (void *)*v8;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = (void *)(v22[7] + 16 * v16);
      uint64_t result = swift_release();
      *uint64_t v23 = a1;
      v23[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_2544BA764(v19, a5 & 1, a6);
  unint64_t v25 = sub_2544B9B58(a3, a4);
  if ((v20 & 1) != (v26 & 1))
  {
LABEL_17:
    uint64_t result = sub_254527A30();
    __break(1u);
    return result;
  }
  unint64_t v16 = v25;
  int64_t v22 = (void *)*v8;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  v22[(v16 >> 6) + 8] |= 1 << v16;
  unint64_t v27 = (uint64_t *)(v22[6] + 16 * v16);
  *unint64_t v27 = a3;
  v27[1] = a4;
  int64_t v28 = (void *)(v22[7] + 16 * v16);
  *int64_t v28 = a1;
  v28[1] = a2;
  uint64_t v29 = v22[2];
  BOOL v30 = __OFADD__(v29, 1);
  uint64_t v31 = v29 + 1;
  if (v30)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v22[2] = v31;

  return swift_bridgeObjectRetain();
}

uint64_t sub_2544BB860(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_2544B9B58(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    BOOL v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t v20 = type metadata accessor for MLHostAnalytics();
      return sub_2544BD30C(a1, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v12, (uint64_t (*)(void))type metadata accessor for MLHostAnalytics);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_2544BC638();
    goto LABEL_7;
  }
  sub_2544BAD8C(v15, a4 & 1);
  unint64_t v22 = sub_2544B9B58(a2, a3);
  if ((v16 & 1) != (v23 & 1))
  {
LABEL_15:
    uint64_t result = sub_254527A30();
    __break(1u);
    return result;
  }
  unint64_t v12 = v22;
  BOOL v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_2544BBC14(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

uint64_t sub_2544BB9CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_2544BB9E0(a1, a2, a3, a4, &qword_269DF3688, &qword_269DF3758);
}

uint64_t sub_2544BB9E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v9 = (void **)v6;
  BOOL v14 = (void *)*v6;
  unint64_t v16 = sub_2544B9B58(a2, a3);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 >= v19 && (a4 & 1) != 0)
  {
LABEL_7:
    unint64_t v22 = *v9;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7];
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(a5);
      return sub_2544A6C0C(a1, v23 + *(void *)(*(void *)(v24 - 8) + 72) * v16, a5);
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a4 & 1) == 0)
  {
    sub_2544BC8CC(a5, a6);
    goto LABEL_7;
  }
  sub_2544BB16C(v19, a4 & 1, a5, a6);
  unint64_t v26 = sub_2544B9B58(a2, a3);
  if ((v20 & 1) != (v27 & 1))
  {
LABEL_15:
    uint64_t result = sub_254527A30();
    __break(1u);
    return result;
  }
  unint64_t v16 = v26;
  unint64_t v22 = *v9;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  sub_2544BBCC0(v16, a2, a3, a1, v22, a5);

  return swift_bridgeObjectRetain();
}

uint64_t sub_2544BBB64(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_2544BBCC0(a1, a2, a3, a4, a5, &qword_269DF3788);
}

unint64_t sub_2544BBB70(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, double a8, double a9, double a10)
{
  a7[(result >> 6) + 8] |= 1 << result;
  uint64_t v10 = (void *)(a7[6] + 32 * result);
  *uint64_t v10 = a2;
  v10[1] = a3;
  v10[2] = a4;
  v10[3] = a5;
  uint64_t v11 = a7[7] + 32 * result;
  *(double *)uint64_t v11 = a8;
  *(double *)(v11 + 8) = a9;
  *(double *)(v11 + 16) = a10;
  *(void *)(v11 + 24) = a6;
  uint64_t v12 = a7[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a7[2] = v14;
  }
  return result;
}

unint64_t sub_2544BBBCC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  void *v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_2544BBC14(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  *uint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = type metadata accessor for MLHostAnalytics();
  uint64_t result = sub_2544BD2A4(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, (uint64_t (*)(void))type metadata accessor for MLHostAnalytics);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

uint64_t sub_2544BBCC0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t *a6)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v10 = (void *)(a5[6] + 16 * a1);
  *uint64_t v10 = a2;
  v10[1] = a3;
  uint64_t v11 = a5[7];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(a6);
  uint64_t result = sub_254493190(a4, v11 + *(void *)(*(void *)(v12 - 8) + 72) * a1, a6);
  uint64_t v14 = a5[2];
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    a5[2] = v16;
  }
  return result;
}

void *sub_2544BBD68()
{
  return sub_2544BC8CC(&qword_269DF3788, &qword_269DF3798);
}

id sub_2544BBD7C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B267088);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_254527740();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    char v20 = *(void **)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2544BBF30()
{
  return sub_2544BC488(&qword_269DF3778);
}

void *sub_2544BBF3C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF37A0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_254527740();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      int64_t v9 = v28 + 1;
      if (v28 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v6 + 8 * v9);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v29 - 1) & v29;
    unint64_t v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = v17[2];
    uint64_t v21 = v17[3];
    uint64_t v22 = *(void *)(v2 + 56) + v16;
    uint64_t v23 = *(void *)(v22 + 16);
    uint64_t v24 = *(void *)(v22 + 24);
    unint64_t v25 = (void *)(*(void *)(v4 + 48) + v16);
    long long v26 = *(_OWORD *)v22;
    *unint64_t v25 = v19;
    v25[1] = v18;
    void v25[2] = v20;
    v25[3] = v21;
    uint64_t v27 = *(void *)(v4 + 56) + v16;
    *(_OWORD *)uint64_t v27 = v26;
    *(void *)(v27 + 16) = v23;
    *(void *)(v27 + 24) = v24;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v13) {
    goto LABEL_26;
  }
  unint64_t v29 = *(void *)(v6 + 8 * v30);
  if (v29)
  {
    int64_t v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v9);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2544BC110()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF37A8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_254527740();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2544BC2C0(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_254527740();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v3 + 48) + v17);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    long long v21 = *(_OWORD *)(*(void *)(v3 + 56) + v17);
    uint64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *uint64_t v22 = v20;
    v22[1] = v19;
    *(_OWORD *)(*(void *)(v5 + 56) + v17) = v21;
    swift_bridgeObjectRetain();
    id result = (void *)swift_retain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2544BC47C()
{
  return sub_2544BC488(&qword_269DF3760);
}

void *sub_2544BC488(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_254527740();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *uint64_t v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2544BC638()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MLHostAnalytics();
  uint64_t v29 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3748);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_254527740();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v27 = v1;
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v29 + 72) * v16;
    sub_2544BD1DC(*(void *)(v5 + 56) + v21, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for MLHostAnalytics);
    uint64_t v22 = (void *)(*(void *)(v7 + 48) + v17);
    *uint64_t v22 = v19;
    v22[1] = v20;
    sub_2544BD2A4((uint64_t)v4, *(void *)(v7 + 56) + v21, (uint64_t (*)(void))type metadata accessor for MLHostAnalytics);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_2544BC8CC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v32 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v29 = v2;
  uint64_t v8 = *v2;
  uint64_t v9 = sub_254527740();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v29 = v10;
    return result;
  }
  id result = (void *)(v9 + 64);
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12) {
    id result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  }
  uint64_t v30 = v8 + 64;
  int64_t v14 = 0;
  *(void *)(v10 + 16) = *(void *)(v8 + 16);
  uint64_t v15 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v8 + 64);
  int64_t v31 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v31) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v30 + 8 * v26);
    ++v14;
    if (!v27)
    {
      int64_t v14 = v26 + 1;
      if (v26 + 1 >= v31) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v30 + 8 * v14);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v19 = __clz(__rbit64(v27)) + (v14 << 6);
LABEL_12:
    uint64_t v20 = 16 * v19;
    unint64_t v21 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v19);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    unint64_t v24 = *(void *)(v32 + 72) * v19;
    sub_254493CFC(*(void *)(v8 + 56) + v24, (uint64_t)v7, a1);
    int64_t v25 = (void *)(*(void *)(v10 + 48) + v20);
    *int64_t v25 = v22;
    v25[1] = v23;
    sub_254493190((uint64_t)v7, *(void *)(v10 + 56) + v24, a1);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v31) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v30 + 8 * v28);
  if (v27)
  {
    int64_t v14 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v14 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v14 >= v31) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v30 + 8 * v14);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2544BCB38(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_254527770();
  __break(1u);
  return result;
}

uint64_t sub_2544BCC2C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_254527770();
  __break(1u);
  return result;
}

unint64_t sub_2544BCD20()
{
  unint64_t result = qword_269DF38B8;
  if (!qword_269DF38B8)
  {
    sub_254526D90();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF38B8);
  }
  return result;
}

uint64_t sub_2544BCD78(uint64_t a1)
{
  return sub_2544B7244(a1, *(void *)(v1 + 16)) & 1;
}

char *sub_2544BCD98(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  unint64_t result = (char *)sub_254527770();
  __break(1u);
  return result;
}

uint64_t sub_2544BCE84(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 88 * a1 + 32;
    unint64_t v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_254527770();
  __break(1u);
  return result;
}

uint64_t sub_2544BCF78(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_254527770();
  __break(1u);
  return result;
}

uint64_t sub_2544BD0D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 16 * a1 + 32;
    unint64_t v7 = a3 + 16 * v5;
    if (v6 >= v7 || v6 + 16 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_254527770();
  __break(1u);
  return result;
}

uint64_t sub_2544BD1DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2544BD244(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2544BD2A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2544BD30C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

unint64_t sub_2544BD374()
{
  unint64_t result = qword_269DF4900;
  if (!qword_269DF4900)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269DF4900);
  }
  return result;
}

uint64_t sub_2544BD3B4()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

void sub_2544BD404(void *a1)
{
  sub_2544B3F84(a1, v1);
}

void *getMLHostTaskGraph()()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF36E8);
  uint64_t v0 = (void *)swift_allocObject();
  uint64_t v1 = MEMORY[0x263F8EE78];
  v0[4] = sub_2544A57B0(MEMORY[0x263F8EE78]);
  v0[2] = 0x724774736F484C4DLL;
  v0[3] = 0xEB00000000687061;
  unint64_t v2 = sub_2544A57B0(v1);
  swift_beginAccess();
  v0[4] = v2;
  swift_bridgeObjectRelease();
  swift_retain();
  sub_2544BDE8C((uint64_t)&unk_2703D50B8);
  swift_bridgeObjectRelease();
  swift_release();
  sub_2544A5F50(0x7261745320746F4ELL, 0xEB00000000646574, 0x676E696E6E7552, 0xE700000000000000);
  sub_2544A5F50(0x7261745320746F4ELL, 0xEB00000000646574, 0x6465727265666544, 0xE800000000000000);
  sub_2544A5F50(0x676E696E6E7552, 0xE700000000000000, 0x6574656C706D6F43, 0xE900000000000064);
  sub_2544A5F50(0x676E696E6E7552, 0xE700000000000000, 0x6465727265666544, 0xE800000000000000);
  sub_2544A5F50(0x676E696E6E7552, 0xE700000000000000, 0x64656C696146, 0xE600000000000000);
  sub_2544A5F50(0x6465727265666544, 0xE800000000000000, 0x676E696E6E7552, 0xE700000000000000);
  sub_2544A5F50(0x6465727265666544, 0xE800000000000000, 0x64656C696146, 0xE600000000000000);
  sub_2544A5F50(0x6465727265666544, 0xE800000000000000, 0x6574656C706D6F43, 0xE900000000000064);
  sub_2544A5F50(0x6574656C706D6F43, 0xE900000000000064, 0x7261745320746F4ELL, 0xEB00000000646574);
  sub_2544A5F50(0x64656C696146, 0xE600000000000000, 0x7261745320746F4ELL, 0xEB00000000646574);
  sub_2544A5F50(0x64656C696146, 0xE600000000000000, 0x64656C696146, 0xE600000000000000);
  return v0;
}

uint64_t sub_2544BD6EC(unsigned __int8 *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3780);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LedgerState();
  MEMORY[0x270FA5388](v5);
  unint64_t v7 = (uint64_t *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *a1;
  uint64_t v9 = 0xD00000000000001ALL;
  unint64_t v10 = 0x8000000254532870;
  switch(v8)
  {
    case 1:
      unint64_t v10 = 0xEC00000064657669;
      uint64_t v9 = 0x656365526B736154;
      goto LABEL_14;
    case 2:
      goto LABEL_14;
    case 3:
      uint64_t v11 = "TaskFailedToRegister";
      goto LABEL_6;
    case 4:
      uint64_t v11 = "TaskParametersStored";
LABEL_6:
      unint64_t v10 = (unint64_t)(v11 - 32) | 0x8000000000000000;
      uint64_t v9 = 0xD000000000000014;
      goto LABEL_14;
    case 5:
      uint64_t v9 = 0xD00000000000001BLL;
      unint64_t v10 = 0x80000002545328D0;
      goto LABEL_14;
    case 6:
      uint64_t v9 = 0x7261745320746F4ELL;
      goto LABEL_9;
    case 7:
      unint64_t v10 = 0xE700000000000000;
      uint64_t v9 = 0x676E696E6E7552;
      goto LABEL_14;
    case 8:
      unint64_t v10 = 0xE800000000000000;
      uint64_t v9 = 0x6465727265666544;
      goto LABEL_14;
    case 9:
      unint64_t v10 = 0xE900000000000064;
      uint64_t v9 = 0x6574656C706D6F43;
      goto LABEL_14;
    case 10:
      unint64_t v10 = 0xE600000000000000;
      uint64_t v9 = 0x64656C696146;
      goto LABEL_14;
    default:
      uint64_t v9 = 0x616572436B736154;
LABEL_9:
      unint64_t v10 = 0xEB00000000646574;
LABEL_14:
      sub_254526CF0();
      uint64_t *v7 = v9;
      v7[1] = v10;
      sub_25448D018((uint64_t)v7, (uint64_t)v4);
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3788);
      *(void *)&v4[*(int *)(v12 + 52)] = MEMORY[0x263F8EE78];
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v4, 0, 1, v12);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_254522188((uint64_t)v4, v9, v10);
      swift_endAccess();
      return sub_25448D07C((uint64_t)v7);
  }
}

void *getTaskStateMachine()()
{
  MLHostTask = getMLHostTaskGraph()();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3978);
  swift_allocObject();
  uint64_t v1 = sub_2544AB348((uint64_t)MLHostTask);
  swift_release();
  return v1;
}

uint64_t MLHostGraphWalks.walk.getter()
{
  switch(*v0)
  {
    case 1:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B266E30);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_25452AD20;
      *(void *)(result + 32) = 0x7261745320746F4ELL;
      *(void *)(result + 40) = 0xEB00000000646574;
      *(void *)(result + 48) = 0x676E696E6E7552;
      *(void *)(result + 56) = 0xE700000000000000;
      uint64_t v2 = 0x64656C696146;
      unint64_t v3 = 0xE600000000000000;
      goto LABEL_4;
    case 2:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B266E30);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_25452AD10;
      *(void *)(result + 32) = 0x7261745320746F4ELL;
      *(void *)(result + 40) = 0xEB00000000646574;
      *(void *)(result + 48) = 0x676E696E6E7552;
      *(void *)(result + 56) = 0xE700000000000000;
      *(void *)(result + 64) = 0x6465727265666544;
      *(void *)(result + 72) = 0xE800000000000000;
      return result;
    case 3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B266E30);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_25452AD00;
      *(void *)(result + 32) = 0x676E696E6E7552;
      *(void *)(result + 40) = 0xE700000000000000;
      uint64_t v4 = 0x6574656C706D6F43;
      unint64_t v5 = 0xE900000000000064;
      goto LABEL_9;
    case 4:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B266E30);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_25452AD00;
      *(void *)(result + 32) = 0x676E696E6E7552;
      *(void *)(result + 40) = 0xE700000000000000;
      uint64_t v4 = 0x64656C696146;
      unint64_t v5 = 0xE600000000000000;
      goto LABEL_9;
    case 5:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B266E30);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_25452AD00;
      *(void *)(result + 32) = 0x676E696E6E7552;
      *(void *)(result + 40) = 0xE700000000000000;
      uint64_t v4 = 0x6465727265666544;
      unint64_t v5 = 0xE800000000000000;
LABEL_9:
      *(void *)(result + 48) = v4;
      *(void *)(result + 56) = v5;
      break;
    default:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B266E30);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_25452AD20;
      *(void *)(result + 32) = 0x7261745320746F4ELL;
      *(void *)(result + 40) = 0xEB00000000646574;
      *(void *)(result + 48) = 0x676E696E6E7552;
      *(void *)(result + 56) = 0xE700000000000000;
      uint64_t v2 = 0x6574656C706D6F43;
      unint64_t v3 = 0xE900000000000064;
LABEL_4:
      *(void *)(result + 64) = v2;
      *(void *)(result + 72) = v3;
      *(void *)(result + 80) = 0x7261745320746F4ELL;
      *(void *)(result + 88) = 0xEB00000000646574;
      break;
  }
  return result;
}

LighthouseBackground::MLHostGraphWalks_optional __swiftcall MLHostGraphWalks.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_254527790();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static MLHostGraphWalks.allCases.getter()
{
  return &unk_2703D5228;
}

uint64_t MLHostGraphWalks.rawValue.getter()
{
  return *(void *)&aCyclecomcyclef_0[8 * *v0];
}

uint64_t sub_2544BDD74(char *a1, char *a2)
{
  return sub_254490AC4(*a1, *a2);
}

uint64_t sub_2544BDD80()
{
  return sub_25451A38C();
}

uint64_t sub_2544BDD88()
{
  return sub_25451AFE8();
}

uint64_t sub_2544BDD90()
{
  return sub_25451B8F4();
}

LighthouseBackground::MLHostGraphWalks_optional sub_2544BDD98(Swift::String *a1)
{
  return MLHostGraphWalks.init(rawValue:)(*a1);
}

uint64_t sub_2544BDDA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = MLHostGraphWalks.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_2544BDDCC(void *a1@<X8>)
{
  *a1 = &unk_2703D5228;
}

uint64_t sub_2544BDDDC()
{
  return sub_254527170();
}

uint64_t sub_2544BDE3C()
{
  return sub_254527150();
}

uint64_t sub_2544BDE8C(uint64_t a1)
{
  uint64_t v2 = v1;
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_2544FEDE8(0, v3, 0);
    uint64_t v4 = v13;
    uint64_t v6 = (unsigned __int8 *)(a1 + 32);
    while (1)
    {
      unsigned __int8 v7 = *v6++;
      unsigned __int8 v12 = v7;
      sub_2544BD6EC(&v12);
      if (v2) {
        break;
      }
      uint64_t v2 = 0;
      uint64_t v13 = v4;
      unint64_t v9 = *(void *)(v4 + 16);
      unint64_t v8 = *(void *)(v4 + 24);
      unint64_t v10 = v9 + 1;
      if (v9 >= v8 >> 1)
      {
        sub_2544FEDE8(v8 > 1, v9 + 1, 1);
        uint64_t v4 = v13;
      }
      *(void *)(v4 + 16) = v10;
      if (!--v3) {
        return v4;
      }
    }
    swift_release();
  }
  return v4;
}

unint64_t sub_2544BDF78()
{
  unint64_t result = qword_269DF3980;
  if (!qword_269DF3980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3980);
  }
  return result;
}

unint64_t sub_2544BDFD0()
{
  unint64_t result = qword_269DF3988;
  if (!qword_269DF3988)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DF3990);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3988);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MLHostGraphWalks(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2544BE0F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MLHostGraphWalks()
{
  return &type metadata for MLHostGraphWalks;
}

unint64_t sub_2544BE130()
{
  unint64_t result = qword_269DF3998;
  if (!qword_269DF3998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3998);
  }
  return result;
}

void static DeviceOSType.currentType()(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void *sub_2544BE18C()
{
  swift_retain();
  sub_2545276F0();
  swift_release();
  sub_254527780();
  if (*((void *)&v8 + 1))
  {
    uint64_t v0 = (void *)MEMORY[0x263F8EE78];
    do
    {
      v5[0] = v6;
      v5[1] = v7;
      v5[2] = v8;
      if (*((void *)&v6 + 1))
      {
        sub_254527080();
        sub_254527080();
        sub_254527700();
        sub_2544C04E4((uint64_t)v5);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v0 = sub_2544B90D0(0, v0[2] + 1, 1, v0);
        }
        unint64_t v2 = v0[2];
        unint64_t v1 = v0[3];
        if (v2 >= v1 >> 1) {
          uint64_t v0 = sub_2544B90D0((void *)(v1 > 1), v2 + 1, 1, v0);
        }
        v0[2] = v2 + 1;
        int v3 = &v0[2 * v2];
        v3[4] = 0;
        v3[5] = 0xE000000000000000;
      }
      else
      {
        sub_2544C04E4((uint64_t)v5);
      }
      sub_254527780();
    }
    while (*((void *)&v8 + 1));
  }
  else
  {
    uint64_t v0 = (void *)MEMORY[0x263F8EE78];
  }
  swift_release();
  return v0;
}

LighthouseBackground::DeviceOSType_optional __swiftcall DeviceOSType.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_254527790();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

void *static DeviceOSType.allCases.getter()
{
  return &unk_2703D5160;
}

uint64_t DeviceOSType.rawValue.getter()
{
  return qword_25452B368[*v0];
}

uint64_t sub_2544BE3B8(char *a1, char *a2)
{
  return sub_254491048(*a1, *a2);
}

uint64_t sub_2544BE3C4()
{
  return sub_25451A3F8();
}

uint64_t sub_2544BE3CC()
{
  return sub_25451B330();
}

uint64_t sub_2544BE3D4()
{
  return sub_25451B51C();
}

LighthouseBackground::DeviceOSType_optional sub_2544BE3DC(Swift::String *a1)
{
  return DeviceOSType.init(rawValue:)(*a1);
}

uint64_t sub_2544BE3E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DeviceOSType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_2544BE410(void *a1@<X8>)
{
  *a1 = &unk_2703D5160;
}

uint64_t sub_2544BE420()
{
  return sub_254527170();
}

uint64_t sub_2544BE480()
{
  return sub_254527150();
}

uint64_t MLHostConfig.cloudEnvironment.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MLHostConfig.cloudEnvironment.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*MLHostConfig.cloudEnvironment.modify())()
{
  return nullsub_1;
}

uint64_t MLHostConfig.cloudContainer.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MLHostConfig.cloudContainer.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*MLHostConfig.cloudContainer.modify())()
{
  return nullsub_1;
}

uint64_t MLHostConfig.apsEnvironment.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MLHostConfig.apsEnvironment.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*MLHostConfig.apsEnvironment.modify())()
{
  return nullsub_1;
}

void __swiftcall MLHostConfig.init(cloudEnvironment:cloudContainer:apsEnvironment:)(LighthouseBackground::MLHostConfig *__return_ptr retstr, Swift::String cloudEnvironment, Swift::String_optional cloudContainer, Swift::String_optional apsEnvironment)
{
  retstr->cloudEnvironment = cloudEnvironment;
  retstr->cloudContainer = cloudContainer;
  retstr->apsEnvironment = apsEnvironment;
}

uint64_t sub_2544BE678(char a1)
{
  if (!a1) {
    return 0xD000000000000010;
  }
  if (a1 == 1) {
    return 0x6E6F4364756F6C63;
  }
  return 0x7269766E45737061;
}

uint64_t sub_2544BE6EC()
{
  return sub_2544BE678(*v0);
}

uint64_t sub_2544BE6F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544C0194(a1, a2);
  *a3 = result;
  return result;
}

void sub_2544BE71C(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_2544BE728(uint64_t a1)
{
  unint64_t v2 = sub_2544BE954();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544BE764(uint64_t a1)
{
  unint64_t v2 = sub_2544BE954();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MLHostConfig.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF39A0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  long long v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  v11[3] = v1[3];
  v11[4] = v7;
  uint64_t v8 = v1[4];
  v11[1] = v1[5];
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544BE954();
  sub_254527B00();
  char v14 = 0;
  uint64_t v9 = v11[5];
  sub_254527930();
  if (!v9)
  {
    char v13 = 1;
    sub_2545278C0();
    char v12 = 2;
    sub_2545278C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2544BE954()
{
  unint64_t result = qword_269DF39A8;
  if (!qword_269DF39A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF39A8);
  }
  return result;
}

uint64_t MLHostConfig.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF39B0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544BE954();
  sub_254527AF0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v26 = 0;
    uint64_t v9 = sub_254527830();
    uint64_t v12 = v11;
    uint64_t v23 = v9;
    char v25 = 1;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_2545277C0();
    uint64_t v15 = v14;
    uint64_t v22 = v13;
    char v24 = 2;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_2545277C0();
    uint64_t v18 = v17;
    unint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v21 = v16;
    v19(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *a2 = v23;
    a2[1] = v12;
    a2[2] = v22;
    a2[3] = v15;
    a2[4] = v21;
    a2[5] = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2544BEC44@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return MLHostConfig.init(from:)(a1, a2);
}

uint64_t sub_2544BEC5C(void *a1)
{
  return MLHostConfig.encode(to:)(a1);
}

uint64_t MLHostConfig.description.getter()
{
  uint64_t v1 = sub_254527AE0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  uint64_t v5 = v0[1];
  uint64_t v8 = v0[2];
  uint64_t v7 = v0[3];
  uint64_t v10 = v0[4];
  uint64_t v9 = v0[5];
  v15[3] = &type metadata for MLHostConfig;
  uint64_t v11 = (void *)swift_allocObject();
  v15[0] = v11;
  v11[2] = v6;
  v11[3] = v5;
  v11[4] = v8;
  v11[5] = v7;
  void v11[6] = v10;
  v11[7] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_254527AC0();
  sub_254527AD0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t v12 = sub_2544BE18C();
  swift_release();
  strcpy((char *)v15, "MLHostConfig(");
  HIWORD(v15[1]) = -4864;
  uint64_t v14 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B266BC0);
  sub_25448FFD4(&qword_26B266BD0, &qword_26B266BC0);
  sub_254526F70();
  swift_bridgeObjectRelease();
  sub_254527080();
  swift_bridgeObjectRelease();
  sub_254527080();
  return v15[0];
}

uint64_t sub_2544BEE7C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t ExtensionRecord.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ExtensionRecord.bundleIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ExtensionRecord.url.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ExtensionRecord.extensionPointIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall ExtensionRecord.init(name:bundleIdentifier:url:extensionPointIdentifier:)(LighthouseBackground::ExtensionRecord *__return_ptr retstr, Swift::String name, Swift::String bundleIdentifier, Swift::String url, Swift::String extensionPointIdentifier)
{
  retstr->name = name;
  retstr->bundleIdentifier = bundleIdentifier;
  retstr->url = url;
  retstr->extensionPointIdentifier = extensionPointIdentifier;
}

unint64_t sub_2544BEF9C(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      return result;
    case 2:
      unint64_t result = 7107189;
      break;
    case 3:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      unint64_t result = 1701667182;
      break;
  }
  return result;
}

unint64_t sub_2544BF024()
{
  return sub_2544BEF9C(*v0);
}

uint64_t sub_2544BF02C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544C0310(a1, a2);
  *a3 = result;
  return result;
}

void sub_2544BF054(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_2544BF060(uint64_t a1)
{
  unint64_t v2 = sub_2544BF2CC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544BF09C(uint64_t a1)
{
  unint64_t v2 = sub_2544BF2CC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ExtensionRecord.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF39B8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  v12[5] = v1[3];
  v12[6] = v7;
  uint64_t v8 = v1[4];
  uint64_t v12[3] = v1[5];
  v12[4] = v8;
  uint64_t v9 = v1[6];
  v12[1] = v1[7];
  v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544BF2CC();
  sub_254527B00();
  char v16 = 0;
  uint64_t v10 = v12[7];
  sub_254527930();
  if (!v10)
  {
    char v15 = 1;
    sub_254527930();
    char v14 = 2;
    sub_254527930();
    char v13 = 3;
    sub_254527930();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2544BF2CC()
{
  unint64_t result = qword_269DF39C0;
  if (!qword_269DF39C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF39C0);
  }
  return result;
}

uint64_t ExtensionRecord.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF39C8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544BF2CC();
  sub_254527AF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v31 = 0;
  uint64_t v9 = sub_254527830();
  uint64_t v11 = v10;
  uint64_t v26 = v9;
  char v30 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_254527830();
  uint64_t v27 = v13;
  uint64_t v25 = v12;
  char v29 = 2;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_254527830();
  uint64_t v24 = v14;
  char v28 = 3;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_254527830();
  uint64_t v18 = v17;
  unint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v22 = v15;
  v19(v8, v5);
  swift_bridgeObjectRetain();
  uint64_t v20 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v26;
  a2[1] = v11;
  uint64_t v21 = v24;
  a2[2] = v25;
  a2[3] = v20;
  a2[4] = v23;
  a2[5] = v21;
  a2[6] = v22;
  a2[7] = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_2544BF664()
{
  unint64_t result = qword_269DF39D0;
  if (!qword_269DF39D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF39D0);
  }
  return result;
}

uint64_t sub_2544BF6B8()
{
  return sub_25448FFD4(&qword_269DF39D8, &qword_26B266EF8);
}

uint64_t sub_2544BF6F4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ExtensionRecord.init(from:)(a1, a2);
}

uint64_t sub_2544BF70C(void *a1)
{
  return ExtensionRecord.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for DeviceOSType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2544BF7F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceOSType()
{
  return &type metadata for DeviceOSType;
}

uint64_t destroy for MLHostConfig()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for MLHostConfig(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MLHostConfig(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for MLHostConfig(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MLHostConfig(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MLHostConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MLHostConfig()
{
  return &type metadata for MLHostConfig;
}

uint64_t destroy for ExtensionRecord()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ExtensionRecord(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ExtensionRecord(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *assignWithTake for ExtensionRecord(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExtensionRecord(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExtensionRecord(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExtensionRecord()
{
  return &type metadata for ExtensionRecord;
}

uint64_t getEnumTagSinglePayload for TaskRequestPriority(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ExtensionRecord.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2544BFE48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExtensionRecord.CodingKeys()
{
  return &type metadata for ExtensionRecord.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for MLHostConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2544BFF4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MLHostConfig.CodingKeys()
{
  return &type metadata for MLHostConfig.CodingKeys;
}

unint64_t sub_2544BFF88()
{
  unint64_t result = qword_269DF39E0;
  if (!qword_269DF39E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF39E0);
  }
  return result;
}

unint64_t sub_2544BFFE0()
{
  unint64_t result = qword_269DF39E8;
  if (!qword_269DF39E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF39E8);
  }
  return result;
}

unint64_t sub_2544C0038()
{
  unint64_t result = qword_269DF39F0;
  if (!qword_269DF39F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF39F0);
  }
  return result;
}

unint64_t sub_2544C0090()
{
  unint64_t result = qword_269DF39F8;
  if (!qword_269DF39F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF39F8);
  }
  return result;
}

unint64_t sub_2544C00E8()
{
  unint64_t result = qword_269DF3A00;
  if (!qword_269DF3A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3A00);
  }
  return result;
}

unint64_t sub_2544C0140()
{
  unint64_t result = qword_269DF3A08;
  if (!qword_269DF3A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3A08);
  }
  return result;
}

uint64_t sub_2544C0194(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x8000000254533870 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F4364756F6C63 && a2 == 0xEE0072656E696174 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7269766E45737061 && a2 == 0xEE00746E656D6E6FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_2545279E0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2544C0310(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v3 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000254532F50 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000254533890)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_2545279E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_2544C0490()
{
  unint64_t result = qword_269DF3A10;
  if (!qword_269DF3A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3A10);
  }
  return result;
}

uint64_t sub_2544C04E4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B266BB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ListTasksRequest.limit.getter()
{
  return *(void *)v0;
}

uint64_t ListTasksRequest.limit.setter(uint64_t result, char a2)
{
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*ListTasksRequest.limit.modify())()
{
  return nullsub_1;
}

LighthouseBackground::ListTasksRequest __swiftcall ListTasksRequest.init(limit:)(LighthouseBackground::ListTasksRequest limit)
{
  *(void *)uint64_t v1 = limit.limit.value;
  *(unsigned char *)(v1 + 8) = limit.limit.is_nil;
  return limit;
}

uint64_t sub_2544C059C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544CE554(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2544C05C8(uint64_t a1)
{
  unint64_t v2 = sub_2544C077C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544C0604(uint64_t a1)
{
  unint64_t v2 = sub_2544C077C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ListTasksRequest.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3A18);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544C077C();
  sub_254527B00();
  sub_2545278F0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_2544C077C()
{
  unint64_t result = qword_269DF3A20;
  if (!qword_269DF3A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3A20);
  }
  return result;
}

uint64_t ListTasksRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3A28);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544C077C();
  sub_254527AF0();
  if (!v2)
  {
    uint64_t v9 = sub_2545277F0();
    char v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)a2 = v9;
    *(unsigned char *)(a2 + 8) = v11 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2544C0948@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ListTasksRequest.init(from:)(a1, a2);
}

uint64_t sub_2544C0960(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3A18);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544C077C();
  sub_254527B00();
  sub_2545278F0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t ListTasksResponse.tasks.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ListTasksResponse.tasks.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*ListTasksResponse.tasks.modify())()
{
  return nullsub_1;
}

LighthouseBackground::ListTasksResponse __swiftcall ListTasksResponse.init(tasks:)(LighthouseBackground::ListTasksResponse tasks)
{
  v1->tasks._rawValue = tasks.tasks._rawValue;
  return tasks;
}

uint64_t sub_2544C0AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544CE7DC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2544C0B28(uint64_t a1)
{
  unint64_t v2 = sub_2544C0BDC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544C0B64(uint64_t a1)
{
  unint64_t v2 = sub_2544C0BDC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ListTasksResponse.encode(to:)(void *a1)
{
  return sub_2544C2C20(a1, &qword_269DF3A30, (uint64_t)sub_2544C0BDC);
}

unint64_t sub_2544C0BDC()
{
  unint64_t result = qword_269DF3A38;
  if (!qword_269DF3A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3A38);
  }
  return result;
}

uint64_t ListTasksResponse.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_2544C2E44(a1, &qword_269DF3A58, (void (*)(void))sub_2544C0BDC, a2);
}

uint64_t sub_2544C0C6C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DF3A40);
    sub_2544C0D00(a2, (void (*)(uint64_t))type metadata accessor for MLHostTask);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2544C0D00(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2544C0D48@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ListTasksResponse.init(from:)(a1, a2);
}

uint64_t sub_2544C0D60(void *a1)
{
  return ListTasksResponse.encode(to:)(a1);
}

uint64_t GetTaskRequest.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t GetTaskRequest.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*GetTaskRequest.name.modify())()
{
  return nullsub_1;
}

LighthouseBackground::GetTaskRequest __swiftcall GetTaskRequest.init(name:)(LighthouseBackground::GetTaskRequest name)
{
  *uint64_t v1 = name;
  return name;
}

uint64_t sub_2544C0E0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544CE5D4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2544C0E38(uint64_t a1)
{
  unint64_t v2 = sub_2544C0F00();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544C0E74(uint64_t a1)
{
  unint64_t v2 = sub_2544C0F00();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t GetTaskRequest.encode(to:)(void *a1)
{
  return sub_2544C4708(a1, &qword_269DF3A70, (void (*)(void))sub_2544C0F00, (uint64_t)&type metadata for GetTaskRequest.CodingKeys, MEMORY[0x263F8E060]);
}

unint64_t sub_2544C0F00()
{
  unint64_t result = qword_269DF3A78;
  if (!qword_269DF3A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3A78);
  }
  return result;
}

uint64_t GetTaskRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2544C48E8(a1, &qword_269DF3A80, (void (*)(void))sub_2544C0F00, a2);
}

uint64_t sub_2544C0F90@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return GetTaskRequest.init(from:)(a1, a2);
}

uint64_t sub_2544C0FA8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C4AD0(a1, a2, a3, &qword_269DF3A70, (void (*)(void))sub_2544C0F00, (uint64_t)&type metadata for GetTaskRequest.CodingKeys, MEMORY[0x263F8E060]);
}

uint64_t GetTaskResponse.task.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2544C1BBC(v1, a1, type metadata accessor for MLHostTask);
}

uint64_t GetTaskResponse.task.setter(uint64_t a1)
{
  return sub_2544C1C54(a1, v1, type metadata accessor for MLHostTask);
}

uint64_t (*GetTaskResponse.task.modify())()
{
  return nullsub_1;
}

uint64_t GetTaskResponse.init(task:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2544C15A4(a1, a2, type metadata accessor for MLHostTask);
}

uint64_t sub_2544C10B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544CE64C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2544C10DC(uint64_t a1)
{
  unint64_t v2 = sub_2544C12C8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544C1118(uint64_t a1)
{
  unint64_t v2 = sub_2544C12C8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t GetTaskResponse.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B267078);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544C12C8();
  sub_254527B00();
  type metadata accessor for MLHostTask(0);
  sub_2544C0D00(&qword_269DF3A50, (void (*)(uint64_t))type metadata accessor for MLHostTask);
  sub_254527970();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_2544C12C8()
{
  unint64_t result = qword_26B267018;
  if (!qword_26B267018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B267018);
  }
  return result;
}

uint64_t GetTaskResponse.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v13 = a2;
  uint64_t v4 = type metadata accessor for MLHostTask(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v15 = (uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B267068);
  uint64_t v14 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  int v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t TaskResponse = type metadata accessor for GetTaskResponse(0);
  MEMORY[0x270FA5388](TaskResponse - 8);
  char v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544C12C8();
  sub_254527AF0();
  if (!v2)
  {
    sub_2544C0D00(&qword_269DF3A68, (void (*)(uint64_t))type metadata accessor for MLHostTask);
    sub_254527870();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
    sub_2544C15A4(v15, (uint64_t)v11, type metadata accessor for MLHostTask);
    sub_2544C15A4((uint64_t)v11, v13, type metadata accessor for GetTaskResponse);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t type metadata accessor for GetTaskResponse(uint64_t a1)
{
  return sub_2544991E0(a1, (uint64_t *)&unk_26B267048);
}

uint64_t sub_2544C15A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2544C160C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return GetTaskResponse.init(from:)(a1, a2);
}

uint64_t sub_2544C1624(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B267078);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544C12C8();
  sub_254527B00();
  type metadata accessor for MLHostTask(0);
  sub_2544C0D00(&qword_269DF3A50, (void (*)(uint64_t))type metadata accessor for MLHostTask);
  sub_254527970();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t ResetTasksRequest.reload.getter()
{
  return *v0;
}

uint64_t (*ResetTasksRequest.reload.modify())()
{
  return nullsub_1;
}

LighthouseBackground::ResetTasksRequest __swiftcall ResetTasksRequest.init(reload:)(LighthouseBackground::ResetTasksRequest reload)
{
  v1->reload = reload.reload;
  return reload;
}

uint64_t sub_2544C17CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544CEF44(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2544C17F8(uint64_t a1)
{
  unint64_t v2 = sub_2544C18AC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544C1834(uint64_t a1)
{
  unint64_t v2 = sub_2544C18AC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ResetTasksRequest.encode(to:)(void *a1)
{
  return sub_2544C6A3C(a1, &qword_269DF3A88, (void (*)(void))sub_2544C18AC);
}

unint64_t sub_2544C18AC()
{
  unint64_t result = qword_269DF3A90;
  if (!qword_269DF3A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3A90);
  }
  return result;
}

uint64_t ResetTasksRequest.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_2544C6C0C(a1, &qword_269DF3A98, (void (*)(void))sub_2544C18AC, a2);
}

uint64_t sub_2544C193C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ResetTasksRequest.init(from:)(a1, a2);
}

uint64_t sub_2544C1954(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C86A4(a1, a2, a3, &qword_269DF3A88, (void (*)(void))sub_2544C18AC);
}

uint64_t ResetTasksResponse.reloaded.getter()
{
  return *v0;
}

uint64_t (*ResetTasksResponse.reloaded.modify())()
{
  return nullsub_1;
}

LighthouseBackground::ResetTasksResponse __swiftcall ResetTasksResponse.init(reloaded:)(LighthouseBackground::ResetTasksResponse reloaded)
{
  v1->reloaded = reloaded.reloaded;
  return reloaded;
}

uint64_t sub_2544C19C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544CEFC4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2544C19F0(uint64_t a1)
{
  unint64_t v2 = sub_2544C1AA4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544C1A2C(uint64_t a1)
{
  unint64_t v2 = sub_2544C1AA4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ResetTasksResponse.encode(to:)(void *a1)
{
  return sub_2544C6A3C(a1, &qword_269DF3AA0, (void (*)(void))sub_2544C1AA4);
}

unint64_t sub_2544C1AA4()
{
  unint64_t result = qword_269DF3AA8;
  if (!qword_269DF3AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3AA8);
  }
  return result;
}

uint64_t ResetTasksResponse.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_2544C6C0C(a1, &qword_269DF3AB0, (void (*)(void))sub_2544C1AA4, a2);
}

uint64_t sub_2544C1B34@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ResetTasksResponse.init(from:)(a1, a2);
}

uint64_t sub_2544C1B4C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C86A4(a1, a2, a3, &qword_269DF3AA0, (void (*)(void))sub_2544C1AA4);
}

uint64_t AddTaskRequest.taskDefinition.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2544C1BBC(v1, a1, type metadata accessor for TaskDefinition);
}

uint64_t sub_2544C1BBC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t AddTaskRequest.taskDefinition.setter(uint64_t a1)
{
  return sub_2544C1C54(a1, v1, type metadata accessor for TaskDefinition);
}

uint64_t sub_2544C1C54(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t (*AddTaskRequest.taskDefinition.modify())()
{
  return nullsub_1;
}

uint64_t AddTaskRequest.init(taskDefinition:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2544C15A4(a1, a2, type metadata accessor for TaskDefinition);
}

uint64_t sub_2544C1D10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544CE6C4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2544C1D3C(uint64_t a1)
{
  unint64_t v2 = sub_2544C1F28();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544C1D78(uint64_t a1)
{
  unint64_t v2 = sub_2544C1F28();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AddTaskRequest.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3AB8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544C1F28();
  sub_254527B00();
  type metadata accessor for TaskDefinition(0);
  sub_2544C0D00(&qword_269DF3488, (void (*)(uint64_t))type metadata accessor for TaskDefinition);
  sub_254527970();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_2544C1F28()
{
  unint64_t result = qword_269DF3AC0;
  if (!qword_269DF3AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3AC0);
  }
  return result;
}

uint64_t AddTaskRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v13 = a2;
  uint64_t v4 = type metadata accessor for TaskDefinition(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v15 = (uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3AC8);
  uint64_t v14 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  int v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AddTaskRequest(0);
  MEMORY[0x270FA5388](v9 - 8);
  char v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544C1F28();
  sub_254527AF0();
  if (!v2)
  {
    sub_2544C0D00(&qword_26B266D68, (void (*)(uint64_t))type metadata accessor for TaskDefinition);
    sub_254527870();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
    sub_2544C15A4(v15, (uint64_t)v11, type metadata accessor for TaskDefinition);
    sub_2544C15A4((uint64_t)v11, v13, type metadata accessor for AddTaskRequest);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t type metadata accessor for AddTaskRequest(uint64_t a1)
{
  return sub_2544991E0(a1, (uint64_t *)&unk_269DF3E88);
}

uint64_t sub_2544C2204@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AddTaskRequest.init(from:)(a1, a2);
}

uint64_t sub_2544C221C(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3AB8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544C1F28();
  sub_254527B00();
  type metadata accessor for TaskDefinition(0);
  sub_2544C0D00(&qword_269DF3488, (void (*)(uint64_t))type metadata accessor for TaskDefinition);
  sub_254527970();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t AddTaskResponse.result.getter()
{
  return *v0;
}

uint64_t AddTaskResponse.result.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*AddTaskResponse.result.modify())()
{
  return nullsub_1;
}

void AddTaskResponse.error.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

unsigned char *AddTaskResponse.error.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 1) = *result;
  return result;
}

uint64_t (*AddTaskResponse.error.modify())()
{
  return nullsub_1;
}

LighthouseBackground::AddTaskResponse __swiftcall AddTaskResponse.init(result:error:)(Swift::Bool result, LighthouseBackground::TaskValidationError_optional error)
{
  char v3 = *(unsigned char *)error.value;
  *uint64_t v2 = result;
  v2[1] = v3;
  v4.unint64_t result = result;
  return v4;
}

uint64_t sub_2544C2408(char a1)
{
  if (a1) {
    return 0x726F727265;
  }
  else {
    return 0x746C75736572;
  }
}

uint64_t sub_2544C2438()
{
  return sub_2544C2408(*v0);
}

uint64_t sub_2544C2440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544CE8E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2544C2468(uint64_t a1)
{
  unint64_t v2 = sub_2544C2664();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544C24A4(uint64_t a1)
{
  unint64_t v2 = sub_2544C2664();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AddTaskResponse.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3AD0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *(unsigned __int8 *)(v1 + 1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544C2664();
  sub_254527B00();
  char v13 = 0;
  sub_254527940();
  if (!v2)
  {
    char v12 = v10;
    char v11 = 1;
    sub_2544C26B8();
    sub_254527910();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_2544C2664()
{
  unint64_t result = qword_269DF3AD8;
  if (!qword_269DF3AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3AD8);
  }
  return result;
}

unint64_t sub_2544C26B8()
{
  unint64_t result = qword_269DF3AE0;
  if (!qword_269DF3AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3AE0);
  }
  return result;
}

uint64_t AddTaskResponse.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3AE8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544C2664();
  sub_254527AF0();
  if (!v2)
  {
    char v15 = 0;
    char v9 = sub_254527840();
    char v13 = 1;
    sub_2544C28C8();
    sub_254527810();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v10 = v14;
    *a2 = v9 & 1;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_2544C28C8()
{
  unint64_t result = qword_269DF3AF0;
  if (!qword_269DF3AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3AF0);
  }
  return result;
}

uint64_t sub_2544C291C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return AddTaskResponse.init(from:)(a1, a2);
}

uint64_t sub_2544C2934(void *a1)
{
  return AddTaskResponse.encode(to:)(a1);
}

uint64_t CleanTasksRequest.deep.getter()
{
  return *v0;
}

uint64_t CleanTasksRequest.deep.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*CleanTasksRequest.deep.modify())()
{
  return nullsub_1;
}

LighthouseBackground::CleanTasksRequest __swiftcall CleanTasksRequest.init(deep:)(LighthouseBackground::CleanTasksRequest deep)
{
  v1->deep = deep.deep;
  return deep;
}

uint64_t sub_2544C2988@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544CE764(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2544C29B4(uint64_t a1)
{
  unint64_t v2 = sub_2544C2A68();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544C29F0(uint64_t a1)
{
  unint64_t v2 = sub_2544C2A68();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CleanTasksRequest.encode(to:)(void *a1)
{
  return sub_2544C6A3C(a1, &qword_269DF3AF8, (void (*)(void))sub_2544C2A68);
}

unint64_t sub_2544C2A68()
{
  unint64_t result = qword_269DF3B00;
  if (!qword_269DF3B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3B00);
  }
  return result;
}

uint64_t CleanTasksRequest.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_2544C6C0C(a1, &qword_269DF3B08, (void (*)(void))sub_2544C2A68, a2);
}

uint64_t sub_2544C2AF8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return CleanTasksRequest.init(from:)(a1, a2);
}

uint64_t sub_2544C2B10(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C86A4(a1, a2, a3, &qword_269DF3AF8, (void (*)(void))sub_2544C2A68);
}

uint64_t (*CleanTasksResponse.tasks.modify())()
{
  return nullsub_1;
}

uint64_t sub_2544C2B6C(uint64_t a1)
{
  unint64_t v2 = sub_2544C2DB4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544C2BA8(uint64_t a1)
{
  unint64_t v2 = sub_2544C2DB4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CleanTasksResponse.encode(to:)(void *a1)
{
  return sub_2544C2C20(a1, &qword_269DF3B10, (uint64_t)sub_2544C2DB4);
}

uint64_t sub_2544C2C20(void *a1, uint64_t *a2, uint64_t a3)
{
  v11[0] = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  ((void (*)(void))v11[0])();
  sub_254527B00();
  v11[3] = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3A40);
  sub_2544C0C6C(&qword_269DF3A48, &qword_269DF3A50);
  sub_254527970();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_2544C2DB4()
{
  unint64_t result = qword_269DF3B18;
  if (!qword_269DF3B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3B18);
  }
  return result;
}

uint64_t CleanTasksResponse.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_2544C2E44(a1, &qword_269DF3B20, (void (*)(void))sub_2544C2DB4, a2);
}

uint64_t sub_2544C2E44@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, void *a4@<X8>)
{
  uint64_t v12 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v13 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_254527AF0();
  if (!v4)
  {
    char v10 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3A40);
    sub_2544C0C6C(&qword_269DF3A60, &qword_269DF3A68);
    sub_254527870();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v7);
    *char v10 = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2544C3000@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return CleanTasksResponse.init(from:)(a1, a2);
}

uint64_t sub_2544C3018(void *a1)
{
  return CleanTasksResponse.encode(to:)(a1);
}

uint64_t (*GetOnDemandTaskRequest.taskName.modify())()
{
  return nullsub_1;
}

uint64_t sub_2544C3054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544CE85C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2544C3080(uint64_t a1)
{
  unint64_t v2 = sub_2544C3148();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544C30BC(uint64_t a1)
{
  unint64_t v2 = sub_2544C3148();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t GetOnDemandTaskRequest.encode(to:)(void *a1)
{
  return sub_2544C4708(a1, &qword_269DF3B28, (void (*)(void))sub_2544C3148, (uint64_t)&type metadata for GetOnDemandTaskRequest.CodingKeys, MEMORY[0x263F8E060]);
}

unint64_t sub_2544C3148()
{
  unint64_t result = qword_269DF3B30;
  if (!qword_269DF3B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3B30);
  }
  return result;
}

uint64_t GetOnDemandTaskRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2544C48E8(a1, &qword_269DF3B38, (void (*)(void))sub_2544C3148, a2);
}

uint64_t sub_2544C31D8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return GetOnDemandTaskRequest.init(from:)(a1, a2);
}

uint64_t sub_2544C31F0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C4AD0(a1, a2, a3, &qword_269DF3B28, (void (*)(void))sub_2544C3148, (uint64_t)&type metadata for GetOnDemandTaskRequest.CodingKeys, MEMORY[0x263F8E060]);
}

LighthouseBackground::OnDemandError_optional __swiftcall OnDemandError.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_254527790();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

void *static OnDemandError.allCases.getter()
{
  return &unk_2703D56C0;
}

unint64_t OnDemandError.rawValue.getter()
{
  unint64_t result = 0xD000000000000012;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x61766E496B736174;
      break;
    case 2:
      unint64_t result = 0x6E6E75526B736174;
      break;
    case 3:
      unint64_t result = 0x646E65506B736174;
      break;
    case 4:
      unint64_t result = 0x696C756465686373;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2544C3370(unsigned __int8 *a1, char *a2)
{
  return sub_254490DB4(*a1, *a2);
}

uint64_t sub_2544C337C()
{
  return sub_25451A464();
}

uint64_t sub_2544C3384()
{
  return sub_25451B1DC();
}

uint64_t sub_2544C338C()
{
  return sub_25451B5EC();
}

LighthouseBackground::OnDemandError_optional sub_2544C3394(Swift::String *a1)
{
  return OnDemandError.init(rawValue:)(*a1);
}

unint64_t sub_2544C33A0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = OnDemandError.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_2544C33C8(void *a1@<X8>)
{
  *a1 = &unk_2703D5188;
}

uint64_t sub_2544C33D8()
{
  return sub_254527170();
}

uint64_t sub_2544C3438()
{
  return sub_254527150();
}

LighthouseBackground::OnDemandResult_optional __swiftcall OnDemandResult.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  uint64_t v3 = sub_254527790();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *unint64_t v2 = v5;
  return result;
}

void *static OnDemandResult.allCases.getter()
{
  return &unk_2703D5738;
}

uint64_t OnDemandResult.rawValue.getter()
{
  if (*v0) {
    return 0x706D6F436B736174;
  }
  else {
    return 0x656863536B736174;
  }
}

uint64_t sub_2544C354C(char *a1, char *a2)
{
  return sub_254490C4C(*a1, *a2);
}

uint64_t sub_2544C3558()
{
  return sub_25451A578();
}

uint64_t sub_2544C3560()
{
  return sub_25451B0D0();
}

uint64_t sub_2544C3568()
{
  return sub_25451B7B4();
}

LighthouseBackground::OnDemandResult_optional sub_2544C3570(Swift::String *a1)
{
  return OnDemandResult.init(rawValue:)(*a1);
}

uint64_t sub_2544C357C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = OnDemandResult.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_2544C35A4(void *a1@<X8>)
{
  *a1 = &unk_2703D5200;
}

uint64_t sub_2544C35B4()
{
  return sub_254527170();
}

uint64_t sub_2544C3614()
{
  return sub_254527150();
}

void GetOnDemandTaskRequestResponse.result.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *GetOnDemandTaskRequestResponse.result.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*GetOnDemandTaskRequestResponse.result.modify())()
{
  return nullsub_1;
}

uint64_t (*GetOnDemandTaskRequestResponse.error.modify())()
{
  return nullsub_1;
}

LighthouseBackground::GetOnDemandTaskRequestResponse __swiftcall GetOnDemandTaskRequestResponse.init(result:)(LighthouseBackground::OnDemandResult result)
{
  *uint64_t v1 = *(unsigned char *)result;
  v1[1] = 5;
  v2.result.value = result;
  return v2;
}

LighthouseBackground::GetOnDemandTaskRequestResponse __swiftcall GetOnDemandTaskRequestResponse.init(error:)(LighthouseBackground::OnDemandError error)
{
  char v2 = *(unsigned char *)error;
  *uint64_t v1 = 2;
  v1[1] = v2;
  result.result.value = error;
  return result;
}

uint64_t sub_2544C36E4(uint64_t a1)
{
  unint64_t v2 = sub_2544C38F4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544C3720(uint64_t a1)
{
  unint64_t v2 = sub_2544C38F4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t GetOnDemandTaskRequestResponse.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3B40);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v11 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544C38F4();
  sub_254527B00();
  char v15 = v8;
  char v14 = 0;
  sub_2544C3948();
  sub_254527910();
  if (!v2)
  {
    char v13 = v11;
    char v12 = 1;
    sub_2544C399C();
    sub_254527910();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_2544C38F4()
{
  unint64_t result = qword_269DF3B48;
  if (!qword_269DF3B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3B48);
  }
  return result;
}

unint64_t sub_2544C3948()
{
  unint64_t result = qword_269DF3B50;
  if (!qword_269DF3B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3B50);
  }
  return result;
}

unint64_t sub_2544C399C()
{
  unint64_t result = qword_269DF3B58;
  if (!qword_269DF3B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3B58);
  }
  return result;
}

uint64_t GetOnDemandTaskRequestResponse.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3B60);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544C38F4();
  sub_254527AF0();
  if (!v2)
  {
    char v15 = 0;
    sub_2544C3BC0();
    sub_254527810();
    char v9 = v16;
    char v13 = 1;
    sub_2544C3C14();
    sub_254527810();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v10 = v14;
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_2544C3BC0()
{
  unint64_t result = qword_269DF3B68;
  if (!qword_269DF3B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3B68);
  }
  return result;
}

unint64_t sub_2544C3C14()
{
  unint64_t result = qword_269DF3B70;
  if (!qword_269DF3B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3B70);
  }
  return result;
}

uint64_t sub_2544C3C68@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return GetOnDemandTaskRequestResponse.init(from:)(a1, a2);
}

uint64_t sub_2544C3C80(void *a1)
{
  return GetOnDemandTaskRequestResponse.encode(to:)(a1);
}

uint64_t ListExtensionsRequest.extensionPrefix.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ListExtensionsRequest.extensionPrefix.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ListExtensionsRequest.extensionPrefix.modify())()
{
  return nullsub_1;
}

LighthouseBackground::ListExtensionsRequest __swiftcall ListExtensionsRequest.init(extensionPrefix:)(LighthouseBackground::ListExtensionsRequest extensionPrefix)
{
  *uint64_t v1 = extensionPrefix;
  return extensionPrefix;
}

uint64_t sub_2544C3D2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544CE9C0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2544C3D58(uint64_t a1)
{
  unint64_t v2 = sub_2544C3E20();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544C3D94(uint64_t a1)
{
  unint64_t v2 = sub_2544C3E20();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ListExtensionsRequest.encode(to:)(void *a1)
{
  return sub_2544C4708(a1, &qword_269DF3B78, (void (*)(void))sub_2544C3E20, (uint64_t)&type metadata for ListExtensionsRequest.CodingKeys, MEMORY[0x263F8E050]);
}

unint64_t sub_2544C3E20()
{
  unint64_t result = qword_269DF3B80;
  if (!qword_269DF3B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3B80);
  }
  return result;
}

uint64_t ListExtensionsRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3B88);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544C3E20();
  sub_254527AF0();
  if (!v2)
  {
    uint64_t v9 = sub_2545277C0();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2544C3FE4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ListExtensionsRequest.init(from:)(a1, a2);
}

uint64_t sub_2544C3FFC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C4AD0(a1, a2, a3, &qword_269DF3B78, (void (*)(void))sub_2544C3E20, (uint64_t)&type metadata for ListExtensionsRequest.CodingKeys, MEMORY[0x263F8E050]);
}

uint64_t (*ListExtensionsResponse.extensions.modify())()
{
  return nullsub_1;
}

uint64_t sub_2544C4070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544CEA60(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2544C409C(uint64_t a1)
{
  unint64_t v2 = sub_2544C4298();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544C40D8(uint64_t a1)
{
  unint64_t v2 = sub_2544C4298();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ListExtensionsResponse.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3B90);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544C4298();
  sub_254527B00();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3BA0);
  sub_2544C44E4(&qword_269DF3BA8, (void (*)(void))sub_2544C42EC);
  sub_254527970();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2544C4298()
{
  unint64_t result = qword_269DF3B98;
  if (!qword_269DF3B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3B98);
  }
  return result;
}

unint64_t sub_2544C42EC()
{
  unint64_t result = qword_269DF3BB0;
  if (!qword_269DF3BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3BB0);
  }
  return result;
}

uint64_t ListExtensionsResponse.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3BB8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544C4298();
  sub_254527AF0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3BA0);
    sub_2544C44E4(&qword_269DF3BC0, (void (*)(void))sub_2544C4554);
    sub_254527870();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2544C44E4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DF3BA0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2544C4554()
{
  unint64_t result = qword_269DF3BC8;
  if (!qword_269DF3BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3BC8);
  }
  return result;
}

uint64_t sub_2544C45A8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ListExtensionsResponse.init(from:)(a1, a2);
}

uint64_t sub_2544C45C0(void *a1)
{
  return ListExtensionsResponse.encode(to:)(a1);
}

uint64_t (*GetExtensionRequest.bundleIdentifier.modify())()
{
  return nullsub_1;
}

unint64_t sub_2544C45F8()
{
  return 0xD000000000000010;
}

uint64_t sub_2544C4614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544CEAF0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2544C4640(uint64_t a1)
{
  unint64_t v2 = sub_2544C4858();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544C467C(uint64_t a1)
{
  unint64_t v2 = sub_2544C4858();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t GetExtensionRequest.encode(to:)(void *a1)
{
  return sub_2544C4708(a1, &qword_269DF3BD0, (void (*)(void))sub_2544C4858, (uint64_t)&type metadata for GetExtensionRequest.CodingKeys, MEMORY[0x263F8E060]);
}

uint64_t sub_2544C4708(void *a1, uint64_t *a2, void (*a3)(void), uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  char v16 = a5;
  char v15 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v5[1];
  uint64_t v14 = *v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v15();
  sub_254527B00();
  v16(v14, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

unint64_t sub_2544C4858()
{
  unint64_t result = qword_269DF3BD8;
  if (!qword_269DF3BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3BD8);
  }
  return result;
}

uint64_t GetExtensionRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2544C48E8(a1, &qword_269DF3BE0, (void (*)(void))sub_2544C4858, a2);
}

uint64_t sub_2544C48E8@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v18 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v17 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_254527AF0();
  if (!v4)
  {
    uint64_t v10 = v17;
    uint64_t v11 = v18;
    uint64_t v12 = sub_254527830();
    uint64_t v14 = v13;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v7);
    *uint64_t v11 = v12;
    v11[1] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2544C4A68@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return GetExtensionRequest.init(from:)(a1, a2);
}

uint64_t sub_2544C4A80(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C4AD0(a1, a2, a3, &qword_269DF3BD0, (void (*)(void))sub_2544C4858, (uint64_t)&type metadata for GetExtensionRequest.CodingKeys, MEMORY[0x263F8E060]);
}

uint64_t sub_2544C4AD0(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void), uint64_t a6, void (*a7)(uint64_t, uint64_t))
{
  uint64_t v18 = a7;
  uint64_t v17 = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v7[1];
  uint64_t v16 = *v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v17();
  sub_254527B00();
  v18(v16, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t GetExtensionResponse.extensionRecord.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 GetExtensionResponse.extensionRecord.setter(long long *a1)
{
  long long v6 = a1[1];
  long long v7 = *a1;
  __n128 v5 = (__n128)a1[2];
  uint64_t v2 = *((void *)a1 + 6);
  uint64_t v3 = *((void *)a1 + 7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)uint64_t v1 = v7;
  *(_OWORD *)(v1 + 16) = v6;
  __n128 result = v5;
  *(__n128 *)(v1 + 32) = v5;
  *(void *)(v1 + 48) = v2;
  *(void *)(v1 + 56) = v3;
  return result;
}

uint64_t (*GetExtensionResponse.extensionRecord.modify())()
{
  return nullsub_1;
}

void __swiftcall GetExtensionResponse.init(extensionRecord:)(LighthouseBackground::GetExtensionResponse *__return_ptr retstr, LighthouseBackground::ExtensionRecord *extensionRecord)
{
  Swift::String bundleIdentifier = extensionRecord->bundleIdentifier;
  Swift::String url = extensionRecord->url;
  uint64_t countAndFlagsBits = extensionRecord->extensionPointIdentifier._countAndFlagsBits;
  object = extensionRecord->extensionPointIdentifier._object;
  retstr->extensionRecord.name = extensionRecord->name;
  retstr->extensionRecord.Swift::String bundleIdentifier = bundleIdentifier;
  retstr->extensionRecord.Swift::String url = url;
  retstr->extensionRecord.extensionPointIdentifier._uint64_t countAndFlagsBits = countAndFlagsBits;
  retstr->extensionRecord.extensionPointIdentifier._object = object;
}

uint64_t sub_2544C4D5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544CEB78(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2544C4D88(uint64_t a1)
{
  unint64_t v2 = sub_2544C4F74();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544C4DC4(uint64_t a1)
{
  unint64_t v2 = sub_2544C4F74();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t GetExtensionResponse.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3BE8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  long long v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v7 = *v1;
  long long v12 = v1[1];
  long long v13 = v7;
  long long v11 = v1[2];
  uint64_t v9 = *((void *)v1 + 6);
  uint64_t v8 = *((void *)v1 + 7);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544C4F74();
  sub_254527B00();
  long long v14 = v13;
  long long v15 = v12;
  long long v16 = v11;
  uint64_t v17 = v9;
  uint64_t v18 = v8;
  sub_2544C42EC();
  sub_254527970();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2544C4F74()
{
  unint64_t result = qword_269DF3BF0;
  if (!qword_269DF3BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3BF0);
  }
  return result;
}

uint64_t GetExtensionResponse.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3BF8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544C4F74();
  sub_254527AF0();
  if (!v2)
  {
    sub_2544C4554();
    sub_254527870();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    long long v9 = v14[1];
    long long v10 = v14[2];
    uint64_t v11 = v15;
    uint64_t v12 = v16;
    *(_OWORD *)a2 = v14[0];
    *(_OWORD *)(a2 + 16) = v9;
    *(_OWORD *)(a2 + 32) = v10;
    *(void *)(a2 + 48) = v11;
    *(void *)(a2 + 56) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2544C5144@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return GetExtensionResponse.init(from:)(a1, a2);
}

uint64_t sub_2544C515C(void *a1)
{
  return GetExtensionResponse.encode(to:)(a1);
}

uint64_t GetHostConfigurationRequest.extended.getter()
{
  return *v0;
}

uint64_t (*GetHostConfigurationRequest.extended.modify())()
{
  return nullsub_1;
}

uint64_t sub_2544C51A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544CEC18(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2544C51CC(uint64_t a1)
{
  unint64_t v2 = sub_2544C5280();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544C5208(uint64_t a1)
{
  unint64_t v2 = sub_2544C5280();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t GetHostConfigurationRequest.encode(to:)(void *a1)
{
  return sub_2544C6A3C(a1, &qword_269DF3C00, (void (*)(void))sub_2544C5280);
}

unint64_t sub_2544C5280()
{
  unint64_t result = qword_269DF3C08;
  if (!qword_269DF3C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3C08);
  }
  return result;
}

uint64_t GetHostConfigurationRequest.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_2544C6C0C(a1, &qword_269DF3C10, (void (*)(void))sub_2544C5280, a2);
}

uint64_t sub_2544C5310@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return GetHostConfigurationRequest.init(from:)(a1, a2);
}

uint64_t sub_2544C5328(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C86A4(a1, a2, a3, &qword_269DF3C00, (void (*)(void))sub_2544C5280);
}

uint64_t sub_2544C5370(uint64_t a1)
{
  unint64_t v2 = sub_2544C5424();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544C53AC(uint64_t a1)
{
  unint64_t v2 = sub_2544C5424();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t GetHostConfigurationResponse.encode(to:)(void *a1)
{
  return sub_2544C56E8(a1, &qword_269DF3C18, (void (*)(void))sub_2544C5424);
}

unint64_t sub_2544C5424()
{
  unint64_t result = qword_269DF3C20;
  if (!qword_269DF3C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3C20);
  }
  return result;
}

unint64_t sub_2544C5478()
{
  unint64_t result = qword_269DF3C28;
  if (!qword_269DF3C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3C28);
  }
  return result;
}

uint64_t GetHostConfigurationResponse.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2544C58EC(a1, &qword_269DF3C30, (void (*)(void))sub_2544C5424, a2);
}

unint64_t sub_2544C5508()
{
  unint64_t result = qword_269DF3C38;
  if (!qword_269DF3C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3C38);
  }
  return result;
}

uint64_t sub_2544C555C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return GetHostConfigurationResponse.init(from:)(a1, a2);
}

uint64_t sub_2544C5574(void *a1)
{
  return GetHostConfigurationResponse.encode(to:)(a1);
}

uint64_t _s20LighthouseBackground28GetHostConfigurationResponseV6configAA12MLHostConfigVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 40);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 _s20LighthouseBackground28GetHostConfigurationResponseV6configAcA12MLHostConfigV_tcfC_0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v2;
  __n128 result = *(__n128 *)(a1 + 16);
  long long v4 = *(_OWORD *)(a1 + 32);
  *(__n128 *)(a2 + 16) = result;
  *(_OWORD *)(a2 + 32) = v4;
  return result;
}

uint64_t sub_2544C5608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544CECA0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2544C5634(uint64_t a1)
{
  unint64_t v2 = sub_2544C585C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544C5670(uint64_t a1)
{
  unint64_t v2 = sub_2544C585C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SetHostConfigurationRequest.encode(to:)(void *a1)
{
  return sub_2544C56E8(a1, &qword_269DF3C40, (void (*)(void))sub_2544C585C);
}

uint64_t sub_2544C56E8(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v16 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = *v3;
  long long v14 = v3[1];
  long long v15 = v9;
  uint64_t v10 = *((void *)v3 + 4);
  uint64_t v13 = *((void *)v3 + 5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v16();
  sub_254527B00();
  long long v17 = v15;
  long long v18 = v14;
  uint64_t v19 = v10;
  uint64_t v20 = v13;
  sub_2544C5478();
  sub_254527970();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_2544C585C()
{
  unint64_t result = qword_269DF3C48;
  if (!qword_269DF3C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3C48);
  }
  return result;
}

uint64_t SetHostConfigurationRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2544C58EC(a1, &qword_269DF3C50, (void (*)(void))sub_2544C585C, a2);
}

uint64_t sub_2544C58EC@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v16 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v21 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  long long v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_254527AF0();
  if (!v4)
  {
    uint64_t v10 = v16;
    sub_2544C5508();
    sub_254527870();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v7);
    uint64_t v11 = v18;
    long long v12 = v19;
    long long v13 = v20;
    *(void *)uint64_t v10 = v17;
    *(void *)(v10 + 8) = v11;
    *(_OWORD *)(v10 + 16) = v12;
    *(_OWORD *)(v10 + 32) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2544C5A6C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SetHostConfigurationRequest.init(from:)(a1, a2);
}

uint64_t sub_2544C5A84(void *a1)
{
  return SetHostConfigurationRequest.encode(to:)(a1);
}

uint64_t SetHostConfigurationResponse.success.getter()
{
  return *v0;
}

uint64_t SetHostConfigurationResponse.success.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*SetHostConfigurationResponse.success.modify())()
{
  return nullsub_1;
}

uint64_t SetHostConfigurationResponse.error.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SetHostConfigurationResponse.error.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*SetHostConfigurationResponse.error.modify())()
{
  return nullsub_1;
}

LighthouseBackground::SetHostConfigurationResponse __swiftcall SetHostConfigurationResponse.init(success:error:)(Swift::Bool success, Swift::String_optional error)
{
  *(unsigned char *)uint64_t v2 = success;
  *(Swift::String_optional *)(v2 + 8) = error;
  result.error = error;
  result.success = success;
  return result;
}

uint64_t sub_2544C5B60(char a1)
{
  if (a1) {
    return 0x726F727265;
  }
  else {
    return 0x73736563637573;
  }
}

uint64_t sub_2544C5B94()
{
  return sub_2544C5B60(*v0);
}

uint64_t sub_2544C5B9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544CED20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2544C5BC4(uint64_t a1)
{
  unint64_t v2 = sub_2544C5DB0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544C5C00(uint64_t a1)
{
  unint64_t v2 = sub_2544C5DB0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SetHostConfigurationResponse.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3C58);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 8);
  v10[0] = *(void *)(v1 + 16);
  v10[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544C5DB0();
  sub_254527B00();
  char v12 = 0;
  sub_254527940();
  if (!v2)
  {
    char v11 = 1;
    sub_2545278C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_2544C5DB0()
{
  unint64_t result = qword_269DF3C60;
  if (!qword_269DF3C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3C60);
  }
  return result;
}

uint64_t SetHostConfigurationResponse.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3C68);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544C5DB0();
  sub_254527AF0();
  if (!v2)
  {
    char v16 = 0;
    char v9 = sub_254527840();
    char v15 = 1;
    uint64_t v11 = sub_2545277C0();
    uint64_t v13 = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)a2 = v9 & 1;
    *(void *)(a2 + 8) = v11;
    *(void *)(a2 + 16) = v13;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2544C5FD0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SetHostConfigurationResponse.init(from:)(a1, a2);
}

uint64_t sub_2544C5FE8(void *a1)
{
  return SetHostConfigurationResponse.encode(to:)(a1);
}

uint64_t GetNotificationsConfigRequest.registeredOnly.getter()
{
  return *v0;
}

uint64_t (*GetNotificationsConfigRequest.registeredOnly.modify())()
{
  return nullsub_1;
}

uint64_t sub_2544C602C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544CEE04(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2544C6058(uint64_t a1)
{
  unint64_t v2 = sub_2544C610C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544C6094(uint64_t a1)
{
  unint64_t v2 = sub_2544C610C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t GetNotificationsConfigRequest.encode(to:)(void *a1)
{
  return sub_2544C6A3C(a1, &qword_269DF3C70, (void (*)(void))sub_2544C610C);
}

unint64_t sub_2544C610C()
{
  unint64_t result = qword_269DF3C78;
  if (!qword_269DF3C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3C78);
  }
  return result;
}

uint64_t GetNotificationsConfigRequest.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_2544C6C0C(a1, &qword_269DF3C80, (void (*)(void))sub_2544C610C, a2);
}

uint64_t sub_2544C619C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return GetNotificationsConfigRequest.init(from:)(a1, a2);
}

uint64_t sub_2544C61B4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C86A4(a1, a2, a3, &qword_269DF3C70, (void (*)(void))sub_2544C610C);
}

uint64_t (*GetNotificationsConfigResponse.channelsByTopic.modify())()
{
  return nullsub_1;
}

uint64_t sub_2544C6214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544CEEA4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2544C6240(uint64_t a1)
{
  unint64_t v2 = sub_2544C640C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544C627C(uint64_t a1)
{
  unint64_t v2 = sub_2544C640C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t GetNotificationsConfigResponse.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3C88);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544C640C();
  sub_254527B00();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3C98);
  sub_2544C6460();
  sub_254527970();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2544C640C()
{
  unint64_t result = qword_269DF3C90;
  if (!qword_269DF3C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3C90);
  }
  return result;
}

unint64_t sub_2544C6460()
{
  unint64_t result = qword_269DF3CA0;
  if (!qword_269DF3CA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DF3C98);
    sub_2544C670C(&qword_26B266BC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3CA0);
  }
  return result;
}

uint64_t GetNotificationsConfigResponse.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3CA8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544C640C();
  sub_254527AF0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3C98);
    sub_2544C6670();
    sub_254527870();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_2544C6670()
{
  unint64_t result = qword_269DF3CB0;
  if (!qword_269DF3CB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DF3C98);
    sub_2544C670C(&qword_26B266B90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3CB0);
  }
  return result;
}

uint64_t sub_2544C670C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B266BC0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2544C6770@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return GetNotificationsConfigResponse.init(from:)(a1, a2);
}

uint64_t sub_2544C6788(void *a1)
{
  return GetNotificationsConfigResponse.encode(to:)(a1);
}

uint64_t ResetNotificationsRequest.reload.getter()
{
  return *v0;
}

uint64_t (*ResetNotificationsRequest.reload.modify())()
{
  return nullsub_1;
}

uint64_t sub_2544C67C8(uint64_t a1)
{
  unint64_t v2 = sub_2544C687C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544C6804(uint64_t a1)
{
  unint64_t v2 = sub_2544C687C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ResetNotificationsRequest.encode(to:)(void *a1)
{
  return sub_2544C6A3C(a1, &qword_269DF3CB8, (void (*)(void))sub_2544C687C);
}

unint64_t sub_2544C687C()
{
  unint64_t result = qword_269DF3CC0;
  if (!qword_269DF3CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3CC0);
  }
  return result;
}

uint64_t ResetNotificationsRequest.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_2544C6C0C(a1, &qword_269DF3CC8, (void (*)(void))sub_2544C687C, a2);
}

uint64_t sub_2544C690C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ResetNotificationsRequest.init(from:)(a1, a2);
}

uint64_t sub_2544C6924(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C86A4(a1, a2, a3, &qword_269DF3CB8, (void (*)(void))sub_2544C687C);
}

uint64_t ResetNotificationsResponse.reloaded.getter()
{
  return *v0;
}

uint64_t (*ResetNotificationsResponse.reloaded.modify())()
{
  return nullsub_1;
}

uint64_t sub_2544C6988(uint64_t a1)
{
  unint64_t v2 = sub_2544C6B7C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544C69C4(uint64_t a1)
{
  unint64_t v2 = sub_2544C6B7C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ResetNotificationsResponse.encode(to:)(void *a1)
{
  return sub_2544C6A3C(a1, &qword_269DF3CD0, (void (*)(void))sub_2544C6B7C);
}

uint64_t sub_2544C6A3C(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v10 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10();
  sub_254527B00();
  sub_254527940();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_2544C6B7C()
{
  unint64_t result = qword_269DF3CD8;
  if (!qword_269DF3CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3CD8);
  }
  return result;
}

uint64_t ResetNotificationsResponse.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_2544C6C0C(a1, &qword_269DF3CE0, (void (*)(void))sub_2544C6B7C, a2);
}

uint64_t sub_2544C6C0C@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, unsigned char *a4@<X8>)
{
  uint64_t v13 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v14 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_254527AF0();
  if (!v4)
  {
    char v10 = sub_254527840();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v7);
    *uint64_t v13 = v10 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_2544C6D74()
{
  unint64_t result = qword_269DF3CE8;
  if (!qword_269DF3CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3CE8);
  }
  return result;
}

uint64_t sub_2544C6DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C856C(a1, a2, a3, (uint64_t (*)(void))sub_2544C6DF4, (uint64_t (*)(void))sub_2544C6E48);
}

unint64_t sub_2544C6DF4()
{
  unint64_t result = qword_269DF3CF0;
  if (!qword_269DF3CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3CF0);
  }
  return result;
}

unint64_t sub_2544C6E48()
{
  unint64_t result = qword_269DF4550;
  if (!qword_269DF4550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4550);
  }
  return result;
}

unint64_t sub_2544C6EA0()
{
  unint64_t result = qword_269DF41C0;
  if (!qword_269DF41C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF41C0);
  }
  return result;
}

uint64_t sub_2544C6EF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C856C(a1, a2, a3, (uint64_t (*)(void))sub_2544C6F20, (uint64_t (*)(void))sub_2544C6F74);
}

unint64_t sub_2544C6F20()
{
  unint64_t result = qword_269DF3CF8;
  if (!qword_269DF3CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3CF8);
  }
  return result;
}

unint64_t sub_2544C6F74()
{
  unint64_t result = qword_269DF3D00;
  if (!qword_269DF3D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3D00);
  }
  return result;
}

uint64_t sub_2544C6FC8()
{
  return sub_2544C0D00(&qword_269DF3D08, (void (*)(uint64_t))type metadata accessor for GetTaskResponse);
}

uint64_t sub_2544C7010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C856C(a1, a2, a3, (uint64_t (*)(void))sub_2544C703C, (uint64_t (*)(void))sub_2544C7090);
}

unint64_t sub_2544C703C()
{
  unint64_t result = qword_269DF3D10;
  if (!qword_269DF3D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3D10);
  }
  return result;
}

unint64_t sub_2544C7090()
{
  unint64_t result = qword_269DF3D18;
  if (!qword_269DF3D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3D18);
  }
  return result;
}

uint64_t sub_2544C70E4(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_2544C0D00(&qword_26B267040, (void (*)(uint64_t))type metadata accessor for GetTaskResponse);
  uint64_t result = sub_2544C0D00((unint64_t *)&unk_26B267030, (void (*)(uint64_t))type metadata accessor for GetTaskResponse);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_2544C716C()
{
  unint64_t result = qword_269DF3D20;
  if (!qword_269DF3D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3D20);
  }
  return result;
}

uint64_t sub_2544C71C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C856C(a1, a2, a3, (uint64_t (*)(void))sub_2544C71EC, (uint64_t (*)(void))sub_2544C7240);
}

unint64_t sub_2544C71EC()
{
  unint64_t result = qword_269DF3D28;
  if (!qword_269DF3D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3D28);
  }
  return result;
}

unint64_t sub_2544C7240()
{
  unint64_t result = qword_269DF3D30;
  if (!qword_269DF3D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3D30);
  }
  return result;
}

uint64_t sub_2544C7294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C856C(a1, a2, a3, (uint64_t (*)(void))sub_2544C72C0, (uint64_t (*)(void))sub_2544C7314);
}

unint64_t sub_2544C72C0()
{
  unint64_t result = qword_269DF44E0;
  if (!qword_269DF44E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF44E0);
  }
  return result;
}

unint64_t sub_2544C7314()
{
  unint64_t result = qword_269DF3D38;
  if (!qword_269DF3D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3D38);
  }
  return result;
}

unint64_t sub_2544C736C()
{
  unint64_t result = qword_269DF3D40;
  if (!qword_269DF3D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3D40);
  }
  return result;
}

uint64_t sub_2544C73C0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_2544C0D00(&qword_269DF3D48, (void (*)(uint64_t))type metadata accessor for AddTaskRequest);
  uint64_t result = sub_2544C0D00(&qword_269DF4510, (void (*)(uint64_t))type metadata accessor for AddTaskRequest);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_2544C7444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C856C(a1, a2, a3, (uint64_t (*)(void))sub_2544C7470, (uint64_t (*)(void))sub_2544C74C4);
}

unint64_t sub_2544C7470()
{
  unint64_t result = qword_269DF3D50;
  if (!qword_269DF3D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3D50);
  }
  return result;
}

unint64_t sub_2544C74C4()
{
  unint64_t result = qword_269DF3D58;
  if (!qword_269DF3D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3D58);
  }
  return result;
}

unint64_t sub_2544C751C()
{
  unint64_t result = qword_269DF3D60;
  if (!qword_269DF3D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3D60);
  }
  return result;
}

uint64_t sub_2544C7570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C856C(a1, a2, a3, (uint64_t (*)(void))sub_2544C759C, (uint64_t (*)(void))sub_2544C75F0);
}

unint64_t sub_2544C759C()
{
  unint64_t result = qword_269DF3D68;
  if (!qword_269DF3D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3D68);
  }
  return result;
}

unint64_t sub_2544C75F0()
{
  unint64_t result = qword_269DF44C0;
  if (!qword_269DF44C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF44C0);
  }
  return result;
}

uint64_t sub_2544C7644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C856C(a1, a2, a3, (uint64_t (*)(void))sub_2544C7670, (uint64_t (*)(void))sub_2544C76C4);
}

unint64_t sub_2544C7670()
{
  unint64_t result = qword_269DF3D70;
  if (!qword_269DF3D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3D70);
  }
  return result;
}

unint64_t sub_2544C76C4()
{
  unint64_t result = qword_269DF3D78;
  if (!qword_269DF3D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3D78);
  }
  return result;
}

unint64_t sub_2544C771C()
{
  unint64_t result = qword_269DF3D80;
  if (!qword_269DF3D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3D80);
  }
  return result;
}

uint64_t sub_2544C7770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C856C(a1, a2, a3, (uint64_t (*)(void))sub_2544C779C, (uint64_t (*)(void))sub_2544C77F0);
}

unint64_t sub_2544C779C()
{
  unint64_t result = qword_269DF3D88;
  if (!qword_269DF3D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3D88);
  }
  return result;
}

unint64_t sub_2544C77F0()
{
  unint64_t result = qword_269DF3D90;
  if (!qword_269DF3D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3D90);
  }
  return result;
}

unint64_t sub_2544C7848()
{
  unint64_t result = qword_269DF3D98;
  if (!qword_269DF3D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3D98);
  }
  return result;
}

uint64_t sub_2544C789C()
{
  return sub_2544C7944(&qword_269DF3DA0, &qword_269DF3DA8);
}

unint64_t sub_2544C78C8()
{
  unint64_t result = qword_269DF3DB0;
  if (!qword_269DF3DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3DB0);
  }
  return result;
}

uint64_t sub_2544C791C()
{
  return sub_2544C7944(&qword_269DF3DB8, &qword_269DF3DC0);
}

uint64_t sub_2544C7944(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2544C7994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C856C(a1, a2, a3, (uint64_t (*)(void))sub_2544C79C0, (uint64_t (*)(void))sub_2544C7A14);
}

unint64_t sub_2544C79C0()
{
  unint64_t result = qword_269DF4490;
  if (!qword_269DF4490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4490);
  }
  return result;
}

unint64_t sub_2544C7A14()
{
  unint64_t result = qword_269DF3DC8;
  if (!qword_269DF3DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3DC8);
  }
  return result;
}

unint64_t sub_2544C7A6C()
{
  unint64_t result = qword_269DF3DD0;
  if (!qword_269DF3DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3DD0);
  }
  return result;
}

uint64_t sub_2544C7AC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C856C(a1, a2, a3, (uint64_t (*)(void))sub_2544C7AEC, (uint64_t (*)(void))sub_2544C7B40);
}

unint64_t sub_2544C7AEC()
{
  unint64_t result = qword_269DF3DD8;
  if (!qword_269DF3DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3DD8);
  }
  return result;
}

unint64_t sub_2544C7B40()
{
  unint64_t result = qword_269DF4470;
  if (!qword_269DF4470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4470);
  }
  return result;
}

uint64_t sub_2544C7B94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C856C(a1, a2, a3, (uint64_t (*)(void))sub_2544C7BC0, (uint64_t (*)(void))sub_2544C7C14);
}

unint64_t sub_2544C7BC0()
{
  unint64_t result = qword_269DF3DE0;
  if (!qword_269DF3DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3DE0);
  }
  return result;
}

unint64_t sub_2544C7C14()
{
  unint64_t result = qword_269DF3DE8;
  if (!qword_269DF3DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3DE8);
  }
  return result;
}

unint64_t sub_2544C7C6C()
{
  unint64_t result = qword_269DF3DF0;
  if (!qword_269DF3DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3DF0);
  }
  return result;
}

uint64_t sub_2544C7CC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C856C(a1, a2, a3, (uint64_t (*)(void))sub_2544C7CEC, (uint64_t (*)(void))sub_2544C7D40);
}

unint64_t sub_2544C7CEC()
{
  unint64_t result = qword_269DF3DF8;
  if (!qword_269DF3DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3DF8);
  }
  return result;
}

unint64_t sub_2544C7D40()
{
  unint64_t result = qword_269DF3E00;
  if (!qword_269DF3E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3E00);
  }
  return result;
}

uint64_t sub_2544C7D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C856C(a1, a2, a3, (uint64_t (*)(void))sub_2544C7DC0, (uint64_t (*)(void))sub_2544C7E14);
}

unint64_t sub_2544C7DC0()
{
  unint64_t result = qword_269DF4440;
  if (!qword_269DF4440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4440);
  }
  return result;
}

unint64_t sub_2544C7E14()
{
  unint64_t result = qword_269DF3E08;
  if (!qword_269DF3E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3E08);
  }
  return result;
}

unint64_t sub_2544C7E6C()
{
  unint64_t result = qword_269DF3E10;
  if (!qword_269DF3E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3E10);
  }
  return result;
}

uint64_t sub_2544C7EC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C856C(a1, a2, a3, (uint64_t (*)(void))sub_2544C7EEC, (uint64_t (*)(void))sub_2544C7F40);
}

unint64_t sub_2544C7EEC()
{
  unint64_t result = qword_269DF3E18;
  if (!qword_269DF3E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3E18);
  }
  return result;
}

unint64_t sub_2544C7F40()
{
  unint64_t result = qword_269DF3E20;
  if (!qword_269DF3E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3E20);
  }
  return result;
}

uint64_t sub_2544C7F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C856C(a1, a2, a3, (uint64_t (*)(void))sub_2544C7FC0, (uint64_t (*)(void))sub_2544C8014);
}

unint64_t sub_2544C7FC0()
{
  unint64_t result = qword_269DF45D0;
  if (!qword_269DF45D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF45D0);
  }
  return result;
}

unint64_t sub_2544C8014()
{
  unint64_t result = qword_269DF3E28;
  if (!qword_269DF3E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3E28);
  }
  return result;
}

unint64_t sub_2544C806C()
{
  unint64_t result = qword_269DF3E30;
  if (!qword_269DF3E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3E30);
  }
  return result;
}

uint64_t sub_2544C80C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C856C(a1, a2, a3, (uint64_t (*)(void))sub_2544C80EC, (uint64_t (*)(void))sub_2544C8140);
}

unint64_t sub_2544C80EC()
{
  unint64_t result = qword_269DF3E38;
  if (!qword_269DF3E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3E38);
  }
  return result;
}

unint64_t sub_2544C8140()
{
  unint64_t result = qword_269DF45B0;
  if (!qword_269DF45B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF45B0);
  }
  return result;
}

uint64_t sub_2544C8194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C856C(a1, a2, a3, (uint64_t (*)(void))sub_2544C81C0, (uint64_t (*)(void))sub_2544C8214);
}

unint64_t sub_2544C81C0()
{
  unint64_t result = qword_269DF3E40;
  if (!qword_269DF3E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3E40);
  }
  return result;
}

unint64_t sub_2544C8214()
{
  unint64_t result = qword_269DF3E48;
  if (!qword_269DF3E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3E48);
  }
  return result;
}

unint64_t sub_2544C826C()
{
  unint64_t result = qword_269DF3E50;
  if (!qword_269DF3E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3E50);
  }
  return result;
}

uint64_t sub_2544C82C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C856C(a1, a2, a3, (uint64_t (*)(void))sub_2544C82EC, (uint64_t (*)(void))sub_2544C8340);
}

unint64_t sub_2544C82EC()
{
  unint64_t result = qword_269DF3E58;
  if (!qword_269DF3E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3E58);
  }
  return result;
}

unint64_t sub_2544C8340()
{
  unint64_t result = qword_269DF3E60;
  if (!qword_269DF3E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3E60);
  }
  return result;
}

uint64_t sub_2544C8394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C856C(a1, a2, a3, (uint64_t (*)(void))sub_2544C83C0, (uint64_t (*)(void))sub_2544C8414);
}

unint64_t sub_2544C83C0()
{
  unint64_t result = qword_269DF4580;
  if (!qword_269DF4580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4580);
  }
  return result;
}

unint64_t sub_2544C8414()
{
  unint64_t result = qword_269DF3E68;
  if (!qword_269DF3E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3E68);
  }
  return result;
}

uint64_t sub_2544C846C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C856C(a1, a2, a3, (uint64_t (*)(void))sub_2544C8498, (uint64_t (*)(void))sub_2544C84EC);
}

unint64_t sub_2544C8498()
{
  unint64_t result = qword_269DF3E70;
  if (!qword_269DF3E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3E70);
  }
  return result;
}

unint64_t sub_2544C84EC()
{
  unint64_t result = qword_269DF4560;
  if (!qword_269DF4560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4560);
  }
  return result;
}

uint64_t sub_2544C8540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C856C(a1, a2, a3, (uint64_t (*)(void))sub_2544C85A8, (uint64_t (*)(void))sub_2544C85FC);
}

uint64_t sub_2544C856C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_2544C85A8()
{
  unint64_t result = qword_269DF3E78;
  if (!qword_269DF3E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3E78);
  }
  return result;
}

unint64_t sub_2544C85FC()
{
  unint64_t result = qword_269DF3E80;
  if (!qword_269DF3E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3E80);
  }
  return result;
}

uint64_t sub_2544C8650@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ResetNotificationsResponse.init(from:)(a1, a2);
}

uint64_t sub_2544C8668(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2544C86A4(a1, a2, a3, &qword_269DF3CD0, (void (*)(void))sub_2544C6B7C);
}

uint64_t sub_2544C86A4(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v12 = a5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12();
  sub_254527B00();
  sub_254527940();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ListTasksRequest(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ListTasksRequest(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ListTasksRequest()
{
  return &type metadata for ListTasksRequest;
}

ValueMetadata *type metadata accessor for ListTasksResponse()
{
  return &type metadata for ListTasksResponse;
}

void *initializeBufferWithCopyOfBuffer for GetTaskRequest(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for GetTaskRequest(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for GetTaskRequest()
{
  return &type metadata for GetTaskRequest;
}

void *initializeBufferWithCopyOfBuffer for GetTaskResponse(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for MLHostTask(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    uint64_t v22 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    int v43 = (int *)v4;
    int64_t v44 = a2;
    uint64_t v6 = *(int *)(v4 + 20);
    uint64_t v45 = a1;
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = *(void *)((char *)a2 + v6 + 8);
    *(void *)uint64_t v7 = *(void *)((char *)a2 + v6);
    *((void *)v7 + 1) = v9;
    uint64_t v10 = *(void *)((char *)a2 + v6 + 24);
    *((void *)v7 + 2) = *(void *)((char *)a2 + v6 + 16);
    *((void *)v7 + 3) = v10;
    *((_WORD *)v7 + 24) = *(_WORD *)((char *)a2 + v6 + 48);
    *((_OWORD *)v7 + 2) = *(_OWORD *)((char *)a2 + v6 + 32);
    *((_WORD *)v7 + 36) = *(_WORD *)((char *)a2 + v6 + 72);
    *(_OWORD *)(v7 + 56) = *(_OWORD *)((char *)a2 + v6 + 56);
    *(_DWORD *)(v7 + 74) = *(_DWORD *)((char *)a2 + v6 + 74);
    v7[78] = *((unsigned char *)a2 + v6 + 78);
    *((void *)v7 + 10) = *(void *)((char *)a2 + v6 + 80);
    v7[88] = *((unsigned char *)a2 + v6 + 88);
    *(void *)(v7 + 89) = *(void *)((char *)a2 + v6 + 89);
    *((void *)v7 + 13) = *(void *)((char *)a2 + v6 + 104);
    *((_WORD *)v7 + 56) = *(_WORD *)((char *)a2 + v6 + 112);
    *((void *)v7 + 15) = *(void *)((char *)a2 + v6 + 120);
    v7[128] = *((unsigned char *)a2 + v6 + 128);
    v7[144] = *((unsigned char *)a2 + v6 + 144);
    *((void *)v7 + 17) = *(void *)((char *)a2 + v6 + 136);
    *(_WORD *)(v7 + 145) = *(_WORD *)((char *)a2 + v6 + 145);
    uint64_t v11 = *(void *)((char *)a2 + v6 + 160);
    *((void *)v7 + 19) = *(void *)((char *)a2 + v6 + 152);
    *((void *)v7 + 20) = v11;
    v7[176] = *((unsigned char *)a2 + v6 + 176);
    *((void *)v7 + 21) = *(void *)((char *)a2 + v6 + 168);
    uint64_t v12 = *(void *)((char *)a2 + v6 + 192);
    *((void *)v7 + 23) = *(void *)((char *)a2 + v6 + 184);
    *((void *)v7 + 24) = v12;
    v7[208] = *((unsigned char *)a2 + v6 + 208);
    *((void *)v7 + 25) = *(void *)((char *)a2 + v6 + 200);
    *(_WORD *)(v7 + 209) = *(_WORD *)((char *)a2 + v6 + 209);
    uint64_t v14 = *(void *)((char *)a2 + v6 + 216);
    uint64_t v13 = *(void *)((char *)a2 + v6 + 224);
    *((void *)v7 + 27) = v14;
    *((void *)v7 + 28) = v13;
    v7[232] = v8[232];
    *(_WORD *)(v7 + 233) = *(_WORD *)(v8 + 233);
    uint64_t v15 = *((void *)v8 + 31);
    *((void *)v7 + 30) = *((void *)v8 + 30);
    *((void *)v7 + 31) = v15;
    *((void *)v7 + 32) = *((void *)v8 + 32);
    v7[264] = v8[264];
    v7[265] = v8[265];
    uint64_t v16 = *((void *)v8 + 35);
    *((void *)v7 + 34) = *((void *)v8 + 34);
    *((void *)v7 + 35) = v16;
    uint64_t v46 = (int *)type metadata accessor for TaskDefinition(0);
    uint64_t v17 = v46[7];
    __dst = &v7[v17];
    uint64_t v41 = &v8[v17];
    uint64_t v18 = sub_254526D90();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v40(v41, 1, v18))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
      memcpy(__dst, v41, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(__dst, v41, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
    }
    uint64_t v23 = v46[8];
    uint64_t v24 = &v7[v23];
    uint64_t v25 = &v8[v23];
    if (v40(&v8[v23], 1, v18))
    {
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v24, v25, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v24, 0, 1, v18);
    }
    *(void *)&v7[v46[9]] = *(void *)&v8[v46[9]];
    uint64_t v27 = v43[6];
    uint64_t v22 = v45;
    char v28 = (void *)((char *)v45 + v27);
    char v29 = (void *)((char *)v44 + v27);
    uint64_t v30 = v29[1];
    *char v28 = *v29;
    v28[1] = v30;
    *((unsigned char *)v45 + v43[7]) = *((unsigned char *)v44 + v43[7]);
    uint64_t v31 = v43[8];
    uint64_t v32 = (char *)v45 + v31;
    uint64_t v33 = (char *)v44 + v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v40(v33, 1, v18))
    {
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v32, v33, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v32, 0, 1, v18);
    }
    uint64_t v35 = v43[9];
    unint64_t v36 = (char *)v45 + v35;
    char v37 = (char *)v44 + v35;
    if (v40((char *)v44 + v35, 1, v18))
    {
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
      memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v36, v37, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v36, 0, 1, v18);
    }
  }
  return v22;
}

uint64_t destroy for GetTaskResponse(uint64_t a1)
{
  uint64_t v2 = (int *)type metadata accessor for MLHostTask(0);
  uint64_t v3 = a1 + v2[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for TaskDefinition(0);
  uint64_t v5 = v3 + *(int *)(v4 + 28);
  uint64_t v6 = sub_254526D90();
  uint64_t v13 = *(void *)(v6 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (!v7(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v5, v6);
  }
  uint64_t v8 = v3 + *(int *)(v4 + 32);
  if (!v7(v8, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v8, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + v2[8];
  if (!v7(v9, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v9, v6);
  }
  uint64_t v10 = a1 + v2[9];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v10, 1, v6);
  if (!result)
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
    return v12(v10, v6);
  }
  return result;
}

unsigned char *initializeWithCopy for GetTaskResponse(unsigned char *a1, unsigned char *a2)
{
  *a1 = *a2;
  BOOL v39 = (int *)type metadata accessor for MLHostTask(0);
  uint64_t v40 = a2;
  uint64_t v4 = v39[5];
  uint64_t v41 = a1;
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v43 = *(void *)&a2[v4 + 8];
  *(void *)uint64_t v5 = *(void *)&a2[v4];
  *((void *)v5 + 1) = v43;
  uint64_t v7 = *(void *)&a2[v4 + 24];
  *((void *)v5 + 2) = *(void *)&a2[v4 + 16];
  *((void *)v5 + 3) = v7;
  *((_WORD *)v5 + 24) = *(_WORD *)&a2[v4 + 48];
  *((_OWORD *)v5 + 2) = *(_OWORD *)&a2[v4 + 32];
  *((_WORD *)v5 + 36) = *(_WORD *)&a2[v4 + 72];
  *(_OWORD *)(v5 + 56) = *(_OWORD *)&a2[v4 + 56];
  *(_DWORD *)(v5 + 74) = *(_DWORD *)&a2[v4 + 74];
  v5[78] = a2[v4 + 78];
  *((void *)v5 + 10) = *(void *)&a2[v4 + 80];
  v5[88] = a2[v4 + 88];
  *(void *)(v5 + 89) = *(void *)&a2[v4 + 89];
  *((void *)v5 + 13) = *(void *)&a2[v4 + 104];
  *((_WORD *)v5 + 56) = *(_WORD *)&a2[v4 + 112];
  v5[128] = a2[v4 + 128];
  *((void *)v5 + 15) = *(void *)&a2[v4 + 120];
  v5[144] = a2[v4 + 144];
  *((void *)v5 + 17) = *(void *)&a2[v4 + 136];
  *(_WORD *)(v5 + 145) = *(_WORD *)&a2[v4 + 145];
  uint64_t v8 = *(void *)&a2[v4 + 160];
  *((void *)v5 + 19) = *(void *)&a2[v4 + 152];
  *((void *)v5 + 20) = v8;
  v5[176] = a2[v4 + 176];
  *((void *)v5 + 21) = *(void *)&a2[v4 + 168];
  uint64_t v9 = *(void *)&a2[v4 + 192];
  *((void *)v5 + 23) = *(void *)&a2[v4 + 184];
  *((void *)v5 + 24) = v9;
  v5[208] = a2[v4 + 208];
  *((void *)v5 + 25) = *(void *)&a2[v4 + 200];
  *(_WORD *)(v5 + 209) = *(_WORD *)&a2[v4 + 209];
  uint64_t v11 = *(void *)&a2[v4 + 216];
  uint64_t v10 = *(void *)&a2[v4 + 224];
  *((void *)v5 + 27) = v11;
  *((void *)v5 + 28) = v10;
  v5[232] = v6[232];
  *(_WORD *)(v5 + 233) = *(_WORD *)(v6 + 233);
  uint64_t v12 = *((void *)v6 + 31);
  *((void *)v5 + 30) = *((void *)v6 + 30);
  *((void *)v5 + 31) = v12;
  *((void *)v5 + 32) = *((void *)v6 + 32);
  v5[264] = v6[264];
  v5[265] = v6[265];
  uint64_t v13 = *((void *)v6 + 35);
  *((void *)v5 + 34) = *((void *)v6 + 34);
  *((void *)v5 + 35) = v13;
  uint64_t v42 = (int *)type metadata accessor for TaskDefinition(0);
  uint64_t v14 = v42[7];
  __dst = &v5[v14];
  unint64_t v36 = &v6[v14];
  uint64_t v15 = sub_254526D90();
  uint64_t v37 = *(void *)(v15 - 8);
  uint64_t v16 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v37 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v44 = v16;
  if (v16(v36, 1, v15))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(__dst, v36, *(void *)(*(void *)(v17 - 8) + 64));
    uint64_t v18 = v37;
  }
  else
  {
    uint64_t v18 = v37;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v37 + 16))(__dst, v36, v15);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v15);
  }
  uint64_t v19 = v42[8];
  uint64_t v20 = &v5[v19];
  uint64_t v21 = &v6[v19];
  if (v44(&v6[v19], 1, v15))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 16))(v20, v21, v15);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v20, 0, 1, v15);
  }
  *(void *)&v5[v42[9]] = *(void *)&v6[v42[9]];
  uint64_t v23 = v39[6];
  uint64_t v24 = &v41[v23];
  uint64_t v25 = &v40[v23];
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  v41[v39[7]] = v40[v39[7]];
  uint64_t v27 = v39[8];
  char v28 = &v41[v27];
  char v29 = &v40[v27];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v44(v29, 1, v15))
  {
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 16))(v28, v29, v15);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v28, 0, 1, v15);
  }
  uint64_t v31 = v39[9];
  uint64_t v32 = &v41[v31];
  uint64_t v33 = &v40[v31];
  if (v44(&v40[v31], 1, v15))
  {
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 16))(v32, v33, v15);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v32, 0, 1, v15);
  }
  return v41;
}

unsigned char *assignWithCopy for GetTaskResponse(unsigned char *a1, unsigned char *a2)
{
  *a1 = *a2;
  uint64_t v45 = (int *)type metadata accessor for MLHostTask(0);
  uint64_t v4 = v45[5];
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  *(void *)uint64_t v5 = *(void *)&a2[v4];
  *((void *)v5 + 1) = *(void *)&a2[v4 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v5 + 2) = *((void *)v6 + 2);
  *((void *)v5 + 3) = *((void *)v6 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v7 = *((_OWORD *)v6 + 2);
  *((_WORD *)v5 + 24) = *((_WORD *)v6 + 24);
  *((_OWORD *)v5 + 2) = v7;
  long long v8 = *(_OWORD *)(v6 + 56);
  *((_WORD *)v5 + 36) = *((_WORD *)v6 + 36);
  *(_OWORD *)(v5 + 56) = v8;
  v5[74] = v6[74];
  v5[75] = v6[75];
  v5[76] = v6[76];
  v5[77] = v6[77];
  v5[78] = v6[78];
  uint64_t v9 = *((void *)v6 + 10);
  v5[88] = v6[88];
  *((void *)v5 + 10) = v9;
  v5[89] = v6[89];
  v5[90] = v6[90];
  v5[91] = v6[91];
  v5[92] = v6[92];
  v5[93] = v6[93];
  v5[94] = v6[94];
  v5[95] = v6[95];
  v5[96] = v6[96];
  *((void *)v5 + 13) = *((void *)v6 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[112] = v6[112];
  v5[113] = v6[113];
  uint64_t v10 = *((void *)v6 + 15);
  v5[128] = v6[128];
  *((void *)v5 + 15) = v10;
  uint64_t v11 = *((void *)v6 + 17);
  v5[144] = v6[144];
  *((void *)v5 + 17) = v11;
  v5[145] = v6[145];
  v5[146] = v6[146];
  *((void *)v5 + 19) = *((void *)v6 + 19);
  *((void *)v5 + 20) = *((void *)v6 + 20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = *((void *)v6 + 21);
  v5[176] = v6[176];
  *((void *)v5 + 21) = v12;
  *((void *)v5 + 23) = *((void *)v6 + 23);
  *((void *)v5 + 24) = *((void *)v6 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = *((void *)v6 + 25);
  v5[208] = v6[208];
  *((void *)v5 + 25) = v13;
  v5[209] = v6[209];
  v5[210] = v6[210];
  *((void *)v5 + 27) = *((void *)v6 + 27);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v5 + 28) = *((void *)v6 + 28);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[232] = v6[232];
  v5[233] = v6[233];
  v5[234] = v6[234];
  *((void *)v5 + 30) = *((void *)v6 + 30);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v5 + 31) = *((void *)v6 + 31);
  *((void *)v5 + 32) = *((void *)v6 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[264] = v6[264];
  v5[265] = v6[265];
  *((void *)v5 + 34) = *((void *)v6 + 34);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v5 + 35) = *((void *)v6 + 35);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = (int *)type metadata accessor for TaskDefinition(0);
  uint64_t v15 = v14[7];
  uint64_t v16 = &v5[v15];
  uint64_t v17 = &v6[v15];
  uint64_t v18 = sub_254526D90();
  uint64_t v46 = *(void *)(v18 - 8);
  uint64_t v19 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v46 + 48);
  int v20 = v19(v16, 1, v18);
  int v47 = v19;
  int v21 = v19(v17, 1, v18);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v46 + 16))(v16, v17, v18);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v46 + 56))(v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(unsigned char *, uint64_t))(v46 + 8))(v16, v18);
LABEL_6:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v46 + 24))(v16, v17, v18);
LABEL_7:
  uint64_t v23 = v14[8];
  uint64_t v24 = &v5[v23];
  uint64_t v25 = &v6[v23];
  int v26 = v19(&v5[v23], 1, v18);
  int v27 = v19(v25, 1, v18);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v46 + 16))(v24, v25, v18);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v46 + 56))(v24, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v27)
  {
    (*(void (**)(unsigned char *, uint64_t))(v46 + 8))(v24, v18);
LABEL_12:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v46 + 24))(v24, v25, v18);
LABEL_13:
  *(void *)&v5[v14[9]] = *(void *)&v6[v14[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v29 = v45[6];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  *uint64_t v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[v45[7]] = a2[v45[7]];
  uint64_t v32 = v45[8];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  int v35 = v19(&a1[v32], 1, v18);
  int v36 = v19(v34, 1, v18);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v46 + 16))(v33, v34, v18);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v46 + 56))(v33, 0, 1, v18);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v36)
  {
    (*(void (**)(unsigned char *, uint64_t))(v46 + 8))(v33, v18);
LABEL_18:
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v46 + 24))(v33, v34, v18);
LABEL_19:
  uint64_t v38 = v45[9];
  BOOL v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  int v41 = v47(&a1[v38], 1, v18);
  int v42 = v47(v40, 1, v18);
  if (!v41)
  {
    if (!v42)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v46 + 24))(v39, v40, v18);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v46 + 8))(v39, v18);
    goto LABEL_24;
  }
  if (v42)
  {
LABEL_24:
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v46 + 16))(v39, v40, v18);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v46 + 56))(v39, 0, 1, v18);
  return a1;
}

unsigned char *initializeWithTake for GetTaskResponse(unsigned char *a1, unsigned char *a2)
{
  *a1 = *a2;
  int v36 = (int *)type metadata accessor for MLHostTask(0);
  uint64_t v4 = v36[5];
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  long long v7 = *(_OWORD *)&a2[v4 + 16];
  _OWORD *v5 = *(_OWORD *)&a2[v4];
  v5[1] = v7;
  long long v8 = *(_OWORD *)&a2[v4 + 240];
  v5[14] = *(_OWORD *)&a2[v4 + 224];
  v5[15] = v8;
  long long v9 = *(_OWORD *)&a2[v4 + 272];
  v5[16] = *(_OWORD *)&a2[v4 + 256];
  v5[17] = v9;
  long long v10 = *(_OWORD *)&a2[v4 + 176];
  v5[10] = *(_OWORD *)&a2[v4 + 160];
  v5[11] = v10;
  long long v11 = *(_OWORD *)&a2[v4 + 208];
  v5[12] = *(_OWORD *)&a2[v4 + 192];
  v5[13] = v11;
  long long v12 = *(_OWORD *)&a2[v4 + 112];
  v5[6] = *(_OWORD *)&a2[v4 + 96];
  v5[7] = v12;
  long long v13 = *(_OWORD *)&a2[v4 + 144];
  v5[8] = *(_OWORD *)&a2[v4 + 128];
  v5[9] = v13;
  long long v14 = *(_OWORD *)&a2[v4 + 48];
  v5[2] = *(_OWORD *)&a2[v4 + 32];
  _OWORD v5[3] = v14;
  long long v15 = *(_OWORD *)&a2[v4 + 80];
  v5[4] = *(_OWORD *)&a2[v4 + 64];
  v5[5] = v15;
  uint64_t v16 = (int *)type metadata accessor for TaskDefinition(0);
  uint64_t v17 = v16[7];
  uint64_t v18 = (char *)v5 + v17;
  uint64_t v19 = &v6[v17];
  uint64_t v20 = sub_254526D90();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v37 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v21 + 48);
  if (v37(v19, 1, v20))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, unsigned char *, uint64_t))(v21 + 32))(v18, v19, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  uint64_t v23 = v16[8];
  uint64_t v24 = (char *)v5 + v23;
  uint64_t v25 = &v6[v23];
  if (v37(&v6[v23], 1, v20))
  {
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, unsigned char *, uint64_t))(v21 + 32))(v24, v25, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v24, 0, 1, v20);
  }
  *(void *)((char *)v5 + v16[9]) = *(void *)&v6[v16[9]];
  *(_OWORD *)&a1[v36[6]] = *(_OWORD *)&a2[v36[6]];
  a1[v36[7]] = a2[v36[7]];
  uint64_t v27 = v36[8];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  if (v37(&a2[v27], 1, v20))
  {
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 32))(v28, v29, v20);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v21 + 56))(v28, 0, 1, v20);
  }
  uint64_t v31 = v36[9];
  uint64_t v32 = &a1[v31];
  uint64_t v33 = &a2[v31];
  if (v37(v33, 1, v20))
  {
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 32))(v32, v33, v20);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v21 + 56))(v32, 0, 1, v20);
  }
  return a1;
}

unsigned char *assignWithTake for GetTaskResponse(unsigned char *a1, unsigned char *a2)
{
  *a1 = *a2;
  uint64_t v45 = (int *)type metadata accessor for MLHostTask(0);
  uint64_t v46 = a1;
  uint64_t v4 = v45[5];
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = *(void *)&a2[v4 + 8];
  *(void *)uint64_t v5 = *(void *)&a2[v4];
  *((void *)v5 + 1) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *((void *)v6 + 3);
  *((void *)v5 + 2) = *((void *)v6 + 2);
  *((void *)v5 + 3) = v8;
  swift_bridgeObjectRelease();
  *((_OWORD *)v5 + 2) = *((_OWORD *)v6 + 2);
  *((_WORD *)v5 + 24) = *((_WORD *)v6 + 24);
  *(_OWORD *)(v5 + 56) = *(_OWORD *)(v6 + 56);
  *((_WORD *)v5 + 36) = *((_WORD *)v6 + 36);
  *(_DWORD *)(v5 + 74) = *(_DWORD *)(v6 + 74);
  v5[78] = v6[78];
  *((void *)v5 + 10) = *((void *)v6 + 10);
  v5[88] = v6[88];
  *(void *)(v5 + 89) = *(void *)(v6 + 89);
  *((void *)v5 + 13) = *((void *)v6 + 13);
  swift_bridgeObjectRelease();
  *((_WORD *)v5 + 56) = *((_WORD *)v6 + 56);
  *((void *)v5 + 15) = *((void *)v6 + 15);
  v5[128] = v6[128];
  *((void *)v5 + 17) = *((void *)v6 + 17);
  v5[144] = v6[144];
  *(_WORD *)(v5 + 145) = *(_WORD *)(v6 + 145);
  uint64_t v9 = *((void *)v6 + 20);
  *((void *)v5 + 19) = *((void *)v6 + 19);
  *((void *)v5 + 20) = v9;
  swift_bridgeObjectRelease();
  *((void *)v5 + 21) = *((void *)v6 + 21);
  v5[176] = v6[176];
  uint64_t v10 = *((void *)v6 + 24);
  *((void *)v5 + 23) = *((void *)v6 + 23);
  *((void *)v5 + 24) = v10;
  swift_bridgeObjectRelease();
  *((void *)v5 + 25) = *((void *)v6 + 25);
  v5[208] = v6[208];
  *(_WORD *)(v5 + 209) = *(_WORD *)(v6 + 209);
  *((void *)v5 + 27) = *((void *)v6 + 27);
  swift_bridgeObjectRelease();
  *((void *)v5 + 28) = *((void *)v6 + 28);
  swift_bridgeObjectRelease();
  v5[232] = v6[232];
  *(_WORD *)(v5 + 233) = *(_WORD *)(v6 + 233);
  *((void *)v5 + 30) = *((void *)v6 + 30);
  swift_bridgeObjectRelease();
  uint64_t v11 = *((void *)v6 + 32);
  *((void *)v5 + 31) = *((void *)v6 + 31);
  *((void *)v5 + 32) = v11;
  swift_bridgeObjectRelease();
  *((_WORD *)v5 + 132) = *((_WORD *)v6 + 132);
  *((void *)v5 + 34) = *((void *)v6 + 34);
  swift_bridgeObjectRelease();
  *((void *)v5 + 35) = *((void *)v6 + 35);
  swift_bridgeObjectRelease();
  long long v12 = (int *)type metadata accessor for TaskDefinition(0);
  uint64_t v13 = v12[7];
  long long v14 = &v5[v13];
  long long v15 = &v6[v13];
  uint64_t v16 = sub_254526D90();
  uint64_t v47 = *(void *)(v16 - 8);
  uint64_t v17 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v47 + 48);
  int v18 = v17(v14, 1, v16);
  int v19 = v17(v15, 1, v16);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 32))(v14, v15, v16);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v47 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(unsigned char *, uint64_t))(v47 + 8))(v14, v16);
LABEL_6:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 40))(v14, v15, v16);
LABEL_7:
  uint64_t v21 = v12[8];
  uint64_t v22 = &v5[v21];
  uint64_t v23 = &v6[v21];
  int v24 = v17(&v5[v21], 1, v16);
  int v25 = v17(v23, 1, v16);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 32))(v22, v23, v16);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v47 + 56))(v22, 0, 1, v16);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v25)
  {
    (*(void (**)(unsigned char *, uint64_t))(v47 + 8))(v22, v16);
LABEL_12:
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 40))(v22, v23, v16);
LABEL_13:
  *(void *)&v5[v12[9]] = *(void *)&v6[v12[9]];
  swift_bridgeObjectRelease();
  uint64_t v27 = v45[6];
  uint64_t v28 = &v46[v27];
  uint64_t v29 = (uint64_t *)&a2[v27];
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *uint64_t v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  v46[v45[7]] = a2[v45[7]];
  uint64_t v32 = v45[8];
  uint64_t v33 = &v46[v32];
  uint64_t v34 = &a2[v32];
  int v35 = v17(&v46[v32], 1, v16);
  int v36 = v17(v34, 1, v16);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 32))(v33, v34, v16);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v47 + 56))(v33, 0, 1, v16);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v36)
  {
    (*(void (**)(unsigned char *, uint64_t))(v47 + 8))(v33, v16);
LABEL_18:
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 40))(v33, v34, v16);
LABEL_19:
  uint64_t v38 = v45[9];
  BOOL v39 = &v46[v38];
  uint64_t v40 = &a2[v38];
  int v41 = v17(&v46[v38], 1, v16);
  int v42 = v17(v40, 1, v16);
  if (!v41)
  {
    if (!v42)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 40))(v39, v40, v16);
      return v46;
    }
    (*(void (**)(unsigned char *, uint64_t))(v47 + 8))(v39, v16);
    goto LABEL_24;
  }
  if (v42)
  {
LABEL_24:
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
    return v46;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 32))(v39, v40, v16);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v47 + 56))(v39, 0, 1, v16);
  return v46;
}

uint64_t getEnumTagSinglePayload for GetTaskResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2544CA768);
}

uint64_t sub_2544CA768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, type metadata accessor for MLHostTask);
}

uint64_t storeEnumTagSinglePayload for GetTaskResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2544CA794);
}

uint64_t sub_2544CA794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, type metadata accessor for MLHostTask);
}

uint64_t sub_2544CA7AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2544CBD18(a1, a2, a3, type metadata accessor for MLHostTask);
}

ValueMetadata *type metadata accessor for ResetTasksRequest()
{
  return &type metadata for ResetTasksRequest;
}

ValueMetadata *type metadata accessor for ResetTasksResponse()
{
  return &type metadata for ResetTasksResponse;
}

uint64_t initializeBufferWithCopyOfBuffer for AddTaskRequest(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for TaskDefinition(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *(void *)a1 = *a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_WORD *)(a1 + 48) = *((_WORD *)a2 + 24);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    *(_WORD *)(a1 + 72) = *((_WORD *)a2 + 36);
    *(_DWORD *)(a1 + 74) = *(_DWORD *)((char *)a2 + 74);
    *(unsigned char *)(a1 + 78) = *((unsigned char *)a2 + 78);
    *(void *)(a1 + 80) = a2[10];
    *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
    *(void *)(a1 + 89) = *(uint64_t *)((char *)a2 + 89);
    *(void *)(a1 + 104) = a2[13];
    *(_WORD *)(a1 + 112) = *((_WORD *)a2 + 56);
    *(void *)(a1 + 120) = a2[15];
    *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
    uint64_t v8 = a2[17];
    *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
    *(void *)(a1 + 136) = v8;
    *(unsigned char *)(a1 + 145) = *((unsigned char *)a2 + 145);
    *(unsigned char *)(a1 + 146) = *((unsigned char *)a2 + 146);
    uint64_t v9 = a2[20];
    *(void *)(a1 + 152) = a2[19];
    *(void *)(a1 + 160) = v9;
    *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
    *(void *)(a1 + 168) = a2[21];
    uint64_t v10 = a2[24];
    *(void *)(a1 + 184) = a2[23];
    *(void *)(a1 + 192) = v10;
    *(unsigned char *)(a1 + 208) = *((unsigned char *)a2 + 208);
    *(void *)(a1 + 200) = a2[25];
    *(_WORD *)(a1 + 209) = *(_WORD *)((char *)a2 + 209);
    uint64_t v11 = a2[28];
    *(void *)(a1 + 216) = a2[27];
    *(void *)(a1 + 224) = v11;
    *(unsigned char *)(a1 + 232) = *((unsigned char *)a2 + 232);
    *(_WORD *)(a1 + 233) = *(_WORD *)((char *)a2 + 233);
    uint64_t v12 = a2[31];
    *(void *)(a1 + 240) = a2[30];
    *(void *)(a1 + 248) = v12;
    *(void *)(a1 + 256) = a2[32];
    *(unsigned char *)(a1 + 264) = *((unsigned char *)a2 + 264);
    *(unsigned char *)(a1 + 265) = *((unsigned char *)a2 + 265);
    uint64_t v13 = a2[35];
    *(void *)(a1 + 272) = a2[34];
    *(void *)(a1 + 280) = v13;
    uint64_t v28 = v4;
    uint64_t v14 = *(int *)(v4 + 28);
    __dst = (void *)(a1 + v14);
    int v25 = (char *)a2 + v14;
    uint64_t v15 = sub_254526D90();
    uint64_t v26 = *(void *)(v15 - 8);
    int v24 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v24(v25, 1, v15))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
      memcpy(__dst, v25, *(void *)(*(void *)(v16 - 8) + 64));
      uint64_t v17 = v26;
    }
    else
    {
      uint64_t v17 = v26;
      (*(void (**)(void *, char *, uint64_t))(v26 + 16))(__dst, v25, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v15);
    }
    uint64_t v19 = *(int *)(v28 + 32);
    uint64_t v20 = (void *)(a1 + v19);
    uint64_t v21 = (char *)a2 + v19;
    if (v24((char *)a2 + v19, 1, v15))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 16))(v20, v21, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v15);
    }
    *(void *)(a1 + *(int *)(v28 + 36)) = *(uint64_t *)((char *)a2 + *(int *)(v28 + 36));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AddTaskRequest(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = type metadata accessor for TaskDefinition(0);
  uint64_t v3 = a1 + *(int *)(v2 + 28);
  uint64_t v4 = sub_254526D90();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(v3, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  uint64_t v7 = a1 + *(int *)(v2 + 32);
  if (!v6(v7, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AddTaskRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(_DWORD *)(a1 + 74) = *(_DWORD *)(a2 + 74);
  *(unsigned char *)(a1 + 78) = *(unsigned char *)(a2 + 78);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 89) = *(void *)(a2 + 89);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  uint64_t v6 = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 136) = v6;
  *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
  *(unsigned char *)(a1 + 146) = *(unsigned char *)(a2 + 146);
  uint64_t v7 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v7;
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  uint64_t v8 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v8;
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(_WORD *)(a1 + 209) = *(_WORD *)(a2 + 209);
  uint64_t v9 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v9;
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(_WORD *)(a1 + 233) = *(_WORD *)(a2 + 233);
  uint64_t v10 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v10;
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  *(unsigned char *)(a1 + 265) = *(unsigned char *)(a2 + 265);
  uint64_t v11 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v11;
  int v25 = (int *)type metadata accessor for TaskDefinition(0);
  uint64_t v12 = v25[7];
  __dst = (void *)(a1 + v12);
  uint64_t v23 = (const void *)(a2 + v12);
  uint64_t v13 = sub_254526D90();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v22 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v22(v23, 1, v13))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(__dst, v23, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(__dst, v23, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
  }
  uint64_t v16 = v14;
  uint64_t v17 = v25[8];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  if (v22((const void *)(a2 + v17), 1, v13))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v18, v19, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v18, 0, 1, v13);
  }
  *(void *)(a1 + v25[9]) = *(void *)(a2 + v25[9]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AddTaskRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v4;
  long long v5 = *(_OWORD *)(a2 + 56);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(unsigned char *)(a1 + 78) = *(unsigned char *)(a2 + 78);
  uint64_t v6 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = v6;
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  *(unsigned char *)(a1 + 90) = *(unsigned char *)(a2 + 90);
  *(unsigned char *)(a1 + 91) = *(unsigned char *)(a2 + 91);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  *(unsigned char *)(a1 + 93) = *(unsigned char *)(a2 + 93);
  *(unsigned char *)(a1 + 94) = *(unsigned char *)(a2 + 94);
  *(unsigned char *)(a1 + 95) = *(unsigned char *)(a2 + 95);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
  uint64_t v7 = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 120) = v7;
  uint64_t v8 = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 136) = v8;
  *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
  *(unsigned char *)(a1 + 146) = *(unsigned char *)(a2 + 146);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 168) = v9;
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 200);
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(void *)(a1 + 200) = v10;
  *(unsigned char *)(a1 + 209) = *(unsigned char *)(a2 + 209);
  *(unsigned char *)(a1 + 210) = *(unsigned char *)(a2 + 210);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(unsigned char *)(a1 + 233) = *(unsigned char *)(a2 + 233);
  *(unsigned char *)(a1 + 234) = *(unsigned char *)(a2 + 234);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  *(unsigned char *)(a1 + 265) = *(unsigned char *)(a2 + 265);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = (int *)type metadata accessor for TaskDefinition(0);
  uint64_t v12 = v11[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = sub_254526D90();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v13, v14, v15);
LABEL_7:
  uint64_t v21 = v11[8];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  int v24 = v17((void *)(a1 + v21), 1, v15);
  int v25 = v17(v23, 1, v15);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v22, v23, v15);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v22, v15);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v22, v23, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, v15);
LABEL_13:
  *(void *)(a1 + v11[9]) = *(void *)(a2 + v11[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for AddTaskRequest(_OWORD *a1, char *a2)
{
  long long v4 = *((_OWORD *)a2 + 1);
  *a1 = *(_OWORD *)a2;
  a1[1] = v4;
  long long v5 = *((_OWORD *)a2 + 15);
  a1[14] = *((_OWORD *)a2 + 14);
  a1[15] = v5;
  long long v6 = *((_OWORD *)a2 + 17);
  a1[16] = *((_OWORD *)a2 + 16);
  a1[17] = v6;
  long long v7 = *((_OWORD *)a2 + 11);
  a1[10] = *((_OWORD *)a2 + 10);
  a1[11] = v7;
  long long v8 = *((_OWORD *)a2 + 13);
  a1[12] = *((_OWORD *)a2 + 12);
  a1[13] = v8;
  long long v9 = *((_OWORD *)a2 + 7);
  a1[6] = *((_OWORD *)a2 + 6);
  a1[7] = v9;
  long long v10 = *((_OWORD *)a2 + 9);
  a1[8] = *((_OWORD *)a2 + 8);
  a1[9] = v10;
  long long v11 = *((_OWORD *)a2 + 3);
  a1[2] = *((_OWORD *)a2 + 2);
  a1[3] = v11;
  long long v12 = *((_OWORD *)a2 + 5);
  a1[4] = *((_OWORD *)a2 + 4);
  a1[5] = v12;
  uint64_t v13 = (int *)type metadata accessor for TaskDefinition(0);
  uint64_t v14 = v13[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = &a2[v14];
  uint64_t v17 = sub_254526D90();
  uint64_t v18 = *(void *)(v17 - 8);
  int v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v19(v16, 1, v17))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v21 = v13[8];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = &a2[v21];
  if (v19(&a2[v21], 1, v17))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v22, v23, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v22, 0, 1, v17);
  }
  *(void *)((char *)a1 + v13[9]) = *(void *)&a2[v13[9]];
  return a1;
}

uint64_t assignWithTake for AddTaskRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(_DWORD *)(a1 + 74) = *(_DWORD *)(a2 + 74);
  *(unsigned char *)(a1 + 78) = *(unsigned char *)(a2 + 78);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 89) = *(void *)(a2 + 89);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_WORD *)(a1 + 145) = *(_WORD *)(a2 + 145);
  uint64_t v6 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  uint64_t v7 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(_WORD *)(a1 + 209) = *(_WORD *)(a2 + 209);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(_WORD *)(a1 + 233) = *(_WORD *)(a2 + 233);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 264) = *(_WORD *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_bridgeObjectRelease();
  long long v9 = (int *)type metadata accessor for TaskDefinition(0);
  uint64_t v10 = v9[7];
  long long v11 = (void *)(a1 + v10);
  long long v12 = (void *)(a2 + v10);
  uint64_t v13 = sub_254526D90();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  uint64_t v19 = v9[8];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  int v22 = v15((void *)(a1 + v19), 1, v13);
  int v23 = v15(v21, 1, v13);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v20, v21, v13);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v20, v13);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v20, v21, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
LABEL_13:
  *(void *)(a1 + v9[9]) = *(void *)(a2 + v9[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AddTaskRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2544CBBD8);
}

uint64_t sub_2544CBBD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, type metadata accessor for TaskDefinition);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);

  return v7(a1, a2, v6);
}

uint64_t storeEnumTagSinglePayload for AddTaskRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2544CBC74);
}

uint64_t sub_2544CBC74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, type metadata accessor for TaskDefinition);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v7 = a5(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(a1, a2, a2, v7);
}

uint64_t sub_2544CBD00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2544CBD18(a1, a2, a3, type metadata accessor for TaskDefinition);
}

uint64_t sub_2544CBD18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for AddTaskResponse(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AddTaskResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2544CBF24);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AddTaskResponse()
{
  return &type metadata for AddTaskResponse;
}

ValueMetadata *type metadata accessor for CleanTasksRequest()
{
  return &type metadata for CleanTasksRequest;
}

ValueMetadata *type metadata accessor for CleanTasksResponse()
{
  return &type metadata for CleanTasksResponse;
}

ValueMetadata *type metadata accessor for GetOnDemandTaskRequest()
{
  return &type metadata for GetOnDemandTaskRequest;
}

unsigned char *storeEnumTagSinglePayload for OnDemandError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2544CC058);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnDemandError()
{
  return &type metadata for OnDemandError;
}

ValueMetadata *type metadata accessor for OnDemandResult()
{
  return &type metadata for OnDemandResult;
}

uint64_t getEnumTagSinglePayload for GetOnDemandTaskRequestResponse(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 65282 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65282 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65282;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65282;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65282;
    }
  }
LABEL_17:
  if (*(unsigned __int8 *)a1 <= 2u) {
    int v6 = 2;
  }
  else {
    int v6 = *(unsigned __int8 *)a1;
  }
  int v7 = v6 - 3;
  if (*(unsigned __int8 *)a1 < 2u) {
    int v8 = -1;
  }
  else {
    int v8 = v7;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for GetOnDemandTaskRequestResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65282 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65282 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 254;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2544CC214);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GetOnDemandTaskRequestResponse()
{
  return &type metadata for GetOnDemandTaskRequestResponse;
}

uint64_t getEnumTagSinglePayload for ListExtensionsRequest(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ListExtensionsRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListExtensionsRequest()
{
  return &type metadata for ListExtensionsRequest;
}

ValueMetadata *type metadata accessor for ListExtensionsResponse()
{
  return &type metadata for ListExtensionsResponse;
}

void *assignWithCopy for XPCRemoteError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCRemoteError(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCRemoteError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GetExtensionRequest()
{
  return &type metadata for GetExtensionRequest;
}

ValueMetadata *type metadata accessor for GetExtensionResponse()
{
  return &type metadata for GetExtensionResponse;
}

ValueMetadata *type metadata accessor for GetHostConfigurationRequest()
{
  return &type metadata for GetHostConfigurationRequest;
}

ValueMetadata *type metadata accessor for GetHostConfigurationResponse()
{
  return &type metadata for GetHostConfigurationResponse;
}

ValueMetadata *type metadata accessor for SetHostConfigurationRequest()
{
  return &type metadata for SetHostConfigurationRequest;
}

uint64_t destroy for SetHostConfigurationResponse()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s20LighthouseBackground28SetHostConfigurationResponseVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SetHostConfigurationResponse(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for SetHostConfigurationResponse(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SetHostConfigurationResponse(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SetHostConfigurationResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SetHostConfigurationResponse()
{
  return &type metadata for SetHostConfigurationResponse;
}

ValueMetadata *type metadata accessor for GetNotificationsConfigRequest()
{
  return &type metadata for GetNotificationsConfigRequest;
}

ValueMetadata *type metadata accessor for GetNotificationsConfigResponse()
{
  return &type metadata for GetNotificationsConfigResponse;
}

ValueMetadata *type metadata accessor for ResetNotificationsRequest()
{
  return &type metadata for ResetNotificationsRequest;
}

uint64_t _s20LighthouseBackground17ResetTasksRequestVwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s20LighthouseBackground17ResetTasksRequestVwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2544CC784);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResetNotificationsResponse()
{
  return &type metadata for ResetNotificationsResponse;
}

ValueMetadata *type metadata accessor for ResetNotificationsResponse.CodingKeys()
{
  return &type metadata for ResetNotificationsResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for ResetNotificationsRequest.CodingKeys()
{
  return &type metadata for ResetNotificationsRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for GetNotificationsConfigResponse.CodingKeys()
{
  return &type metadata for GetNotificationsConfigResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for GetNotificationsConfigRequest.CodingKeys()
{
  return &type metadata for GetNotificationsConfigRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for SetHostConfigurationResponse.CodingKeys()
{
  return &type metadata for SetHostConfigurationResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for SetHostConfigurationRequest.CodingKeys()
{
  return &type metadata for SetHostConfigurationRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for GetHostConfigurationResponse.CodingKeys()
{
  return &type metadata for GetHostConfigurationResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for GetHostConfigurationRequest.CodingKeys()
{
  return &type metadata for GetHostConfigurationRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for GetExtensionResponse.CodingKeys()
{
  return &type metadata for GetExtensionResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for GetExtensionRequest.CodingKeys()
{
  return &type metadata for GetExtensionRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for ListExtensionsResponse.CodingKeys()
{
  return &type metadata for ListExtensionsResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for ListExtensionsRequest.CodingKeys()
{
  return &type metadata for ListExtensionsRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for GetOnDemandTaskRequestResponse.CodingKeys()
{
  return &type metadata for GetOnDemandTaskRequestResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for GetOnDemandTaskRequest.CodingKeys()
{
  return &type metadata for GetOnDemandTaskRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for CleanTasksResponse.CodingKeys()
{
  return &type metadata for CleanTasksResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for CleanTasksRequest.CodingKeys()
{
  return &type metadata for CleanTasksRequest.CodingKeys;
}

unsigned char *_s20LighthouseBackground14OnDemandResultOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2544CC990);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AddTaskResponse.CodingKeys()
{
  return &type metadata for AddTaskResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for AddTaskRequest.CodingKeys()
{
  return &type metadata for AddTaskRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for ResetTasksResponse.CodingKeys()
{
  return &type metadata for ResetTasksResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for ResetTasksRequest.CodingKeys()
{
  return &type metadata for ResetTasksRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for GetTaskResponse.CodingKeys()
{
  return &type metadata for GetTaskResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for GetTaskRequest.CodingKeys()
{
  return &type metadata for GetTaskRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for ListTasksResponse.CodingKeys()
{
  return &type metadata for ListTasksResponse.CodingKeys;
}

unsigned char *_s20LighthouseBackground26ResetNotificationsResponseV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2544CCAC4);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ListTasksRequest.CodingKeys()
{
  return &type metadata for ListTasksRequest.CodingKeys;
}

unint64_t sub_2544CCB00()
{
  unint64_t result = qword_269DF3E98;
  if (!qword_269DF3E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3E98);
  }
  return result;
}

unint64_t sub_2544CCB58()
{
  unint64_t result = qword_269DF3EA0;
  if (!qword_269DF3EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3EA0);
  }
  return result;
}

unint64_t sub_2544CCBB0()
{
  unint64_t result = qword_269DF3EA8;
  if (!qword_269DF3EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3EA8);
  }
  return result;
}

unint64_t sub_2544CCC08()
{
  unint64_t result = qword_269DF3EB0;
  if (!qword_269DF3EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3EB0);
  }
  return result;
}

unint64_t sub_2544CCC60()
{
  unint64_t result = qword_269DF3EB8;
  if (!qword_269DF3EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3EB8);
  }
  return result;
}

unint64_t sub_2544CCCB8()
{
  unint64_t result = qword_269DF3EC0;
  if (!qword_269DF3EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3EC0);
  }
  return result;
}

unint64_t sub_2544CCD10()
{
  unint64_t result = qword_269DF3EC8;
  if (!qword_269DF3EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3EC8);
  }
  return result;
}

unint64_t sub_2544CCD68()
{
  unint64_t result = qword_269DF3ED0;
  if (!qword_269DF3ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3ED0);
  }
  return result;
}

unint64_t sub_2544CCDC0()
{
  unint64_t result = qword_269DF3ED8;
  if (!qword_269DF3ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3ED8);
  }
  return result;
}

unint64_t sub_2544CCE18()
{
  unint64_t result = qword_269DF3EE0;
  if (!qword_269DF3EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3EE0);
  }
  return result;
}

unint64_t sub_2544CCE70()
{
  unint64_t result = qword_269DF3EE8;
  if (!qword_269DF3EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3EE8);
  }
  return result;
}

unint64_t sub_2544CCEC8()
{
  unint64_t result = qword_269DF3EF0;
  if (!qword_269DF3EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3EF0);
  }
  return result;
}

unint64_t sub_2544CCF20()
{
  unint64_t result = qword_269DF3EF8;
  if (!qword_269DF3EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3EF8);
  }
  return result;
}

unint64_t sub_2544CCF78()
{
  unint64_t result = qword_269DF3F00;
  if (!qword_269DF3F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3F00);
  }
  return result;
}

unint64_t sub_2544CCFD0()
{
  unint64_t result = qword_269DF3F08;
  if (!qword_269DF3F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3F08);
  }
  return result;
}

unint64_t sub_2544CD028()
{
  unint64_t result = qword_269DF3F10;
  if (!qword_269DF3F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3F10);
  }
  return result;
}

unint64_t sub_2544CD080()
{
  unint64_t result = qword_269DF3F18;
  if (!qword_269DF3F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3F18);
  }
  return result;
}

unint64_t sub_2544CD0D8()
{
  unint64_t result = qword_269DF3F20;
  if (!qword_269DF3F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3F20);
  }
  return result;
}

unint64_t sub_2544CD130()
{
  unint64_t result = qword_269DF3F28;
  if (!qword_269DF3F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3F28);
  }
  return result;
}

unint64_t sub_2544CD188()
{
  unint64_t result = qword_269DF3F30;
  if (!qword_269DF3F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3F30);
  }
  return result;
}

unint64_t sub_2544CD1E0()
{
  unint64_t result = qword_269DF3F38;
  if (!qword_269DF3F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3F38);
  }
  return result;
}

unint64_t sub_2544CD238()
{
  unint64_t result = qword_269DF3F40;
  if (!qword_269DF3F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3F40);
  }
  return result;
}

unint64_t sub_2544CD290()
{
  unint64_t result = qword_269DF3F48;
  if (!qword_269DF3F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3F48);
  }
  return result;
}

unint64_t sub_2544CD2E8()
{
  unint64_t result = qword_269DF3F50;
  if (!qword_269DF3F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3F50);
  }
  return result;
}

unint64_t sub_2544CD340()
{
  unint64_t result = qword_269DF3F58;
  if (!qword_269DF3F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3F58);
  }
  return result;
}

unint64_t sub_2544CD398()
{
  unint64_t result = qword_269DF3F60;
  if (!qword_269DF3F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3F60);
  }
  return result;
}

unint64_t sub_2544CD3F0()
{
  unint64_t result = qword_269DF3F68;
  if (!qword_269DF3F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3F68);
  }
  return result;
}

unint64_t sub_2544CD448()
{
  unint64_t result = qword_269DF3F70;
  if (!qword_269DF3F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3F70);
  }
  return result;
}

unint64_t sub_2544CD4A0()
{
  unint64_t result = qword_269DF3F78;
  if (!qword_269DF3F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3F78);
  }
  return result;
}

unint64_t sub_2544CD4F8()
{
  unint64_t result = qword_269DF3F80;
  if (!qword_269DF3F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3F80);
  }
  return result;
}

unint64_t sub_2544CD550()
{
  unint64_t result = qword_269DF3F88;
  if (!qword_269DF3F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3F88);
  }
  return result;
}

unint64_t sub_2544CD5A8()
{
  unint64_t result = qword_269DF3F90;
  if (!qword_269DF3F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3F90);
  }
  return result;
}

unint64_t sub_2544CD600()
{
  unint64_t result = qword_269DF3F98;
  if (!qword_269DF3F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3F98);
  }
  return result;
}

unint64_t sub_2544CD658()
{
  unint64_t result = qword_269DF3FA0;
  if (!qword_269DF3FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3FA0);
  }
  return result;
}

unint64_t sub_2544CD6B0()
{
  unint64_t result = qword_269DF3FA8;
  if (!qword_269DF3FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3FA8);
  }
  return result;
}

unint64_t sub_2544CD708()
{
  unint64_t result = qword_269DF3FB0;
  if (!qword_269DF3FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3FB0);
  }
  return result;
}

unint64_t sub_2544CD760()
{
  unint64_t result = qword_269DF3FB8;
  if (!qword_269DF3FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3FB8);
  }
  return result;
}

unint64_t sub_2544CD7B8()
{
  unint64_t result = qword_269DF3FC0;
  if (!qword_269DF3FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3FC0);
  }
  return result;
}

unint64_t sub_2544CD810()
{
  unint64_t result = qword_269DF3FC8;
  if (!qword_269DF3FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3FC8);
  }
  return result;
}

unint64_t sub_2544CD868()
{
  unint64_t result = qword_269DF3FD0;
  if (!qword_269DF3FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3FD0);
  }
  return result;
}

unint64_t sub_2544CD8C0()
{
  unint64_t result = qword_269DF3FD8;
  if (!qword_269DF3FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3FD8);
  }
  return result;
}

unint64_t sub_2544CD918()
{
  unint64_t result = qword_269DF3FE0;
  if (!qword_269DF3FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3FE0);
  }
  return result;
}

unint64_t sub_2544CD970()
{
  unint64_t result = qword_269DF3FE8;
  if (!qword_269DF3FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3FE8);
  }
  return result;
}

unint64_t sub_2544CD9C8()
{
  unint64_t result = qword_269DF3FF0;
  if (!qword_269DF3FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3FF0);
  }
  return result;
}

unint64_t sub_2544CDA20()
{
  unint64_t result = qword_269DF3FF8;
  if (!qword_269DF3FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF3FF8);
  }
  return result;
}

unint64_t sub_2544CDA78()
{
  unint64_t result = qword_269DF4000;
  if (!qword_269DF4000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4000);
  }
  return result;
}

unint64_t sub_2544CDAD0()
{
  unint64_t result = qword_269DF4008;
  if (!qword_269DF4008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4008);
  }
  return result;
}

unint64_t sub_2544CDB28()
{
  unint64_t result = qword_269DF4010;
  if (!qword_269DF4010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4010);
  }
  return result;
}

unint64_t sub_2544CDB80()
{
  unint64_t result = qword_269DF4018;
  if (!qword_269DF4018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4018);
  }
  return result;
}

unint64_t sub_2544CDBD8()
{
  unint64_t result = qword_269DF4020;
  if (!qword_269DF4020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4020);
  }
  return result;
}

unint64_t sub_2544CDC30()
{
  unint64_t result = qword_269DF4028;
  if (!qword_269DF4028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4028);
  }
  return result;
}

unint64_t sub_2544CDC88()
{
  unint64_t result = qword_269DF4030;
  if (!qword_269DF4030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4030);
  }
  return result;
}

unint64_t sub_2544CDCE0()
{
  unint64_t result = qword_269DF4038;
  if (!qword_269DF4038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4038);
  }
  return result;
}

unint64_t sub_2544CDD38()
{
  unint64_t result = qword_269DF4040;
  if (!qword_269DF4040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4040);
  }
  return result;
}

unint64_t sub_2544CDD90()
{
  unint64_t result = qword_269DF4048;
  if (!qword_269DF4048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4048);
  }
  return result;
}

unint64_t sub_2544CDDE8()
{
  unint64_t result = qword_269DF4050;
  if (!qword_269DF4050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4050);
  }
  return result;
}

unint64_t sub_2544CDE40()
{
  unint64_t result = qword_269DF4058;
  if (!qword_269DF4058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4058);
  }
  return result;
}

unint64_t sub_2544CDE98()
{
  unint64_t result = qword_269DF4060;
  if (!qword_269DF4060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4060);
  }
  return result;
}

unint64_t sub_2544CDEF0()
{
  unint64_t result = qword_269DF4068;
  if (!qword_269DF4068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4068);
  }
  return result;
}

unint64_t sub_2544CDF48()
{
  unint64_t result = qword_269DF4070;
  if (!qword_269DF4070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4070);
  }
  return result;
}

unint64_t sub_2544CDFA0()
{
  unint64_t result = qword_269DF4078;
  if (!qword_269DF4078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4078);
  }
  return result;
}

unint64_t sub_2544CDFF8()
{
  unint64_t result = qword_269DF4080;
  if (!qword_269DF4080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4080);
  }
  return result;
}

unint64_t sub_2544CE050()
{
  unint64_t result = qword_269DF4088;
  if (!qword_269DF4088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4088);
  }
  return result;
}

unint64_t sub_2544CE0A8()
{
  unint64_t result = qword_269DF4090;
  if (!qword_269DF4090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4090);
  }
  return result;
}

unint64_t sub_2544CE100()
{
  unint64_t result = qword_26B267028;
  if (!qword_26B267028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B267028);
  }
  return result;
}

unint64_t sub_2544CE158()
{
  unint64_t result = qword_26B267020;
  if (!qword_26B267020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B267020);
  }
  return result;
}

unint64_t sub_2544CE1B0()
{
  unint64_t result = qword_269DF4098;
  if (!qword_269DF4098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4098);
  }
  return result;
}

unint64_t sub_2544CE208()
{
  unint64_t result = qword_269DF40A0;
  if (!qword_269DF40A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF40A0);
  }
  return result;
}

unint64_t sub_2544CE260()
{
  unint64_t result = qword_269DF40A8;
  if (!qword_269DF40A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF40A8);
  }
  return result;
}

unint64_t sub_2544CE2B8()
{
  unint64_t result = qword_269DF40B0;
  if (!qword_269DF40B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF40B0);
  }
  return result;
}

unint64_t sub_2544CE310()
{
  unint64_t result = qword_269DF40B8;
  if (!qword_269DF40B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF40B8);
  }
  return result;
}

unint64_t sub_2544CE368()
{
  unint64_t result = qword_269DF40C0;
  if (!qword_269DF40C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF40C0);
  }
  return result;
}

uint64_t sub_2544CE3BC()
{
  return 0x696665446B736174;
}

uint64_t sub_2544CE3E0()
{
  return 1701667182;
}

uint64_t sub_2544CE3F0()
{
  return 1802723700;
}

uint64_t sub_2544CE400()
{
  return 0x74696D696CLL;
}

uint64_t sub_2544CE414()
{
  return 1885693284;
}

uint64_t sub_2544CE424()
{
  return 0x736B736174;
}

uint64_t sub_2544CE438()
{
  return 0x64616F6C6572;
}

uint64_t sub_2544CE44C()
{
  return 0x646564616F6C6572;
}

uint64_t sub_2544CE464()
{
  return 0x6F69736E65747865;
}

uint64_t sub_2544CE488()
{
  return 0x6F69736E65747865;
}

uint64_t sub_2544CE4AC()
{
  return 0x656D614E6B736174;
}

uint64_t sub_2544CE4C4()
{
  return 0x6F69736E65747865;
}

uint64_t sub_2544CE4E0()
{
  return 0x6465646E65747865;
}

uint64_t sub_2544CE4F8()
{
  return 0x6769666E6F63;
}

uint64_t sub_2544CE50C()
{
  return 0x7265747369676572;
}

uint64_t sub_2544CE530()
{
  return 0x736C656E6E616863;
}

uint64_t sub_2544CE554(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x74696D696CLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_2545279E0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2544CE5D4(uint64_t a1, uint64_t a2)
{
  if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_2545279E0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2544CE64C(uint64_t a1, uint64_t a2)
{
  if (a1 == 1802723700 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_2545279E0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2544CE6C4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x696665446B736174 && a2 == 0xEE006E6F6974696ELL)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_2545279E0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2544CE764(uint64_t a1, uint64_t a2)
{
  if (a1 == 1885693284 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_2545279E0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2544CE7DC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x736B736174 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_2545279E0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2544CE85C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x656D614E6B736174 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_2545279E0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2544CE8E4(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x746C75736572 && a2 == 0xE600000000000000;
  if (v3 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2545279E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2544CE9C0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6F69736E65747865 && a2 == 0xEF7869666572506ELL)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_2545279E0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2544CEA60(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6F69736E65747865 && a2 == 0xEA0000000000736ELL)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_2545279E0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2544CEAF0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x8000000254532F50)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_2545279E0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_2544CEB78(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6F69736E65747865 && a2 == 0xEF64726F6365526ELL)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_2545279E0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2544CEC18(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6465646E65747865 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_2545279E0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2544CECA0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6769666E6F63 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_2545279E0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2544CED20(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x73736563637573 && a2 == 0xE700000000000000;
  if (v3 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2545279E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2544CEE04(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7265747369676572 && a2 == 0xEE00796C6E4F6465)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_2545279E0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2544CEEA4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x736C656E6E616863 && a2 == 0xEF6369706F547942)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_2545279E0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2544CEF44(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x64616F6C6572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_2545279E0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2544CEFC4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x646564616F6C6572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_2545279E0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

unint64_t sub_2544CF04C()
{
  unint64_t result = qword_269DF40C8;
  if (!qword_269DF40C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF40C8);
  }
  return result;
}

unint64_t sub_2544CF0A0()
{
  unint64_t result = qword_269DF40D0;
  if (!qword_269DF40D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF40D0);
  }
  return result;
}

double BucketInterval.rawValue.getter()
{
  return dbl_25452DEE8[*v0];
}

LighthouseBackground::BucketInterval_optional __swiftcall BucketInterval.init(argument:)(Swift::String argument)
{
  object = argument._object;
  char v3 = v1;
  BOOL v4 = argument._countAndFlagsBits == 29549 && argument._object == (void *)0xE200000000000000;
  if (v4 || (uint64_t countAndFlagsBits = argument._countAndFlagsBits, (sub_2545279E0() & 1) != 0))
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else if (countAndFlagsBits == 0x646E6F636573 && object == (void *)0xE600000000000000 {
         || (sub_2545279E0() & 1) != 0)
  }
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 1;
  }
  else if (countAndFlagsBits == 0x6574756E696DLL && object == (void *)0xE600000000000000 {
         || (sub_2545279E0() & 1) != 0)
  }
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 2;
  }
  else if (countAndFlagsBits == 0x72756F68666C6168 && object == (void *)0xE800000000000000 {
         || (sub_2545279E0() & 1) != 0)
  }
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 3;
  }
  else if (countAndFlagsBits == 1920298856 && object == (void *)0xE400000000000000 || (sub_2545279E0() & 1) != 0)
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 4;
  }
  else if (countAndFlagsBits == 0x796164666C6168 && object == (void *)0xE700000000000000 {
         || (sub_2545279E0() & 1) != 0)
  }
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 5;
  }
  else if (countAndFlagsBits == 7954788 && object == (void *)0xE300000000000000 || (sub_2545279E0() & 1) != 0)
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 6;
  }
  else if (countAndFlagsBits == 1801807223 && object == (void *)0xE400000000000000)
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 7;
  }
  else
  {
    char v8 = sub_2545279E0();
    result.value = swift_bridgeObjectRelease();
    if (v8) {
      char v7 = 7;
    }
    else {
      char v7 = 8;
    }
  }
  *char v3 = v7;
  return result;
}

uint64_t BucketInterval.description.getter()
{
  return qword_25452DE68[*v0];
}

LighthouseBackground::BucketInterval_optional __swiftcall BucketInterval.init(rawValue:)(Swift::Double rawValue)
{
  if (rawValue == 0.001)
  {
    *uint64_t v1 = 0;
  }
  else if (rawValue == 1.0)
  {
    *uint64_t v1 = 1;
  }
  else if (rawValue == 60.0)
  {
    *uint64_t v1 = 2;
  }
  else if (rawValue == 1800.0)
  {
    *uint64_t v1 = 3;
  }
  else if (rawValue == 3600.0)
  {
    *uint64_t v1 = 4;
  }
  else
  {
    if (rawValue == 604800.0) {
      char v2 = 7;
    }
    else {
      char v2 = 8;
    }
    if (rawValue == 86400.0) {
      char v3 = 6;
    }
    else {
      char v3 = v2;
    }
    if (rawValue == 43200.0) {
      char v4 = 5;
    }
    else {
      char v4 = v3;
    }
    *uint64_t v1 = v4;
  }
  return result;
}

void *static BucketInterval.allCases.getter()
{
  return &unk_2703D51D8;
}

BOOL sub_2544CF578(char *a1, char *a2)
{
  return sub_254490D08(*a1, *a2);
}

unint64_t sub_2544CF588()
{
  unint64_t result = qword_269DF40D8;
  if (!qword_269DF40D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF40D8);
  }
  return result;
}

uint64_t sub_2544CF5DC()
{
  return sub_25451B764();
}

uint64_t sub_2544CF5E8()
{
  return sub_25451B154();
}

uint64_t sub_2544CF5F0()
{
  return sub_25451B764();
}

LighthouseBackground::BucketInterval_optional sub_2544CF5F8(Swift::Double *a1)
{
  return BucketInterval.init(rawValue:)(*a1);
}

double sub_2544CF600@<D0>(double *a1@<X8>)
{
  double result = dbl_25452DEE8[*v1];
  *a1 = result;
  return result;
}

unint64_t sub_2544CF61C()
{
  unint64_t result = qword_269DF40E0;
  if (!qword_269DF40E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DF40E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF40E0);
  }
  return result;
}

void sub_2544CF678(void *a1@<X8>)
{
  *a1 = &unk_2703D51D8;
}

uint64_t sub_2544CF688()
{
  return sub_254527180();
}

uint64_t sub_2544CF6E8()
{
  return sub_254527160();
}

uint64_t getEnumTagSinglePayload for TaskRequestMotionState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BucketInterval(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2544CF898);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BucketInterval()
{
  return &type metadata for BucketInterval;
}

unint64_t sub_2544CF8D0()
{
  unint64_t result = qword_269DF40F0;
  if (!qword_269DF40F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF40F0);
  }
  return result;
}

uint64_t sub_2544CF924(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

unint64_t XPCConnectionError.description.getter()
{
  unint64_t result = 0xD000000000000012;
  switch(*v0)
  {
    case 1:
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0x206E776F6E6B6E55;
      break;
    default:
      return result;
  }
  return result;
}

BOOL static XPCConnectionError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t XPCConnectionError.hash(into:)()
{
  return sub_254527A90();
}

unint64_t sub_2544CFA60(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2544CFB00()
{
  return sub_2544CFA60(*v0);
}

uint64_t sub_2544CFB08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544D71BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2544CFB30(uint64_t a1)
{
  unint64_t v2 = sub_2544D01C8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544CFB6C(uint64_t a1)
{
  unint64_t v2 = sub_2544D01C8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2544CFBA8(uint64_t a1)
{
  unint64_t v2 = sub_2544D02C4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544CFBE4(uint64_t a1)
{
  unint64_t v2 = sub_2544D02C4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2544CFC20(uint64_t a1)
{
  unint64_t v2 = sub_2544D0318();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544CFC5C(uint64_t a1)
{
  unint64_t v2 = sub_2544D0318();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2544CFC98(uint64_t a1)
{
  unint64_t v2 = sub_2544D0270();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544CFCD4(uint64_t a1)
{
  unint64_t v2 = sub_2544D0270();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2544CFD10(uint64_t a1)
{
  unint64_t v2 = sub_2544D021C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544CFD4C(uint64_t a1)
{
  unint64_t v2 = sub_2544D021C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t XPCConnectionError.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4100);
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v29 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4108);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4110);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  MEMORY[0x270FA5388](v7);
  int v23 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4118);
  uint64_t v21 = *(void *)(v9 - 8);
  uint64_t v22 = v9;
  MEMORY[0x270FA5388](v9);
  long long v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4120);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544D01C8();
  sub_254527B00();
  switch(v16)
  {
    case 1:
      char v33 = 1;
      sub_2544D02C4();
      int v17 = v23;
      sub_2545278B0();
      uint64_t v19 = v24;
      uint64_t v18 = v25;
      goto LABEL_6;
    case 2:
      char v34 = 2;
      sub_2544D0270();
      int v17 = v26;
      sub_2545278B0();
      uint64_t v19 = v27;
      uint64_t v18 = v28;
      goto LABEL_6;
    case 3:
      char v35 = 3;
      sub_2544D021C();
      int v17 = v29;
      sub_2545278B0();
      uint64_t v19 = v30;
      uint64_t v18 = v31;
LABEL_6:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      break;
    default:
      char v32 = 0;
      sub_2544D0318();
      sub_2545278B0();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v22);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_2544D01C8()
{
  unint64_t result = qword_269DF4128;
  if (!qword_269DF4128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4128);
  }
  return result;
}

unint64_t sub_2544D021C()
{
  unint64_t result = qword_269DF4130;
  if (!qword_269DF4130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4130);
  }
  return result;
}

unint64_t sub_2544D0270()
{
  unint64_t result = qword_269DF4138;
  if (!qword_269DF4138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4138);
  }
  return result;
}

unint64_t sub_2544D02C4()
{
  unint64_t result = qword_269DF4140;
  if (!qword_269DF4140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4140);
  }
  return result;
}

unint64_t sub_2544D0318()
{
  unint64_t result = qword_269DF4148;
  if (!qword_269DF4148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4148);
  }
  return result;
}

uint64_t XPCConnectionError.hashValue.getter()
{
  return sub_254527AB0();
}

uint64_t XPCConnectionError.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4150);
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v48 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4158);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  uint64_t v45 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v46 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4160);
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4168);
  uint64_t v41 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(qword_269DF4170);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  int v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  uint64_t v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_2544D01C8();
  uint64_t v19 = v52;
  sub_254527AF0();
  if (v19) {
    goto LABEL_7;
  }
  uint64_t v39 = v11;
  uint64_t v40 = v10;
  uint64_t v52 = 0;
  uint64_t v21 = v48;
  uint64_t v20 = v49;
  uint64_t v22 = v50;
  int v23 = v17;
  uint64_t v24 = sub_254527890();
  if (*(void *)(v24 + 16) != 1)
  {
    uint64_t v27 = sub_254527690();
    swift_allocError();
    uint64_t v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3460);
    *uint64_t v29 = &type metadata for XPCConnectionError;
    sub_2545277B0();
    sub_254527680();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x263F8DCB0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
LABEL_7:
    uint64_t v30 = (uint64_t)v51;
    return __swift_destroy_boxed_opaque_existential_1(v30);
  }
  char v25 = *(unsigned char *)(v24 + 32);
  switch(v25)
  {
    case 1:
      char v54 = 1;
      sub_2544D02C4();
      char v32 = v40;
      uint64_t v33 = v52;
      sub_2545277A0();
      if (v33) {
        goto LABEL_12;
      }
      uint64_t v35 = v42;
      uint64_t v34 = v43;
      goto LABEL_16;
    case 2:
      char v55 = 2;
      sub_2544D0270();
      char v32 = v46;
      uint64_t v36 = v52;
      sub_2545277A0();
      if (v36) {
        goto LABEL_12;
      }
      uint64_t v34 = v44;
      uint64_t v35 = v45;
LABEL_16:
      (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
      goto LABEL_17;
    case 3:
      char v56 = 3;
      sub_2544D021C();
      uint64_t v37 = v52;
      sub_2545277A0();
      if (v37)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        uint64_t v30 = (uint64_t)v51;
        return __swift_destroy_boxed_opaque_existential_1(v30);
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      uint64_t v38 = v47;
      goto LABEL_19;
    default:
      char v53 = 0;
      sub_2544D0318();
      uint64_t v26 = v52;
      sub_2545277A0();
      if (v26)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v39);
LABEL_17:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      uint64_t v38 = v47;
LABEL_19:
      unsigned char *v38 = v25;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v30);
}

uint64_t sub_2544D09EC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return XPCConnectionError.init(from:)(a1, a2);
}

uint64_t sub_2544D0A04(void *a1)
{
  return XPCConnectionError.encode(to:)(a1);
}

uint64_t sub_2544D0A1C@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 48);
  uint64_t v5 = *(void *)(v3 + 56);
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_2544D7AB0;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_2544D0BBC(v4);
}

uint64_t sub_2544D0AB0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_2544D7A50;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *a2;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 48);
  *(void *)(v7 + 48) = v6;
  *(void *)(v7 + 56) = v5;
  sub_2544D0BBC(v3);
  return sub_2544BB6A4(v8);
}

uint64_t sub_2544D0B6C()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 48);
  sub_2544D0BBC(v1);
  return v1;
}

uint64_t sub_2544D0BBC(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_2544D0BCC(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 48);
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return sub_2544BB6A4(v5);
}

uint64_t (*sub_2544D0C20())()
{
  return j__swift_endAccess;
}

uint64_t sub_2544D0C74@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = *(void *)(v3 + 72);
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_2544D73C0;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_2544D0BBC(v4);
}

uint64_t sub_2544D0D08(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_2544D7398;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *a2;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 64);
  *(void *)(v7 + 64) = v6;
  *(void *)(v7 + 72) = v5;
  sub_2544D0BBC(v3);
  return sub_2544BB6A4(v8);
}

uint64_t sub_2544D0DC4()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 64);
  sub_2544D0BBC(v1);
  return v1;
}

uint64_t sub_2544D0E14(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 64);
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return sub_2544BB6A4(v5);
}

uint64_t (*sub_2544D0E68())()
{
  return j_j__swift_endAccess;
}

void sub_2544D0EBC(void *a1, void *a2, _xpc_connection_s *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_26B267250);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x25A27CC00](a1);
  if (sub_254526E10() == v9)
  {
    uint64_t v15 = sub_254526E40();
    swift_unknownObjectRelease();
    if ((void *)v15 == a1)
    {
      swift_beginAccess();
      int v17 = (void (*)(uint64_t))a2[8];
      if (!v17) {
        return;
      }
    }
    else
    {
      uint64_t v16 = sub_254526E50();
      swift_unknownObjectRelease();
      if ((void *)v16 != a1) {
        return;
      }
      swift_beginAccess();
      int v17 = (void (*)(uint64_t))a2[6];
      if (!v17) {
        return;
      }
    }
    uint64_t v23 = swift_retain();
    v17(v23);
    sub_2544BB6A4((uint64_t)v17);
    return;
  }
  if (sub_254526E30() == v9)
  {
    uint64_t v18 = MEMORY[0x25A27CC00](a1);
    if (v18 == sub_254526E30() && xpc_dictionary_get_string(a1, "messageType"))
    {
      uint64_t v24 = sub_254527090();
      unint64_t v26 = v25;
      swift_beginAccess();
      uint64_t v27 = a2[4];
      if (*(void *)(v27 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v28 = sub_2544B9B58(v24, v26);
        if (v29)
        {
          uint64_t v30 = (uint64_t *)(*(void *)(v27 + 56) + 16 * v28);
          uint64_t v32 = *v30;
          uint64_t v31 = v30[1];
          swift_retain();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          uint64_t v33 = sub_254527310();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v8, 1, 1, v33);
          uint64_t v34 = (void *)swift_allocObject();
          void v34[2] = 0;
          v34[3] = 0;
          v34[4] = v32;
          v34[5] = v31;
          v34[6] = a1;
          v34[7] = a3;
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          sub_2544D1FDC((uint64_t)v8, (uint64_t)&unk_269DF4278, (uint64_t)v34);
          swift_release();
          return;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      uint64_t v35 = a2[5];
      if (*(void *)(v35 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v36 = sub_2544B9B58(v24, v26);
        if (v37)
        {
          uint64_t v38 = *(void (**)(void *))(*(void *)(v35 + 56) + 16 * v36);
          swift_retain_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          v38(a1);
          swift_release_n();
          return;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (qword_26B267240 != -1) {
        swift_once();
      }
      uint64_t v39 = sub_254526E00();
      uint64_t v40 = __swift_project_value_buffer(v39, (uint64_t)qword_26B267340);
      swift_bridgeObjectRetain();
      v46[0] = v40;
      uint64_t v41 = sub_254526DE0();
      os_log_type_t v42 = sub_254527420();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = (uint8_t *)swift_slowAlloc();
        uint64_t v44 = swift_slowAlloc();
        uint64_t v47 = v44;
        *(_DWORD *)uint64_t v43 = 136315138;
        swift_bridgeObjectRetain();
        v46[1] = (os_log_t)sub_254498B68(v24, v26, &v47);
        sub_254527500();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_254486000, v41, v42, "Unhandled message sent to XPCConnection: %s", v43, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x25A27C9E0](v44, -1, -1);
        MEMORY[0x25A27C9E0](v43, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v45 = (void *)sub_2544D7AB4(2, (uint64_t)a1);
      xpc_dictionary_set_BOOL(v45, "messageError", 1);
      xpc_connection_send_message(a3, v45);
      swift_unknownObjectRelease();
    }
    else
    {
      if (qword_26B267240 != -1) {
        swift_once();
      }
      uint64_t v19 = sub_254526E00();
      __swift_project_value_buffer(v19, (uint64_t)qword_26B267340);
      v46[0] = (os_log_t)sub_254526DE0();
      os_log_type_t v20 = sub_254527420();
      if (os_log_type_enabled(v46[0], v20))
      {
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v21 = 0;
        _os_log_impl(&dword_254486000, v46[0], v20, "Dropping incoming message due to invalid message type.", v21, 2u);
        MEMORY[0x25A27C9E0](v21, -1, -1);
      }
      os_log_t v22 = v46[0];
    }
  }
  else
  {
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_254526E00();
    __swift_project_value_buffer(v10, (uint64_t)qword_26B267340);
    uint64_t v11 = sub_254526DE0();
    os_log_type_t v12 = sub_254527420();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_254486000, v11, v12, "Unexpected data on XPC connection, invalidating the connection", v13, 2u);
      MEMORY[0x25A27C9E0](v13, -1, -1);
    }

    uint64_t v14 = (_xpc_connection_s *)a2[2];
    xpc_connection_cancel(v14);
  }
}

uint64_t sub_2544D1818(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[20] = a6;
  v7[21] = a7;
  uint64_t v11 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v9 = (void *)swift_task_alloc();
  v7[22] = v9;
  *uint64_t v9 = v7;
  v9[1] = sub_2544D18F8;
  return v11(a6);
}

uint64_t sub_2544D18F8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 184) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_2544D1A94;
  }
  else
  {
    *(void *)(v4 + 192) = a1;
    uint64_t v5 = sub_2544D1A20;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_2544D1A20()
{
  xpc_connection_send_message(*(xpc_connection_t *)(v0 + 168), *(xpc_object_t *)(v0 + 192));
  swift_unknownObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2544D1A94()
{
  uint64_t v1 = *(void **)(v0 + 184);
  *(void *)(v0 + 136) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3870);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF4280);
  if (swift_dynamicCast())
  {

    sub_2544D79D4((long long *)(v0 + 16), v0 + 56);
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_254526E00();
    __swift_project_value_buffer(v3, (uint64_t)qword_26B267340);
    sub_2544D79EC(v0 + 56, v0 + 96);
    uint64_t v4 = sub_254526DE0();
    os_log_type_t v5 = sub_254527420();
    if (os_log_type_enabled(v4, v5))
    {
      os_log_type_t v33 = v5;
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 138412290;
      uint64_t v7 = *(void *)(v0 + 120);
      uint64_t v8 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 96), v7);
      uint64_t v9 = *(void *)(v7 - 8);
      uint64_t v10 = swift_task_alloc();
      (*(void (**)(uint64_t, void *, uint64_t))(v9 + 16))(v10, v8, v7);
      if (sub_2545279D0())
      {
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v7);
      }
      else
      {
        swift_allocError();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v24, v10, v7);
      }
      swift_task_dealloc();
      uint64_t v25 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 152) = v25;
      sub_254527500();
      *uint64_t v34 = v25;
      __swift_destroy_boxed_opaque_existential_1(v0 + 96);
      _os_log_impl(&dword_254486000, v4, v33, "Sending error reply after handling incoming message: %@", v6, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      swift_arrayDestroy();
      MEMORY[0x25A27C9E0](v34, -1, -1);
      MEMORY[0x25A27C9E0](v6, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1(v0 + 96);
    }

    unint64_t v26 = *(const char ***)(v0 + 160);
    uint64_t v27 = *(void *)(v0 + 80);
    uint64_t v28 = *(void *)(v0 + 88);
    char v29 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 56), v27);
    uint64_t v30 = sub_2544F3BB8((uint64_t)v29, v26, v27, v28);
    xpc_connection_send_message(*(xpc_connection_t *)(v0 + 168), v30);
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
    uint64_t v23 = *(void **)(v0 + 136);
  }
  else
  {

    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v11 = *(void **)(v0 + 184);
    uint64_t v12 = sub_254526E00();
    __swift_project_value_buffer(v12, (uint64_t)qword_26B267340);
    id v13 = v11;
    id v14 = v11;
    uint64_t v15 = sub_254526DE0();
    os_log_type_t v16 = sub_254527420();
    BOOL v17 = os_log_type_enabled(v15, v16);
    uint64_t v18 = *(void **)(v0 + 184);
    if (!v17)
    {

      goto LABEL_17;
    }
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v20 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 138412290;
    id v21 = v18;
    uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 144) = v22;
    sub_254527500();
    *os_log_type_t v20 = v22;

    _os_log_impl(&dword_254486000, v15, v16, "Unhandled error when handling incoming message: %@", v19, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
    swift_arrayDestroy();
    MEMORY[0x25A27C9E0](v20, -1, -1);
    MEMORY[0x25A27C9E0](v19, -1, -1);

    uint64_t v23 = v18;
  }

LABEL_17:
  uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_2544D1FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_254527310();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_254527300();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_2544D7974(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2545272C0();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t XPCConnection.__allocating_init(incomingConnection:)(uint64_t a1)
{
  uint64_t v2 = sub_254527440();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_254527430();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_254526EA0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = *(void **)(a1 + 24);
  uint64_t v9 = *(_xpc_connection_s **)(a1 + 16);
  if (v8)
  {
    type metadata accessor for XPCConnection();
    uint64_t v10 = swift_allocObject();
    id v11 = v8;
    swift_unknownObjectRetain();
    uint64_t v12 = MEMORY[0x263F8EE78];
    *(void *)(v10 + 32) = sub_2544A58F4(MEMORY[0x263F8EE78]);
    *(void *)(v10 + 40) = sub_2544A5900(v12);
    *(_OWORD *)(v10 + 48) = 0u;
    *(_OWORD *)(v10 + 64) = 0u;
    *(void *)(v10 + 16) = v9;
    *(void *)(v10 + 24) = v11;
    id v13 = v11;
    id v14 = (_xpc_connection_s *)swift_unknownObjectRetain();
    xpc_connection_set_target_queue(v14, v13);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v10;
    *(void *)(v15 + 24) = v9;
    uint64_t v27 = sub_2544D7AAC;
    uint64_t v28 = v15;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v24 = 1107296256;
    os_log_type_t v16 = &block_descriptor_8;
  }
  else
  {
    v22[1] = sub_25448FF3C();
    swift_unknownObjectRetain();
    sub_254526E80();
    uint64_t aBlock = MEMORY[0x263F8EE78];
    v22[0] = sub_25448FF7C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF32F0);
    sub_25448FFD4(&qword_269DF32F8, &qword_269DF32F0);
    sub_254527560();
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F130], v2);
    BOOL v17 = (void *)sub_254527450();
    type metadata accessor for XPCConnection();
    uint64_t v10 = swift_allocObject();
    uint64_t v18 = MEMORY[0x263F8EE78];
    *(void *)(v10 + 32) = sub_2544A58F4(MEMORY[0x263F8EE78]);
    *(void *)(v10 + 40) = sub_2544A5900(v18);
    *(_OWORD *)(v10 + 48) = 0u;
    *(_OWORD *)(v10 + 64) = 0u;
    *(void *)(v10 + 16) = v9;
    *(void *)(v10 + 24) = v17;
    swift_unknownObjectRetain();
    id v13 = v17;
    xpc_connection_set_target_queue(v9, v13);
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v10;
    *(void *)(v19 + 24) = v9;
    uint64_t v27 = sub_2544D25C4;
    uint64_t v28 = v19;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v24 = 1107296256;
    os_log_type_t v16 = &block_descriptor_2;
  }
  uint64_t v25 = sub_2544CF924;
  unint64_t v26 = v16;
  os_log_type_t v20 = _Block_copy(&aBlock);
  swift_unknownObjectRetain_n();
  swift_retain();
  swift_release();
  xpc_connection_set_event_handler(v9, v20);
  swift_unknownObjectRelease();

  _Block_release(v20);
  swift_release();
  swift_unknownObjectRelease();
  return v10;
}

uint64_t type metadata accessor for XPCConnection()
{
  return self;
}

void sub_2544D25C4(void *a1)
{
  sub_2544D0EBC(a1, *(void **)(v1 + 16), *(_xpc_connection_s **)(v1 + 24));
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t static XPCConnection.machService(_:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  uint64_t v4 = sub_254527440();
  uint64_t v30 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_254527430();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_254526EA0();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v9 = sub_254526E70();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  id v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    id v14 = a3;
  }
  else
  {
    unint64_t v29 = sub_25448FF3C();
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v13, *MEMORY[0x263F8F080], v9);
    uint64_t v27 = v4;
    uint64_t v15 = v30;
    uint64_t v28 = sub_254527460();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    sub_254526E80();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_25448FF7C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF32F0);
    sub_25448FFD4(&qword_269DF32F8, &qword_269DF32F0);
    sub_254527560();
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v6, *MEMORY[0x263F8F130], v27);
    uint64_t v11 = sub_254527450();
    id v14 = (void *)v11;
  }
  MEMORY[0x270FA5388](v11);
  *(&v26 - 2) = (uint64_t)a3;
  id v16 = a3;
  BOOL v17 = (_xpc_connection_s *)sub_2544D2AE4((void *(*)(uint64_t *__return_ptr, void *))sub_2544D2AAC, (uint64_t)(&v26 - 4), v31, v32);
  type metadata accessor for XPCConnection();
  uint64_t v18 = swift_allocObject();
  id v19 = v14;
  uint64_t v20 = MEMORY[0x263F8EE78];
  *(void *)(v18 + 32) = sub_2544A58F4(MEMORY[0x263F8EE78]);
  *(void *)(v18 + 40) = sub_2544A5900(v20);
  *(_OWORD *)(v18 + 48) = 0u;
  *(_OWORD *)(v18 + 64) = 0u;
  *(void *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = v19;
  id v21 = v19;
  uint64_t v22 = (_xpc_connection_s *)swift_unknownObjectRetain();
  xpc_connection_set_target_queue(v22, v21);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v18;
  *(void *)(v23 + 24) = v17;
  aBlock[4] = sub_2544D7AAC;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2544CF924;
  aBlock[3] = &block_descriptor_15;
  uint64_t v24 = _Block_copy(aBlock);
  swift_unknownObjectRetain_n();
  swift_retain();
  swift_release();
  xpc_connection_set_event_handler(v17, v24);
  swift_unknownObjectRelease();

  _Block_release(v24);
  xpc_connection_activate(v17);

  swift_unknownObjectRelease();
  return v18;
}

xpc_connection_t sub_2544D2A78@<X0>(const char *a1@<X0>, NSObject *a2@<X1>, xpc_connection_t *a3@<X8>)
{
  xpc_connection_t result = xpc_connection_create_mach_service(a1, a2, 0);
  *a3 = result;
  return result;
}

xpc_connection_t sub_2544D2AAC@<X0>(const char *a1@<X0>, xpc_connection_t *a2@<X8>)
{
  xpc_connection_t result = xpc_connection_create_mach_service(a1, *(dispatch_queue_t *)(v2 + 16), 0);
  *a2 = result;
  return result;
}

void *sub_2544D2AE4(void *(*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0 || !(a4 & 0x2000000000000000 | a3 & 0x1000000000000000))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B266E20);
    xpc_connection_t result = (void *)sub_254527620();
    if (!v4) {
      return (void *)v12[3];
    }
  }
  else
  {
    MEMORY[0x270FA5388](a1);
    if ((a4 & 0x2000000000000000) != 0)
    {
      v12[0] = a3;
      v12[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      xpc_connection_t result = a1(&v11, v12);
      if (!v4) {
        return (void *)v11;
      }
    }
    else
    {
      if ((a3 & 0x1000000000000000) != 0)
      {
        uint64_t v8 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v9 = a3 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v8 = sub_2545276A0();
      }
      return (void *)sub_2544D52CC(v8, v9, (uint64_t (*)(void))sub_2544D77A4);
    }
  }
  return result;
}

uint64_t static XPCConnection.service(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  uint64_t v22 = sub_254527440();
  uint64_t v2 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_254527430();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_254526EA0();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = sub_254526E70();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25448FF3C();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F8F080], v7);
  uint64_t v21 = sub_254527460();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_254526E80();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_25448FF7C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF32F0);
  sub_25448FFD4(&qword_269DF32F8, &qword_269DF32F0);
  sub_254527560();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F8F130], v22);
  uint64_t v11 = (void *)sub_254527450();
  uint64_t v26 = v11;
  uint64_t v12 = (_xpc_connection_s *)sub_2544D2AE4((void *(*)(uint64_t *__return_ptr, void *))sub_2544D307C, (uint64_t)v25, v23, v24);
  type metadata accessor for XPCConnection();
  uint64_t v13 = swift_allocObject();
  id v14 = v11;
  uint64_t v15 = MEMORY[0x263F8EE78];
  *(void *)(v13 + 32) = sub_2544A58F4(MEMORY[0x263F8EE78]);
  *(void *)(v13 + 40) = sub_2544A5900(v15);
  *(_OWORD *)(v13 + 48) = 0u;
  *(_OWORD *)(v13 + 64) = 0u;
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = v14;
  id v16 = v14;
  BOOL v17 = (_xpc_connection_s *)swift_unknownObjectRetain();
  xpc_connection_set_target_queue(v17, v16);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v13;
  *(void *)(v18 + 24) = v12;
  aBlock[4] = sub_2544D7AAC;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2544CF924;
  aBlock[3] = &block_descriptor_22;
  id v19 = _Block_copy(aBlock);
  swift_unknownObjectRetain_n();
  swift_retain();
  swift_release();
  xpc_connection_set_event_handler(v12, v19);
  swift_unknownObjectRelease();

  _Block_release(v19);
  xpc_connection_activate(v12);

  swift_unknownObjectRelease();
  return v13;
}

xpc_connection_t sub_2544D307C@<X0>(const char *a1@<X0>, xpc_connection_t *a2@<X8>)
{
  xpc_connection_t result = xpc_connection_create(a1, *(dispatch_queue_t *)(v2 + 16));
  *a2 = result;
  return result;
}

uint64_t objectdestroyTm_0()
{
  swift_release();
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_2544D30F4()
{
  xpc_connection_cancel(*(xpc_connection_t *)(v0 + 16));
}

uint64_t sub_2544D30FC()
{
  v5[7] = MEMORY[0x263F8EE88];
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_2544D31C4(v0);
  swift_beginAccess();
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_2544D31C4(v1);
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_2544D50F8(v2);
  swift_bridgeObjectRelease();
  v5[0] = (uint64_t)v3;
  sub_2544D54A8(v5);
  swift_bridgeObjectRelease();
  return v5[0];
}

uint64_t sub_2544D31C4(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v13 >= v7) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      int64_t v2 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v2);
      if (!v14)
      {
        int64_t v2 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        if (!v14)
        {
          int64_t v2 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v2);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    uint64_t v10 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v9);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_2544A2968(&v16, v11, v12);
    xpc_connection_t result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 < v7)
  {
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v2 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v15;
    goto LABEL_22;
  }
LABEL_23:

  return swift_release();
}

uint64_t sub_2544D3344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  _OWORD v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x270FA2498](sub_2544D336C, 0, 0);
}

uint64_t sub_2544D336C()
{
  uint64_t v1 = sub_2544F3C04(v0[3], 0, v0[4], v0[5]);
  v0[7] = v1;
  uint64_t v2 = v1;
  uint64_t v3 = v0[4];
  uint64_t v4 = swift_task_alloc();
  v0[8] = v4;
  long long v5 = *(_OWORD *)(v0 + 5);
  *(void *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 40) = v2;
  unint64_t v6 = (void *)swift_task_alloc();
  v0[9] = v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *unint64_t v6 = v0;
  v6[1] = sub_2544D34E8;
  uint64_t v8 = v0[2];
  return MEMORY[0x270FA2360](v8, 0, 0, 0x293A5F28646E6573, 0xE800000000000000, sub_2544D530C, v4, AssociatedTypeWitness);
}

uint64_t sub_2544D34E8()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2544D3668;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_2544D3604;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2544D3604()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2544D3668()
{
  swift_unknownObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2544D36D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  _OWORD v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x270FA2498](sub_2544D36FC, 0, 0);
}

uint64_t sub_2544D36FC()
{
  uint64_t v1 = sub_2544F3C04(v0[3], 0, v0[4], v0[5]);
  v0[7] = v1;
  uint64_t v2 = v1;
  uint64_t v3 = v0[4];
  uint64_t v4 = swift_task_alloc();
  v0[8] = v4;
  long long v5 = *(_OWORD *)(v0 + 5);
  *(void *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 40) = v2;
  unint64_t v6 = (void *)swift_task_alloc();
  v0[9] = v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *unint64_t v6 = v0;
  v6[1] = sub_2544D3884;
  uint64_t v8 = v0[2];
  return MEMORY[0x270FA2360](v8, 0, 0, 0x6E797341646E6573, 0xED0000293A5F2863, sub_2544D5350, v4, AssociatedTypeWitness);
}

uint64_t sub_2544D3884()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2544D7AA0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_2544D7A54;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

void sub_2544D39A0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v22 = a7;
  uint64_t v23 = a8;
  uint64_t v21 = a6;
  xpc_object_t v24 = a3;
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DF3870);
  uint64_t v12 = sub_2545272F0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  int64_t v15 = (char *)&v21 - v14;
  BOOL v17 = *(_xpc_connection_s **)(a2 + 16);
  uint64_t v16 = *(NSObject **)(a2 + 24);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v21 - v14, a1, v12);
  unint64_t v18 = (*(unsigned __int8 *)(v13 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  id v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = a4;
  *((void *)v19 + 3) = a5;
  *((void *)v19 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v19[v18], v15, v12);
  aBlock[4] = v22;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2544CF924;
  aBlock[3] = v23;
  uint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  xpc_connection_send_message_with_reply(v17, v24, v16, v20);
  _Block_release(v20);
}

uint64_t sub_2544D3BA4(void *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  unint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v11 - v7;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_2544D42E4(a1, AssociatedTypeWitness, AssociatedConformanceWitness, v8);
  (*(void (**)(char *, unsigned char *, uint64_t))(v3 + 16))(v6, v8, AssociatedTypeWitness);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DF3870);
  sub_2545272F0();
  sub_2545272E0();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v8, AssociatedTypeWitness);
}

void *sub_2544D3D94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  xpc_connection_t result = (void *)sub_2544F3C04(a1, 0, a2, a3);
  if (!v5)
  {
    xpc_object_t v8 = xpc_connection_send_message_with_reply_sync(*(xpc_connection_t *)(v4 + 16), result);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    sub_2544D42E4(v8, AssociatedTypeWitness, AssociatedConformanceWitness, a4);
    swift_unknownObjectRelease();
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

void *sub_2544D3E74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  xpc_connection_t result = (void *)sub_2544F3C04(a1, 0, a2, a3);
  if (!v4)
  {
    xpc_connection_send_message(*(xpc_connection_t *)(v3 + 16), result);
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2544D3EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 48))(a4, a5);
  uint64_t v13 = v12;
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a4;
  _OWORD v14[3] = a5;
  v14[4] = a2;
  v14[5] = a3;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v17 = *(void *)(v6 + 32);
  *(void *)(v6 + 32) = 0x8000000000000000;
  sub_2544BB6B4((uint64_t)&unk_269DF4260, (uint64_t)v14, v11, v13, isUniquelyReferenced_nonNull_native);
  *(void *)(v6 + 32) = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_2544D3FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 48))(a4, a5);
  uint64_t v13 = v12;
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a4;
  _OWORD v14[3] = a5;
  v14[4] = a2;
  v14[5] = a3;
  int64_t v15 = (void *)swift_allocObject();
  v15[2] = a4;
  v15[3] = a5;
  void v15[4] = &unk_269DF4198;
  v15[5] = v14;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *(void *)(v6 + 32);
  *(void *)(v6 + 32) = 0x8000000000000000;
  sub_2544BB6B4((uint64_t)&unk_269DF4260, (uint64_t)v15, v11, v13, isUniquelyReferenced_nonNull_native);
  *(void *)(v6 + 32) = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_2544D4124(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  a3(a2);
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
  return sub_2544D7408(v4);
}

uint64_t sub_2544D41CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 48))(a4, a5);
  uint64_t v13 = v12;
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a4;
  _OWORD v14[3] = a5;
  v14[4] = a2;
  v14[5] = a3;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v17 = *(void *)(v6 + 40);
  *(void *)(v6 + 40) = 0x8000000000000000;
  sub_2544BB6C0((uint64_t)sub_2544D73E8, (uint64_t)v14, v11, v13, isUniquelyReferenced_nonNull_native);
  *(void *)(v6 + 40) = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_2544D42E4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t v9 = MEMORY[0x25A27CC00]();
  if (sub_254526E10() == v9)
  {
    uint64_t v11 = sub_254526E40();
    swift_unknownObjectRelease();
    if ((void *)v11 == a1)
    {
      if (xpc_connection_copy_invalidation_reason())
      {
        if (qword_26B267240 != -1) {
          swift_once();
        }
        uint64_t v22 = sub_254526E00();
        __swift_project_value_buffer(v22, (uint64_t)qword_26B267340);
        uint64_t v23 = sub_254526DE0();
        os_log_type_t v24 = sub_254527420();
        if (os_log_type_enabled(v23, v24))
        {
          uint64_t v25 = (uint8_t *)swift_slowAlloc();
          uint64_t v26 = swift_slowAlloc();
          v32[0] = v26;
          *(_DWORD *)uint64_t v25 = 136315138;
          uint64_t v27 = sub_254527090();
          uint64_t v34 = sub_254498B68(v27, v28, v32);
          sub_254527500();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_254486000, v23, v24, "XPC Connection Invalid: %s", v25, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x25A27C9E0](v26, -1, -1);
          MEMORY[0x25A27C9E0](v25, -1, -1);
        }
      }
      sub_2544D55EC();
      swift_allocError();
      *unint64_t v29 = 0;
    }
    else
    {
      uint64_t v12 = sub_254526E50();
      swift_unknownObjectRelease();
      sub_2544D55EC();
      swift_allocError();
      if ((void *)v12 == a1) {
        char v14 = 1;
      }
      else {
        char v14 = 3;
      }
      *uint64_t v13 = v14;
    }
    return swift_willThrow();
  }
  if (sub_254526E30() != v9)
  {
    sub_2544D55EC();
    swift_allocError();
    *uint64_t v10 = 3;
    return swift_willThrow();
  }
  uint64_t v15 = MEMORY[0x25A27CC00](a1);
  if (v15 != sub_254526E30() || !xpc_dictionary_get_BOOL(a1, "messageError")) {
    return sub_2544F4458(a1, a2, a3, a4);
  }
  uint64_t result = sub_2544F3F60(a1);
  if (!v4)
  {
    uint64_t v17 = v33;
    uint64_t v18 = __swift_project_boxed_opaque_existential_1(v32, v33);
    uint64_t v19 = *(void *)(v17 - 8);
    MEMORY[0x270FA5388](v18);
    uint64_t v21 = (char *)&v32[-1] - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v19 + 16))(v21);
    if (sub_2545279D0())
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v17);
    }
    else
    {
      swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v30, v21, v17);
    }
    swift_willThrow();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  }
  return result;
}

uint64_t XPCConnection.deinit()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2544BB6A4(*(void *)(v0 + 48));
  sub_2544BB6A4(*(void *)(v0 + 64));
  return v0;
}

uint64_t XPCConnection.__deallocating_deinit()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2544BB6A4(*(void *)(v0 + 48));
  sub_2544BB6A4(*(void *)(v0 + 64));

  return MEMORY[0x270FA0228](v0, 80, 7);
}

unint64_t XPCConnection.description.getter()
{
  xpc_connection_get_pid(*(xpc_connection_t *)(v0 + 16));
  sub_254527630();
  swift_bridgeObjectRelease();
  sub_2545279B0();
  sub_254527080();
  swift_bridgeObjectRelease();
  sub_254527080();
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B266E20);
  sub_254527030();
  sub_254527080();
  swift_bridgeObjectRelease();
  sub_254527080();
  return 0xD000000000000013;
}

unint64_t sub_2544D4888()
{
  return XPCConnection.description.getter();
}

uint64_t XPCConnection.debugDescription.getter()
{
  xpc_connection_get_pid(*(xpc_connection_t *)(v0 + 16));
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_2544D51E4(v1);
  swift_bridgeObjectRelease();
  uint64_t v4 = v2;
  sub_2544D54A8((uint64_t *)&v4);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B266BC0);
  sub_25448FFD4(&qword_26B266BD0, &qword_26B266BC0);
  sub_254526F70();
  swift_release();
  uint64_t v4 = 0;
  unint64_t v5 = 0xE000000000000000;
  sub_254527630();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)0xD000000000000013;
  unint64_t v5 = 0x8000000254533930;
  sub_2545279B0();
  sub_254527080();
  swift_bridgeObjectRelease();
  sub_254527080();
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B266E20);
  sub_254527030();
  sub_254527080();
  swift_bridgeObjectRelease();
  sub_254527080();
  sub_254527080();
  swift_bridgeObjectRelease();
  sub_254527080();
  return (uint64_t)v4;
}

uint64_t sub_2544D4AB0()
{
  return XPCConnection.debugDescription.getter();
}

uint64_t sub_2544D4AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  _OWORD v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[7] = AssociatedTypeWitness;
  uint64_t v5[8] = *(void *)(AssociatedTypeWitness - 8);
  v5[9] = swift_task_alloc();
  v5[10] = *(void *)(a4 - 8);
  v5[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2544D4C0C, 0, 0);
}

uint64_t sub_2544D4C0C()
{
  sub_2544F4458(*(void **)(v0 + 16), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char **)(v0 + 88));
  unint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v0 + 24) + **(int **)(v0 + 24));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2544D4D50;
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 72);
  return v5(v3, v2);
}

uint64_t sub_2544D4D50()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2544D4F80;
  }
  else {
    uint64_t v2 = sub_2544D4E64;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2544D4E64()
{
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v5 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[5];
  xpc_object_t v8 = (const char **)v0[2];
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v10 = sub_2544F3C04(v4, v8, v6, AssociatedConformanceWitness);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v7);
  swift_task_dealloc();
  uint64_t v11 = swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(uint64_t))v0[1];
  if (!v1) {
    uint64_t v11 = v10;
  }
  return v12(v11);
}

uint64_t sub_2544D4F80()
{
  (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[5]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_2544D5008(uint64_t a1, void (*a2)(unsigned char *), uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 - 8);
  xpc_object_t v8 = (void *)MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_2544F4458(v8, v11, v12, v10);
  if (!v4)
  {
    a2(v10);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v10, a4);
  }
  return result;
}

void *sub_2544D50F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B266E30);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_2544D6DBC((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_2544A54D8();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

void *sub_2544D51E4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B266E30);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_2544D6FBC((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_2544A54D8();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_2544D52CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t result = a3();
  if (!v3) {
    return v5;
  }
  return result;
}

void sub_2544D530C(uint64_t a1)
{
  sub_2544D39A0(a1, *(void *)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t)&unk_2703D9320, (uint64_t)sub_2544D75D0, (uint64_t)&block_descriptor_93);
}

void sub_2544D5350(uint64_t a1)
{
  sub_2544D39A0(a1, *(void *)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t)&unk_2703D92D0, (uint64_t)sub_2544D75D0, (uint64_t)&block_descriptor_87);
}

uint64_t sub_2544D5394()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_2544D53CC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void (**)(uint64_t))(v2 + 32);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_2544D7A5C;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, void (*)(uint64_t)))((char *)&dword_269DF4190
                                                                              + dword_269DF4190);
  return v8(a1, a2, v6);
}

uint64_t sub_2544D54A8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_2544FF8B8(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_2544D6364(v5);
  *a1 = v2;
  return result;
}

unint64_t sub_2544D5518()
{
  unint64_t result = qword_269DF41A8;
  if (!qword_269DF41A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF41A8);
  }
  return result;
}

uint64_t sub_2544D556C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2544D566C(a1, a2, a3, (uint64_t (*)(void))sub_2544D5598, (uint64_t (*)(void))sub_2544D55EC);
}

unint64_t sub_2544D5598()
{
  unint64_t result = qword_269DF41B0;
  if (!qword_269DF41B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF41B0);
  }
  return result;
}

unint64_t sub_2544D55EC()
{
  unint64_t result = qword_269DF4400;
  if (!qword_269DF4400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4400);
  }
  return result;
}

uint64_t sub_2544D5640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2544D566C(a1, a2, a3, (uint64_t (*)(void))sub_2544D56A8, (uint64_t (*)(void))sub_2544D56FC);
}

uint64_t sub_2544D566C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_2544D56A8()
{
  unint64_t result = qword_269DF41D0;
  if (!qword_269DF41D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF41D0);
  }
  return result;
}

unint64_t sub_2544D56FC()
{
  unint64_t result = qword_269DF41D8;
  if (!qword_269DF41D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF41D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCConnectionError()
{
  return &type metadata for XPCConnectionError;
}

uint64_t method lookup function for XPCConnection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for XPCConnection);
}

uint64_t dispatch thunk of XPCConnection.onConnectionInterrupted.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of XPCConnection.onConnectionInterrupted.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of XPCConnection.onConnectionInterrupted.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of XPCConnection.onConnectionInvalidated.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of XPCConnection.onConnectionInvalidated.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of XPCConnection.onConnectionInvalidated.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of XPCConnection.invalidate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of XPCConnection.handledTypes.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of XPCConnection.send<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v4 + 248)
                                                                   + **(int **)(*(void *)v4 + 248));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_2544D59D8;
  return v12(a1, a2, a3, a4);
}

uint64_t sub_2544D59D8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t dispatch thunk of XPCConnection.sendAsync<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v4 + 256)
                                                                   + **(int **)(*(void *)v4 + 256));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_2544D7A5C;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of XPCConnection.send<A>(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of XPCConnection.handle<A>(_:handler:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

ValueMetadata *type metadata accessor for XPCMessageHandlerWithoutReply()
{
  return &type metadata for XPCMessageHandlerWithoutReply;
}

void *initializeBufferWithCopyOfBuffer for XPCMessageHandlerWithReply(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for XPCMessageHandlerWithReply()
{
  return swift_release();
}

void *_s20LighthouseBackground26XPCMessageHandlerWithReplyVwca_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for XPCMessageHandlerWithReply(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t _s20LighthouseBackground26XPCMessageHandlerWithReplyVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2544D5E0C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCMessageHandlerWithReply()
{
  return &type metadata for XPCMessageHandlerWithReply;
}

unsigned char *_s20LighthouseBackground18XPCConnectionErrorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2544D5F24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCConnectionError.CodingKeys()
{
  return &type metadata for XPCConnectionError.CodingKeys;
}

ValueMetadata *type metadata accessor for XPCConnectionError.ConnectionInvalidCodingKeys()
{
  return &type metadata for XPCConnectionError.ConnectionInvalidCodingKeys;
}

ValueMetadata *type metadata accessor for XPCConnectionError.ConnectionInterruptedCodingKeys()
{
  return &type metadata for XPCConnectionError.ConnectionInterruptedCodingKeys;
}

ValueMetadata *type metadata accessor for XPCConnectionError.UnhandledMessageCodingKeys()
{
  return &type metadata for XPCConnectionError.UnhandledMessageCodingKeys;
}

ValueMetadata *type metadata accessor for XPCConnectionError.UnknownCodingKeys()
{
  return &type metadata for XPCConnectionError.UnknownCodingKeys;
}

unint64_t sub_2544D5FA0()
{
  unint64_t result = qword_269DF41F8;
  if (!qword_269DF41F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF41F8);
  }
  return result;
}

unint64_t sub_2544D5FF8()
{
  unint64_t result = qword_269DF4200;
  if (!qword_269DF4200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4200);
  }
  return result;
}

unint64_t sub_2544D6050()
{
  unint64_t result = qword_269DF4208;
  if (!qword_269DF4208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4208);
  }
  return result;
}

unint64_t sub_2544D60A8()
{
  unint64_t result = qword_269DF4210;
  if (!qword_269DF4210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4210);
  }
  return result;
}

unint64_t sub_2544D6100()
{
  unint64_t result = qword_269DF4218;
  if (!qword_269DF4218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4218);
  }
  return result;
}

unint64_t sub_2544D6158()
{
  unint64_t result = qword_269DF4220;
  if (!qword_269DF4220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4220);
  }
  return result;
}

unint64_t sub_2544D61B0()
{
  unint64_t result = qword_269DF4228;
  if (!qword_269DF4228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4228);
  }
  return result;
}

unint64_t sub_2544D6208()
{
  unint64_t result = qword_269DF4230;
  if (!qword_269DF4230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4230);
  }
  return result;
}

unint64_t sub_2544D6260()
{
  unint64_t result = qword_269DF4238;
  if (!qword_269DF4238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4238);
  }
  return result;
}

unint64_t sub_2544D62B8()
{
  unint64_t result = qword_269DF4240;
  if (!qword_269DF4240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4240);
  }
  return result;
}

unint64_t sub_2544D6310()
{
  unint64_t result = qword_269DF4248;
  if (!qword_269DF4248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4248);
  }
  return result;
}

uint64_t sub_2544D6364(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_2545279A0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_2544D6A50(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  uint64_t v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_118:
      char v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          BOOL v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_2544D6B20((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            BOOL v97 = sub_2544FF8A4((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          unint64_t v100 = &v97[16 * v96 + 32];
          *(void *)unint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          char v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_254527220();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    uint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_2545279E0();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_2545279E0()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_2544FF6EC(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v11 = sub_2544FF6EC((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    os_log_type_t v42 = v11 + 32;
    uint64_t v43 = &v11[16 * v41 + 32];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        char v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        char v85 = v11;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_2544D6B20((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        uint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        os_log_type_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        uint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_2545279E0() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_254527710();
  __break(1u);
  return result;
}

uint64_t sub_2544D6A50(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_2545279E0(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2544D6B20(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_2545279E0() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            uint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_2545279E0() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v27 = v7;
    }
LABEL_50:
    sub_2544FF7E8((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_254527770();
  __break(1u);
  return result;
}

uint64_t sub_2544D6DBC(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    _OWORD v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2544D6FBC(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    _OWORD v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2544D71BC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x8000000254533A30 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000254533A50 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000254533A70 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_2545279E0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_2544D7360()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2544D7398()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_2544D73C0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_2544D73E8(uint64_t a1)
{
  return sub_2544D5008(a1, *(void (**)(unsigned char *))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 16));
}

uint64_t sub_2544D7408(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_2544D7414(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_2544D74D0;
  return sub_2544D4AD4(a1, v7, v6, v4, v5);
}

uint64_t sub_2544D74D0(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t objectdestroy_83Tm()
{
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DF3870);
  uint64_t v1 = sub_2545272F0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_2544D76E0(void *a1)
{
  return sub_2544D3BA4(a1);
}

void *sub_2544D77A4@<X0>(void *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_2544D77E8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_2544D7838()
{
  uint64_t v2 = *(int **)(v0 + 32);
  uint64_t v3 = swift_task_alloc();
  long long v7 = *(_OWORD *)(v0 + 48);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_2544D7A5C;
  *(_OWORD *)(v3 + 160) = v7;
  uint64_t v6 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 176) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_2544D18F8;
  return v6(v7);
}

uint64_t sub_2544D7974(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26B267250);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2544D79D4(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_2544D79EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2544D7AB4(char a1, uint64_t a2)
{
  v25[0] = a2;
  uint64_t v4 = sub_254527010();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v5 = sub_254526B10();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_254526B20();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  int64_t v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v26 = a1;
  sub_254526B70();
  swift_allocObject();
  sub_254526B60();
  int64_t v14 = *(void (**)(char *, void, uint64_t))(v10 + 104);
  xpc_object_t v13 = (xpc_object_t)(v10 + 104);
  v14(v12, *MEMORY[0x263F06198], v9);
  sub_254526B40();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F06160], v5);
  sub_254526B30();
  sub_2544D56FC();
  uint64_t v15 = sub_254526B50();
  if (v2)
  {
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v17 = v15;
  unint64_t v18 = v16;
  int64_t v19 = (const char **)v25[0];
  sub_254527000();
  uint64_t result = sub_254526FF0();
  if (v21)
  {
    reply = v19;
    if (v19)
    {
      reply = (const char *const *)xpc_dictionary_create_reply(v19);
      xpc_object_t v13 = (xpc_object_t)reply;
      if (reply)
      {
LABEL_8:
        xpc_dictionary_set_int64(v13, "messageFormat", 1);
        v25[1] = &type metadata for XPCConnectionError;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF4428);
        sub_254527030();
        uint64_t v23 = sub_254527040();
        swift_bridgeObjectRelease();
        xpc_dictionary_set_string(v13, "messageType", (const char *)(v23 + 32));
        swift_release();
        uint64_t v24 = sub_254527040();
        swift_bridgeObjectRelease();
        xpc_dictionary_set_string(v13, "messageBody", (const char *)(v24 + 32));
        swift_release();
        sub_2544E848C(v17, v18);
        swift_release();
        return (uint64_t)v13;
      }
      __break(1u);
    }
    xpc_object_t v13 = xpc_dictionary_create(reply, 0, 0);
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_2544D7DF4(long long *a1, const char **a2)
{
  uint64_t v27 = a2;
  uint64_t v4 = sub_254527010();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v5 = sub_254526B10();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_254526B20();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  int64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v13 = a1[1];
  long long v28 = *a1;
  long long v29 = v13;
  long long v30 = a1[2];
  sub_254526B70();
  swift_allocObject();
  sub_254526B60();
  uint64_t v15 = *(void (**)(char *, void, uint64_t))(v10 + 104);
  xpc_object_t v14 = (xpc_object_t)(v10 + 104);
  v15(v12, *MEMORY[0x263F06198], v9);
  sub_254526B40();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F06160], v5);
  sub_254526B30();
  sub_2544C8140();
  uint64_t v16 = sub_254526B50();
  if (v2)
  {
    swift_release();
    return (uint64_t)v14;
  }
  uint64_t v18 = v16;
  unint64_t v19 = v17;
  uint64_t v20 = v27;
  sub_254527000();
  uint64_t result = sub_254526FF0();
  if (v22)
  {
    reply = v20;
    if (v20)
    {
      reply = (const char *const *)xpc_dictionary_create_reply(v20);
      xpc_object_t v14 = (xpc_object_t)reply;
      if (reply)
      {
LABEL_8:
        xpc_dictionary_set_int64(v14, "messageFormat", 1);
        uint64_t v31 = &type metadata for SetHostConfigurationRequest;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269DF45B8);
        sub_254527030();
        uint64_t v24 = sub_254527040();
        swift_bridgeObjectRelease();
        xpc_dictionary_set_string(v14, "messageType", (const char *)(v24 + 32));
        swift_release();
        uint64_t v25 = sub_254527040();
        swift_bridgeObjectRelease();
        xpc_dictionary_set_string(v14, "messageBody", (const char *)(v25 + 32));
        swift_release();
        sub_2544E848C(v18, v19);
        swift_release();
        return (uint64_t)v14;
      }
      __break(1u);
    }
    xpc_object_t v14 = xpc_dictionary_create(reply, 0, 0);
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_2544D8140(uint64_t a1, char a2, uint64_t a3)
{
  v27[0] = a3;
  uint64_t v5 = sub_254527010();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = sub_254526B10();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_254526B20();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  long long v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27[2] = a1;
  char v28 = a2 & 1;
  sub_254526B70();
  swift_allocObject();
  sub_254526B60();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x263F06198], v10);
  sub_254526B40();
  uint64_t v15 = *(void (**)(char *, void, uint64_t))(v7 + 104);
  xpc_object_t v14 = (xpc_object_t)(v7 + 104);
  v15(v9, *MEMORY[0x263F06160], v6);
  sub_254526B30();
  sub_2544C6E48();
  uint64_t v16 = v27[1];
  uint64_t v17 = sub_254526B50();
  if (v16)
  {
    swift_release();
    return (uint64_t)v14;
  }
  uint64_t v19 = v17;
  unint64_t v20 = v18;
  uint64_t v21 = (const char **)v27[0];
  sub_254527000();
  uint64_t result = sub_254526FF0();
  if (v23)
  {
    reply = v21;
    if (v21)
    {
      reply = (const char *const *)xpc_dictionary_create_reply(v21);
      xpc_object_t v14 = (xpc_object_t)reply;
      if (reply)
      {
LABEL_8:
        xpc_dictionary_set_int64(v14, "messageFormat", 1);
        long long v29 = &type metadata for ListTasksRequest;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4558);
        sub_254527030();
        uint64_t v25 = sub_254527040();
        swift_bridgeObjectRelease();
        xpc_dictionary_set_string(v14, "messageType", (const char *)(v25 + 32));
        swift_release();
        uint64_t v26 = sub_254527040();
        swift_bridgeObjectRelease();
        xpc_dictionary_set_string(v14, "messageBody", (const char *)(v26 + 32));
        swift_release();
        sub_2544E848C(v19, v20);
        swift_release();
        return (uint64_t)v14;
      }
      __break(1u);
    }
    xpc_object_t v14 = xpc_dictionary_create(reply, 0, 0);
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_2544D8488(uint64_t a1, uint64_t a2)
{
  v25[0] = a2;
  uint64_t v2 = sub_254527010();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_254526B10();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_254526B20();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_254526B70();
  swift_allocObject();
  sub_254526B60();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F06198], v7);
  sub_254526B40();
  uint64_t v12 = *(void (**)(char *, void, uint64_t))(v4 + 104);
  xpc_object_t v11 = (xpc_object_t)(v4 + 104);
  v12(v6, *MEMORY[0x263F06160], v3);
  sub_254526B30();
  uint64_t v13 = type metadata accessor for AddTaskRequest(0);
  sub_2544E89F4(&qword_269DF4510, 255, (void (*)(uint64_t))type metadata accessor for AddTaskRequest);
  uint64_t v14 = v25[1];
  uint64_t v15 = sub_254526B50();
  if (v14)
  {
    swift_release();
    return (uint64_t)v11;
  }
  uint64_t v17 = v15;
  unint64_t v18 = v16;
  uint64_t v19 = (const char **)v25[0];
  sub_254527000();
  uint64_t result = sub_254526FF0();
  if (v21)
  {
    reply = v19;
    if (v19)
    {
      reply = (const char *const *)xpc_dictionary_create_reply(v19);
      xpc_object_t v11 = (xpc_object_t)reply;
      if (reply)
      {
LABEL_8:
        xpc_dictionary_set_int64(v11, "messageFormat", 1);
        v25[3] = v13;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4518);
        sub_254527030();
        uint64_t v23 = sub_254527040();
        swift_bridgeObjectRelease();
        xpc_dictionary_set_string(v11, "messageType", (const char *)(v23 + 32));
        swift_release();
        uint64_t v24 = sub_254527040();
        swift_bridgeObjectRelease();
        xpc_dictionary_set_string(v11, "messageBody", (const char *)(v24 + 32));
        swift_release();
        sub_2544E848C(v17, v18);
        swift_release();
        return (uint64_t)v11;
      }
      __break(1u);
    }
    xpc_object_t v11 = xpc_dictionary_create(reply, 0, 0);
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_2544D87F8(char a1, const char **a2, void (*a3)(uint64_t), uint64_t a4, uint64_t *a5)
{
  uint64_t v32 = a5;
  uint64_t v33 = a3;
  uint64_t v31 = a2;
  uint64_t v7 = sub_254527010();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = sub_254526B10();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  xpc_object_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_254526B20();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v36 = a1;
  sub_254526B70();
  swift_allocObject();
  sub_254526B60();
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F06198], v12);
  sub_254526B40();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F06160], v8);
  uint64_t v16 = a4;
  uint64_t v17 = sub_254526B30();
  v33(v17);
  uint64_t v18 = v34;
  uint64_t v19 = sub_254526B50();
  if (v18)
  {
    swift_release();
    return (uint64_t)v15;
  }
  uint64_t v21 = v19;
  unint64_t v22 = v20;
  uint64_t v24 = v31;
  uint64_t v23 = v32;
  sub_254527000();
  uint64_t result = sub_254526FF0();
  if (v26)
  {
    reply = v24;
    if (v24)
    {
      reply = (const char *const *)xpc_dictionary_create_reply(v24);
      uint64_t v15 = (char *)reply;
      if (reply)
      {
LABEL_8:
        xpc_dictionary_set_int64(v15, "messageFormat", 1);
        uint64_t v35 = v16;
        __swift_instantiateConcreteTypeFromMangledName(v23);
        sub_254527030();
        uint64_t v28 = sub_254527040();
        swift_bridgeObjectRelease();
        xpc_dictionary_set_string(v15, "messageType", (const char *)(v28 + 32));
        swift_release();
        uint64_t v29 = sub_254527040();
        swift_bridgeObjectRelease();
        xpc_dictionary_set_string(v15, "messageBody", (const char *)(v29 + 32));
        swift_release();
        sub_2544E848C(v21, v22);
        swift_release();
        return (uint64_t)v15;
      }
      __break(1u);
    }
    uint64_t v15 = (char *)xpc_dictionary_create(reply, 0, 0);
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_2544D8B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v27[0] = a3;
  uint64_t v5 = sub_254527010();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = sub_254526B10();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_254526B20();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27[2] = a1;
  void v27[3] = a2;
  sub_254526B70();
  swift_allocObject();
  sub_254526B60();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x263F06198], v10);
  sub_254526B40();
  uint64_t v15 = *(void (**)(char *, void, uint64_t))(v7 + 104);
  xpc_object_t v14 = (xpc_object_t)(v7 + 104);
  v15(v9, *MEMORY[0x263F06160], v6);
  sub_254526B30();
  sub_2544C7B40();
  uint64_t v16 = v27[1];
  uint64_t v17 = sub_254526B50();
  if (v16)
  {
    swift_release();
    return (uint64_t)v14;
  }
  uint64_t v19 = v17;
  unint64_t v20 = v18;
  uint64_t v21 = (const char **)v27[0];
  sub_254527000();
  uint64_t result = sub_254526FF0();
  if (v23)
  {
    reply = v21;
    if (v21)
    {
      reply = (const char *const *)xpc_dictionary_create_reply(v21);
      xpc_object_t v14 = (xpc_object_t)reply;
      if (reply)
      {
LABEL_8:
        xpc_dictionary_set_int64(v14, "messageFormat", 1);
        v27[5] = &type metadata for ListExtensionsRequest;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4478);
        sub_254527030();
        uint64_t v25 = sub_254527040();
        swift_bridgeObjectRelease();
        xpc_dictionary_set_string(v14, "messageType", (const char *)(v25 + 32));
        swift_release();
        uint64_t v26 = sub_254527040();
        swift_bridgeObjectRelease();
        xpc_dictionary_set_string(v14, "messageBody", (const char *)(v26 + 32));
        swift_release();
        sub_2544E848C(v19, v20);
        swift_release();
        return (uint64_t)v14;
      }
      __break(1u);
    }
    xpc_object_t v14 = xpc_dictionary_create(reply, 0, 0);
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_2544D8E80(uint64_t a1, uint64_t a2, const char **a3, void (*a4)(uint64_t), uint64_t a5, uint64_t *a6)
{
  uint64_t v33 = a6;
  uint64_t v34 = a5;
  uint64_t v35 = a4;
  uint64_t v32 = a3;
  uint64_t v8 = sub_254527010();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v9 = sub_254526B10();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)sub_254526B20();
  uint64_t v14 = *(v13 - 1);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  sub_254526B70();
  swift_allocObject();
  sub_254526B60();
  (*(void (**)(char *, void, void *))(v14 + 104))(v16, *MEMORY[0x263F06198], v13);
  uint64_t v17 = v34;
  sub_254526B40();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F06160], v9);
  uint64_t v18 = sub_254526B30();
  v35(v18);
  uint64_t v19 = v36;
  uint64_t v20 = sub_254526B50();
  if (v19)
  {
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v22 = v20;
  unint64_t v23 = v21;
  uint64_t v25 = v32;
  uint64_t v24 = v33;
  sub_254527000();
  uint64_t result = sub_254526FF0();
  if (v27)
  {
    reply = v25;
    if (v25)
    {
      reply = (const char *const *)xpc_dictionary_create_reply(v25);
      uint64_t v13 = reply;
      if (reply)
      {
LABEL_8:
        xpc_dictionary_set_int64(v13, "messageFormat", 1);
        uint64_t v39 = v17;
        __swift_instantiateConcreteTypeFromMangledName(v24);
        sub_254527030();
        uint64_t v29 = sub_254527040();
        swift_bridgeObjectRelease();
        xpc_dictionary_set_string(v13, "messageType", (const char *)(v29 + 32));
        swift_release();
        uint64_t v30 = sub_254527040();
        swift_bridgeObjectRelease();
        xpc_dictionary_set_string(v13, "messageBody", (const char *)(v30 + 32));
        swift_release();
        sub_2544E848C(v22, v23);
        swift_release();
        return (uint64_t)v13;
      }
      __break(1u);
    }
    uint64_t v13 = xpc_dictionary_create(reply, 0, 0);
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

void sub_2544D91C8(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v18 = a7;
  xpc_object_t v19 = a3;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = *(_xpc_connection_s **)(a2 + 16);
  uint64_t v13 = *(NSObject **)(a2 + 24);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  unint64_t v15 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v16 + v15, (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = a6;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2544CF924;
  aBlock[3] = v18;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  xpc_connection_send_message_with_reply(v14, v19, v13, v17);
  _Block_release(v17);
}

uint64_t sub_2544D937C(void *a1)
{
  sub_2544D98BC(a1, (uint64_t)&v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF45C0);
  return sub_2545272E0();
}

uint64_t sub_2544D9414(void *a1)
{
  sub_2544D9CC4(a1, (uint64_t)&v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4598);
  return sub_2545272E0();
}

uint64_t sub_2544D94A8(void *a1)
{
  uint64_t TaskResponse = type metadata accessor for GetTaskResponse(0);
  uint64_t v3 = MEMORY[0x270FA5388](TaskResponse - 8);
  uint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v9 - v6;
  sub_2544DA8E4(a1);
  sub_2544E892C((uint64_t)v7, (uint64_t)v5, type metadata accessor for GetTaskResponse);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF4520);
  sub_2545272E0();
  return sub_2544E8994((uint64_t)v7, type metadata accessor for GetTaskResponse);
}

uint64_t sub_2544D95DC(void *a1)
{
  sub_2544DACD0(a1, &v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF44F8);
  return sub_2545272E0();
}

uint64_t sub_2544D9670(void *a1)
{
  sub_2544DA0CC(a1, &v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF44D0);
  return sub_2545272E0();
}

uint64_t sub_2544D96FC(void *a1)
{
  sub_2544DB0D8(a1, &v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4480);
  return sub_2545272E0();
}

uint64_t sub_2544D9788(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(void), uint64_t *a7)
{
  sub_2544DA4CC(a1, a4, a5, a6, &v9);
  __swift_instantiateConcreteTypeFromMangledName(a7);
  return sub_2545272E0();
}

uint64_t sub_2544D981C(void *a1)
{
  sub_2544DB4D8(a1, (uint64_t)&v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4408);
  return sub_2545272E0();
}

uint64_t sub_2544D98BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = MEMORY[0x25A27CC00]();
  if (sub_254526E10() == v5)
  {
    uint64_t v7 = sub_254526E40();
    swift_unknownObjectRelease();
    if ((void *)v7 == a1)
    {
      if (xpc_connection_copy_invalidation_reason())
      {
        if (qword_26B267240 != -1) {
          swift_once();
        }
        uint64_t v15 = sub_254526E00();
        __swift_project_value_buffer(v15, (uint64_t)qword_26B267340);
        uint64_t v16 = sub_254526DE0();
        os_log_type_t v17 = sub_254527420();
        if (os_log_type_enabled(v16, v17))
        {
          uint64_t v18 = (uint8_t *)swift_slowAlloc();
          uint64_t v19 = swift_slowAlloc();
          v29[0] = v19;
          *(_DWORD *)uint64_t v18 = 136315138;
          uint64_t v20 = sub_254527090();
          uint64_t v32 = sub_254498B68(v20, v21, v29);
          sub_254527500();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_254486000, v16, v17, "XPC Connection Invalid: %s", v18, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x25A27C9E0](v19, -1, -1);
          MEMORY[0x25A27C9E0](v18, -1, -1);
        }
      }
      sub_2544D55EC();
      swift_allocError();
      *uint64_t v22 = 0;
    }
    else
    {
      uint64_t v8 = sub_254526E50();
      swift_unknownObjectRelease();
      sub_2544D55EC();
      swift_allocError();
      if ((void *)v8 == a1) {
        char v10 = 1;
      }
      else {
        char v10 = 3;
      }
      *uint64_t v9 = v10;
    }
    return swift_willThrow();
  }
  if (sub_254526E30() != v5)
  {
    sub_2544D55EC();
    swift_allocError();
    *uint64_t v6 = 3;
    return swift_willThrow();
  }
  uint64_t v11 = MEMORY[0x25A27CC00](a1);
  if (v11 == sub_254526E30() && xpc_dictionary_get_BOOL(a1, "messageError"))
  {
    uint64_t result = sub_2544F3F60(a1);
    if (!v2)
    {
      uint64_t v23 = *((void *)&v30 + 1);
      uint64_t v24 = __swift_project_boxed_opaque_existential_1(v29, *((uint64_t *)&v30 + 1));
      uint64_t v25 = *(void *)(v23 - 8);
      MEMORY[0x270FA5388](v24);
      uint64_t v27 = (char *)v29 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v25 + 16))(v27);
      if (sub_2545279D0())
      {
        (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v23);
      }
      else
      {
        swift_allocError();
        (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v28, v27, v23);
      }
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    }
  }
  else
  {
    uint64_t result = sub_2544DC1C0(a1);
    if (!v2)
    {
      uint64_t v13 = v29[1];
      *(void *)a2 = v29[0];
      *(void *)(a2 + 8) = v13;
      long long v14 = v31;
      *(_OWORD *)(a2 + 16) = v30;
      *(_OWORD *)(a2 + 32) = v14;
    }
  }
  return result;
}

uint64_t sub_2544D9CC4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = MEMORY[0x25A27CC00]();
  if (sub_254526E10() == v5)
  {
    uint64_t v7 = sub_254526E40();
    swift_unknownObjectRelease();
    if ((void *)v7 == a1)
    {
      if (xpc_connection_copy_invalidation_reason())
      {
        if (qword_26B267240 != -1) {
          swift_once();
        }
        uint64_t v13 = sub_254526E00();
        __swift_project_value_buffer(v13, (uint64_t)qword_26B267340);
        long long v14 = sub_254526DE0();
        os_log_type_t v15 = sub_254527420();
        if (os_log_type_enabled(v14, v15))
        {
          uint64_t v16 = (uint8_t *)swift_slowAlloc();
          uint64_t v17 = swift_slowAlloc();
          uint64_t v28 = v17;
          *(_DWORD *)uint64_t v16 = 136315138;
          uint64_t v18 = sub_254527090();
          uint64_t v31 = sub_254498B68(v18, v19, &v28);
          sub_254527500();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_254486000, v14, v15, "XPC Connection Invalid: %s", v16, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x25A27C9E0](v17, -1, -1);
          MEMORY[0x25A27C9E0](v16, -1, -1);
        }
      }
      sub_2544D55EC();
      swift_allocError();
      *uint64_t v20 = 0;
    }
    else
    {
      uint64_t v8 = sub_254526E50();
      swift_unknownObjectRelease();
      sub_2544D55EC();
      swift_allocError();
      if ((void *)v8 == a1) {
        char v10 = 1;
      }
      else {
        char v10 = 3;
      }
      *uint64_t v9 = v10;
    }
    return swift_willThrow();
  }
  if (sub_254526E30() != v5)
  {
    sub_2544D55EC();
    swift_allocError();
    *uint64_t v6 = 3;
    return swift_willThrow();
  }
  uint64_t v11 = MEMORY[0x25A27CC00](a1);
  if (v11 == sub_254526E30() && xpc_dictionary_get_BOOL(a1, "messageError"))
  {
    uint64_t result = sub_2544F3F60(a1);
    if (!v2)
    {
      uint64_t v21 = v30;
      uint64_t v22 = __swift_project_boxed_opaque_existential_1(&v28, v30);
      uint64_t v23 = *(void *)(v21 - 8);
      MEMORY[0x270FA5388](v22);
      uint64_t v25 = (char *)&v27 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v23 + 16))(v25);
      if (sub_2545279D0())
      {
        (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v21);
      }
      else
      {
        swift_allocError();
        (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v26, v25, v21);
      }
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
    }
  }
  else
  {
    uint64_t result = sub_2544DC62C(a1);
    if (!v2)
    {
      *(unsigned char *)a2 = v28;
      *(_OWORD *)(a2 + 8) = v29;
    }
  }
  return result;
}

uint64_t sub_2544DA0CC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = MEMORY[0x25A27CC00]();
  if (sub_254526E10() == v5)
  {
    uint64_t v7 = sub_254526E40();
    swift_unknownObjectRelease();
    if ((void *)v7 == a1)
    {
      if (xpc_connection_copy_invalidation_reason())
      {
        if (qword_26B267240 != -1) {
          swift_once();
        }
        uint64_t v13 = sub_254526E00();
        __swift_project_value_buffer(v13, (uint64_t)qword_26B267340);
        long long v14 = sub_254526DE0();
        os_log_type_t v15 = sub_254527420();
        if (os_log_type_enabled(v14, v15))
        {
          uint64_t v16 = (uint8_t *)swift_slowAlloc();
          uint64_t v17 = swift_slowAlloc();
          v28[0] = v17;
          *(_DWORD *)uint64_t v16 = 136315138;
          uint64_t v18 = sub_254527090();
          uint64_t v30 = sub_254498B68(v18, v19, v28);
          sub_254527500();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_254486000, v14, v15, "XPC Connection Invalid: %s", v16, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x25A27C9E0](v17, -1, -1);
          MEMORY[0x25A27C9E0](v16, -1, -1);
        }
      }
      sub_2544D55EC();
      swift_allocError();
      *uint64_t v20 = 0;
    }
    else
    {
      uint64_t v8 = sub_254526E50();
      swift_unknownObjectRelease();
      sub_2544D55EC();
      swift_allocError();
      if ((void *)v8 == a1) {
        char v10 = 1;
      }
      else {
        char v10 = 3;
      }
      *uint64_t v9 = v10;
    }
    return swift_willThrow();
  }
  if (sub_254526E30() != v5)
  {
    sub_2544D55EC();
    swift_allocError();
    *uint64_t v6 = 3;
    return swift_willThrow();
  }
  uint64_t v11 = MEMORY[0x25A27CC00](a1);
  if (v11 == sub_254526E30() && xpc_dictionary_get_BOOL(a1, "messageError"))
  {
    uint64_t result = sub_2544F3F60(a1);
    if (!v2)
    {
      uint64_t v21 = v29;
      uint64_t v22 = __swift_project_boxed_opaque_existential_1(v28, v29);
      uint64_t v23 = *(void *)(v21 - 8);
      MEMORY[0x270FA5388](v22);
      uint64_t v25 = (char *)&v28[-1] - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v23 + 16))(v25);
      if (sub_2545279D0())
      {
        (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v21);
      }
      else
      {
        swift_allocError();
        (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v26, v25, v21);
      }
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    }
  }
  else
  {
    uint64_t result = sub_2544DCA98(a1);
    if (!v2) {
      *a2 = v28[0];
    }
  }
  return result;
}

uint64_t sub_2544DA4CC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void (*a4)(void)@<X3>, void *a5@<X8>)
{
  uint64_t v11 = MEMORY[0x25A27CC00]();
  if (sub_254526E10() == v11)
  {
    uint64_t v13 = sub_254526E40();
    swift_unknownObjectRelease();
    if ((void *)v13 == a1)
    {
      if (xpc_connection_copy_invalidation_reason())
      {
        if (qword_26B267240 != -1) {
          swift_once();
        }
        uint64_t v19 = sub_254526E00();
        __swift_project_value_buffer(v19, (uint64_t)qword_26B267340);
        uint64_t v20 = sub_254526DE0();
        os_log_type_t v21 = sub_254527420();
        if (os_log_type_enabled(v20, v21))
        {
          uint64_t v22 = (uint8_t *)swift_slowAlloc();
          uint64_t v23 = swift_slowAlloc();
          v34[0] = v23;
          *(_DWORD *)uint64_t v22 = 136315138;
          uint64_t v24 = sub_254527090();
          uint64_t v33 = sub_254498B68(v24, v25, v34);
          sub_254527500();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_254486000, v20, v21, "XPC Connection Invalid: %s", v22, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x25A27C9E0](v23, -1, -1);
          MEMORY[0x25A27C9E0](v22, -1, -1);
        }
      }
      sub_2544D55EC();
      swift_allocError();
      unsigned char *v26 = 0;
    }
    else
    {
      uint64_t v14 = sub_254526E50();
      swift_unknownObjectRelease();
      sub_2544D55EC();
      swift_allocError();
      if ((void *)v14 == a1) {
        char v16 = 1;
      }
      else {
        char v16 = 3;
      }
      *os_log_type_t v15 = v16;
    }
    return swift_willThrow();
  }
  if (sub_254526E30() != v11)
  {
    sub_2544D55EC();
    swift_allocError();
    *uint64_t v12 = 3;
    return swift_willThrow();
  }
  uint64_t v17 = MEMORY[0x25A27CC00](a1);
  if (v17 == sub_254526E30() && xpc_dictionary_get_BOOL(a1, "messageError"))
  {
    uint64_t result = sub_2544F3F60(a1);
    if (!v5)
    {
      uint64_t v27 = v35;
      uint64_t v28 = __swift_project_boxed_opaque_existential_1(v34, v35);
      uint64_t v29 = *(void *)(v27 - 8);
      MEMORY[0x270FA5388](v28);
      uint64_t v31 = (char *)&v34[-1] - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v29 + 16))(v31);
      if (sub_2545279D0())
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v27);
      }
      else
      {
        swift_allocError();
        (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v32, v31, v27);
      }
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    }
  }
  else
  {
    uint64_t result = sub_2544DDC80(a1, a2, a3, a4, (uint64_t)v34);
    if (!v5) {
      *a5 = v34[0];
    }
  }
  return result;
}

uint64_t sub_2544DA8E4(void *a1)
{
  uint64_t v3 = MEMORY[0x25A27CC00]();
  if (sub_254526E10() == v3)
  {
    uint64_t v5 = sub_254526E40();
    swift_unknownObjectRelease();
    if ((void *)v5 == a1)
    {
      if (xpc_connection_copy_invalidation_reason())
      {
        if (qword_26B267240 != -1) {
          swift_once();
        }
        uint64_t v16 = sub_254526E00();
        __swift_project_value_buffer(v16, (uint64_t)qword_26B267340);
        uint64_t v17 = sub_254526DE0();
        os_log_type_t v18 = sub_254527420();
        if (os_log_type_enabled(v17, v18))
        {
          uint64_t v19 = (uint8_t *)swift_slowAlloc();
          uint64_t v20 = swift_slowAlloc();
          v26[0] = v20;
          *(_DWORD *)uint64_t v19 = 136315138;
          uint64_t v21 = sub_254527090();
          uint64_t v28 = sub_254498B68(v21, v22, v26);
          sub_254527500();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_254486000, v17, v18, "XPC Connection Invalid: %s", v19, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x25A27C9E0](v20, -1, -1);
          MEMORY[0x25A27C9E0](v19, -1, -1);
        }
      }
      sub_2544D55EC();
      swift_allocError();
      *uint64_t v23 = 0;
    }
    else
    {
      uint64_t v6 = sub_254526E50();
      swift_unknownObjectRelease();
      sub_2544D55EC();
      swift_allocError();
      if ((void *)v6 == a1) {
        char v8 = 1;
      }
      else {
        char v8 = 3;
      }
      char *v7 = v8;
    }
    return swift_willThrow();
  }
  if (sub_254526E30() != v3)
  {
    sub_2544D55EC();
    swift_allocError();
    *uint64_t v4 = 3;
    return swift_willThrow();
  }
  uint64_t v9 = MEMORY[0x25A27CC00](a1);
  if (v9 != sub_254526E30() || !xpc_dictionary_get_BOOL(a1, "messageError")) {
    return sub_2544DCF04(a1);
  }
  uint64_t result = sub_2544F3F60(a1);
  if (!v1)
  {
    uint64_t v11 = v27;
    uint64_t v12 = __swift_project_boxed_opaque_existential_1(v26, v27);
    uint64_t v13 = *(void *)(v11 - 8);
    MEMORY[0x270FA5388](v12);
    os_log_type_t v15 = (char *)&v26[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v13 + 16))(v15);
    if (sub_2545279D0())
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v11);
    }
    else
    {
      swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v24, v15, v11);
    }
    swift_willThrow();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  return result;
}

uint64_t sub_2544DACD0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = MEMORY[0x25A27CC00]();
  if (sub_254526E10() == v5)
  {
    uint64_t v7 = sub_254526E40();
    swift_unknownObjectRelease();
    if ((void *)v7 == a1)
    {
      if (xpc_connection_copy_invalidation_reason())
      {
        if (qword_26B267240 != -1) {
          swift_once();
        }
        uint64_t v14 = sub_254526E00();
        __swift_project_value_buffer(v14, (uint64_t)qword_26B267340);
        os_log_type_t v15 = sub_254526DE0();
        os_log_type_t v16 = sub_254527420();
        if (os_log_type_enabled(v15, v16))
        {
          uint64_t v17 = (uint8_t *)swift_slowAlloc();
          uint64_t v18 = swift_slowAlloc();
          v29[0] = v18;
          *(_DWORD *)uint64_t v17 = 136315138;
          uint64_t v19 = sub_254527090();
          uint64_t v31 = sub_254498B68(v19, v20, v29);
          sub_254527500();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_254486000, v15, v16, "XPC Connection Invalid: %s", v17, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x25A27C9E0](v18, -1, -1);
          MEMORY[0x25A27C9E0](v17, -1, -1);
        }
      }
      sub_2544D55EC();
      swift_allocError();
      *uint64_t v21 = 0;
    }
    else
    {
      uint64_t v8 = sub_254526E50();
      swift_unknownObjectRelease();
      sub_2544D55EC();
      swift_allocError();
      if ((void *)v8 == a1) {
        char v10 = 1;
      }
      else {
        char v10 = 3;
      }
      *uint64_t v9 = v10;
    }
    return swift_willThrow();
  }
  if (sub_254526E30() != v5)
  {
    sub_2544D55EC();
    swift_allocError();
    *uint64_t v6 = 3;
    return swift_willThrow();
  }
  uint64_t v11 = MEMORY[0x25A27CC00](a1);
  if (v11 == sub_254526E30() && xpc_dictionary_get_BOOL(a1, "messageError"))
  {
    uint64_t result = sub_2544F3F60(a1);
    if (!v2)
    {
      uint64_t v22 = v30;
      uint64_t v23 = __swift_project_boxed_opaque_existential_1(v29, v30);
      uint64_t v24 = *(void *)(v22 - 8);
      MEMORY[0x270FA5388](v23);
      uint64_t v26 = (char *)&v29[-1] - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v24 + 16))(v26);
      if (sub_2545279D0())
      {
        (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v22);
      }
      else
      {
        swift_allocError();
        (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v27, v26, v22);
      }
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    }
  }
  else
  {
    uint64_t result = sub_2544DD3A8(a1);
    if (!v2)
    {
      char v13 = BYTE1(v29[0]);
      *a2 = v29[0];
      a2[1] = v13;
    }
  }
  return result;
}

uint64_t sub_2544DB0D8@<X0>(void *a1@<X0>, _WORD *a2@<X8>)
{
  uint64_t v5 = MEMORY[0x25A27CC00]();
  if (sub_254526E10() == v5)
  {
    uint64_t v7 = sub_254526E40();
    swift_unknownObjectRelease();
    if ((void *)v7 == a1)
    {
      if (xpc_connection_copy_invalidation_reason())
      {
        if (qword_26B267240 != -1) {
          swift_once();
        }
        uint64_t v13 = sub_254526E00();
        __swift_project_value_buffer(v13, (uint64_t)qword_26B267340);
        uint64_t v14 = sub_254526DE0();
        os_log_type_t v15 = sub_254527420();
        if (os_log_type_enabled(v14, v15))
        {
          os_log_type_t v16 = (uint8_t *)swift_slowAlloc();
          uint64_t v17 = swift_slowAlloc();
          v28[0] = v17;
          *(_DWORD *)os_log_type_t v16 = 136315138;
          uint64_t v18 = sub_254527090();
          uint64_t v30 = sub_254498B68(v18, v19, v28);
          sub_254527500();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_254486000, v14, v15, "XPC Connection Invalid: %s", v16, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x25A27C9E0](v17, -1, -1);
          MEMORY[0x25A27C9E0](v16, -1, -1);
        }
      }
      sub_2544D55EC();
      swift_allocError();
      *unint64_t v20 = 0;
    }
    else
    {
      uint64_t v8 = sub_254526E50();
      swift_unknownObjectRelease();
      sub_2544D55EC();
      swift_allocError();
      if ((void *)v8 == a1) {
        char v10 = 1;
      }
      else {
        char v10 = 3;
      }
      *uint64_t v9 = v10;
    }
    return swift_willThrow();
  }
  if (sub_254526E30() != v5)
  {
    sub_2544D55EC();
    swift_allocError();
    *uint64_t v6 = 3;
    return swift_willThrow();
  }
  uint64_t v11 = MEMORY[0x25A27CC00](a1);
  if (v11 == sub_254526E30() && xpc_dictionary_get_BOOL(a1, "messageError"))
  {
    uint64_t result = sub_2544F3F60(a1);
    if (!v2)
    {
      uint64_t v21 = v29;
      uint64_t v22 = __swift_project_boxed_opaque_existential_1(v28, v29);
      uint64_t v23 = *(void *)(v21 - 8);
      MEMORY[0x270FA5388](v22);
      uint64_t v25 = (char *)&v28[-1] - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v23 + 16))(v25);
      if (sub_2545279D0())
      {
        (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v21);
      }
      else
      {
        swift_allocError();
        (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v26, v25, v21);
      }
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    }
  }
  else
  {
    uint64_t result = sub_2544DD814(a1);
    if (!v2) {
      *a2 = v28[0];
    }
  }
  return result;
}

uint64_t sub_2544DB4D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = MEMORY[0x25A27CC00]();
  if (sub_254526E10() == v5)
  {
    uint64_t v7 = sub_254526E40();
    swift_unknownObjectRelease();
    if ((void *)v7 == a1)
    {
      if (xpc_connection_copy_invalidation_reason())
      {
        if (qword_26B267240 != -1) {
          swift_once();
        }
        uint64_t v17 = sub_254526E00();
        __swift_project_value_buffer(v17, (uint64_t)qword_26B267340);
        uint64_t v18 = sub_254526DE0();
        os_log_type_t v19 = sub_254527420();
        if (os_log_type_enabled(v18, v19))
        {
          unint64_t v20 = (uint8_t *)swift_slowAlloc();
          uint64_t v21 = swift_slowAlloc();
          *(void *)&long long v31 = v21;
          *(_DWORD *)unint64_t v20 = 136315138;
          uint64_t v22 = sub_254527090();
          uint64_t v36 = sub_254498B68(v22, v23, (uint64_t *)&v31);
          sub_254527500();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_254486000, v18, v19, "XPC Connection Invalid: %s", v20, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x25A27C9E0](v21, -1, -1);
          MEMORY[0x25A27C9E0](v20, -1, -1);
        }
      }
      sub_2544D55EC();
      swift_allocError();
      *uint64_t v24 = 0;
    }
    else
    {
      uint64_t v8 = sub_254526E50();
      swift_unknownObjectRelease();
      sub_2544D55EC();
      swift_allocError();
      if ((void *)v8 == a1) {
        char v10 = 1;
      }
      else {
        char v10 = 3;
      }
      *uint64_t v9 = v10;
    }
    return swift_willThrow();
  }
  if (sub_254526E30() != v5)
  {
    sub_2544D55EC();
    swift_allocError();
    *uint64_t v6 = 3;
    return swift_willThrow();
  }
  uint64_t v11 = MEMORY[0x25A27CC00](a1);
  if (v11 == sub_254526E30() && xpc_dictionary_get_BOOL(a1, "messageError"))
  {
    uint64_t result = sub_2544F3F60(a1);
    if (!v2)
    {
      uint64_t v25 = *((void *)&v32 + 1);
      uint64_t v26 = __swift_project_boxed_opaque_existential_1(&v31, *((uint64_t *)&v32 + 1));
      uint64_t v27 = *(void *)(v25 - 8);
      MEMORY[0x270FA5388](v26);
      uint64_t v29 = (char *)&v31 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v27 + 16))(v29);
      if (sub_2545279D0())
      {
        (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v25);
      }
      else
      {
        swift_allocError();
        (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v30, v29, v25);
      }
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
    }
  }
  else
  {
    uint64_t result = sub_2544DE0EC(a1);
    if (!v2)
    {
      long long v13 = v32;
      long long v14 = v33;
      uint64_t v15 = v34;
      uint64_t v16 = v35;
      *(_OWORD *)a2 = v31;
      *(_OWORD *)(a2 + 16) = v13;
      *(_OWORD *)(a2 + 32) = v14;
      *(void *)(a2 + 48) = v15;
      *(void *)(a2 + 56) = v16;
    }
  }
  return result;
}

uint64_t sub_2544DB8E8(void *a1)
{
  uint64_t v2 = sub_254526AA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v33[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_254526AB0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v33[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = MEMORY[0x25A27CC00](a1);
  if (v10 == sub_254526E30())
  {
    uint64_t v37 = v9;
    uint64_t v38 = v7;
    uint64_t v35 = v5;
    uint64_t v36 = v3;
    uint64_t v13 = MEMORY[0x25A27CC00](a1);
    if (v13 != sub_254526E30() || (long long v14 = a1, (unint64_t)xpc_dictionary_get_int64(a1, "messageFormat") >= 3))
    {
      sub_2544E83E4();
      swift_allocError();
      *uint64_t v16 = 0;
      return swift_willThrow();
    }
    uint64_t v15 = MEMORY[0x25A27CC00](a1);
    if (v15 != sub_254526E30() || !xpc_dictionary_get_string(a1, "messageType")) {
      goto LABEL_7;
    }
    uint64_t v18 = sub_254527090();
    uint64_t v20 = v19;
    uint64_t v39 = &type metadata for XPCRemoteError;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4418);
    if (v18 == sub_254527030() && v20 == v21)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      int v34 = sub_2545279E0();
      swift_bridgeObjectRelease();
      if ((v34 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    uint64_t v39 = &type metadata for XPCRemoteError;
    if (v18 == sub_254527030() && v20 == v22)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v24 = v37;
      uint64_t v23 = v38;
      uint64_t v25 = v2;
      uint64_t v26 = v6;
LABEL_20:
      if (xpc_dictionary_get_string(v14, "messageBody"))
      {
        unint64_t v27 = sub_254527090();
        unint64_t v29 = v28;
        sub_254526B00();
        swift_allocObject();
        sub_254526AF0();
        (*(void (**)(unsigned char *, void, uint64_t))(v23 + 104))(v24, *MEMORY[0x263F060E0], v26);
        sub_254526AD0();
        (*(void (**)(unsigned char *, void, uint64_t))(v36 + 104))(v35, *MEMORY[0x263F060C0], v25);
        sub_254526AC0();
        uint64_t v30 = sub_254525310(v27, v29);
        unint64_t v32 = v31;
        sub_2544E8438();
        sub_254526AE0();
        sub_2544E848C(v30, v32);
        return swift_release();
      }
      sub_2544E83E4();
      swift_allocError();
      char v12 = 2;
      goto LABEL_3;
    }
    int v34 = sub_2545279E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v24 = v37;
    uint64_t v23 = v38;
    uint64_t v25 = v2;
    uint64_t v26 = v6;
    if (v34) {
      goto LABEL_20;
    }
LABEL_7:
    sub_2544E83E4();
    swift_allocError();
    char v12 = 1;
    goto LABEL_3;
  }
  sub_2544E83E4();
  swift_allocError();
  char v12 = 4;
LABEL_3:
  *uint64_t v11 = v12;
  return swift_willThrow();
}

uint64_t sub_2544DBD54(void *a1)
{
  uint64_t v2 = sub_254526AA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v33[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_254526AB0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v33[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = MEMORY[0x25A27CC00](a1);
  if (v10 == sub_254526E30())
  {
    uint64_t v37 = v9;
    uint64_t v38 = v7;
    uint64_t v35 = v5;
    uint64_t v36 = v3;
    uint64_t v13 = MEMORY[0x25A27CC00](a1);
    if (v13 != sub_254526E30() || (long long v14 = a1, (unint64_t)xpc_dictionary_get_int64(a1, "messageFormat") >= 3))
    {
      sub_2544E83E4();
      swift_allocError();
      *uint64_t v16 = 0;
      return swift_willThrow();
    }
    uint64_t v15 = MEMORY[0x25A27CC00](a1);
    if (v15 != sub_254526E30() || !xpc_dictionary_get_string(a1, "messageType")) {
      goto LABEL_7;
    }
    uint64_t v18 = sub_254527090();
    uint64_t v20 = v19;
    uint64_t v39 = &type metadata for XPCConnectionError;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF4428);
    if (v18 == sub_254527030() && v20 == v21)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      int v34 = sub_2545279E0();
      swift_bridgeObjectRelease();
      if ((v34 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    uint64_t v39 = &type metadata for XPCConnectionError;
    if (v18 == sub_254527030() && v20 == v22)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v24 = v37;
      uint64_t v23 = v38;
      uint64_t v25 = v2;
      uint64_t v26 = v6;
LABEL_20:
      if (xpc_dictionary_get_string(v14, "messageBody"))
      {
        unint64_t v27 = sub_254527090();
        unint64_t v29 = v28;
        sub_254526B00();
        swift_allocObject();
        sub_254526AF0();
        (*(void (**)(unsigned char *, void, uint64_t))(v23 + 104))(v24, *MEMORY[0x263F060E0], v26);
        sub_254526AD0();
        (*(void (**)(unsigned char *, void, uint64_t))(v36 + 104))(v35, *MEMORY[0x263F060C0], v25);
        sub_254526AC0();
        uint64_t v30 = sub_254525310(v27, v29);
        unint64_t v32 = v31;
        sub_2544D56A8();
        sub_254526AE0();
        sub_2544E848C(v30, v32);
        return swift_release();
      }
      sub_2544E83E4();
      swift_allocError();
      char v12 = 2;
      goto LABEL_3;
    }
    int v34 = sub_2545279E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v24 = v37;
    uint64_t v23 = v38;
    uint64_t v25 = v2;
    uint64_t v26 = v6;
    if (v34) {
      goto LABEL_20;
    }
LABEL_7:
    sub_2544E83E4();
    swift_allocError();
    char v12 = 1;
    goto LABEL_3;
  }
  sub_2544E83E4();
  swift_allocError();
  char v12 = 4;
LABEL_3:
  *uint64_t v11 = v12;
  return swift_willThrow();
}

uint64_t sub_2544DC1C0(void *a1)
{
  uint64_t v2 = sub_254526AA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v33[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_254526AB0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v33[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = MEMORY[0x25A27CC00](a1);
  if (v10 == sub_254526E30())
  {
    uint64_t v37 = v9;
    uint64_t v38 = v7;
    uint64_t v35 = v5;
    uint64_t v36 = v3;
    uint64_t v13 = MEMORY[0x25A27CC00](a1);
    if (v13 != sub_254526E30() || (long long v14 = a1, (unint64_t)xpc_dictionary_get_int64(a1, "messageFormat") >= 3))
    {
      sub_2544E83E4();
      swift_allocError();
      *uint64_t v16 = 0;
      return swift_willThrow();
    }
    uint64_t v15 = MEMORY[0x25A27CC00](a1);
    if (v15 != sub_254526E30() || !xpc_dictionary_get_string(a1, "messageType")) {
      goto LABEL_7;
    }
    uint64_t v18 = sub_254527090();
    uint64_t v20 = v19;
    uint64_t v39 = &type metadata for GetHostConfigurationResponse;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF45C8);
    if (v18 == sub_254527030() && v20 == v21)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      int v34 = sub_2545279E0();
      swift_bridgeObjectRelease();
      if ((v34 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    uint64_t v39 = &type metadata for GetHostConfigurationResponse;
    if (v18 == sub_254527030() && v20 == v22)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v24 = v37;
      uint64_t v23 = v38;
      uint64_t v25 = v2;
      uint64_t v26 = v6;
LABEL_20:
      if (xpc_dictionary_get_string(v14, "messageBody"))
      {
        unint64_t v27 = sub_254527090();
        unint64_t v29 = v28;
        sub_254526B00();
        swift_allocObject();
        sub_254526AF0();
        (*(void (**)(unsigned char *, void, uint64_t))(v23 + 104))(v24, *MEMORY[0x263F060E0], v26);
        sub_254526AD0();
        (*(void (**)(unsigned char *, void, uint64_t))(v36 + 104))(v35, *MEMORY[0x263F060C0], v25);
        sub_254526AC0();
        uint64_t v30 = sub_254525310(v27, v29);
        unint64_t v32 = v31;
        sub_2544C7FC0();
        sub_254526AE0();
        sub_2544E848C(v30, v32);
        return swift_release();
      }
      sub_2544E83E4();
      swift_allocError();
      char v12 = 2;
      goto LABEL_3;
    }
    int v34 = sub_2545279E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v24 = v37;
    uint64_t v23 = v38;
    uint64_t v25 = v2;
    uint64_t v26 = v6;
    if (v34) {
      goto LABEL_20;
    }
LABEL_7:
    sub_2544E83E4();
    swift_allocError();
    char v12 = 1;
    goto LABEL_3;
  }
  sub_2544E83E4();
  swift_allocError();
  char v12 = 4;
LABEL_3:
  *uint64_t v11 = v12;
  return swift_willThrow();
}

uint64_t sub_2544DC62C(void *a1)
{
  uint64_t v2 = sub_254526AA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v33[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_254526AB0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v33[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = MEMORY[0x25A27CC00](a1);
  if (v10 == sub_254526E30())
  {
    uint64_t v37 = v9;
    uint64_t v38 = v7;
    uint64_t v35 = v5;
    uint64_t v36 = v3;
    uint64_t v13 = MEMORY[0x25A27CC00](a1);
    if (v13 != sub_254526E30() || (long long v14 = a1, (unint64_t)xpc_dictionary_get_int64(a1, "messageFormat") >= 3))
    {
      sub_2544E83E4();
      swift_allocError();
      *uint64_t v16 = 0;
      return swift_willThrow();
    }
    uint64_t v15 = MEMORY[0x25A27CC00](a1);
    if (v15 != sub_254526E30() || !xpc_dictionary_get_string(a1, "messageType")) {
      goto LABEL_7;
    }
    uint64_t v18 = sub_254527090();
    uint64_t v20 = v19;
    uint64_t v39 = &type metadata for SetHostConfigurationResponse;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF45A0);
    if (v18 == sub_254527030() && v20 == v21)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      int v34 = sub_2545279E0();
      swift_bridgeObjectRelease();
      if ((v34 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    uint64_t v39 = &type metadata for SetHostConfigurationResponse;
    if (v18 == sub_254527030() && v20 == v22)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v24 = v37;
      uint64_t v23 = v38;
      uint64_t v25 = v2;
      uint64_t v26 = v6;
LABEL_20:
      if (xpc_dictionary_get_string(v14, "messageBody"))
      {
        unint64_t v27 = sub_254527090();
        unint64_t v29 = v28;
        sub_254526B00();
        swift_allocObject();
        sub_254526AF0();
        (*(void (**)(unsigned char *, void, uint64_t))(v23 + 104))(v24, *MEMORY[0x263F060E0], v26);
        sub_254526AD0();
        (*(void (**)(unsigned char *, void, uint64_t))(v36 + 104))(v35, *MEMORY[0x263F060C0], v25);
        sub_254526AC0();
        uint64_t v30 = sub_254525310(v27, v29);
        unint64_t v32 = v31;
        sub_2544C81C0();
        sub_254526AE0();
        sub_2544E848C(v30, v32);
        return swift_release();
      }
      sub_2544E83E4();
      swift_allocError();
      char v12 = 2;
      goto LABEL_3;
    }
    int v34 = sub_2545279E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v24 = v37;
    uint64_t v23 = v38;
    uint64_t v25 = v2;
    uint64_t v26 = v6;
    if (v34) {
      goto LABEL_20;
    }
LABEL_7:
    sub_2544E83E4();
    swift_allocError();
    char v12 = 1;
    goto LABEL_3;
  }
  sub_2544E83E4();
  swift_allocError();
  char v12 = 4;
LABEL_3:
  *uint64_t v11 = v12;
  return swift_willThrow();
}

uint64_t sub_2544DCA98(void *a1)
{
  uint64_t v2 = sub_254526AA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v33[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_254526AB0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v33[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = MEMORY[0x25A27CC00](a1);
  if (v10 == sub_254526E30())
  {
    uint64_t v37 = v9;
    uint64_t v38 = v7;
    uint64_t v35 = v5;
    uint64_t v36 = v3;
    uint64_t v13 = MEMORY[0x25A27CC00](a1);
    if (v13 != sub_254526E30() || (long long v14 = a1, (unint64_t)xpc_dictionary_get_int64(a1, "messageFormat") >= 3))
    {
      sub_2544E83E4();
      swift_allocError();
      *uint64_t v16 = 0;
      return swift_willThrow();
    }
    uint64_t v15 = MEMORY[0x25A27CC00](a1);
    if (v15 != sub_254526E30() || !xpc_dictionary_get_string(a1, "messageType")) {
      goto LABEL_7;
    }
    uint64_t v18 = sub_254527090();
    uint64_t v20 = v19;
    uint64_t v39 = &type metadata for ResetTasksResponse;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF44D8);
    if (v18 == sub_254527030() && v20 == v21)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      int v34 = sub_2545279E0();
      swift_bridgeObjectRelease();
      if ((v34 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    uint64_t v39 = &type metadata for ResetTasksResponse;
    if (v18 == sub_254527030() && v20 == v22)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v24 = v37;
      uint64_t v23 = v38;
      uint64_t v25 = v2;
      uint64_t v26 = v6;
LABEL_20:
      if (xpc_dictionary_get_string(v14, "messageBody"))
      {
        unint64_t v27 = sub_254527090();
        unint64_t v29 = v28;
        sub_254526B00();
        swift_allocObject();
        sub_254526AF0();
        (*(void (**)(unsigned char *, void, uint64_t))(v23 + 104))(v24, *MEMORY[0x263F060E0], v26);
        sub_254526AD0();
        (*(void (**)(unsigned char *, void, uint64_t))(v36 + 104))(v35, *MEMORY[0x263F060C0], v25);
        sub_254526AC0();
        uint64_t v30 = sub_254525310(v27, v29);
        unint64_t v32 = v31;
        sub_2544C72C0();
        sub_254526AE0();
        sub_2544E848C(v30, v32);
        return swift_release();
      }
      sub_2544E83E4();
      swift_allocError();
      char v12 = 2;
      goto LABEL_3;
    }
    int v34 = sub_2545279E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v24 = v37;
    uint64_t v23 = v38;
    uint64_t v25 = v2;
    uint64_t v26 = v6;
    if (v34) {
      goto LABEL_20;
    }
LABEL_7:
    sub_2544E83E4();
    swift_allocError();
    char v12 = 1;
    goto LABEL_3;
  }
  sub_2544E83E4();
  swift_allocError();
  char v12 = 4;
LABEL_3:
  *uint64_t v11 = v12;
  return swift_willThrow();
}

uint64_t sub_2544DCF04(void *a1)
{
  uint64_t v2 = sub_254526AA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v34[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_254526AB0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v34[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = MEMORY[0x25A27CC00](a1);
  if (v10 == sub_254526E30())
  {
    uint64_t v39 = v9;
    uint64_t v40 = v7;
    uint64_t v37 = v5;
    uint64_t v38 = v3;
    uint64_t v13 = MEMORY[0x25A27CC00](a1);
    if (v13 != sub_254526E30() || (long long v14 = a1, (unint64_t)xpc_dictionary_get_int64(a1, "messageFormat") >= 3))
    {
      sub_2544E83E4();
      swift_allocError();
      *uint64_t v16 = 0;
      return swift_willThrow();
    }
    uint64_t v15 = MEMORY[0x25A27CC00](a1);
    if (v15 != sub_254526E30() || !xpc_dictionary_get_string(a1, "messageType")) {
      goto LABEL_7;
    }
    uint64_t v18 = sub_254527090();
    uint64_t v20 = v19;
    uint64_t TaskResponse = type metadata accessor for GetTaskResponse(0);
    uint64_t v41 = TaskResponse;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B267058);
    if (v18 == sub_254527030() && v20 == v22)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      LODWORD(v36) = sub_2545279E0();
      swift_bridgeObjectRelease();
      if ((v36 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    uint64_t v36 = TaskResponse;
    uint64_t v41 = TaskResponse;
    if (v18 == sub_254527030() && v20 == v23)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v25 = v39;
      uint64_t v24 = v40;
      uint64_t v26 = v2;
      uint64_t v27 = v6;
LABEL_20:
      if (xpc_dictionary_get_string(v14, "messageBody"))
      {
        unint64_t v28 = sub_254527090();
        unint64_t v30 = v29;
        sub_254526B00();
        swift_allocObject();
        sub_254526AF0();
        (*(void (**)(unsigned char *, void, uint64_t))(v24 + 104))(v25, *MEMORY[0x263F060E0], v27);
        sub_254526AD0();
        (*(void (**)(unsigned char *, void, uint64_t))(v38 + 104))(v37, *MEMORY[0x263F060C0], v26);
        sub_254526AC0();
        uint64_t v31 = sub_254525310(v28, v30);
        unint64_t v33 = v32;
        sub_2544E89F4(&qword_26B267040, 255, (void (*)(uint64_t))type metadata accessor for GetTaskResponse);
        sub_254526AE0();
        sub_2544E848C(v31, v33);
        return swift_release();
      }
      sub_2544E83E4();
      swift_allocError();
      char v12 = 2;
      goto LABEL_3;
    }
    int v35 = sub_2545279E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v25 = v39;
    uint64_t v24 = v40;
    uint64_t v26 = v2;
    uint64_t v27 = v6;
    if (v35) {
      goto LABEL_20;
    }
LABEL_7:
    sub_2544E83E4();
    swift_allocError();
    char v12 = 1;
    goto LABEL_3;
  }
  sub_2544E83E4();
  swift_allocError();
  char v12 = 4;
LABEL_3:
  *uint64_t v11 = v12;
  return swift_willThrow();
}

uint64_t sub_2544DD3A8(void *a1)
{
  uint64_t v2 = sub_254526AA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v33[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_254526AB0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v33[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = MEMORY[0x25A27CC00](a1);
  if (v10 == sub_254526E30())
  {
    uint64_t v37 = v9;
    uint64_t v38 = v7;
    int v35 = v5;
    uint64_t v36 = v3;
    uint64_t v13 = MEMORY[0x25A27CC00](a1);
    if (v13 != sub_254526E30() || (long long v14 = a1, (unint64_t)xpc_dictionary_get_int64(a1, "messageFormat") >= 3))
    {
      sub_2544E83E4();
      swift_allocError();
      *uint64_t v16 = 0;
      return swift_willThrow();
    }
    uint64_t v15 = MEMORY[0x25A27CC00](a1);
    if (v15 != sub_254526E30() || !xpc_dictionary_get_string(a1, "messageType")) {
      goto LABEL_7;
    }
    uint64_t v18 = sub_254527090();
    uint64_t v20 = v19;
    uint64_t v39 = &type metadata for AddTaskResponse;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF4500);
    if (v18 == sub_254527030() && v20 == v21)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      int v34 = sub_2545279E0();
      swift_bridgeObjectRelease();
      if ((v34 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    uint64_t v39 = &type metadata for AddTaskResponse;
    if (v18 == sub_254527030() && v20 == v22)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v24 = v37;
      uint64_t v23 = v38;
      uint64_t v25 = v2;
      uint64_t v26 = v6;
LABEL_20:
      if (xpc_dictionary_get_string(v14, "messageBody"))
      {
        unint64_t v27 = sub_254527090();
        unint64_t v29 = v28;
        sub_254526B00();
        swift_allocObject();
        sub_254526AF0();
        (*(void (**)(unsigned char *, void, uint64_t))(v23 + 104))(v24, *MEMORY[0x263F060E0], v26);
        sub_254526AD0();
        (*(void (**)(unsigned char *, void, uint64_t))(v36 + 104))(v35, *MEMORY[0x263F060C0], v25);
        sub_254526AC0();
        uint64_t v30 = sub_254525310(v27, v29);
        unint64_t v32 = v31;
        sub_2544C7470();
        sub_254526AE0();
        sub_2544E848C(v30, v32);
        return swift_release();
      }
      sub_2544E83E4();
      swift_allocError();
      char v12 = 2;
      goto LABEL_3;
    }
    int v34 = sub_2545279E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v24 = v37;
    uint64_t v23 = v38;
    uint64_t v25 = v2;
    uint64_t v26 = v6;
    if (v34) {
      goto LABEL_20;
    }
LABEL_7:
    sub_2544E83E4();
    swift_allocError();
    char v12 = 1;
    goto LABEL_3;
  }
  sub_2544E83E4();
  swift_allocError();
  char v12 = 4;
LABEL_3:
  *uint64_t v11 = v12;
  return swift_willThrow();
}

uint64_t sub_2544DD814(void *a1)
{
  uint64_t v2 = sub_254526AA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v33[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_254526AB0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v33[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = MEMORY[0x25A27CC00](a1);
  if (v10 == sub_254526E30())
  {
    uint64_t v37 = v9;
    uint64_t v38 = v7;
    int v35 = v5;
    uint64_t v36 = v3;
    uint64_t v13 = MEMORY[0x25A27CC00](a1);
    if (v13 != sub_254526E30() || (long long v14 = a1, (unint64_t)xpc_dictionary_get_int64(a1, "messageFormat") >= 3))
    {
      sub_2544E83E4();
      swift_allocError();
      *uint64_t v16 = 0;
      return swift_willThrow();
    }
    uint64_t v15 = MEMORY[0x25A27CC00](a1);
    if (v15 != sub_254526E30() || !xpc_dictionary_get_string(a1, "messageType")) {
      goto LABEL_7;
    }
    uint64_t v18 = sub_254527090();
    uint64_t v20 = v19;
    uint64_t v39 = &type metadata for GetOnDemandTaskRequestResponse;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4488);
    if (v18 == sub_254527030() && v20 == v21)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      int v34 = sub_2545279E0();
      swift_bridgeObjectRelease();
      if ((v34 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    uint64_t v39 = &type metadata for GetOnDemandTaskRequestResponse;
    if (v18 == sub_254527030() && v20 == v22)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v24 = v37;
      uint64_t v23 = v38;
      uint64_t v25 = v2;
      uint64_t v26 = v6;
LABEL_20:
      if (xpc_dictionary_get_string(v14, "messageBody"))
      {
        unint64_t v27 = sub_254527090();
        unint64_t v29 = v28;
        sub_254526B00();
        swift_allocObject();
        sub_254526AF0();
        (*(void (**)(unsigned char *, void, uint64_t))(v23 + 104))(v24, *MEMORY[0x263F060E0], v26);
        sub_254526AD0();
        (*(void (**)(unsigned char *, void, uint64_t))(v36 + 104))(v35, *MEMORY[0x263F060C0], v25);
        sub_254526AC0();
        uint64_t v30 = sub_254525310(v27, v29);
        unint64_t v32 = v31;
        sub_2544C79C0();
        sub_254526AE0();
        sub_2544E848C(v30, v32);
        return swift_release();
      }
      sub_2544E83E4();
      swift_allocError();
      char v12 = 2;
      goto LABEL_3;
    }
    int v34 = sub_2545279E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v24 = v37;
    uint64_t v23 = v38;
    uint64_t v25 = v2;
    uint64_t v26 = v6;
    if (v34) {
      goto LABEL_20;
    }
LABEL_7:
    sub_2544E83E4();
    swift_allocError();
    char v12 = 1;
    goto LABEL_3;
  }
  sub_2544E83E4();
  swift_allocError();
  char v12 = 4;
LABEL_3:
  *uint64_t v11 = v12;
  return swift_willThrow();
}

uint64_t sub_2544DDC80@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v47 = a4;
  char v48 = a3;
  uint64_t v49 = a2;
  uint64_t v7 = sub_254526AA0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_254526AB0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  long long v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x25A27CC00](a1);
  if (v15 == sub_254526E30())
  {
    os_log_type_t v42 = v14;
    uint64_t v43 = v12;
    uint64_t v45 = v10;
    uint64_t v46 = v8;
    uint64_t v44 = a5;
    uint64_t v18 = v49;
    uint64_t v19 = MEMORY[0x25A27CC00](a1);
    if (v19 != sub_254526E30() || (unint64_t)xpc_dictionary_get_int64(a1, "messageFormat") >= 3)
    {
      sub_2544E83E4();
      swift_allocError();
      *uint64_t v21 = 0;
      return swift_willThrow();
    }
    uint64_t v20 = MEMORY[0x25A27CC00](a1);
    if (v20 != sub_254526E30() || !xpc_dictionary_get_string(a1, "messageType")) {
      goto LABEL_7;
    }
    uint64_t v23 = sub_254527090();
    uint64_t v25 = v24;
    uint64_t v50 = v18;
    __swift_instantiateConcreteTypeFromMangledName(v48);
    if (v23 == sub_254527030() && v25 == v26)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v27 = sub_2545279E0();
      swift_bridgeObjectRelease();
      if ((v27 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    unint64_t v28 = a1;
    uint64_t v50 = v49;
    if (v23 == sub_254527030() && v25 == v29)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v30 = v7;
      unint64_t v32 = v45;
      uint64_t v31 = v46;
      uint64_t v33 = v11;
LABEL_20:
      if (xpc_dictionary_get_string(v28, "messageBody"))
      {
        unint64_t v35 = sub_254527090();
        unint64_t v37 = v36;
        sub_254526B00();
        swift_allocObject();
        sub_254526AF0();
        (*(void (**)(char *, void, uint64_t))(v43 + 104))(v42, *MEMORY[0x263F060E0], v33);
        sub_254526AD0();
        (*(void (**)(char *, void, uint64_t))(v31 + 104))(v32, *MEMORY[0x263F060C0], v30);
        sub_254526AC0();
        uint64_t v38 = sub_254525310(v35, v37);
        unint64_t v40 = v39;
        v47();
        sub_254526AE0();
        sub_2544E848C(v38, v40);
        return swift_release();
      }
      sub_2544E83E4();
      swift_allocError();
      char v17 = 2;
      goto LABEL_3;
    }
    char v34 = sub_2545279E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v30 = v7;
    unint64_t v32 = v45;
    uint64_t v31 = v46;
    uint64_t v33 = v11;
    if (v34) {
      goto LABEL_20;
    }
LABEL_7:
    sub_2544E83E4();
    swift_allocError();
    char v17 = 1;
    goto LABEL_3;
  }
  sub_2544E83E4();
  swift_allocError();
  char v17 = 4;
LABEL_3:
  *uint64_t v16 = v17;
  return swift_willThrow();
}

uint64_t sub_2544DE0EC(void *a1)
{
  uint64_t v2 = sub_254526AA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v33[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_254526AB0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v33[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = MEMORY[0x25A27CC00](a1);
  if (v10 == sub_254526E30())
  {
    unint64_t v37 = v9;
    uint64_t v38 = v7;
    unint64_t v35 = v5;
    uint64_t v36 = v3;
    uint64_t v13 = MEMORY[0x25A27CC00](a1);
    if (v13 != sub_254526E30() || (long long v14 = a1, (unint64_t)xpc_dictionary_get_int64(a1, "messageFormat") >= 3))
    {
      sub_2544E83E4();
      swift_allocError();
      *uint64_t v16 = 0;
      return swift_willThrow();
    }
    uint64_t v15 = MEMORY[0x25A27CC00](a1);
    if (v15 != sub_254526E30() || !xpc_dictionary_get_string(a1, "messageType")) {
      goto LABEL_7;
    }
    uint64_t v18 = sub_254527090();
    uint64_t v20 = v19;
    unint64_t v39 = &type metadata for GetExtensionResponse;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4438);
    if (v18 == sub_254527030() && v20 == v21)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      int v34 = sub_2545279E0();
      swift_bridgeObjectRelease();
      if ((v34 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    unint64_t v39 = &type metadata for GetExtensionResponse;
    if (v18 == sub_254527030() && v20 == v22)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v24 = v37;
      uint64_t v23 = v38;
      uint64_t v25 = v2;
      uint64_t v26 = v6;
LABEL_20:
      if (xpc_dictionary_get_string(v14, "messageBody"))
      {
        unint64_t v27 = sub_254527090();
        unint64_t v29 = v28;
        sub_254526B00();
        swift_allocObject();
        sub_254526AF0();
        (*(void (**)(unsigned char *, void, uint64_t))(v23 + 104))(v24, *MEMORY[0x263F060E0], v26);
        sub_254526AD0();
        (*(void (**)(unsigned char *, void, uint64_t))(v36 + 104))(v35, *MEMORY[0x263F060C0], v25);
        sub_254526AC0();
        uint64_t v30 = sub_254525310(v27, v29);
        unint64_t v32 = v31;
        sub_2544C7DC0();
        sub_254526AE0();
        sub_2544E848C(v30, v32);
        return swift_release();
      }
      sub_2544E83E4();
      swift_allocError();
      char v12 = 2;
      goto LABEL_3;
    }
    int v34 = sub_2545279E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v24 = v37;
    uint64_t v23 = v38;
    uint64_t v25 = v2;
    uint64_t v26 = v6;
    if (v34) {
      goto LABEL_20;
    }
LABEL_7:
    sub_2544E83E4();
    swift_allocError();
    char v12 = 1;
    goto LABEL_3;
  }
  sub_2544E83E4();
  swift_allocError();
  char v12 = 4;
LABEL_3:
  *uint64_t v11 = v12;
  return swift_willThrow();
}

uint64_t MLHostClient.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  MLHostClient.init()();
  return v0;
}

void *MLHostClient.init()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_254527440();
  uint64_t v25 = *(void *)(v2 - 8);
  uint64_t v26 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_254527470();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_254526EA0();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = sub_254526E70();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[2] = 0xD000000000000015;
  v0[3] = 0x8000000254533B20;
  v24[1] = sub_2544DEA5C(0, (unint64_t *)&unk_269DF4290);
  sub_2544DEA5C(0, (unint64_t *)&qword_269DF32E0);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F8F080], v7);
  sub_254527460();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_254526E80();
  uint64_t v11 = MEMORY[0x263F8EE78];
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_2544E89F4(&qword_269DF42A0, 255, MEMORY[0x263F8F198]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF42A8);
  sub_2544DEA98();
  sub_254527560();
  (*(void (**)(char *, void, uint64_t))(v25 + 104))(v4, *MEMORY[0x263F8F138], v26);
  char v12 = (void *)sub_254527480();
  v0[4] = v12;
  uint64_t v14 = v0[2];
  uint64_t v13 = v0[3];
  unint64_t v28 = v12;
  id v15 = v12;
  swift_bridgeObjectRetain();
  uint64_t v16 = (_xpc_connection_s *)sub_2544D2AE4((void *(*)(uint64_t *__return_ptr, void *))sub_2544DEAF4, (uint64_t)v27, v14, v13);
  type metadata accessor for XPCConnection();
  uint64_t v17 = swift_allocObject();
  id v18 = v15;
  *(void *)(v17 + 32) = sub_2544A58F4(v11);
  *(void *)(v17 + 40) = sub_2544A5900(v11);
  *(_OWORD *)(v17 + 48) = 0u;
  *(_OWORD *)(v17 + 64) = 0u;
  *(void *)(v17 + 16) = v16;
  *(void *)(v17 + 24) = v18;
  uint64_t v19 = v18;
  uint64_t v20 = (_xpc_connection_s *)swift_unknownObjectRetain();
  xpc_connection_set_target_queue(v20, v19);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v17;
  *(void *)(v21 + 24) = v16;
  aBlock[4] = sub_2544D25C4;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2544CF924;
  aBlock[3] = &block_descriptor_3;
  uint64_t v22 = _Block_copy(aBlock);
  swift_unknownObjectRetain_n();
  swift_retain();
  swift_release();
  xpc_connection_set_event_handler(v16, v22);
  swift_unknownObjectRelease();

  _Block_release(v22);
  xpc_connection_activate(v16);
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  v1[5] = v17;
  return v1;
}

uint64_t sub_2544DEA5C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_2544DEA98()
{
  unint64_t result = qword_269DF42B0;
  if (!qword_269DF42B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DF42A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF42B0);
  }
  return result;
}

xpc_connection_t sub_2544DEAF4@<X0>(const char *a1@<X0>, xpc_connection_t *a2@<X8>)
{
  return sub_2544D2A78(a1, *(NSObject **)(v2 + 16), a2);
}

uint64_t sub_2544DEB10()
{
  swift_release();
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t MLHostClient.deinit()
{
  xpc_connection_cancel(*(xpc_connection_t *)(*(void *)(v0 + 40) + 16));
  swift_bridgeObjectRelease();

  swift_release();
  return v0;
}

uint64_t MLHostClient.__deallocating_deinit()
{
  xpc_connection_cancel(*(xpc_connection_t *)(*(void *)(v0 + 40) + 16));
  swift_bridgeObjectRelease();

  swift_release();

  return MEMORY[0x270FA0228](v0, 48, 7);
}

uint64_t sub_2544DEBF8()
{
  return sub_254527490();
}

uint64_t sub_2544DEC1C(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 193) = a2;
  *(void *)(v3 + 112) = a1;
  *(void *)(v3 + 120) = v2;
  type metadata accessor for MLHostClient();
  sub_2544E89F4((unint64_t *)&unk_269DF42C8, v4, (void (*)(uint64_t))type metadata accessor for MLHostClient);
  uint64_t v6 = sub_2545272C0();
  *(void *)(v3 + 128) = v6;
  *(void *)(v3 + 136) = v5;
  return MEMORY[0x270FA2498](sub_2544DECD4, v6, v5);
}

uint64_t sub_2544DECD4()
{
  *(void *)(v0 + 144) = *(void *)(*(void *)(v0 + 120) + 40);
  return MEMORY[0x270FA2498](sub_2544DECFC, 0, 0);
}

uint64_t sub_2544DECFC()
{
  uint64_t v1 = sub_2544D87F8(*(unsigned char *)(v0 + 193), 0, (void (*)(uint64_t))sub_2544C7F40, (uint64_t)&type metadata for GetHostConfigurationRequest, &qword_269DF45E0);
  *(void *)(v0 + 152) = v1;
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 160) = v4;
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v5;
  void *v5 = v0;
  v5[1] = sub_2544DEE7C;
  return MEMORY[0x270FA2360](v0 + 16, 0, 0, 0x293A5F28646E6573, 0xE800000000000000, sub_2544E8C0C, v4, &type metadata for GetHostConfigurationResponse);
}

uint64_t sub_2544DEE7C()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2544DF028;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_2544DEF98;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2544DEF98()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 136);
  return MEMORY[0x270FA2498](sub_2544DEFFC, v1, v2);
}

uint64_t sub_2544DEFFC()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 24);
  long long v3 = *(_OWORD *)(v0 + 32);
  long long v4 = *(_OWORD *)(v0 + 48);
  *(void *)uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v1 + 8) = v2;
  *(_OWORD *)(v1 + 16) = v3;
  *(_OWORD *)(v1 + 32) = v4;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2544DF028()
{
  swift_unknownObjectRelease();
  swift_task_dealloc();
  v0[23] = v0[22];
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[17];
  return MEMORY[0x270FA2498](sub_2544DF09C, v1, v2);
}

uint64_t sub_2544DF09C()
{
  uint64_t v1 = *(void **)(v0 + 184);
  *(void *)(v0 + 88) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3870);
  int v3 = swift_dynamicCast();
  uint64_t v4 = *(void **)(v0 + 184);
  if (v3)
  {

    int v5 = *(unsigned __int8 *)(v0 + 192);
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_254526E00();
    __swift_project_value_buffer(v6, (uint64_t)qword_26B267340);
    uint64_t v7 = sub_254526DE0();
    os_log_type_t v8 = sub_254527410();
    if (os_log_type_enabled(v7, v8))
    {
      int v33 = v5;
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138412290;
      sub_2544D55EC();
      swift_allocError();
      *uint64_t v11 = v33;
      uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 104) = v12;
      sub_254527500();
      *uint64_t v10 = v12;
      _os_log_impl(&dword_254486000, v7, v8, "MLHostClient connection error: %@", v9, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      swift_arrayDestroy();
      MEMORY[0x25A27C9E0](v10, -1, -1);
      uint64_t v13 = v9;
      int v5 = v33;
      MEMORY[0x25A27C9E0](v13, -1, -1);
    }

    if (v5 == 2)
    {
      uint64_t v14 = sub_254526DE0();
      os_log_type_t v15 = sub_254527420();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl(&dword_254486000, v14, v15, "MLHostd couldn't handle client request. Please make sure to have the appropriate entitlements.", v16, 2u);
        MEMORY[0x25A27C9E0](v16, -1, -1);
      }
    }
    sub_2544D55EC();
    swift_allocError();
    *uint64_t v17 = v5;
    swift_willThrow();
    id v18 = *(void **)(v0 + 88);
  }
  else
  {

    *(void *)(v0 + 80) = v4;
    id v19 = v4;
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_willThrow();
      goto LABEL_20;
    }

    uint64_t v21 = *(void *)(v0 + 64);
    uint64_t v20 = *(void *)(v0 + 72);
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_254526E00();
    __swift_project_value_buffer(v22, (uint64_t)qword_26B267340);
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_254526DE0();
    os_log_type_t v24 = sub_254527410();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = v21;
      uint64_t v26 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 138412290;
      sub_2544E831C();
      swift_allocError();
      *unint64_t v27 = v34;
      v27[1] = v20;
      swift_bridgeObjectRetain();
      uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 96) = v28;
      sub_254527500();
      void *v26 = v28;
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_254486000, v23, v24, "MLHostClient remote error: %@", v25, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      swift_arrayDestroy();
      unint64_t v29 = v26;
      uint64_t v21 = v34;
      MEMORY[0x25A27C9E0](v29, -1, -1);
      MEMORY[0x25A27C9E0](v25, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_2544E831C();
    swift_allocError();
    *uint64_t v30 = v21;
    v30[1] = v20;
    swift_willThrow();
    id v18 = *(void **)(v0 + 80);
  }

LABEL_20:
  unint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_2544DF598(uint64_t a1, uint64_t a2)
{
  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  type metadata accessor for MLHostClient();
  sub_2544E89F4((unint64_t *)&unk_269DF42C8, v4, (void (*)(uint64_t))type metadata accessor for MLHostClient);
  uint64_t v6 = sub_2545272C0();
  v3[14] = v6;
  v3[15] = v5;
  return MEMORY[0x270FA2498](sub_2544DF650, v6, v5);
}

uint64_t sub_2544DF650()
{
  *(void *)(v0 + 128) = *(void *)(*(void *)(v0 + 104) + 40);
  return MEMORY[0x270FA2498](sub_2544DF678, 0, 0);
}

uint64_t sub_2544DF678()
{
  uint64_t v1 = sub_2544D7DF4(*(long long **)(v0 + 96), 0);
  *(void *)(v0 + 136) = v1;
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 144) = v4;
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v5;
  void *v5 = v0;
  v5[1] = sub_2544DF7D4;
  return MEMORY[0x270FA2360](v0 + 16, 0, 0, 0x293A5F28646E6573, 0xE800000000000000, sub_2544E8B98, v4, &type metadata for SetHostConfigurationResponse);
}

uint64_t sub_2544DF7D4()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2544DF980;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_2544DF8F0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2544DF8F0()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  return MEMORY[0x270FA2498](sub_2544DF954, v1, v2);
}

uint64_t sub_2544DF954()
{
  uint64_t v1 = *(void *)(v0 + 88);
  long long v2 = *(_OWORD *)(v0 + 24);
  *(unsigned char *)uint64_t v1 = *(unsigned char *)(v0 + 16);
  *(_OWORD *)(v1 + 8) = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2544DF980()
{
  swift_unknownObjectRelease();
  swift_task_dealloc();
  v0[21] = v0[20];
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[15];
  return MEMORY[0x270FA2498](sub_2544DF9F4, v1, v2);
}

uint64_t sub_2544DF9F4()
{
  uint64_t v1 = *(void **)(v0 + 168);
  *(void *)(v0 + 64) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3870);
  int v3 = swift_dynamicCast();
  uint64_t v4 = *(void **)(v0 + 168);
  if (v3)
  {

    int v5 = *(unsigned __int8 *)(v0 + 176);
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_254526E00();
    __swift_project_value_buffer(v6, (uint64_t)qword_26B267340);
    uint64_t v7 = sub_254526DE0();
    os_log_type_t v8 = sub_254527410();
    if (os_log_type_enabled(v7, v8))
    {
      int v33 = v5;
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138412290;
      sub_2544D55EC();
      swift_allocError();
      *uint64_t v11 = v33;
      uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 80) = v12;
      sub_254527500();
      *uint64_t v10 = v12;
      _os_log_impl(&dword_254486000, v7, v8, "MLHostClient connection error: %@", v9, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      swift_arrayDestroy();
      MEMORY[0x25A27C9E0](v10, -1, -1);
      uint64_t v13 = v9;
      int v5 = v33;
      MEMORY[0x25A27C9E0](v13, -1, -1);
    }

    if (v5 == 2)
    {
      uint64_t v14 = sub_254526DE0();
      os_log_type_t v15 = sub_254527420();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl(&dword_254486000, v14, v15, "MLHostd couldn't handle client request. Please make sure to have the appropriate entitlements.", v16, 2u);
        MEMORY[0x25A27C9E0](v16, -1, -1);
      }
    }
    sub_2544D55EC();
    swift_allocError();
    *uint64_t v17 = v5;
    swift_willThrow();
    id v18 = *(void **)(v0 + 64);
  }
  else
  {

    *(void *)(v0 + 56) = v4;
    id v19 = v4;
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_willThrow();
      goto LABEL_20;
    }

    uint64_t v21 = *(void *)(v0 + 40);
    uint64_t v20 = *(void *)(v0 + 48);
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_254526E00();
    __swift_project_value_buffer(v22, (uint64_t)qword_26B267340);
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_254526DE0();
    os_log_type_t v24 = sub_254527410();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = v21;
      uint64_t v26 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 138412290;
      sub_2544E831C();
      swift_allocError();
      *unint64_t v27 = v34;
      v27[1] = v20;
      swift_bridgeObjectRetain();
      uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 72) = v28;
      sub_254527500();
      void *v26 = v28;
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_254486000, v23, v24, "MLHostClient remote error: %@", v25, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      swift_arrayDestroy();
      unint64_t v29 = v26;
      uint64_t v21 = v34;
      MEMORY[0x25A27C9E0](v29, -1, -1);
      MEMORY[0x25A27C9E0](v25, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_2544E831C();
    swift_allocError();
    *uint64_t v30 = v21;
    v30[1] = v20;
    swift_willThrow();
    id v18 = *(void **)(v0 + 56);
  }

LABEL_20:
  unint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_2544DFEF0(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 153) = a2;
  *(void *)(v3 + 72) = a1;
  *(void *)(v3 + 80) = v2;
  type metadata accessor for MLHostClient();
  sub_2544E89F4((unint64_t *)&unk_269DF42C8, v4, (void (*)(uint64_t))type metadata accessor for MLHostClient);
  uint64_t v6 = sub_2545272C0();
  *(void *)(v3 + 88) = v6;
  *(void *)(v3 + 96) = v5;
  return MEMORY[0x270FA2498](sub_2544DFFA8, v6, v5);
}

uint64_t sub_2544DFFA8()
{
  *(void *)(v0 + 104) = *(void *)(*(void *)(v0 + 80) + 40);
  return MEMORY[0x270FA2498](sub_2544DFFD0, 0, 0);
}

uint64_t sub_2544DFFD0()
{
  uint64_t v1 = sub_2544D87F8(*(unsigned char *)(v0 + 153), 0, (void (*)(uint64_t))sub_2544C8340, (uint64_t)&type metadata for GetNotificationsConfigRequest, &qword_269DF4590);
  *(void *)(v0 + 112) = v1;
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 120) = v4;
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v5;
  void *v5 = v0;
  v5[1] = sub_2544E0150;
  return MEMORY[0x270FA2360](v0 + 48, 0, 0, 0x293A5F28646E6573, 0xE800000000000000, sub_2544E8B14, v4, &type metadata for GetNotificationsConfigResponse);
}

uint64_t sub_2544E0150()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2544E02D0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_2544E026C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2544E026C()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 96);
  return MEMORY[0x270FA2498](sub_2544E8D48, v1, v2);
}

uint64_t sub_2544E02D0()
{
  swift_unknownObjectRelease();
  swift_task_dealloc();
  v0[18] = v0[17];
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  return MEMORY[0x270FA2498](sub_2544E8D88, v1, v2);
}

uint64_t sub_2544E0344(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 146) = a2;
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 72) = v2;
  type metadata accessor for MLHostClient();
  sub_2544E89F4((unint64_t *)&unk_269DF42C8, v4, (void (*)(uint64_t))type metadata accessor for MLHostClient);
  uint64_t v6 = sub_2545272C0();
  *(void *)(v3 + 80) = v6;
  *(void *)(v3 + 88) = v5;
  return MEMORY[0x270FA2498](sub_2544E03FC, v6, v5);
}

uint64_t sub_2544E03FC()
{
  *(void *)(v0 + 96) = *(void *)(*(void *)(v0 + 72) + 40);
  return MEMORY[0x270FA2498](sub_2544E0424, 0, 0);
}

uint64_t sub_2544E0424()
{
  uint64_t v1 = sub_2544D87F8(*(unsigned char *)(v0 + 146), 0, (void (*)(uint64_t))sub_2544C84EC, (uint64_t)&type metadata for ResetNotificationsRequest, &qword_269DF4568);
  *(void *)(v0 + 104) = v1;
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 112) = v4;
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v5;
  void *v5 = v0;
  v5[1] = sub_2544E05A4;
  return MEMORY[0x270FA2360](v0 + 145, 0, 0, 0x293A5F28646E6573, 0xE800000000000000, sub_2544E8AC0, v4, &type metadata for ResetTasksResponse);
}

uint64_t sub_2544E05A4()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2544E0724;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_2544E06C0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2544E06C0()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  return MEMORY[0x270FA2498](sub_2544E8D8C, v1, v2);
}

uint64_t sub_2544E0724()
{
  swift_unknownObjectRelease();
  swift_task_dealloc();
  v0[17] = v0[16];
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  return MEMORY[0x270FA2498](sub_2544E8D4C, v1, v2);
}

uint64_t sub_2544E0798(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 80) = a2;
  *(void *)(v4 + 88) = v3;
  *(unsigned char *)(v4 + 161) = a3;
  *(void *)(v4 + 72) = a1;
  type metadata accessor for MLHostClient();
  sub_2544E89F4((unint64_t *)&unk_269DF42C8, v5, (void (*)(uint64_t))type metadata accessor for MLHostClient);
  uint64_t v7 = sub_2545272C0();
  *(void *)(v4 + 96) = v7;
  *(void *)(v4 + 104) = v6;
  return MEMORY[0x270FA2498](sub_2544E0854, v7, v6);
}

uint64_t sub_2544E0854()
{
  *(void *)(v0 + 112) = *(void *)(*(void *)(v0 + 88) + 40);
  return MEMORY[0x270FA2498](sub_2544E087C, 0, 0);
}

uint64_t sub_2544E087C()
{
  uint64_t v1 = sub_2544D8140(*(void *)(v0 + 80), *(unsigned char *)(v0 + 161) & 1, 0);
  *(void *)(v0 + 120) = v1;
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 + 112);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 128) = v4;
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v5;
  void *v5 = v0;
  v5[1] = sub_2544E09E0;
  return MEMORY[0x270FA2360](v0 + 48, 0, 0, 0x293A5F28646E6573, 0xE800000000000000, sub_2544E8A3C, v4, &type metadata for ListTasksResponse);
}

uint64_t sub_2544E09E0()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2544E0B60;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_2544E0AFC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2544E0AFC()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 104);
  return MEMORY[0x270FA2498](sub_2544E8D48, v1, v2);
}

uint64_t sub_2544E0B60()
{
  swift_unknownObjectRelease();
  swift_task_dealloc();
  v0[19] = v0[18];
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[13];
  return MEMORY[0x270FA2498](sub_2544E0BD4, v1, v2);
}

uint64_t sub_2544E0BD4()
{
  uint64_t v1 = *(void **)(v0 + 152);
  *(void *)(v0 + 32) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3870);
  int v3 = swift_dynamicCast();
  uint64_t v4 = *(void **)(v0 + 152);
  if (v3)
  {

    int v5 = *(unsigned __int8 *)(v0 + 160);
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_254526E00();
    __swift_project_value_buffer(v6, (uint64_t)qword_26B267340);
    uint64_t v7 = sub_254526DE0();
    os_log_type_t v8 = sub_254527410();
    if (os_log_type_enabled(v7, v8))
    {
      int v33 = v5;
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138412290;
      sub_2544D55EC();
      swift_allocError();
      *uint64_t v11 = v33;
      uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 64) = v12;
      sub_254527500();
      *uint64_t v10 = v12;
      _os_log_impl(&dword_254486000, v7, v8, "MLHostClient connection error: %@", v9, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      swift_arrayDestroy();
      MEMORY[0x25A27C9E0](v10, -1, -1);
      uint64_t v13 = v9;
      int v5 = v33;
      MEMORY[0x25A27C9E0](v13, -1, -1);
    }

    if (v5 == 2)
    {
      uint64_t v14 = sub_254526DE0();
      os_log_type_t v15 = sub_254527420();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl(&dword_254486000, v14, v15, "MLHostd couldn't handle client request. Please make sure to have the appropriate entitlements.", v16, 2u);
        MEMORY[0x25A27C9E0](v16, -1, -1);
      }
    }
    sub_2544D55EC();
    swift_allocError();
    *uint64_t v17 = v5;
    swift_willThrow();
    id v18 = *(void **)(v0 + 32);
  }
  else
  {

    *(void *)(v0 + 40) = v4;
    id v19 = v4;
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_willThrow();
      goto LABEL_20;
    }

    uint64_t v21 = *(void *)(v0 + 16);
    uint64_t v20 = *(void *)(v0 + 24);
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_254526E00();
    __swift_project_value_buffer(v22, (uint64_t)qword_26B267340);
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_254526DE0();
    os_log_type_t v24 = sub_254527410();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = v21;
      uint64_t v26 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 138412290;
      sub_2544E831C();
      swift_allocError();
      *unint64_t v27 = v34;
      v27[1] = v20;
      swift_bridgeObjectRetain();
      uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 56) = v28;
      sub_254527500();
      void *v26 = v28;
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_254486000, v23, v24, "MLHostClient remote error: %@", v25, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      swift_arrayDestroy();
      unint64_t v29 = v26;
      uint64_t v21 = v34;
      MEMORY[0x25A27C9E0](v29, -1, -1);
      MEMORY[0x25A27C9E0](v25, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_2544E831C();
    swift_allocError();
    *uint64_t v30 = v21;
    v30[1] = v20;
    swift_willThrow();
    id v18 = *(void **)(v0 + 40);
  }

LABEL_20:
  unint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_2544E10D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  type metadata accessor for MLHostClient();
  sub_2544E89F4((unint64_t *)&unk_269DF42C8, v5, (void (*)(uint64_t))type metadata accessor for MLHostClient);
  uint64_t v7 = sub_2545272C0();
  v4[12] = v7;
  v4[13] = v6;
  return MEMORY[0x270FA2498](sub_2544E1188, v7, v6);
}

uint64_t sub_2544E1188()
{
  *(void *)(v0 + 112) = *(void *)(*(void *)(v0 + 88) + 40);
  return MEMORY[0x270FA2498](sub_2544E11B0, 0, 0);
}

uint64_t sub_2544E11B0()
{
  uint64_t v1 = sub_2544D8E80(v0[9], v0[10], 0, (void (*)(uint64_t))sub_2544C7090, (uint64_t)&type metadata for GetTaskRequest, &qword_269DF4530);
  v0[15] = v1;
  uint64_t v2 = v1;
  uint64_t v3 = v0[14];
  uint64_t v4 = swift_task_alloc();
  v0[16] = v4;
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[17] = v5;
  uint64_t TaskResponse = type metadata accessor for GetTaskResponse(0);
  void *v5 = v0;
  v5[1] = sub_2544E1324;
  uint64_t v7 = v0[8];
  return MEMORY[0x270FA2360](v7, 0, 0, 0x293A5F28646E6573, 0xE800000000000000, sub_2544E88B8, v4, TaskResponse);
}

uint64_t sub_2544E1324()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2544E14A4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_2544E1440;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2544E1440()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2544E14A4()
{
  swift_unknownObjectRelease();
  swift_task_dealloc();
  v0[19] = v0[18];
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[13];
  return MEMORY[0x270FA2498](sub_2544E1518, v1, v2);
}

uint64_t sub_2544E1518()
{
  uint64_t v1 = *(void **)(v0 + 152);
  *(void *)(v0 + 32) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3870);
  int v3 = swift_dynamicCast();
  uint64_t v4 = *(void **)(v0 + 152);
  if (v3)
  {

    int v5 = *(unsigned __int8 *)(v0 + 160);
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_254526E00();
    __swift_project_value_buffer(v6, (uint64_t)qword_26B267340);
    uint64_t v7 = sub_254526DE0();
    os_log_type_t v8 = sub_254527410();
    if (os_log_type_enabled(v7, v8))
    {
      int v33 = v5;
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138412290;
      sub_2544D55EC();
      swift_allocError();
      *uint64_t v11 = v33;
      uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 56) = v12;
      sub_254527500();
      *uint64_t v10 = v12;
      _os_log_impl(&dword_254486000, v7, v8, "MLHostClient connection error: %@", v9, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      swift_arrayDestroy();
      MEMORY[0x25A27C9E0](v10, -1, -1);
      uint64_t v13 = v9;
      int v5 = v33;
      MEMORY[0x25A27C9E0](v13, -1, -1);
    }

    if (v5 == 2)
    {
      uint64_t v14 = sub_254526DE0();
      os_log_type_t v15 = sub_254527420();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl(&dword_254486000, v14, v15, "MLHostd couldn't handle client request. Please make sure to have the appropriate entitlements.", v16, 2u);
        MEMORY[0x25A27C9E0](v16, -1, -1);
      }
    }
    sub_2544D55EC();
    swift_allocError();
    *uint64_t v17 = v5;
    swift_willThrow();
    id v18 = *(void **)(v0 + 32);
  }
  else
  {

    *(void *)(v0 + 40) = v4;
    id v19 = v4;
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_willThrow();
      goto LABEL_20;
    }

    uint64_t v21 = *(void *)(v0 + 16);
    uint64_t v20 = *(void *)(v0 + 24);
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_254526E00();
    __swift_project_value_buffer(v22, (uint64_t)qword_26B267340);
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_254526DE0();
    os_log_type_t v24 = sub_254527410();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = v21;
      uint64_t v26 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 138412290;
      sub_2544E831C();
      swift_allocError();
      *unint64_t v27 = v34;
      v27[1] = v20;
      swift_bridgeObjectRetain();
      uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 48) = v28;
      sub_254527500();
      void *v26 = v28;
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_254486000, v23, v24, "MLHostClient remote error: %@", v25, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      swift_arrayDestroy();
      unint64_t v29 = v26;
      uint64_t v21 = v34;
      MEMORY[0x25A27C9E0](v29, -1, -1);
      MEMORY[0x25A27C9E0](v25, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_2544E831C();
    swift_allocError();
    *uint64_t v30 = v21;
    v30[1] = v20;
    swift_willThrow();
    id v18 = *(void **)(v0 + 40);
  }

LABEL_20:
  unint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_2544E1A14(uint64_t a1, uint64_t a2)
{
  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  type metadata accessor for MLHostClient();
  sub_2544E89F4((unint64_t *)&unk_269DF42C8, v4, (void (*)(uint64_t))type metadata accessor for MLHostClient);
  uint64_t v6 = sub_2545272C0();
  v3[11] = v6;
  v3[12] = v5;
  return MEMORY[0x270FA2498](sub_2544E1ACC, v6, v5);
}

uint64_t sub_2544E1ACC()
{
  *(void *)(v0 + 104) = *(void *)(*(void *)(v0 + 80) + 40);
  return MEMORY[0x270FA2498](sub_2544E1AF4, 0, 0);
}

uint64_t sub_2544E1AF4()
{
  uint64_t v1 = sub_2544D8488(v0[9], 0);
  v0[14] = v1;
  uint64_t v2 = v1;
  uint64_t v3 = v0[13];
  uint64_t v4 = swift_task_alloc();
  v0[15] = v4;
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[16] = (uint64_t)v5;
  void *v5 = v0;
  v5[1] = sub_2544E1C50;
  return MEMORY[0x270FA2360](v0 + 19, 0, 0, 0x293A5F28646E6573, 0xE800000000000000, sub_2544E8844, v4, &type metadata for AddTaskResponse);
}

uint64_t sub_2544E1C50()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2544E1DFC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_2544E1D6C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2544E1D6C()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 96);
  return MEMORY[0x270FA2498](sub_2544E1DD0, v1, v2);
}

uint64_t sub_2544E1DD0()
{
  uint64_t v1 = *(unsigned char **)(v0 + 64);
  char v2 = *(unsigned char *)(v0 + 153);
  *uint64_t v1 = *(unsigned char *)(v0 + 152);
  v1[1] = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2544E1DFC()
{
  swift_unknownObjectRelease();
  swift_task_dealloc();
  v0[18] = v0[17];
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  return MEMORY[0x270FA2498](sub_2544E1E70, v1, v2);
}

uint64_t sub_2544E1E70()
{
  uint64_t v1 = *(void **)(v0 + 144);
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = (void **)(v0 + 48);
  id v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3870);
  int v4 = swift_dynamicCast();
  uint64_t v5 = *(void **)(v0 + 144);
  if (v4)
  {

    int v6 = *(unsigned __int8 *)(v0 + 154);
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_254526E00();
    __swift_project_value_buffer(v7, (uint64_t)qword_26B267340);
    uint64_t v8 = sub_254526DE0();
    os_log_type_t v9 = sub_254527410();
    if (os_log_type_enabled(v8, v9))
    {
      int v34 = v6;
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 138412290;
      sub_2544D55EC();
      swift_allocError();
      *uint64_t v12 = v34;
      uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 40) = v13;
      sub_254527500();
      *uint64_t v11 = v13;
      _os_log_impl(&dword_254486000, v8, v9, "MLHostClient connection error: %@", v10, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      swift_arrayDestroy();
      MEMORY[0x25A27C9E0](v11, -1, -1);
      uint64_t v14 = v10;
      int v6 = v34;
      MEMORY[0x25A27C9E0](v14, -1, -1);
    }

    if (v6 == 2)
    {
      os_log_type_t v15 = sub_254526DE0();
      os_log_type_t v16 = sub_254527420();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v17 = 0;
        _os_log_impl(&dword_254486000, v15, v16, "MLHostd couldn't handle client request. Please make sure to have the appropriate entitlements.", v17, 2u);
        MEMORY[0x25A27C9E0](v17, -1, -1);
      }
    }
    sub_2544D55EC();
    swift_allocError();
    *id v18 = v6;
    swift_willThrow();
    id v19 = *(void **)(v0 + 32);
  }
  else
  {

    *(void *)(v0 + 48) = v5;
    id v20 = v5;
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_willThrow();
      goto LABEL_20;
    }

    uint64_t v22 = *(void *)(v0 + 16);
    uint64_t v21 = *(void *)(v0 + 24);
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_254526E00();
    __swift_project_value_buffer(v23, (uint64_t)qword_26B267340);
    swift_bridgeObjectRetain_n();
    os_log_type_t v24 = sub_254526DE0();
    os_log_type_t v25 = sub_254527410();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = v22;
      unint64_t v27 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 138412290;
      sub_2544E831C();
      swift_allocError();
      *uint64_t v28 = v35;
      v28[1] = v21;
      swift_bridgeObjectRetain();
      uint64_t v29 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 56) = v29;
      uint64_t v2 = (void **)(v0 + 48);
      sub_254527500();
      *unint64_t v27 = v29;
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_254486000, v24, v25, "MLHostClient remote error: %@", v26, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      swift_arrayDestroy();
      uint64_t v30 = v27;
      uint64_t v22 = v35;
      MEMORY[0x25A27C9E0](v30, -1, -1);
      MEMORY[0x25A27C9E0](v26, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_2544E831C();
    swift_allocError();
    *unint64_t v31 = v22;
    v31[1] = v21;
    swift_willThrow();
    id v19 = *v2;
  }

LABEL_20:
  unint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
  return v32();
}

uint64_t sub_2544E2370(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 146) = a2;
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 72) = v2;
  type metadata accessor for MLHostClient();
  sub_2544E89F4((unint64_t *)&unk_269DF42C8, v4, (void (*)(uint64_t))type metadata accessor for MLHostClient);
  uint64_t v6 = sub_2545272C0();
  *(void *)(v3 + 80) = v6;
  *(void *)(v3 + 88) = v5;
  return MEMORY[0x270FA2498](sub_2544E2428, v6, v5);
}

uint64_t sub_2544E2428()
{
  *(void *)(v0 + 96) = *(void *)(*(void *)(v0 + 72) + 40);
  return MEMORY[0x270FA2498](sub_2544E2450, 0, 0);
}

uint64_t sub_2544E2450()
{
  uint64_t v1 = sub_2544D87F8(*(unsigned char *)(v0 + 146), 0, (void (*)(uint64_t))sub_2544C7240, (uint64_t)&type metadata for ResetTasksRequest, &qword_269DF44F0);
  *(void *)(v0 + 104) = v1;
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 112) = v4;
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v5;
  void *v5 = v0;
  v5[1] = sub_2544E25D0;
  return MEMORY[0x270FA2360](v0 + 145, 0, 0, 0x293A5F28646E6573, 0xE800000000000000, sub_2544E8780, v4, &type metadata for ResetTasksResponse);
}

uint64_t sub_2544E25D0()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2544E2774;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_2544E26EC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2544E26EC()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  return MEMORY[0x270FA2498](sub_2544E2750, v1, v2);
}

uint64_t sub_2544E2750()
{
  **(unsigned char **)(v0 + 64) = *(unsigned char *)(v0 + 145);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2544E2774()
{
  swift_unknownObjectRelease();
  swift_task_dealloc();
  v0[17] = v0[16];
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  return MEMORY[0x270FA2498](sub_2544E27E8, v1, v2);
}

uint64_t sub_2544E27E8()
{
  uint64_t v1 = *(void **)(v0 + 136);
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = (void **)(v0 + 48);
  id v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3870);
  int v4 = swift_dynamicCast();
  uint64_t v5 = *(void **)(v0 + 136);
  if (v4)
  {

    int v6 = *(unsigned __int8 *)(v0 + 144);
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_254526E00();
    __swift_project_value_buffer(v7, (uint64_t)qword_26B267340);
    uint64_t v8 = sub_254526DE0();
    os_log_type_t v9 = sub_254527410();
    if (os_log_type_enabled(v8, v9))
    {
      int v34 = v6;
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 138412290;
      sub_2544D55EC();
      swift_allocError();
      *uint64_t v12 = v34;
      uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 40) = v13;
      sub_254527500();
      *uint64_t v11 = v13;
      _os_log_impl(&dword_254486000, v8, v9, "MLHostClient connection error: %@", v10, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      swift_arrayDestroy();
      MEMORY[0x25A27C9E0](v11, -1, -1);
      uint64_t v14 = v10;
      int v6 = v34;
      MEMORY[0x25A27C9E0](v14, -1, -1);
    }

    if (v6 == 2)
    {
      os_log_type_t v15 = sub_254526DE0();
      os_log_type_t v16 = sub_254527420();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v17 = 0;
        _os_log_impl(&dword_254486000, v15, v16, "MLHostd couldn't handle client request. Please make sure to have the appropriate entitlements.", v17, 2u);
        MEMORY[0x25A27C9E0](v17, -1, -1);
      }
    }
    sub_2544D55EC();
    swift_allocError();
    *id v18 = v6;
    swift_willThrow();
    id v19 = *(void **)(v0 + 32);
  }
  else
  {

    *(void *)(v0 + 48) = v5;
    id v20 = v5;
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_willThrow();
      goto LABEL_20;
    }

    uint64_t v22 = *(void *)(v0 + 16);
    uint64_t v21 = *(void *)(v0 + 24);
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_254526E00();
    __swift_project_value_buffer(v23, (uint64_t)qword_26B267340);
    swift_bridgeObjectRetain_n();
    os_log_type_t v24 = sub_254526DE0();
    os_log_type_t v25 = sub_254527410();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = v22;
      unint64_t v27 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 138412290;
      sub_2544E831C();
      swift_allocError();
      *uint64_t v28 = v35;
      v28[1] = v21;
      swift_bridgeObjectRetain();
      uint64_t v29 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 56) = v29;
      uint64_t v2 = (void **)(v0 + 48);
      sub_254527500();
      *unint64_t v27 = v29;
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_254486000, v24, v25, "MLHostClient remote error: %@", v26, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      swift_arrayDestroy();
      uint64_t v30 = v27;
      uint64_t v22 = v35;
      MEMORY[0x25A27C9E0](v30, -1, -1);
      MEMORY[0x25A27C9E0](v26, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_2544E831C();
    swift_allocError();
    *unint64_t v31 = v22;
    v31[1] = v21;
    swift_willThrow();
    id v19 = *v2;
  }

LABEL_20:
  unint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
  return v32();
}

uint64_t sub_2544E2CE8(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 153) = a2;
  *(void *)(v3 + 72) = a1;
  *(void *)(v3 + 80) = v2;
  type metadata accessor for MLHostClient();
  sub_2544E89F4((unint64_t *)&unk_269DF42C8, v4, (void (*)(uint64_t))type metadata accessor for MLHostClient);
  uint64_t v6 = sub_2545272C0();
  *(void *)(v3 + 88) = v6;
  *(void *)(v3 + 96) = v5;
  return MEMORY[0x270FA2498](sub_2544E2DA0, v6, v5);
}

uint64_t sub_2544E2DA0()
{
  *(void *)(v0 + 104) = *(void *)(*(void *)(v0 + 80) + 40);
  return MEMORY[0x270FA2498](sub_2544E2DC8, 0, 0);
}

uint64_t sub_2544E2DC8()
{
  uint64_t v1 = sub_2544D87F8(*(unsigned char *)(v0 + 153), 0, (void (*)(uint64_t))sub_2544C75F0, (uint64_t)&type metadata for CleanTasksRequest, &qword_269DF44C8);
  *(void *)(v0 + 112) = v1;
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 120) = v4;
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v5;
  void *v5 = v0;
  v5[1] = sub_2544E2F48;
  return MEMORY[0x270FA2360](v0 + 48, 0, 0, 0x293A5F28646E6573, 0xE800000000000000, sub_2544E86FC, v4, &type metadata for CleanTasksResponse);
}

uint64_t sub_2544E2F48()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2544E30EC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_2544E3064;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2544E3064()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 96);
  return MEMORY[0x270FA2498](sub_2544E30C8, v1, v2);
}

uint64_t sub_2544E30C8()
{
  **(void **)(v0 + 72) = *(void *)(v0 + 48);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2544E30EC()
{
  swift_unknownObjectRelease();
  swift_task_dealloc();
  v0[18] = v0[17];
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  return MEMORY[0x270FA2498](sub_2544E3160, v1, v2);
}

uint64_t sub_2544E3160()
{
  uint64_t v1 = *(void **)(v0 + 144);
  *(void *)(v0 + 32) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3870);
  int v3 = swift_dynamicCast();
  uint64_t v4 = *(void **)(v0 + 144);
  if (v3)
  {

    int v5 = *(unsigned __int8 *)(v0 + 152);
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_254526E00();
    __swift_project_value_buffer(v6, (uint64_t)qword_26B267340);
    uint64_t v7 = sub_254526DE0();
    os_log_type_t v8 = sub_254527410();
    if (os_log_type_enabled(v7, v8))
    {
      int v33 = v5;
      os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v9 = 138412290;
      sub_2544D55EC();
      swift_allocError();
      *uint64_t v11 = v33;
      uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 64) = v12;
      sub_254527500();
      *uint64_t v10 = v12;
      _os_log_impl(&dword_254486000, v7, v8, "MLHostClient connection error: %@", v9, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      swift_arrayDestroy();
      MEMORY[0x25A27C9E0](v10, -1, -1);
      uint64_t v13 = v9;
      int v5 = v33;
      MEMORY[0x25A27C9E0](v13, -1, -1);
    }

    if (v5 == 2)
    {
      uint64_t v14 = sub_254526DE0();
      os_log_type_t v15 = sub_254527420();
      if (os_log_type_enabled(v14, v15))
      {
        os_log_type_t v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v16 = 0;
        _os_log_impl(&dword_254486000, v14, v15, "MLHostd couldn't handle client request. Please make sure to have the appropriate entitlements.", v16, 2u);
        MEMORY[0x25A27C9E0](v16, -1, -1);
      }
    }
    sub_2544D55EC();
    swift_allocError();
    *uint64_t v17 = v5;
    swift_willThrow();
    id v18 = *(void **)(v0 + 32);
  }
  else
  {

    *(void *)(v0 + 40) = v4;
    id v19 = v4;
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_willThrow();
      goto LABEL_20;
    }

    uint64_t v21 = *(void *)(v0 + 16);
    uint64_t v20 = *(void *)(v0 + 24);
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_254526E00();
    __swift_project_value_buffer(v22, (uint64_t)qword_26B267340);
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_254526DE0();
    os_log_type_t v24 = sub_254527410();
    if (os_log_type_enabled(v23, v24))
    {
      os_log_type_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = v21;
      uint64_t v26 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v25 = 138412290;
      sub_2544E831C();
      swift_allocError();
      *unint64_t v27 = v34;
      v27[1] = v20;
      swift_bridgeObjectRetain();
      uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 56) = v28;
      sub_254527500();
      void *v26 = v28;
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_254486000, v23, v24, "MLHostClient remote error: %@", v25, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      swift_arrayDestroy();
      uint64_t v29 = v26;
      uint64_t v21 = v34;
      MEMORY[0x25A27C9E0](v29, -1, -1);
      MEMORY[0x25A27C9E0](v25, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_2544E831C();
    swift_allocError();
    *uint64_t v30 = v21;
    v30[1] = v20;
    swift_willThrow();
    id v18 = *(void **)(v0 + 40);
  }

LABEL_20:
  unint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_2544E365C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  type metadata accessor for MLHostClient();
  sub_2544E89F4((unint64_t *)&unk_269DF42C8, v5, (void (*)(uint64_t))type metadata accessor for MLHostClient);
  uint64_t v7 = sub_2545272C0();
  v4[12] = v7;
  v4[13] = v6;
  return MEMORY[0x270FA2498](sub_2544E3714, v7, v6);
}

uint64_t sub_2544E3714()
{
  *(void *)(v0 + 112) = *(void *)(*(void *)(v0 + 88) + 40);
  return MEMORY[0x270FA2498](sub_2544E373C, 0, 0);
}

uint64_t sub_2544E373C()
{
  uint64_t v1 = sub_2544D8E80(v0[9], v0[10], 0, (void (*)(uint64_t))sub_2544C77F0, (uint64_t)&type metadata for GetOnDemandTaskRequest, &qword_269DF44A0);
  v0[15] = v1;
  uint64_t v2 = v1;
  uint64_t v3 = v0[14];
  uint64_t v4 = swift_task_alloc();
  v0[16] = v4;
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[17] = (uint64_t)v5;
  void *v5 = v0;
  v5[1] = sub_2544E38BC;
  return MEMORY[0x270FA2360](v0 + 20, 0, 0, 0x293A5F28646E6573, 0xE800000000000000, sub_2544E8600, v4, &type metadata for GetOnDemandTaskRequestResponse);
}

uint64_t sub_2544E38BC()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2544E3A60;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_2544E39D8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2544E39D8()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 104);
  return MEMORY[0x270FA2498](sub_2544E3A3C, v1, v2);
}

uint64_t sub_2544E3A3C()
{
  **(_WORD **)(v0 + 64) = *(_WORD *)(v0 + 160);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2544E3A60()
{
  swift_unknownObjectRelease();
  swift_task_dealloc();
  v0[19] = v0[18];
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[13];
  return MEMORY[0x270FA2498](sub_2544E3AD4, v1, v2);
}

uint64_t sub_2544E3AD4()
{
  uint64_t v1 = *(void **)(v0 + 152);
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = (void **)(v0 + 48);
  id v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3870);
  int v4 = swift_dynamicCast();
  uint64_t v5 = *(void **)(v0 + 152);
  if (v4)
  {

    int v6 = *(unsigned __int8 *)(v0 + 162);
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_254526E00();
    __swift_project_value_buffer(v7, (uint64_t)qword_26B267340);
    os_log_type_t v8 = sub_254526DE0();
    os_log_type_t v9 = sub_254527410();
    if (os_log_type_enabled(v8, v9))
    {
      int v34 = v6;
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 138412290;
      sub_2544D55EC();
      swift_allocError();
      *uint64_t v12 = v34;
      uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 40) = v13;
      sub_254527500();
      *uint64_t v11 = v13;
      _os_log_impl(&dword_254486000, v8, v9, "MLHostClient connection error: %@", v10, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      swift_arrayDestroy();
      MEMORY[0x25A27C9E0](v11, -1, -1);
      uint64_t v14 = v10;
      int v6 = v34;
      MEMORY[0x25A27C9E0](v14, -1, -1);
    }

    if (v6 == 2)
    {
      os_log_type_t v15 = sub_254526DE0();
      os_log_type_t v16 = sub_254527420();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v17 = 0;
        _os_log_impl(&dword_254486000, v15, v16, "MLHostd couldn't handle client request. Please make sure to have the appropriate entitlements.", v17, 2u);
        MEMORY[0x25A27C9E0](v17, -1, -1);
      }
    }
    sub_2544D55EC();
    swift_allocError();
    *id v18 = v6;
    swift_willThrow();
    id v19 = *(void **)(v0 + 32);
  }
  else
  {

    *(void *)(v0 + 48) = v5;
    id v20 = v5;
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_willThrow();
      goto LABEL_20;
    }

    uint64_t v22 = *(void *)(v0 + 16);
    uint64_t v21 = *(void *)(v0 + 24);
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_254526E00();
    __swift_project_value_buffer(v23, (uint64_t)qword_26B267340);
    swift_bridgeObjectRetain_n();
    os_log_type_t v24 = sub_254526DE0();
    os_log_type_t v25 = sub_254527410();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = v22;
      unint64_t v27 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 138412290;
      sub_2544E831C();
      swift_allocError();
      *uint64_t v28 = v35;
      v28[1] = v21;
      swift_bridgeObjectRetain();
      uint64_t v29 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 56) = v29;
      uint64_t v2 = (void **)(v0 + 48);
      sub_254527500();
      *unint64_t v27 = v29;
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_254486000, v24, v25, "MLHostClient remote error: %@", v26, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      swift_arrayDestroy();
      uint64_t v30 = v27;
      uint64_t v22 = v35;
      MEMORY[0x25A27C9E0](v30, -1, -1);
      MEMORY[0x25A27C9E0](v26, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_2544E831C();
    swift_allocError();
    *unint64_t v31 = v22;
    v31[1] = v21;
    swift_willThrow();
    id v19 = *v2;
  }

LABEL_20:
  unint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
  return v32();
}

uint64_t sub_2544E3FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[11] = a3;
  v4[12] = v3;
  v4[9] = a1;
  v4[10] = a2;
  type metadata accessor for MLHostClient();
  sub_2544E89F4((unint64_t *)&unk_269DF42C8, v5, (void (*)(uint64_t))type metadata accessor for MLHostClient);
  uint64_t v7 = sub_2545272C0();
  v4[13] = v7;
  v4[14] = v6;
  return MEMORY[0x270FA2498](sub_2544E408C, v7, v6);
}

uint64_t sub_2544E408C()
{
  *(void *)(v0 + 120) = *(void *)(*(void *)(v0 + 96) + 40);
  return MEMORY[0x270FA2498](sub_2544E40B4, 0, 0);
}

uint64_t sub_2544E40B4()
{
  uint64_t v1 = sub_2544D8B40(v0[10], v0[11], 0);
  v0[16] = v1;
  uint64_t v2 = v1;
  uint64_t v3 = v0[15];
  uint64_t v4 = swift_task_alloc();
  v0[17] = v4;
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[18] = (uint64_t)v5;
  void *v5 = v0;
  v5[1] = sub_2544E4210;
  return MEMORY[0x270FA2360](v0 + 6, 0, 0, 0x293A5F28646E6573, 0xE800000000000000, sub_2544E84E4, v4, &type metadata for ListExtensionsResponse);
}

uint64_t sub_2544E4210()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2544E4390;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_2544E432C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2544E432C()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  return MEMORY[0x270FA2498](sub_2544E30C8, v1, v2);
}

uint64_t sub_2544E4390()
{
  swift_unknownObjectRelease();
  swift_task_dealloc();
  v0[20] = v0[19];
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  return MEMORY[0x270FA2498](sub_2544E4404, v1, v2);
}

uint64_t sub_2544E4404()
{
  uint64_t v1 = *(void **)(v0 + 160);
  *(void *)(v0 + 32) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3870);
  int v3 = swift_dynamicCast();
  uint64_t v4 = *(void **)(v0 + 160);
  if (v3)
  {

    int v5 = *(unsigned __int8 *)(v0 + 168);
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_254526E00();
    __swift_project_value_buffer(v6, (uint64_t)qword_26B267340);
    uint64_t v7 = sub_254526DE0();
    os_log_type_t v8 = sub_254527410();
    if (os_log_type_enabled(v7, v8))
    {
      int v33 = v5;
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138412290;
      sub_2544D55EC();
      swift_allocError();
      *uint64_t v11 = v33;
      uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 64) = v12;
      sub_254527500();
      *uint64_t v10 = v12;
      _os_log_impl(&dword_254486000, v7, v8, "MLHostClient connection error: %@", v9, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      swift_arrayDestroy();
      MEMORY[0x25A27C9E0](v10, -1, -1);
      uint64_t v13 = v9;
      int v5 = v33;
      MEMORY[0x25A27C9E0](v13, -1, -1);
    }

    if (v5 == 2)
    {
      uint64_t v14 = sub_254526DE0();
      os_log_type_t v15 = sub_254527420();
      if (os_log_type_enabled(v14, v15))
      {
        os_log_type_t v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v16 = 0;
        _os_log_impl(&dword_254486000, v14, v15, "MLHostd couldn't handle client request. Please make sure to have the appropriate entitlements.", v16, 2u);
        MEMORY[0x25A27C9E0](v16, -1, -1);
      }
    }
    sub_2544D55EC();
    swift_allocError();
    *uint64_t v17 = v5;
    swift_willThrow();
    id v18 = *(void **)(v0 + 32);
  }
  else
  {

    *(void *)(v0 + 40) = v4;
    id v19 = v4;
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_willThrow();
      goto LABEL_20;
    }

    uint64_t v21 = *(void *)(v0 + 16);
    uint64_t v20 = *(void *)(v0 + 24);
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_254526E00();
    __swift_project_value_buffer(v22, (uint64_t)qword_26B267340);
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_254526DE0();
    os_log_type_t v24 = sub_254527410();
    if (os_log_type_enabled(v23, v24))
    {
      os_log_type_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = v21;
      uint64_t v26 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v25 = 138412290;
      sub_2544E831C();
      swift_allocError();
      *unint64_t v27 = v34;
      v27[1] = v20;
      swift_bridgeObjectRetain();
      uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 56) = v28;
      sub_254527500();
      void *v26 = v28;
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_254486000, v23, v24, "MLHostClient remote error: %@", v25, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      swift_arrayDestroy();
      uint64_t v29 = v26;
      uint64_t v21 = v34;
      MEMORY[0x25A27C9E0](v29, -1, -1);
      MEMORY[0x25A27C9E0](v25, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_2544E831C();
    swift_allocError();
    *uint64_t v30 = v21;
    v30[1] = v20;
    swift_willThrow();
    id v18 = *(void **)(v0 + 40);
  }

LABEL_20:
  unint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_2544E4900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[18] = a3;
  v4[19] = v3;
  v4[16] = a1;
  v4[17] = a2;
  type metadata accessor for MLHostClient();
  sub_2544E89F4((unint64_t *)&unk_269DF42C8, v5, (void (*)(uint64_t))type metadata accessor for MLHostClient);
  uint64_t v7 = sub_2545272C0();
  v4[20] = v7;
  v4[21] = v6;
  return MEMORY[0x270FA2498](sub_2544E49B8, v7, v6);
}

uint64_t sub_2544E49B8()
{
  *(void *)(v0 + 176) = *(void *)(*(void *)(v0 + 152) + 40);
  return MEMORY[0x270FA2498](sub_2544E49E0, 0, 0);
}

uint64_t sub_2544E49E0()
{
  uint64_t v1 = sub_2544D8E80(v0[17], v0[18], 0, (void (*)(uint64_t))sub_2544C7D40, (uint64_t)&type metadata for GetExtensionRequest, &qword_269DF4450);
  v0[23] = v1;
  uint64_t v2 = v1;
  uint64_t v3 = v0[22];
  uint64_t v4 = swift_task_alloc();
  v0[24] = v4;
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[25] = (uint64_t)v5;
  void *v5 = v0;
  v5[1] = sub_2544E4B60;
  return MEMORY[0x270FA2360](v0 + 2, 0, 0, 0x293A5F28646E6573, 0xE800000000000000, sub_2544E8370, v4, &type metadata for GetExtensionResponse);
}

uint64_t sub_2544E4B60()
{
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2544E4D14;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_2544E4C7C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2544E4C7C()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  return MEMORY[0x270FA2498](sub_2544E4CE0, v1, v2);
}

uint64_t sub_2544E4CE0()
{
  uint64_t v1 = *(void *)(v0 + 128);
  long long v2 = *(_OWORD *)(v0 + 32);
  long long v3 = *(_OWORD *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v5 = *(void *)(v0 + 72);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 16) = v2;
  *(_OWORD *)(v1 + 32) = v3;
  *(void *)(v1 + 48) = v4;
  *(void *)(v1 + 56) = v5;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2544E4D14()
{
  swift_unknownObjectRelease();
  swift_task_dealloc();
  v0[27] = v0[26];
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[21];
  return MEMORY[0x270FA2498](sub_2544E4D88, v1, v2);
}

uint64_t sub_2544E4D88()
{
  uint64_t v1 = *(void **)(v0 + 216);
  *(void *)(v0 + 104) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3870);
  int v3 = swift_dynamicCast();
  uint64_t v4 = *(void **)(v0 + 216);
  if (v3)
  {

    int v5 = *(unsigned __int8 *)(v0 + 224);
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_254526E00();
    __swift_project_value_buffer(v6, (uint64_t)qword_26B267340);
    uint64_t v7 = sub_254526DE0();
    os_log_type_t v8 = sub_254527410();
    if (os_log_type_enabled(v7, v8))
    {
      int v33 = v5;
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138412290;
      sub_2544D55EC();
      swift_allocError();
      *uint64_t v11 = v33;
      uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 120) = v12;
      sub_254527500();
      *uint64_t v10 = v12;
      _os_log_impl(&dword_254486000, v7, v8, "MLHostClient connection error: %@", v9, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      swift_arrayDestroy();
      MEMORY[0x25A27C9E0](v10, -1, -1);
      uint64_t v13 = v9;
      int v5 = v33;
      MEMORY[0x25A27C9E0](v13, -1, -1);
    }

    if (v5 == 2)
    {
      uint64_t v14 = sub_254526DE0();
      os_log_type_t v15 = sub_254527420();
      if (os_log_type_enabled(v14, v15))
      {
        os_log_type_t v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v16 = 0;
        _os_log_impl(&dword_254486000, v14, v15, "MLHostd couldn't handle client request. Please make sure to have the appropriate entitlements.", v16, 2u);
        MEMORY[0x25A27C9E0](v16, -1, -1);
      }
    }
    sub_2544D55EC();
    swift_allocError();
    *uint64_t v17 = v5;
    swift_willThrow();
    id v18 = *(void **)(v0 + 104);
  }
  else
  {

    *(void *)(v0 + 96) = v4;
    id v19 = v4;
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_willThrow();
      goto LABEL_20;
    }

    uint64_t v21 = *(void *)(v0 + 80);
    uint64_t v20 = *(void *)(v0 + 88);
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_254526E00();
    __swift_project_value_buffer(v22, (uint64_t)qword_26B267340);
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_254526DE0();
    os_log_type_t v24 = sub_254527410();
    if (os_log_type_enabled(v23, v24))
    {
      os_log_type_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = v21;
      uint64_t v26 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v25 = 138412290;
      sub_2544E831C();
      swift_allocError();
      *unint64_t v27 = v34;
      v27[1] = v20;
      swift_bridgeObjectRetain();
      uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 112) = v28;
      sub_254527500();
      void *v26 = v28;
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_254486000, v23, v24, "MLHostClient remote error: %@", v25, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      swift_arrayDestroy();
      uint64_t v29 = v26;
      uint64_t v21 = v34;
      MEMORY[0x25A27C9E0](v29, -1, -1);
      MEMORY[0x25A27C9E0](v25, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_2544E831C();
    swift_allocError();
    *uint64_t v30 = v21;
    v30[1] = v20;
    swift_willThrow();
    id v18 = *(void **)(v0 + 96);
  }

LABEL_20:
  unint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_2544E5284(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = v1;
  int v3 = (void *)swift_task_alloc();
  v2[10] = v3;
  *int v3 = v2;
  v3[1] = sub_2544E5324;
  return sub_2544DEC1C((uint64_t)(v2 + 2), 1);
}

uint64_t sub_2544E5324()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  type metadata accessor for MLHostClient();
  sub_2544E89F4((unint64_t *)&unk_269DF42C8, v2, (void (*)(uint64_t))type metadata accessor for MLHostClient);
  uint64_t v4 = sub_2545272C0();
  if (v0) {
    uint64_t v5 = sub_2544E54D0;
  }
  else {
    uint64_t v5 = sub_2544E54A4;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_2544E54A4()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 24);
  long long v3 = *(_OWORD *)(v0 + 32);
  long long v4 = *(_OWORD *)(v0 + 48);
  *(void *)uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v1 + 8) = v2;
  *(_OWORD *)(v1 + 16) = v3;
  *(_OWORD *)(v1 + 32) = v4;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2544E54D0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for MLHostClient()
{
  return self;
}

uint64_t sub_2544E550C(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  *(void *)(v2 + 88) = v1;
  *(void *)(v2 + 96) = v3;
  *(void *)(v2 + 104) = v4;
  long long v5 = *((_OWORD *)a1 + 2);
  *(_OWORD *)(v2 + 112) = *((_OWORD *)a1 + 1);
  *(_OWORD *)(v2 + 128) = v5;
  type metadata accessor for MLHostClient();
  sub_2544E89F4((unint64_t *)&unk_269DF42C8, v6, (void (*)(uint64_t))type metadata accessor for MLHostClient);
  uint64_t v8 = sub_2545272C0();
  *(void *)(v2 + 144) = v8;
  *(void *)(v2 + 152) = v7;
  return MEMORY[0x270FA2498](sub_2544E55D0, v8, v7);
}

uint64_t sub_2544E55D0()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 112);
  *(void *)(v0 + 16) = *(void *)(v0 + 96);
  *(void *)(v0 + 24) = v2;
  *(void *)(v0 + 32) = v3;
  *(_OWORD *)(v0 + 40) = *(_OWORD *)(v0 + 120);
  *(void *)(v0 + 56) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_2544E56C0;
  return sub_2544DF598(v0 + 64, v0 + 16);
}

uint64_t sub_2544E56C0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 152);
  uint64_t v4 = *(void *)(v2 + 144);
  if (v0) {
    long long v5 = sub_2544E5904;
  }
  else {
    long long v5 = sub_2544E5854;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_2544E5854()
{
  uint64_t v1 = *(void *)(v0 + 80);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 72);
    sub_2544E5920();
    swift_allocError();
    *uint64_t v3 = v2;
    v3[1] = v1;
    swift_willThrow();
    uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = *(unsigned __int8 *)(v0 + 64);
    uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  }
  return v4(v5);
}

uint64_t sub_2544E5904()
{
  return (*(uint64_t (**)(void))(v0 + 8))(0);
}

unint64_t sub_2544E5920()
{
  unint64_t result = qword_269DF42E0;
  if (!qword_269DF42E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF42E0);
  }
  return result;
}

uint64_t sub_2544E5974(char a1)
{
  *(void *)(v2 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_2544E5A20;
  return sub_2544DFEF0(v2 + 16, a1);
}

uint64_t sub_2544E5A20()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  type metadata accessor for MLHostClient();
  sub_2544E89F4((unint64_t *)&unk_269DF42C8, v2, (void (*)(uint64_t))type metadata accessor for MLHostClient);
  uint64_t v4 = sub_2545272C0();
  if (v0) {
    uint64_t v5 = sub_2544E8D50;
  }
  else {
    uint64_t v5 = sub_2544E8DC4;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_2544E5BA0(char a1)
{
  *(void *)(v2 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_2544E5C4C;
  return sub_2544E0344(v2 + 40, a1);
}

uint64_t sub_2544E5C4C()
{
  *(void *)(*(void *)v1 + 32) = v0;
  swift_task_dealloc();
  type metadata accessor for MLHostClient();
  sub_2544E89F4((unint64_t *)&unk_269DF42C8, v2, (void (*)(uint64_t))type metadata accessor for MLHostClient);
  uint64_t v4 = sub_2545272C0();
  if (v0) {
    uint64_t v5 = sub_2544E8D54;
  }
  else {
    uint64_t v5 = sub_2544E8DC8;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_2544E5DCC()
{
  *(void *)(v1 + 24) = v0;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 32) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_2544E5A20;
  return sub_2544E0798(v1 + 16, 0, 1);
}

uint64_t sub_2544E5E70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  type metadata accessor for GetTaskResponse(0);
  v4[6] = swift_task_alloc();
  type metadata accessor for MLHostClient();
  sub_2544E89F4((unint64_t *)&unk_269DF42C8, v5, (void (*)(uint64_t))type metadata accessor for MLHostClient);
  uint64_t v7 = sub_2545272C0();
  v4[7] = v7;
  v4[8] = v6;
  return MEMORY[0x270FA2498](sub_2544E5F54, v7, v6);
}

uint64_t sub_2544E5F54()
{
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[9] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2544E5FF8;
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  return sub_2544E10D0(v2, v3, v4);
}

uint64_t sub_2544E5FF8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v5 = sub_2544E61C4;
  }
  else {
    uint64_t v5 = sub_2544E6150;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_2544E6150()
{
  sub_2544E6228(v0[6], v0[2]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_2544E61C4()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2544E6228(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MLHostTask(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2544E628C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for AddTaskRequest(0);
  v2[4] = swift_task_alloc();
  type metadata accessor for MLHostClient();
  sub_2544E89F4((unint64_t *)&unk_269DF42C8, v3, (void (*)(uint64_t))type metadata accessor for MLHostClient);
  uint64_t v5 = sub_2545272C0();
  v2[5] = v5;
  v2[6] = v4;
  return MEMORY[0x270FA2498](sub_2544E636C, v5, v4);
}

uint64_t sub_2544E636C()
{
  sub_2544E892C(v0[2], v0[4], type metadata accessor for TaskDefinition);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = (uint64_t)v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2544E6428;
  uint64_t v2 = v0[4];
  return sub_2544E1A14((uint64_t)(v0 + 9), v2);
}

uint64_t sub_2544E6428()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 32);
  *(void *)(*v1 + 64) = v0;
  swift_task_dealloc();
  sub_2544E8994(v3, type metadata accessor for AddTaskRequest);
  uint64_t v4 = *(void *)(v2 + 48);
  uint64_t v5 = *(void *)(v2 + 40);
  if (v0) {
    uint64_t v6 = sub_2544E6600;
  }
  else {
    uint64_t v6 = sub_2544E6594;
  }
  return MEMORY[0x270FA2498](v6, v5, v4);
}

uint64_t sub_2544E6594()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 72);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_2544E6600()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_2544E6668(char a1)
{
  *(void *)(v2 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_2544E6714;
  return sub_2544E2370(v2 + 40, a1);
}

uint64_t sub_2544E6714()
{
  *(void *)(*(void *)v1 + 32) = v0;
  swift_task_dealloc();
  type metadata accessor for MLHostClient();
  sub_2544E89F4((unint64_t *)&unk_269DF42C8, v2, (void (*)(uint64_t))type metadata accessor for MLHostClient);
  uint64_t v4 = sub_2545272C0();
  if (v0) {
    uint64_t v5 = sub_2544E68B0;
  }
  else {
    uint64_t v5 = sub_2544E6894;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_2544E6894()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_2544E68B0()
{
  return (*(uint64_t (**)(void))(v0 + 8))(0);
}

uint64_t sub_2544E68CC()
{
  *(void *)(v1 + 24) = v0;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 32) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_2544E696C;
  return sub_2544E2CE8(v1 + 16, 1);
}

uint64_t sub_2544E696C()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  type metadata accessor for MLHostClient();
  sub_2544E89F4((unint64_t *)&unk_269DF42C8, v2, (void (*)(uint64_t))type metadata accessor for MLHostClient);
  uint64_t v4 = sub_2545272C0();
  if (v0) {
    uint64_t v5 = sub_2544E6B08;
  }
  else {
    uint64_t v5 = sub_2544E6AEC;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_2544E6AEC()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_2544E6B08()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2544E6B20(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  type metadata accessor for MLHostClient();
  sub_2544E89F4((unint64_t *)&unk_269DF42C8, v4, (void (*)(uint64_t))type metadata accessor for MLHostClient);
  uint64_t v6 = sub_2545272C0();
  v3[5] = v6;
  v3[6] = v5;
  return MEMORY[0x270FA2498](sub_2544E6BD8, v6, v5);
}

uint64_t sub_2544E6BD8()
{
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2544E6C8C;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[2];
  return sub_2544E365C((uint64_t)(v0 + 9), v3, v2);
}

uint64_t sub_2544E6C8C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 64) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v2 + 40);
  if (v0) {
    uint64_t v5 = sub_2544E6F40;
  }
  else {
    uint64_t v5 = sub_2544E6DE4;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_2544E6DE4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2544E6F40()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2544E6F58()
{
  *(void *)(v1 + 24) = v0;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 32) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_2544E5A20;
  return sub_2544E3FD4(v1 + 16, 0, 0);
}

uint64_t sub_2544E6FFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[12] = a3;
  v4[13] = v3;
  v4[10] = a1;
  v4[11] = a2;
  type metadata accessor for MLHostClient();
  sub_2544E89F4((unint64_t *)&unk_269DF42C8, v5, (void (*)(uint64_t))type metadata accessor for MLHostClient);
  uint64_t v7 = sub_2545272C0();
  v4[14] = v7;
  v4[15] = v6;
  return MEMORY[0x270FA2498](sub_2544E70B4, v7, v6);
}

uint64_t sub_2544E70B4()
{
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[16] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2544E7168;
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[11];
  return sub_2544E4900((uint64_t)(v0 + 2), v3, v2);
}

uint64_t sub_2544E7168()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 120);
  uint64_t v4 = *(void *)(v2 + 112);
  if (v0) {
    uint64_t v5 = sub_2544E72F4;
  }
  else {
    uint64_t v5 = sub_2544E72C0;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_2544E72C0()
{
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v1 = *(void *)(v0 + 80);
  long long v3 = *(_OWORD *)(v0 + 32);
  long long v4 = *(_OWORD *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 64);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 16) = v3;
  *(_OWORD *)(v1 + 32) = v4;
  *(void *)(v1 + 48) = v5;
  *(void *)(v1 + 56) = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2544E72F4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t destroy for MLHostClientError(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s20LighthouseBackground17MLHostClientErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for MLHostClientError(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MLHostClientError(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MLHostClientError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MLHostClientError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_2544E752C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_2544E7544(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for MLHostClientError()
{
  return &type metadata for MLHostClientError;
}

uint64_t method lookup function for MLHostClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MLHostClient);
}

uint64_t dispatch thunk of MLHostClient.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of MLHostClient.unownedExecutor.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of MLHostClient.getConfig()(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 128) + **(int **)(*(void *)v1 + 128));
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *unsigned int v4 = v2;
  v4[1] = sub_2544D7A5C;
  return v6(a1);
}

uint64_t dispatch thunk of MLHostClient.setConfig(config:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 136) + **(int **)(*(void *)v1 + 136));
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *unsigned int v4 = v2;
  v4[1] = sub_2544E8DC0;
  return v6(a1);
}

uint64_t dispatch thunk of MLHostClient.getNotificationsConfig(registeredOnly:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 144) + **(int **)(*(void *)v1 + 144));
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *unsigned int v4 = v2;
  v4[1] = sub_2544E8DC0;
  return v6(a1);
}

uint64_t dispatch thunk of MLHostClient.resetNotifications(reload:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 152) + **(int **)(*(void *)v1 + 152));
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *unsigned int v4 = v2;
  v4[1] = sub_2544E8DC0;
  return v6(a1);
}

uint64_t dispatch thunk of MLHostClient.getTasks()()
{
  unsigned int v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 160) + **(int **)(*(void *)v0 + 160));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_2544E8DC0;
  return v4();
}

uint64_t dispatch thunk of MLHostClient.getTask(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v3 + 168)
                                                          + **(int **)(*(void *)v3 + 168));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_2544D7A5C;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of MLHostClient.addTask(taskDefinition:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 176) + **(int **)(*(void *)v1 + 176));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_2544E8DC0;
  return v6(a1);
}

uint64_t dispatch thunk of MLHostClient.resetTasks(reload:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 184) + **(int **)(*(void *)v1 + 184));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_2544D74D0;
  return v6(a1);
}

uint64_t dispatch thunk of MLHostClient.cleanTasks()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 192) + **(int **)(*(void *)v0 + 192));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_2544D74D0;
  return v4();
}

uint64_t dispatch thunk of MLHostClient.runOnDemandTask(taskName:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 200) + **(int **)(*(void *)v2 + 200));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_2544E7FF4;
  return v8(a1, a2);
}

uint64_t sub_2544E7FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *v3;
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  return v7(a1, a2, a3);
}

uint64_t dispatch thunk of MLHostClient.getExtensions()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 208) + **(int **)(*(void *)v0 + 208));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_2544E8DC0;
  return v4();
}

uint64_t dispatch thunk of MLHostClient.getExtension(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v3 + 216)
                                                          + **(int **)(*(void *)v3 + 216));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_2544D59D8;
  return v10(a1, a2, a3);
}

unint64_t sub_2544E831C()
{
  unint64_t result = qword_269DF43F0;
  if (!qword_269DF43F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF43F0);
  }
  return result;
}

void sub_2544E8370(uint64_t a1)
{
  sub_2544D91C8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), &qword_269DF4408, (uint64_t)&unk_2703D9478, (uint64_t)sub_2544E83C4, (uint64_t)&block_descriptor_46);
}

uint64_t sub_2544E83B8()
{
  return objectdestroy_42Tm(&qword_269DF4408);
}

uint64_t sub_2544E83C4(uint64_t a1)
{
  return sub_2544E8674(a1, &qword_269DF4408, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2544D981C);
}

unint64_t sub_2544E83E4()
{
  unint64_t result = qword_269DF4410;
  if (!qword_269DF4410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4410);
  }
  return result;
}

unint64_t sub_2544E8438()
{
  unint64_t result = qword_269DF4420;
  if (!qword_269DF4420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4420);
  }
  return result;
}

uint64_t sub_2544E848C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

void sub_2544E84E4(uint64_t a1)
{
  sub_2544D91C8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), &qword_269DF4458, (uint64_t)&unk_2703D94C8, (uint64_t)sub_2544E8538, (uint64_t)&block_descriptor_54);
}

uint64_t sub_2544E852C()
{
  return objectdestroy_42Tm(&qword_269DF4458);
}

uint64_t sub_2544E8538(void *a1)
{
  return sub_2544E8568(a1, &qword_269DF4458, (uint64_t)&type metadata for ListExtensionsResponse, (uint64_t *)&unk_269DF4460, (void (*)(void))sub_2544C7BC0);
}

uint64_t sub_2544E8568(void *a1, uint64_t *a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v11 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  return sub_2544D9788(a1, *(void *)(v5 + 16), v5 + ((*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), a3, a4, a5, a2);
}

void sub_2544E8600(uint64_t a1)
{
  sub_2544D91C8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), &qword_269DF4480, (uint64_t)&unk_2703D9518, (uint64_t)sub_2544E8654, (uint64_t)&block_descriptor_62);
}

uint64_t sub_2544E8648()
{
  return objectdestroy_42Tm(&qword_269DF4480);
}

uint64_t sub_2544E8654(uint64_t a1)
{
  return sub_2544E8674(a1, &qword_269DF4480, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2544D96FC);
}

uint64_t sub_2544E8674(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return a3(a1, v6, v7);
}

void sub_2544E86FC(uint64_t a1)
{
  sub_2544D91C8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), &qword_269DF44A8, (uint64_t)&unk_2703D9568, (uint64_t)sub_2544E8750, (uint64_t)&block_descriptor_70);
}

uint64_t sub_2544E8744()
{
  return objectdestroy_42Tm(&qword_269DF44A8);
}

uint64_t sub_2544E8750(void *a1)
{
  return sub_2544E8568(a1, &qword_269DF44A8, (uint64_t)&type metadata for CleanTasksResponse, (uint64_t *)&unk_269DF44B0, (void (*)(void))sub_2544C7670);
}

void sub_2544E8780(uint64_t a1)
{
  sub_2544D91C8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), &qword_269DF44D0, (uint64_t)&unk_2703D95B8, (uint64_t)sub_2544E87D4, (uint64_t)&block_descriptor_78);
}

uint64_t sub_2544E87C8()
{
  return objectdestroy_42Tm(&qword_269DF44D0);
}

uint64_t sub_2544E87D8(void *a1)
{
  return sub_2544D9670(a1);
}

void sub_2544E8844(uint64_t a1)
{
  sub_2544D91C8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), &qword_269DF44F8, (uint64_t)&unk_2703D9608, (uint64_t)sub_2544E8898, (uint64_t)&block_descriptor_86);
}

uint64_t sub_2544E888C()
{
  return objectdestroy_42Tm(&qword_269DF44F8);
}

uint64_t sub_2544E8898(uint64_t a1)
{
  return sub_2544E8674(a1, &qword_269DF44F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2544D95DC);
}

void sub_2544E88B8(uint64_t a1)
{
  sub_2544D91C8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), (uint64_t *)&unk_269DF4520, (uint64_t)&unk_2703D9658, (uint64_t)sub_2544E890C, (uint64_t)&block_descriptor_94);
}

uint64_t sub_2544E8900()
{
  return objectdestroy_42Tm((uint64_t *)&unk_269DF4520);
}

uint64_t sub_2544E890C(uint64_t a1)
{
  return sub_2544E8674(a1, (uint64_t *)&unk_269DF4520, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2544D94A8);
}

uint64_t sub_2544E892C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2544E8994(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2544E89F4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2544E8A3C(uint64_t a1)
{
  sub_2544D91C8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), &qword_269DF4538, (uint64_t)&unk_2703D96A8, (uint64_t)sub_2544E8A90, (uint64_t)&block_descriptor_102);
}

uint64_t sub_2544E8A84()
{
  return objectdestroy_42Tm(&qword_269DF4538);
}

uint64_t sub_2544E8A90(void *a1)
{
  return sub_2544E8568(a1, &qword_269DF4538, (uint64_t)&type metadata for ListTasksResponse, (uint64_t *)&unk_269DF4540, (void (*)(void))sub_2544C6F20);
}

void sub_2544E8AC0(uint64_t a1)
{
  sub_2544D91C8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), &qword_269DF44D0, (uint64_t)&unk_2703D96F8, (uint64_t)sub_2544E87D4, (uint64_t)&block_descriptor_110);
}

uint64_t sub_2544E8B08()
{
  return objectdestroy_42Tm(&qword_269DF44D0);
}

void sub_2544E8B14(uint64_t a1)
{
  sub_2544D91C8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), &qword_269DF4570, (uint64_t)&unk_2703D9748, (uint64_t)sub_2544E8B68, (uint64_t)&block_descriptor_118);
}

uint64_t sub_2544E8B5C()
{
  return objectdestroy_42Tm(&qword_269DF4570);
}

uint64_t sub_2544E8B68(void *a1)
{
  return sub_2544E8568(a1, &qword_269DF4570, (uint64_t)&type metadata for GetNotificationsConfigResponse, &qword_269DF4578, (void (*)(void))sub_2544C83C0);
}

void sub_2544E8B98(uint64_t a1)
{
  sub_2544D91C8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), &qword_269DF4598, (uint64_t)&unk_2703D9798, (uint64_t)sub_2544E8BEC, (uint64_t)&block_descriptor_126);
}

uint64_t sub_2544E8BE0()
{
  return objectdestroy_42Tm(&qword_269DF4598);
}

uint64_t sub_2544E8BEC(uint64_t a1)
{
  return sub_2544E8674(a1, &qword_269DF4598, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2544D9414);
}

void sub_2544E8C0C(uint64_t a1)
{
  sub_2544D91C8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), &qword_269DF45C0, (uint64_t)&unk_2703D97E8, (uint64_t)sub_2544E8D28, (uint64_t)&block_descriptor_134);
}

uint64_t sub_2544E8C54()
{
  return objectdestroy_42Tm(&qword_269DF45C0);
}

uint64_t objectdestroy_42Tm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 24) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return MEMORY[0x270FA0238](v1, v6, v7);
}

uint64_t sub_2544E8D28(uint64_t a1)
{
  return sub_2544E8674(a1, &qword_269DF45C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2544D937C);
}

BOOL TaskRequest.isValid.getter()
{
  return (*(unsigned char *)(v0 + 17) & *(unsigned char *)(v0 + 41) & 1) == 0;
}

uint64_t TaskRequest.isRepeating.getter()
{
  return *(unsigned char *)(v0 + 41) & ~*(unsigned char *)(v0 + 17) & 1;
}

uint64_t TaskRequest.isNonRepeating.getter()
{
  return *(unsigned char *)(v0 + 17) & ~*(unsigned char *)(v0 + 41) & 1;
}

LighthouseBackground::TaskRequestPriority_optional __swiftcall TaskRequestPriority.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_254527790();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static TaskRequestPriority.allCases.getter()
{
  return &unk_2703D57E0;
}

uint64_t TaskRequestPriority.rawValue.getter()
{
  return *(void *)&aNone_3[8 * *v0];
}

uint64_t sub_2544E8E98(char *a1, char *a2)
{
  return sub_254490654(*a1, *a2);
}

uint64_t sub_2544E8EA4()
{
  return sub_25451A614();
}

uint64_t sub_2544E8EAC()
{
  return sub_25451AD64();
}

uint64_t sub_2544E8EB4()
{
  return sub_25451BBE8();
}

LighthouseBackground::TaskRequestPriority_optional sub_2544E8EBC(Swift::String *a1)
{
  return TaskRequestPriority.init(rawValue:)(*a1);
}

uint64_t sub_2544E8EC8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = TaskRequestPriority.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_2544E8EF0(void *a1@<X8>)
{
  *a1 = &unk_2703D5338;
}

uint64_t sub_2544E8F00()
{
  return sub_254527170();
}

uint64_t sub_2544E8F60()
{
  return sub_254527150();
}

LighthouseBackground::TaskRequestProtectionClass_optional __swiftcall TaskRequestProtectionClass.init(rawValue:)(Swift::String rawValue)
{
  return (LighthouseBackground::TaskRequestProtectionClass_optional)sub_2544E9388(v1);
}

void *static TaskRequestProtectionClass.allCases.getter()
{
  return &unk_2703D58A0;
}

uint64_t TaskRequestProtectionClass.rawValue.getter()
{
  return *(void *)&aNone_4[8 * *v0];
}

uint64_t sub_2544E8FEC(char *a1, char *a2)
{
  return sub_254490264(*a1, *a2);
}

uint64_t sub_2544E8FF8()
{
  return sub_25451A680();
}

uint64_t sub_2544E9000()
{
  return sub_25451AB3C();
}

uint64_t sub_2544E9008()
{
  return sub_25451BE68();
}

LighthouseBackground::TaskRequestProtectionClass_optional sub_2544E9010(Swift::String *a1)
{
  return TaskRequestProtectionClass.init(rawValue:)(*a1);
}

uint64_t sub_2544E901C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = TaskRequestProtectionClass.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_2544E9044(void *a1@<X8>)
{
  *a1 = &unk_2703D53D8;
}

uint64_t sub_2544E9054()
{
  return sub_254527170();
}

uint64_t sub_2544E90B4()
{
  return sub_254527150();
}

LighthouseBackground::TaskRequestMotionState_optional __swiftcall TaskRequestMotionState.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_254527790();
  result.value = swift_bridgeObjectRelease();
  char v5 = 8;
  if (v3 < 8) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static TaskRequestMotionState.allCases.getter()
{
  return &unk_2703D53B0;
}

uint64_t TaskRequestMotionState.rawValue.getter()
{
  uint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 1:
      return 0x616E6F6974617453;
    case 2:
      unsigned int v2 = 1802264919;
      goto LABEL_7;
    case 3:
      unsigned int v2 = 1852732754;
      goto LABEL_7;
    case 4:
      unsigned int v2 = 1818458435;
LABEL_7:
      uint64_t result = v2 | 0x676E6900000000;
      break;
    case 5:
      uint64_t result = 0x69746F6D6F747541;
      break;
    case 6:
      return result;
    case 7:
      uint64_t result = 0xD000000000000014;
      break;
    default:
      uint64_t result = 1701736270;
      break;
  }
  return result;
}

uint64_t sub_2544E9260(unsigned __int8 *a1, char *a2)
{
  return sub_2544902EC(*a1, *a2);
}

uint64_t sub_2544E926C()
{
  return sub_25451BD20();
}

uint64_t sub_2544E9278()
{
  return sub_25451AB90();
}

uint64_t sub_2544E9280()
{
  return sub_25451BD20();
}

LighthouseBackground::TaskRequestMotionState_optional sub_2544E9288(Swift::String *a1)
{
  return TaskRequestMotionState.init(rawValue:)(*a1);
}

uint64_t sub_2544E9294@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = TaskRequestMotionState.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_2544E92BC(void *a1@<X8>)
{
  *a1 = &unk_2703D53B0;
}

uint64_t sub_2544E92CC()
{
  return sub_254527170();
}

uint64_t sub_2544E932C()
{
  return sub_254527150();
}

LighthouseBackground::TaskRequestResources_optional __swiftcall TaskRequestResources.init(rawValue:)(Swift::String rawValue)
{
  return (LighthouseBackground::TaskRequestResources_optional)sub_2544E9388(v1);
}

uint64_t sub_2544E9388@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_254527790();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 5;
  if (v2 < 5) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

void *static TaskRequestResources.allCases.getter()
{
  return &unk_2703D5A40;
}

uint64_t TaskRequestResources.rawValue.getter()
{
  return qword_25452F320[*v0];
}

uint64_t sub_2544E9410(char *a1, char *a2)
{
  return sub_2544905CC(*a1, *a2);
}

uint64_t sub_2544E941C()
{
  return sub_25451A6EC();
}

uint64_t sub_2544E9424()
{
  return sub_25451AD10();
}

uint64_t sub_2544E942C()
{
  return sub_25451BC50();
}

LighthouseBackground::TaskRequestResources_optional sub_2544E9434(Swift::String *a1)
{
  return TaskRequestResources.init(rawValue:)(*a1);
}

uint64_t sub_2544E9440@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = TaskRequestResources.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_2544E9468(void *a1@<X8>)
{
  *a1 = &unk_2703D5360;
}

uint64_t sub_2544E9478()
{
  return sub_254527170();
}

uint64_t sub_2544E94D8()
{
  return sub_254527150();
}

LighthouseBackground::TaskRequestDevice_optional __swiftcall TaskRequestDevice.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_254527790();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

void *static TaskRequestDevice.allCases.getter()
{
  return &unk_2703D5AD0;
}

uint64_t TaskRequestDevice.rawValue.getter()
{
  return *(void *)&aDefaultpallpai_0[8 * *v0];
}

uint64_t sub_2544E95B4(char *a1, char *a2)
{
  return sub_2544908CC(*a1, *a2);
}

uint64_t sub_2544E95C0()
{
  return sub_25451A758();
}

uint64_t sub_2544E95C8()
{
  return sub_25451AEBC();
}

uint64_t sub_2544E95D0()
{
  return sub_25451BA64();
}

LighthouseBackground::TaskRequestDevice_optional sub_2544E95D8(Swift::String *a1)
{
  return TaskRequestDevice.init(rawValue:)(*a1);
}

uint64_t sub_2544E95E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = TaskRequestDevice.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_2544E960C(void *a1@<X8>)
{
  *a1 = &unk_2703D5278;
}

uint64_t sub_2544E961C()
{
  return sub_254527170();
}

uint64_t sub_2544E967C()
{
  return sub_254527150();
}

double RepeatingTaskRequest.interval.getter()
{
  return *(double *)v0;
}

void RepeatingTaskRequest.interval.setter(double a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*RepeatingTaskRequest.interval.modify())()
{
  return nullsub_1;
}

uint64_t RepeatingTaskRequest.minDurationBetweenInstances.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t RepeatingTaskRequest.minDurationBetweenInstances.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 8) = result;
  *(unsigned char *)(v2 + 16) = a2 & 1;
  return result;
}

uint64_t (*RepeatingTaskRequest.minDurationBetweenInstances.modify())()
{
  return nullsub_1;
}

LighthouseBackground::RepeatingTaskRequest __swiftcall RepeatingTaskRequest.init(interval:minDurationBetweenInstances:)(Swift::Double interval, Swift::Double_optional minDurationBetweenInstances)
{
  *(Swift::Double *)uint64_t v3 = interval;
  *(void *)(v3 + 8) = *(void *)&minDurationBetweenInstances.is_nil;
  *(unsigned char *)(v3 + 16) = v2 & 1;
  result.minDurationBetweenInstances.value = minDurationBetweenInstances.value;
  result.minDurationBetweenInstances.is_nil = minDurationBetweenInstances.is_nil;
  result.interval = interval;
  return result;
}

uint64_t sub_2544E974C(char a1)
{
  if (a1) {
    return 0xD00000000000001BLL;
  }
  else {
    return 0x6C61767265746E69;
  }
}

uint64_t sub_2544E9788()
{
  return sub_2544E974C(*v0);
}

uint64_t sub_2544E9790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544EF884(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2544E97B8(uint64_t a1)
{
  unint64_t v2 = sub_2544E986C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544E97F4(uint64_t a1)
{
  unint64_t v2 = sub_2544E986C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RepeatingTaskRequest.encode(to:)(void *a1)
{
  return sub_2544E9AA0(a1, &qword_269DF45E8, (void (*)(void))sub_2544E986C);
}

unint64_t sub_2544E986C()
{
  unint64_t result = qword_26B266EB8;
  if (!qword_26B266EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B266EB8);
  }
  return result;
}

uint64_t RepeatingTaskRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2544E9CB8(a1, &qword_26B266F30, (void (*)(void))sub_2544E986C, a2);
}

uint64_t sub_2544E98FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RepeatingTaskRequest.init(from:)(a1, a2);
}

uint64_t sub_2544E9914(void *a1)
{
  return RepeatingTaskRequest.encode(to:)(a1);
}

double NonRepeatingTaskRequest.scheduleAfter.getter()
{
  return *(double *)v0;
}

uint64_t (*NonRepeatingTaskRequest.scheduleAfter.modify())()
{
  return nullsub_1;
}

uint64_t (*NonRepeatingTaskRequest.trySchedulingBefore.modify())()
{
  return nullsub_1;
}

uint64_t sub_2544E9974(char a1)
{
  if (a1) {
    return 0xD000000000000013;
  }
  else {
    return 0x656C756465686373;
  }
}

uint64_t sub_2544E99BC()
{
  return sub_2544E9974(*v0);
}

uint64_t sub_2544E99C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544EF96C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2544E99EC(uint64_t a1)
{
  unint64_t v2 = sub_2544E9C28();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544E9A28(uint64_t a1)
{
  unint64_t v2 = sub_2544E9C28();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t NonRepeatingTaskRequest.encode(to:)(void *a1)
{
  return sub_2544E9AA0(a1, &qword_269DF45F0, (void (*)(void))sub_2544E9C28);
}

uint64_t sub_2544E9AA0(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v3 + 8);
  v12[1] = *(unsigned __int8 *)(v3 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_254527B00();
  char v16 = 0;
  uint64_t v10 = v14;
  sub_254527950();
  if (!v10)
  {
    char v15 = 1;
    sub_2545278E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_2544E9C28()
{
  unint64_t result = qword_269DF45F8;
  if (!qword_269DF45F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF45F8);
  }
  return result;
}

uint64_t NonRepeatingTaskRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2544E9CB8(a1, &qword_269DF4600, (void (*)(void))sub_2544E9C28, a2);
}

uint64_t sub_2544E9CB8@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v20 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v19 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_254527AF0();
  if (!v4)
  {
    uint64_t v11 = v19;
    uint64_t v10 = v20;
    char v22 = 0;
    sub_254527850();
    uint64_t v13 = v12;
    char v21 = 1;
    uint64_t v15 = sub_2545277E0();
    char v17 = v16;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v7);
    *(void *)uint64_t v10 = v13;
    *(void *)(v10 + 8) = v15;
    *(unsigned char *)(v10 + 16) = v17 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2544E9E78@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return NonRepeatingTaskRequest.init(from:)(a1, a2);
}

uint64_t sub_2544E9E90(void *a1)
{
  return NonRepeatingTaskRequest.encode(to:)(a1);
}

__n128 TaskRequest.repeatingTask.getter@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int8 v2 = v1[1].n128_u8[0];
  unsigned __int8 v3 = v1[1].n128_u8[1];
  __n128 result = *v1;
  *a1 = *v1;
  a1[1].n128_u8[0] = v2;
  a1[1].n128_u8[1] = v3;
  return result;
}

__n128 TaskRequest.repeatingTask.setter(__n128 *a1)
{
  unsigned __int8 v2 = a1[1].n128_u8[0];
  unsigned __int8 v3 = a1[1].n128_u8[1];
  __n128 result = *a1;
  *uint64_t v1 = *a1;
  v1[1].n128_u8[0] = v2;
  v1[1].n128_u8[1] = v3;
  return result;
}

uint64_t (*TaskRequest.repeatingTask.modify())()
{
  return nullsub_1;
}

__n128 TaskRequest.nonRepeatingTask.getter@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int8 v2 = *(unsigned char *)(v1 + 40);
  unsigned __int8 v3 = *(unsigned char *)(v1 + 41);
  __n128 result = *(__n128 *)(v1 + 24);
  *a1 = result;
  a1[1].n128_u8[0] = v2;
  a1[1].n128_u8[1] = v3;
  return result;
}

__n128 TaskRequest.nonRepeatingTask.setter(__n128 *a1)
{
  unsigned __int8 v2 = a1[1].n128_u8[0];
  unsigned __int8 v3 = a1[1].n128_u8[1];
  __n128 result = *a1;
  *(__n128 *)(v1 + 24) = *a1;
  *(unsigned char *)(v1 + 40) = v2;
  *(unsigned char *)(v1 + 41) = v3;
  return result;
}

uint64_t (*TaskRequest.nonRepeatingTask.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.requiresNetworkConnectivity.getter()
{
  return *(unsigned __int8 *)(v0 + 42);
}

uint64_t TaskRequest.requiresNetworkConnectivity.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 42) = result;
  return result;
}

uint64_t (*TaskRequest.requiresNetworkConnectivity.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.requiresExternalPower.getter()
{
  return *(unsigned __int8 *)(v0 + 43);
}

uint64_t TaskRequest.requiresExternalPower.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 43) = result;
  return result;
}

uint64_t (*TaskRequest.requiresExternalPower.modify())()
{
  return nullsub_1;
}

void TaskRequest.priority.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 44);
}

unsigned char *TaskRequest.priority.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 44) = *result;
  return result;
}

uint64_t (*TaskRequest.priority.modify())()
{
  return nullsub_1;
}

void TaskRequest.requiresProtectionClass.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 45);
}

unsigned char *TaskRequest.requiresProtectionClass.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 45) = *result;
  return result;
}

uint64_t (*TaskRequest.requiresProtectionClass.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.preventsDeviceSleep.getter()
{
  return *(unsigned __int8 *)(v0 + 46);
}

uint64_t TaskRequest.preventsDeviceSleep.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 46) = result;
  return result;
}

uint64_t (*TaskRequest.preventsDeviceSleep.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.randomInitialDelay.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t TaskRequest.randomInitialDelay.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 48) = result;
  *(unsigned char *)(v2 + 56) = a2 & 1;
  return result;
}

uint64_t (*TaskRequest.randomInitialDelay.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.postInstall.getter()
{
  return *(unsigned __int8 *)(v0 + 57);
}

uint64_t TaskRequest.postInstall.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 57) = result;
  return result;
}

uint64_t (*TaskRequest.postInstall.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.requiresInexpensiveNetworkConnectivity.getter()
{
  return *(unsigned __int8 *)(v0 + 58);
}

uint64_t TaskRequest.requiresInexpensiveNetworkConnectivity.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 58) = result;
  return result;
}

uint64_t (*TaskRequest.requiresInexpensiveNetworkConnectivity.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.requiresUnconstrainedNetworkConnectivity.getter()
{
  return *(unsigned __int8 *)(v0 + 59);
}

uint64_t TaskRequest.requiresUnconstrainedNetworkConnectivity.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 59) = result;
  return result;
}

uint64_t (*TaskRequest.requiresUnconstrainedNetworkConnectivity.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.appRefresh.getter()
{
  return *(unsigned __int8 *)(v0 + 60);
}

uint64_t TaskRequest.appRefresh.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 60) = result;
  return result;
}

uint64_t (*TaskRequest.appRefresh.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.requiresUserInactivity.getter()
{
  return *(unsigned __int8 *)(v0 + 61);
}

uint64_t TaskRequest.requiresUserInactivity.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 61) = result;
  return result;
}

uint64_t (*TaskRequest.requiresUserInactivity.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.requiresSignificantUserInactivity.getter()
{
  return *(unsigned __int8 *)(v0 + 62);
}

uint64_t TaskRequest.requiresSignificantUserInactivity.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 62) = result;
  return result;
}

uint64_t (*TaskRequest.requiresSignificantUserInactivity.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.powerNap.getter()
{
  return *(unsigned __int8 *)(v0 + 63);
}

uint64_t TaskRequest.powerNap.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 63) = result;
  return result;
}

uint64_t (*TaskRequest.powerNap.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.resourceIntensive.getter()
{
  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t TaskRequest.resourceIntensive.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 64) = result;
  return result;
}

uint64_t (*TaskRequest.resourceIntensive.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.resources.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TaskRequest.resources.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 72) = a1;
  return result;
}

uint64_t (*TaskRequest.resources.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.mayRebootDevice.getter()
{
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t TaskRequest.mayRebootDevice.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 80) = result;
  return result;
}

uint64_t (*TaskRequest.mayRebootDevice.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.userRequestedBackupTask.getter()
{
  return *(unsigned __int8 *)(v0 + 81);
}

uint64_t TaskRequest.userRequestedBackupTask.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 81) = result;
  return result;
}

uint64_t (*TaskRequest.userRequestedBackupTask.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.networkDownloadSize.getter()
{
  return *(void *)(v0 + 88);
}

uint64_t TaskRequest.networkDownloadSize.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 88) = result;
  *(unsigned char *)(v2 + 96) = a2 & 1;
  return result;
}

uint64_t (*TaskRequest.networkDownloadSize.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.networkUploadSize.getter()
{
  return *(void *)(v0 + 104);
}

uint64_t TaskRequest.networkUploadSize.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 104) = result;
  *(unsigned char *)(v2 + 112) = a2 & 1;
  return result;
}

uint64_t (*TaskRequest.networkUploadSize.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.communicatesWithPairedDevice.getter()
{
  return *(unsigned __int8 *)(v0 + 113);
}

uint64_t TaskRequest.communicatesWithPairedDevice.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 113) = result;
  return result;
}

uint64_t (*TaskRequest.communicatesWithPairedDevice.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.shouldWakeDevice.getter()
{
  return *(unsigned __int8 *)(v0 + 114);
}

uint64_t TaskRequest.shouldWakeDevice.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 114) = result;
  return result;
}

uint64_t (*TaskRequest.shouldWakeDevice.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.groupName.getter()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TaskRequest.groupName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = a2;
  return result;
}

uint64_t (*TaskRequest.groupName.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.groupConcurrencyLimit.getter()
{
  return *(void *)(v0 + 136);
}

uint64_t TaskRequest.groupConcurrencyLimit.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 136) = result;
  *(unsigned char *)(v2 + 144) = a2 & 1;
  return result;
}

uint64_t (*TaskRequest.groupConcurrencyLimit.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.rateLimitConfigurationName.getter()
{
  uint64_t v1 = *(void *)(v0 + 152);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TaskRequest.rateLimitConfigurationName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 152) = a1;
  *(void *)(v2 + 160) = a2;
  return result;
}

uint64_t (*TaskRequest.rateLimitConfigurationName.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.expectedDuration.getter()
{
  return *(void *)(v0 + 168);
}

uint64_t TaskRequest.expectedDuration.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 168) = result;
  *(unsigned char *)(v2 + 176) = a2 & 1;
  return result;
}

uint64_t (*TaskRequest.expectedDuration.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.powerBudgeted.getter()
{
  return *(unsigned __int8 *)(v0 + 177);
}

uint64_t TaskRequest.powerBudgeted.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 177) = result;
  return result;
}

uint64_t (*TaskRequest.powerBudgeted.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.dataBudgeted.getter()
{
  return *(unsigned __int8 *)(v0 + 178);
}

uint64_t TaskRequest.dataBudgeted.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 178) = result;
  return result;
}

uint64_t (*TaskRequest.dataBudgeted.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.relatedApplications.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TaskRequest.relatedApplications.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 184) = a1;
  return result;
}

uint64_t (*TaskRequest.relatedApplications.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.involvedProcesses.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TaskRequest.involvedProcesses.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 192) = a1;
  return result;
}

uint64_t (*TaskRequest.involvedProcesses.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.runOnAppForeground.getter()
{
  return *(unsigned __int8 *)(v0 + 200);
}

uint64_t TaskRequest.runOnAppForeground.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 200) = result;
  return result;
}

uint64_t (*TaskRequest.runOnAppForeground.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.requestsApplicationLaunch.getter()
{
  return *(unsigned __int8 *)(v0 + 201);
}

uint64_t TaskRequest.requestsApplicationLaunch.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 201) = result;
  return result;
}

uint64_t (*TaskRequest.requestsApplicationLaunch.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.requiresBuddyComplete.getter()
{
  return *(unsigned __int8 *)(v0 + 202);
}

uint64_t TaskRequest.requiresBuddyComplete.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 202) = result;
  return result;
}

uint64_t (*TaskRequest.requiresBuddyComplete.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.targetDevice.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TaskRequest.targetDevice.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 208) = a1;
  return result;
}

uint64_t (*TaskRequest.targetDevice.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.remoteDevice.getter()
{
  uint64_t v1 = *(void *)(v0 + 216);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TaskRequest.remoteDevice.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 216) = a1;
  *(void *)(v2 + 224) = a2;
  return result;
}

uint64_t (*TaskRequest.remoteDevice.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.requiresRemoteDeviceWake.getter()
{
  return *(unsigned __int8 *)(v0 + 232);
}

uint64_t TaskRequest.requiresRemoteDeviceWake.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 232) = result;
  return result;
}

uint64_t (*TaskRequest.requiresRemoteDeviceWake.modify())()
{
  return nullsub_1;
}

void TaskRequest.runOnMotionState.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 233);
}

unsigned char *TaskRequest.runOnMotionState.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 233) = *result;
  return result;
}

uint64_t (*TaskRequest.runOnMotionState.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.producedResultIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TaskRequest.producedResultIdentifiers.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 240) = a1;
  return result;
}

uint64_t (*TaskRequest.producedResultIdentifiers.modify())()
{
  return nullsub_1;
}

uint64_t TaskRequest.dependencies.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TaskRequest.dependencies.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 248) = a1;
  return result;
}

uint64_t (*TaskRequest.dependencies.modify())()
{
  return nullsub_1;
}

__n128 TaskRequest.init(repeatingTask:nonRepeatingTask:requiresNetworkConnectivity:requiresExternalPower:priority:requiresProtectionClass:preventsDeviceSleep:randomInitialDelay:postInstall:requiresInexpensiveNetworkConnectivity:requiresUnconstrainedNetworkConnectivity:appRefresh:requiresUserInactivity:requiresSignificantUserInactivity:powerNap:resourceIntensive:resources:mayRebootDevice:userRequestedBackupTask:networkDownloadSize:networkUploadSize:communicatesWithPairedDevice:shouldWakeDevice:groupName:groupConcurrencyLimit:rateLimitConfigurationName:expectedDuration:powerBudgeted:dataBudgeted:relatedApplications:involvedProcesses:runOnAppForeground:requestsApplicationLaunch:requiresBuddyComplete:targetDevice:remoteDevice:requiresRemoteDeviceWake:runOnMotionState:producedResultIdentifiers:dependencies:)@<Q0>(long long *a1@<X0>, long long *a2@<X1>, char a3@<W2>, char a4@<W3>, unsigned char *a5@<X4>, unsigned char *a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, uint64_t a11, __int16 a12, uint64_t a13, char a14, uint64_t a15, int a16, __n128 a17, uint64_t a18, char a19, long long a20,uint64_t a21,int a22,uint64_t a23,uint64_t a24,int a25,long long a26,uint64_t a27,char a28,unsigned char *a29,uint64_t a30,uint64_t a31)
{
  *(unsigned char *)(a9 + 16) = *((unsigned char *)a1 + 16);
  long long v31 = *a1;
  *(unsigned char *)(a9 + 17) = *((unsigned char *)a1 + 17);
  *(unsigned char *)(a9 + 40) = *((unsigned char *)a2 + 16);
  long long v32 = *a2;
  *(unsigned char *)(a9 + 41) = *((unsigned char *)a2 + 17);
  *(unsigned char *)(a9 + 42) = a3;
  *(unsigned char *)(a9 + 43) = a4;
  *(unsigned char *)(a9 + 44) = *a5;
  *(unsigned char *)(a9 + 45) = *a6;
  *(unsigned char *)(a9 + 46) = a7;
  *(void *)(a9 + 48) = a8;
  *(unsigned char *)(a9 + 56) = a10 & 1;
  *(_DWORD *)(a9 + 57) = *(_DWORD *)((char *)&a10 + 1);
  *(_DWORD *)(a9 + 61) = *(_DWORD *)((char *)&a10 + 5);
  *(void *)(a9 + 72) = a11;
  *(_WORD *)(a9 + 80) = a12;
  *(void *)(a9 + 88) = a13;
  *(unsigned char *)(a9 + 96) = a14 & 1;
  *(void *)(a9 + 104) = a15;
  *(unsigned char *)(a9 + 112) = a16 & 1;
  *(_WORD *)(a9 + 113) = *(_WORD *)((char *)&a16 + 1);
  *(void *)(a9 + 136) = a18;
  *(unsigned char *)(a9 + 144) = a19 & 1;
  *(void *)(a9 + 168) = a21;
  *(unsigned char *)(a9 + 176) = a22 & 1;
  *(_WORD *)(a9 + 177) = *(_WORD *)((char *)&a22 + 1);
  *(void *)(a9 + 184) = a23;
  *(void *)(a9 + 192) = a24;
  *(unsigned char *)(a9 + 200) = a25;
  *(_WORD *)(a9 + 201) = *(_WORD *)((char *)&a25 + 1);
  *(void *)(a9 + 224) = a27;
  *(unsigned char *)(a9 + 232) = a28;
  *(unsigned char *)(a9 + 233) = *a29;
  *(void *)(a9 + 240) = a30;
  *(void *)(a9 + 248) = a31;
  *(_OWORD *)a9 = v31;
  __n128 result = a17;
  *(_OWORD *)(a9 + 24) = v32;
  *(__n128 *)(a9 + 120) = a17;
  *(_OWORD *)(a9 + 152) = a20;
  *(_OWORD *)(a9 + 208) = a26;
  return result;
}

uint64_t sub_2544EAA1C(char a1)
{
  uint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
    case 22:
    case 26:
    case 37:
      return result;
    case 2:
      uint64_t result = 0xD00000000000001BLL;
      break;
    case 3:
      uint64_t result = 0xD000000000000015;
      break;
    case 4:
      uint64_t result = 0x797469726F697270;
      break;
    case 5:
      uint64_t result = 0xD000000000000017;
      break;
    case 6:
      uint64_t result = 0xD000000000000013;
      break;
    case 7:
      uint64_t result = 0xD000000000000012;
      break;
    case 8:
      uint64_t result = 0x74736E4974736F70;
      break;
    case 9:
      uint64_t result = 0xD000000000000026;
      break;
    case 10:
      uint64_t result = 0xD000000000000028;
      break;
    case 11:
      uint64_t result = 0x6572666552707061;
      break;
    case 12:
      uint64_t result = 0xD000000000000016;
      break;
    case 13:
      uint64_t result = 0xD000000000000021;
      break;
    case 14:
      uint64_t result = 0x70614E7265776F70;
      break;
    case 15:
      uint64_t result = 0xD000000000000011;
      break;
    case 16:
      uint64_t result = 0x656372756F736572;
      break;
    case 17:
      uint64_t result = 0x6F6F62655279616DLL;
      break;
    case 18:
      uint64_t result = 0xD000000000000017;
      break;
    case 19:
      uint64_t result = 0xD000000000000013;
      break;
    case 20:
      uint64_t result = 0xD000000000000011;
      break;
    case 21:
      uint64_t result = 0xD00000000000001CLL;
      break;
    case 23:
      uint64_t result = 0x6D614E70756F7267;
      break;
    case 24:
      uint64_t result = 0xD000000000000015;
      break;
    case 25:
      uint64_t result = 0xD00000000000001ALL;
      break;
    case 27:
      uint64_t result = 0x6475427265776F70;
      break;
    case 28:
      uint64_t result = 0x6764754261746164;
      break;
    case 29:
      uint64_t result = 0xD000000000000013;
      break;
    case 30:
      uint64_t result = 0xD000000000000011;
      break;
    case 31:
      uint64_t result = 0xD000000000000012;
      break;
    case 32:
      uint64_t result = 0xD000000000000019;
      break;
    case 33:
      uint64_t result = 0xD000000000000015;
      break;
    case 34:
      uint64_t v3 = 0x746567726174;
      goto LABEL_35;
    case 35:
      uint64_t v3 = 0x65746F6D6572;
LABEL_35:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6544000000000000;
      break;
    case 36:
      uint64_t result = 0xD000000000000018;
      break;
    case 38:
      uint64_t result = 0xD000000000000019;
      break;
    case 39:
      uint64_t result = 0x6E65646E65706564;
      break;
    default:
      uint64_t result = 0x6E69746165706572;
      break;
  }
  return result;
}

uint64_t sub_2544EAE1C()
{
  return sub_2544EAA1C(*v0);
}

uint64_t sub_2544EAE24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544EFA6C(a1, a2);
  *a3 = result;
  return result;
}

void sub_2544EAE4C(unsigned char *a1@<X8>)
{
  *a1 = 40;
}

uint64_t sub_2544EAE58(uint64_t a1)
{
  unint64_t v2 = sub_2544EBA70();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544EAE94(uint64_t a1)
{
  unint64_t v2 = sub_2544EBA70();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TaskRequest.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4608);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v63 = v1[1];
  uint64_t v64 = v7;
  char v8 = *((unsigned char *)v1 + 16);
  char v9 = *((unsigned char *)v1 + 17);
  uint64_t v10 = v1[3];
  uint64_t v61 = v1[4];
  uint64_t v62 = v10;
  int v70 = *((unsigned __int8 *)v1 + 40);
  LODWORD(v10) = *((unsigned __int8 *)v1 + 41);
  int v59 = *((unsigned __int8 *)v1 + 42);
  int v60 = v10;
  LODWORD(v10) = *((unsigned __int8 *)v1 + 43);
  int v57 = *((unsigned __int8 *)v1 + 44);
  int v58 = v10;
  LODWORD(v10) = *((unsigned __int8 *)v1 + 45);
  int v55 = *((unsigned __int8 *)v1 + 46);
  int v56 = v10;
  uint64_t v53 = v1[6];
  int v54 = *((unsigned __int8 *)v1 + 56);
  LODWORD(v10) = *((unsigned __int8 *)v1 + 57);
  int v51 = *((unsigned __int8 *)v1 + 58);
  int v52 = v10;
  LODWORD(v10) = *((unsigned __int8 *)v1 + 59);
  int v49 = *((unsigned __int8 *)v1 + 60);
  int v50 = v10;
  LODWORD(v10) = *((unsigned __int8 *)v1 + 61);
  int v47 = *((unsigned __int8 *)v1 + 62);
  int v48 = v10;
  LODWORD(v10) = *((unsigned __int8 *)v1 + 63);
  int v45 = *((unsigned __int8 *)v1 + 64);
  int v46 = v10;
  uint64_t v44 = v1[9];
  v16[1] = *((unsigned __int8 *)v1 + 80);
  v16[2] = *((unsigned __int8 *)v1 + 81);
  uint64_t v17 = v1[11];
  v16[3] = *((unsigned __int8 *)v1 + 96);
  uint64_t v19 = v1[13];
  int v18 = *((unsigned __int8 *)v1 + 112);
  int v20 = *((unsigned __int8 *)v1 + 113);
  int v21 = *((unsigned __int8 *)v1 + 114);
  uint64_t v23 = v1[15];
  uint64_t v22 = v1[16];
  uint64_t v25 = v1[17];
  int v24 = *((unsigned __int8 *)v1 + 144);
  uint64_t v27 = v1[19];
  uint64_t v26 = v1[20];
  uint64_t v29 = v1[21];
  int v28 = *((unsigned __int8 *)v1 + 176);
  int v30 = *((unsigned __int8 *)v1 + 177);
  int v31 = *((unsigned __int8 *)v1 + 178);
  uint64_t v32 = v1[23];
  uint64_t v33 = v1[24];
  int v34 = *((unsigned __int8 *)v1 + 200);
  int v35 = *((unsigned __int8 *)v1 + 201);
  int v36 = *((unsigned __int8 *)v1 + 202);
  uint64_t v37 = v1[26];
  uint64_t v38 = v1[27];
  uint64_t v39 = v1[28];
  LODWORD(v5) = *((unsigned __int8 *)v1 + 233);
  int v40 = *((unsigned __int8 *)v1 + 232);
  int v41 = v5;
  uint64_t v11 = v1[31];
  uint64_t v42 = v1[30];
  uint64_t v43 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544EBA70();
  sub_254527B00();
  uint64_t v66 = v64;
  uint64_t v67 = v63;
  char v68 = v8;
  char v69 = v9;
  char v71 = 0;
  sub_2544EBAC4();
  uint64_t v12 = v65;
  sub_254527910();
  if (v12) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  char v14 = v56;
  char v13 = v57;
  uint64_t v66 = v62;
  uint64_t v67 = v61;
  char v68 = v70;
  char v69 = v60;
  char v71 = 1;
  sub_2544EBB18();
  sub_254527910();
  LOBYTE(v66) = 2;
  sub_2545278D0();
  LOBYTE(v66) = 3;
  sub_2545278D0();
  LOBYTE(v66) = v13;
  char v71 = 4;
  sub_2544EBB6C();
  sub_254527910();
  LOBYTE(v66) = v14;
  char v71 = 5;
  sub_2544EBBC0();
  sub_254527910();
  LOBYTE(v66) = 6;
  sub_2545278D0();
  LOBYTE(v66) = 7;
  sub_2545278E0();
  LOBYTE(v66) = 8;
  sub_2545278D0();
  LOBYTE(v66) = 9;
  sub_2545278D0();
  LOBYTE(v66) = 10;
  sub_2545278D0();
  LOBYTE(v66) = 11;
  sub_2545278D0();
  LOBYTE(v66) = 12;
  sub_2545278D0();
  LOBYTE(v66) = 13;
  sub_2545278D0();
  LOBYTE(v66) = 14;
  sub_2545278D0();
  LOBYTE(v66) = 15;
  sub_2545278D0();
  uint64_t v66 = v44;
  char v71 = 16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B266F18);
  sub_2544EE040(&qword_269DF4630, &qword_26B266F18, (void (*)(void))sub_2544EBC14);
  sub_254527910();
  LOBYTE(v66) = 17;
  sub_2545278D0();
  LOBYTE(v66) = 18;
  sub_2545278D0();
  LOBYTE(v66) = 19;
  sub_254527920();
  LOBYTE(v66) = 20;
  sub_254527920();
  LOBYTE(v66) = 21;
  sub_2545278D0();
  LOBYTE(v66) = 22;
  sub_2545278D0();
  LOBYTE(v66) = 23;
  sub_2545278C0();
  LOBYTE(v66) = 24;
  sub_254527900();
  LOBYTE(v66) = 25;
  sub_2545278C0();
  LOBYTE(v66) = 26;
  sub_2545278E0();
  LOBYTE(v66) = 27;
  sub_2545278D0();
  LOBYTE(v66) = 28;
  sub_2545278D0();
  uint64_t v66 = v32;
  char v71 = 29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B266BC0);
  sub_2544C670C(&qword_26B266BC8);
  sub_254527910();
  uint64_t v66 = v33;
  char v71 = 30;
  sub_254527910();
  LOBYTE(v66) = 31;
  sub_2545278D0();
  LOBYTE(v66) = 32;
  sub_2545278D0();
  LOBYTE(v66) = 33;
  sub_2545278D0();
  uint64_t v66 = v37;
  char v71 = 34;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B266F08);
  sub_2544EE040(&qword_269DF4640, &qword_26B266F08, (void (*)(void))sub_2544EBC68);
  sub_254527910();
  LOBYTE(v66) = 35;
  sub_2545278C0();
  LOBYTE(v66) = 36;
  sub_2545278D0();
  LOBYTE(v66) = v41;
  char v71 = 37;
  sub_2544EBCBC();
  sub_254527910();
  uint64_t v66 = v42;
  char v71 = 38;
  sub_254527910();
  uint64_t v66 = v43;
  char v71 = 39;
  sub_254527910();
  return (*(uint64_t (**)(void, uint64_t))(v4 + 8))(0, v3);
}

unint64_t sub_2544EBA70()
{
  unint64_t result = qword_26B266E80;
  if (!qword_26B266E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B266E80);
  }
  return result;
}

unint64_t sub_2544EBAC4()
{
  unint64_t result = qword_269DF4610;
  if (!qword_269DF4610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4610);
  }
  return result;
}

unint64_t sub_2544EBB18()
{
  unint64_t result = qword_269DF4618;
  if (!qword_269DF4618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4618);
  }
  return result;
}

unint64_t sub_2544EBB6C()
{
  unint64_t result = qword_269DF4620;
  if (!qword_269DF4620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4620);
  }
  return result;
}

unint64_t sub_2544EBBC0()
{
  unint64_t result = qword_269DF4628;
  if (!qword_269DF4628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4628);
  }
  return result;
}

unint64_t sub_2544EBC14()
{
  unint64_t result = qword_269DF4638;
  if (!qword_269DF4638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4638);
  }
  return result;
}

unint64_t sub_2544EBC68()
{
  unint64_t result = qword_269DF4648;
  if (!qword_269DF4648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4648);
  }
  return result;
}

unint64_t sub_2544EBCBC()
{
  unint64_t result = qword_269DF4650;
  if (!qword_269DF4650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4650);
  }
  return result;
}

uint64_t TaskRequest.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266F28);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v230 = 1;
  char v227 = 1;
  char v226 = 1;
  char v222 = 1;
  char v220 = 1;
  char v217 = 1;
  char v215 = 1;
  uint64_t v9 = a1[3];
  uint64_t v116 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_2544EBA70();
  sub_254527AF0();
  if (!v2)
  {
    LOBYTE(v123) = 0;
    sub_2544EDE9C();
    sub_254527810();
    long long v81 = v141;
    int v82 = v142;
    int v18 = v143;
    char v230 = v143;
    LOBYTE(v123) = 1;
    sub_2544EDEF0();
    sub_254527810();
    uint64_t v80 = v6;
    uint64_t v19 = *((void *)&v141 + 1);
    uint64_t v113 = v141;
    int v20 = v142;
    int v21 = v143;
    char v227 = v143;
    LOBYTE(v141) = 2;
    int v22 = sub_2545277D0();
    int v115 = v20;
    uint64_t v114 = v19;
    int v78 = v18;
    int v79 = v22;
    int v77 = v21;
    LOBYTE(v141) = 3;
    int v23 = sub_2545277D0();
    LOBYTE(v123) = 4;
    sub_2544EDF44();
    sub_254527810();
    int v112 = v141;
    LOBYTE(v123) = 5;
    sub_2544EDF98();
    sub_254527810();
    LODWORD(v19) = v141;
    LOBYTE(v141) = 6;
    int v24 = sub_2545277D0();
    int v111 = v19;
    int v76 = v24;
    LOBYTE(v141) = 7;
    uint64_t v25 = sub_2545277E0();
    char v27 = v26;
    int v75 = v23;
    uint64_t v110 = v25;
    char v226 = v26 & 1;
    LOBYTE(v141) = 8;
    int v28 = sub_2545277D0();
    uint64_t v231 = 0;
    int v74 = v28;
    LOBYTE(v141) = 9;
    int v122 = sub_2545277D0();
    uint64_t v231 = 0;
    LOBYTE(v141) = 10;
    int v121 = sub_2545277D0();
    uint64_t v231 = 0;
    LOBYTE(v141) = 11;
    int v120 = sub_2545277D0();
    uint64_t v231 = 0;
    LOBYTE(v141) = 12;
    int v119 = sub_2545277D0();
    uint64_t v231 = 0;
    LOBYTE(v141) = 13;
    int v118 = sub_2545277D0();
    uint64_t v231 = 0;
    LOBYTE(v141) = 14;
    int v117 = sub_2545277D0();
    uint64_t v231 = 0;
    LOBYTE(v141) = 15;
    int v102 = sub_2545277D0();
    uint64_t v231 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B266F18);
    LOBYTE(v123) = 16;
    sub_2544EE040(&qword_26B266F20, &qword_26B266F18, (void (*)(void))sub_2544EDFEC);
    uint64_t v29 = v231;
    sub_254527810();
    uint64_t v231 = v29;
    if (v29)
    {
      (*(void (**)(char *, uint64_t))(v80 + 8))(v8, v5);
      uint64_t v91 = 0;
      uint64_t v92 = 0;
LABEL_10:
      uint64_t v97 = 0;
      uint64_t v98 = 0;
      uint64_t v99 = 0;
      uint64_t v103 = 0;
      uint64_t v104 = 0;
      uint64_t v88 = 0;
      uint64_t v89 = 0;
      uint64_t v105 = 0;
      uint64_t v106 = 0;
      uint64_t v87 = 0;
      uint64_t v107 = 0;
      uint64_t v108 = 0;
      uint64_t v109 = 0;
      int v90 = 2;
      int v85 = 2;
      int v86 = 2;
      int v83 = 8;
      int v84 = 2;
      int v93 = 2;
      int v94 = 2;
      int v95 = 2;
      int v96 = 2;
      int v100 = 2;
      int v101 = 2;
LABEL_11:
      unsigned __int8 v10 = v82;
      uint64_t v11 = *((void *)&v81 + 1);
      uint64_t v12 = v81;
      char v16 = v79;
      char v15 = v75;
      char v14 = v76;
      char v13 = v74;
      goto LABEL_4;
    }
    uint64_t v30 = v141;
    LOBYTE(v141) = 17;
    uint64_t v31 = v30;
    swift_bridgeObjectRetain();
    uint64_t v32 = v231;
    int v101 = sub_2545277D0();
    uint64_t v231 = v32;
    uint64_t v91 = v31;
    if (v32)
    {
      (*(void (**)(char *, uint64_t))(v80 + 8))(v8, v5);
      swift_bridgeObjectRelease();
      uint64_t v92 = 0;
      goto LABEL_10;
    }
    LOBYTE(v141) = 18;
    int v100 = sub_2545277D0();
    uint64_t v231 = 0;
    LOBYTE(v141) = 19;
    uint64_t v109 = sub_254527820();
    int v73 = v33;
    uint64_t v231 = 0;
    char v222 = v33 & 1;
    LOBYTE(v141) = 20;
    uint64_t v108 = sub_254527820();
    int v72 = v34;
    uint64_t v231 = 0;
    char v220 = v34 & 1;
    LOBYTE(v141) = 21;
    int v96 = sub_2545277D0();
    uint64_t v231 = 0;
    LOBYTE(v141) = 22;
    int v95 = sub_2545277D0();
    uint64_t v231 = 0;
    LOBYTE(v141) = 23;
    uint64_t v107 = sub_2545277C0();
    uint64_t v231 = 0;
    uint64_t v36 = v35;
    LOBYTE(v141) = 24;
    swift_bridgeObjectRetain();
    uint64_t v37 = v231;
    uint64_t v106 = sub_254527800();
    int v71 = v38;
    uint64_t v231 = v37;
    uint64_t v87 = v36;
    if (v37)
    {
      (*(void (**)(char *, uint64_t))(v80 + 8))(v8, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v92 = 0;
      uint64_t v97 = 0;
      uint64_t v98 = 0;
      uint64_t v99 = 0;
      uint64_t v103 = 0;
      uint64_t v104 = 0;
      uint64_t v88 = 0;
      uint64_t v89 = 0;
      uint64_t v105 = 0;
      uint64_t v106 = 0;
LABEL_17:
      int v90 = 2;
      int v85 = 2;
      int v86 = 2;
      int v83 = 8;
      int v84 = 2;
      int v93 = 2;
      int v94 = 2;
      goto LABEL_11;
    }
    char v217 = v71 & 1;
    LOBYTE(v141) = 25;
    uint64_t v105 = sub_2545277C0();
    uint64_t v88 = v39;
    uint64_t v231 = 0;
    LOBYTE(v141) = 26;
    swift_bridgeObjectRetain();
    uint64_t v40 = v231;
    uint64_t v104 = sub_2545277E0();
    int v70 = v41;
    uint64_t v231 = v40;
    if (v40)
    {
      (*(void (**)(char *, uint64_t))(v80 + 8))(v8, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v92 = 0;
      uint64_t v97 = 0;
      uint64_t v98 = 0;
      uint64_t v99 = 0;
      uint64_t v103 = 0;
      uint64_t v104 = 0;
      uint64_t v89 = 0;
      goto LABEL_17;
    }
    char v215 = v70 & 1;
    LOBYTE(v141) = 27;
    int v94 = sub_2545277D0();
    uint64_t v231 = 0;
    LOBYTE(v141) = 28;
    int v93 = sub_2545277D0();
    uint64_t v231 = 0;
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266BC0);
    LOBYTE(v123) = 29;
    v69[0] = sub_2544C670C(&qword_26B266B90);
    v69[1] = v42;
    uint64_t v43 = v231;
    sub_254527810();
    uint64_t v231 = v43;
    if (v43)
    {
      (*(void (**)(char *, uint64_t))(v80 + 8))(v8, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v92 = 0;
      uint64_t v97 = 0;
      uint64_t v98 = 0;
      uint64_t v99 = 0;
      uint64_t v103 = 0;
      uint64_t v89 = 0;
LABEL_24:
      int v90 = 2;
      int v85 = 2;
      int v86 = 2;
      int v83 = 8;
      int v84 = 2;
      goto LABEL_11;
    }
    LOBYTE(v123) = 30;
    uint64_t v89 = v141;
    swift_bridgeObjectRetain();
    uint64_t v44 = v231;
    sub_254527810();
    uint64_t v231 = v44;
    if (v44)
    {
      (*(void (**)(char *, uint64_t))(v80 + 8))(v8, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v92 = 0;
      uint64_t v97 = 0;
      uint64_t v98 = 0;
      uint64_t v99 = 0;
      uint64_t v103 = 0;
      goto LABEL_24;
    }
    uint64_t v45 = v141;
    LOBYTE(v141) = 31;
    uint64_t v103 = v45;
    swift_bridgeObjectRetain();
    uint64_t v46 = v231;
    int v86 = sub_2545277D0();
    uint64_t v231 = v46;
    if (v46)
    {
      (*(void (**)(char *, uint64_t))(v80 + 8))(v8, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v92 = 0;
      uint64_t v97 = 0;
      uint64_t v98 = 0;
      uint64_t v99 = 0;
      goto LABEL_24;
    }
    LOBYTE(v141) = 32;
    int v84 = sub_2545277D0();
    uint64_t v231 = 0;
    LOBYTE(v141) = 33;
    int v85 = sub_2545277D0();
    uint64_t v231 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B266F08);
    LOBYTE(v123) = 34;
    sub_2544EE040(&qword_26B266F10, &qword_26B266F08, (void (*)(void))sub_2544EE0AC);
    uint64_t v47 = v231;
    sub_254527810();
    uint64_t v231 = v47;
    if (v47)
    {
      (*(void (**)(char *, uint64_t))(v80 + 8))(v8, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v92 = 0;
      uint64_t v97 = 0;
      uint64_t v98 = 0;
      uint64_t v99 = 0;
    }
    else
    {
      uint64_t v48 = v141;
      LOBYTE(v141) = 35;
      uint64_t v99 = v48;
      swift_bridgeObjectRetain();
      uint64_t v49 = v231;
      uint64_t v97 = sub_2545277C0();
      uint64_t v98 = v50;
      uint64_t v231 = v49;
      if (v49)
      {
        (*(void (**)(char *, uint64_t))(v80 + 8))(v8, v5);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v92 = 0;
        uint64_t v97 = 0;
        uint64_t v98 = 0;
      }
      else
      {
        LOBYTE(v141) = 36;
        swift_bridgeObjectRetain();
        uint64_t v51 = v231;
        int v90 = sub_2545277D0();
        uint64_t v231 = v51;
        if (!v51)
        {
          LOBYTE(v123) = 37;
          sub_2544EE100();
          uint64_t v52 = v231;
          sub_254527810();
          uint64_t v231 = v52;
          if (!v52)
          {
            int v83 = v141;
            LOBYTE(v123) = 38;
            sub_254527810();
            uint64_t v231 = 0;
            char v139 = 39;
            uint64_t v92 = v141;
            swift_bridgeObjectRetain();
            uint64_t v53 = v231;
            sub_254527810();
            uint64_t v231 = v53;
            if (!v53)
            {
              (*(void (**)(char *, uint64_t))(v80 + 8))(v8, v5);
              uint64_t v80 = v140;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              BYTE1(v124) = v78;
              BYTE9(v125) = v77;
              BYTE8(v126) = v27 & 1;
              LOBYTE(v129) = v73 & 1;
              LOBYTE(v130) = v72 & 1;
              LOBYTE(v132) = v71 & 1;
              LOBYTE(v134) = v70 & 1;
              long long v123 = v81;
              LOBYTE(v124) = v82;
              *((void *)&v124 + 1) = v113;
              *(void *)&long long v125 = v114;
              BYTE8(v125) = v115;
              BYTE10(v125) = v79;
              BYTE11(v125) = v75;
              BYTE12(v125) = v112;
              BYTE13(v125) = v111;
              BYTE14(v125) = v76;
              *(void *)&long long v126 = v110;
              BYTE9(v126) = v74;
              BYTE10(v126) = v122;
              BYTE11(v126) = v121;
              BYTE12(v126) = v120;
              BYTE13(v126) = v119;
              BYTE14(v126) = v118;
              HIBYTE(v126) = v117;
              LOBYTE(v127) = v102;
              *((void *)&v127 + 1) = v31;
              LOBYTE(v128) = v101;
              BYTE1(v128) = v100;
              *((void *)&v128 + 1) = v109;
              *((void *)&v129 + 1) = v108;
              BYTE1(v130) = v96;
              BYTE2(v130) = v95;
              *((void *)&v130 + 1) = v107;
              *(void *)&long long v131 = v36;
              *((void *)&v131 + 1) = v106;
              uint64_t v54 = v88;
              uint64_t v55 = v89;
              *((void *)&v132 + 1) = v105;
              *(void *)&long long v133 = v88;
              uint64_t v56 = v103;
              *((void *)&v133 + 1) = v104;
              BYTE1(v134) = v94;
              BYTE2(v134) = v93;
              *((void *)&v134 + 1) = v89;
              *(void *)&long long v135 = v103;
              BYTE8(v135) = v86;
              BYTE9(v135) = v84;
              BYTE10(v135) = v85;
              uint64_t v57 = v98;
              uint64_t v58 = v99;
              *(void *)&long long v136 = v99;
              *((void *)&v136 + 1) = v97;
              *(void *)&long long v137 = v98;
              BYTE8(v137) = v90;
              BYTE9(v137) = v83;
              uint64_t v59 = v92;
              *(void *)&long long v138 = v92;
              uint64_t v60 = v80;
              *((void *)&v138 + 1) = v80;
              sub_254493A84((uint64_t)&v123);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              long long v61 = v136;
              a2[12] = v135;
              a2[13] = v61;
              long long v62 = v138;
              a2[14] = v137;
              a2[15] = v62;
              long long v63 = v132;
              a2[8] = v131;
              a2[9] = v63;
              long long v64 = v134;
              a2[10] = v133;
              a2[11] = v64;
              long long v65 = v128;
              a2[4] = v127;
              a2[5] = v65;
              long long v66 = v130;
              a2[6] = v129;
              a2[7] = v66;
              long long v67 = v124;
              *a2 = v123;
              a2[1] = v67;
              long long v68 = v126;
              a2[2] = v125;
              a2[3] = v68;
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v116);
              long long v141 = v81;
              unsigned __int8 v142 = v82;
              uint64_t v146 = v113;
              uint64_t v147 = v114;
              char v148 = v115;
              char v150 = v79;
              char v151 = v75;
              char v152 = v112;
              char v153 = v111;
              char v154 = v76;
              uint64_t v155 = v110;
              char v157 = v74;
              char v158 = v122;
              char v159 = v121;
              char v160 = v120;
              char v161 = v119;
              char v162 = v118;
              unsigned __int8 v143 = v230;
              int v144 = v228;
              __int16 v145 = v229;
              char v149 = v227;
              char v156 = v226;
              char v163 = v117;
              char v164 = v102;
              *(_DWORD *)uint64_t v165 = *(_DWORD *)v225;
              *(_DWORD *)&v165[3] = *(_DWORD *)&v225[3];
              uint64_t v166 = v91;
              char v167 = v101;
              char v168 = v100;
              __int16 v170 = v224;
              int v169 = v223;
              uint64_t v171 = v109;
              char v172 = v222;
              *(_DWORD *)&v173[3] = *(_DWORD *)&v221[3];
              *(_DWORD *)v173 = *(_DWORD *)v221;
              uint64_t v174 = v108;
              char v175 = v220;
              char v176 = v96;
              char v177 = v95;
              int v178 = v218;
              char v179 = v219;
              uint64_t v180 = v107;
              uint64_t v181 = v87;
              uint64_t v182 = v106;
              char v183 = v217;
              *(_DWORD *)&v184[3] = *(_DWORD *)&v216[3];
              *(_DWORD *)v184 = *(_DWORD *)v216;
              uint64_t v185 = v105;
              uint64_t v186 = v54;
              uint64_t v187 = v104;
              char v188 = v215;
              char v189 = v94;
              char v190 = v93;
              char v192 = v214;
              int v191 = v213;
              uint64_t v193 = v55;
              uint64_t v194 = v56;
              char v195 = v86;
              char v196 = v84;
              char v197 = v85;
              char v199 = v212;
              int v198 = v211;
              uint64_t v200 = v58;
              uint64_t v201 = v97;
              uint64_t v202 = v57;
              char v203 = v90;
              char v204 = v83;
              __int16 v206 = v210;
              int v205 = v209;
              uint64_t v207 = v59;
              uint64_t v208 = v60;
              return sub_254493BD8((uint64_t)&v141);
            }
            (*(void (**)(char *, uint64_t))(v80 + 8))(v8, v5);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_11;
          }
          (*(void (**)(char *, uint64_t))(v80 + 8))(v8, v5);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v92 = 0;
          goto LABEL_32;
        }
        (*(void (**)(char *, uint64_t))(v80 + 8))(v8, v5);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v92 = 0;
      }
    }
    int v90 = 2;
LABEL_32:
    int v83 = 8;
    goto LABEL_11;
  }
  uint64_t v231 = v2;
  uint64_t v91 = 0;
  uint64_t v92 = 0;
  uint64_t v97 = 0;
  uint64_t v98 = 0;
  uint64_t v99 = 0;
  uint64_t v103 = 0;
  uint64_t v104 = 0;
  uint64_t v88 = 0;
  uint64_t v89 = 0;
  uint64_t v105 = 0;
  uint64_t v106 = 0;
  uint64_t v87 = 0;
  uint64_t v107 = 0;
  uint64_t v108 = 0;
  uint64_t v109 = 0;
  uint64_t v110 = 0;
  int v115 = 0;
  uint64_t v113 = 0;
  uint64_t v114 = 0;
  unsigned __int8 v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  int v112 = 4;
  int v111 = 5;
  int v90 = 2;
  int v85 = 2;
  int v86 = 2;
  int v83 = 8;
  int v84 = 2;
  int v93 = 2;
  int v94 = 2;
  int v95 = 2;
  int v96 = 2;
  int v100 = 2;
  int v101 = 2;
  int v102 = 2;
  int v117 = 2;
  int v118 = 2;
  int v119 = 2;
  int v120 = 2;
  int v121 = 2;
  int v122 = 2;
  char v13 = 2;
  char v14 = 2;
  char v15 = 2;
  char v16 = 2;
LABEL_4:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v116);
  *(void *)&long long v141 = v12;
  *((void *)&v141 + 1) = v11;
  unsigned __int8 v142 = v10;
  uint64_t v146 = v113;
  uint64_t v147 = v114;
  char v148 = v115;
  char v150 = v16;
  char v151 = v15;
  char v152 = v112;
  char v153 = v111;
  char v154 = v14;
  uint64_t v155 = v110;
  char v157 = v13;
  char v158 = v122;
  char v159 = v121;
  char v160 = v120;
  char v161 = v119;
  unsigned __int8 v143 = v230;
  int v144 = v228;
  __int16 v145 = v229;
  char v149 = v227;
  char v156 = v226;
  char v162 = v118;
  char v163 = v117;
  char v164 = v102;
  *(_DWORD *)uint64_t v165 = *(_DWORD *)v225;
  *(_DWORD *)&v165[3] = *(_DWORD *)&v225[3];
  uint64_t v166 = v91;
  char v167 = v101;
  char v168 = v100;
  __int16 v170 = v224;
  int v169 = v223;
  uint64_t v171 = v109;
  char v172 = v222;
  *(_DWORD *)&v173[3] = *(_DWORD *)&v221[3];
  *(_DWORD *)v173 = *(_DWORD *)v221;
  uint64_t v174 = v108;
  char v175 = v220;
  char v176 = v96;
  char v177 = v95;
  int v178 = v218;
  char v179 = v219;
  uint64_t v180 = v107;
  uint64_t v181 = v87;
  uint64_t v182 = v106;
  char v183 = v217;
  *(_DWORD *)&v184[3] = *(_DWORD *)&v216[3];
  *(_DWORD *)v184 = *(_DWORD *)v216;
  uint64_t v185 = v105;
  uint64_t v186 = v88;
  uint64_t v187 = v104;
  char v188 = v215;
  char v189 = v94;
  char v190 = v93;
  char v192 = v214;
  int v191 = v213;
  uint64_t v193 = v89;
  uint64_t v194 = v103;
  char v195 = v86;
  char v196 = v84;
  char v197 = v85;
  char v199 = v212;
  int v198 = v211;
  uint64_t v200 = v99;
  uint64_t v201 = v97;
  uint64_t v202 = v98;
  char v203 = v90;
  char v204 = v83;
  __int16 v206 = v210;
  int v205 = v209;
  uint64_t v207 = v92;
  uint64_t v208 = 0;
  return sub_254493BD8((uint64_t)&v141);
}

unint64_t sub_2544EDE9C()
{
  unint64_t result = qword_26B266ED0;
  if (!qword_26B266ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B266ED0);
  }
  return result;
}

unint64_t sub_2544EDEF0()
{
  unint64_t result = qword_26B266EE8;
  if (!qword_26B266EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B266EE8);
  }
  return result;
}

unint64_t sub_2544EDF44()
{
  unint64_t result = qword_26B266EB0;
  if (!qword_26B266EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B266EB0);
  }
  return result;
}

unint64_t sub_2544EDF98()
{
  unint64_t result = qword_26B266EF0;
  if (!qword_26B266EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B266EF0);
  }
  return result;
}

unint64_t sub_2544EDFEC()
{
  unint64_t result = qword_26B266ED8;
  if (!qword_26B266ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B266ED8);
  }
  return result;
}

uint64_t sub_2544EE040(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2544EE0AC()
{
  unint64_t result = qword_26B266EA8;
  if (!qword_26B266EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B266EA8);
  }
  return result;
}

unint64_t sub_2544EE100()
{
  unint64_t result = qword_26B266EE0;
  if (!qword_26B266EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B266EE0);
  }
  return result;
}

uint64_t sub_2544EE154@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return TaskRequest.init(from:)(a1, a2);
}

uint64_t sub_2544EE16C(void *a1)
{
  return TaskRequest.encode(to:)(a1);
}

uint64_t TaskRequest.description.getter()
{
  uint64_t v1 = sub_254527AE0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v5 = v0[13];
  v26[12] = v0[12];
  v26[13] = v5;
  long long v6 = v0[15];
  v26[14] = v0[14];
  v26[15] = v6;
  long long v7 = v0[9];
  v26[8] = v0[8];
  v26[9] = v7;
  long long v8 = v0[11];
  v26[10] = v0[10];
  v26[11] = v8;
  long long v9 = v0[5];
  v26[4] = v0[4];
  v26[5] = v9;
  long long v10 = v0[7];
  v26[6] = v0[6];
  v26[7] = v10;
  long long v11 = v0[1];
  v26[0] = *v0;
  v26[1] = v11;
  long long v12 = v0[3];
  _OWORD v26[2] = v0[2];
  uint64_t v26[3] = v12;
  v25[3] = &type metadata for TaskRequest;
  char v13 = (_OWORD *)swift_allocObject();
  v25[0] = v13;
  long long v14 = v0[13];
  v13[13] = v0[12];
  v13[14] = v14;
  long long v15 = v0[15];
  v13[15] = v0[14];
  v13[16] = v15;
  long long v16 = v0[9];
  v13[9] = v0[8];
  v13[10] = v16;
  long long v17 = v0[11];
  v13[11] = v0[10];
  v13[12] = v17;
  long long v18 = v0[5];
  v13[5] = v0[4];
  v13[6] = v18;
  long long v19 = v0[7];
  v13[7] = v0[6];
  v13[8] = v19;
  long long v20 = v0[1];
  v13[1] = *v0;
  v13[2] = v20;
  long long v21 = v0[3];
  v13[3] = v0[2];
  v13[4] = v21;
  sub_254493A84((uint64_t)v26);
  sub_254527AC0();
  sub_254527AD0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  int v22 = sub_2544BE18C();
  swift_release();
  strcpy((char *)v25, "TaskRequest(");
  BYTE5(v25[1]) = 0;
  HIWORD(v25[1]) = -5120;
  int v24 = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B266BC0);
  sub_25448FFD4(&qword_26B266BD0, &qword_26B266BC0);
  sub_254526F70();
  swift_bridgeObjectRelease();
  sub_254527080();
  swift_bridgeObjectRelease();
  sub_254527080();
  return v25[0];
}

uint64_t sub_2544EE3D8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 272, 7);
}

unint64_t sub_2544EE454()
{
  unint64_t result = qword_269DF4658;
  if (!qword_269DF4658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4658);
  }
  return result;
}

uint64_t sub_2544EE4A8()
{
  return sub_25448FFD4(&qword_269DF4660, &qword_269DF4668);
}

unint64_t sub_2544EE4E8()
{
  unint64_t result = qword_269DF4670;
  if (!qword_269DF4670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4670);
  }
  return result;
}

uint64_t sub_2544EE53C()
{
  return sub_25448FFD4(&qword_269DF4678, &qword_269DF4680);
}

unint64_t sub_2544EE57C()
{
  unint64_t result = qword_269DF4688;
  if (!qword_269DF4688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4688);
  }
  return result;
}

uint64_t sub_2544EE5D0()
{
  return sub_25448FFD4(&qword_269DF4690, &qword_269DF4698);
}

unint64_t sub_2544EE610()
{
  unint64_t result = qword_269DF46A0;
  if (!qword_269DF46A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF46A0);
  }
  return result;
}

uint64_t sub_2544EE664()
{
  return sub_25448FFD4(&qword_269DF46A8, &qword_26B266F18);
}

unint64_t sub_2544EE6A4()
{
  unint64_t result = qword_269DF46B0;
  if (!qword_269DF46B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF46B0);
  }
  return result;
}

uint64_t sub_2544EE6F8()
{
  return sub_25448FFD4(&qword_269DF46B8, &qword_26B266F08);
}

unsigned char *storeEnumTagSinglePayload for TaskRequestPriority(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2544EE804);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TaskRequestPriority()
{
  return &type metadata for TaskRequestPriority;
}

ValueMetadata *type metadata accessor for TaskRequestProtectionClass()
{
  return &type metadata for TaskRequestProtectionClass;
}

unsigned char *storeEnumTagSinglePayload for TaskRequestMotionState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2544EE920);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TaskRequestMotionState()
{
  return &type metadata for TaskRequestMotionState;
}

unsigned char *_s20LighthouseBackground26TaskRequestProtectionClassOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2544EEA24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TaskRequestResources()
{
  return &type metadata for TaskRequestResources;
}

unsigned char *storeEnumTagSinglePayload for TaskRequestDevice(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2544EEB28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TaskRequestDevice()
{
  return &type metadata for TaskRequestDevice;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for RepeatingTaskRequest(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for RepeatingTaskRequest(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

ValueMetadata *type metadata accessor for RepeatingTaskRequest()
{
  return &type metadata for RepeatingTaskRequest;
}

ValueMetadata *type metadata accessor for NonRepeatingTaskRequest()
{
  return &type metadata for NonRepeatingTaskRequest;
}

uint64_t destroy for TaskRequest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TaskRequest(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(_DWORD *)(a1 + 42) = *(_DWORD *)(a2 + 42);
  *(unsigned char *)(a1 + 46) = *(unsigned char *)(a2 + 46);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 57) = *(void *)(a2 + 57);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
  *(unsigned char *)(a1 + 114) = *(unsigned char *)(a2 + 114);
  uint64_t v3 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v3;
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  uint64_t v4 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v4;
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(_WORD *)(a1 + 177) = *(_WORD *)(a2 + 177);
  uint64_t v5 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v5;
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(_WORD *)(a1 + 201) = *(_WORD *)(a2 + 201);
  uint64_t v6 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v6;
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(_WORD *)(a1 + 232) = *(_WORD *)(a2 + 232);
  uint64_t v7 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TaskRequest(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
  *(_OWORD *)a1 = v4;
  long long v5 = *(long long *)((char *)a2 + 24);
  *(_WORD *)(a1 + 40) = *((_WORD *)a2 + 20);
  *(_OWORD *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 42) = *((unsigned char *)a2 + 42);
  *(unsigned char *)(a1 + 43) = *((unsigned char *)a2 + 43);
  *(unsigned char *)(a1 + 44) = *((unsigned char *)a2 + 44);
  *(unsigned char *)(a1 + 45) = *((unsigned char *)a2 + 45);
  *(unsigned char *)(a1 + 46) = *((unsigned char *)a2 + 46);
  uint64_t v6 = *((void *)a2 + 6);
  *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
  *(void *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 57) = *((unsigned char *)a2 + 57);
  *(unsigned char *)(a1 + 58) = *((unsigned char *)a2 + 58);
  *(unsigned char *)(a1 + 59) = *((unsigned char *)a2 + 59);
  *(unsigned char *)(a1 + 60) = *((unsigned char *)a2 + 60);
  *(unsigned char *)(a1 + 61) = *((unsigned char *)a2 + 61);
  *(unsigned char *)(a1 + 62) = *((unsigned char *)a2 + 62);
  *(unsigned char *)(a1 + 63) = *((unsigned char *)a2 + 63);
  *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
  *(unsigned char *)(a1 + 81) = *((unsigned char *)a2 + 81);
  uint64_t v7 = *((void *)a2 + 11);
  *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
  *(void *)(a1 + 88) = v7;
  uint64_t v8 = *((void *)a2 + 13);
  *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
  *(void *)(a1 + 104) = v8;
  *(unsigned char *)(a1 + 113) = *((unsigned char *)a2 + 113);
  *(unsigned char *)(a1 + 114) = *((unsigned char *)a2 + 114);
  *(void *)(a1 + 120) = *((void *)a2 + 15);
  *(void *)(a1 + 128) = *((void *)a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *((void *)a2 + 17);
  *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
  *(void *)(a1 + 136) = v9;
  *(void *)(a1 + 152) = *((void *)a2 + 19);
  *(void *)(a1 + 160) = *((void *)a2 + 20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *((void *)a2 + 21);
  *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
  *(void *)(a1 + 168) = v10;
  *(unsigned char *)(a1 + 177) = *((unsigned char *)a2 + 177);
  *(unsigned char *)(a1 + 178) = *((unsigned char *)a2 + 178);
  *(void *)(a1 + 184) = *((void *)a2 + 23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = *((void *)a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 200) = *((unsigned char *)a2 + 200);
  *(unsigned char *)(a1 + 201) = *((unsigned char *)a2 + 201);
  *(unsigned char *)(a1 + 202) = *((unsigned char *)a2 + 202);
  *(void *)(a1 + 208) = *((void *)a2 + 26);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 216) = *((void *)a2 + 27);
  *(void *)(a1 + 224) = *((void *)a2 + 28);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 232) = *((unsigned char *)a2 + 232);
  *(unsigned char *)(a1 + 233) = *((unsigned char *)a2 + 233);
  *(void *)(a1 + 240) = *((void *)a2 + 30);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 248) = *((void *)a2 + 31);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy256_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  long long v8 = a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  __n128 result = (__n128)a2[12];
  long long v12 = a2[13];
  long long v13 = a2[15];
  *(_OWORD *)(a1 + 224) = a2[14];
  *(_OWORD *)(a1 + 240) = v13;
  *(__n128 *)(a1 + 192) = result;
  *(_OWORD *)(a1 + 208) = v12;
  return result;
}

uint64_t assignWithTake for TaskRequest(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(_DWORD *)(a1 + 42) = *(_DWORD *)(a2 + 42);
  *(unsigned char *)(a1 + 46) = *(unsigned char *)(a2 + 46);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 57) = *(void *)(a2 + 57);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(_WORD *)(a1 + 113) = *(_WORD *)(a2 + 113);
  uint64_t v4 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  uint64_t v5 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(_WORD *)(a1 + 177) = *(_WORD *)(a2 + 177);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(_WORD *)(a1 + 201) = *(_WORD *)(a2 + 201);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v6;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 232) = *(_WORD *)(a2 + 232);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TaskRequest(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 256)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 72);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TaskRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 248) = 0;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 256) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 256) = 0;
    }
    if (a2) {
      *(void *)(result + 72) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TaskRequest()
{
  return &type metadata for TaskRequest;
}

uint64_t getEnumTagSinglePayload for TaskRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xD9) {
    goto LABEL_17;
  }
  if (a2 + 39 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 39) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 39;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 39;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 39;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x28;
  int v8 = v6 - 40;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TaskRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 39 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 39) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xD9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD8)
  {
    unsigned int v6 = ((a2 - 217) >> 8) + 1;
    *__n128 result = a2 + 39;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2544EF41CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 39;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TaskRequest.CodingKeys()
{
  return &type metadata for TaskRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for NonRepeatingTaskRequest.CodingKeys()
{
  return &type metadata for NonRepeatingTaskRequest.CodingKeys;
}

unsigned char *_s20LighthouseBackground23NonRepeatingTaskRequestV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2544EF534);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RepeatingTaskRequest.CodingKeys()
{
  return &type metadata for RepeatingTaskRequest.CodingKeys;
}

unint64_t sub_2544EF570()
{
  unint64_t result = qword_269DF46C0;
  if (!qword_269DF46C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF46C0);
  }
  return result;
}

unint64_t sub_2544EF5C8()
{
  unint64_t result = qword_269DF46C8;
  if (!qword_269DF46C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF46C8);
  }
  return result;
}

unint64_t sub_2544EF620()
{
  unint64_t result = qword_269DF46D0;
  if (!qword_269DF46D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF46D0);
  }
  return result;
}

unint64_t sub_2544EF678()
{
  unint64_t result = qword_26B266E90;
  if (!qword_26B266E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B266E90);
  }
  return result;
}

unint64_t sub_2544EF6D0()
{
  unint64_t result = qword_26B266E88;
  if (!qword_26B266E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B266E88);
  }
  return result;
}

unint64_t sub_2544EF728()
{
  unint64_t result = qword_269DF46D8;
  if (!qword_269DF46D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF46D8);
  }
  return result;
}

unint64_t sub_2544EF780()
{
  unint64_t result = qword_269DF46E0;
  if (!qword_269DF46E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF46E0);
  }
  return result;
}

unint64_t sub_2544EF7D8()
{
  unint64_t result = qword_26B266EC8;
  if (!qword_26B266EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B266EC8);
  }
  return result;
}

unint64_t sub_2544EF830()
{
  unint64_t result = qword_26B266EC0;
  if (!qword_26B266EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B266EC0);
  }
  return result;
}

uint64_t sub_2544EF884(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6C61767265746E69 && a2 == 0xE800000000000000;
  if (v3 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000254533BB0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2545279E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2544EF96C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x656C756465686373 && a2 == 0xED00007265746641;
  if (v3 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000254533BD0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2545279E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2544EFA6C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6E69746165706572 && a2 == 0xED00006B73615467;
  if (v3 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000254533BF0 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000254533C10 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000254533C30 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x797469726F697270 && a2 == 0xE800000000000000 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000254533C50 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000254533C70 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000254533C90 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x74736E4974736F70 && a2 == 0xEB000000006C6C61 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000026 && a2 == 0x8000000254533CB0 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000028 && a2 == 0x8000000254533CE0 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6572666552707061 && a2 == 0xEA00000000006873 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000254533D10 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x8000000254533D30 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x70614E7265776F70 && a2 == 0xE800000000000000 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000254533D60 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x656372756F736572 && a2 == 0xE900000000000073 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x6F6F62655279616DLL && a2 == 0xEF65636976654474 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000254533D80 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000254533DA0 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000254533DC0 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000254533DE0 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000254533E00 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x6D614E70756F7267 && a2 == 0xE900000000000065 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000254533E20 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000254533E40 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000254533E60 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0x6475427265776F70 && a2 == 0xED00006465746567 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0x6764754261746164 && a2 == 0xEC00000064657465 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000254533E80 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000254533EA0 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000254533EC0 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000254533EE0 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 32;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000254533F00 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 33;
  }
  else if (a1 == 0x6544746567726174 && a2 == 0xEC00000065636976 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 34;
  }
  else if (a1 == 0x654465746F6D6572 && a2 == 0xEC00000065636976 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 35;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000254533F20 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 36;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000254533F40 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 37;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000254533F60 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 38;
  }
  else if (a1 == 0x6E65646E65706564 && a2 == 0xEC00000073656963)
  {
    swift_bridgeObjectRelease();
    return 39;
  }
  else
  {
    char v6 = sub_2545279E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 39;
    }
    else {
      return 40;
    }
  }
}

unint64_t sub_2544F08F0()
{
  unint64_t result = qword_269DF46E8;
  if (!qword_269DF46E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF46E8);
  }
  return result;
}

unint64_t sub_2544F0944()
{
  unint64_t result = qword_269DF46F0;
  if (!qword_269DF46F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF46F0);
  }
  return result;
}

unint64_t sub_2544F0998()
{
  unint64_t result = qword_269DF46F8;
  if (!qword_269DF46F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF46F8);
  }
  return result;
}

unint64_t sub_2544F09EC()
{
  unint64_t result = qword_26B266F40;
  if (!qword_26B266F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B266F40);
  }
  return result;
}

unint64_t sub_2544F0A40()
{
  unint64_t result = qword_26B266F38;
  if (!qword_26B266F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B266F38);
  }
  return result;
}

uint64_t sub_2544F0AB0()
{
  return 0;
}

uint64_t MLHostAnalytics.stateCountMap.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MLHostAnalytics.stateCountMap.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*MLHostAnalytics.stateCountMap.modify())()
{
  return nullsub_1;
}

uint64_t MLHostAnalytics.transitionStatsMap.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MLHostAnalytics.transitionStatsMap.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*MLHostAnalytics.transitionStatsMap.modify())()
{
  return nullsub_1;
}

uint64_t MLHostAnalytics.firstValidState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MLHostAnalytics() + 24);

  return sub_2544F0D04(v3, a1);
}

uint64_t type metadata accessor for MLHostAnalytics()
{
  uint64_t result = qword_269DF4730;
  if (!qword_269DF4730) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2544F0D04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t MLHostAnalytics.firstValidState.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MLHostAnalytics() + 24);

  return sub_2544F0DB0(a1, v3);
}

uint64_t sub_2544F0DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*MLHostAnalytics.firstValidState.modify())()
{
  return nullsub_1;
}

uint64_t MLHostAnalytics.latestValidState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MLHostAnalytics() + 28);

  return sub_2544F0D04(v3, a1);
}

uint64_t MLHostAnalytics.latestValidState.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MLHostAnalytics() + 28);

  return sub_2544F0DB0(a1, v3);
}

uint64_t (*MLHostAnalytics.latestValidState.modify())()
{
  return nullsub_1;
}

uint64_t MLHostAnalytics.init()@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v2 = MEMORY[0x263F8EE78];
  *a1 = sub_2544A5538(MEMORY[0x263F8EE78]);
  a1[1] = sub_2544A564C(v2);
  uint64_t v3 = type metadata accessor for MLHostAnalytics();
  uint64_t v4 = (char *)a1 + *(int *)(v3 + 24);
  uint64_t v5 = type metadata accessor for LedgerState();
  int v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  ((void (*)(void *__return_ptr, char *, uint64_t, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, 1, 1, v5);
  char v6 = (char *)a1 + *(int *)(v3 + 28);

  return v8(v6, 1, 1, v5);
}

double MLHostAnalytics.completionLatency.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  double v2 = -1.0;
  if (*(void *)(v1 + 16))
  {
    unint64_t v3 = sub_2544B9A98(0x676E696E6E7552, 0xE700000000000000, 0x6574656C706D6F43, 0xE900000000000064);
    if (v4) {
      return *(double *)(*(void *)(v1 + 56) + 32 * v3 + 16);
    }
  }
  return v2;
}

double MLHostAnalytics.failureLatency.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  double v2 = -1.0;
  if (*(void *)(v1 + 16))
  {
    unint64_t v3 = sub_2544B9A98(0x676E696E6E7552, 0xE700000000000000, 0x64656C696146, 0xE600000000000000);
    if (v4) {
      return *(double *)(*(void *)(v1 + 56) + 32 * v3 + 16);
    }
  }
  return v2;
}

unint64_t sub_2544F10F8(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      return result;
    case 2:
      unint64_t result = 0x6C61567473726966;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      unint64_t result = 0x756F436574617473;
      break;
  }
  return result;
}

unint64_t sub_2544F11B0()
{
  return sub_2544F10F8(*v0);
}

uint64_t sub_2544F11B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544F3230(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2544F11E0(uint64_t a1)
{
  unint64_t v2 = sub_2544F1B78();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544F121C(uint64_t a1)
{
  unint64_t v2 = sub_2544F1B78();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MLHostAnalytics.encode(to:)(void *a1)
{
  unint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4700);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544F1B78();
  sub_254527B00();
  uint64_t v12 = *v3;
  char v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF36A0);
  sub_2544A7C5C(&qword_269DF36A8);
  sub_254527970();
  if (!v2)
  {
    uint64_t v12 = v3[1];
    char v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF36B0);
    sub_2544A7CC4(&qword_269DF36B8, (void (*)(void))sub_25448E1CC, (void (*)(void))sub_2544A74B0);
    sub_254527970();
    type metadata accessor for MLHostAnalytics();
    LOBYTE(v12) = 2;
    type metadata accessor for LedgerState();
    sub_2544F1CDC(&qword_269DF3240, (void (*)(uint64_t))type metadata accessor for LedgerState);
    sub_254527910();
    LOBYTE(v12) = 3;
    sub_254527910();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t MLHostAnalytics.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v31 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v36 = (char *)&v27 - v6;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4710);
  uint64_t v35 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  int v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MLHostAnalytics();
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (unint64_t *)((char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = MEMORY[0x263F8EE78];
  unint64_t v34 = sub_2544A5538(MEMORY[0x263F8EE78]);
  *uint64_t v12 = v34;
  unint64_t v33 = sub_2544A564C(v13);
  v12[1] = v33;
  uint64_t v14 = (uint64_t)v12 + *(int *)(v10 + 32);
  uint64_t v15 = type metadata accessor for LedgerState();
  long long v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  v16(v14, 1, 1, v15);
  uint64_t v17 = (uint64_t)v12 + *(int *)(v10 + 36);
  v16(v17, 1, 1, v15);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544F1B78();
  int v38 = v8;
  long long v18 = v39;
  sub_254527AF0();
  if (!v18)
  {
    uint64_t v39 = v12;
    uint64_t v29 = v17;
    uint64_t v30 = v15;
    uint64_t v28 = v14;
    uint64_t v19 = v35;
    uint64_t v20 = (uint64_t)v36;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF36A0);
    char v40 = 0;
    sub_2544A7C5C(&qword_269DF36D0);
    uint64_t v21 = v37;
    sub_254527870();
    swift_bridgeObjectRelease();
    int v22 = v39;
    *uint64_t v39 = v41;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF36B0);
    char v40 = 1;
    sub_2544A7CC4(&qword_269DF36D8, (void (*)(void))sub_25448E178, (void (*)(void))sub_2544A7D4C);
    sub_254527870();
    swift_bridgeObjectRelease();
    v22[1] = v41;
    LOBYTE(v41) = 2;
    sub_2544F1CDC(&qword_269DF3238, (void (*)(uint64_t))type metadata accessor for LedgerState);
    sub_254527810();
    sub_2544F0DB0(v20, v28);
    LOBYTE(v41) = 3;
    uint64_t v24 = (uint64_t)v31;
    uint64_t v25 = v38;
    sub_254527810();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v25, v21);
    uint64_t v26 = v32;
    uint64_t v12 = v39;
    sub_2544F0DB0(v24, v29);
    sub_2544F1BCC((uint64_t)v12, v26);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_2544F27A8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for MLHostAnalytics);
}

uint64_t sub_2544F1A20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2544F0D04(v2 + *(int *)(a1 + 24), a2);
}

uint64_t sub_2544F1A30(uint64_t a1, uint64_t a2)
{
  return sub_2544F0DB0(a1, v2 + *(int *)(a2 + 24));
}

uint64_t sub_2544F1A3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2544F0D04(v2 + *(int *)(a1 + 28), a2);
}

uint64_t sub_2544F1A4C(uint64_t a1, uint64_t a2)
{
  return sub_2544F0DB0(a1, v2 + *(int *)(a2 + 28));
}

uint64_t sub_2544F1A58@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v4 = MEMORY[0x263F8EE78];
  *a2 = sub_2544A5538(MEMORY[0x263F8EE78]);
  a2[1] = sub_2544A564C(v4);
  uint64_t v5 = (char *)a2 + *(int *)(a1 + 24);
  uint64_t v6 = type metadata accessor for LedgerState();
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  ((void (*)(void *__return_ptr, char *, uint64_t, uint64_t, uint64_t))v9)((void *)(v6 - 8), v5, 1, 1, v6);
  uint64_t v7 = (char *)a2 + *(int *)(a1 + 28);

  return v9(v7, 1, 1, v6);
}

uint64_t sub_2544F1B30()
{
  return sub_2544F0AB0();
}

uint64_t sub_2544F1B48@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MLHostAnalytics.init(from:)(a1, a2);
}

uint64_t sub_2544F1B60(void *a1)
{
  return MLHostAnalytics.encode(to:)(a1);
}

unint64_t sub_2544F1B78()
{
  unint64_t result = qword_269DF4708;
  if (!qword_269DF4708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4708);
  }
  return result;
}

uint64_t sub_2544F1BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MLHostAnalytics();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2544F1C30(void *a1)
{
  a1[1] = sub_2544F1CDC(&qword_269DF4718, (void (*)(uint64_t))type metadata accessor for MLHostAnalytics);
  a1[2] = sub_2544F1CDC(&qword_269DF4720, (void (*)(uint64_t))type metadata accessor for MLHostAnalytics);
  uint64_t result = sub_2544F1CDC(&qword_269DF4728, (void (*)(uint64_t))type metadata accessor for MLHostAnalytics);
  a1[3] = result;
  return result;
}

uint64_t sub_2544F1CDC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for MLHostAnalytics(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    a1[1] = a2[1];
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for LedgerState();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(void, void, void))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      unint64_t v33 = v13;
      uint64_t v15 = v10[1];
      *uint64_t v9 = *v10;
      v9[1] = v15;
      uint64_t v16 = *(int *)(v11 + 20);
      uint64_t v31 = (char *)v10 + v16;
      uint64_t v32 = (char *)v9 + v16;
      uint64_t v34 = v12;
      uint64_t v17 = sub_254526D90();
      long long v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      uint64_t v13 = v33;
      swift_bridgeObjectRetain();
      uint64_t v19 = v17;
      uint64_t v12 = v34;
      v18(v32, v31, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v9, 0, 1, v11);
    }
    uint64_t v20 = *(int *)(a3 + 28);
    uint64_t v21 = (uint64_t *)((char *)v7 + v20);
    int v22 = (uint64_t *)((char *)a2 + v20);
    if (v13(v22, 1, v11))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      uint64_t v24 = v22[1];
      *uint64_t v21 = *v22;
      v21[1] = v24;
      uint64_t v25 = *(int *)(v11 + 20);
      uint64_t v26 = (char *)v21 + v25;
      uint64_t v27 = (char *)v22 + v25;
      uint64_t v28 = sub_254526D90();
      uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
      swift_bridgeObjectRetain();
      v29(v26, v27, v28);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v21, 0, 1, v11);
    }
  }
  return v7;
}

uint64_t destroy for MLHostAnalytics(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for LedgerState();
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  if (!v6(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = v4 + *(int *)(v5 + 20);
    uint64_t v8 = sub_254526D90();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  uint64_t v9 = a1 + *(int *)(a2 + 28);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v9, 1, v5);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = v9 + *(int *)(v5 + 20);
    uint64_t v12 = sub_254526D90();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
    return v13(v11, v12);
  }
  return result;
}

void *initializeWithCopy for MLHostAnalytics(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for LedgerState();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(void, void, void))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v32 = v12;
    uint64_t v14 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v14;
    uint64_t v15 = *(int *)(v10 + 20);
    uint64_t v30 = (char *)v9 + v15;
    uint64_t v31 = (char *)v8 + v15;
    uint64_t v33 = v11;
    uint64_t v16 = sub_254526D90();
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    uint64_t v12 = v32;
    swift_bridgeObjectRetain();
    uint64_t v18 = v16;
    uint64_t v11 = v33;
    v17(v31, v30, v18);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v8, 0, 1, v10);
  }
  uint64_t v19 = *(int *)(a3 + 28);
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  if (v12(v21, 1, v10))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    uint64_t v23 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v23;
    uint64_t v24 = *(int *)(v10 + 20);
    uint64_t v25 = (char *)v20 + v24;
    uint64_t v26 = (char *)v21 + v24;
    uint64_t v27 = sub_254526D90();
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
    swift_bridgeObjectRetain();
    v28(v25, v26, v27);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v20, 0, 1, v10);
  }
  return a1;
}

void *assignWithCopy for MLHostAnalytics(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for LedgerState();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      void *v7 = *v8;
      v7[1] = v8[1];
      uint64_t v14 = *(int *)(v9 + 20);
      uint64_t v39 = (char *)v8 + v14;
      char v40 = (char *)v7 + v14;
      uint64_t v41 = v10;
      uint64_t v15 = sub_254526D90();
      int v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v16 = v15;
      uint64_t v10 = v41;
      v38(v40, v39, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_2544F27A8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for LedgerState);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
    memcpy(v7, v8, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  void *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = *(int *)(v9 + 20);
  uint64_t v31 = (char *)v7 + v30;
  uint64_t v32 = (char *)v8 + v30;
  uint64_t v33 = sub_254526D90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 24))(v31, v32, v33);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 28);
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  int v21 = v11((void *)((char *)a1 + v18), 1, v9);
  int v22 = v11(v20, 1, v9);
  if (!v21)
  {
    if (!v22)
    {
      *uint64_t v19 = *v20;
      v19[1] = v20[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v34 = *(int *)(v9 + 20);
      uint64_t v35 = (char *)v19 + v34;
      uint64_t v36 = (char *)v20 + v34;
      uint64_t v37 = sub_254526D90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 24))(v35, v36, v37);
      return a1;
    }
    sub_2544F27A8((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for LedgerState);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
    memcpy(v19, v20, *(void *)(*(void *)(v28 - 8) + 64));
    return a1;
  }
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  uint64_t v23 = *(int *)(v9 + 20);
  uint64_t v24 = (char *)v19 + v23;
  uint64_t v25 = (char *)v20 + v23;
  uint64_t v26 = sub_254526D90();
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
  swift_bridgeObjectRetain();
  v27(v24, v25, v26);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
  return a1;
}

uint64_t sub_2544F27A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *initializeWithTake for MLHostAnalytics(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (_OWORD *)((char *)a1 + v6);
  uint64_t v8 = (_OWORD *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for LedgerState();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    _OWORD *v7 = *v8;
    uint64_t v13 = *(int *)(v9 + 20);
    uint64_t v14 = (char *)v7 + v13;
    uint64_t v15 = (char *)v8 + v13;
    uint64_t v16 = sub_254526D90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v17 = *(int *)(a3 + 28);
  uint64_t v18 = (_OWORD *)((char *)a1 + v17);
  uint64_t v19 = (_OWORD *)((char *)a2 + v17);
  if (v11(v19, 1, v9))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    *uint64_t v18 = *v19;
    uint64_t v21 = *(int *)(v9 + 20);
    int v22 = (char *)v18 + v21;
    uint64_t v23 = (char *)v19 + v21;
    uint64_t v24 = sub_254526D90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
  }
  return a1;
}

void *assignWithTake for MLHostAnalytics(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for LedgerState();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
      uint64_t v14 = *(int *)(v9 + 20);
      uint64_t v15 = (char *)v7 + v14;
      uint64_t v16 = (char *)v8 + v14;
      uint64_t v17 = sub_254526D90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_2544F27A8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for LedgerState);
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
    memcpy(v7, v8, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v30 = v8[1];
  void *v7 = *v8;
  v7[1] = v30;
  swift_bridgeObjectRelease();
  uint64_t v31 = *(int *)(v9 + 20);
  uint64_t v32 = (char *)v7 + v31;
  uint64_t v33 = (char *)v8 + v31;
  uint64_t v34 = sub_254526D90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
LABEL_7:
  uint64_t v19 = *(int *)(a3 + 28);
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  int v22 = v11((void *)((char *)a1 + v19), 1, v9);
  int v23 = v11(v21, 1, v9);
  if (!v22)
  {
    if (!v23)
    {
      uint64_t v35 = v21[1];
      *uint64_t v20 = *v21;
      v20[1] = v35;
      swift_bridgeObjectRelease();
      uint64_t v36 = *(int *)(v9 + 20);
      uint64_t v37 = (char *)v20 + v36;
      int v38 = (char *)v21 + v36;
      uint64_t v39 = sub_254526D90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 40))(v37, v38, v39);
      return a1;
    }
    sub_2544F27A8((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for LedgerState);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
    memcpy(v20, v21, *(void *)(*(void *)(v28 - 8) + 64));
    return a1;
  }
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  uint64_t v24 = *(int *)(v9 + 20);
  uint64_t v25 = (char *)v20 + v24;
  uint64_t v26 = (char *)v21 + v24;
  uint64_t v27 = sub_254526D90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v20, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for MLHostAnalytics(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2544F2DBC);
}

uint64_t sub_2544F2DBC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for MLHostAnalytics(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2544F2E84);
}

void *sub_2544F2E84(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_2544F2F30()
{
  sub_2544F2FCC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_2544F2FCC()
{
  if (!qword_269DF3720)
  {
    type metadata accessor for LedgerState();
    unint64_t v0 = sub_2545274E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269DF3720);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for MLHostAnalytics.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2544F30F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MLHostAnalytics.CodingKeys()
{
  return &type metadata for MLHostAnalytics.CodingKeys;
}

unint64_t sub_2544F312C()
{
  unint64_t result = qword_269DF4740;
  if (!qword_269DF4740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4740);
  }
  return result;
}

unint64_t sub_2544F3184()
{
  unint64_t result = qword_269DF4748;
  if (!qword_269DF4748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4748);
  }
  return result;
}

unint64_t sub_2544F31DC()
{
  unint64_t result = qword_269DF4750;
  if (!qword_269DF4750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4750);
  }
  return result;
}

uint64_t sub_2544F3230(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x756F436574617473 && a2 == 0xED000070614D746ELL;
  if (v3 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000254533290 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C61567473726966 && a2 == 0xEF65746174536469 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002545332B0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_2545279E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t XPCIncomingConnection.__allocating_init(_:queue:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t XPCIncomingConnection.init(_:queue:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t sub_2544F344C()
{
  return xpc_connection_get_pid(*(xpc_connection_t *)(v0 + 16));
}

uint64_t sub_2544F3454()
{
  uint64_t v0 = swift_slowAlloc();
  xpc_connection_get_audit_token();
  return *(void *)v0;
}

uint64_t sub_2544F3494()
{
  uint64_t v0 = (_OWORD *)swift_slowAlloc();
  xpc_connection_get_audit_token();
  long long v1 = v0[1];
  *(_OWORD *)v8.val = *v0;
  *(_OWORD *)&v8.val[4] = v1;
  SecTaskRef v2 = SecTaskCreateWithAuditToken(0, &v8);
  if (!v2) {
    return 0;
  }
  BOOL v3 = v2;
  unsigned int v4 = (__CFString *)sub_254526FD0();
  CFTypeRef v5 = SecTaskCopyValueForEntitlement(v3, v4, 0);

  if (!v5)
  {

    return 0;
  }
  type metadata accessor for CFString(0);
  swift_unknownObjectRetain();
  if (!swift_dynamicCastUnknownClass())
  {

    swift_unknownObjectRelease_n();
    return 0;
  }
  uint64_t v6 = sub_254526FE0();

  swift_unknownObjectRelease_n();
  return v6;
}

SecTaskRef sub_2544F3594()
{
  uint64_t v0 = (_OWORD *)swift_slowAlloc();
  xpc_connection_get_audit_token();
  long long v1 = v0[1];
  *(_OWORD *)v6.val = *v0;
  *(_OWORD *)&v6.val[4] = v1;
  SecTaskRef result = SecTaskCreateWithAuditToken(0, &v6);
  if (result)
  {
    BOOL v3 = result;
    unsigned int v4 = (__CFString *)sub_254526FD0();
    CFTypeRef v5 = SecTaskCopyValueForEntitlement(v3, v4, 0);

    if (v5)
    {
      type metadata accessor for CFArray(0);
      swift_unknownObjectRetain();
      if (swift_dynamicCastUnknownClass())
      {
        *(void *)v6.val = 0;
        swift_unknownObjectRetain();
        sub_2545271B0();
        swift_unknownObjectRelease_n();

        return *(SecTaskRef *)v6.val;
      }

      swift_unknownObjectRelease_n();
    }
    else
    {
    }
    return 0;
  }
  return result;
}

uint64_t sub_2544F36A4()
{
  uint64_t v0 = (_OWORD *)swift_slowAlloc();
  xpc_connection_get_audit_token();
  long long v1 = v0[1];
  *(_OWORD *)v10.val = *v0;
  *(_OWORD *)&v10.val[4] = v1;
  SecTaskRef v2 = SecTaskCreateWithAuditToken(0, &v10);
  if (!v2) {
    return 2;
  }
  BOOL v3 = v2;
  unsigned int v4 = (__CFString *)sub_254526FD0();
  CFTypeRef v5 = SecTaskCopyValueForEntitlement(v3, v4, 0);

  if (v5)
  {
    type metadata accessor for CFBoolean(0);
    swift_unknownObjectRetain();
    uint64_t v6 = swift_dynamicCastUnknownClass();
    if (v6)
    {
      uint64_t v7 = v6;
      LOBYTE(v10.val[0]) = 2;
      swift_unknownObjectRetain();
      MEMORY[0x25A27BA80](v7, &v10);
      swift_unknownObjectRelease_n();

      return LOBYTE(v10.val[0]);
    }
    else
    {

      uint64_t v8 = 2;
      swift_unknownObjectRelease_n();
    }
  }
  else
  {

    return 2;
  }
  return v8;
}

uint64_t XPCIncomingConnection.deinit()
{
  swift_unknownObjectRelease();

  return v0;
}

uint64_t XPCIncomingConnection.__deallocating_deinit()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0228](v0, 32, 7);
}

unint64_t XPCIncomingConnection.description.getter()
{
  sub_254527630();
  swift_bridgeObjectRelease();
  xpc_connection_get_pid(*(xpc_connection_t *)(v0 + 16));
  sub_2545279B0();
  sub_254527080();
  swift_bridgeObjectRelease();
  sub_254527080();
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B266E20);
  sub_254527030();
  sub_254527080();
  swift_bridgeObjectRelease();
  sub_254527080();
  return 0xD000000000000022;
}

unint64_t sub_2544F3928()
{
  return XPCIncomingConnection.description.getter();
}

uint64_t type metadata accessor for XPCIncomingConnection()
{
  return self;
}

uint64_t method lookup function for XPCIncomingConnection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for XPCIncomingConnection);
}

uint64_t dispatch thunk of XPCIncomingConnection.__allocating_init(_:queue:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of XPCIncomingConnection.pid.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of XPCIncomingConnection.auditToken.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of XPCIncomingConnection.valueString(forEntitlement:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of XPCIncomingConnection.valueStringArray(forEntitlement:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of XPCIncomingConnection.valueBool(forEntitlement:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

void static XPCMessage.messageFormat.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_2544F3A5C(uint64_t a1, uint64_t a2)
{
  return sub_2544F5624(a1, a2, &qword_269DF4558);
}

uint64_t static XPCMessage.messageType.getter()
{
  return sub_254527030();
}

uint64_t sub_2544F3A98(uint64_t a1, uint64_t a2)
{
  return sub_2544F5624(a1, a2, (uint64_t *)&unk_269DF4540);
}

uint64_t sub_2544F3AA4(uint64_t a1, uint64_t a2)
{
  return sub_2544F5624(a1, a2, &qword_269DF4530);
}

uint64_t sub_2544F3AB0(uint64_t a1, uint64_t a2)
{
  return sub_2544F5624(a1, a2, &qword_26B267058);
}

uint64_t sub_2544F3ABC(uint64_t a1, uint64_t a2)
{
  return sub_2544F5624(a1, a2, &qword_269DF44F0);
}

uint64_t sub_2544F3AC8(uint64_t a1, uint64_t a2)
{
  return sub_2544F5624(a1, a2, &qword_269DF44D8);
}

uint64_t sub_2544F3AD4(uint64_t a1, uint64_t a2)
{
  return sub_2544F5624(a1, a2, &qword_269DF4518);
}

uint64_t sub_2544F3AE0(uint64_t a1, uint64_t a2)
{
  return sub_2544F5624(a1, a2, (uint64_t *)&unk_269DF4500);
}

uint64_t sub_2544F3AEC(uint64_t a1, uint64_t a2)
{
  return sub_2544F5624(a1, a2, &qword_269DF44C8);
}

uint64_t sub_2544F3AF8(uint64_t a1, uint64_t a2)
{
  return sub_2544F5624(a1, a2, (uint64_t *)&unk_269DF44B0);
}

uint64_t sub_2544F3B04(uint64_t a1, uint64_t a2)
{
  return sub_2544F5624(a1, a2, &qword_269DF44A0);
}

uint64_t sub_2544F3B10(uint64_t a1, uint64_t a2)
{
  return sub_2544F5624(a1, a2, &qword_269DF4488);
}

uint64_t sub_2544F3B1C(uint64_t a1, uint64_t a2)
{
  return sub_2544F5624(a1, a2, &qword_269DF4478);
}

uint64_t sub_2544F3B28(uint64_t a1, uint64_t a2)
{
  return sub_2544F5624(a1, a2, (uint64_t *)&unk_269DF4460);
}

uint64_t sub_2544F3B34(uint64_t a1, uint64_t a2)
{
  return sub_2544F5624(a1, a2, &qword_269DF4450);
}

uint64_t sub_2544F3B40(uint64_t a1, uint64_t a2)
{
  return sub_2544F5624(a1, a2, &qword_269DF4438);
}

uint64_t sub_2544F3B4C(uint64_t a1, uint64_t a2)
{
  return sub_2544F5624(a1, a2, &qword_269DF45E0);
}

uint64_t sub_2544F3B58(uint64_t a1, uint64_t a2)
{
  return sub_2544F5624(a1, a2, &qword_269DF45C8);
}

uint64_t sub_2544F3B64(uint64_t a1, uint64_t a2)
{
  return sub_2544F5624(a1, a2, &qword_269DF45B8);
}

uint64_t sub_2544F3B70(uint64_t a1, uint64_t a2)
{
  return sub_2544F5624(a1, a2, (uint64_t *)&unk_269DF45A0);
}

uint64_t sub_2544F3B7C(uint64_t a1, uint64_t a2)
{
  return sub_2544F5624(a1, a2, &qword_269DF4590);
}

uint64_t sub_2544F3B88(uint64_t a1, uint64_t a2)
{
  return sub_2544F5624(a1, a2, &qword_269DF4578);
}

uint64_t sub_2544F3B94(uint64_t a1, uint64_t a2)
{
  return sub_2544F5624(a1, a2, &qword_269DF4568);
}

uint64_t sub_2544F3BA0(uint64_t a1, uint64_t a2)
{
  return sub_2544F5624(a1, a2, &qword_269DF4818);
}

uint64_t sub_2544F3BAC(uint64_t a1, uint64_t a2)
{
  return sub_2544F5624(a1, a2, (uint64_t *)&unk_269DF4428);
}

void *sub_2544F3BB8(uint64_t a1, const char **a2, uint64_t a3, uint64_t a4)
{
  CFTypeRef v5 = (void *)sub_2544F3C04(a1, a2, a3, *(void *)(a4 + 8));
  uint64_t v6 = v5;
  if (!v4) {
    xpc_dictionary_set_BOOL(v5, "messageError", 1);
  }
  return v6;
}

uint64_t sub_2544F3C04(uint64_t a1, const char **a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a1;
  uint64_t v28 = a3;
  uint64_t v29 = a4;
  uint64_t v27 = a2;
  uint64_t v4 = sub_254527010();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v5 = sub_254526B10();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_254526B20();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  int v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_254526B70();
  swift_allocObject();
  sub_254526B60();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F06198], v9);
  uint64_t v13 = v28;
  sub_254526B40();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F06160], v5);
  uint64_t v14 = v29;
  sub_254526B30();
  uint64_t v15 = v31;
  uint64_t v16 = sub_254526B50();
  if (v15)
  {
    swift_release();
    return (uint64_t)v8;
  }
  uint64_t v18 = v16;
  unint64_t v19 = v17;
  uint64_t v20 = v27;
  sub_254527000();
  uint64_t result = sub_254526FF0();
  if (v22)
  {
    uint64_t v31 = result;
    reply = v20;
    if (v20)
    {
      reply = (const char *const *)xpc_dictionary_create_reply(v20);
      uint64_t v8 = (char *)reply;
      if (reply)
      {
LABEL_8:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v14 + 40))(&v32, v13, v14);
        xpc_dictionary_set_int64(v8, "messageFormat", v32);
        (*(void (**)(uint64_t, uint64_t))(v14 + 48))(v13, v14);
        uint64_t v24 = sub_254527040();
        swift_bridgeObjectRelease();
        xpc_dictionary_set_string(v8, "messageType", (const char *)(v24 + 32));
        swift_release();
        uint64_t v25 = sub_254527040();
        swift_bridgeObjectRelease();
        xpc_dictionary_set_string(v8, "messageBody", (const char *)(v25 + 32));
        swift_release();
        sub_2544E848C(v18, v19);
        swift_release();
        return (uint64_t)v8;
      }
      __break(1u);
    }
    uint64_t v8 = (char *)xpc_dictionary_create(reply, 0, 0);
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_2544F3F60(void *a1)
{
  uint64_t v3 = MEMORY[0x25A27CC00]();
  if (v3 != sub_254526E30()
    || !xpc_dictionary_get_BOOL(a1, "messageError")
    || (uint64_t v4 = MEMORY[0x25A27CC00](a1), v4 != sub_254526E30())
    || !xpc_dictionary_get_string(a1, "messageType"))
  {
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_254526E00();
    __swift_project_value_buffer(v5, (uint64_t)qword_26B267340);
    swift_unknownObjectRetain_n();
    uint64_t v6 = sub_254526DE0();
    os_log_type_t v7 = sub_254527410();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315138;
      v29[0] = v9;
      id v10 = objc_msgSend(a1, sel_description);
      uint64_t v11 = sub_254526FE0();
      unint64_t v13 = v12;

      uint64_t v30 = sub_254498B68(v11, v13, v29);
      sub_254527500();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v14 = "Decoding invalid error message: %s";
LABEL_8:
      _os_log_impl(&dword_254486000, v6, v7, v14, v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A27C9E0](v9, -1, -1);
      MEMORY[0x25A27C9E0](v8, -1, -1);

LABEL_27:
      sub_2544E83E4();
      swift_allocError();
      *uint64_t v28 = 1;
      return swift_willThrow();
    }
LABEL_26:

    swift_unknownObjectRelease_n();
    goto LABEL_27;
  }
  uint64_t v16 = sub_254527090();
  uint64_t v17 = v15;
  if (v16 == 0x746F6D6552435058 && v15 == 0xEE00726F72724565 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t result = sub_2544DB8E8(a1);
    if (v1) {
      return result;
    }
    uint64_t v19 = v29[1];
    sub_2544E831C();
    swift_allocError();
    *uint64_t v20 = v29[0];
    v20[1] = v19;
    return swift_willThrow();
  }
  if (v16 == 0xD000000000000012 && v17 == 0x8000000254534080)
  {
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  char v21 = sub_2545279E0();
  swift_bridgeObjectRelease();
  if ((v21 & 1) == 0)
  {
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_254526E00();
    __swift_project_value_buffer(v23, (uint64_t)qword_26B267340);
    swift_unknownObjectRetain_n();
    uint64_t v6 = sub_254526DE0();
    os_log_type_t v7 = sub_254527410();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315138;
      v29[0] = v9;
      id v24 = objc_msgSend(a1, sel_description);
      uint64_t v25 = sub_254526FE0();
      unint64_t v27 = v26;

      uint64_t v30 = sub_254498B68(v25, v27, v29);
      sub_254527500();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v14 = "Unrecognized error message: %s";
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_20:
  uint64_t result = sub_2544DBD54(a1);
  if (!v1)
  {
    sub_2544D55EC();
    swift_allocError();
    *uint64_t v22 = v29[0];
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_2544F4458@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v49 = a3;
  uint64_t v6 = sub_254526AA0();
  unint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v41[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_254526AB0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v13 = &v41[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = MEMORY[0x25A27CC00](a1);
  if (v14 != sub_254526E30())
  {
    sub_2544E83E4();
    swift_allocError();
    *uint64_t v15 = 4;
    return swift_willThrow();
  }
  uint64_t v43 = v13;
  uint64_t v44 = v6;
  uint64_t v45 = v11;
  uint64_t v46 = v9;
  unint64_t v47 = v7;
  uint64_t v16 = v48;
  uint64_t v17 = v49;
  uint64_t v18 = MEMORY[0x25A27CC00](a1);
  if (v18 != sub_254526E30() || (uint64_t v19 = a1, (unint64_t)xpc_dictionary_get_int64(a1, "messageFormat") > 2))
  {
    sub_2544E83E4();
    swift_allocError();
    *uint64_t v22 = 0;
    return swift_willThrow();
  }
  uint64_t v20 = MEMORY[0x25A27CC00](a1);
  if (v20 != sub_254526E30() || !xpc_dictionary_get_string(a1, "messageType")) {
    goto LABEL_6;
  }
  uint64_t v24 = sub_254527090();
  uint64_t v26 = v25;
  uint64_t v50 = v16;
  swift_getMetatypeMetadata();
  if (v24 == sub_254527030() && v26 == v27)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v28 = sub_2545279E0();
    swift_bridgeObjectRelease();
    if ((v28 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  if (v24 != (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 48))(v16, v17) || v26 != v29)
  {
    int v42 = sub_2545279E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v30 = a4;
    uint64_t v31 = v46;
    unint64_t v32 = v47;
    uint64_t v33 = v10;
    uint64_t v34 = v45;
    if (v42) {
      goto LABEL_19;
    }
LABEL_6:
    sub_2544E83E4();
    swift_allocError();
    *char v21 = 1;
    return swift_willThrow();
  }
  swift_bridgeObjectRelease_n();
  uint64_t v30 = a4;
  uint64_t v31 = v46;
  unint64_t v32 = v47;
  uint64_t v33 = v10;
  uint64_t v34 = v45;
LABEL_19:
  if (xpc_dictionary_get_string(v19, "messageBody"))
  {
    unint64_t v35 = sub_254527090();
    unint64_t v47 = v36;
    sub_254526B00();
    swift_allocObject();
    uint64_t v46 = v30;
    sub_254526AF0();
    (*(void (**)(unsigned char *, void, uint64_t))(v34 + 104))(v43, *MEMORY[0x263F060E0], v33);
    sub_254526AD0();
    (*(void (**)(unsigned char *, void, uint64_t))(v32 + 104))(v31, *MEMORY[0x263F060C0], v44);
    sub_254526AC0();
    uint64_t v37 = sub_254525310(v35, v47);
    unint64_t v39 = v38;
    sub_254526AE0();
    sub_2544E848C(v37, v39);
    return swift_release();
  }
  sub_2544E83E4();
  swift_allocError();
  *char v40 = 2;
  return swift_willThrow();
}

LighthouseBackground::XPCMessageKey_optional __swiftcall XPCMessageKey.init(rawValue:)(Swift::String rawValue)
{
  SecTaskRef v2 = v1;
  unint64_t v3 = sub_254527790();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *SecTaskRef v2 = v5;
  return result;
}

void *static XPCMessageKey.allCases.getter()
{
  return &unk_2703D5B78;
}

uint64_t XPCMessageKey.rawValue.getter()
{
  return *(void *)&aMessagefmessag_0[8 * *v0];
}

uint64_t sub_2544F4968(char *a1, char *a2)
{
  return sub_254490D2C(*a1, *a2);
}

uint64_t sub_2544F4974()
{
  return sub_25451A7C4();
}

uint64_t sub_2544F497C()
{
  return sub_25451B188();
}

uint64_t sub_2544F4984()
{
  return sub_25451B6FC();
}

LighthouseBackground::XPCMessageKey_optional sub_2544F498C(Swift::String *a1)
{
  return XPCMessageKey.init(rawValue:)(*a1);
}

uint64_t sub_2544F4998@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = XPCMessageKey.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_2544F49C0(void *a1@<X8>)
{
  *a1 = &unk_2703D51B0;
}

LighthouseBackground::XPCMessageFormat_optional __swiftcall XPCMessageFormat.init(rawValue:)(Swift::Int64 rawValue)
{
  char v2 = 3;
  if ((unint64_t)rawValue < 3) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (LighthouseBackground::XPCMessageFormat_optional)rawValue;
}

void *static XPCMessageFormat.allCases.getter()
{
  return &unk_2703D5BA0;
}

uint64_t XPCMessageFormat.rawValue.getter()
{
  return *v0;
}

uint64_t sub_2544F49F8()
{
  return sub_254527AB0();
}

uint64_t sub_2544F4A40()
{
  return sub_254527AA0();
}

uint64_t sub_2544F4A6C()
{
  return sub_254527AB0();
}

LighthouseBackground::XPCMessageFormat_optional sub_2544F4AB0(Swift::Int64 *a1)
{
  return XPCMessageFormat.init(rawValue:)(*a1);
}

void sub_2544F4AB8(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_2544F4AC4(void *a1@<X8>)
{
  *a1 = &unk_2703D5250;
}

BOOL static XPCParsingError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t XPCParsingError.hash(into:)()
{
  return sub_254527A90();
}

uint64_t XPCParsingError.hashValue.getter()
{
  return sub_254527AB0();
}

void sub_2544F4B5C(unsigned char *a1@<X8>)
{
}

uint64_t sub_2544F4B74()
{
  return static XPCMessage.messageType.getter();
}

uint64_t sub_2544F4B90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544F5E7C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2544F4BBC(uint64_t a1)
{
  unint64_t v2 = sub_2544F4ED8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544F4BF8(uint64_t a1)
{
  unint64_t v2 = sub_2544F4ED8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2544F4C38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2544F5F14(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2544F4C64(uint64_t a1)
{
  unint64_t v2 = sub_2544F4F2C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2544F4CA0(uint64_t a1)
{
  unint64_t v2 = sub_2544F4F2C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t XPCRemoteError.encode(to:)(void *a1)
{
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4758);
  uint64_t v3 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  char v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4760);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v1;
  v13[1] = v1[1];
  v13[2] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544F4ED8();
  sub_254527B00();
  sub_2544F4F2C();
  sub_2545278B0();
  uint64_t v11 = v14;
  sub_254527930();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_2544F4ED8()
{
  unint64_t result = qword_269DF4768;
  if (!qword_269DF4768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4768);
  }
  return result;
}

unint64_t sub_2544F4F2C()
{
  unint64_t result = qword_269DF4770;
  if (!qword_269DF4770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4770);
  }
  return result;
}

uint64_t XPCRemoteError.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4778);
  uint64_t v27 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4780);
  uint64_t v28 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2544F4ED8();
  sub_254527AF0();
  if (v2) {
    goto LABEL_7;
  }
  uint64_t v25 = a1;
  uint64_t v10 = v9;
  if (*(void *)(sub_254527890() + 16) != 1)
  {
    uint64_t v13 = sub_254527690();
    swift_allocError();
    uint64_t v14 = v7;
    uint64_t v16 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3460);
    *uint64_t v16 = &type metadata for XPCRemoteError;
    sub_2545277B0();
    sub_254527680();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v13 - 8) + 104))(v16, *MEMORY[0x263F8DCB0], v13);
    swift_willThrow();
    uint64_t v17 = v28;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v14);
    a1 = v25;
LABEL_7:
    uint64_t v22 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v22);
  }
  sub_2544F4F2C();
  uint64_t v11 = v6;
  sub_2545277A0();
  uint64_t v12 = v28;
  uint64_t v19 = sub_254527830();
  uint64_t v21 = v20;
  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v4);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v7);
  uint64_t v22 = (uint64_t)v25;
  uint64_t v23 = v26;
  uint64_t *v26 = v19;
  v23[1] = v21;
  return __swift_destroy_boxed_opaque_existential_1(v22);
}

uint64_t sub_2544F52E8(uint64_t a1, uint64_t a2)
{
  return sub_2544F5624(a1, a2, &qword_269DF4418);
}

uint64_t sub_2544F52F4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return XPCRemoteError.init(from:)(a1, a2);
}

uint64_t sub_2544F530C(void *a1)
{
  return XPCRemoteError.encode(to:)(a1);
}

void XPCEmptyReply.encode(to:)()
{
}

void XPCEmptyReply.init(from:)(uint64_t a1)
{
}

unint64_t sub_2544F53C4()
{
  unint64_t result = qword_269DF4788;
  if (!qword_269DF4788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4788);
  }
  return result;
}

uint64_t sub_2544F5418()
{
  return sub_2544C7944(&qword_269DF4790, &qword_269DF4798);
}

unint64_t sub_2544F5444()
{
  unint64_t result = qword_269DF47A0;
  if (!qword_269DF47A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF47A0);
  }
  return result;
}

uint64_t sub_2544F5498()
{
  return sub_2544C7944(&qword_269DF47A8, &qword_269DF47B0);
}

unint64_t sub_2544F54C4()
{
  unint64_t result = qword_269DF47B8;
  if (!qword_269DF47B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF47B8);
  }
  return result;
}

uint64_t sub_2544F5518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2544F5684(a1, a2, a3, (uint64_t (*)(void))sub_2544F5544, (uint64_t (*)(void))sub_2544E831C);
}

unint64_t sub_2544F5544()
{
  unint64_t result = qword_269DF47C0;
  if (!qword_269DF47C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF47C0);
  }
  return result;
}

uint64_t sub_2544F5598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2544F5684(a1, a2, a3, (uint64_t (*)(void))sub_2544E8438, (uint64_t (*)(void))sub_2544F55C4);
}

unint64_t sub_2544F55C4()
{
  unint64_t result = qword_269DF47C8;
  if (!qword_269DF47C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF47C8);
  }
  return result;
}

uint64_t sub_2544F5618(uint64_t a1, uint64_t a2)
{
  return sub_2544F5624(a1, a2, &qword_269DF4810);
}

uint64_t sub_2544F5624(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_254527030();
}

uint64_t sub_2544F5658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2544F5684(a1, a2, a3, (uint64_t (*)(void))sub_2544F56C0, (uint64_t (*)(void))sub_2544F5714);
}

uint64_t sub_2544F5684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_2544F56C0()
{
  unint64_t result = qword_269DF47D0;
  if (!qword_269DF47D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF47D0);
  }
  return result;
}

unint64_t sub_2544F5714()
{
  unint64_t result = qword_269DF47D8;
  if (!qword_269DF47D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF47D8);
  }
  return result;
}

void sub_2544F5768(uint64_t a1)
{
}

void sub_2544F57B8()
{
}

unsigned char *storeEnumTagSinglePayload for XPCMessageKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2544F58D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCMessageKey()
{
  return &type metadata for XPCMessageKey;
}

unsigned char *storeEnumTagSinglePayload for XPCMessageFormat(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2544F59D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCMessageFormat()
{
  return &type metadata for XPCMessageFormat;
}

unsigned char *storeEnumTagSinglePayload for XPCParsingError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2544F5AD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCParsingError()
{
  return &type metadata for XPCParsingError;
}

uint64_t dispatch thunk of static XPCMessage.messageFormat.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of static XPCMessage.messageType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

ValueMetadata *type metadata accessor for XPCRemoteError()
{
  return &type metadata for XPCRemoteError;
}

ValueMetadata *type metadata accessor for XPCEmptyReply()
{
  return &type metadata for XPCEmptyReply;
}

ValueMetadata *type metadata accessor for XPCRemoteError.CodingKeys()
{
  return &type metadata for XPCRemoteError.CodingKeys;
}

unsigned char *_s20LighthouseBackground14XPCRemoteErrorO10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2544F5C08);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCRemoteError.GenericErrorCodingKeys()
{
  return &type metadata for XPCRemoteError.GenericErrorCodingKeys;
}

unint64_t sub_2544F5C44()
{
  unint64_t result = qword_269DF47E0;
  if (!qword_269DF47E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF47E0);
  }
  return result;
}

unint64_t sub_2544F5C9C()
{
  unint64_t result = qword_269DF47E8;
  if (!qword_269DF47E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF47E8);
  }
  return result;
}

unint64_t sub_2544F5CF4()
{
  unint64_t result = qword_269DF47F0;
  if (!qword_269DF47F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF47F0);
  }
  return result;
}

unint64_t sub_2544F5D4C()
{
  unint64_t result = qword_269DF47F8;
  if (!qword_269DF47F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF47F8);
  }
  return result;
}

unint64_t sub_2544F5DA4()
{
  unint64_t result = qword_269DF4800;
  if (!qword_269DF4800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4800);
  }
  return result;
}

unint64_t sub_2544F5DFC()
{
  unint64_t result = qword_269DF4808;
  if (!qword_269DF4808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4808);
  }
  return result;
}

uint64_t sub_2544F5E50()
{
  return 12383;
}

uint64_t sub_2544F5E5C()
{
  return 0x45636972656E6567;
}

uint64_t sub_2544F5E7C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x45636972656E6567 && a2 == 0xEC000000726F7272)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_2545279E0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2544F5F14(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_2545279E0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2544F5F84(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_2544FEE08(0, v1, 0);
    uint64_t v2 = v14;
    uint64_t v4 = type metadata accessor for TaskStatusEvent(0);
    uint64_t v5 = a1
       + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80));
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 72);
    do
    {
      uint64_t v7 = (uint64_t *)(v5 + *(int *)(v4 + 24));
      uint64_t v9 = *v7;
      uint64_t v8 = v7[1];
      unint64_t v10 = *(void *)(v14 + 16);
      unint64_t v11 = *(void *)(v14 + 24);
      swift_bridgeObjectRetain();
      if (v10 >= v11 >> 1) {
        sub_2544FEE08(v11 > 1, v10 + 1, 1);
      }
      v5 += v6;
      *(void *)(v14 + 16) = v10 + 1;
      uint64_t v12 = v14 + 16 * v10;
      *(void *)(v12 + 32) = v9;
      *(void *)(v12 + 40) = v8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2544F60C8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF48B8);
  sub_254527030();
  sub_254527080();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF36E8);
  uint64_t v0 = (void *)swift_allocObject();
  uint64_t v1 = MEMORY[0x263F8EE78];
  v0[4] = sub_2544A57B0(MEMORY[0x263F8EE78]);
  v0[2] = 0x72476D6F74737543;
  v0[3] = 0xEB00000000687061;
  unint64_t v2 = sub_2544A57B0(v1);
  swift_beginAccess();
  v0[4] = v2;
  swift_bridgeObjectRelease();
  swift_retain();
  sub_2544FF8CC((uint64_t)&unk_2703D50E8);
  swift_bridgeObjectRelease();
  uint64_t v18 = (uint64_t)v0;
  uint64_t result = swift_release();
  unint64_t v4 = 0;
  while (2)
  {
    if (v4 >= qword_2703D5120)
    {
      __break(1u);
      return result;
    }
    uint64_t v5 = 0;
    unint64_t v17 = v4 + 1;
    uint64_t v6 = 8 * *((char *)&unk_2703D5110 + v4 + 32);
    uint64_t v7 = *(void *)&aStart_3[v6];
    uint64_t v8 = *(void *)&aFinished_2[v6 + 8];
    do
    {
      if (v7 == *(void *)&aStart_3[8 * byte_2703D5138[v5 + 32]]
        && v8 == *(void *)&aFinished_2[8 * byte_2703D5138[v5 + 32] + 8])
      {
        swift_bridgeObjectRelease();
LABEL_6:
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_7;
      }
      char v10 = sub_2545279E0();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v10 & 1) == 0)
      {
        uint64_t v11 = sub_2545270F0();
        uint64_t v13 = v12;
        uint64_t v14 = sub_2545270F0();
        sub_2544A5F50(v11, v13, v14, v15);
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
LABEL_7:
      ++v5;
    }
    while (v5 != 5);
    unint64_t v4 = v17;
    if (v17 != 5) {
      continue;
    }
    break;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF36F0);
  swift_allocObject();
  uint64_t v16 = sub_2544A8EB4(v18);
  swift_release();
  return (uint64_t)v16;
}

uint64_t sub_2544F63B8(char a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3780);
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LedgerState();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (void *)((char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = 8 * a1;
  uint64_t v9 = *(void *)&aStart_3[v8];
  uint64_t v10 = *(void *)&aFinished_2[v8 + 8];
  v16[1] = v9;
  v16[2] = v10;
  uint64_t v11 = sub_2545270F0();
  uint64_t v13 = v12;
  sub_254526CF0();
  uint64_t *v7 = v11;
  v7[1] = v13;
  sub_2544FFA14((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for LedgerState);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3788);
  *(void *)&v4[*(int *)(v14 + 52)] = MEMORY[0x263F8EE78];
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v4, 0, 1, v14);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_254522188((uint64_t)v4, v11, v13);
  swift_endAccess();
  return sub_2544FFAE4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for LedgerState);
}

uint64_t CustomRegex.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_254527790();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t CustomRegex.rawValue.getter()
{
  return 0x462A5D465E5B5328;
}

uint64_t sub_2544F6638@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_254527790();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_2544F668C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CustomRegex.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

LighthouseBackground::LatencyRegex_optional __swiftcall LatencyRegex.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_254527790();
  result.value = swift_bridgeObjectRelease();
  char v5 = 7;
  if (v3 < 7) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t LatencyRegex.rawValue.getter()
{
  return *(void *)&aNNRc_0[8 * *v0];
}

uint64_t sub_2544F6734(char *a1, char *a2)
{
  return sub_254490FC0(*a1, *a2);
}

uint64_t sub_2544F6740()
{
  return sub_25451B584();
}

uint64_t sub_2544F674C()
{
  return sub_25451B2DC();
}

uint64_t sub_2544F6754()
{
  return sub_25451B584();
}

LighthouseBackground::LatencyRegex_optional sub_2544F675C(Swift::String *a1)
{
  return LatencyRegex.init(rawValue:)(*a1);
}

uint64_t sub_2544F6768@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = LatencyRegex.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

LighthouseBackground::PushRegex_optional __swiftcall PushRegex.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_254527790();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t PushRegex.rawValue.getter()
{
  return *(void *)&aTispr_1[8 * *v0];
}

uint64_t sub_2544F6810(char *a1, char *a2)
{
  return sub_2544900A4(*a1, *a2);
}

uint64_t sub_2544F681C()
{
  return sub_25451A830();
}

uint64_t sub_2544F6824()
{
  return sub_25451AA1C();
}

uint64_t sub_2544F682C()
{
  return sub_25451BFC4();
}

LighthouseBackground::PushRegex_optional sub_2544F6834(Swift::String *a1)
{
  return PushRegex.init(rawValue:)(*a1);
}

uint64_t sub_2544F6840@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PushRegex.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2544F6868()
{
  uint64_t result = sub_2544A5378((uint64_t)&unk_2703D5D68);
  qword_269DF4820 = result;
  return result;
}

uint64_t registeredEventPassSet.getter()
{
  if (qword_269DF2F10 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

Swift::String __swiftcall taskEventsToStringSequence(taskEvents:)(Swift::OpaquePointer taskEvents)
{
  uint64_t v2 = type metadata accessor for LedgerState();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  char v5 = (uint64_t *)&v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int64_t v6 = *((void *)taskEvents._rawValue + 2);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v25 = MEMORY[0x263F8EE78];
    sub_2544FEE08(0, v6, 0);
    uint64_t v8 = (char *)taskEvents._rawValue
       + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    do
    {
      sub_2544FFA14((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for LedgerState);
      uint64_t v10 = *v5;
      uint64_t v11 = (void *)v5[1];
      swift_bridgeObjectRetain();
      v12._uint64_t countAndFlagsBits = v10;
      v12._object = v11;
      TaskStatus.init(rawValue:)(v12);
      unint64_t v13 = 0xE100000000000000;
      uint64_t v14 = 84;
      switch(v24[7])
      {
        case 1:
          uint64_t v14 = 73;
          break;
        case 2:
          uint64_t v14 = 83;
          break;
        case 3:
          uint64_t v14 = 71;
          break;
        case 4:
          uint64_t v14 = 80;
          break;
        case 5:
          uint64_t v14 = 90;
          break;
        case 6:
          uint64_t v14 = 78;
          break;
        case 7:
          uint64_t v14 = 82;
          break;
        case 8:
          uint64_t v14 = 68;
          break;
        case 9:
          uint64_t v14 = 67;
          break;
        case 0xA:
          uint64_t v14 = 70;
          break;
        case 0xB:
          uint64_t v14 = 0;
          unint64_t v13 = 0xE000000000000000;
          break;
        default:
          break;
      }
      sub_2544FFAE4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for LedgerState);
      uint64_t v7 = v25;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2544FEE08(0, *(void *)(v7 + 16) + 1, 1);
        uint64_t v7 = v25;
      }
      unint64_t v16 = *(void *)(v7 + 16);
      unint64_t v15 = *(void *)(v7 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_2544FEE08(v15 > 1, v16 + 1, 1);
        uint64_t v7 = v25;
      }
      *(void *)(v7 + 16) = v16 + 1;
      uint64_t v17 = v7 + 16 * v16;
      *(void *)(v17 + 32) = v14;
      *(void *)(v17 + 40) = v13;
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  uint64_t v25 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B266BC0);
  sub_25448FFD4(&qword_26B266BD0, &qword_26B266BC0);
  uint64_t v18 = sub_254526F70();
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = v18;
  uint64_t v22 = v20;
  result._object = v22;
  result._uint64_t countAndFlagsBits = v21;
  return result;
}

Swift::String __swiftcall customEventsToStringSequence(customEvents:)(Swift::OpaquePointer customEvents)
{
  uint64_t v2 = type metadata accessor for LedgerState();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  char v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *((void *)customEvents._rawValue + 2);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v23 = MEMORY[0x263F8EE78];
    sub_2544FEE08(0, v6, 0);
    uint64_t v8 = (char *)customEvents._rawValue
       + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    do
    {
      sub_2544FFA14((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for LedgerState);
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_254527790();
      swift_bridgeObjectRelease();
      unint64_t v11 = 0xE100000000000000;
      uint64_t v12 = 83;
      switch(v10)
      {
        case 0:
          break;
        case 1:
          uint64_t v12 = 76;
          break;
        case 2:
          uint64_t v12 = 80;
          break;
        case 3:
          uint64_t v12 = 85;
          break;
        case 4:
          uint64_t v12 = 70;
          break;
        default:
          uint64_t v12 = 0;
          unint64_t v11 = 0xE000000000000000;
          break;
      }
      sub_2544FFAE4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for LedgerState);
      uint64_t v7 = v23;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2544FEE08(0, *(void *)(v7 + 16) + 1, 1);
        uint64_t v7 = v23;
      }
      unint64_t v14 = *(void *)(v7 + 16);
      unint64_t v13 = *(void *)(v7 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_2544FEE08(v13 > 1, v14 + 1, 1);
        uint64_t v7 = v23;
      }
      *(void *)(v7 + 16) = v14 + 1;
      uint64_t v15 = v7 + 16 * v14;
      *(void *)(v15 + 32) = v12;
      *(void *)(v15 + 40) = v11;
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  uint64_t v23 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B266BC0);
  sub_25448FFD4(&qword_26B266BD0, &qword_26B266BC0);
  uint64_t v16 = sub_254526F70();
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = v16;
  uint64_t v20 = v18;
  result._object = v20;
  result._uint64_t countAndFlagsBits = v19;
  return result;
}

double TelemetryBucketRange.startTimestamp.getter()
{
  return *(double *)v0;
}

void TelemetryBucketRange.startTimestamp.setter(double a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*TelemetryBucketRange.startTimestamp.modify())()
{
  return nullsub_1;
}

double TelemetryBucketRange.endTimestamp.getter()
{
  return *(double *)(v0 + 8);
}

void TelemetryBucketRange.endTimestamp.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*TelemetryBucketRange.endTimestamp.modify())()
{
  return nullsub_1;
}

uint64_t TelemetryBucketRange.telemetryStartDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TelemetryBucketRange() + 24);
  uint64_t v4 = sub_254526D90();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t TelemetryBucketRange.telemetryStartDate.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TelemetryBucketRange() + 24);
  uint64_t v4 = sub_254526D90();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*TelemetryBucketRange.telemetryStartDate.modify())()
{
  return nullsub_1;
}

uint64_t TelemetryBucketRange.telemetryEndDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TelemetryBucketRange() + 28);
  uint64_t v4 = sub_254526D90();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t TelemetryBucketRange.telemetryEndDate.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TelemetryBucketRange() + 28);
  uint64_t v4 = sub_254526D90();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*TelemetryBucketRange.telemetryEndDate.modify())()
{
  return nullsub_1;
}

uint64_t TelemetryBucketRange.init(from:)@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v4 = sub_254526D90();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_254526D60();
  sub_254526CE0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  type metadata accessor for TelemetryBucketRange();
  sub_254526CD0();
  sub_254526CE0();
  *(void *)(a1 + 8) = v8;
  sub_254526D10();
  uint64_t result = sub_254526CE0();
  if (v10 >= a2) {
    double v11 = v10;
  }
  else {
    double v11 = a2;
  }
  if (a2 != 0.0) {
    double v10 = v11;
  }
  *(double *)a1 = v10;
  return result;
}

LighthouseBackground::TelemetryConfig __swiftcall TelemetryConfig.init(bucketInterval:contextId:deviceTelemetry:pushTelemetry:)(LighthouseBackground::BucketInterval bucketInterval, Swift::String contextId, Swift::Bool deviceTelemetry, Swift::Bool pushTelemetry)
{
  *(unsigned char *)uint64_t v4 = *(unsigned char *)bucketInterval;
  *(Swift::String *)(v4 + 8) = contextId;
  *(unsigned char *)(v4 + 24) = deviceTelemetry;
  *(unsigned char *)(v4 + 25) = pushTelemetry;
  result.contextId = contextId;
  result.deviceTelemetry = deviceTelemetry;
  result.bucketInterval = bucketInterval;
  return result;
}

LighthouseBackground::CustomTelemetryStates_optional __swiftcall CustomTelemetryStates.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_254527790();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static CustomTelemetryStates.allCases.getter()
{
  return &unk_2703D5EC0;
}

uint64_t CustomTelemetryStates.rawValue.getter()
{
  return *(void *)&aStart_3[8 * *v0];
}

uint64_t sub_2544F7344(char *a1, char *a2)
{
  return sub_254490544(*a1, *a2);
}

uint64_t sub_2544F7350()
{
  return sub_25451A89C();
}

uint64_t sub_2544F7358()
{
  return sub_25451ACBC();
}

uint64_t sub_2544F7360()
{
  return sub_25451BCB8();
}

LighthouseBackground::CustomTelemetryStates_optional sub_2544F7368(Swift::String *a1)
{
  return CustomTelemetryStates.init(rawValue:)(*a1);
}

uint64_t sub_2544F7374@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CustomTelemetryStates.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_2544F739C(void *a1@<X8>)
{
  *a1 = &unk_2703D5388;
}

uint64_t processPushTelemetry(contextId:cutoff:allEvents:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  *(void *)(v4 + 48) = a3;
  *(double *)(v4 + 40) = a4;
  *(void *)(v4 + 24) = a1;
  *(void *)(v4 + 32) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3338);
  *(void *)(v4 + 56) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for TaskStatusEvent(0);
  *(void *)(v4 + 64) = v5;
  *(void *)(v4 + 72) = *(void *)(v5 - 8);
  *(void *)(v4 + 80) = swift_task_alloc();
  *(void *)(v4 + 88) = swift_task_alloc();
  *(void *)(v4 + 96) = swift_task_alloc();
  *(void *)(v4 + 104) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2544F74CC, 0, 0);
}

uint64_t sub_2544F74CC()
{
  uint64_t v100 = v0;
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t countAndFlagsBits = MEMORY[0x263F8EE78];
  v99.value.contextId._uint64_t countAndFlagsBits = MEMORY[0x263F8EE78];
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v93 = v3;
  if (v3)
  {
    uint64_t v6 = *(void *)(v0 + 64);
    uint64_t v5 = *(void *)(v0 + 72);
    unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v8 = *(void *)(v5 + 72);
    uint64_t v9 = v4 + v7;
    uint64_t v10 = v3;
    do
    {
      uint64_t v11 = *(void *)(v0 + 104);
      uint64_t v12 = *(void *)(v0 + 56);
      sub_2544FFA14(v9, v11, type metadata accessor for TaskStatusEvent);
      sub_254493CFC(v11 + *(int *)(v6 + 32), v12, &qword_269DF3338);
      uint64_t v13 = type metadata accessor for PushMetadata(0);
      LODWORD(v11) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13);
      sub_254498AB8(v12, &qword_269DF3338);
      uint64_t v14 = *(void *)(v0 + 104);
      if (v11 == 1)
      {
        sub_2544FFAE4(v14, type metadata accessor for TaskStatusEvent);
      }
      else
      {
        sub_2544FFA7C(v14, *(void *)(v0 + 96), type metadata accessor for TaskStatusEvent);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2544FEE74(0, *(void *)(countAndFlagsBits + 16) + 1, 1);
          uint64_t countAndFlagsBits = v99.value.contextId._countAndFlagsBits;
        }
        unint64_t v16 = *(void *)(countAndFlagsBits + 16);
        unint64_t v15 = *(void *)(countAndFlagsBits + 24);
        if (v16 >= v15 >> 1)
        {
          sub_2544FEE74(v15 > 1, v16 + 1, 1);
          uint64_t countAndFlagsBits = v99.value.contextId._countAndFlagsBits;
        }
        uint64_t v17 = *(void *)(v0 + 96);
        *(void *)(countAndFlagsBits + 16) = v16 + 1;
        sub_2544FFA7C(v17, countAndFlagsBits + v7 + v16 * v8, type metadata accessor for TaskStatusEvent);
      }
      v9 += v8;
      --v10;
    }
    while (v10);
    uint64_t v3 = v93;
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_2544F5F84(countAndFlagsBits);
  swift_release();
  uint64_t v19 = sub_2544A519C(v18);
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_2544A5A2C(MEMORY[0x263F8EE78]);
  if (v3)
  {
    uint64_t v21 = *(void *)(v0 + 72);
    uint64_t v91 = *(void *)(v0 + 64);
    unint64_t v87 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    unint64_t v97 = *(void *)(v0 + 48) + v87;
    uint64_t v22 = *(void *)(v21 + 72);
    uint64_t v95 = v19 + 56;
    swift_bridgeObjectRetain();
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t v89 = v22;
    while (1)
    {
      uint64_t v25 = *(void *)(v0 + 88);
      sub_2544FFA14(v97 + v24 * v22, v25, type metadata accessor for TaskStatusEvent);
      if (!*(void *)(v19 + 16)) {
        goto LABEL_16;
      }
      uint64_t v26 = (uint64_t *)(v25 + *(int *)(v91 + 24));
      uint64_t v28 = *v26;
      uint64_t v27 = v26[1];
      sub_254527A80();
      swift_bridgeObjectRetain();
      sub_254527060();
      uint64_t v29 = sub_254527AB0();
      uint64_t v30 = -1 << *(unsigned char *)(v19 + 32);
      unint64_t v31 = v29 & ~v30;
      if ((*(void *)(v95 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31))
      {
        uint64_t v32 = *(void *)(v19 + 48);
        uint64_t v33 = (void *)(v32 + 16 * v31);
        BOOL v34 = *v33 == v28 && v33[1] == v27;
        if (v34 || (sub_2545279E0() & 1) != 0) {
          goto LABEL_30;
        }
        uint64_t v35 = ~v30;
        unint64_t v36 = (v31 + 1) & v35;
        if ((*(void *)(v95 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v36))
        {
          uint64_t v37 = (void *)(v32 + 16 * v36);
          BOOL v38 = *v37 == v28 && v37[1] == v27;
          if (v38 || (sub_2545279E0() & 1) != 0) {
            goto LABEL_30;
          }
          unint64_t v60 = (v36 + 1) & v35;
          if ((*(void *)(v95 + ((v60 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v60)) {
            break;
          }
        }
      }
LABEL_14:
      uint64_t v22 = v89;
LABEL_15:
      swift_bridgeObjectRelease();
      uint64_t v3 = v93;
LABEL_16:
      ++v24;
      sub_2544FFAE4(*(void *)(v0 + 88), type metadata accessor for TaskStatusEvent);
      if (v24 == v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_57;
      }
    }
    while (1)
    {
      long long v61 = (void *)(v32 + 16 * v60);
      BOOL v62 = *v61 == v28 && v61[1] == v27;
      if (v62 || (sub_2545279E0() & 1) != 0) {
        break;
      }
      unint64_t v60 = (v60 + 1) & v35;
      if (((*(void *)(v95 + ((v60 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v60) & 1) == 0) {
        goto LABEL_14;
      }
    }
LABEL_30:
    uint64_t v40 = *(void *)(v0 + 80);
    uint64_t v39 = *(void *)(v0 + 88);
    swift_bridgeObjectRelease();
    sub_2544FFA14(v39, v40, type metadata accessor for TaskStatusEvent);
    swift_bridgeObjectRetain();
    sub_2544BB6A4((uint64_t)v23);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v99.value.contextId._uint64_t countAndFlagsBits = v20;
    unint64_t v43 = sub_2544B9B58(v28, v27);
    uint64_t v44 = *(void *)(v20 + 16);
    BOOL v45 = (v42 & 1) == 0;
    uint64_t result = v44 + v45;
    if (__OFADD__(v44, v45))
    {
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
      goto LABEL_94;
    }
    char v47 = v42;
    if (*(void *)(v20 + 24) >= result)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_2544BC47C();
        uint64_t v20 = v99.value.contextId._countAndFlagsBits;
      }
    }
    else
    {
      sub_2544BAA6C(result, isUniquelyReferenced_nonNull_native);
      uint64_t v20 = v99.value.contextId._countAndFlagsBits;
      unint64_t v48 = sub_2544B9B58(v28, v27);
      if ((v47 & 1) != (v49 & 1))
      {
        return sub_254527A30();
      }
      unint64_t v43 = v48;
    }
    swift_bridgeObjectRelease();
    if ((v47 & 1) == 0)
    {
      *(void *)(v20 + 8 * (v43 >> 6) + 64) |= 1 << v43;
      uint64_t v50 = (uint64_t *)(*(void *)(v20 + 48) + 16 * v43);
      *uint64_t v50 = v28;
      v50[1] = v27;
      *(void *)(*(void *)(v20 + 56) + 8 * v43) = MEMORY[0x263F8EE78];
      uint64_t v51 = *(void *)(v20 + 16);
      uint64_t v52 = v51 + 1;
      BOOL v53 = __OFADD__(v51, 1);
      uint64_t result = swift_bridgeObjectRetain();
      if (v53) {
        goto LABEL_93;
      }
      *(void *)(v20 + 16) = v52;
    }
    uint64_t v54 = *(void *)(v20 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    unint64_t v55 = *(void *)(v54 + 8 * v43);
    char v56 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v54 + 8 * v43) = v55;
    if ((v56 & 1) == 0)
    {
      unint64_t v55 = sub_2544B97E0(0, *(void *)(v55 + 16) + 1, 1, v55);
      *(void *)(v54 + 8 * v43) = v55;
    }
    unint64_t v58 = *(void *)(v55 + 16);
    unint64_t v57 = *(void *)(v55 + 24);
    if (v58 >= v57 >> 1)
    {
      unint64_t v55 = sub_2544B97E0(v57 > 1, v58 + 1, 1, v55);
      *(void *)(v54 + 8 * v43) = v55;
    }
    uint64_t v59 = *(void *)(v0 + 80);
    *(void *)(v55 + 16) = v58 + 1;
    uint64_t v22 = v89;
    sub_2544FFA7C(v59, v55 + v87 + v58 * v89, type metadata accessor for TaskStatusEvent);
    uint64_t v23 = sub_2544B5C7C;
    goto LABEL_15;
  }
  uint64_t v23 = 0;
LABEL_57:
  uint64_t result = swift_bridgeObjectRelease();
  int64_t v63 = 0;
  uint64_t v64 = v20 + 64;
  uint64_t v65 = -1;
  uint64_t v66 = -1 << *(unsigned char *)(v20 + 32);
  if (-v66 < 64) {
    uint64_t v65 = ~(-1 << -(char)v66);
  }
  unint64_t v67 = v65 & *(void *)(v20 + 64);
  int64_t v68 = (unint64_t)(63 - v66) >> 6;
  uint64_t v98 = (void *)MEMORY[0x263F8EE78];
  while (1)
  {
    if (v67)
    {
      unint64_t v69 = __clz(__rbit64(v67));
      v67 &= v67 - 1;
      unint64_t v70 = v69 | (v63 << 6);
      goto LABEL_76;
    }
    int64_t v71 = v63 + 1;
    if (__OFADD__(v63, 1))
    {
      __break(1u);
      goto LABEL_92;
    }
    if (v71 >= v68)
    {
LABEL_84:
      swift_release();
      sub_2544BB6A4((uint64_t)v23);
      int v84 = v98;
      goto LABEL_85;
    }
    unint64_t v72 = *(void *)(v64 + 8 * v71);
    ++v63;
    if (!v72)
    {
      int64_t v63 = v71 + 1;
      if (v71 + 1 >= v68) {
        goto LABEL_84;
      }
      unint64_t v72 = *(void *)(v64 + 8 * v63);
      if (!v72)
      {
        int64_t v63 = v71 + 2;
        if (v71 + 2 >= v68) {
          goto LABEL_84;
        }
        unint64_t v72 = *(void *)(v64 + 8 * v63);
        if (!v72) {
          break;
        }
      }
    }
LABEL_75:
    unint64_t v67 = (v72 - 1) & v72;
    unint64_t v70 = __clz(__rbit64(v72)) + (v63 << 6);
LABEL_76:
    int v74 = (uint64_t *)(*(void *)(v20 + 48) + 16 * v70);
    uint64_t v76 = *v74;
    int v75 = (void *)v74[1];
    v77._rawValue = *(void **)(*(void *)(v20 + 56) + 8 * v70);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_254527330())
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      sub_2544BB6A4((uint64_t)v23);
      int v84 = 0;
LABEL_85:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      int v85 = *(uint64_t (**)(void *))(v0 + 8);
      return v85(v84);
    }
    v78._uint64_t countAndFlagsBits = v76;
    v78._object = v75;
    processPushEvents(pushTaskEvents:taskName:contextId:cutoff:)(&v99, v77, v78, *(Swift::String *)(v0 + 24), *(Swift::Double *)(v0 + 40));
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    object = v99.value.contextId._object;
    if (v99.value.contextId._object)
    {
      uint64_t v88 = v99.value.contextId._countAndFlagsBits;
      uint64_t v90 = v99.value.taskName._countAndFlagsBits;
      long long v94 = *(_OWORD *)&v99.value.countPushReceived;
      long long v96 = *(_OWORD *)&v99.value.countPushParameterError;
      Swift::Double pushReceivedLatency = v99.value.pushReceivedLatency;
      long long v92 = *(_OWORD *)&v99.value.pushErrorLatency;
      int v86 = v99.value.taskName._object;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_2544B96B4(0, v98[2] + 1, 1, v98);
        uint64_t v98 = (void *)result;
      }
      unint64_t v82 = v98[2];
      unint64_t v81 = v98[3];
      if (v82 >= v81 >> 1)
      {
        uint64_t result = (uint64_t)sub_2544B96B4((void *)(v81 > 1), v82 + 1, 1, v98);
        uint64_t v98 = (void *)result;
      }
      v98[2] = v82 + 1;
      int v83 = &v98[11 * v82];
      v83[4] = v88;
      v83[5] = object;
      v83[6] = v90;
      v83[7] = v86;
      *((_OWORD *)v83 + 4) = v96;
      *((_OWORD *)v83 + 5) = v94;
      *((_OWORD *)v83 + 6) = v92;
      *((Swift::Double *)v83 + 14) = pushReceivedLatency;
    }
  }
  int64_t v73 = v71 + 3;
  if (v73 >= v68) {
    goto LABEL_84;
  }
  unint64_t v72 = *(void *)(v64 + 8 * v73);
  if (v72)
  {
    int64_t v63 = v73;
    goto LABEL_75;
  }
  while (1)
  {
    int64_t v63 = v73 + 1;
    if (__OFADD__(v73, 1)) {
      break;
    }
    if (v63 >= v68) {
      goto LABEL_84;
    }
    unint64_t v72 = *(void *)(v64 + 8 * v63);
    ++v73;
    if (v72) {
      goto LABEL_75;
    }
  }
LABEL_94:
  __break(1u);
  return result;
}

uint64_t sub_2544F7E38(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_254527A80();
    sub_25451B384();
    uint64_t v4 = sub_254527AB0();
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v7 = ~v5;
      uint64_t v8 = a1;
      while (1)
      {
        unint64_t v9 = 0xD00000000000001ALL;
        unint64_t v10 = 0x8000000254532870;
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v6))
        {
          case 1:
            unint64_t v9 = 0x656365526B736154;
            unint64_t v10 = 0xEC00000064657669;
            break;
          case 2:
            break;
          case 3:
            uint64_t v11 = "TaskSuccessfullyRegistered";
            goto LABEL_9;
          case 4:
            uint64_t v11 = "TaskFailedToRegister";
LABEL_9:
            unint64_t v10 = (unint64_t)v11 | 0x8000000000000000;
            unint64_t v9 = 0xD000000000000014;
            break;
          case 5:
            unint64_t v9 = 0xD00000000000001BLL;
            unint64_t v10 = 0x80000002545328D0;
            break;
          case 6:
            unint64_t v9 = 0x7261745320746F4ELL;
            goto LABEL_12;
          case 7:
            unint64_t v10 = 0xE700000000000000;
            unint64_t v9 = 0x676E696E6E7552;
            break;
          case 8:
            unint64_t v10 = 0xE800000000000000;
            unint64_t v9 = 0x6465727265666544;
            break;
          case 9:
            unint64_t v9 = 0x6574656C706D6F43;
            unint64_t v10 = 0xE900000000000064;
            break;
          case 0xA:
            unint64_t v10 = 0xE600000000000000;
            unint64_t v9 = 0x64656C696146;
            break;
          default:
            unint64_t v9 = 0x616572436B736154;
LABEL_12:
            unint64_t v10 = 0xEB00000000646574;
            break;
        }
        unint64_t v12 = 0xD00000000000001ALL;
        unint64_t v13 = 0x8000000254532870;
        switch(v8)
        {
          case 1:
            unint64_t v13 = 0xEC00000064657669;
            if (v9 == 0x656365526B736154) {
              goto LABEL_36;
            }
            goto LABEL_37;
          case 2:
            goto LABEL_35;
          case 3:
            unint64_t v15 = "TaskSuccessfullyRegistered";
            goto LABEL_23;
          case 4:
            unint64_t v15 = "TaskFailedToRegister";
LABEL_23:
            unint64_t v13 = (unint64_t)v15 | 0x8000000000000000;
            if (v9 != 0xD000000000000014) {
              goto LABEL_37;
            }
            goto LABEL_36;
          case 5:
            unint64_t v13 = 0x80000002545328D0;
            if (v9 != 0xD00000000000001BLL) {
              goto LABEL_37;
            }
            goto LABEL_36;
          case 6:
            uint64_t v14 = 0x7261745320746F4ELL;
            goto LABEL_28;
          case 7:
            unint64_t v13 = 0xE700000000000000;
            if (v9 != 0x676E696E6E7552) {
              goto LABEL_37;
            }
            goto LABEL_36;
          case 8:
            unint64_t v13 = 0xE800000000000000;
            if (v9 != 0x6465727265666544) {
              goto LABEL_37;
            }
            goto LABEL_36;
          case 9:
            unint64_t v12 = 0x6574656C706D6F43;
            unint64_t v13 = 0xE900000000000064;
LABEL_35:
            if (v9 == v12) {
              goto LABEL_36;
            }
            goto LABEL_37;
          case 10:
            unint64_t v13 = 0xE600000000000000;
            if (v9 != 0x64656C696146) {
              goto LABEL_37;
            }
            goto LABEL_36;
          default:
            uint64_t v14 = 0x616572436B736154;
LABEL_28:
            unint64_t v13 = 0xEB00000000646574;
            if (v9 != v14) {
              goto LABEL_37;
            }
LABEL_36:
            if (v10 == v13)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              char v16 = 1;
              return v16 & 1;
            }
LABEL_37:
            char v16 = sub_2545279E0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v16) {
              return v16 & 1;
            }
            unint64_t v6 = (v6 + 1) & v7;
            if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
              return v16 & 1;
            }
            break;
        }
      }
    }
  }
  char v16 = 0;
  return v16 & 1;
}

void __swiftcall processPushEvents(pushTaskEvents:taskName:contextId:cutoff:)(LighthouseBackground::PushTelemetry_optional *__return_ptr retstr, Swift::OpaquePointer pushTaskEvents, Swift::String taskName, Swift::String contextId, Swift::Double cutoff)
{
  object = contextId._object;
  uint64_t countAndFlagsBits = contextId._countAndFlagsBits;
  long long v137 = taskName._object;
  uint64_t v131 = taskName._countAndFlagsBits;
  long long v132 = retstr;
  uint64_t v157 = sub_254526D90();
  uint64_t v7 = *(void *)(v157 - 8);
  MEMORY[0x270FA5388](v157);
  char v153 = (char *)&v128 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3338);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  unint64_t v12 = (char *)&v128 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  char v149 = (unsigned int (**)(char *, uint64_t, uint64_t))((char *)&v128 - v14);
  MEMORY[0x270FA5388](v13);
  v140._rawValue = (char *)&v128 - v15;
  uint64_t v16 = type metadata accessor for PushMetadata(0);
  uint64_t v133 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v146 = (uint64_t)&v128 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v147 = (void **)((char *)&v128._rawValue - v20);
  MEMORY[0x270FA5388](v19);
  char v148 = (Swift::OpaquePointer *)((char *)&v128 - v21);
  char v158 = (int *)type metadata accessor for TaskStatusEvent(0);
  uint64_t v22 = *((void *)v158 - 1);
  MEMORY[0x270FA5388](v158);
  uint64_t v24 = (char *)&v128 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for LedgerState();
  uint64_t v155 = *(void *)(v25 - 8);
  uint64_t v156 = v25;
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (unint64_t *)((char *)&v128 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v28 = *((void *)pushTaskEvents._rawValue + 2);
  v29._rawValue = (void *)MEMORY[0x263F8EE78];
  long long v141 = v12;
  uint64_t v154 = v16;
  uint64_t v150 = v22;
  unint64_t v152 = v28;
  uint64_t v134 = v7;
  rawValue = (char *)pushTaskEvents._rawValue;
  if (v28)
  {
    char v159 = (void *)MEMORY[0x263F8EE78];
    sub_2544FEDAC(0, v28, 0);
    uint64_t v30 = (char *)pushTaskEvents._rawValue
        + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
    Swift::Int v151 = *(void *)(v22 + 72);
    unint64_t v31 = (void (**)(char *, char *, uint64_t))(v7 + 16);
    __int16 v145 = "TaskSuccessfullyRegistered";
    int v144 = "TaskFailedToRegister";
    unint64_t v143 = (unint64_t)"TaskParametersStored";
    while (2)
    {
      sub_2544FFA14((uint64_t)v30, (uint64_t)v24, type metadata accessor for TaskStatusEvent);
      unint64_t v32 = 0xD00000000000001ALL;
      unint64_t v33 = 0x8000000254532870;
      switch(v24[v158[7]])
      {
        case 1:
          unint64_t v33 = 0xEC00000064657669;
          unint64_t v32 = 0x656365526B736154;
          goto LABEL_16;
        case 2:
          goto LABEL_16;
        case 3:
          BOOL v34 = v145;
          goto LABEL_8;
        case 4:
          BOOL v34 = v144;
LABEL_8:
          unint64_t v33 = (unint64_t)v34 | 0x8000000000000000;
          unint64_t v32 = 0xD000000000000014;
          goto LABEL_16;
        case 5:
          unint64_t v32 = 0xD00000000000001BLL;
          unint64_t v33 = v143 | 0x8000000000000000;
          goto LABEL_16;
        case 6:
          unint64_t v32 = 0x7261745320746F4ELL;
          goto LABEL_11;
        case 7:
          unint64_t v33 = 0xE700000000000000;
          unint64_t v32 = 0x676E696E6E7552;
          goto LABEL_16;
        case 8:
          unint64_t v33 = 0xE800000000000000;
          unint64_t v32 = 0x6465727265666544;
          goto LABEL_16;
        case 9:
          unint64_t v33 = 0xE900000000000064;
          unint64_t v32 = 0x6574656C706D6F43;
          goto LABEL_16;
        case 10:
          unint64_t v33 = 0xE600000000000000;
          unint64_t v32 = 0x64656C696146;
          goto LABEL_16;
        default:
          unint64_t v32 = 0x616572436B736154;
LABEL_11:
          unint64_t v33 = 0xEB00000000646574;
LABEL_16:
          (*v31)((char *)v27 + *(int *)(v156 + 20), &v24[v158[5]], v157);
          *uint64_t v27 = v32;
          v27[1] = v33;
          sub_2544FFAE4((uint64_t)v24, type metadata accessor for TaskStatusEvent);
          v29._rawValue = v159;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_2544FEDAC(0, *((void *)v29._rawValue + 2) + 1, 1);
            v29._rawValue = v159;
          }
          unint64_t v36 = *((void *)v29._rawValue + 2);
          unint64_t v35 = *((void *)v29._rawValue + 3);
          if (v36 >= v35 >> 1)
          {
            sub_2544FEDAC(v35 > 1, v36 + 1, 1);
            v29._rawValue = v159;
          }
          *((void *)v29._rawValue + 2) = v36 + 1;
          sub_2544FFA7C((uint64_t)v27, (uint64_t)v29._rawValue+ ((*(unsigned __int8 *)(v155 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v155 + 80))+ *(void *)(v155 + 72) * v36, (uint64_t (*)(void))type metadata accessor for LedgerState);
          v30 += v151;
          if (--v28) {
            continue;
          }
          unint64_t v12 = v141;
          uint64_t v16 = v154;
          uint64_t v22 = v150;
          break;
      }
      break;
    }
  }
  Swift::String v37 = taskEventsToStringSequence(taskEvents:)(v29);
  uint64_t v38 = v37._countAndFlagsBits;
  uint64_t v39 = v37._object;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v40._uint64_t countAndFlagsBits = 0x29525053495428;
  v40._object = (void *)0xE700000000000000;
  uint64_t v41 = (unint64_t *)getRangeFromRegex(regex:stringRepresentation:)(v40, v37);
  BOOL v42 = v41 != 0;
  Swift::Double v43 = -1.0;
  uint64_t v44 = (uint64_t)v149;
  BOOL v45 = v140._rawValue;
  Swift::String v136 = v37;
  if (v41)
  {
    int v129 = 1;
    unint64_t v46 = v41[2];
    unint64_t v47 = v152;
    if (v46)
    {
      Swift::Int v139 = 0;
      Swift::Int v151 = 0;
      uint64_t v48 = v22;
      __int16 v145 = &rawValue[(*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80)];
      int v144 = (const char *)(v133 + 48);
      unint64_t v143 = v134 + 16;
      unsigned __int8 v142 = (char *)(v134 + 8);
      v128._rawValue = v41;
      char v49 = v41 + 5;
      double v50 = 0.0;
      double v51 = 1.0;
      while (1)
      {
        unint64_t v52 = *(v49 - 1);
        if (v52 >= v47) {
          break;
        }
        unint64_t v53 = *v49;
        sub_254493CFC((uint64_t)&v145[*(void *)(v48 + 72) * v52 + v158[8]], (uint64_t)v45, &qword_269DF3338);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))v144)(v45, 1, v154) == 1)
        {
          sub_254498AB8((uint64_t)v45, &qword_269DF3338);
        }
        else
        {
          sub_2544FFA7C((uint64_t)v45, (uint64_t)v148, type metadata accessor for PushMetadata);
          if ((v53 & 0x8000000000000000) != 0) {
            goto LABEL_86;
          }
          if (v53 >= *((void *)v29._rawValue + 2)) {
            goto LABEL_87;
          }
          uint64_t v54 = (char *)v29._rawValue
              + ((*(unsigned __int8 *)(v155 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v155 + 80));
          uint64_t v55 = *(void *)(v155 + 72);
          uint64_t v56 = v157;
          unint64_t v57 = &v54[v55 * v53 + *(int *)(v156 + 20)];
          unint64_t v58 = *(void (**)(char *, char *, uint64_t))v143;
          uint64_t v59 = v153;
          (*(void (**)(char *, char *, uint64_t))v143)(v153, v57, v157);
          sub_254526CE0();
          double v61 = v60;
          BOOL v62 = *(void (**)(char *, uint64_t))v142;
          (*(void (**)(char *, uint64_t))v142)(v59, v56);
          if (v61 >= cutoff)
          {
            if (v52 >= *((void *)v29._rawValue + 2)) {
              goto LABEL_92;
            }
            int64_t v63 = &v54[v55 * v52];
            uint64_t v64 = v157;
            uint64_t v65 = v153;
            v58(v153, &v63[*(int *)(v156 + 20)], v157);
            uint64_t v66 = (unsigned int (**)(void, void, void))v148;
            sub_254526D00();
            double v68 = v67;
            v62(v65, v64);
            sub_2544FFAE4((uint64_t)v66, type metadata accessor for PushMetadata);
            if (__OFADD__(v151, 1)) {
              goto LABEL_93;
            }
            if (__OFADD__(v139, 1)) {
              goto LABEL_94;
            }
            ++v139;
            ++v151;
            double v50 = v50 + (v68 - v50) / v51;
            double v51 = v51 + 1.0;
          }
          else
          {
            sub_2544FFAE4((uint64_t)v148, type metadata accessor for PushMetadata);
          }
          uint64_t v44 = (uint64_t)v149;
          uint64_t v48 = v150;
          unint64_t v47 = v152;
          BOOL v45 = v140._rawValue;
        }
        v49 += 2;
        if (!--v46) {
          goto LABEL_40;
        }
      }
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
      JUMPOUT(0x2544F9354);
    }
    uint64_t v48 = v22;
    v128._rawValue = v41;
    Swift::Int v139 = 0;
    Swift::Int v151 = 0;
    double v50 = 0.0;
    double v51 = 1.0;
LABEL_40:
    double v70 = getLatencyFromRange(matchIndices:events:)(v128, v29);
    swift_bridgeObjectRelease();
    double v69 = v50 + v70;
    unint64_t v12 = v141;
    uint64_t v39 = v136._object;
    uint64_t v38 = v136._countAndFlagsBits;
    BOOL v42 = v129;
    uint64_t v22 = v48;
    uint64_t v16 = v154;
  }
  else
  {
    Swift::Int v139 = 0;
    Swift::Int v151 = 0;
    double v50 = 0.0;
    double v51 = 1.0;
    double v69 = -1.0;
    unint64_t v47 = v152;
  }
  v71._uint64_t countAndFlagsBits = 0x2947495428;
  v71._object = (void *)0xE500000000000000;
  v72._uint64_t countAndFlagsBits = v38;
  v72._object = v39;
  int64_t v73 = (unint64_t *)getRangeFromRegex(regex:stringRepresentation:)(v71, v72);
  if (v73)
  {
    unint64_t v74 = v73[2];
    if (v74)
    {
      unint64_t v143 = 0;
      uint64_t v75 = v22;
      uint64_t v76 = &rawValue[(*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80)];
      char v148 = (Swift::OpaquePointer *)(v133 + 48);
      __int16 v145 = (const char *)(v134 + 16);
      int v144 = (const char *)(v134 + 8);
      v140._rawValue = v73;
      Swift::OpaquePointer v77 = v73 + 5;
      unsigned __int8 v142 = v76;
      while (1)
      {
        unint64_t v78 = *(v77 - 1);
        if (v78 >= v47) {
          goto LABEL_84;
        }
        unint64_t v79 = *v77;
        sub_254493CFC((uint64_t)&v76[*(void *)(v75 + 72) * v78 + v158[8]], v44, &qword_269DF3338);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v148->_rawValue)(v44, 1, v154) == 1)
        {
          sub_254498AB8(v44, &qword_269DF3338);
        }
        else
        {
          sub_2544FFA7C(v44, (uint64_t)v147, type metadata accessor for PushMetadata);
          if ((v79 & 0x8000000000000000) != 0) {
            goto LABEL_88;
          }
          if (v79 >= *((void *)v29._rawValue + 2)) {
            goto LABEL_89;
          }
          uint64_t v80 = (char *)v29._rawValue
              + ((*(unsigned __int8 *)(v155 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v155 + 80));
          uint64_t v81 = *(void *)(v155 + 72);
          uint64_t v82 = v157;
          int v83 = &v80[v81 * v79 + *(int *)(v156 + 20)];
          int v84 = *(void (**)(char *, char *, uint64_t))v145;
          int v85 = v153;
          (*(void (**)(char *, char *, uint64_t))v145)(v153, v83, v157);
          sub_254526CE0();
          double v87 = v86;
          uint64_t v88 = *(void (**)(char *, uint64_t))v144;
          (*(void (**)(char *, uint64_t))v144)(v85, v82);
          if (v87 >= cutoff)
          {
            if (v78 >= *((void *)v29._rawValue + 2)) {
              goto LABEL_95;
            }
            uint64_t v89 = &v80[v81 * v78];
            uint64_t v90 = v157;
            uint64_t v91 = v153;
            v84(v153, &v89[*(int *)(v156 + 20)], v157);
            long long v92 = v147;
            sub_254526D00();
            double v94 = v93;
            v88(v91, v90);
            sub_2544FFAE4((uint64_t)v92, type metadata accessor for PushMetadata);
            if (__OFADD__(v151, 1)) {
              goto LABEL_96;
            }
            if (__OFADD__(v143, 1)) {
              goto LABEL_97;
            }
            ++v143;
            ++v151;
            double v50 = v50 + (v94 - v50) / v51;
            double v51 = v51 + 1.0;
          }
          else
          {
            sub_2544FFAE4((uint64_t)v147, type metadata accessor for PushMetadata);
          }
          uint64_t v44 = (uint64_t)v149;
          uint64_t v75 = v150;
          unint64_t v47 = v152;
          uint64_t v76 = v142;
        }
        v77 += 2;
        if (!--v74) {
          goto LABEL_59;
        }
      }
    }
    uint64_t v75 = v22;
    v140._rawValue = v73;
    unint64_t v143 = 0;
LABEL_59:
    Swift::Double v43 = getLatencyFromRange(matchIndices:events:)(v140, v29);
    swift_bridgeObjectRelease();
    BOOL v42 = 1;
    unint64_t v12 = v141;
    uint64_t v39 = v136._object;
    uint64_t v38 = v136._countAndFlagsBits;
    uint64_t v22 = v75;
    uint64_t v16 = v154;
  }
  else
  {
    unint64_t v143 = 0;
  }
  v95._uint64_t countAndFlagsBits = 0x295A53495428;
  v95._object = (void *)0xE600000000000000;
  v96._uint64_t countAndFlagsBits = v38;
  v96._object = v39;
  unint64_t v97 = (unint64_t)getRangeFromRegex(regex:stringRepresentation:)(v95, v96);
  swift_bridgeObjectRelease();
  if (v97)
  {
    uint64_t v98 = *(void *)(v97 + 16);
    if (v98)
    {
      uint64_t v99 = v16;
      uint64_t v100 = v22;
      uint64_t v101 = &rawValue[(*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80)];
      char v149 = (unsigned int (**)(char *, uint64_t, uint64_t))(v133 + 48);
      uint64_t v147 = (void *)(v134 + 8);
      char v148 = (Swift::OpaquePointer *)(v134 + 16);
      swift_bridgeObjectRetain();
      __int16 v145 = 0;
      unsigned __int8 v142 = (char *)v97;
      int v102 = (unint64_t *)(v97 + 40);
      int v144 = v101;
      do
      {
        unint64_t v103 = *(v102 - 1);
        if (v103 >= v152) {
          goto LABEL_85;
        }
        unint64_t v104 = *v102;
        sub_254493CFC((uint64_t)&v101[*(void *)(v100 + 72) * v103 + v158[8]], (uint64_t)v12, &qword_269DF3338);
        if ((*v149)(v12, 1, v99) == 1)
        {
          sub_254498AB8((uint64_t)v12, &qword_269DF3338);
        }
        else
        {
          sub_2544FFA7C((uint64_t)v12, v146, type metadata accessor for PushMetadata);
          if ((v104 & 0x8000000000000000) != 0) {
            goto LABEL_90;
          }
          if (v104 >= *((void *)v29._rawValue + 2)) {
            goto LABEL_91;
          }
          uint64_t v105 = (char *)v29._rawValue
               + ((*(unsigned __int8 *)(v155 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v155 + 80));
          uint64_t v106 = *(void *)(v155 + 72);
          uint64_t v107 = v157;
          uint64_t v108 = &v105[v106 * v104 + *(int *)(v156 + 20)];
          uint64_t v109 = (unsigned int (*)(char *, char *, uint64_t))v148->_rawValue;
          uint64_t v110 = v153;
          ((void (*)(char *, char *, uint64_t))v148->_rawValue)(v153, v108, v157);
          sub_254526CE0();
          double v112 = v111;
          uint64_t v113 = (void (*)(char *, uint64_t))*v147;
          ((void (*)(char *, uint64_t))*v147)(v110, v107);
          if (v112 >= cutoff)
          {
            if (v103 >= *((void *)v29._rawValue + 2)) {
              goto LABEL_98;
            }
            uint64_t v114 = &v105[v106 * v103];
            uint64_t v115 = v157;
            uint64_t v116 = v153;
            v109(v153, &v114[*(int *)(v156 + 20)], v157);
            uint64_t v99 = v154;
            uint64_t v117 = v146;
            sub_254526D00();
            double v119 = v118;
            v113(v116, v115);
            sub_2544FFAE4(v117, type metadata accessor for PushMetadata);
            if (__OFADD__(v151, 1)) {
              goto LABEL_99;
            }
            if (__OFADD__(v145, 1)) {
              goto LABEL_100;
            }
            ++v145;
            ++v151;
            double v50 = v50 + (v119 - v50) / v51;
            double v51 = v51 + 1.0;
            unint64_t v12 = v141;
          }
          else
          {
            sub_2544FFAE4(v146, type metadata accessor for PushMetadata);
            unint64_t v12 = v141;
            uint64_t v99 = v154;
          }
          uint64_t v100 = v150;
          uint64_t v101 = v144;
        }
        v102 += 2;
        --v98;
      }
      while (v98);
      unint64_t v97 = (unint64_t)v142;
      swift_bridgeObjectRelease();
      Swift::Int v121 = v151;
      Swift::Int v122 = v139;
      unint64_t v123 = v143;
      int v120 = v145;
    }
    else
    {
      int v120 = 0;
      Swift::Int v121 = v151;
      Swift::Int v122 = v139;
      unint64_t v123 = v143;
    }
    Swift::Double v43 = getLatencyFromRange(matchIndices:events:)((Swift::OpaquePointer)v97, v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_81;
  }
  swift_bridgeObjectRelease();
  if (v42)
  {
    int v120 = 0;
    Swift::Int v121 = v151;
    Swift::Int v122 = v139;
    unint64_t v123 = v143;
LABEL_81:
    long long v124 = v132;
    long long v125 = object;
    v132->value.contextId._uint64_t countAndFlagsBits = countAndFlagsBits;
    v124->value.contextId._object = v125;
    long long v126 = v137;
    v124->value.taskName._uint64_t countAndFlagsBits = v131;
    v124->value.taskName._object = v126;
    v124->value.countPushParameterError = (Swift::Int)v120;
    v124->value.countPushProcessed = v122;
    v124->value.countPushReceived = v121;
    v124->value.countPushRegistrationError = v123;
    v124->value.pushErrorLatency = v43;
    v124->value.pushFirstRunLatency = v69;
    v124->value.Swift::Double pushReceivedLatency = v50;
    return;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v127 = v132;
  v132->value.Swift::Double pushReceivedLatency = 0.0;
  *(_OWORD *)&v127->value.countPushReceived = 0u;
  *(_OWORD *)&v127->value.pushErrorLatency = 0u;
  v127->value.taskName = 0u;
  *(_OWORD *)&v127->value.countPushParameterError = 0u;
  v127->value.contextId = 0u;
}

uint64_t processTaskTelemetry(telemetryConfig:telemetryRange:allEvents:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 88) = a2;
  *(void *)(v3 + 96) = a3;
  type metadata accessor for TelemetryBucketRange();
  *(void *)(v3 + 104) = swift_task_alloc();
  *(void *)(v3 + 112) = *(void *)(type metadata accessor for DeviceTelemetry(0) - 8);
  *(void *)(v3 + 120) = swift_task_alloc();
  *(void *)(v3 + 128) = swift_task_alloc();
  uint64_t v5 = sub_254526E00();
  *(void *)(v3 + 136) = v5;
  *(void *)(v3 + 144) = *(void *)(v5 - 8);
  *(void *)(v3 + 152) = swift_task_alloc();
  *(void *)(v3 + 160) = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF38B0);
  *(void *)(v3 + 168) = swift_task_alloc();
  *(void *)(v3 + 176) = swift_task_alloc();
  *(void *)(v3 + 184) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48E0);
  *(void *)(v3 + 192) = swift_task_alloc();
  *(void *)(v3 + 200) = swift_task_alloc();
  *(void *)(v3 + 208) = swift_task_alloc();
  *(void *)(v3 + 216) = swift_task_alloc();
  *(void *)(v3 + 224) = swift_task_alloc();
  *(void *)(v3 + 232) = swift_task_alloc();
  uint64_t v6 = sub_254526D90();
  *(void *)(v3 + 240) = v6;
  *(void *)(v3 + 248) = *(void *)(v6 - 8);
  *(void *)(v3 + 256) = swift_task_alloc();
  uint64_t v7 = swift_task_alloc();
  *(unsigned char *)(v3 + 320) = *(unsigned char *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)(v3 + 264) = v7;
  *(void *)(v3 + 272) = v8;
  *(void *)(v3 + 280) = v9;
  *(unsigned char *)(v3 + 321) = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(v3 + 322) = *(unsigned char *)(a1 + 25);
  return MEMORY[0x270FA2498](sub_2544F961C, 0, 0);
}

uint64_t sub_2544F961C()
{
  long long v130 = v0;
  uint64_t v1 = (double *)*((void *)v0 + 11);
  double v2 = *v1;
  unint64_t v3 = MEMORY[0x263F8EE78];
  *((void *)v0 + 2) = MEMORY[0x263F8EE78];
  uint64_t v107 = (uint64_t *)(v0 + 16);
  uint64_t v108 = (unsigned __int8 *)(v0 + 321);
  *((void *)v0 + 3) = v3;
  Swift::String v95 = (uint64_t *)(v0 + 24);
  unint64_t v97 = v0 + 80;
  double v4 = v1[1];
  if (v4 > v2)
  {
    uint64_t v5 = 0;
    uint64_t v125 = 0;
    uint64_t v98 = v0 + 48;
    uint64_t v6 = (char *)*((void *)v0 + 31);
    uint64_t v109 = (int *)*((void *)v0 + 23);
    uint64_t v7 = (char *)*((void *)v0 + 18);
    unint64_t v104 = (void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    uint64_t v105 = (int *)*((void *)v0 + 20);
    unint64_t v103 = (void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
    uint64_t v106 = v0;
    Swift::String v96 = (void *)*((void *)v0 + 14);
    uint64_t v117 = v6 + 8;
    int v102 = (void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    uint64_t v101 = (void (**)(uint64_t, uint64_t))(v7 + 8);
    while (!__OFADD__(v5, 1))
    {
      if (sub_254527330())
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        double v118 = 0.0;
        unint64_t v120 = 0;
        uint64_t v124 = 0;
        uint64_t v127 = 0;
        uint64_t v0 = v106;
        goto LABEL_32;
      }
      uint64_t v0 = v106;
      sub_254526CD0();
      sub_254526D10();
      sub_2544FF9D0((unint64_t *)&qword_269DF38B8);
      if ((sub_254526F90() & 1) == 0) {
        goto LABEL_40;
      }
      uint64_t v110 = v5 + 1;
      uint64_t v111 = v5;
      uint64_t v13 = *((void *)v106 + 33);
      uint64_t v14 = *((void *)v106 + 30);
      unint64_t v119 = v3;
      uint64_t v121 = *((void *)v106 + 29);
      uint64_t v15 = *((void *)v106 + 28);
      uint64_t v16 = *((void *)v106 + 21);
      uint64_t v17 = *((void *)v106 + 22);
      uint64_t v18 = v17 + v105[12];
      uint64_t v19 = *v104;
      (*v104)(v17, *((void *)v106 + 32), v14);
      uint64_t v115 = v18;
      v19(v18, v13, v14);
      uint64_t v20 = v16 + v105[12];
      v19(v16, v17, v14);
      v19(v20, v18, v14);
      uint64_t v21 = *v103;
      (*v103)(v15, v16, v14);
      uint64_t v22 = *(void (**)(void, uint64_t))v117;
      (*(void (**)(uint64_t, uint64_t))v117)(v20, v14);
      uint64_t v23 = v16 + v105[12];
      v21(v16, v17, v14);
      v21(v23, v115, v14);
      v21(v15 + v109[9], v23, v14);
      uint64_t v116 = v22;
      v22(v16, v14);
      sub_254493190(v15, v121, (uint64_t *)&unk_269DF48E0);
      if (qword_26B267240 != -1) {
        swift_once();
      }
      uint64_t v24 = *((void *)v106 + 29);
      uint64_t v26 = *((void *)v106 + 26);
      uint64_t v25 = *((void *)v106 + 27);
      uint64_t v27 = __swift_project_value_buffer(*((void *)v106 + 17), (uint64_t)qword_26B267340);
      sub_254493CFC(v24, v25, (uint64_t *)&unk_269DF48E0);
      sub_254493CFC(v24, v26, (uint64_t *)&unk_269DF48E0);
      uint64_t v122 = v27;
      int64_t v28 = sub_254526DE0();
      os_log_type_t v29 = sub_254527400();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = *((void *)v106 + 27);
        uint64_t v99 = *((void *)v106 + 26);
        uint64_t v31 = swift_slowAlloc();
        uint64_t v112 = swift_slowAlloc();
        v129[0] = v112;
        *(_DWORD *)uint64_t v31 = 136315394;
        sub_2544FF9D0(&qword_269DF4838);
        uint64_t v32 = sub_2545279B0();
        *((void *)v106 + 8) = sub_254498B68(v32, v33, v129);
        sub_254527500();
        swift_bridgeObjectRelease();
        sub_254498AB8(v30, (uint64_t *)&unk_269DF48E0);
        *(_WORD *)(v31 + 12) = 2080;
        uint64_t v34 = sub_2545279B0();
        *((void *)v106 + 9) = sub_254498B68(v34, v35, v129);
        sub_254527500();
        swift_bridgeObjectRelease();
        sub_254498AB8(v99, (uint64_t *)&unk_269DF48E0);
        _os_log_impl(&dword_254486000, v28, v29, "Processing task telemetry for bucket from %s to %s", (uint8_t *)v31, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x25A27C9E0](v112, -1, -1);
        MEMORY[0x25A27C9E0](v31, -1, -1);
      }
      else
      {
        uint64_t v36 = *((void *)v106 + 26);
        sub_254498AB8(*((void *)v106 + 27), (uint64_t *)&unk_269DF48E0);
        sub_254498AB8(v36, (uint64_t *)&unk_269DF48E0);
      }

      uint64_t v37 = *((void *)v106 + 34);
      uint64_t v38 = *((void *)v106 + 35);
      char v39 = v106[320];
      uint64_t v40 = *((void *)v106 + 29);
      uint64_t v41 = *((void *)v106 + 19);
      uint64_t v42 = *((void *)v106 + 17);
      uint64_t v43 = *((void *)v106 + 12);
      uint64_t v44 = swift_task_alloc();
      *(void *)(v44 + 16) = v40;
      swift_bridgeObjectRetain();
      unint64_t v45 = sub_2544B768C((uint64_t (*)(char *))sub_2544FF9B0, v44, v43);
      swift_task_dealloc();
      LOBYTE(v129[0]) = v39;
      unint64_t v46 = processEvents(bucketEvents:bucketRange:contextId:bucketInterval:)(v45, v40, v37, v38, (unsigned __int8 *)v129);
      uint64_t v48 = v47;
      swift_bridgeObjectRelease();
      (*v102)(v41, v122, v42);
      swift_bridgeObjectRetain_n();
      char v49 = sub_254526DE0();
      os_log_type_t v50 = sub_254527410();
      if (os_log_type_enabled(v49, v50))
      {
        uint64_t v51 = swift_slowAlloc();
        uint64_t v52 = swift_slowAlloc();
        uint64_t v128 = v52;
        *(_DWORD *)uint64_t v51 = 134218242;
        *uint64_t v98 = *(void *)(v48 + 16);
        sub_254527500();
        *(_WORD *)(v51 + 12) = 2080;
        swift_bridgeObjectRetain_n();
        uint64_t v53 = sub_2544D51E0(v48);
        swift_bridgeObjectRelease();
        v129[0] = v53;
        sub_2544D54A8(v129);
        uint64_t v126 = *((void *)v106 + 19);
        uint64_t v113 = *((void *)v106 + 17);
        swift_bridgeObjectRelease();
        uint64_t v54 = MEMORY[0x25A27B9A0](v129[0], MEMORY[0x263F8D310]);
        os_log_type_t v100 = v50;
        unint64_t v56 = v55;
        swift_release();
        *((void *)v106 + 7) = sub_254498B68(v54, v56, &v128);
        sub_254527500();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_254486000, v49, v100, "Processed %ld tasks in bucket. Task names: %s", (uint8_t *)v51, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x25A27C9E0](v52, -1, -1);
        MEMORY[0x25A27C9E0](v51, -1, -1);

        (*v101)(v126, v113);
        uint64_t v57 = 0;
      }
      else
      {
        uint64_t v58 = *((void *)v106 + 19);
        uint64_t v59 = *((void *)v106 + 17);
        swift_bridgeObjectRelease_n();

        (*v101)(v58, v59);
        uint64_t v57 = v125;
      }
      int v60 = *v108;
      sub_2544FC3A8(v46);
      sub_254526CE0();
      double v62 = v61;
      uint64_t v125 = v57;
      if (v60 == 1)
      {
        uint64_t v63 = *((void *)v106 + 29);
        uint64_t v64 = *((void *)v106 + 24);
        sub_254493CFC(v63, *((void *)v106 + 25), (uint64_t *)&unk_269DF48E0);
        sub_254493CFC(v63, v64, (uint64_t *)&unk_269DF48E0);
        uint64_t v65 = sub_254526DE0();
        os_log_type_t v66 = sub_254527400();
        if (os_log_type_enabled(v65, v66))
        {
          uint64_t v67 = *((void *)v106 + 25);
          uint64_t v114 = *((void *)v106 + 24);
          uint64_t v68 = swift_slowAlloc();
          uint64_t v123 = swift_slowAlloc();
          v129[0] = v123;
          *(_DWORD *)uint64_t v68 = 136315394;
          sub_2544FF9D0(&qword_269DF4838);
          uint64_t v69 = sub_2545279B0();
          *((void *)v106 + 4) = sub_254498B68(v69, v70, v129);
          sub_254527500();
          swift_bridgeObjectRelease();
          sub_254498AB8(v67, (uint64_t *)&unk_269DF48E0);
          *(_WORD *)(v68 + 12) = 2080;
          uint64_t v71 = sub_2545279B0();
          *((void *)v106 + 5) = sub_254498B68(v71, v72, v129);
          sub_254527500();
          swift_bridgeObjectRelease();
          sub_254498AB8(v114, (uint64_t *)&unk_269DF48E0);
          _os_log_impl(&dword_254486000, v65, v66, "Processing device telemetry for bucket from %s to %s", (uint8_t *)v68, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x25A27C9E0](v123, -1, -1);
          MEMORY[0x25A27C9E0](v68, -1, -1);
        }
        else
        {
          uint64_t v73 = *((void *)v106 + 24);
          sub_254498AB8(*((void *)v106 + 25), (uint64_t *)&unk_269DF48E0);
          sub_254498AB8(v73, (uint64_t *)&unk_269DF48E0);
        }

        uint64_t v75 = *((void *)v106 + 15);
        unint64_t v74 = (void *)*((void *)v106 + 16);
        processAnalytics(taskAnalyticsMap:bucketRange:contextId:)(v48, *((void *)v106 + 29), *((void *)v106 + 34), *((void *)v106 + 35), v74);
        swift_bridgeObjectRelease();
        sub_2544FFA14((uint64_t)v74, v75, type metadata accessor for DeviceTelemetry);
        unint64_t v3 = v119;
        uint64_t v8 = v111;
        uint64_t v9 = v110;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v3 = sub_2544B9848(0, *(void *)(v119 + 16) + 1, 1, v119);
        }
        unint64_t v77 = *(void *)(v3 + 16);
        unint64_t v76 = *(void *)(v3 + 24);
        if (v77 >= v76 >> 1) {
          unint64_t v3 = sub_2544B9848(v76 > 1, v77 + 1, 1, v3);
        }
        uint64_t v78 = *((void *)v106 + 15);
        uint64_t v79 = *((void *)v106 + 16);
        *(void *)(v3 + 16) = v77 + 1;
        sub_2544FFA7C(v78, v3+ ((*((unsigned __int8 *)v96 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v96 + 80))+ v96[9] * v77, type metadata accessor for DeviceTelemetry);
        sub_2544FFAE4(v79, type metadata accessor for DeviceTelemetry);
      }
      else
      {
        swift_bridgeObjectRelease();
        unint64_t v3 = v119;
        uint64_t v8 = v111;
        uint64_t v9 = v110;
      }
      uint64_t v10 = *((void *)v106 + 33);
      uint64_t v12 = *((void *)v106 + 29);
      uint64_t v11 = *((void *)v106 + 30);
      uint64_t v0 = v117;
      v116(*((void *)v106 + 32), v11);
      v116(v10, v11);
      sub_254498AB8(v12, (uint64_t *)&unk_269DF48E0);
      uint64_t v5 = v8 + 1;
      if (v4 <= v2 + (double)v9 * 86400.0)
      {
        double v2 = v62;
        uint64_t v0 = v106;
        goto LABEL_27;
      }
    }
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
LABEL_27:
  *((void *)v0 + 37) = v3;
  *((double *)v0 + 36) = v2;
  if (v108[1] == 1)
  {
    if (qword_26B267240 == -1)
    {
LABEL_29:
      uint64_t v80 = *((void *)v0 + 13);
      uint64_t v81 = *((void *)v0 + 11);
      __swift_project_value_buffer(*((void *)v0 + 17), (uint64_t)qword_26B267340);
      sub_2544FFA14(v81, v80, (uint64_t (*)(void))type metadata accessor for TelemetryBucketRange);
      uint64_t v82 = sub_254526DE0();
      os_log_type_t v83 = sub_254527400();
      BOOL v84 = os_log_type_enabled(v82, v83);
      uint64_t v85 = *((void *)v0 + 13);
      if (v84)
      {
        double v86 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)double v86 = 134217984;
        void *v97 = *(void *)(v85 + 8);
        sub_254527500();
        sub_2544FFAE4(v85, (uint64_t (*)(void))type metadata accessor for TelemetryBucketRange);
        _os_log_impl(&dword_254486000, v82, v83, "Processing push telemetry with cutoff: %f", v86, 0xCu);
        MEMORY[0x25A27C9E0](v86, -1, -1);
      }
      else
      {
        sub_2544FFAE4(*((void *)v0 + 13), (uint64_t (*)(void))type metadata accessor for TelemetryBucketRange);
      }
      uint64_t v89 = (double *)*((void *)v0 + 11);

      double v90 = *v89;
      uint64_t v91 = (void *)swift_task_alloc();
      *((void *)v0 + 38) = v91;
      void *v91 = v0;
      v91[1] = sub_2544FA52C;
      uint64_t v93 = *((void *)v0 + 34);
      uint64_t v92 = *((void *)v0 + 35);
      uint64_t v94 = *((void *)v0 + 12);
      return processPushTelemetry(contextId:cutoff:allEvents:)(v93, v92, v94, v90);
    }
LABEL_41:
    swift_once();
    goto LABEL_29;
  }
  uint64_t v127 = *v107;
  unint64_t v120 = v3;
  uint64_t v124 = *v95;
  double v118 = v2;
LABEL_32:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  double v87 = (uint64_t (*)(void, uint64_t, unint64_t, uint64_t))*((void *)v0 + 1);
  return v87(*(void *)&v118, v127, v120, v124);
}

uint64_t sub_2544FA52C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 312) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2544FA62C, 0, 0);
}

uint64_t sub_2544FA62C()
{
  uint64_t v1 = v0[39];
  if (v1)
  {
    sub_2544FC54C(v1);
    uint64_t v6 = v0[36];
    uint64_t v7 = v0[37];
    uint64_t v4 = v0[3];
    uint64_t v5 = v0[2];
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v4 = 0;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  double v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[1];
  return v2(v6, v5, v7, v4);
}

uint64_t sub_2544FA79C(uint64_t a1, uint64_t a2)
{
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48E0);
  MEMORY[0x270FA5388](v17);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TaskStatusEvent(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v16 - v10;
  sub_254526D90();
  sub_2544FF9D0((unint64_t *)&qword_269DF38B8);
  char v12 = sub_254526F80();
  sub_2544FFA14(a1, (uint64_t)v11, type metadata accessor for TaskStatusEvent);
  sub_254493CFC(a2, (uint64_t)v5, (uint64_t *)&unk_269DF48E0);
  if (v12)
  {
    sub_254498AB8((uint64_t)v5, (uint64_t *)&unk_269DF48E0);
    sub_2544FFAE4((uint64_t)v11, type metadata accessor for TaskStatusEvent);
    sub_2544FFA14(a1, (uint64_t)v9, type metadata accessor for TaskStatusEvent);
LABEL_4:
    char v14 = 0;
    goto LABEL_8;
  }
  char v13 = sub_254526F80();
  sub_254498AB8((uint64_t)v5, (uint64_t *)&unk_269DF48E0);
  sub_2544FFAE4((uint64_t)v11, type metadata accessor for TaskStatusEvent);
  sub_2544FFA14(a1, (uint64_t)v9, type metadata accessor for TaskStatusEvent);
  if (v13) {
    goto LABEL_4;
  }
  if (qword_269DF2F10 != -1) {
    swift_once();
  }
  char v14 = sub_2544F7E38(v9[*(int *)(v6 + 28)], qword_269DF4820);
LABEL_8:
  sub_2544FFAE4((uint64_t)v9, type metadata accessor for TaskStatusEvent);
  return v14 & 1;
}

unint64_t processEvents(bucketEvents:bucketRange:contextId:bucketInterval:)(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5)
{
  uint64_t v190 = a4;
  uint64_t v189 = a3;
  uint64_t v212 = a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
  MEMORY[0x270FA5388](v7 - 8);
  char v188 = (char *)&v169 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48E0);
  uint64_t v9 = MEMORY[0x270FA5388](v173);
  uint64_t v187 = (char *)&v169 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v211 = (uint64_t)&v169 - v11;
  uint64_t v186 = type metadata accessor for TaskTelemetry(0);
  uint64_t v185 = *(void *)(v186 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v186);
  uint64_t v210 = (uint64_t)&v169 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v208 = (char *)&v169 - v14;
  uint64_t v195 = type metadata accessor for MLHostAnalytics();
  uint64_t v15 = MEMORY[0x270FA5388](v195);
  uint64_t v194 = (uint64_t)&v169 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  int v218 = (uint64_t *)((char *)&v169 - v17);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4840);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  char v199 = (char *)&v169 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  int v198 = (char *)&v169 - v21;
  uint64_t v197 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
  uint64_t v172 = *(void *)(v197 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v197);
  uint64_t v184 = (uint64_t)&v169 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v193 = (uint64_t *)((char *)&v169 - v25);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v192 = (uint64_t)&v169 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v191 = (uint64_t)&v169 - v28;
  uint64_t v215 = sub_254526D90();
  uint64_t v29 = *(void *)(v215 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v215);
  int v209 = (char *)&v169 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  char v203 = (char *)&v169 - v32;
  uint64_t v216 = type metadata accessor for LedgerState();
  uint64_t v202 = *(void *)(v216 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v216);
  unint64_t v35 = (char *)&v169 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  uint64_t v207 = (unint64_t *)((char *)&v169 - v36);
  uint64_t v37 = (int *)type metadata accessor for TaskStatusEvent(0);
  uint64_t v38 = *((void *)v37 - 1);
  MEMORY[0x270FA5388](v37);
  uint64_t v40 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v169 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v183 = *a5;
  MLHostTask = getMLHostTaskGraph()();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3978);
  swift_allocObject();
  uint64_t v42 = sub_2544AB348((uint64_t)MLHostTask);
  swift_release();
  uint64_t v43 = MEMORY[0x263F8EE78];
  unint64_t v44 = sub_2544A5B50(MEMORY[0x263F8EE78]);
  unint64_t v45 = sub_2544A58E8(v43);
  unint64_t v213 = sub_2544A5D54(v43);
  uint64_t v46 = *(void *)(a1 + 16);
  if (v46)
  {
    uint64_t v47 = v37[5];
    uint64_t v200 = (char *)v40 + v37[6];
    unint64_t v196 = v37[7];
    uint64_t v201 = v40;
    uint64_t v182 = (char *)v40 + v47;
    uint64_t v48 = a1 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
    int v178 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 72);
    uint64_t v181 = (void (**)(char *, uint64_t, uint64_t))(v29 + 16);
    uint64_t v170 = v29;
    uint64_t v180 = (void (**)(char *, char *, uint64_t))(v29 + 32);
    unint64_t v174 = a1;
    swift_bridgeObjectRetain();
    char v49 = 0;
    unint64_t v179 = (unint64_t)"";
    char v177 = "TaskSuccessfullyRegistered";
    char v176 = "TaskFailedToRegister";
    int64_t v175 = (int64_t)"TaskParametersStored";
    unint64_t v214 = v44;
    while (2)
    {
      uint64_t v204 = v46;
      uint64_t v205 = v48;
      os_log_type_t v50 = v201;
      sub_2544FFA14(v48, (uint64_t)v201, type metadata accessor for TaskStatusEvent);
      uint64_t v51 = *((void *)v200 + 1);
      __int16 v206 = *(void (**)(void, char *, uint64_t))v200;
      uint64_t v217 = v51;
      unint64_t v52 = 0xD00000000000001ALL;
      unint64_t v53 = v179 | 0x8000000000000000;
      uint64_t v54 = v215;
      switch(*((unsigned char *)v50 + v196))
      {
        case 1:
          unint64_t v53 = 0xEC00000064657669;
          unint64_t v52 = 0x656365526B736154;
          goto LABEL_16;
        case 2:
          goto LABEL_16;
        case 3:
          unint64_t v55 = &v209;
          goto LABEL_9;
        case 4:
          unint64_t v55 = &v208;
LABEL_9:
          unint64_t v53 = (unint64_t)*(v55 - 32) | 0x8000000000000000;
          unint64_t v52 = 0xD000000000000014;
          goto LABEL_16;
        case 5:
          unint64_t v52 = 0xD00000000000001BLL;
          unint64_t v53 = v175 | 0x8000000000000000;
          goto LABEL_16;
        case 6:
          unint64_t v52 = 0x7261745320746F4ELL;
          goto LABEL_13;
        case 7:
          unint64_t v53 = 0xE700000000000000;
          unint64_t v52 = 0x676E696E6E7552;
          goto LABEL_16;
        case 8:
          unint64_t v53 = 0xE800000000000000;
          unint64_t v52 = 0x6465727265666544;
          goto LABEL_16;
        case 9:
          unint64_t v52 = 0x6574656C706D6F43;
          unint64_t v53 = 0xE900000000000064;
          goto LABEL_16;
        case 0xA:
          unint64_t v53 = 0xE600000000000000;
          unint64_t v52 = 0x64656C696146;
          goto LABEL_16;
        default:
          unint64_t v52 = 0x616572436B736154;
LABEL_13:
          unint64_t v53 = 0xEB00000000646574;
LABEL_16:
          unint64_t v56 = v203;
          (*v181)(v203, (uint64_t)v182, v215);
          uint64_t v57 = v217;
          swift_bridgeObjectRetain();
          sub_2544FFAE4((uint64_t)v50, type metadata accessor for TaskStatusEvent);
          uint64_t v58 = v207;
          *uint64_t v207 = v52;
          v58[1] = v53;
          (*v180)((char *)v58 + *(int *)(v216 + 20), v56, v54);
          sub_2544BB6A4((uint64_t)v49);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v220 = v45;
          int v60 = (void (*)(void, void, void))v206;
          unint64_t v62 = sub_2544B9B58((uint64_t)v206, v57);
          uint64_t v63 = *(void *)(v45 + 16);
          BOOL v64 = (v61 & 1) == 0;
          uint64_t v65 = v63 + v64;
          if (__OFADD__(v63, v64)) {
            goto LABEL_115;
          }
          char v66 = v61;
          if (*(void *)(v45 + 24) >= v65)
          {
            uint64_t v69 = v205;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_2544BBF30();
              unint64_t v45 = v220;
            }
          }
          else
          {
            sub_2544BA0D8(v65, isUniquelyReferenced_nonNull_native);
            unint64_t v45 = v220;
            unint64_t v67 = sub_2544B9B58((uint64_t)v60, v57);
            uint64_t v69 = v205;
            if ((v66 & 1) != (v68 & 1)) {
              goto LABEL_119;
            }
            unint64_t v62 = v67;
          }
          swift_bridgeObjectRelease();
          if (v66) {
            goto LABEL_28;
          }
          *(void *)(v45 + 8 * (v62 >> 6) + 64) |= 1 << v62;
          unint64_t v70 = (void *)(*(void *)(v45 + 48) + 16 * v62);
          *unint64_t v70 = v60;
          v70[1] = v57;
          *(void *)(*(void *)(v45 + 56) + 8 * v62) = MEMORY[0x263F8EE78];
          uint64_t v71 = *(void *)(v45 + 16);
          uint64_t v72 = v71 + 1;
          BOOL v73 = __OFADD__(v71, 1);
          swift_bridgeObjectRetain();
          if (v73) {
            goto LABEL_117;
          }
          *(void *)(v45 + 16) = v72;
LABEL_28:
          swift_bridgeObjectRetain();
          uint64_t v74 = *(void *)(v45 + 56);
          swift_bridgeObjectRelease();
          unint64_t v75 = *(void *)(v74 + 8 * v62);
          char v76 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v74 + 8 * v62) = v75;
          if ((v76 & 1) == 0)
          {
            unint64_t v75 = sub_2544B92F0(0, *(void *)(v75 + 16) + 1, 1, v75);
            *(void *)(v74 + 8 * v62) = v75;
          }
          unint64_t v78 = *(void *)(v75 + 16);
          unint64_t v77 = *(void *)(v75 + 24);
          if (v78 >= v77 >> 1)
          {
            unint64_t v75 = sub_2544B92F0(v77 > 1, v78 + 1, 1, v75);
            *(void *)(v74 + 8 * v62) = v75;
          }
          unint64_t v44 = v214;
          *(void *)(v75 + 16) = v78 + 1;
          sub_2544FFA7C((uint64_t)v207, v75+ ((*(unsigned __int8 *)(v202 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v202 + 80))+ *(void *)(v202 + 72) * v78, (uint64_t (*)(void))type metadata accessor for LedgerState);
          swift_bridgeObjectRelease();
          uint64_t v48 = (uint64_t)v178 + v69;
          char v49 = sub_2544B5C7C;
          uint64_t v46 = v204 - 1;
          if (v204 != 1) {
            continue;
          }
          swift_bridgeObjectRelease();
          uint64_t v171 = sub_2544B5C7C;
          uint64_t v29 = v170;
          break;
      }
      break;
    }
  }
  else
  {
    uint64_t v171 = 0;
  }
  unint64_t v196 = v45;
  uint64_t v79 = *(void *)(v45 + 64);
  unint64_t v174 = v45 + 64;
  uint64_t v80 = 1 << *(unsigned char *)(v45 + 32);
  uint64_t v81 = -1;
  if (v80 < 64) {
    uint64_t v81 = ~(-1 << v80);
  }
  unint64_t v82 = v81 & v79;
  os_log_type_t v83 = (void (**)(char *, uint64_t, uint64_t))((char *)v42 + qword_269DF4E38);
  uint64_t v182 = (char *)v42 + *(void *)(*v42 + 112);
  swift_beginAccess();
  uint64_t v181 = v83;
  swift_beginAccess();
  int64_t v84 = 0;
  int64_t v175 = (unint64_t)(v80 + 63) >> 6;
  uint64_t v180 = (void (**)(char *, char *, uint64_t))(v172 + 56);
  unint64_t v179 = v172 + 48;
  uint64_t v201 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v202 + 56);
  uint64_t v207 = (unint64_t *)(v202 + 48);
  char v176 = (const char *)(v29 + 16);
  int v178 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56);
  char v177 = (const char *)(v29 + 48);
  uint64_t v200 = (char *)(v29 + 32);
  unint64_t v85 = MEMORY[0x263F8EE78];
  uint64_t v86 = (uint64_t)v199;
  uint64_t v87 = (uint64_t)v198;
  uint64_t v88 = v197;
  if (!v82) {
    goto LABEL_39;
  }
LABEL_38:
  uint64_t v204 = (v82 - 1) & v82;
  unint64_t v89 = __clz(__rbit64(v82)) | (v84 << 6);
  unint64_t v90 = v196;
  while (1)
  {
    uint64_t v205 = v84;
    uint64_t v94 = *(void *)(v90 + 56);
    Swift::String v95 = (uint64_t *)(*(void *)(v90 + 48) + 16 * v89);
    uint64_t v96 = *v95;
    uint64_t v97 = v95[1];
    v98._rawValue = *(void **)(v94 + 8 * v89);
    uint64_t v99 = *(void *)(v44 + 16);
    uint64_t v217 = *v95;
    if (v99)
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      unint64_t v100 = sub_2544B9B58(v96, v97);
      if (v101)
      {
        uint64_t v102 = v172;
        sub_254493CFC(*(void *)(v44 + 56) + *(void *)(v172 + 72) * v100, v87, &qword_269DF3688);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v102 + 56))(v87, 0, 1, v88);
      }
      else
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v180)(v87, 1, 1, v88);
      }
    }
    else
    {
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v180)(v87, 1, 1, v88);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
    }
    sub_254493190(v87, v86, &qword_269DF4840);
    int v103 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))v179)(v86, 1, v88);
    __int16 v206 = (void (*)(void, char *, uint64_t))v85;
    uint64_t v104 = v191;
    if (v103 == 1)
    {
      (*v201)(v191, 1, 1, v216);
      sub_254498AB8(v86, &qword_269DF4840);
    }
    else
    {
      sub_254493190(v86, v191, &qword_269DF3688);
    }
    unint64_t v105 = v44;
    swift_bridgeObjectRelease();
    sub_2544B7924(v104);
    sub_254498AB8(v104, &qword_269DF3688);
    unint64_t v106 = *((void *)v98._rawValue + 2);
    if (v106)
    {
      uint64_t v107 = v202;
      uint64_t v108 = (uint64_t)v98._rawValue
           + ((*(unsigned __int8 *)(v202 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v202 + 80));
      swift_bridgeObjectRetain();
      uint64_t v109 = *(void *)(v107 + 72);
      unint64_t v110 = v106;
      do
      {
        sub_2544FFA14(v108, (uint64_t)v35, (uint64_t (*)(void))type metadata accessor for LedgerState);
        sub_2544B8240((uint64_t)v35);
        sub_2544FFAE4((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for LedgerState);
        v108 += v109;
        --v110;
      }
      while (v110);
      swift_bridgeObjectRelease();
    }
    uint64_t v111 = (uint64_t)v218;
    sub_2544FFA14((uint64_t)v182, (uint64_t)v218, (uint64_t (*)(void))type metadata accessor for MLHostAnalytics);
    uint64_t v112 = v192;
    sub_254493CFC((uint64_t)v181, v192, &qword_269DF3688);
    swift_bridgeObjectRetain();
    char v113 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v219 = v105;
    uint64_t v114 = v217;
    sub_2544BB9CC(v112, v217, v97, v113);
    unint64_t v214 = v219;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v115 = v111;
    uint64_t v116 = v194;
    sub_2544FFA14(v115, v194, (uint64_t (*)(void))type metadata accessor for MLHostAnalytics);
    swift_bridgeObjectRetain();
    unint64_t v117 = v213;
    char v118 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v219 = v117;
    sub_2544BB860(v116, v114, v97, v118);
    unint64_t v213 = v219;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    Swift::String v119 = taskEventsToStringSequence(taskEvents:)(v98);
    v120._uint64_t countAndFlagsBits = 692277800;
    v120._object = (void *)0xE400000000000000;
    unint64_t v121 = (unint64_t)getRangeFromRegex(regex:stringRepresentation:)(v120, v119);
    Swift::Double v122 = -1.0;
    Swift::Double v123 = -1.0;
    if (v121)
    {
      Swift::Double v123 = getLatencyFromRange(matchIndices:events:)((Swift::OpaquePointer)v121, v98);
      swift_bridgeObjectRelease();
    }
    v124._uint64_t countAndFlagsBits = 0x4E5E5B4E283D3F28;
    v124._object = (void *)0xED000029294E2A5DLL;
    unint64_t v125 = (unint64_t)getRangeFromRegex(regex:stringRepresentation:)(v124, v119);
    uint64_t v126 = v193;
    if (v125)
    {
      Swift::Double v122 = getLatencyFromRange(matchIndices:events:)((Swift::OpaquePointer)v125, v98);
      swift_bridgeObjectRelease();
    }
    v127._uint64_t countAndFlagsBits = 692277800;
    v127._object = (void *)0xE400000000000000;
    unint64_t v128 = (unint64_t)getRangeFromRegex(regex:stringRepresentation:)(v127, v119);
    Swift::Double v129 = -1.0;
    Swift::Double v130 = -1.0;
    if (v128)
    {
      Swift::Double v130 = getLatencyFromRange(matchIndices:events:)((Swift::OpaquePointer)v128, v98);
      swift_bridgeObjectRelease();
    }
    v131._uint64_t countAndFlagsBits = 692474408;
    v131._object = (void *)0xE400000000000000;
    unint64_t v132 = (unint64_t)getRangeFromRegex(regex:stringRepresentation:)(v131, v119);
    if (v132)
    {
      Swift::Double v129 = getLatencyFromRange(matchIndices:events:)((Swift::OpaquePointer)v132, v98);
      swift_bridgeObjectRelease();
    }
    v133._uint64_t countAndFlagsBits = 692343336;
    v133._object = (void *)0xE400000000000000;
    unint64_t v134 = (unint64_t)getRangeFromRegex(regex:stringRepresentation:)(v133, v119);
    if (v134)
    {
      Swift::Double v135 = getLatencyFromRange(matchIndices:events:)((Swift::OpaquePointer)v134, v98);
      swift_bridgeObjectRelease();
    }
    else
    {
      Swift::Double v135 = -1.0;
    }
    v136._object = (void *)0xE900000000000029;
    v136._uint64_t countAndFlagsBits = 0x432A5D435E5B4428;
    unint64_t v137 = (unint64_t)getRangeFromRegex(regex:stringRepresentation:)(v136, v119);
    if (v137)
    {
      Swift::Double v138 = getLatencyFromRange(matchIndices:events:)((Swift::OpaquePointer)v137, v98);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      Swift::Double v138 = -1.0;
    }
    sub_254493CFC(v212, v211, (uint64_t *)&unk_269DF48E0);
    sub_254493CFC((uint64_t)v218 + *(int *)(v195 + 28), (uint64_t)v126, &qword_269DF3688);
    Swift::Int v139 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*v207;
    if (((unsigned int (*)(uint64_t *, uint64_t, uint64_t))*v207)(v126, 1, v216) == 1)
    {
      sub_254498AB8((uint64_t)v126, &qword_269DF3688);
      unint64_t v140 = 0xE300000000000000;
      uint64_t v141 = 4271950;
      if (!v106) {
        goto LABEL_84;
      }
    }
    else
    {
      uint64_t v141 = *v126;
      unint64_t v140 = v126[1];
      swift_bridgeObjectRetain();
      sub_2544FFAE4((uint64_t)v126, (uint64_t (*)(void))type metadata accessor for LedgerState);
      if (!v106)
      {
LABEL_84:
        uint64_t v143 = v184;
        uint64_t v144 = v216;
        (*v201)(v184, 1, 1, v216);
        goto LABEL_85;
      }
    }
    if (v106 > *((void *)v98._rawValue + 2))
    {
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    uint64_t v142 = v202;
    uint64_t v143 = v184;
    sub_2544FFA14((uint64_t)v98._rawValue+ ((*(unsigned __int8 *)(v142 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v142 + 80))+ *(void *)(v202 + 72) * (v106 - 1), v184, (uint64_t (*)(void))type metadata accessor for LedgerState);
    uint64_t v144 = v216;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v142 + 56))(v143, 0, 1, v216);
LABEL_85:
    swift_bridgeObjectRelease();
    int v145 = v139(v143, 1, v144);
    uint64_t v146 = (uint64_t)v188;
    uint64_t v147 = (uint64_t)v187;
    uint64_t v148 = v215;
    char v203 = (char *)v140;
    if (v145 == 1)
    {
      sub_254498AB8(v143, &qword_269DF3688);
      uint64_t v149 = 1;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))v176)(v188, v143 + *(int *)(v144 + 20), v215);
      sub_2544FFAE4(v143, (uint64_t (*)(void))type metadata accessor for LedgerState);
      uint64_t v149 = 0;
    }
    (*v178)(v146, v149, 1, v148);
    sub_254493CFC(v212, v147, (uint64_t *)&unk_269DF48E0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v177)(v146, 1, v148) == 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))v176)(v209, v147 + *(int *)(v173 + 36), v148);
      sub_254498AB8(v147, (uint64_t *)&unk_269DF48E0);
      sub_254498AB8(v146, &qword_26B266B98);
    }
    else
    {
      sub_254498AB8(v147, (uint64_t *)&unk_269DF48E0);
      (*(void (**)(char *, uint64_t, uint64_t))v200)(v209, v146, v148);
    }
    uint64_t v150 = *v218;
    if (*(void *)(*v218 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v151 = sub_2544B9B58(0x6574656C706D6F43, 0xE900000000000064);
      if (v152) {
        uint64_t v153 = *(void *)(*(void *)(v150 + 56) + 8 * v151);
      }
      else {
        uint64_t v153 = 0;
      }
      swift_bridgeObjectRelease();
      if (*(void *)(v150 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v156 = sub_2544B9B58(0x64656C696146, 0xE600000000000000);
        if (v157) {
          uint64_t v154 = *(void *)(*(void *)(v150 + 56) + 8 * v156);
        }
        else {
          uint64_t v154 = 0;
        }
        swift_bridgeObjectRelease();
        if (*(void *)(v150 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v158 = sub_2544B9B58(0x6465727265666544, 0xE800000000000000);
          if (v159) {
            uint64_t v155 = *(void *)(*(void *)(v150 + 56) + 8 * v158);
          }
          else {
            uint64_t v155 = 0;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v155 = 0;
        }
      }
      else
      {
        uint64_t v154 = 0;
        uint64_t v155 = 0;
      }
    }
    else
    {
      uint64_t v154 = 0;
      uint64_t v153 = 0;
      uint64_t v155 = 0;
    }
    char v160 = v208;
    uint64_t v161 = v190;
    *(void *)uint64_t v208 = v189;
    *((void *)v160 + 1) = v161;
    char v162 = (int *)v186;
    sub_254493190(v211, (uint64_t)&v160[*(int *)(v186 + 20)], (uint64_t *)&unk_269DF48E0);
    char v163 = &v160[v162[7]];
    *(void *)char v163 = v217;
    *((void *)v163 + 1) = v97;
    char v164 = (uint64_t *)&v160[v162[8]];
    uint64_t v165 = v203;
    uint64_t *v164 = v141;
    v164[1] = (uint64_t)v165;
    (*(void (**)(char *, char *, uint64_t))v200)(&v160[v162[9]], v209, v215);
    *(void *)&v160[v162[10]] = v153;
    *(void *)&v160[v162[11]] = v154;
    *(void *)&v160[v162[12]] = v155;
    *(Swift::Double *)&v160[v162[13]] = v123;
    *(Swift::Double *)&v160[v162[14]] = v122;
    *(Swift::Double *)&v160[v162[15]] = v130;
    *(Swift::Double *)&v160[v162[16]] = v129;
    *(Swift::Double *)&v160[v162[17]] = v135;
    v160[v162[6]] = v183;
    *(Swift::Double *)&v160[v162[18]] = v138;
    sub_2544FFA14((uint64_t)v160, v210, type metadata accessor for TaskTelemetry);
    swift_bridgeObjectRetain();
    unint64_t v85 = (unint64_t)v206;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v85 = sub_2544B9814(0, *(void *)(v85 + 16) + 1, 1, v85);
    }
    uint64_t v86 = (uint64_t)v199;
    uint64_t v87 = (uint64_t)v198;
    uint64_t v88 = v197;
    unint64_t v44 = v214;
    unint64_t v167 = *(void *)(v85 + 16);
    unint64_t v166 = *(void *)(v85 + 24);
    if (v167 >= v166 >> 1) {
      unint64_t v85 = sub_2544B9814(v166 > 1, v167 + 1, 1, v85);
    }
    *(void *)(v85 + 16) = v167 + 1;
    sub_2544FFA7C(v210, v85+ ((*(unsigned __int8 *)(v185 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v185 + 80))+ *(void *)(v185 + 72) * v167, type metadata accessor for TaskTelemetry);
    sub_2544FFAE4((uint64_t)v208, type metadata accessor for TaskTelemetry);
    sub_2544FFAE4((uint64_t)v218, (uint64_t (*)(void))type metadata accessor for MLHostAnalytics);
    int64_t v84 = v205;
    unint64_t v82 = v204;
    if (v204) {
      goto LABEL_38;
    }
LABEL_39:
    int64_t v91 = v84 + 1;
    unint64_t v90 = v196;
    if (__OFADD__(v84, 1)) {
      goto LABEL_116;
    }
    if (v91 >= v175) {
      break;
    }
    unint64_t v92 = *(void *)(v174 + 8 * v91);
    ++v84;
    if (!v92)
    {
      int64_t v84 = v91 + 1;
      if (v91 + 1 >= v175) {
        break;
      }
      unint64_t v92 = *(void *)(v174 + 8 * v84);
      if (!v92)
      {
        int64_t v84 = v91 + 2;
        if (v91 + 2 >= v175) {
          break;
        }
        unint64_t v92 = *(void *)(v174 + 8 * v84);
        if (!v92)
        {
          int64_t v93 = v91 + 3;
          if (v93 >= v175) {
            break;
          }
          unint64_t v92 = *(void *)(v174 + 8 * v93);
          if (v92)
          {
            int64_t v84 = v93;
            goto LABEL_52;
          }
          while (1)
          {
            int64_t v84 = v93 + 1;
            if (__OFADD__(v93, 1)) {
              break;
            }
            if (v84 >= v175) {
              goto LABEL_113;
            }
            unint64_t v92 = *(void *)(v174 + 8 * v84);
            ++v93;
            if (v92) {
              goto LABEL_52;
            }
          }
LABEL_118:
          __break(1u);
LABEL_119:
          sub_254527A30();
          __break(1u);
          JUMPOUT(0x2544FC37CLL);
        }
      }
    }
LABEL_52:
    uint64_t v204 = (v92 - 1) & v92;
    unint64_t v89 = __clz(__rbit64(v92)) + (v84 << 6);
  }
LABEL_113:
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_2544BB6A4((uint64_t)v171);
  return v85;
}

uint64_t sub_2544FC3A8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_2544B9814(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(type metadata accessor for TaskTelemetry(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_254527770();
  __break(1u);
  return result;
}

uint64_t sub_2544FC54C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  unint64_t v3 = sub_2544B96B4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[11 * v8 + 4];
  if (a1 + 32 < v9 + 88 * v2 && v9 < a1 + 32 + 88 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_254527770();
  __break(1u);
  return result;
}

uint64_t processAnalytics(taskAnalyticsMap:bucketRange:contextId:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  Swift::OpaquePointer v98 = a5;
  uint64_t v99 = a4;
  uint64_t v96 = a2;
  uint64_t v97 = a3;
  uint64_t v6 = type metadata accessor for MLHostAnalytics();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v104 = (uint64_t *)((char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v102 = (uint64_t)&v94 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  unint64_t v105 = (uint64_t *)((char *)&v94 - v13);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v103 = (uint64_t)&v94 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v94 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v94 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (char *)&v94 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v94 - v25;
  uint64_t v95 = *(void *)(a1 + 16);
  uint64_t v27 = *(void *)(a1 + 64);
  uint64_t v101 = a1 + 64;
  uint64_t v28 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v29 = -1;
  if (v28 < 64) {
    uint64_t v29 = ~(-1 << v28);
  }
  unint64_t v30 = v29 & v27;
  int64_t v100 = (unint64_t)(v28 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v32 = 0;
  uint64_t v33 = 0;
  if (!v30) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v34 = __clz(__rbit64(v30));
  v30 &= v30 - 1;
  for (unint64_t i = v34 | (v32 << 6); ; unint64_t i = __clz(__rbit64(v38)) + (v32 << 6))
  {
    sub_2544FFA14(*(void *)(a1 + 56) + *(void *)(v7 + 72) * i, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for MLHostAnalytics);
    uint64_t result = sub_2544FFA7C((uint64_t)v26, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for MLHostAnalytics);
    uint64_t v40 = *(void *)v24;
    uint64_t v41 = *(void *)(*(void *)v24 + 16);
    if (v41)
    {
      uint64_t result = sub_2544B9B58(0x676E696E6E7552, 0xE700000000000000);
      uint64_t v41 = (v42 & 1) != 0 && *(void *)(*(void *)(v40 + 56) + 8 * result) > 0;
    }
    BOOL v43 = __OFADD__(v33, v41);
    v33 += v41;
    if (v43)
    {
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
      goto LABEL_126;
    }
    uint64_t result = sub_2544FFAE4((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for MLHostAnalytics);
    if (v30) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v36 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      goto LABEL_122;
    }
    uint64_t v37 = v101;
    if (v36 >= v100) {
      goto LABEL_30;
    }
    unint64_t v38 = *(void *)(v101 + 8 * v36);
    ++v32;
    if (!v38)
    {
      int64_t v32 = v36 + 1;
      if (v36 + 1 >= v100) {
        goto LABEL_30;
      }
      unint64_t v38 = *(void *)(v101 + 8 * v32);
      if (!v38)
      {
        int64_t v32 = v36 + 2;
        if (v36 + 2 >= v100) {
          goto LABEL_30;
        }
        unint64_t v38 = *(void *)(v101 + 8 * v32);
        if (!v38)
        {
          int64_t v32 = v36 + 3;
          if (v36 + 3 >= v100) {
            goto LABEL_30;
          }
          unint64_t v38 = *(void *)(v101 + 8 * v32);
          if (!v38)
          {
            int64_t v32 = v36 + 4;
            if (v36 + 4 >= v100) {
              goto LABEL_30;
            }
            unint64_t v38 = *(void *)(v101 + 8 * v32);
            if (!v38) {
              break;
            }
          }
        }
      }
    }
LABEL_22:
    unint64_t v30 = (v38 - 1) & v38;
  }
  int64_t v39 = v36 + 5;
  if (v39 >= v100)
  {
LABEL_30:
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v44 = 1 << *(unsigned char *)(a1 + 32);
    uint64_t v45 = -1;
    if (v44 < 64) {
      uint64_t v45 = ~(-1 << v44);
    }
    unint64_t v46 = v45 & *(void *)(a1 + 64);
    int64_t v100 = (unint64_t)(v44 + 63) >> 6;
    uint64_t result = swift_bridgeObjectRetain_n();
    int64_t v47 = 0;
    uint64_t v48 = 0;
    if (!v46) {
      goto LABEL_34;
    }
LABEL_33:
    unint64_t v49 = __clz(__rbit64(v46));
    v46 &= v46 - 1;
    for (unint64_t j = v49 | (v47 << 6); ; unint64_t j = __clz(__rbit64(v52)) + (v47 << 6))
    {
      sub_2544FFA14(*(void *)(a1 + 56) + *(void *)(v7 + 72) * j, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for MLHostAnalytics);
      uint64_t result = sub_2544FFA7C((uint64_t)v21, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for MLHostAnalytics);
      uint64_t v54 = *(void *)v18;
      uint64_t v55 = *(void *)(*(void *)v18 + 16);
      if (v55)
      {
        uint64_t result = sub_2544B9B58(0x6465727265666544, 0xE800000000000000);
        uint64_t v55 = (v56 & 1) != 0 && *(void *)(*(void *)(v54 + 56) + 8 * result) > 0;
      }
      BOOL v43 = __OFADD__(v48, v55);
      v48 += v55;
      if (v43) {
        break;
      }
      uint64_t result = sub_2544FFAE4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for MLHostAnalytics);
      if (v46) {
        goto LABEL_33;
      }
LABEL_34:
      int64_t v51 = v47 + 1;
      if (__OFADD__(v47, 1)) {
        goto LABEL_123;
      }
      if (v51 >= v100)
      {
LABEL_59:
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v57 = 1 << *(unsigned char *)(a1 + 32);
        uint64_t v58 = -1;
        if (v57 < 64) {
          uint64_t v58 = ~(-1 << v57);
        }
        unint64_t v59 = v58 & *(void *)(a1 + 64);
        int64_t v60 = (unint64_t)(v57 + 63) >> 6;
        uint64_t result = swift_bridgeObjectRetain_n();
        int64_t v61 = 0;
        uint64_t v62 = 0;
        if (!v59) {
          goto LABEL_63;
        }
LABEL_62:
        unint64_t v63 = __clz(__rbit64(v59));
        v59 &= v59 - 1;
        for (unint64_t k = v63 | (v61 << 6); ; unint64_t k = __clz(__rbit64(v66)) + (v61 << 6))
        {
          uint64_t v68 = v103;
          sub_2544FFA14(*(void *)(a1 + 56) + *(void *)(v7 + 72) * k, v103, (uint64_t (*)(void))type metadata accessor for MLHostAnalytics);
          uint64_t v69 = v68;
          unint64_t v70 = v105;
          uint64_t result = sub_2544FFA7C(v69, (uint64_t)v105, (uint64_t (*)(void))type metadata accessor for MLHostAnalytics);
          uint64_t v71 = *v70;
          uint64_t v72 = *(void *)(v71 + 16);
          if (v72)
          {
            uint64_t result = sub_2544B9B58(0x64656C696146, 0xE600000000000000);
            uint64_t v72 = (v73 & 1) != 0 && *(void *)(*(void *)(v71 + 56) + 8 * result) > 0;
          }
          BOOL v43 = __OFADD__(v62, v72);
          v62 += v72;
          if (v43) {
            break;
          }
          uint64_t result = sub_2544FFAE4((uint64_t)v105, (uint64_t (*)(void))type metadata accessor for MLHostAnalytics);
          if (v59) {
            goto LABEL_62;
          }
LABEL_63:
          int64_t v65 = v61 + 1;
          if (__OFADD__(v61, 1)) {
            goto LABEL_124;
          }
          if (v65 >= v60)
          {
LABEL_88:
            swift_release();
            swift_bridgeObjectRelease();
            uint64_t v74 = 1 << *(unsigned char *)(a1 + 32);
            uint64_t v75 = -1;
            if (v74 < 64) {
              uint64_t v75 = ~(-1 << v74);
            }
            unint64_t v76 = v75 & *(void *)(a1 + 64);
            int64_t v77 = (unint64_t)(v74 + 63) >> 6;
            uint64_t result = swift_bridgeObjectRetain_n();
            int64_t v78 = 0;
            uint64_t v79 = 0;
            if (!v76) {
              goto LABEL_92;
            }
LABEL_91:
            unint64_t v80 = __clz(__rbit64(v76));
            v76 &= v76 - 1;
            for (unint64_t m = v80 | (v78 << 6); ; unint64_t m = __clz(__rbit64(v83)) + (v78 << 6))
            {
              uint64_t v85 = v102;
              sub_2544FFA14(*(void *)(a1 + 56) + *(void *)(v7 + 72) * m, v102, (uint64_t (*)(void))type metadata accessor for MLHostAnalytics);
              uint64_t v86 = v85;
              uint64_t v87 = v104;
              uint64_t result = sub_2544FFA7C(v86, (uint64_t)v104, (uint64_t (*)(void))type metadata accessor for MLHostAnalytics);
              uint64_t v88 = *v87;
              uint64_t v89 = *(void *)(v88 + 16);
              if (v89)
              {
                uint64_t result = sub_2544B9B58(0x6574656C706D6F43, 0xE900000000000064);
                uint64_t v89 = (v90 & 1) != 0 && *(void *)(*(void *)(v88 + 56) + 8 * result) > 0;
              }
              BOOL v43 = __OFADD__(v79, v89);
              v79 += v89;
              if (v43) {
                break;
              }
              uint64_t result = sub_2544FFAE4((uint64_t)v104, (uint64_t (*)(void))type metadata accessor for MLHostAnalytics);
              if (v76) {
                goto LABEL_91;
              }
LABEL_92:
              int64_t v82 = v78 + 1;
              if (__OFADD__(v78, 1)) {
                goto LABEL_125;
              }
              if (v82 >= v77)
              {
LABEL_117:
                swift_release();
                swift_bridgeObjectRelease();
                int64_t v91 = (int *)type metadata accessor for DeviceTelemetry(0);
                unint64_t v92 = v98;
                sub_254493CFC(v96, (uint64_t)v98 + v91[5], (uint64_t *)&unk_269DF48E0);
                uint64_t v93 = v99;
                *unint64_t v92 = v97;
                v92[1] = v93;
                *(void *)((char *)v92 + v91[6]) = v95;
                *(void *)((char *)v92 + v91[7]) = v33;
                *(void *)((char *)v92 + v91[8]) = v48;
                *(void *)((char *)v92 + v91[9]) = v62;
                *(void *)((char *)v92 + v91[10]) = v79;
                return swift_bridgeObjectRetain();
              }
              unint64_t v83 = *(void *)(v101 + 8 * v82);
              ++v78;
              if (!v83)
              {
                int64_t v78 = v82 + 1;
                if (v82 + 1 >= v77) {
                  goto LABEL_117;
                }
                unint64_t v83 = *(void *)(v101 + 8 * v78);
                if (!v83)
                {
                  int64_t v78 = v82 + 2;
                  if (v82 + 2 >= v77) {
                    goto LABEL_117;
                  }
                  unint64_t v83 = *(void *)(v101 + 8 * v78);
                  if (!v83)
                  {
                    int64_t v78 = v82 + 3;
                    if (v82 + 3 >= v77) {
                      goto LABEL_117;
                    }
                    unint64_t v83 = *(void *)(v101 + 8 * v78);
                    if (!v83)
                    {
                      int64_t v78 = v82 + 4;
                      if (v82 + 4 >= v77) {
                        goto LABEL_117;
                      }
                      unint64_t v83 = *(void *)(v101 + 8 * v78);
                      if (!v83)
                      {
                        int64_t v84 = v82 + 5;
                        if (v84 >= v77) {
                          goto LABEL_117;
                        }
                        unint64_t v83 = *(void *)(v101 + 8 * v84);
                        if (!v83)
                        {
                          while (1)
                          {
                            int64_t v78 = v84 + 1;
                            if (__OFADD__(v84, 1)) {
                              goto LABEL_129;
                            }
                            if (v78 >= v77) {
                              goto LABEL_117;
                            }
                            unint64_t v83 = *(void *)(v101 + 8 * v78);
                            ++v84;
                            if (v83) {
                              goto LABEL_109;
                            }
                          }
                        }
                        int64_t v78 = v84;
                      }
                    }
                  }
                }
              }
LABEL_109:
              unint64_t v76 = (v83 - 1) & v83;
            }
            goto LABEL_121;
          }
          unint64_t v66 = *(void *)(v37 + 8 * v65);
          ++v61;
          if (!v66)
          {
            int64_t v61 = v65 + 1;
            if (v65 + 1 >= v60) {
              goto LABEL_88;
            }
            unint64_t v66 = *(void *)(v37 + 8 * v61);
            if (!v66)
            {
              int64_t v61 = v65 + 2;
              if (v65 + 2 >= v60) {
                goto LABEL_88;
              }
              unint64_t v66 = *(void *)(v37 + 8 * v61);
              if (!v66)
              {
                int64_t v61 = v65 + 3;
                if (v65 + 3 >= v60) {
                  goto LABEL_88;
                }
                unint64_t v66 = *(void *)(v37 + 8 * v61);
                if (!v66)
                {
                  int64_t v61 = v65 + 4;
                  if (v65 + 4 >= v60) {
                    goto LABEL_88;
                  }
                  unint64_t v66 = *(void *)(v37 + 8 * v61);
                  if (!v66)
                  {
                    int64_t v67 = v65 + 5;
                    if (v67 >= v60) {
                      goto LABEL_88;
                    }
                    unint64_t v66 = *(void *)(v37 + 8 * v67);
                    if (!v66)
                    {
                      while (1)
                      {
                        int64_t v61 = v67 + 1;
                        if (__OFADD__(v67, 1)) {
                          goto LABEL_128;
                        }
                        if (v61 >= v60) {
                          goto LABEL_88;
                        }
                        unint64_t v66 = *(void *)(v37 + 8 * v61);
                        ++v67;
                        if (v66) {
                          goto LABEL_80;
                        }
                      }
                    }
                    int64_t v61 = v67;
                  }
                }
              }
            }
          }
LABEL_80:
          unint64_t v59 = (v66 - 1) & v66;
        }
        goto LABEL_120;
      }
      unint64_t v52 = *(void *)(v37 + 8 * v51);
      ++v47;
      if (!v52)
      {
        int64_t v47 = v51 + 1;
        if (v51 + 1 >= v100) {
          goto LABEL_59;
        }
        unint64_t v52 = *(void *)(v37 + 8 * v47);
        if (!v52)
        {
          int64_t v47 = v51 + 2;
          if (v51 + 2 >= v100) {
            goto LABEL_59;
          }
          unint64_t v52 = *(void *)(v37 + 8 * v47);
          if (!v52)
          {
            int64_t v47 = v51 + 3;
            if (v51 + 3 >= v100) {
              goto LABEL_59;
            }
            unint64_t v52 = *(void *)(v37 + 8 * v47);
            if (!v52)
            {
              int64_t v47 = v51 + 4;
              if (v51 + 4 >= v100) {
                goto LABEL_59;
              }
              unint64_t v52 = *(void *)(v37 + 8 * v47);
              if (!v52)
              {
                int64_t v53 = v51 + 5;
                if (v53 >= v100) {
                  goto LABEL_59;
                }
                unint64_t v52 = *(void *)(v37 + 8 * v53);
                if (!v52)
                {
                  while (1)
                  {
                    int64_t v47 = v53 + 1;
                    if (__OFADD__(v53, 1)) {
                      goto LABEL_127;
                    }
                    if (v47 >= v100) {
                      goto LABEL_59;
                    }
                    unint64_t v52 = *(void *)(v37 + 8 * v47);
                    ++v53;
                    if (v52) {
                      goto LABEL_51;
                    }
                  }
                }
                int64_t v47 = v53;
              }
            }
          }
        }
      }
LABEL_51:
      unint64_t v46 = (v52 - 1) & v52;
    }
    goto LABEL_119;
  }
  unint64_t v38 = *(void *)(v101 + 8 * v39);
  if (v38)
  {
    int64_t v32 = v39;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v32 = v39 + 1;
    if (__OFADD__(v39, 1)) {
      break;
    }
    if (v32 >= v100) {
      goto LABEL_30;
    }
    unint64_t v38 = *(void *)(v101 + 8 * v32);
    ++v39;
    if (v38) {
      goto LABEL_22;
    }
  }
LABEL_126:
  __break(1u);
LABEL_127:
  __break(1u);
LABEL_128:
  __break(1u);
LABEL_129:
  __break(1u);
  return result;
}

unint64_t CustomEventAnalytics.coreAnalyticsDictionary.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  int64_t v5 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v63 - v6;
  uint64_t v8 = sub_254526D90();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  int64_t v65 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v63 - v12;
  unint64_t v14 = sub_2544A57CC(MEMORY[0x263F8EE78]);
  uint64_t v15 = *v0;
  if (*(void *)(*v0 + 16)) {
    sub_2544B9B58(0x7472617473, 0xE500000000000000);
  }
  uint64_t v16 = sub_2545273A0();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v66 = v14;
  sub_2544BB534(v16, 0x617453746E756F63, 0xEA00000000007472, isUniquelyReferenced_nonNull_native);
  unint64_t v18 = v66;
  swift_bridgeObjectRelease();
  if (*(void *)(v15 + 16)) {
    sub_2544B9B58(1684107116, 0xE400000000000000);
  }
  uint64_t v19 = sub_2545273A0();
  char v20 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v66 = v18;
  sub_2544BB534(v19, 0x616F4C746E756F63, 0xE900000000000064, v20);
  unint64_t v21 = v66;
  swift_bridgeObjectRelease();
  if (*(void *)(v15 + 16)) {
    sub_2544B9B58(0x737365636F7270, 0xE700000000000000);
  }
  uint64_t v22 = sub_2545273A0();
  char v23 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v66 = v21;
  sub_2544BB534(v22, 0x6F7250746E756F63, 0xEC00000073736563, v23);
  unint64_t v24 = v66;
  swift_bridgeObjectRelease();
  if (*(void *)(v15 + 16)) {
    sub_2544B9B58(0x64616F6C7075, 0xE600000000000000);
  }
  uint64_t v25 = sub_2545273A0();
  char v26 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v66 = v24;
  sub_2544BB534(v25, 0x6C7055746E756F63, 0xEB0000000064616FLL, v26);
  unint64_t v27 = v66;
  swift_bridgeObjectRelease();
  if (*(void *)(v15 + 16)) {
    sub_2544B9B58(0x64656873696E6966, 0xE800000000000000);
  }
  uint64_t v28 = sub_2545273A0();
  char v29 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v66 = v27;
  sub_2544BB534(v28, 0x6E6946746E756F63, 0xED00006465687369, v29);
  unint64_t v30 = v66;
  swift_bridgeObjectRelease();
  uint64_t v31 = v0[1];
  if (*(void *)(v31 + 16)) {
    sub_2544B9A98(0x7472617473, 0xE500000000000000, 1684107116, 0xE400000000000000);
  }
  uint64_t v32 = sub_254527340();
  char v33 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v66 = v30;
  sub_2544BB534(v32, 0x74614C7472617473, 0xEC00000079636E65, v33);
  unint64_t v34 = v66;
  swift_bridgeObjectRelease();
  if (*(void *)(v31 + 16)) {
    sub_2544B9A98(1684107116, 0xE400000000000000, 0x737365636F7270, 0xE700000000000000);
  }
  uint64_t v35 = sub_254527340();
  char v36 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v66 = v34;
  sub_2544BB534(v35, 0x6574614C64616F6CLL, 0xEB0000000079636ELL, v36);
  unint64_t v37 = v66;
  swift_bridgeObjectRelease();
  if (*(void *)(v31 + 16)) {
    sub_2544B9A98(0x737365636F7270, 0xE700000000000000, 0x64616F6C7075, 0xE600000000000000);
  }
  uint64_t v38 = sub_254527340();
  char v39 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v66 = v37;
  sub_2544BB534(v38, 0x4C737365636F7270, 0xEE0079636E657461, v39);
  unint64_t v40 = v66;
  swift_bridgeObjectRelease();
  if (*(void *)(v31 + 16)) {
    sub_2544B9A98(0x64616F6C7075, 0xE600000000000000, 0x64656873696E6966, 0xE800000000000000);
  }
  uint64_t v41 = sub_254527340();
  char v42 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v66 = v40;
  sub_2544BB534(v41, 0x614C64616F6C7075, 0xED000079636E6574, v42);
  unint64_t v43 = v66;
  swift_bridgeObjectRelease();
  if (*(void *)(v31 + 16)) {
    sub_2544B9A98(0x7472617473, 0xE500000000000000, 0x64656873696E6966, 0xE800000000000000);
  }
  uint64_t v44 = sub_254527340();
  char v45 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v66 = v43;
  sub_2544BB534(v44, 0x74614C6C61746F74, 0xEC00000079636E65, v45);
  unint64_t v46 = v66;
  swift_bridgeObjectRelease();
  uint64_t v47 = type metadata accessor for CustomEventAnalytics();
  swift_bridgeObjectRetain();
  uint64_t v48 = sub_254526FD0();
  swift_bridgeObjectRelease();
  char v49 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v66 = v46;
  sub_2544BB534(v48, 0x656D614E6B736174, 0xE800000000000000, v49);
  unint64_t v50 = v66;
  swift_bridgeObjectRelease();
  sub_254493CFC((uint64_t)v1 + *(int *)(v47 + 36), (uint64_t)v7, &qword_26B266B98);
  int64_t v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v51(v7, 1, v8) == 1)
  {
    sub_254498AB8((uint64_t)v7, &qword_26B266B98);
  }
  else
  {
    unint64_t v64 = v50;
    unint64_t v52 = *(void (**)(void))(v9 + 32);
    unint64_t v63 = v13;
    v52();
    sub_254493CFC((uint64_t)v1 + *(int *)(v47 + 40), (uint64_t)v5, &qword_26B266B98);
    if (v51(v5, 1, v8) == 1)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v63, v8);
      sub_254498AB8((uint64_t)v5, &qword_26B266B98);
      return v64;
    }
    else
    {
      int64_t v53 = v65;
      ((void (*)(char *, char *, uint64_t))v52)(v65, v5, v8);
      uint64_t v54 = v63;
      sub_2544FDA20();
      uint64_t v55 = sub_254526FD0();
      swift_bridgeObjectRelease();
      unint64_t v56 = v64;
      char v57 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v66 = v56;
      sub_2544BB534(v55, 0x745374656B637562, 0xEB00000000747261, v57);
      unint64_t v58 = v66;
      swift_bridgeObjectRelease();
      sub_2544FDA20();
      uint64_t v59 = sub_254526FD0();
      swift_bridgeObjectRelease();
      char v60 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v66 = v58;
      sub_2544BB534(v59, 0x6E4574656B637562, 0xE900000000000064, v60);
      unint64_t v50 = v66;
      swift_bridgeObjectRelease();
      int64_t v61 = *(void (**)(char *, uint64_t))(v9 + 8);
      v61(v53, v8);
      v61(v54, v8);
    }
  }
  return v50;
}

uint64_t sub_2544FDA20()
{
  uint64_t result = sub_254526D30();
  if ((~*(void *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 9.22337204e18)
  {
    id v2 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithLongLong_, (uint64_t)v1);
    id v3 = objc_msgSend(v2, sel_stringValue);

    uint64_t v4 = sub_254526FE0();
    return v4;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t processCustomTelemetry(customTelemetryEvents:bucketRange:)(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
  v2[7] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for CustomEventAnalytics();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
  v2[12] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for LedgerState();
  v2[13] = v4;
  v2[14] = *(void *)(v4 - 8);
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for TaskCustomEvent(0);
  v2[17] = v5;
  v2[18] = *(void *)(v5 - 8);
  v2[19] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2544FDCE4, 0, 0);
}

uint64_t sub_2544FDCE4()
{
  uint64_t v1 = v0[5];
  unint64_t v110 = sub_2544A58E8(MEMORY[0x263F8EE78]);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v4 = v0[17];
    uint64_t v3 = v0[18];
    uint64_t v104 = v0[14];
    uint64_t v106 = v0[13];
    uint64_t v108 = v0[16];
    uint64_t v5 = v0[5] + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v6 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    Swift::OpaquePointer v98 = 0;
    uint64_t v100 = v6;
    uint64_t v102 = v4;
    do
    {
      sub_2544FFA14(v5, v0[19], type metadata accessor for TaskCustomEvent);
      swift_bridgeObjectRetain();
      unint64_t v8 = sub_254527790();
      swift_bridgeObjectRelease();
      if (v8 <= 4)
      {
        uint64_t v9 = *(void *)&aStart_3[8 * v8];
        uint64_t v10 = *(void *)&aFinished_2[8 * v8 + 8];
        uint64_t v11 = v0[19];
        uint64_t v12 = (void *)v0[16];
        uint64_t v13 = *(int *)(v4 + 20);
        unint64_t v14 = (uint64_t *)(v11 + *(int *)(v4 + 24));
        uint64_t v16 = *v14;
        uint64_t v15 = v14[1];
        uint64_t v17 = v11 + v13;
        unint64_t v18 = (char *)v12 + *(int *)(v106 + 20);
        uint64_t v19 = sub_254526D90();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v18, v17, v19);
        *uint64_t v12 = v9;
        *(void *)(v108 + 8) = v10;
        swift_bridgeObjectRetain();
        sub_2544BB6A4((uint64_t)v98);
        char v20 = (void *)v110;
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v23 = sub_2544B9B58(v16, v15);
        uint64_t v24 = *(void *)(v110 + 16);
        BOOL v25 = (v22 & 1) == 0;
        uint64_t result = v24 + v25;
        if (__OFADD__(v24, v25))
        {
LABEL_74:
          __break(1u);
LABEL_75:
          __break(1u);
LABEL_76:
          __break(1u);
          goto LABEL_77;
        }
        char v27 = v22;
        if (*(void *)(v110 + 24) >= result)
        {
          if (!isUniquelyReferenced_nonNull_native)
          {
            sub_2544BBF30();
            char v20 = (void *)v110;
          }
        }
        else
        {
          sub_2544BA0D8(result, isUniquelyReferenced_nonNull_native);
          unint64_t v28 = sub_2544B9B58(v16, v15);
          if ((v27 & 1) != (v29 & 1))
          {
LABEL_66:
            return sub_254527A30();
          }
          unint64_t v23 = v28;
          char v20 = (void *)v110;
        }
        swift_bridgeObjectRelease();
        if ((v27 & 1) == 0)
        {
          v20[(v23 >> 6) + 8] |= 1 << v23;
          unint64_t v30 = (uint64_t *)(v20[6] + 16 * v23);
          *unint64_t v30 = v16;
          v30[1] = v15;
          *(void *)(v20[7] + 8 * v23) = MEMORY[0x263F8EE78];
          uint64_t v31 = v20[2];
          uint64_t v32 = v20;
          uint64_t v33 = v31 + 1;
          BOOL v34 = __OFADD__(v31, 1);
          uint64_t result = swift_bridgeObjectRetain();
          if (v34) {
            goto LABEL_76;
          }
          v32[2] = v33;
          char v20 = v32;
        }
        uint64_t v35 = v20[7];
        swift_bridgeObjectRetain();
        unint64_t v110 = (unint64_t)v20;
        swift_bridgeObjectRelease();
        unint64_t v36 = *(void *)(v35 + 8 * v23);
        char v37 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v35 + 8 * v23) = v36;
        if ((v37 & 1) == 0)
        {
          unint64_t v36 = sub_2544B92F0(0, *(void *)(v36 + 16) + 1, 1, v36);
          *(void *)(v35 + 8 * v23) = v36;
        }
        uint64_t v4 = v102;
        unint64_t v39 = *(void *)(v36 + 16);
        unint64_t v38 = *(void *)(v36 + 24);
        if (v39 >= v38 >> 1)
        {
          unint64_t v36 = sub_2544B92F0(v38 > 1, v39 + 1, 1, v36);
          *(void *)(v35 + 8 * v23) = v36;
        }
        uint64_t v6 = v100;
        uint64_t v7 = v0[16];
        *(void *)(v36 + 16) = v39 + 1;
        sub_2544FFA7C(v7, v36+ ((*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80))+ *(void *)(v104 + 72) * v39, (uint64_t (*)(void))type metadata accessor for LedgerState);
        swift_bridgeObjectRelease();
        Swift::OpaquePointer v98 = sub_2544B5C7C;
      }
      sub_2544FFAE4(v0[19], type metadata accessor for TaskCustomEvent);
      v5 += v6;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    Swift::OpaquePointer v98 = 0;
  }
  uint64_t v40 = v0[14];
  uint64_t v95 = v0[9];
  uint64_t v107 = (int *)v0[8];
  uint64_t v109 = v0[11];
  uint64_t v41 = sub_2544F60C8();
  unint64_t v93 = v110 + 64;
  uint64_t v42 = -1 << *(unsigned char *)(v110 + 32);
  if (-v42 < 64) {
    uint64_t v43 = ~(-1 << -(char)v42);
  }
  else {
    uint64_t v43 = -1;
  }
  unint64_t v44 = v43 & *(void *)(v110 + 64);
  uint64_t v97 = v41 + *(void *)(*(void *)v41 + 112);
  uint64_t result = swift_beginAccess();
  int64_t v45 = 0;
  int64_t v94 = (unint64_t)(63 - v42) >> 6;
  uint64_t v92 = v40;
  uint64_t v96 = (void (**)(uint64_t, uint64_t, uint64_t, void))(v40 + 56);
  unint64_t v46 = MEMORY[0x263F8EE78];
  if (!v44) {
    goto LABEL_29;
  }
LABEL_28:
  unint64_t v47 = __clz(__rbit64(v44));
  uint64_t v48 = (v44 - 1) & v44;
  unint64_t v49 = v47 | (v45 << 6);
  unint64_t v50 = v110;
  while (1)
  {
    uint64_t v54 = (uint64_t *)(*(void *)(v50 + 48) + 16 * v49);
    uint64_t v56 = *v54;
    uint64_t v55 = v54[1];
    v57._rawValue = *(void **)(*(void *)(v50 + 56) + 8 * v49);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_254527330())
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_2544BB6A4((uint64_t)v98);
      unint64_t v46 = 0;
LABEL_70:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      int64_t v91 = (uint64_t (*)(unint64_t))v0[1];
      return v91(v46);
    }
    unint64_t v105 = v46;
    uint64_t v58 = v0[12];
    (*v96)(v58, 1, 1, v0[13]);
    sub_2544B7D5C(v58);
    sub_254498AB8(v58, &qword_269DF3688);
    Swift::String v59 = customEventsToStringSequence(customEvents:)(v57);
    v60._uint64_t countAndFlagsBits = 0x462A5D465E5B5328;
    v60._object = (void *)0xE900000000000029;
    unint64_t v61 = (unint64_t)getRangeFromRegex(regex:stringRepresentation:)(v60, v59);
    unint64_t v101 = v48;
    int64_t v103 = v45;
    if (v61)
    {
      Swift::Double v62 = getLatencyFromRange(matchIndices:events:)((Swift::OpaquePointer)v61, v57);
      swift_bridgeObjectRelease();
    }
    else
    {
      Swift::Double v62 = -1.0;
    }
    swift_bridgeObjectRelease();
    uint64_t v63 = *((void *)v57._rawValue + 2);
    if (v63)
    {
      uint64_t v64 = (uint64_t)v57._rawValue
          + ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80));
      swift_bridgeObjectRetain();
      uint64_t v65 = *(void *)(v92 + 72);
      do
      {
        uint64_t v66 = v0[15];
        sub_2544FFA14(v64, v66, (uint64_t (*)(void))type metadata accessor for LedgerState);
        sub_2544B826C(v66);
        sub_2544FFAE4(v66, (uint64_t (*)(void))type metadata accessor for LedgerState);
        v64 += v65;
        --v63;
      }
      while (v63);
      swift_bridgeObjectRelease();
    }
    uint64_t v67 = v0[11];
    sub_2544FFA14(v97, v67, (uint64_t (*)(void))type metadata accessor for CustomEventAnalytics);
    swift_bridgeObjectRelease();
    uint64_t v68 = (void *)(v67 + v107[8]);
    swift_bridgeObjectRelease();
    *uint64_t v68 = v56;
    v68[1] = v55;
    int v69 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v70 = *(void *)(v109 + 8);
    *(void *)(v109 + 8) = 0x8000000000000000;
    unint64_t v72 = sub_2544B9A98(0x7472617473, 0xE500000000000000, 0x64656873696E6966, 0xE800000000000000);
    uint64_t v73 = *(void *)(v70 + 16);
    BOOL v74 = (v71 & 1) == 0;
    uint64_t result = v73 + v74;
    if (__OFADD__(v73, v74))
    {
      __break(1u);
      goto LABEL_74;
    }
    char v75 = v71;
    if (*(void *)(v70 + 24) >= result)
    {
      if (!v69) {
        sub_2544BBF3C();
      }
    }
    else
    {
      sub_2544BA0E4(result, v69);
      unint64_t v76 = sub_2544B9A98(0x7472617473, 0xE500000000000000, 0x64656873696E6966, 0xE800000000000000);
      if ((v75 & 1) != (v77 & 1)) {
        goto LABEL_66;
      }
      unint64_t v72 = v76;
    }
    *(void *)(v109 + 8) = v70;
    swift_bridgeObjectRelease();
    uint64_t v78 = *(void *)(v109 + 8);
    if ((v75 & 1) == 0) {
      sub_2544BBB70(v72, 0x7472617473, 0xE500000000000000, 0x64656873696E6966, 0xE800000000000000, 0, *(void **)(v109 + 8), 1.79769313e308, 0.0, 0.0);
    }
    uint64_t v79 = v0[11];
    uint64_t v99 = v0[10];
    uint64_t v80 = v0[6];
    uint64_t v81 = v0[7];
    *(Swift::Double *)(*(void *)(v78 + 56) + 32 * v72 + 16) = v62;
    sub_254526CD0();
    uint64_t v82 = sub_254526D90();
    uint64_t v83 = *(void *)(v82 - 8);
    int64_t v84 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v83 + 56);
    v84(v81, 0, 1, v82);
    sub_254493DA4(v81, v79 + v107[9]);
    uint64_t v85 = v79 + v107[10];
    sub_254498AB8(v85, &qword_26B266B98);
    uint64_t v86 = type metadata accessor for TelemetryBucketRange();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 16))(v85, v80 + *(int *)(v86 + 28), v82);
    v84(v85, 0, 1, v82);
    sub_2544FFA14(v79, v99, (uint64_t (*)(void))type metadata accessor for CustomEventAnalytics);
    unint64_t v46 = v105;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v46 = sub_2544B987C(0, *(void *)(v105 + 16) + 1, 1, v105);
    }
    unint64_t v44 = v101;
    int64_t v45 = v103;
    unint64_t v88 = *(void *)(v46 + 16);
    unint64_t v87 = *(void *)(v46 + 24);
    if (v88 >= v87 >> 1) {
      unint64_t v46 = sub_2544B987C(v87 > 1, v88 + 1, 1, v46);
    }
    uint64_t v89 = v0[10];
    uint64_t v90 = v0[11];
    *(void *)(v46 + 16) = v88 + 1;
    sub_2544FFA7C(v89, v46+ ((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80))+ *(void *)(v95 + 72) * v88, (uint64_t (*)(void))type metadata accessor for CustomEventAnalytics);
    uint64_t result = sub_2544FFAE4(v90, (uint64_t (*)(void))type metadata accessor for CustomEventAnalytics);
    if (v101) {
      goto LABEL_28;
    }
LABEL_29:
    int64_t v51 = v45 + 1;
    unint64_t v50 = v110;
    if (__OFADD__(v45, 1)) {
      goto LABEL_75;
    }
    if (v51 >= v94)
    {
LABEL_69:
      swift_release();
      swift_release();
      sub_2544BB6A4((uint64_t)v98);
      goto LABEL_70;
    }
    unint64_t v52 = *(void *)(v93 + 8 * v51);
    ++v45;
    if (!v52)
    {
      int64_t v45 = v51 + 1;
      if (v51 + 1 >= v94) {
        goto LABEL_69;
      }
      unint64_t v52 = *(void *)(v93 + 8 * v45);
      if (!v52)
      {
        int64_t v45 = v51 + 2;
        if (v51 + 2 >= v94) {
          goto LABEL_69;
        }
        unint64_t v52 = *(void *)(v93 + 8 * v45);
        if (!v52) {
          break;
        }
      }
    }
LABEL_42:
    uint64_t v48 = (v52 - 1) & v52;
    unint64_t v49 = __clz(__rbit64(v52)) + (v45 << 6);
  }
  int64_t v53 = v51 + 3;
  if (v53 >= v94) {
    goto LABEL_69;
  }
  unint64_t v52 = *(void *)(v93 + 8 * v53);
  if (v52)
  {
    int64_t v45 = v53;
    goto LABEL_42;
  }
  while (1)
  {
    int64_t v45 = v53 + 1;
    if (__OFADD__(v53, 1)) {
      break;
    }
    if (v45 >= v94) {
      goto LABEL_69;
    }
    unint64_t v52 = *(void *)(v93 + 8 * v45);
    ++v53;
    if (v52) {
      goto LABEL_42;
    }
  }
LABEL_77:
  __break(1u);
  return result;
}

Swift::Double __swiftcall getLatencyFromRegex(regex:events:stringRepresentation:)(Swift::String regex, Swift::OpaquePointer events, Swift::String stringRepresentation)
{
  unint64_t v4 = (unint64_t)getRangeFromRegex(regex:stringRepresentation:)(regex, stringRepresentation);
  if (!v4) {
    return -1.0;
  }
  double v5 = getLatencyFromRange(matchIndices:events:)((Swift::OpaquePointer)v4, events);
  swift_bridgeObjectRelease();
  return v5;
}

Swift::OpaquePointer_optional __swiftcall getRangeFromRegex(regex:stringRepresentation:)(Swift::String regex, Swift::String stringRepresentation)
{
  unint64_t object = (unint64_t)stringRepresentation._object;
  uint64_t countAndFlagsBits = stringRepresentation._countAndFlagsBits;
  unint64_t v4 = regex._object;
  uint64_t v5 = regex._countAndFlagsBits;
  objc_allocWithZone(MEMORY[0x263F08AE8]);
  swift_bridgeObjectRetain();
  uint64_t v7 = (char *)sub_2544FECD0(v5, (uint64_t)v4, 0);
  if (!v7) {
    goto LABEL_28;
  }
  uint64_t v8 = HIBYTE(object) & 0xF;
  if ((object & 0x2000000000000000) == 0) {
    uint64_t v8 = countAndFlagsBits;
  }
  uint64_t v9 = 7;
  if (((object >> 60) & ((countAndFlagsBits & 0x800000000000000) == 0)) != 0) {
    uint64_t v9 = 11;
  }
  uint64_t v33 = 15;
  uint64_t v34 = v9 | (v8 << 16);
  uint64_t v31 = countAndFlagsBits;
  unint64_t v32 = object;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4850);
  sub_25448FFD4(&qword_269DF4858, &qword_269DF4850);
  sub_25448D434();
  uint64_t v10 = sub_2545274D0();
  uint64_t v12 = v11;
  uint64_t v13 = (void *)sub_254526FD0();
  id v14 = objc_msgSend(v7, sel_matchesInString_options_range_, v13, 0, v10, v12);

  sub_2544FFB44();
  unint64_t v15 = sub_2545271C0();

  if (v15 >> 62) {
    goto LABEL_23;
  }
  uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v16)
  {
LABEL_27:

    swift_bridgeObjectRelease();
LABEL_28:
    unint64_t v18 = 0;
    goto LABEL_31;
  }
  while (2)
  {
    unint64_t v30 = v7;
    uint64_t v17 = 0;
    unint64_t v18 = (void *)MEMORY[0x263F8EE78];
    while (1)
    {
      if ((v15 & 0xC000000000000001) != 0) {
        id v20 = (id)MEMORY[0x25A27BE40](v17, v15);
      }
      else {
        id v20 = *(id *)(v15 + 8 * v17 + 32);
      }
      unint64_t v21 = v20;
      if ((uint64_t)objc_msgSend(v20, sel_numberOfRanges, v30, v31, v32, v33, v34) < 1) {
        goto LABEL_10;
      }
      char v22 = (char *)objc_msgSend(v21, sel_rangeAtIndex_, 1);
      uint64_t v24 = &v22[v23];
      if (__OFADD__(v22, v23)) {
        break;
      }
      uint64_t v7 = v24 - 1;
      if (__OFSUB__(v24, 1)) {
        goto LABEL_22;
      }
      BOOL v25 = v22;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v18 = sub_2544B95A4(0, v18[2] + 1, 1, v18);
      }
      unint64_t v27 = v18[2];
      unint64_t v26 = v18[3];
      if (v27 >= v26 >> 1) {
        unint64_t v18 = sub_2544B95A4((void *)(v26 > 1), v27 + 1, 1, v18);
      }
      v18[2] = v27 + 1;
      uint64_t v19 = &v18[2 * v27];
      v19[4] = v25;
      v19[5] = v7;
LABEL_10:
      ++v17;

      if (v16 == v17) {
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_254527730();
    swift_bridgeObjectRelease();
    if (v28 < 1) {
      goto LABEL_27;
    }
    unint64_t v30 = v7;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_254527730();
    swift_bridgeObjectRelease();
    if (v16)
    {
      if (v16 < 1)
      {
        __break(1u);
        goto LABEL_27;
      }
      continue;
    }
    break;
  }
  unint64_t v18 = (void *)MEMORY[0x263F8EE78];
LABEL_30:

  swift_bridgeObjectRelease();
LABEL_31:
  char v29 = v18;
  result.value._rawValue = v29;
  result.is_nil = v6;
  return result;
}

Swift::Double __swiftcall getLatencyFromRange(matchIndices:events:)(Swift::OpaquePointer matchIndices, Swift::OpaquePointer events)
{
  uint64_t v2 = *((void *)matchIndices._rawValue + 2);
  if (v2)
  {
    type metadata accessor for LedgerState();
    unint64_t v5 = *((void *)events._rawValue + 2);
    swift_bridgeObjectRetain();
    uint64_t v7 = (unint64_t *)((char *)matchIndices._rawValue + 40);
    double v8 = 0.0;
    double v9 = 1.0;
    while (*(v7 - 1) < v5 && *v7 < v5)
    {
      v7 += 2;
      sub_254526D00();
      Swift::Double result = (v11 - v8) / v9;
      double v8 = v8 + result;
      double v9 = v9 + 1.0;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        return v8;
      }
    }
    __break(1u);
  }
  else
  {
    return 0.0;
  }
  return result;
}

id sub_2544FECD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[1] = *(id *)MEMORY[0x263EF8340];
  unint64_t v5 = (void *)sub_254526FD0();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  id v6 = objc_msgSend(v3, sel_initWithPattern_options_error_, v5, a3, v10);

  if (v6)
  {
    id v7 = v10[0];
  }
  else
  {
    id v8 = v10[0];
    sub_254526C00();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_2544FEDAC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2544FF1AC(a1, a2, a3, (void *)*v3, &qword_269DF3960, (uint64_t (*)(void))type metadata accessor for LedgerState);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2544FEDE8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2544FEEF0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2544FEE08(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2544FF040(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t type metadata accessor for TelemetryBucketRange()
{
  uint64_t result = qword_269DF48A8;
  if (!qword_269DF48A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2544FEE74(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2544FF1AC(a1, a2, a3, (void *)*v3, &qword_269DF3948, type metadata accessor for TaskStatusEvent);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2544FEEB0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2544FF3F4(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2544FEED0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2544FF580(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2544FEEF0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF48C0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_254527770();
  __break(1u);
  return result;
}

uint64_t sub_2544FF040(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B266E30);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  id v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_254527770();
  __break(1u);
  return result;
}

uint64_t sub_2544FF1AC(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (char *)v16 + v20;
  char v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_254527770();
  __break(1u);
  return result;
}

uint64_t sub_2544FF3F4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF38F0);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    id v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF38F8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_254527770();
  __break(1u);
  return result;
}

uint64_t sub_2544FF580(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF38C0);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_254527770();
  __break(1u);
  return result;
}

char *sub_2544FF6EC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF48C8);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_2544FF7E8(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_254527770();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_2544FF8A4(uint64_t a1)
{
  return sub_2544FF6EC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2544FF8B8(uint64_t a1)
{
  return sub_2544FF040(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2544FF8CC(uint64_t a1)
{
  uint64_t v2 = v1;
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v12 = MEMORY[0x263F8EE78];
    sub_2544FEDE8(0, v3, 0);
    uint64_t v4 = v12;
    unint64_t v6 = (char *)(a1 + 32);
    while (1)
    {
      char v7 = *v6++;
      sub_2544F63B8(v7);
      if (v2) {
        break;
      }
      uint64_t v2 = 0;
      unint64_t v9 = *(void *)(v12 + 16);
      unint64_t v8 = *(void *)(v12 + 24);
      unint64_t v10 = v9 + 1;
      if (v9 >= v8 >> 1) {
        sub_2544FEDE8(v8 > 1, v9 + 1, 1);
      }
      *(void *)(v12 + 16) = v10;
      if (!--v3) {
        return v4;
      }
    }
    swift_release();
  }
  return v4;
}

uint64_t sub_2544FF9B0(uint64_t a1)
{
  return sub_2544FA79C(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_2544FF9D0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_254526D90();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2544FFA14(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2544FFA7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2544FFAE4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_2544FFB44()
{
  unint64_t result = qword_269DF4860;
  if (!qword_269DF4860)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269DF4860);
  }
  return result;
}

unint64_t sub_2544FFB88()
{
  unint64_t result = qword_269DF4868;
  if (!qword_269DF4868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4868);
  }
  return result;
}

unint64_t sub_2544FFBE0()
{
  unint64_t result = qword_269DF4870;
  if (!qword_269DF4870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4870);
  }
  return result;
}

unint64_t sub_2544FFC38()
{
  unint64_t result = qword_269DF4878;
  if (!qword_269DF4878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4878);
  }
  return result;
}

unint64_t sub_2544FFC90()
{
  unint64_t result = qword_269DF4880;
  if (!qword_269DF4880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4880);
  }
  return result;
}

unint64_t sub_2544FFCE4(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_2544FFD14();
  unint64_t result = sub_2544FFD68();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_2544FFD14()
{
  unint64_t result = qword_269DF4888;
  if (!qword_269DF4888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4888);
  }
  return result;
}

unint64_t sub_2544FFD68()
{
  unint64_t result = qword_269DF4890;
  if (!qword_269DF4890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4890);
  }
  return result;
}

uint64_t sub_2544FFDBC()
{
  return sub_25448FFD4(&qword_269DF4898, &qword_269DF48A0);
}

unsigned char *storeEnumTagSinglePayload for CustomRegex(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2544FFE94);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CustomRegex()
{
  return &type metadata for CustomRegex;
}

unsigned char *storeEnumTagSinglePayload for LatencyRegex(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2544FFF98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LatencyRegex()
{
  return &type metadata for LatencyRegex;
}

unsigned char *storeEnumTagSinglePayload for PushRegex(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25450009CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PushRegex()
{
  return &type metadata for PushRegex;
}

char *initializeBufferWithCopyOfBuffer for TelemetryBucketRange(char *a1, char *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *(void *)a2;
    *(void *)unsigned int v4 = *(void *)a2;
    unsigned int v4 = (char *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = *(int *)(a3 + 24);
    unint64_t v8 = &a1[v7];
    unint64_t v9 = &a2[v7];
    uint64_t v10 = sub_254526D90();
    int64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v11(&v4[*(int *)(a3 + 28)], &a2[*(int *)(a3 + 28)], v10);
  }
  return v4;
}

uint64_t destroy for TelemetryBucketRange(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_254526D90();
  unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);

  return v8(v6, v5);
}

char *initializeWithCopy for TelemetryBucketRange(char *a1, char *a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = &a1[v6];
  unint64_t v8 = &a2[v6];
  uint64_t v9 = sub_254526D90();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 28)], &a2[*(int *)(a3 + 28)], v9);
  return a1;
}

char *assignWithCopy for TelemetryBucketRange(char *a1, char *a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = &a1[v6];
  unint64_t v8 = &a2[v6];
  uint64_t v9 = sub_254526D90();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 28)], &a2[*(int *)(a3 + 28)], v9);
  return a1;
}

char *initializeWithTake for TelemetryBucketRange(char *a1, char *a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = &a1[v6];
  unint64_t v8 = &a2[v6];
  uint64_t v9 = sub_254526D90();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 28)], &a2[*(int *)(a3 + 28)], v9);
  return a1;
}

char *assignWithTake for TelemetryBucketRange(char *a1, char *a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = &a1[v6];
  unint64_t v8 = &a2[v6];
  uint64_t v9 = sub_254526D90();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 28)], &a2[*(int *)(a3 + 28)], v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for TelemetryBucketRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25450056C);
}

uint64_t sub_25450056C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_254526D90();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);
  uint64_t v8 = v6;
  uint64_t v9 = a1 + *(int *)(a3 + 24);

  return v7(v9, a2, v8);
}

uint64_t storeEnumTagSinglePayload for TelemetryBucketRange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_254500600);
}

uint64_t sub_254500600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_254526D90();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  uint64_t v9 = v7;
  uint64_t v10 = a1 + *(int *)(a4 + 24);

  return v8(v10, a2, a2, v9);
}

uint64_t sub_254500684()
{
  uint64_t result = sub_254526D90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeWithCopy for TelemetryConfig(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TelemetryConfig(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  return a1;
}

__n128 __swift_memcpy26_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TelemetryConfig(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  return a1;
}

uint64_t getEnumTagSinglePayload for TelemetryConfig(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 26)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TelemetryConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 26) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 26) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TelemetryConfig()
{
  return &type metadata for TelemetryConfig;
}

unsigned char *storeEnumTagSinglePayload for CustomTelemetryStates(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254500994);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CustomTelemetryStates()
{
  return &type metadata for CustomTelemetryStates;
}

unint64_t sub_2545009CC(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_254526D90();
  uint64_t v6 = *(void *)(v74 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v74);
  uint64_t v64 = (char *)v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v63 = (char *)v61 - v9;
  uint64_t v73 = sub_254526DC0();
  uint64_t v10 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  unint64_t v72 = (char *)v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF4920);
  MEMORY[0x270FA5388](v12 - 8);
  unint64_t v14 = (void *)((char *)v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v15 = (int *)type metadata accessor for TaskStatusEvent(0);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v78 = (uint64_t)v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v71 = (uint64_t)v61 - v19;
  uint64_t v20 = *(void *)(a1 + 16);
  if (v20)
  {
    uint64_t v68 = v5;
    v61[1] = v1;
    int v69 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v70 = v18;
    uint64_t v65 = (void (**)(char *, char *, uint64_t))(v6 + 32);
    uint64_t v67 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
    Swift::Double v62 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    unint64_t v21 = (void (**)(uint64_t *, uint64_t, uint64_t, int *))(v18 + 56);
    swift_bridgeObjectRetain();
    v61[0] = a1;
    char v22 = (id *)(a1 + 40);
    uint64_t v79 = v15;
    unint64_t v80 = MEMORY[0x263F8EE78];
    uint64_t v23 = &off_2653AD000;
    while (1)
    {
      id v24 = *v22;
      id v25 = objc_msgSend(v24, (SEL)v23[216], v61[0]);
      if (!v25) {
        goto LABEL_4;
      }
      unint64_t v26 = v25;
      uint64_t v81 = sub_254526FE0();
      uint64_t v28 = v27;

      id v29 = objc_msgSend(v24, sel_taskState);
      if (!v29) {
        break;
      }
      unint64_t v30 = v29;
      uint64_t v31 = sub_254526FE0();
      uint64_t v33 = v32;

      v34._uint64_t countAndFlagsBits = v31;
      v34._unint64_t object = v33;
      TaskStatus.init(rawValue:)(v34);
      if (v82 != 11)
      {
        int v75 = v82;
        uint64_t v35 = v72;
        sub_254526DB0();
        uint64_t v36 = sub_254526DA0();
        uint64_t v76 = v37;
        uint64_t v77 = v36;
        (*v69)(v35, v73);
        unint64_t v15 = v79;
        sub_254526CD0();
        sub_25450430C(objc_msgSend(v24, sel_pushMetadata), (uint64_t *)((char *)v14 + v15[8]));
        id v38 = objc_msgSend(v24, sel_pullMetadata);
        unint64_t v39 = (char *)v14 + v15[9];
        if (v38)
        {
          uint64_t v40 = v38;
          id v41 = objc_msgSend(v38, sel_creationDate);
          if (v41)
          {
            uint64_t v42 = v41;
            uint64_t v66 = v39;
            uint64_t v43 = v64;
            sub_254526D50();

            unint64_t v44 = *v65;
            uint64_t v45 = (uint64_t)v68;
            unint64_t v46 = v43;
            uint64_t v47 = v74;
            (*v65)(v68, v46, v74);
            (*v67)(v45, 0, 1, v47);
            uint64_t v48 = v47;
            unint64_t v39 = v66;
            if ((*v62)(v45, 1, v48) != 1)
            {
              v44(v63, (char *)v45, v74);
              v44(v39, v63, v74);
              uint64_t v49 = type metadata accessor for PullMetadata(0);
              (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v39, 0, 1, v49);
              unint64_t v15 = v79;
LABEL_18:
              uint64_t v51 = v81;
              char v52 = v75;

              uint64_t v53 = v76;
              *unint64_t v14 = v77;
              v14[1] = v53;
              uint64_t v54 = (uint64_t *)((char *)v14 + v15[6]);
              *uint64_t v54 = v51;
              v54[1] = v28;
              *((unsigned char *)v14 + v15[7]) = v52;
              (*v21)(v14, 0, 1, v15);
              uint64_t v55 = v71;
              sub_254504E30((uint64_t)v14, v71, type metadata accessor for TaskStatusEvent);
              sub_254504E30(v55, v78, type metadata accessor for TaskStatusEvent);
              if (swift_isUniquelyReferenced_nonNull_native()) {
                unint64_t v56 = v80;
              }
              else {
                unint64_t v56 = sub_2544B97E0(0, *(void *)(v80 + 16) + 1, 1, v80);
              }
              unint64_t v58 = *(void *)(v56 + 16);
              unint64_t v57 = *(void *)(v56 + 24);
              if (v58 >= v57 >> 1) {
                unint64_t v56 = sub_2544B97E0(v57 > 1, v58 + 1, 1, v56);
              }
              *(void *)(v56 + 16) = v58 + 1;
              unint64_t v59 = (*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
              unint64_t v80 = v56;
              sub_254504E30(v78, v56 + v59 + *(void *)(v70 + 72) * v58, type metadata accessor for TaskStatusEvent);
              uint64_t v23 = &off_2653AD000;
              goto LABEL_6;
            }
          }
          else
          {

            uint64_t v45 = (uint64_t)v68;
            (*v67)((uint64_t)v68, 1, 1, v74);
          }
          sub_254498AB8(v45, &qword_26B266B98);
          unint64_t v15 = v79;
        }
        uint64_t v50 = type metadata accessor for PullMetadata(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v39, 1, 1, v50);
        goto LABEL_18;
      }
      swift_bridgeObjectRelease();

      unint64_t v15 = v79;
      uint64_t v23 = &off_2653AD000;
LABEL_5:
      (*v21)(v14, 1, 1, v15);
      sub_254498AB8((uint64_t)v14, (uint64_t *)&unk_269DF4920);
LABEL_6:
      v22 += 2;
      if (!--v20)
      {
        swift_bridgeObjectRelease();
        return v80;
      }
    }
    swift_bridgeObjectRelease();
LABEL_4:

    goto LABEL_5;
  }
  return MEMORY[0x263F8EE78];
}

unint64_t sub_254501138(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4918);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (void *)((char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for TaskErrorEvent(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v35 = (uint64_t)v32 - v11;
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return MEMORY[0x263F8EE78];
  }
  v32[2] = v1;
  uint64_t v37 = (unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48);
  id v38 = (void (**)(void *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  swift_bridgeObjectRetain();
  v32[1] = a1;
  uint64_t v13 = (id *)(a1 + 40);
  unint64_t v14 = MEMORY[0x263F8EE78];
  uint64_t v33 = v10;
  uint64_t v34 = v7;
  do
  {
    unint64_t v39 = v14;
    id v15 = *v13;
    id v16 = objc_msgSend(v15, sel_taskName);
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t v36 = sub_254526FE0();
      uint64_t v19 = v18;

      id v20 = objc_msgSend(v15, sel_errorCode);
      if (v20)
      {
        unint64_t v21 = v20;
        uint64_t v22 = sub_254526FE0();
        uint64_t v24 = v23;

        sub_254526CD0();
        uint64_t v25 = 0;
        void *v5 = 4271950;
        v5[1] = 0xE300000000000000;
        unint64_t v26 = (void *)((char *)v5 + *(int *)(v6 + 24));
        uint64_t *v26 = v36;
        v26[1] = v19;
        uint64_t v27 = (void *)((char *)v5 + *(int *)(v6 + 28));
        *uint64_t v27 = v22;
        v27[1] = v24;
        uint64_t v10 = v33;
        uint64_t v7 = v34;
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
    }

    uint64_t v25 = 1;
LABEL_10:
    unint64_t v14 = v39;
    (*v38)(v5, v25, 1, v6);

    if ((*v37)(v5, 1, v6) == 1)
    {
      sub_254498AB8((uint64_t)v5, &qword_269DF4918);
    }
    else
    {
      uint64_t v28 = v35;
      sub_254504E30((uint64_t)v5, v35, type metadata accessor for TaskErrorEvent);
      sub_254504E30(v28, (uint64_t)v10, type metadata accessor for TaskErrorEvent);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v14 = sub_2544B99E0(0, *(void *)(v14 + 16) + 1, 1, v14);
      }
      unint64_t v30 = *(void *)(v14 + 16);
      unint64_t v29 = *(void *)(v14 + 24);
      if (v30 >= v29 >> 1) {
        unint64_t v14 = sub_2544B99E0(v29 > 1, v30 + 1, 1, v14);
      }
      *(void *)(v14 + 16) = v30 + 1;
      sub_254504E30((uint64_t)v10, v14+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v30, type metadata accessor for TaskErrorEvent);
    }
    v13 += 2;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_2545014D4(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4910);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (void *)((char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for TaskCustomEvent(0);
  uint64_t v39 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v44 = (uint64_t)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v38 = (uint64_t)v35 - v9;
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    return MEMORY[0x263F8EE78];
  }
  v35[2] = v1;
  uint64_t v42 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v39 + 48);
  uint64_t v43 = (void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v39 + 56);
  swift_bridgeObjectRetain();
  unint64_t v11 = MEMORY[0x263F8EE78];
  v35[1] = a1;
  uint64_t v12 = (id *)(a1 + 40);
  do
  {
    id v13 = *v12;
    id v14 = objc_msgSend(v13, sel_taskID);
    if (v14)
    {
      id v15 = v14;
      uint64_t v41 = sub_254526FE0();
      uint64_t v17 = v16;

      id v18 = objc_msgSend(v13, sel_taskName);
      if (v18)
      {
        uint64_t v19 = v18;
        uint64_t v40 = sub_254526FE0();
        uint64_t v21 = v20;

        id v22 = objc_msgSend(v13, sel_eventName);
        if (v22)
        {
          uint64_t v23 = v22;
          uint64_t v24 = sub_254526FE0();
          uint64_t v36 = v25;
          uint64_t v37 = v24;

          sub_254526CD0();
          uint64_t v26 = 0;
          uint64_t v27 = v40;
          uint64_t *v5 = v41;
          v5[1] = v17;
          uint64_t v28 = (uint64_t *)((char *)v5 + *(int *)(v6 + 24));
          *uint64_t v28 = v27;
          v28[1] = v21;
          unint64_t v29 = (uint64_t *)((char *)v5 + *(int *)(v6 + 28));
          uint64_t v30 = v36;
          *unint64_t v29 = v37;
          v29[1] = v30;
          goto LABEL_13;
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }

    uint64_t v26 = 1;
LABEL_13:
    (*v43)(v5, v26, 1, v6);

    if ((*v42)(v5, 1, v6) == 1)
    {
      sub_254498AB8((uint64_t)v5, &qword_269DF4910);
    }
    else
    {
      uint64_t v31 = v38;
      sub_254504E30((uint64_t)v5, v38, type metadata accessor for TaskCustomEvent);
      sub_254504E30(v31, v44, type metadata accessor for TaskCustomEvent);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v11 = sub_2544B9A28(0, *(void *)(v11 + 16) + 1, 1, v11);
      }
      unint64_t v33 = *(void *)(v11 + 16);
      unint64_t v32 = *(void *)(v11 + 24);
      if (v33 >= v32 >> 1) {
        unint64_t v11 = sub_2544B9A28(v32 > 1, v33 + 1, 1, v11);
      }
      *(void *)(v11 + 16) = v33 + 1;
      sub_254504E30(v44, v11+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v33, type metadata accessor for TaskCustomEvent);
    }
    v12 += 2;
    --v10;
  }
  while (v10);
  swift_bridgeObjectRelease();
  return v11;
}

unint64_t sub_2545018A4(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4908);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (void *)((char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = type metadata accessor for TaskTelemetry(0);
  uint64_t v6 = MEMORY[0x270FA5388](v22);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v11 = (char *)v19 - v10;
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return MEMORY[0x263F8EE78];
  }
  v19[1] = v1;
  uint64_t v20 = v9;
  id v13 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  unint64_t v14 = MEMORY[0x263F8EE78];
  uint64_t v15 = 40;
  uint64_t v21 = a1;
  do
  {
    sub_254502928(*(id *)(a1 + v15), v5);
    if ((*v13)(v5, 1, v22) == 1)
    {
      sub_254498AB8((uint64_t)v5, &qword_269DF4908);
    }
    else
    {
      sub_254504E30((uint64_t)v5, (uint64_t)v11, type metadata accessor for TaskTelemetry);
      sub_254504E30((uint64_t)v11, (uint64_t)v8, type metadata accessor for TaskTelemetry);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v14 = sub_2544B9814(0, *(void *)(v14 + 16) + 1, 1, v14);
      }
      unint64_t v17 = *(void *)(v14 + 16);
      unint64_t v16 = *(void *)(v14 + 24);
      if (v17 >= v16 >> 1) {
        unint64_t v14 = sub_2544B9814(v16 > 1, v17 + 1, 1, v14);
      }
      *(void *)(v14 + 16) = v17 + 1;
      sub_254504E30((uint64_t)v8, v14+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(void *)(v20 + 72) * v17, type metadata accessor for TaskTelemetry);
      a1 = v21;
    }
    v15 += 16;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_254501B40(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48D0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (void *)((char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = type metadata accessor for DeviceTelemetry(0);
  uint64_t v6 = MEMORY[0x270FA5388](v22);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v11 = (char *)v19 - v10;
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return MEMORY[0x263F8EE78];
  }
  v19[1] = v1;
  uint64_t v20 = v9;
  id v13 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  unint64_t v14 = MEMORY[0x263F8EE78];
  uint64_t v15 = 40;
  uint64_t v21 = a1;
  do
  {
    sub_254503670(*(id *)(a1 + v15), v5);
    if ((*v13)(v5, 1, v22) == 1)
    {
      sub_254498AB8((uint64_t)v5, (uint64_t *)&unk_269DF48D0);
    }
    else
    {
      sub_254504E30((uint64_t)v5, (uint64_t)v11, type metadata accessor for DeviceTelemetry);
      sub_254504E30((uint64_t)v11, (uint64_t)v8, type metadata accessor for DeviceTelemetry);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v14 = sub_2544B9848(0, *(void *)(v14 + 16) + 1, 1, v14);
      }
      unint64_t v17 = *(void *)(v14 + 16);
      unint64_t v16 = *(void *)(v14 + 24);
      if (v17 >= v16 >> 1) {
        unint64_t v14 = sub_2544B9848(v16 > 1, v17 + 1, 1, v14);
      }
      *(void *)(v14 + 16) = v17 + 1;
      sub_254504E30((uint64_t)v8, v14+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(void *)(v20 + 72) * v17, type metadata accessor for DeviceTelemetry);
      a1 = v21;
    }
    v15 += 16;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  return v14;
}

id sub_254501DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v9 = sub_254526D90();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  uint64_t v12 = 0;
  if (v11(a1, 1, v9) != 1)
  {
    uint64_t v12 = (void *)sub_254526D20();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
  }
  if (v11(a2, 1, v9) == 1)
  {
    id v13 = 0;
  }
  else
  {
    id v13 = (void *)sub_254526D20();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a2, v9);
  }
  id v14 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithStartDate_endDate_maxEvents_lastN_reversed_, v12, v13, a3, a4, a5 & 1);

  return v14;
}

uint64_t LedgerClient.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  LedgerClient.init()();
  return v0;
}

void *LedgerClient.init()()
{
  swift_defaultActor_initialize();
  id v1 = objc_msgSend((id)BiomeLibrary(), sel_Lighthouse);
  swift_unknownObjectRelease();
  id v2 = objc_msgSend(v1, sel_Ledger);
  swift_unknownObjectRelease();
  id v3 = objc_msgSend(v2, sel_TaskStatus);
  swift_unknownObjectRelease();
  v0[14] = v3;
  id v4 = objc_msgSend((id)BiomeLibrary(), sel_Lighthouse);
  swift_unknownObjectRelease();
  id v5 = objc_msgSend(v4, sel_Ledger);
  swift_unknownObjectRelease();
  id v6 = objc_msgSend(v5, sel_TaskCustomEvent);
  swift_unknownObjectRelease();
  v0[15] = v6;
  id v7 = objc_msgSend((id)BiomeLibrary(), sel_Lighthouse);
  swift_unknownObjectRelease();
  id v8 = objc_msgSend(v7, sel_Ledger);
  swift_unknownObjectRelease();
  id v9 = objc_msgSend(v8, sel_TaskError);
  swift_unknownObjectRelease();
  v0[16] = v9;
  id v10 = objc_msgSend((id)BiomeLibrary(), sel_Lighthouse);
  swift_unknownObjectRelease();
  id v11 = objc_msgSend(v10, sel_Ledger);
  swift_unknownObjectRelease();
  id v12 = objc_msgSend(v11, sel_TaskTelemetry);
  swift_unknownObjectRelease();
  v0[17] = v12;
  id v13 = objc_msgSend((id)BiomeLibrary(), sel_Lighthouse);
  swift_unknownObjectRelease();
  id v14 = objc_msgSend(v13, sel_Ledger);
  swift_unknownObjectRelease();
  id v15 = objc_msgSend(v14, sel_DeviceTelemetry);
  swift_unknownObjectRelease();
  v0[18] = v15;
  return v0;
}

unint64_t sub_25450221C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_254504888(*(void **)(v2 + 112), a1, a2, (uint64_t)&unk_2703DA888, (uint64_t)&block_descriptor_38, (uint64_t (*)())sub_254504E98, (uint64_t)&block_descriptor_41);
  unint64_t v4 = sub_2545009CC(v3);
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_2545022A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_254504888(*(void **)(v2 + 128), a1, a2, (uint64_t)&unk_2703DA810, (uint64_t)&block_descriptor_29, (uint64_t (*)())sub_254504E00, (uint64_t)&block_descriptor_32);
  unint64_t v4 = sub_254501138(v3);
  swift_bridgeObjectRelease();
  return v4;
}

void sub_254502324(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  id v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_msgSend(*(id *)(v4 + 120), sel_source);
  if (qword_26B267240 != -1) {
    swift_once();
  }
  uint64_t v33 = a4;
  uint64_t v13 = sub_254526E00();
  __swift_project_value_buffer(v13, (uint64_t)qword_26B267340);
  id v14 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v34 = a1;
  v14(v11, a1, a3);
  id v15 = a2;
  unint64_t v16 = sub_254526DE0();
  os_log_type_t v17 = sub_254527410();
  int v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v19 = swift_slowAlloc();
    id v32 = v12;
    uint64_t v20 = v19;
    uint64_t v31 = swift_slowAlloc();
    uint64_t v35 = v31;
    *(_DWORD *)uint64_t v20 = 136315394;
    HIDWORD(v30) = v18;
    uint64_t v21 = *(void *)&v15[OBJC_IVAR____TtC20LighthouseBackground22MLHostExtensionContext_taskName];
    unint64_t v22 = *(void *)&v15[OBJC_IVAR____TtC20LighthouseBackground22MLHostExtensionContext_taskName + 8];
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_254498B68(v21, v22, &v35);
    sub_254527500();

    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    sub_254527140();
    uint64_t v36 = sub_254498B68(v36, v37, &v35);
    sub_254527500();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a3);
    _os_log_impl(&dword_254486000, v16, BYTE4(v30), "Writing task event for %s with state: %s", (uint8_t *)v20, 0x16u);
    uint64_t v23 = v31;
    swift_arrayDestroy();
    MEMORY[0x25A27C9E0](v23, -1, -1);
    uint64_t v24 = v20;
    id v12 = v32;
    MEMORY[0x25A27C9E0](v24, -1, -1);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a3);
  }

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_254527140();
  id v25 = objc_allocWithZone(MEMORY[0x263F2A1A0]);
  uint64_t v26 = (void *)sub_254526FD0();
  swift_bridgeObjectRelease();
  uint64_t v27 = (void *)sub_254526FD0();
  swift_bridgeObjectRelease();
  uint64_t v28 = (void *)sub_254526FD0();
  swift_bridgeObjectRelease();
  id v29 = objc_msgSend(v25, sel_initWithTaskID_taskName_eventName_, v26, v27, v28);

  objc_msgSend(v12, sel_sendEvent_, v29);
}

unint64_t sub_254502720(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_254504888(*(void **)(v2 + 120), a1, a2, (uint64_t)&unk_2703DA798, (uint64_t)&block_descriptor_20, (uint64_t (*)())sub_254504DD0, (uint64_t)&block_descriptor_23);
  sub_254504718(v3, (uint64_t (*)(double))sub_254504880);
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  unint64_t v6 = sub_2545014D4(v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_2545027DC(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    id v6 = objc_msgSend(a1, sel_taskName);
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = sub_254526FE0();
      uint64_t v10 = v9;

      if (v8 == a2 && v10 == a3) {
        char v12 = 1;
      }
      else {
        char v12 = sub_2545279E0();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      char v12 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v12 = 1;
  }
  return v12 & 1;
}

unint64_t sub_2545028A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_254504888(*(void **)(v2 + 136), a1, a2, (uint64_t)&unk_2703DA720, (uint64_t)&block_descriptor_11, (uint64_t (*)())sub_254504DA0, (uint64_t)&block_descriptor_14);
  unint64_t v4 = sub_2545018A4(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_254502928@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_254526DC0();
  uint64_t v119 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v118 = (char *)&v102 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF38B0);
  uint64_t v6 = MEMORY[0x270FA5388](v120);
  uint64_t v116 = (uint64_t)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  char v113 = (char *)&v102 - v8;
  uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48E0);
  uint64_t v9 = MEMORY[0x270FA5388](v114);
  uint64_t v115 = (uint64_t)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v117 = (uint64_t)&v102 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  id v15 = (char *)&v102 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  int v18 = (char *)&v102 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v102 - v19;
  uint64_t v21 = sub_254526D90();
  uint64_t v123 = *(void *)(v21 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  unint64_t v121 = (char *)&v102 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v102 - v25;
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  id v29 = (char *)&v102 - v28;
  MEMORY[0x270FA5388](v27);
  Swift::Double v122 = (char *)&v102 - v30;
  id v31 = objc_msgSend(a1, sel_taskName);
  if (!v31) {
    goto LABEL_22;
  }
  id v32 = v31;
  unint64_t v110 = v26;
  uint64_t v109 = sub_254526FE0();
  uint64_t v34 = v33;

  id v35 = objc_msgSend(a1, sel_taskState);
  if (v35)
  {
    uint64_t v36 = v35;
    uint64_t v111 = a2;
    uint64_t v112 = v34;
    uint64_t v37 = sub_254526FE0();
    uint64_t v39 = v38;

    id v40 = objc_msgSend(a1, sel_latestEventTimestamp);
    if (v40)
    {
      uint64_t v41 = v40;
      uint64_t v104 = v37;
      uint64_t v105 = v4;
      sub_254526D50();

      uint64_t v42 = v123;
      uint64_t v43 = v123 + 32;
      uint64_t v108 = *(void (**)(char *, char *, uint64_t))(v123 + 32);
      v108(v20, v29, v21);
      uint64_t v107 = *(char **)(v42 + 56);
      ((void (*)(char *, void, uint64_t, uint64_t))v107)(v20, 0, 1, v21);
      uint64_t v106 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
      if (v106(v20, 1, v21) != 1)
      {
        uint64_t v44 = v20;
        uint64_t v45 = v43;
        v108(v122, v44, v21);
        id v46 = objc_msgSend(a1, sel_bucketStart);
        if (v46)
        {
          uint64_t v47 = v46;
          sub_254526D50();

          v108(v18, v29, v21);
          ((void (*)(char *, void, uint64_t, uint64_t))v107)(v18, 0, 1, v21);
          if (v106(v18, 1, v21) != 1)
          {
            uint64_t v103 = v39;
            uint64_t v48 = v110;
            v108(v110, v18, v21);
            id v49 = objc_msgSend(a1, sel_bucketEnd);
            if (v49)
            {
              uint64_t v50 = v49;
              sub_254526D50();

              v108(v15, v29, v21);
              ((void (*)(char *, void, uint64_t, uint64_t))v107)(v15, 0, 1, v21);
              if (v106(v15, 1, v21) != 1)
              {
                uint64_t v51 = v121;
                v108(v121, v15, v21);
                sub_2544BCD20();
                uint64_t result = sub_254526F90();
                if (result)
                {
                  uint64_t v53 = v48;
                  uint64_t v54 = v120;
                  uint64_t v55 = v113;
                  unint64_t v56 = &v113[*(int *)(v120 + 48)];
                  unint64_t v57 = *(void (**)(char *, char *, uint64_t))(v123 + 16);
                  v57(v113, v53, v21);
                  uint64_t v107 = v56;
                  v57(v56, v51, v21);
                  uint64_t v58 = *(int *)(v54 + 48);
                  unint64_t v59 = (char *)v116;
                  Swift::String v60 = (char *)(v116 + v58);
                  v57((char *)v116, v55, v21);
                  v57(v60, v56, v21);
                  unint64_t v61 = (char *)v115;
                  uint64_t v62 = v45;
                  uint64_t v63 = v108;
                  v108((char *)v115, v59, v21);
                  uint64_t v64 = *(void (**)(char *, uint64_t))(v123 + 8);
                  v64(v60, v21);
                  uint64_t v65 = &v59[*(int *)(v120 + 48)];
                  uint64_t v102 = v62;
                  v63(v59, v55, v21);
                  v63(v65, v107, v21);
                  v63(&v61[*(int *)(v114 + 36)], v65, v21);
                  v64(v59, v21);
                  uint64_t v66 = (uint64_t)v61;
                  uint64_t v67 = v117;
                  sub_254504C50(v66, v117);
                  uint64_t v68 = v121;
                  int v69 = v110;
                  sub_254526D70();
                  if (v70 <= 86400.0) {
                    int v71 = 6;
                  }
                  else {
                    int v71 = 7;
                  }
                  LODWORD(v123) = v71;
                  uint64_t v120 = (int)objc_msgSend(a1, sel_countCompleted);
                  uint64_t v116 = (int)objc_msgSend(a1, sel_countFailed);
                  uint64_t v115 = (int)objc_msgSend(a1, sel_countDeferred);
                  objc_msgSend(a1, sel_dailyExecutionLatency);
                  uint64_t v73 = v72;
                  objc_msgSend(a1, sel_crossExecutionDelay);
                  uint64_t v75 = v74;
                  objc_msgSend(a1, sel_executionCompletionTime);
                  uint64_t v77 = v76;
                  objc_msgSend(a1, sel_executionFailureTime);
                  uint64_t v79 = v78;
                  objc_msgSend(a1, sel_executionDeferralTime);
                  uint64_t v81 = v80;
                  unsigned __int8 v82 = v118;
                  sub_254526DB0();
                  uint64_t v83 = sub_254526DA0();
                  uint64_t v85 = v84;

                  (*(void (**)(char *, uint64_t))(v119 + 8))(v82, v105);
                  v64(v68, v21);
                  v64(v69, v21);
                  uint64_t v86 = (int *)type metadata accessor for TaskTelemetry(0);
                  unint64_t v87 = v111;
                  v108((char *)v111 + v86[9], v122, v21);
                  uint64_t *v87 = v83;
                  v87[1] = v85;
                  sub_254504C50(v67, (uint64_t)v87 + v86[5]);
                  unint64_t v88 = (uint64_t *)((char *)v87 + v86[7]);
                  uint64_t v89 = v112;
                  *unint64_t v88 = v109;
                  v88[1] = v89;
                  uint64_t v90 = (uint64_t *)((char *)v87 + v86[8]);
                  uint64_t v91 = v103;
                  *uint64_t v90 = v104;
                  v90[1] = v91;
                  *(uint64_t *)((char *)v87 + v86[10]) = v120;
                  *(uint64_t *)((char *)v87 + v86[11]) = v116;
                  *(uint64_t *)((char *)v87 + v86[12]) = v115;
                  *(uint64_t *)((char *)v87 + v86[13]) = v73;
                  *(uint64_t *)((char *)v87 + v86[14]) = v75;
                  *(uint64_t *)((char *)v87 + v86[15]) = v77;
                  *(uint64_t *)((char *)v87 + v86[16]) = v79;
                  *(uint64_t *)((char *)v87 + v86[17]) = v81;
                  *((unsigned char *)v87 + v86[6]) = v123;
                  *(uint64_t *)((char *)v87 + v86[18]) = 0;
                  return (*(uint64_t (**)(uint64_t *, void, uint64_t, int *))(*((void *)v86 - 1) + 56))(v87, 0, 1, v86);
                }
                else
                {
                  __break(1u);
                }
                return result;
              }
            }
            else
            {
              ((void (*)(char *, uint64_t, uint64_t, uint64_t))v107)(v15, 1, 1, v21);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v93 = *(void (**)(char *, uint64_t))(v123 + 8);
            v93(v48, v21);
            v93(v122, v21);
            uint64_t v92 = (uint64_t)v15;
            goto LABEL_21;
          }
        }
        else
        {
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v107)(v18, 1, 1, v21);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v123 + 8))(v122, v21);
        uint64_t v92 = (uint64_t)v18;
LABEL_21:
        sub_254498AB8(v92, &qword_26B266B98);
        a2 = v111;
        goto LABEL_22;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v123 + 56))(v20, 1, 1, v21);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v92 = (uint64_t)v20;
    goto LABEL_21;
  }
  swift_bridgeObjectRelease();
LABEL_22:
  if (qword_26B267240 != -1) {
    swift_once();
  }
  uint64_t v94 = sub_254526E00();
  __swift_project_value_buffer(v94, (uint64_t)qword_26B267340);
  uint64_t v95 = a1;
  uint64_t v96 = sub_254526DE0();
  os_log_type_t v97 = sub_254527410();
  if (os_log_type_enabled(v96, v97))
  {
    Swift::OpaquePointer v98 = (uint8_t *)swift_slowAlloc();
    uint64_t v99 = (void *)swift_slowAlloc();
    *(_DWORD *)Swift::OpaquePointer v98 = 138412290;
    Swift::String v124 = v95;
    uint64_t v100 = v95;
    sub_254527500();
    *uint64_t v99 = v95;

    _os_log_impl(&dword_254486000, v96, v97, "Invalid event: %@", v98, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
    swift_arrayDestroy();
    MEMORY[0x25A27C9E0](v99, -1, -1);
    MEMORY[0x25A27C9E0](v98, -1, -1);
  }
  else
  {

    uint64_t v96 = v95;
  }

  uint64_t v101 = type metadata accessor for TaskTelemetry(0);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 56))(a2, 1, 1, v101);
}

unint64_t sub_2545035EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_254504888(*(void **)(v2 + 144), a1, a2, (uint64_t)&unk_2703DA6A8, (uint64_t)&block_descriptor_4, (uint64_t (*)())sub_254504D70, (uint64_t)&block_descriptor_5);
  unint64_t v4 = sub_254501B40(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_254503670@<X0>(id a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v79 = a2;
  uint64_t v3 = sub_254526DC0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF38B0);
  uint64_t v7 = MEMORY[0x270FA5388](v74);
  uint64_t v72 = (uint64_t)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  int v69 = (char *)&v65 - v9;
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48E0);
  uint64_t v10 = MEMORY[0x270FA5388](v70);
  int v71 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v73 = (uint64_t)&v65 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  int v18 = (char *)&v65 - v17;
  uint64_t v19 = sub_254526D90();
  uint64_t v20 = *(void **)(v19 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v75 = (char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v65 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v78 = (char *)&v65 - v26;
  id v27 = objc_msgSend(a1, sel_bucketStart);
  if (v27)
  {
    uint64_t v28 = v27;
    uint64_t v66 = v6;
    uint64_t v67 = v4;
    uint64_t v68 = v3;
    id v77 = a1;
    sub_254526D50();

    uint64_t v76 = v20[4];
    ((void (*)(char *, char *, uint64_t))v76)(v18, v25, v19);
    id v29 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v20[7];
    v29(v18, 0, 1, v19);
    uint64_t v30 = (unsigned int (*)(char *, uint64_t, uint64_t))v20[6];
    if (v30(v18, 1, v19) == 1)
    {
      uint64_t v16 = v18;
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v76)(v78, v18, v19);
      id v31 = objc_msgSend(v77, sel_bucketEnd);
      if (v31)
      {
        id v32 = v31;
        sub_254526D50();

        ((void (*)(char *, char *, uint64_t))v76)(v16, v25, v19);
        v29(v16, 0, 1, v19);
        if (v30(v16, 1, v19) != 1)
        {
          uint64_t v33 = v75;
          ((void (*)(char *, char *, uint64_t))v76)(v75, v16, v19);
          sub_2544BCD20();
          uint64_t v34 = v78;
          uint64_t result = sub_254526F90();
          if (result)
          {
            uint64_t v36 = v74;
            uint64_t v37 = v69;
            uint64_t v38 = &v69[*(int *)(v74 + 48)];
            uint64_t v39 = (void (*)(char *, char *, uint64_t))v20[2];
            v39(v69, v34, v19);
            uint64_t v65 = v38;
            v39(v38, v33, v19);
            id v40 = (char *)v72;
            uint64_t v41 = (char *)(v72 + *(int *)(v36 + 48));
            v39((char *)v72, v37, v19);
            v39(v41, v38, v19);
            uint64_t v42 = (uint64_t)v71;
            uint64_t v43 = (void (*)(char *, char *, uint64_t))v76;
            ((void (*)(char *, char *, uint64_t))v76)(v71, v40, v19);
            uint64_t v44 = (void (*)(char *, uint64_t))v20[1];
            v44(v41, v19);
            uint64_t v45 = &v40[*(int *)(v74 + 48)];
            v43(v40, v37, v19);
            v43(v45, v65, v19);
            v43((char *)(v42 + *(int *)(v70 + 36)), v45, v19);
            v44(v40, v19);
            uint64_t v46 = v73;
            sub_254504C50(v42, v73);
            id v47 = v77;
            uint64_t v76 = (int)objc_msgSend(v77, sel_tasksCount);
            uint64_t v74 = (int)objc_msgSend(v47, sel_tasksRun);
            uint64_t v72 = (int)objc_msgSend(v47, sel_tasksDeferred);
            uint64_t v48 = (int)objc_msgSend(v47, sel_tasksFailed);
            uint64_t v49 = (int)objc_msgSend(v47, sel_tasksCompleted);
            uint64_t v50 = v66;
            sub_254526DB0();
            uint64_t v51 = sub_254526DA0();
            uint64_t v53 = v52;

            (*(void (**)(char *, uint64_t))(v67 + 8))(v50, v68);
            v44(v75, v19);
            v44(v78, v19);
            uint64_t v54 = v79;
            *uint64_t v79 = v51;
            v54[1] = v53;
            uint64_t v55 = (int *)type metadata accessor for DeviceTelemetry(0);
            sub_254504C50(v46, (uint64_t)v54 + v55[5]);
            *(uint64_t *)((char *)v54 + v55[6]) = v76;
            *(uint64_t *)((char *)v54 + v55[7]) = v74;
            *(uint64_t *)((char *)v54 + v55[8]) = v72;
            *(uint64_t *)((char *)v54 + v55[9]) = v48;
            *(uint64_t *)((char *)v54 + v55[10]) = v49;
            return (*(uint64_t (**)(uint64_t *, void, uint64_t, int *))(*((void *)v55 - 1) + 56))(v54, 0, 1, v55);
          }
          else
          {
            __break(1u);
          }
          return result;
        }
      }
      else
      {
        v29(v16, 1, 1, v19);
      }
      ((void (*)(char *, uint64_t))v20[1])(v78, v19);
    }
    a1 = v77;
  }
  else
  {
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v20[7])(v18, 1, 1, v19);
    uint64_t v16 = v18;
  }
  sub_254498AB8((uint64_t)v16, &qword_26B266B98);
  if (qword_26B267240 != -1) {
    swift_once();
  }
  uint64_t v56 = sub_254526E00();
  __swift_project_value_buffer(v56, (uint64_t)qword_26B267340);
  unint64_t v57 = a1;
  uint64_t v58 = sub_254526DE0();
  os_log_type_t v59 = sub_254527410();
  if (os_log_type_enabled(v58, v59))
  {
    Swift::String v60 = (uint8_t *)swift_slowAlloc();
    unint64_t v61 = (void *)swift_slowAlloc();
    *(_DWORD *)Swift::String v60 = 138412290;
    uint64_t v80 = v57;
    uint64_t v62 = v57;
    sub_254527500();
    *unint64_t v61 = v57;

    _os_log_impl(&dword_254486000, v58, v59, "Invalid event: %@", v60, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
    swift_arrayDestroy();
    MEMORY[0x25A27C9E0](v61, -1, -1);
    MEMORY[0x25A27C9E0](v60, -1, -1);
  }
  else
  {

    uint64_t v58 = v57;
  }
  uint64_t v63 = v79;

  uint64_t v64 = type metadata accessor for DeviceTelemetry(0);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v63, 1, 1, v64);
}

void sub_254503F90(void *a1, uint64_t a2, uint64_t (*a3)(BOOL, uint64_t, uint64_t, uint64_t))
{
  id v6 = objc_msgSend(a1, sel_eventBody);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = (uint64_t *)(a2 + 16);
    objc_msgSend(a1, sel_timestamp);
    uint64_t v10 = v9;
    swift_beginAccess();
    uint64_t v11 = *v8;
    id v12 = v7;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v8 = v11;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v11 = a3(0, *(void *)(v11 + 16) + 1, 1, v11);
      *uint64_t v8 = v11;
    }
    unint64_t v15 = *(void *)(v11 + 16);
    unint64_t v14 = *(void *)(v11 + 24);
    if (v15 >= v14 >> 1)
    {
      uint64_t v11 = a3(v14 > 1, v15 + 1, 1, v11);
      *uint64_t v8 = v11;
    }
    *(void *)(v11 + 16) = v15 + 1;
    uint64_t v16 = v11 + 16 * v15;
    *(void *)(v16 + 32) = v10;
    *(void *)(v16 + 40) = v12;
    swift_endAccess();
  }
  else
  {
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_254526E00();
    __swift_project_value_buffer(v17, (uint64_t)qword_26B267340);
    id v23 = a1;
    int v18 = sub_254526DE0();
    os_log_type_t v19 = sub_254527410();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 138412290;
      id v22 = v23;
      sub_254527500();
      *uint64_t v21 = v23;

      _os_log_impl(&dword_254486000, v18, v19, "Invalid event: %@", v20, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      swift_arrayDestroy();
      MEMORY[0x25A27C9E0](v21, -1, -1);
      MEMORY[0x25A27C9E0](v20, -1, -1);
    }
    else
    {
    }
  }
}

id *LedgerClient.deinit()
{
  swift_defaultActor_destroy();
  return v0;
}

uint64_t LedgerClient.__deallocating_deinit()
{
  swift_defaultActor_destroy();

  return MEMORY[0x270FA2418](v0);
}

uint64_t LedgerClient.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_254504300()
{
  return v0;
}

uint64_t sub_25450430C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
  MEMORY[0x270FA5388](v4 - 8);
  id v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_254526D90();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v43 - v12;
  if (!a1) {
    goto LABEL_16;
  }
  id v14 = a1;
  id v15 = objc_msgSend(v14, sel_channelID);
  if (!v15)
  {

    goto LABEL_16;
  }
  uint64_t v16 = v15;
  uint64_t v17 = sub_254526FE0();
  uint64_t v19 = v18;

  id v20 = objc_msgSend(v14, sel_creationDate);
  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_11;
  }
  uint64_t v21 = v20;
  uint64_t v48 = v17;
  sub_254526D50();

  id v22 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v22(v6, v11, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_11:
    swift_bridgeObjectRelease();

    sub_254498AB8((uint64_t)v6, &qword_26B266B98);
    goto LABEL_16;
  }
  uint64_t v46 = v22;
  v22(v13, v6, v7);
  id v23 = objc_msgSend(v14, sel_pushPriority);
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v47 = v19;
    uint64_t v25 = sub_254526FE0();
    uint64_t v27 = v26;

    id v28 = objc_msgSend(v14, sel_pushType);
    if (v28)
    {
      id v29 = v28;
      uint64_t v45 = sub_254526FE0();
      uint64_t v31 = v30;

      id v32 = objc_msgSend(v14, sel_topic);
      if (v32)
      {
        uint64_t v33 = v32;
        uint64_t v34 = sub_254526FE0();
        uint64_t v44 = v25;
        uint64_t v35 = v34;
        uint64_t v36 = v31;
        uint64_t v38 = v37;

        uint64_t v39 = type metadata accessor for PushMetadata(0);
        v46((char *)a2 + *(int *)(v39 + 32), v13, v7);
        *a2 = v35;
        a2[1] = v38;
        uint64_t v40 = v47;
        a2[2] = v48;
        a2[3] = v40;
        a2[4] = v45;
        a2[5] = v36;
        a2[6] = v44;
        a2[7] = v27;
        return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(a2, 0, 1, v39);
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
LABEL_16:
  uint64_t v42 = type metadata accessor for PushMetadata(0);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(a2, 1, 1, v42);
}

void sub_254504718(uint64_t a1, uint64_t (*a2)(double))
{
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    unint64_t v4 = 0;
    uint64_t v5 = a1 + 40;
    uint64_t v6 = -(uint64_t)v2;
    uint64_t v7 = MEMORY[0x263F8EE78];
    uint64_t v16 = a1 + 40;
    unint64_t v17 = *(void *)(a1 + 16);
    do
    {
      if (v4 <= v2) {
        unint64_t v8 = v2;
      }
      else {
        unint64_t v8 = v4;
      }
      uint64_t v9 = -(uint64_t)v8;
      for (unint64_t i = (id *)(v5 + 16 * v4++); ; i += 2)
      {
        if (v9 + v4 == 1)
        {
          __break(1u);
          return;
        }
        double v11 = *((double *)i - 1);
        id v12 = *i;
        if (a2(v11)) {
          break;
        }

        ++v4;
        if (v6 + v4 == 1) {
          return;
        }
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_2544FEEB0(0, *(void *)(v7 + 16) + 1, 1);
      }
      unint64_t v14 = *(void *)(v7 + 16);
      unint64_t v13 = *(void *)(v7 + 24);
      if (v14 >= v13 >> 1) {
        sub_2544FEEB0(v13 > 1, v14 + 1, 1);
      }
      *(void *)(v7 + 16) = v14 + 1;
      uint64_t v15 = v7 + 16 * v14;
      *(double *)(v15 + 32) = v11;
      *(void *)(v15 + 40) = v12;
      uint64_t v5 = v16;
      unint64_t v2 = v17;
    }
    while (v6 + v4);
  }
}

uint64_t sub_254504880(void *a1)
{
  return sub_2545027DC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_254504888(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(), uint64_t a7)
{
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&aBlock - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&aBlock - v17;
  sub_2544BD374();
  sub_254504CB8(a2, (uint64_t)v18);
  sub_254504CB8(a3, (uint64_t)v16);
  id v19 = sub_254501DDC((uint64_t)v18, (uint64_t)v16, 0, 0, 0);
  id v20 = (void *)sub_254526FD0();
  id v21 = objc_msgSend(a1, sel_publisherWithUseCase_options_, v20, v19);

  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = MEMORY[0x263F8EE78];
  id v32 = nullsub_1;
  uint64_t v33 = 0;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v29 = 1107296256;
  uint64_t v30 = sub_254501F5C;
  uint64_t v31 = a5;
  id v23 = _Block_copy(&aBlock);
  id v32 = a6;
  uint64_t v33 = v22;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v29 = 1107296256;
  uint64_t v30 = sub_254501F5C;
  uint64_t v31 = a7;
  uint64_t v24 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v25 = objc_msgSend(v21, sel_sinkWithCompletion_receiveInput_, v23, v24);

  _Block_release(v24);
  _Block_release(v23);

  swift_beginAccess();
  uint64_t v26 = *(void *)(v22 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  return v26;
}

uint64_t type metadata accessor for LedgerClient()
{
  return self;
}

uint64_t method lookup function for LedgerClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for LedgerClient);
}

uint64_t dispatch thunk of LedgerClient.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of LedgerClient.getTaskStatusEvents(startDate:endDate:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of LedgerClient.getTaskErrorEvents(startDate:endDate:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of LedgerClient.sendCustomTaskEvent<A>(state:context:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of LedgerClient.getCustomTaskEvents(startDate:endDate:taskName:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of LedgerClient.getTaskTelemetry(startDate:endDate:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of LedgerClient.getDeviceTelemetry(startDate:endDate:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t sub_254504C50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_254504CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B266B98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_254504D20()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

void sub_254504D70(void *a1)
{
  sub_254503F90(a1, v1, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_2544B9A84);
}

void sub_254504DA0(void *a1)
{
  sub_254503F90(a1, v1, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_2544B9A70);
}

void sub_254504DD0(void *a1)
{
  sub_254503F90(a1, v1, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_2544B9A5C);
}

void sub_254504E00(void *a1)
{
  sub_254503F90(a1, v1, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_2544B9A14);
}

uint64_t sub_254504E30(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_254504E98(void *a1)
{
  sub_254503F90(a1, v1, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_2544B98B0);
}

uint64_t DeviceTelemetry.init(contextId:bucketRange:tasksCount:tasksRun:tasksDeferred:tasksFailed:tasksCompleted:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  *a9 = a1;
  a9[1] = a2;
  uint64_t v16 = (int *)type metadata accessor for DeviceTelemetry(0);
  uint64_t result = sub_254493190(a3, (uint64_t)a9 + v16[5], (uint64_t *)&unk_269DF48E0);
  *(void *)((char *)a9 + v16[6]) = a4;
  *(void *)((char *)a9 + v16[7]) = a5;
  *(void *)((char *)a9 + v16[8]) = a6;
  *(void *)((char *)a9 + v16[9]) = a7;
  *(void *)((char *)a9 + v16[10]) = a8;
  return result;
}

uint64_t type metadata accessor for DeviceTelemetry(uint64_t a1)
{
  return sub_2544991E0(a1, (uint64_t *)&unk_269DF4A18);
}

void __swiftcall PushTelemetry.init(contextId:taskName:countPushParameterError:countPushProcessed:countPushReceived:countPushRegistrationError:pushErrorLatency:pushFirstRunLatency:pushReceivedLatency:)(LighthouseBackground::PushTelemetry *__return_ptr retstr, Swift::String contextId, Swift::String taskName, Swift::Int countPushParameterError, Swift::Int countPushProcessed, Swift::Int countPushReceived, Swift::Int countPushRegistrationError, Swift::Double pushErrorLatency, Swift::Double pushFirstRunLatency, Swift::Double pushReceivedLatency)
{
  retstr->contextId = contextId;
  retstr->taskName = taskName;
  retstr->countPushParameterError = countPushParameterError;
  retstr->countPushProcessed = countPushProcessed;
  retstr->countPushReceived = countPushReceived;
  retstr->countPushRegistrationError = countPushRegistrationError;
  retstr->pushErrorLatency = pushErrorLatency;
  retstr->pushFirstRunLatency = pushFirstRunLatency;
  retstr->Swift::Double pushReceivedLatency = pushReceivedLatency;
}

uint64_t TaskTelemetry.init(contextId:bucketRange:bucketInterval:taskName:taskState:latestEventTimestamp:countCompleted:countFailed:countDeferred:dailyExecutionLatency:crossExecutionDelay:executionCompletionTime:executionFailureTime:executionDeferralTime:deferralToCompletionTime:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, double a14@<D4>, double a15@<D5>, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  char v37 = *a4;
  *a9 = a1;
  a9[1] = a2;
  uint64_t v31 = (int *)type metadata accessor for TaskTelemetry(0);
  sub_254493190(a3, (uint64_t)a9 + v31[5], (uint64_t *)&unk_269DF48E0);
  id v32 = (void *)((char *)a9 + v31[7]);
  *id v32 = a5;
  v32[1] = a6;
  uint64_t v33 = (void *)((char *)a9 + v31[8]);
  *uint64_t v33 = a7;
  v33[1] = a8;
  uint64_t v34 = (char *)a9 + v31[9];
  uint64_t v35 = sub_254526D90();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 32))(v34, a16, v35);
  *(void *)((char *)a9 + v31[10]) = a17;
  *(void *)((char *)a9 + v31[11]) = a18;
  *(void *)((char *)a9 + v31[12]) = a19;
  *(double *)((char *)a9 + v31[13]) = a10;
  *(double *)((char *)a9 + v31[14]) = a11;
  *(double *)((char *)a9 + v31[15]) = a12;
  *(double *)((char *)a9 + v31[16]) = a13;
  *(double *)((char *)a9 + v31[17]) = a14;
  *((unsigned char *)a9 + v31[6]) = v37;
  *(double *)((char *)a9 + v31[18]) = a15;
  return result;
}

uint64_t type metadata accessor for TaskTelemetry(uint64_t a1)
{
  return sub_2544991E0(a1, (uint64_t *)&unk_269DF4A30);
}

uint64_t TaskStatusEvent.init(contextId:date:taskName:taskStatus:pushMetadata:pullMetadata:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  char v15 = *a6;
  *a9 = a1;
  a9[1] = a2;
  uint64_t v16 = (int *)type metadata accessor for TaskStatusEvent(0);
  uint64_t v17 = (char *)a9 + v16[5];
  uint64_t v18 = sub_254526D90();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v17, a3, v18);
  id v19 = (void *)((char *)a9 + v16[6]);
  *id v19 = a4;
  v19[1] = a5;
  *((unsigned char *)a9 + v16[7]) = v15;
  sub_254493190(a7, (uint64_t)a9 + v16[8], &qword_269DF3338);
  return sub_254493190(a8, (uint64_t)a9 + v16[9], &qword_269DF3340);
}

uint64_t type metadata accessor for TaskStatusEvent(uint64_t a1)
{
  return sub_2544991E0(a1, (uint64_t *)&unk_269DF49F8);
}

uint64_t TaskCustomEvent.init(contextId:date:taskName:eventName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  return sub_2545052FC(a1, a2, a3, a4, a5, a6, a7, type metadata accessor for TaskCustomEvent, a8);
}

uint64_t type metadata accessor for TaskCustomEvent(uint64_t a1)
{
  return sub_2544991E0(a1, (uint64_t *)&unk_269DF4A08);
}

uint64_t TaskErrorEvent.init(contextId:date:taskName:errorMessage:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  return sub_2545052FC(a1, a2, a3, a4, a5, a6, a7, type metadata accessor for TaskErrorEvent, a8);
}

uint64_t sub_2545052FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t (*a8)(void)@<X7>, void *a9@<X8>)
{
  *a9 = a1;
  a9[1] = a2;
  char v15 = (int *)a8(0);
  uint64_t v16 = (char *)a9 + v15[5];
  uint64_t v17 = sub_254526D90();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v16, a3, v17);
  id v19 = (void *)((char *)a9 + v15[6]);
  *id v19 = a4;
  v19[1] = a5;
  id v20 = (void *)((char *)a9 + v15[7]);
  *id v20 = a6;
  v20[1] = a7;
  return result;
}

uint64_t type metadata accessor for TaskErrorEvent(uint64_t a1)
{
  return sub_2544991E0(a1, (uint64_t *)&unk_26B267118);
}

LighthouseBackground::CoreAnalyticsEvents_optional __swiftcall CoreAnalyticsEvents.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_254527790();
  result.value = swift_bridgeObjectRelease();
  char v5 = 7;
  if (v3 < 7) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static CoreAnalyticsEvents.allCases.getter()
{
  return &unk_2703D5310;
}

unint64_t CoreAnalyticsEvents.rawValue.getter()
{
  unint64_t result = 0xD000000000000030;
  switch(*v0)
  {
    case 1:
    case 3:
      unint64_t result = 0xD00000000000002ELL;
      break;
    case 2:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 4:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000025;
      break;
    case 6:
      unint64_t result = 0xD00000000000002BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25450550C(char *a1, char *a2)
{
  return sub_2544906DC(*a1, *a2);
}

uint64_t sub_254505518()
{
  return sub_25451BACC();
}

uint64_t sub_254505524()
{
  return sub_25451ADB8();
}

uint64_t sub_25450552C()
{
  return sub_25451BACC();
}

LighthouseBackground::CoreAnalyticsEvents_optional sub_254505534(Swift::String *a1)
{
  return CoreAnalyticsEvents.init(rawValue:)(*a1);
}

unint64_t sub_254505540@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = CoreAnalyticsEvents.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_254505568(void *a1@<X8>)
{
  *a1 = &unk_2703D5310;
}

uint64_t TaskStatusEvent.date.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_254506134(type metadata accessor for TaskStatusEvent, a1);
}

uint64_t TaskStatusEvent.taskName.getter()
{
  return sub_2545061CC(type metadata accessor for TaskStatusEvent);
}

uint64_t TaskStatusEvent.taskStatus.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for TaskStatusEvent(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t TaskStatusEvent.pushMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for TaskStatusEvent(0);
  return sub_254493CFC(v1 + *(int *)(v3 + 32), a1, &qword_269DF3338);
}

uint64_t TaskStatusEvent.pullMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for TaskStatusEvent(0);
  return sub_254493CFC(v1 + *(int *)(v3 + 36), a1, &qword_269DF3340);
}

uint64_t sub_25450565C(char a1)
{
  return *(void *)&aContextidate[8 * a1];
}

uint64_t sub_25450567C()
{
  return sub_25450565C(*v0);
}

uint64_t sub_254505684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25450EA18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2545056AC(uint64_t a1)
{
  unint64_t v2 = sub_254505A44();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2545056E8(uint64_t a1)
{
  unint64_t v2 = sub_254505A44();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TaskStatusEvent.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4930);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254505A44();
  sub_254527B00();
  v11[15] = 0;
  sub_254527930();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for TaskStatusEvent(0);
    v11[14] = 1;
    sub_254526D90();
    sub_25450CEB4((unint64_t *)&unk_26B266FD8, MEMORY[0x263F07490]);
    sub_254527970();
    v11[13] = 2;
    sub_254527930();
    v11[12] = *(unsigned char *)(v3 + *(int *)(v9 + 28));
    v11[11] = 3;
    sub_254499328();
    sub_254527970();
    v11[10] = 4;
    type metadata accessor for PushMetadata(0);
    sub_25450CEB4(&qword_269DF3358, (void (*)(uint64_t))type metadata accessor for PushMetadata);
    sub_254527910();
    v11[9] = 5;
    type metadata accessor for PullMetadata(0);
    sub_25450CEB4(&qword_269DF3360, (void (*)(uint64_t))type metadata accessor for PullMetadata);
    sub_254527910();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_254505A44()
{
  unint64_t result = qword_269DF4938;
  if (!qword_269DF4938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4938);
  }
  return result;
}

uint64_t TaskStatusEvent.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3340);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v31 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3338);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_254526D90();
  uint64_t v33 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4940);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  id v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (int *)type metadata accessor for TaskStatusEvent(0);
  MEMORY[0x270FA5388](v13);
  char v15 = (uint64_t *)((char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = a1[3];
  uint64_t v36 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_254505A44();
  uint64_t v35 = v12;
  uint64_t v17 = v37;
  sub_254527AF0();
  if (v17) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  }
  char v37 = v7;
  uint64_t v19 = v32;
  uint64_t v18 = v33;
  char v44 = 0;
  *char v15 = sub_254527830();
  v15[1] = v20;
  uint64_t v29 = v15;
  char v43 = 1;
  sub_25450CEB4(&qword_26B266BE0, MEMORY[0x263F07490]);
  sub_254527870();
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))((char *)v29 + v13[5], v10, v8);
  char v42 = 2;
  uint64_t v21 = sub_254527830();
  uint64_t v22 = (uint64_t)v29;
  id v23 = (uint64_t *)((char *)v29 + v13[6]);
  *id v23 = v21;
  v23[1] = v24;
  char v40 = 3;
  sub_2544993D0();
  uint64_t v28 = 0;
  sub_254527870();
  *(unsigned char *)(v22 + v13[7]) = v41;
  type metadata accessor for PushMetadata(0);
  char v39 = 4;
  sub_25450CEB4(&qword_269DF3370, (void (*)(uint64_t))type metadata accessor for PushMetadata);
  uint64_t v25 = (uint64_t)v37;
  sub_254527810();
  sub_254493190(v25, v22 + v13[8], &qword_269DF3338);
  type metadata accessor for PullMetadata(0);
  char v38 = 5;
  sub_25450CEB4(&qword_269DF3378, (void (*)(uint64_t))type metadata accessor for PullMetadata);
  uint64_t v26 = (uint64_t)v31;
  sub_254527810();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v35, v34);
  sub_254493190(v26, v22 + v13[9], &qword_269DF3340);
  sub_2545067DC(v22, v30, type metadata accessor for TaskStatusEvent);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return sub_254506844(v22, type metadata accessor for TaskStatusEvent);
}

uint64_t sub_2545060EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TaskStatusEvent.init(from:)(a1, a2);
}

uint64_t sub_254506104(void *a1)
{
  return TaskStatusEvent.encode(to:)(a1);
}

uint64_t TaskErrorEvent.date.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_254506134(type metadata accessor for TaskErrorEvent, a1);
}

uint64_t sub_254506134@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 20);
  uint64_t v5 = sub_254526D90();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t TaskErrorEvent.taskName.getter()
{
  return sub_2545061CC(type metadata accessor for TaskErrorEvent);
}

uint64_t sub_2545061CC(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 24));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t TaskErrorEvent.errorMessage.getter()
{
  return sub_25450691C(type metadata accessor for TaskErrorEvent);
}

uint64_t sub_25450622C(char a1)
{
  return *(void *)&aContextidate_0[8 * a1];
}

uint64_t sub_25450624C()
{
  return sub_25450622C(*v0);
}

uint64_t sub_254506254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25450EC90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25450627C(uint64_t a1)
{
  unint64_t v2 = sub_254506344();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2545062B8(uint64_t a1)
{
  unint64_t v2 = sub_254506344();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TaskErrorEvent.encode(to:)(void *a1)
{
  return sub_254506A7C(a1, &qword_269DF4948, (void (*)(void))sub_254506344, (uint64_t)&type metadata for TaskErrorEvent.CodingKeys, (uint64_t)type metadata accessor for TaskErrorEvent);
}

unint64_t sub_254506344()
{
  unint64_t result = qword_269DF4950;
  if (!qword_269DF4950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4950);
  }
  return result;
}

uint64_t TaskErrorEvent.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v3 = sub_254526D90();
  uint64_t v27 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4958);
  uint64_t v28 = *(void *)(v6 - 8);
  uint64_t v29 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for TaskErrorEvent(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (void *)((char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254506344();
  uint64_t v30 = v8;
  uint64_t v12 = (uint64_t)v31;
  sub_254527AF0();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v31 = a1;
  uint64_t v14 = v28;
  uint64_t v13 = v29;
  char v35 = 0;
  *uint64_t v11 = sub_254527830();
  v11[1] = v15;
  char v34 = 1;
  sub_25450CEB4(&qword_26B266BE0, MEMORY[0x263F07490]);
  sub_254527870();
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))((char *)v11 + v9[5], v5, v3);
  char v33 = 2;
  v25[1] = 0;
  uint64_t v16 = sub_254527830();
  uint64_t v17 = (uint64_t)v11;
  uint64_t v18 = (uint64_t *)((char *)v11 + v9[6]);
  *uint64_t v18 = v16;
  v18[1] = v19;
  char v32 = 3;
  uint64_t v20 = sub_254527830();
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v30, v13);
  id v23 = (uint64_t *)(v17 + v9[7]);
  *id v23 = v20;
  v23[1] = v22;
  sub_2545067DC(v17, v26, type metadata accessor for TaskErrorEvent);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  return sub_254506844(v17, type metadata accessor for TaskErrorEvent);
}

uint64_t sub_2545067DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_254506844(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2545068A4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TaskErrorEvent.init(from:)(a1, a2);
}

uint64_t sub_2545068BC(void *a1)
{
  return TaskErrorEvent.encode(to:)(a1);
}

uint64_t TaskCustomEvent.date.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_254506134(type metadata accessor for TaskCustomEvent, a1);
}

uint64_t TaskCustomEvent.taskName.getter()
{
  return sub_2545061CC(type metadata accessor for TaskCustomEvent);
}

uint64_t TaskCustomEvent.eventName.getter()
{
  return sub_25450691C(type metadata accessor for TaskCustomEvent);
}

uint64_t sub_25450691C(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 28));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_254506964(char a1)
{
  return *(void *)&aContextidate_1[8 * a1];
}

uint64_t sub_254506984()
{
  return sub_254506964(*v0);
}

uint64_t sub_25450698C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25450EE3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2545069B4(uint64_t a1)
{
  unint64_t v2 = sub_254506CAC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2545069F0(uint64_t a1)
{
  unint64_t v2 = sub_254506CAC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TaskCustomEvent.encode(to:)(void *a1)
{
  return sub_254506A7C(a1, &qword_269DF4960, (void (*)(void))sub_254506CAC, (uint64_t)&type metadata for TaskCustomEvent.CodingKeys, (uint64_t)type metadata accessor for TaskCustomEvent);
}

uint64_t sub_254506A7C(void *a1, uint64_t *a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
  v13[0] = a5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_254527B00();
  char v17 = 0;
  uint64_t v11 = v13[1];
  sub_254527930();
  if (!v11)
  {
    ((void (*)(void))v13[0])(0);
    char v16 = 1;
    sub_254526D90();
    sub_25450CEB4((unint64_t *)&unk_26B266FD8, MEMORY[0x263F07490]);
    sub_254527970();
    char v15 = 2;
    sub_254527930();
    char v14 = 3;
    sub_254527930();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

unint64_t sub_254506CAC()
{
  unint64_t result = qword_269DF4968;
  if (!qword_269DF4968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4968);
  }
  return result;
}

uint64_t TaskCustomEvent.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v3 = sub_254526D90();
  uint64_t v27 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4970);
  uint64_t v28 = *(void *)(v6 - 8);
  uint64_t v29 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for TaskCustomEvent(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (void *)((char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254506CAC();
  uint64_t v30 = v8;
  uint64_t v12 = (uint64_t)v31;
  sub_254527AF0();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v31 = a1;
  uint64_t v14 = v28;
  uint64_t v13 = v29;
  char v35 = 0;
  *uint64_t v11 = sub_254527830();
  v11[1] = v15;
  char v34 = 1;
  sub_25450CEB4(&qword_26B266BE0, MEMORY[0x263F07490]);
  sub_254527870();
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))((char *)v11 + v9[5], v5, v3);
  char v33 = 2;
  v25[1] = 0;
  uint64_t v16 = sub_254527830();
  uint64_t v17 = (uint64_t)v11;
  uint64_t v18 = (uint64_t *)((char *)v11 + v9[6]);
  *uint64_t v18 = v16;
  v18[1] = v19;
  char v32 = 3;
  uint64_t v20 = sub_254527830();
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v30, v13);
  id v23 = (uint64_t *)(v17 + v9[7]);
  *id v23 = v20;
  v23[1] = v22;
  sub_2545067DC(v17, v26, type metadata accessor for TaskCustomEvent);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  return sub_254506844(v17, type metadata accessor for TaskCustomEvent);
}

uint64_t sub_254507144@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TaskCustomEvent.init(from:)(a1, a2);
}

uint64_t sub_25450715C(void *a1)
{
  return TaskCustomEvent.encode(to:)(a1);
}

uint64_t DeviceTelemetry.bucketRange.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_254508634(type metadata accessor for DeviceTelemetry, a1);
}

uint64_t DeviceTelemetry.tasksCount.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for DeviceTelemetry(0) + 24));
}

uint64_t DeviceTelemetry.tasksRun.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for DeviceTelemetry(0) + 28));
}

uint64_t DeviceTelemetry.tasksDeferred.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for DeviceTelemetry(0) + 32));
}

uint64_t DeviceTelemetry.tasksFailed.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for DeviceTelemetry(0) + 36));
}

uint64_t DeviceTelemetry.tasksCompleted.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for DeviceTelemetry(0) + 40));
}

uint64_t sub_254507240(char a1)
{
  return *(void *)&aContextibucket[8 * a1];
}

uint64_t sub_254507260()
{
  return sub_254507240(*v0);
}

uint64_t sub_254507268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25450EFDC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_254507290(uint64_t a1)
{
  unint64_t v2 = sub_2545075AC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2545072CC(uint64_t a1)
{
  unint64_t v2 = sub_2545075AC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DeviceTelemetry.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4978);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2545075AC();
  sub_254527B00();
  v8[15] = 0;
  sub_254527930();
  if (!v1)
  {
    type metadata accessor for DeviceTelemetry(0);
    v8[14] = 1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48E0);
    sub_254507A54(&qword_269DF4988, (unint64_t *)&unk_26B266FD8);
    sub_254527970();
    v8[13] = 2;
    sub_254527960();
    v8[12] = 3;
    sub_254527960();
    v8[11] = 4;
    sub_254527960();
    v8[10] = 5;
    sub_254527960();
    v8[9] = 6;
    sub_254527960();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2545075AC()
{
  unint64_t result = qword_269DF4980;
  if (!qword_269DF4980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4980);
  }
  return result;
}

uint64_t DeviceTelemetry.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48E0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4990);
  uint64_t v26 = *(void *)(v6 - 8);
  uint64_t v27 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DeviceTelemetry(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (uint64_t *)((char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = a1[3];
  uint64_t v28 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_2545075AC();
  uint64_t v13 = v8;
  uint64_t v14 = v29;
  sub_254527AF0();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  }
  uint64_t v15 = v5;
  uint64_t v29 = (int *)v9;
  char v36 = 0;
  uint64_t v17 = v26;
  uint64_t v16 = v27;
  uint64_t v18 = (uint64_t)v11;
  *uint64_t v11 = sub_254527830();
  v11[1] = v19;
  char v35 = 1;
  sub_254507A54(&qword_269DF4998, &qword_26B266BE0);
  uint64_t v20 = (uint64_t)v15;
  sub_254527870();
  uint64_t v21 = v29;
  sub_254493190(v20, v18 + v29[5], (uint64_t *)&unk_269DF48E0);
  char v34 = 2;
  *(void *)(v18 + v21[6]) = sub_254527860();
  char v33 = 3;
  *(void *)(v18 + v21[7]) = sub_254527860();
  char v32 = 4;
  *(void *)(v18 + v21[8]) = sub_254527860();
  char v31 = 5;
  *(void *)(v18 + v21[9]) = sub_254527860();
  char v30 = 6;
  uint64_t v22 = sub_254527860();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v13, v16);
  *(void *)(v18 + v21[10]) = v22;
  sub_2545067DC(v18, v25, type metadata accessor for DeviceTelemetry);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  return sub_254506844(v18, type metadata accessor for DeviceTelemetry);
}

uint64_t sub_254507A54(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_269DF48E0);
    sub_25450CEB4(a2, MEMORY[0x263F07490]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_254507AE8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DeviceTelemetry.init(from:)(a1, a2);
}

uint64_t sub_254507B00(void *a1)
{
  return DeviceTelemetry.encode(to:)(a1);
}

uint64_t PushTelemetry.contextId.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PushTelemetry.taskName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PushTelemetry.countPushParameterError.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t PushTelemetry.countPushParameterError.setter(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

uint64_t (*PushTelemetry.countPushParameterError.modify())()
{
  return nullsub_1;
}

uint64_t PushTelemetry.countPushProcessed.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t PushTelemetry.countPushProcessed.setter(uint64_t result)
{
  *(void *)(v1 + 40) = result;
  return result;
}

uint64_t (*PushTelemetry.countPushProcessed.modify())()
{
  return nullsub_1;
}

uint64_t PushTelemetry.countPushReceived.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t PushTelemetry.countPushReceived.setter(uint64_t result)
{
  *(void *)(v1 + 48) = result;
  return result;
}

uint64_t (*PushTelemetry.countPushReceived.modify())()
{
  return nullsub_1;
}

uint64_t PushTelemetry.countPushRegistrationError.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t PushTelemetry.countPushRegistrationError.setter(uint64_t result)
{
  *(void *)(v1 + 56) = result;
  return result;
}

uint64_t (*PushTelemetry.countPushRegistrationError.modify())()
{
  return nullsub_1;
}

double PushTelemetry.pushErrorLatency.getter()
{
  return *(double *)(v0 + 64);
}

void PushTelemetry.pushErrorLatency.setter(double a1)
{
  *(double *)(v1 + 64) = a1;
}

uint64_t (*PushTelemetry.pushErrorLatency.modify())()
{
  return nullsub_1;
}

double PushTelemetry.pushFirstRunLatency.getter()
{
  return *(double *)(v0 + 72);
}

void PushTelemetry.pushFirstRunLatency.setter(double a1)
{
  *(double *)(v1 + 72) = a1;
}

uint64_t (*PushTelemetry.pushFirstRunLatency.modify())()
{
  return nullsub_1;
}

double PushTelemetry.pushReceivedLatency.getter()
{
  return *(double *)(v0 + 80);
}

void PushTelemetry.pushReceivedLatency.setter(double a1)
{
  *(double *)(v1 + 80) = a1;
}

uint64_t (*PushTelemetry.pushReceivedLatency.modify())()
{
  return nullsub_1;
}

unint64_t sub_254507CC8(char a1)
{
  unint64_t result = 0xD000000000000017;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656D614E6B736174;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
    case 8:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      unint64_t result = 0x49747865746E6F63;
      break;
  }
  return result;
}

unint64_t sub_254507DD4()
{
  return sub_254507CC8(*v0);
}

uint64_t sub_254507DDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25450F2F4(a1, a2);
  *a3 = result;
  return result;
}

void sub_254507E04(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_254507E10(uint64_t a1)
{
  unint64_t v2 = sub_254508154();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254507E4C(uint64_t a1)
{
  unint64_t v2 = sub_254508154();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PushTelemetry.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF49A0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[2];
  void v16[4] = v1[3];
  v16[5] = v8;
  uint64_t v9 = v1[4];
  v16[2] = v1[5];
  v16[3] = v9;
  uint64_t v10 = v1[6];
  v16[0] = v1[7];
  v16[1] = v10;
  uint64_t v11 = a1[3];
  uint64_t v12 = a1;
  uint64_t v14 = v13;
  __swift_project_boxed_opaque_existential_1(v12, v11);
  sub_254508154();
  sub_254527B00();
  char v25 = 0;
  sub_254527930();
  if (!v2)
  {
    char v24 = 1;
    sub_254527930();
    char v23 = 2;
    sub_254527960();
    char v22 = 3;
    sub_254527960();
    char v21 = 4;
    sub_254527960();
    char v20 = 5;
    sub_254527960();
    char v19 = 6;
    sub_254527950();
    char v18 = 7;
    sub_254527950();
    char v17 = 8;
    sub_254527950();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v14);
}

unint64_t sub_254508154()
{
  unint64_t result = qword_269DF49A8;
  if (!qword_269DF49A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF49A8);
  }
  return result;
}

uint64_t PushTelemetry.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF49B0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254508154();
  sub_254527AF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v40 = 0;
  uint64_t v9 = sub_254527830();
  uint64_t v11 = v10;
  uint64_t v31 = v9;
  char v39 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_254527830();
  uint64_t v14 = v13;
  uint64_t v29 = v12;
  uint64_t v30 = v11;
  char v38 = 2;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_254527860();
  char v37 = 3;
  uint64_t v27 = sub_254527860();
  char v36 = 4;
  uint64_t v26 = sub_254527860();
  char v35 = 5;
  uint64_t v16 = sub_254527860();
  char v34 = 6;
  sub_254527850();
  uint64_t v18 = v17;
  char v33 = 7;
  sub_254527850();
  uint64_t v25 = v19;
  char v32 = 8;
  sub_254527850();
  uint64_t v21 = v20;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v22 = v30;
  *a2 = v31;
  a2[1] = v22;
  a2[2] = v29;
  a2[3] = v14;
  uint64_t v23 = v27;
  a2[4] = v28;
  a2[5] = v23;
  a2[6] = v26;
  a2[7] = v16;
  uint64_t v24 = v25;
  a2[8] = v18;
  a2[9] = v24;
  a2[10] = v21;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2545085BC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return PushTelemetry.init(from:)(a1, a2);
}

uint64_t sub_2545085D4(void *a1)
{
  return PushTelemetry.encode(to:)(a1);
}

uint64_t TaskTelemetry.contextId.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TaskTelemetry.bucketRange.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_254508634(type metadata accessor for TaskTelemetry, a1);
}

uint64_t sub_254508634@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1(0);
  return sub_254493CFC(v2 + *(int *)(v4 + 20), a2, (uint64_t *)&unk_269DF48E0);
}

uint64_t TaskTelemetry.bucketInterval.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for TaskTelemetry(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t TaskTelemetry.taskName.getter()
{
  return sub_25450691C(type metadata accessor for TaskTelemetry);
}

uint64_t TaskTelemetry.taskState.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TaskTelemetry(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TaskTelemetry.latestEventTimestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TaskTelemetry(0) + 36);
  uint64_t v4 = sub_254526D90();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t TaskTelemetry.countCompleted.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for TaskTelemetry(0) + 40));
}

uint64_t TaskTelemetry.countFailed.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for TaskTelemetry(0) + 44));
}

uint64_t TaskTelemetry.countDeferred.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for TaskTelemetry(0) + 48));
}

double TaskTelemetry.dailyExecutionLatency.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for TaskTelemetry(0) + 52));
}

double TaskTelemetry.crossExecutionDelay.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for TaskTelemetry(0) + 56));
}

double TaskTelemetry.executionCompletionTime.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for TaskTelemetry(0) + 60));
}

double TaskTelemetry.executionFailureTime.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for TaskTelemetry(0) + 64));
}

double TaskTelemetry.executionDeferralTime.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for TaskTelemetry(0) + 68));
}

double TaskTelemetry.deferralToCompletionTime.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for TaskTelemetry(0) + 72));
}

unint64_t sub_2545088C4(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x615274656B637562;
      break;
    case 2:
      unint64_t result = 0x6E4974656B637562;
      break;
    case 3:
      unint64_t result = 0x656D614E6B736174;
      break;
    case 4:
      unint64_t result = 0x746174536B736174;
      break;
    case 5:
    case 12:
      return result;
    case 6:
      unint64_t result = 0x6D6F43746E756F63;
      break;
    case 7:
      unint64_t result = 0x696146746E756F63;
      break;
    case 8:
      unint64_t result = 0x666544746E756F63;
      break;
    case 9:
      unint64_t result = 0xD000000000000015;
      break;
    case 10:
      unint64_t result = 0xD000000000000013;
      break;
    case 11:
      unint64_t result = 0xD000000000000017;
      break;
    case 13:
      unint64_t result = 0xD000000000000015;
      break;
    case 14:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      unint64_t result = 0x49747865746E6F63;
      break;
  }
  return result;
}

unint64_t sub_254508AA4()
{
  return sub_2545088C4(*v0);
}

uint64_t sub_254508AAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25450F650(a1, a2);
  *a3 = result;
  return result;
}

void sub_254508AD4(unsigned char *a1@<X8>)
{
  *a1 = 15;
}

uint64_t sub_254508AE0(uint64_t a1)
{
  unint64_t v2 = sub_254508FC8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254508B1C(uint64_t a1)
{
  unint64_t v2 = sub_254508FC8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TaskTelemetry.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF49B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254508FC8();
  sub_254527B00();
  char v12 = 0;
  sub_254527930();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for TaskTelemetry(0);
    char v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48E0);
    sub_254507A54(&qword_269DF4988, (unint64_t *)&unk_26B266FD8);
    sub_254527970();
    char v12 = *(unsigned char *)(v3 + *(int *)(v9 + 24));
    v11[14] = 2;
    sub_25450901C();
    sub_254527970();
    char v12 = 3;
    sub_254527930();
    char v12 = 4;
    sub_254527930();
    char v12 = 5;
    sub_254526D90();
    sub_25450CEB4((unint64_t *)&unk_26B266FD8, MEMORY[0x263F07490]);
    sub_254527970();
    char v12 = 6;
    sub_254527960();
    char v12 = 7;
    sub_254527960();
    char v12 = 8;
    sub_254527960();
    char v12 = 9;
    sub_254527950();
    char v12 = 10;
    sub_254527950();
    char v12 = 11;
    sub_254527950();
    char v12 = 12;
    sub_254527950();
    char v12 = 13;
    sub_254527950();
    char v12 = 14;
    sub_254527950();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_254508FC8()
{
  unint64_t result = qword_269DF49C0;
  if (!qword_269DF49C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF49C0);
  }
  return result;
}

unint64_t sub_25450901C()
{
  unint64_t result = qword_269DF49C8;
  if (!qword_269DF49C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF49C8);
  }
  return result;
}

uint64_t TaskTelemetry.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v4 = sub_254526D90();
  uint64_t v39 = *(void *)(v4 - 8);
  uint64_t v40 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48E0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF49D0);
  uint64_t v10 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  char v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v42 = (int *)type metadata accessor for TaskTelemetry(0);
  MEMORY[0x270FA5388](v42);
  char v43 = (uint64_t *)((char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = a1[3];
  char v41 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_254508FC8();
  char v37 = v12;
  sub_254527AF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  }
  char v45 = 0;
  uint64_t v15 = sub_254527830();
  uint64_t v16 = v43;
  *char v43 = v15;
  v16[1] = v17;
  char v45 = 1;
  sub_254507A54(&qword_269DF4998, &qword_26B266BE0);
  sub_254527870();
  uint64_t v18 = v42;
  sub_254493190((uint64_t)v9, (uint64_t)v16 + v42[5], (uint64_t *)&unk_269DF48E0);
  char v44 = 2;
  sub_25450986C();
  sub_254527870();
  *((unsigned char *)v16 + v18[6]) = v45;
  char v45 = 3;
  uint64_t v19 = sub_254527830();
  uint64_t v20 = (uint64_t *)((char *)v16 + v18[7]);
  *uint64_t v20 = v19;
  v20[1] = v21;
  char v45 = 4;
  uint64_t v22 = sub_254527830();
  uint64_t v23 = (uint64_t *)((char *)v16 + v18[8]);
  *uint64_t v23 = v22;
  v23[1] = v24;
  char v45 = 5;
  sub_25450CEB4(&qword_26B266BE0, MEMORY[0x263F07490]);
  uint64_t v25 = v40;
  sub_254527870();
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))((char *)v16 + v18[9], v6, v25);
  char v45 = 6;
  *(uint64_t *)((char *)v16 + v18[10]) = sub_254527860();
  char v45 = 7;
  *(uint64_t *)((char *)v16 + v18[11]) = sub_254527860();
  char v45 = 8;
  *(uint64_t *)((char *)v16 + v18[12]) = sub_254527860();
  char v45 = 9;
  sub_254527850();
  *(uint64_t *)((char *)v43 + v42[13]) = v26;
  char v45 = 10;
  sub_254527850();
  *(uint64_t *)((char *)v43 + v42[14]) = v27;
  char v45 = 11;
  sub_254527850();
  *(uint64_t *)((char *)v43 + v42[15]) = v28;
  char v45 = 12;
  sub_254527850();
  *(uint64_t *)((char *)v43 + v42[16]) = v29;
  char v45 = 13;
  sub_254527850();
  *(uint64_t *)((char *)v43 + v42[17]) = v30;
  char v45 = 14;
  sub_254527850();
  uint64_t v32 = v31;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v37, v38);
  uint64_t v33 = (uint64_t)v43;
  *(uint64_t *)((char *)v43 + v42[18]) = v32;
  sub_2545067DC(v33, v36, type metadata accessor for TaskTelemetry);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  return sub_254506844(v33, type metadata accessor for TaskTelemetry);
}

unint64_t sub_25450986C()
{
  unint64_t result = qword_269DF49D8;
  if (!qword_269DF49D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF49D8);
  }
  return result;
}

uint64_t sub_2545098C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TaskTelemetry.init(from:)(a1, a2);
}

uint64_t sub_2545098D8(void *a1)
{
  return TaskTelemetry.encode(to:)(a1);
}

unint64_t DeviceTelemetry.coreAnalyticsDictionary.getter()
{
  unint64_t v0 = sub_2544A57CC(MEMORY[0x263F8EE78]);
  uint64_t v1 = sub_254526FD0();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534(v1, 0x49747865746E6F63, 0xE900000000000064, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  type metadata accessor for DeviceTelemetry(0);
  uint64_t v3 = sub_2545273A0();
  char v4 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534(v3, 0x756F43736B736174, 0xEA0000000000746ELL, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_2545273A0();
  char v6 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534(v5, 0x6E7552736B736174, 0xE800000000000000, v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_2545273A0();
  char v8 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534(v7, 0x666544736B736174, 0xED00006465727265, v8);
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_2545273A0();
  char v10 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534(v9, 0x696146736B736174, 0xEB0000000064656CLL, v10);
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_2545273A0();
  char v12 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534(v11, 0x6D6F43736B736174, 0xEE00646574656C70, v12);
  swift_bridgeObjectRelease();
  sub_2544FDA20();
  uint64_t v13 = sub_254526FD0();
  swift_bridgeObjectRelease();
  char v14 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534(v13, 0x745374656B637562, 0xEB00000000747261, v14);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48E0);
  sub_2544FDA20();
  uint64_t v15 = sub_254526FD0();
  swift_bridgeObjectRelease();
  char v16 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534(v15, 0x6E4574656B637562, 0xE900000000000064, v16);
  swift_bridgeObjectRelease();
  return v0;
}

unint64_t PushTelemetry.coreAnalyticsDictionary.getter()
{
  uint64_t v2 = *((void *)v0 + 4);
  uint64_t v1 = *((void *)v0 + 5);
  uint64_t v4 = *((void *)v0 + 6);
  uint64_t v3 = *((void *)v0 + 7);
  double v6 = v0[8];
  double v5 = v0[9];
  double v7 = v0[10];
  unint64_t v8 = sub_2544A57CC(MEMORY[0x263F8EE78]);
  uint64_t v9 = sub_254526FD0();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534(v9, 0x49747865746E6F63, 0xE900000000000064, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_254526FD0();
  char v12 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534(v11, 0x656D614E6B736174, 0xE800000000000000, v12);
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v2);
  char v14 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534((uint64_t)v13, 0xD000000000000017, 0x80000002545341A0, v14);
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v1);
  char v16 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534((uint64_t)v15, 0xD000000000000012, 0x80000002545341C0, v16);
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v4);
  char v18 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534((uint64_t)v17, 0xD000000000000011, 0x80000002545341E0, v18);
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v3);
  char v20 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534((uint64_t)v19, 0xD00000000000001ALL, 0x8000000254534200, v20);
  swift_bridgeObjectRelease();
  id v21 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v6);
  char v22 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534((uint64_t)v21, 0xD000000000000010, 0x8000000254534220, v22);
  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v5);
  char v24 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534((uint64_t)v23, 0xD000000000000013, 0x8000000254534240, v24);
  swift_bridgeObjectRelease();
  id v25 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v7);
  char v26 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534((uint64_t)v25, 0xD000000000000013, 0x8000000254534260, v26);
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t TaskTelemetry.coreAnalyticsDictionary.getter()
{
  uint64_t v1 = v0;
  unint64_t v2 = sub_2544A57CC(MEMORY[0x263F8EE78]);
  uint64_t v3 = sub_254526FD0();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534(v3, 0x49747865746E6F63, 0xE900000000000064, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  double v5 = (int *)type metadata accessor for TaskTelemetry(0);
  sub_2544FDA20();
  uint64_t v6 = sub_254526FD0();
  swift_bridgeObjectRelease();
  char v7 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534(v6, 0x745374656B637562, 0xEB00000000747261, v7);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48E0);
  sub_2544FDA20();
  uint64_t v8 = sub_254526FD0();
  swift_bridgeObjectRelease();
  char v9 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534(v8, 0x6E4574656B637562, 0xE900000000000064, v9);
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_254526FD0();
  swift_bridgeObjectRelease();
  char v11 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534(v10, 0x6E4974656B637562, 0xEE006C6176726574, v11);
  swift_bridgeObjectRelease();
  uint64_t v12 = sub_254526FD0();
  char v13 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534(v12, 0x656D614E6B736174, 0xE800000000000000, v13);
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_254526FD0();
  char v15 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534(v14, 0x746174536B736174, 0xE900000000000065, v15);
  swift_bridgeObjectRelease();
  sub_254526D30();
  sub_254527350();
  uint64_t v16 = sub_254526FD0();
  swift_bridgeObjectRelease();
  char v17 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534(v16, 0xD000000000000014, 0x8000000254534280, v17);
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)(v1 + v5[10]));
  char v19 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534((uint64_t)v18, 0x6D6F43746E756F63, 0xEE00646574656C70, v19);
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)(v1 + v5[11]));
  char v21 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534((uint64_t)v20, 0x696146746E756F63, 0xEB0000000064656CLL, v21);
  swift_bridgeObjectRelease();
  id v22 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)(v1 + v5[12]));
  char v23 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534((uint64_t)v22, 0x666544746E756F63, 0xED00006465727265, v23);
  swift_bridgeObjectRelease();
  id v24 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *(double *)(v1 + v5[13]));
  char v25 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534((uint64_t)v24, 0xD000000000000015, 0x80000002545342A0, v25);
  swift_bridgeObjectRelease();
  id v26 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *(double *)(v1 + v5[14]));
  char v27 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534((uint64_t)v26, 0xD000000000000013, 0x80000002545342C0, v27);
  swift_bridgeObjectRelease();
  id v28 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *(double *)(v1 + v5[15]));
  char v29 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534((uint64_t)v28, 0xD000000000000017, 0x80000002545342E0, v29);
  swift_bridgeObjectRelease();
  id v30 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *(double *)(v1 + v5[16]));
  char v31 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534((uint64_t)v30, 0xD000000000000014, 0x8000000254534300, v31);
  swift_bridgeObjectRelease();
  id v32 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *(double *)(v1 + v5[17]));
  char v33 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534((uint64_t)v32, 0xD000000000000015, 0x8000000254534320, v33);
  swift_bridgeObjectRelease();
  id v34 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *(double *)(v1 + v5[18]));
  char v35 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534((uint64_t)v34, 0xD000000000000018, 0x8000000254534340, v35);
  swift_bridgeObjectRelease();
  return v2;
}

unint64_t sub_25450A620()
{
  unint64_t result = qword_269DF49E0;
  if (!qword_269DF49E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF49E0);
  }
  return result;
}

unint64_t sub_25450A678()
{
  unint64_t result = qword_269DF49E8;
  if (!qword_269DF49E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DF49F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF49E8);
  }
  return result;
}

uint64_t dispatch thunk of CoreAnalyticsConvertible.coreAnalyticsDictionary.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for CoreAnalyticsEvents()
{
  return &type metadata for CoreAnalyticsEvents;
}

void *initializeBufferWithCopyOfBuffer for TaskStatusEvent(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    char v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_254526D90();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    uint64_t v42 = v11;
    char v41 = v12;
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    char v15 = (void *)((char *)v4 + v13);
    uint64_t v16 = (void *)((char *)a2 + v13);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    LOBYTE(v16) = *((unsigned char *)a2 + v14);
    *char v15 = v17;
    v15[1] = v18;
    *((unsigned char *)v4 + v14) = (_BYTE)v16;
    uint64_t v19 = a3[8];
    id v20 = (void *)((char *)v4 + v19);
    char v21 = (void *)((char *)a2 + v19);
    uint64_t v22 = type metadata accessor for PushMetadata(0);
    uint64_t v23 = *(void *)(v22 - 8);
    id v24 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v23 + 48);
    swift_bridgeObjectRetain();
    if (v24(v21, 1, v22))
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3338);
      memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      uint64_t v27 = v21[1];
      *id v20 = *v21;
      v20[1] = v27;
      uint64_t v28 = v21[3];
      void v20[2] = v21[2];
      v20[3] = v28;
      uint64_t v29 = v21[5];
      v20[4] = v21[4];
      v20[5] = v29;
      uint64_t v30 = v21[7];
      v20[6] = v21[6];
      v20[7] = v30;
      uint64_t v31 = *(int *)(v22 + 32);
      uint64_t v40 = (char *)v20 + v31;
      id v32 = (char *)v21 + v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v41(v40, v32, v42);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    uint64_t v33 = a3[9];
    id v34 = (char *)v4 + v33;
    char v35 = (char *)a2 + v33;
    uint64_t v36 = type metadata accessor for PullMetadata(0);
    uint64_t v37 = *(void *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
    {
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3340);
      memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      v41(v34, v35, v42);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
    }
  }
  return v4;
}

uint64_t destroy for TaskStatusEvent(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_254526D90();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v11(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[8];
  uint64_t v7 = type metadata accessor for PushMetadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v11(v6 + *(int *)(v7 + 32), v5);
  }
  uint64_t v8 = a1 + a2[9];
  uint64_t v9 = type metadata accessor for PullMetadata(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v11)(v8, v5);
  }
  return result;
}

void *initializeWithCopy for TaskStatusEvent(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_254526D90();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  uint64_t v40 = v10;
  uint64_t v39 = v11;
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v12);
  char v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  LOBYTE(v15) = *((unsigned char *)a2 + v13);
  *uint64_t v14 = v16;
  v14[1] = v17;
  *((unsigned char *)a1 + v13) = (_BYTE)v15;
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)((char *)a1 + v18);
  id v20 = (void *)((char *)a2 + v18);
  uint64_t v21 = type metadata accessor for PushMetadata(0);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v22 + 48);
  swift_bridgeObjectRetain();
  if (v23(v20, 1, v21))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3338);
    memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    uint64_t v25 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v25;
    uint64_t v26 = v20[3];
    void v19[2] = v20[2];
    v19[3] = v26;
    uint64_t v27 = v20[5];
    v19[4] = v20[4];
    v19[5] = v27;
    uint64_t v28 = v20[7];
    v19[6] = v20[6];
    v19[7] = v28;
    uint64_t v29 = *(int *)(v21 + 32);
    uint64_t v38 = (char *)v19 + v29;
    uint64_t v30 = (char *)v20 + v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v39(v38, v30, v40);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  uint64_t v31 = a3[9];
  id v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = type metadata accessor for PullMetadata(0);
  uint64_t v35 = *(void *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
  {
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3340);
    memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    v39(v32, v33, v40);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  return a1;
}

void *assignWithCopy for TaskStatusEvent(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_254526D90();
  uint64_t v37 = *(void *)(v9 - 8);
  uint64_t v38 = v9;
  uint64_t v36 = *(void (**)(char *, char *))(v37 + 24);
  v36(v7, v8);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)((char *)a1 + v13);
  char v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = type metadata accessor for PushMetadata(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      *uint64_t v14 = *v15;
      v14[1] = v15[1];
      v14[2] = v15[2];
      _OWORD v14[3] = v15[3];
      v14[4] = v15[4];
      v14[5] = v15[5];
      v14[6] = v15[6];
      v14[7] = v15[7];
      uint64_t v21 = *(int *)(v16 + 32);
      uint64_t v34 = (char *)v15 + v21;
      uint64_t v35 = (char *)v14 + v21;
      uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v33(v35, v34, v38);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    sub_254506844((uint64_t)v14, type metadata accessor for PushMetadata);
LABEL_6:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3338);
    memcpy(v14, v15, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14[2] = v15[2];
  _OWORD v14[3] = v15[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14[4] = v15[4];
  v14[5] = v15[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14[6] = v15[6];
  v14[7] = v15[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  ((void (*)(char *, char *, uint64_t))v36)((char *)v14 + *(int *)(v16 + 32), (char *)v15 + *(int *)(v16 + 32), v38);
LABEL_7:
  uint64_t v23 = a3[9];
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = type metadata accessor for PullMetadata(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  int v29 = v28(v24, 1, v26);
  int v30 = v28(v25, 1, v26);
  if (!v29)
  {
    if (!v30)
    {
      ((void (*)(char *, char *, uint64_t))v36)(v24, v25, v38);
      return a1;
    }
    sub_254506844((uint64_t)v24, type metadata accessor for PullMetadata);
    goto LABEL_12;
  }
  if (v30)
  {
LABEL_12:
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3340);
    memcpy(v24, v25, *(void *)(*(void *)(v31 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v24, v25, v38);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  return a1;
}

_OWORD *initializeWithTake for TaskStatusEvent(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_254526D90();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  uint64_t v12 = a3[8];
  uint64_t v13 = (_OWORD *)((char *)a1 + v12);
  uint64_t v14 = (_OWORD *)((char *)a2 + v12);
  uint64_t v15 = type metadata accessor for PushMetadata(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3338);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    long long v18 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v18;
    long long v19 = v14[3];
    void v13[2] = v14[2];
    void v13[3] = v19;
    v10((char *)v13 + *(int *)(v15 + 32), (char *)v14 + *(int *)(v15 + 32), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v20 = a3[9];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = type metadata accessor for PullMetadata(0);
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3340);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    v10(v21, v22, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  return a1;
}

void *assignWithTake for TaskStatusEvent(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_254526D90();
  uint64_t v42 = *(void *)(v10 - 8);
  uint64_t v43 = v10;
  char v41 = *(void (**)(char *, char *))(v42 + 40);
  v41(v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  uint64_t v17 = (void *)((char *)a1 + v16);
  long long v18 = (void *)((char *)a2 + v16);
  uint64_t v19 = type metadata accessor for PushMetadata(0);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      long long v24 = *((_OWORD *)v18 + 1);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v24;
      long long v25 = *((_OWORD *)v18 + 3);
      *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
      *((_OWORD *)v17 + 3) = v25;
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))((char *)v17 + *(int *)(v19 + 32), (char *)v18 + *(int *)(v19 + 32), v43);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v23)
  {
    sub_254506844((uint64_t)v17, type metadata accessor for PushMetadata);
LABEL_6:
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3338);
    memcpy(v17, v18, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v37 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v37;
  swift_bridgeObjectRelease();
  uint64_t v38 = v18[3];
  void v17[2] = v18[2];
  v17[3] = v38;
  swift_bridgeObjectRelease();
  uint64_t v39 = v18[5];
  v17[4] = v18[4];
  v17[5] = v39;
  swift_bridgeObjectRelease();
  uint64_t v40 = v18[7];
  v17[6] = v18[6];
  v17[7] = v40;
  swift_bridgeObjectRelease();
  ((void (*)(char *, char *, uint64_t))v41)((char *)v17 + *(int *)(v19 + 32), (char *)v18 + *(int *)(v19 + 32), v43);
LABEL_7:
  uint64_t v27 = a3[9];
  uint64_t v28 = (char *)a1 + v27;
  int v29 = (char *)a2 + v27;
  uint64_t v30 = type metadata accessor for PullMetadata(0);
  uint64_t v31 = *(void *)(v30 - 8);
  id v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
  int v33 = v32(v28, 1, v30);
  int v34 = v32(v29, 1, v30);
  if (!v33)
  {
    if (!v34)
    {
      ((void (*)(char *, char *, uint64_t))v41)(v28, v29, v43);
      return a1;
    }
    sub_254506844((uint64_t)v28, type metadata accessor for PullMetadata);
    goto LABEL_12;
  }
  if (v34)
  {
LABEL_12:
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3340);
    memcpy(v28, v29, *(void *)(*(void *)(v35 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v28, v29, v43);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for TaskStatusEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25450B9A8);
}

uint64_t sub_25450B9A8(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_254526D90();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3338);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[8];
    goto LABEL_9;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3340);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[9];

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for TaskStatusEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25450BB3C);
}

uint64_t sub_25450BB3C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_254526D90();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3338);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[8];
    goto LABEL_7;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3340);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[9];

  return v15(v17, a2, a2, v16);
}

void sub_25450BCBC()
{
  sub_254526D90();
  if (v0 <= 0x3F)
  {
    sub_25450BE10(319, &qword_269DF3530, (void (*)(uint64_t))type metadata accessor for PushMetadata);
    if (v1 <= 0x3F)
    {
      sub_25450BE10(319, &qword_269DF3538, (void (*)(uint64_t))type metadata accessor for PullMetadata);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_25450BE10(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2545274E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for TaskErrorEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_12Tm);
}

uint64_t storeEnumTagSinglePayload for TaskErrorEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_13Tm);
}

uint64_t *_s20LighthouseBackground14TaskErrorEventVwCP_0(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_254526D90();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (uint64_t *)((char *)v4 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    long long v18 = (uint64_t *)((char *)v4 + v14);
    uint64_t v19 = (uint64_t *)((char *)a2 + v14);
    uint64_t v20 = v19[1];
    *long long v18 = *v19;
    v18[1] = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t _s20LighthouseBackground14TaskErrorEventVwxx_0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_254526D90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s20LighthouseBackground14TaskErrorEventVwcp_0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_254526D90();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v12);
  uint64_t v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (void *)((char *)a1 + v13);
  long long v18 = (void *)((char *)a2 + v13);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s20LighthouseBackground14TaskErrorEventVwca_0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_254526D90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *_s20LighthouseBackground14TaskErrorEventVwtk_0(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_254526D90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  return a1;
}

void *_s20LighthouseBackground14TaskErrorEventVwta_0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_254526D90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)((char *)a1 + v16);
  long long v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TaskCustomEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25450C3CC);
}

uint64_t __swift_get_extra_inhabitant_index_12Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_254526D90();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for TaskCustomEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25450C494);
}

uint64_t __swift_store_extra_inhabitant_index_13Tm(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_254526D90();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_25450C540()
{
  uint64_t result = sub_254526D90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DeviceTelemetry(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_254526D90();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48E0);
    v12(&v9[*(int *)(v13 + 36)], &v10[*(int *)(v13 + 36)], v11);
    uint64_t v14 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v4 + v14) = *(uint64_t *)((char *)a2 + v14);
    uint64_t v15 = a3[9];
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *(uint64_t *)((char *)v4 + v15) = *(uint64_t *)((char *)a2 + v15);
    *(uint64_t *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
  }
  return v4;
}

uint64_t destroy for DeviceTelemetry(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_254526D90();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  uint64_t v6 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48E0) + 36);

  return v8(v6, v5);
}

void *initializeWithCopy for DeviceTelemetry(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_254526D90();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48E0);
  v11(&v8[*(int *)(v12 + 36)], &v9[*(int *)(v12 + 36)], v10);
  uint64_t v13 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  uint64_t v14 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  return a1;
}

void *assignWithCopy for DeviceTelemetry(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_254526D90();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48E0);
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  return a1;
}

_OWORD *initializeWithTake for DeviceTelemetry(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_254526D90();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48E0);
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  uint64_t v13 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  return a1;
}

void *assignWithTake for DeviceTelemetry(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_254526D90();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48E0);
  v11(&v8[*(int *)(v12 + 36)], &v9[*(int *)(v12 + 36)], v10);
  uint64_t v13 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  uint64_t v14 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceTelemetry(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25450CC00);
}

uint64_t sub_25450CC00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48E0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for DeviceTelemetry(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25450CCC8);
}

uint64_t sub_25450CCC8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48E0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_25450CD74()
{
  sub_25450CE20();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_25450CE20()
{
  if (!qword_269DF4A28)
  {
    sub_254526D90();
    sub_25450CEB4((unint64_t *)&qword_269DF38B8, MEMORY[0x263F07490]);
    unint64_t v0 = sub_2545273F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269DF4A28);
    }
  }
}

uint64_t sub_25450CEB4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t initializeWithCopy for PushTelemetry(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PushTelemetry(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for PushTelemetry(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for PushTelemetry(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PushTelemetry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PushTelemetry()
{
  return &type metadata for PushTelemetry;
}

void *initializeBufferWithCopyOfBuffer for TaskTelemetry(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_254526D90();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48E0);
    v12(&v9[*(int *)(v13 + 36)], &v10[*(int *)(v13 + 36)], v11);
    uint64_t v14 = a3[7];
    *((unsigned char *)v4 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v15 = (void *)((char *)v4 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = a3[8];
    uint64_t v19 = a3[9];
    uint64_t v20 = (void *)((char *)v4 + v18);
    uint64_t v21 = (void *)((char *)a2 + v18);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    int v23 = (char *)v4 + v19;
    long long v24 = (char *)a2 + v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v23, v24, v11);
    uint64_t v25 = a3[11];
    *(void *)((char *)v4 + a3[10]) = *(void *)((char *)a2 + a3[10]);
    *(void *)((char *)v4 + v25) = *(void *)((char *)a2 + v25);
    uint64_t v26 = a3[13];
    *(void *)((char *)v4 + a3[12]) = *(void *)((char *)a2 + a3[12]);
    *(void *)((char *)v4 + v26) = *(void *)((char *)a2 + v26);
    uint64_t v27 = a3[15];
    *(void *)((char *)v4 + a3[14]) = *(void *)((char *)a2 + a3[14]);
    *(void *)((char *)v4 + v27) = *(void *)((char *)a2 + v27);
    uint64_t v28 = a3[17];
    *(void *)((char *)v4 + a3[16]) = *(void *)((char *)a2 + a3[16]);
    *(void *)((char *)v4 + v28) = *(void *)((char *)a2 + v28);
    *(void *)((char *)v4 + a3[18]) = *(void *)((char *)a2 + a3[18]);
  }
  return v4;
}

uint64_t destroy for TaskTelemetry(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_254526D90();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v9)((void *)(v5 - 8), v4, v5);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48E0);
  v9(v4 + *(int *)(v6 + 36), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 36);

  return ((uint64_t (*)(uint64_t, uint64_t))v9)(v7, v5);
}

void *initializeWithCopy for TaskTelemetry(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_254526D90();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48E0);
  v11(&v8[*(int *)(v12 + 36)], &v9[*(int *)(v12 + 36)], v10);
  uint64_t v13 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v19 = (void *)((char *)a1 + v17);
  uint64_t v20 = (void *)((char *)a2 + v17);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = (char *)a1 + v18;
  int v23 = (char *)a2 + v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v22, v23, v10);
  uint64_t v24 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v24) = *(void *)((char *)a2 + v24);
  uint64_t v25 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *(void *)((char *)a1 + v25) = *(void *)((char *)a2 + v25);
  uint64_t v26 = a3[15];
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  *(void *)((char *)a1 + v26) = *(void *)((char *)a2 + v26);
  uint64_t v27 = a3[17];
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  *(void *)((char *)a1 + v27) = *(void *)((char *)a2 + v27);
  *(void *)((char *)a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
  return a1;
}

void *assignWithCopy for TaskTelemetry(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_254526D90();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48E0);
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10((char *)a1 + a3[9], (char *)a2 + a3[9], v9);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  *(void *)((char *)a1 + a3[17]) = *(void *)((char *)a2 + a3[17]);
  *(void *)((char *)a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
  return a1;
}

_OWORD *initializeWithTake for TaskTelemetry(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_254526D90();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48E0);
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  uint64_t v12 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  uint64_t v13 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  v10((char *)a1 + v13, (char *)a2 + v13, v9);
  uint64_t v14 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
  uint64_t v15 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  uint64_t v16 = a3[15];
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);
  uint64_t v17 = a3[17];
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  *(void *)((char *)a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
  return a1;
}

void *assignWithTake for TaskTelemetry(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_254526D90();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48E0);
  v11(&v8[*(int *)(v12 + 36)], &v9[*(int *)(v12 + 36)], v10);
  uint64_t v13 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  v11((char *)a1 + a3[9], (char *)a2 + a3[9], v10);
  uint64_t v23 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v23) = *(void *)((char *)a2 + v23);
  uint64_t v24 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *(void *)((char *)a1 + v24) = *(void *)((char *)a2 + v24);
  uint64_t v25 = a3[15];
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  *(void *)((char *)a1 + v25) = *(void *)((char *)a2 + v25);
  uint64_t v26 = a3[17];
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  *(void *)((char *)a1 + v26) = *(void *)((char *)a2 + v26);
  *(void *)((char *)a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
  return a1;
}

uint64_t getEnumTagSinglePayload for TaskTelemetry(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25450DA30);
}

uint64_t sub_25450DA30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48E0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_254526D90();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for TaskTelemetry(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25450DB74);
}

uint64_t sub_25450DB74(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48E0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_254526D90();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 36);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_25450DCA4()
{
  sub_25450CE20();
  if (v0 <= 0x3F)
  {
    sub_254526D90();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for TaskTelemetry.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF2) {
    goto LABEL_17;
  }
  if (a2 + 14 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 14) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 14;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v8 = v6 - 15;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TaskTelemetry.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *__n128 result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25450DEFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TaskTelemetry.CodingKeys()
{
  return &type metadata for TaskTelemetry.CodingKeys;
}

uint64_t getEnumTagSinglePayload for PushTelemetry.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PushTelemetry.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *__n128 result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25450E090);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PushTelemetry.CodingKeys()
{
  return &type metadata for PushTelemetry.CodingKeys;
}

unsigned char *_s20LighthouseBackground19CoreAnalyticsEventsOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25450E194);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceTelemetry.CodingKeys()
{
  return &type metadata for DeviceTelemetry.CodingKeys;
}

ValueMetadata *type metadata accessor for TaskCustomEvent.CodingKeys()
{
  return &type metadata for TaskCustomEvent.CodingKeys;
}

unsigned char *_s20LighthouseBackground15TaskCustomEventV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25450E2ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TaskErrorEvent.CodingKeys()
{
  return &type metadata for TaskErrorEvent.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for TaskStatusEvent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25450E3B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TaskStatusEvent.CodingKeys()
{
  return &type metadata for TaskStatusEvent.CodingKeys;
}

unint64_t sub_25450E3EC()
{
  unint64_t result = qword_269DF4A40;
  if (!qword_269DF4A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4A40);
  }
  return result;
}

unint64_t sub_25450E444()
{
  unint64_t result = qword_269DF4A48;
  if (!qword_269DF4A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4A48);
  }
  return result;
}

unint64_t sub_25450E49C()
{
  unint64_t result = qword_269DF4A50;
  if (!qword_269DF4A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4A50);
  }
  return result;
}

unint64_t sub_25450E4F4()
{
  unint64_t result = qword_269DF4A58;
  if (!qword_269DF4A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4A58);
  }
  return result;
}

unint64_t sub_25450E54C()
{
  unint64_t result = qword_269DF4A60;
  if (!qword_269DF4A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4A60);
  }
  return result;
}

unint64_t sub_25450E5A4()
{
  unint64_t result = qword_269DF4A68;
  if (!qword_269DF4A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4A68);
  }
  return result;
}

unint64_t sub_25450E5FC()
{
  unint64_t result = qword_269DF4A70;
  if (!qword_269DF4A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4A70);
  }
  return result;
}

unint64_t sub_25450E654()
{
  unint64_t result = qword_269DF4A78;
  if (!qword_269DF4A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4A78);
  }
  return result;
}

unint64_t sub_25450E6AC()
{
  unint64_t result = qword_269DF4A80;
  if (!qword_269DF4A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4A80);
  }
  return result;
}

unint64_t sub_25450E704()
{
  unint64_t result = qword_269DF4A88;
  if (!qword_269DF4A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4A88);
  }
  return result;
}

unint64_t sub_25450E75C()
{
  unint64_t result = qword_269DF4A90;
  if (!qword_269DF4A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4A90);
  }
  return result;
}

unint64_t sub_25450E7B4()
{
  unint64_t result = qword_269DF4A98;
  if (!qword_269DF4A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4A98);
  }
  return result;
}

unint64_t sub_25450E80C()
{
  unint64_t result = qword_269DF4AA0;
  if (!qword_269DF4AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4AA0);
  }
  return result;
}

unint64_t sub_25450E864()
{
  unint64_t result = qword_269DF4AA8;
  if (!qword_269DF4AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4AA8);
  }
  return result;
}

unint64_t sub_25450E8BC()
{
  unint64_t result = qword_269DF4AB0;
  if (!qword_269DF4AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4AB0);
  }
  return result;
}

unint64_t sub_25450E914()
{
  unint64_t result = qword_269DF4AB8;
  if (!qword_269DF4AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4AB8);
  }
  return result;
}

unint64_t sub_25450E96C()
{
  unint64_t result = qword_269DF4AC0;
  if (!qword_269DF4AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4AC0);
  }
  return result;
}

unint64_t sub_25450E9C4()
{
  unint64_t result = qword_269DF4AC8;
  if (!qword_269DF4AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4AC8);
  }
  return result;
}

uint64_t sub_25450EA18(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x49747865746E6F63 && a2 == 0xE900000000000064;
  if (v3 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D614E6B736174 && a2 == 0xE800000000000000 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746174536B736174 && a2 == 0xEA00000000007375 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174654D68737570 && a2 == 0xEC00000061746164 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174654D6C6C7570 && a2 == 0xEC00000061746164)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_2545279E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_25450EC90(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x49747865746E6F63 && a2 == 0xE900000000000064;
  if (v3 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D614E6B736174 && a2 == 0xE800000000000000 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73654D726F727265 && a2 == 0xEC00000065676173)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_2545279E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_25450EE3C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x49747865746E6F63 && a2 == 0xE900000000000064;
  if (v3 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D614E6B736174 && a2 == 0xE800000000000000 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D614E746E657665 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_2545279E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_25450EFDC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x49747865746E6F63 && a2 == 0xE900000000000064;
  if (v3 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x615274656B637562 && a2 == 0xEB0000000065676ELL || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x756F43736B736174 && a2 == 0xEA0000000000746ELL || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E7552736B736174 && a2 == 0xE800000000000000 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x666544736B736174 && a2 == 0xED00006465727265 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x696146736B736174 && a2 == 0xEB0000000064656CLL || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6D6F43736B736174 && a2 == 0xEE00646574656C70)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_2545279E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_25450F2F4(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x49747865746E6F63 && a2 == 0xE900000000000064;
  if (v3 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D614E6B736174 && a2 == 0xE800000000000000 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002545341A0 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002545341C0 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002545341E0 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000254534200 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000254534220 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000254534240 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000254534260)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_2545279E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_25450F650(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x49747865746E6F63 && a2 == 0xE900000000000064;
  if (v3 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x615274656B637562 && a2 == 0xEB0000000065676ELL || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E4974656B637562 && a2 == 0xEE006C6176726574 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D614E6B736174 && a2 == 0xE800000000000000 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746174536B736174 && a2 == 0xE900000000000065 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000254534280 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6D6F43746E756F63 && a2 == 0xEE00646574656C70 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x696146746E756F63 && a2 == 0xEB0000000064656CLL || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x666544746E756F63 && a2 == 0xED00006465727265 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002545342A0 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002545342C0 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002545342E0 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000254534300 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000254534320 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000254534340)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    char v6 = sub_2545279E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 14;
    }
    else {
      return 15;
    }
  }
}

uint64_t MLHostParameters.systemParameters.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  *(void *)a1 = *(void *)v1;
  *(unsigned char *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  return sub_25450FC68(v3, v4);
}

uint64_t sub_25450FC68(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t MLHostParameters.taskParameters.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

uint64_t MLHostParameters.init(taskParameters:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = 0;
  *(unsigned char *)(a3 + 8) = 1;
  uint64_t v6 = type metadata accessor for MLHostParameters();
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  uint64_t v7 = a3 + *(int *)(v6 + 44);
  int v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32);

  return v8(v7, a1, a2);
}

void __swiftcall MLHostSystemParameters.init()(LighthouseBackground::MLHostSystemParameters *__return_ptr retstr)
{
  retstr->sampling.value = 0.0;
  retstr->sampling.is_nil = 1;
  retstr->mobileAsset.value.assetType = 0u;
  retstr->mobileAsset.value.assetSpecifier = 0u;
}

uint64_t type metadata accessor for MLHostParameters()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t MLHostParameters.init(systemParameters:taskParameters:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a4 = *(void *)a1;
  *(unsigned char *)(a4 + 8) = v6;
  long long v7 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a4 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a4 + 32) = v7;
  uint64_t v8 = a4 + *(int *)(type metadata accessor for MLHostParameters() + 44);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);

  return v9(v8, a2, a3);
}

BOOL sub_25450FE44(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_25450FE54()
{
  return sub_254527A90();
}

uint64_t sub_25450FE7C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x8000000254534520 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617261506B736174 && a2 == 0xEE0073726574656DLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_2545279E0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25450FF84()
{
  return sub_254527AB0();
}

uint64_t sub_25450FFCC(char a1)
{
  if (a1) {
    return 0x617261506B736174;
  }
  else {
    return 0xD000000000000010;
  }
}

BOOL sub_254510014(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25450FE44(*a1, *a2);
}

uint64_t sub_25451002C()
{
  return sub_25450FF84();
}

uint64_t sub_254510040()
{
  return sub_25450FE54();
}

uint64_t sub_254510054()
{
  return sub_254527AB0();
}

uint64_t sub_2545100A0()
{
  return sub_25450FFCC(*v0);
}

uint64_t sub_2545100B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25450FE7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2545100E8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_254513784();
  *a1 = result;
  return result;
}

uint64_t sub_25451011C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_254510170(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t MLHostParameters.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a2 + 16);
  v15[0] = *(void *)(a2 + 32);
  v15[1] = v6;
  type metadata accessor for MLHostParameters.CodingKeys();
  swift_getWitnessTable();
  uint64_t v7 = sub_254527990();
  uint64_t v16 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254527B00();
  char v10 = *((unsigned char *)v3 + 8);
  uint64_t v18 = *v3;
  char v19 = v10;
  long long v11 = *((_OWORD *)v3 + 2);
  long long v20 = *((_OWORD *)v3 + 1);
  long long v21 = v11;
  char v22 = 0;
  sub_2545103D0();
  uint64_t v12 = v17;
  sub_254527970();
  if (v12) {
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v9, v7);
  }
  uint64_t v14 = v16;
  LOBYTE(v18) = 1;
  sub_254527970();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v9, v7);
}

uint64_t type metadata accessor for MLHostParameters.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_2545103D0()
{
  unint64_t result = qword_269DF4AD8;
  if (!qword_269DF4AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4AD8);
  }
  return result;
}

uint64_t MLHostParameters.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v26 = a4;
  uint64_t v25 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v28 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MLHostParameters.CodingKeys();
  swift_getWitnessTable();
  uint64_t v30 = sub_2545278A0();
  uint64_t v27 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v9 = (char *)&v22 - v8;
  uint64_t v29 = a3;
  uint64_t v10 = type metadata accessor for MLHostParameters();
  uint64_t v24 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v22 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = (uint64_t)v31;
  sub_254527AF0();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v31 = a1;
  uint64_t v23 = v10;
  uint64_t v14 = v12;
  uint64_t v16 = v27;
  uint64_t v15 = v28;
  char v36 = 0;
  sub_2545107D4();
  sub_254527870();
  char v17 = v33;
  *(void *)uint64_t v14 = v32;
  v14[8] = v17;
  long long v18 = v35;
  *((_OWORD *)v14 + 1) = v34;
  *((_OWORD *)v14 + 2) = v18;
  LOBYTE(v32) = 1;
  sub_254527870();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v30);
  uint64_t v19 = v23;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v14[*(int *)(v23 + 44)], v15, a2);
  uint64_t v20 = v24;
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 16))(v26, v14, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v14, v19);
}

unint64_t sub_2545107D4()
{
  unint64_t result = qword_269DF4AE0;
  if (!qword_269DF4AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4AE0);
  }
  return result;
}

uint64_t sub_254510828(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25451086C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return MLHostParameters.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_254510890(void *a1, uint64_t a2)
{
  return MLHostParameters.encode(to:)(a1, a2);
}

uint64_t MLHostSystemParameters.sampling.getter()
{
  return *(void *)v0;
}

uint64_t MLHostSystemParameters.mobileAsset.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_25450FC68(v2, v3);
}

void __swiftcall MLHostSystemParameters.init(sampling:mobileAsset:)(LighthouseBackground::MLHostSystemParameters *__return_ptr retstr, Swift::Double_optional sampling, LighthouseBackground::MLHostAssetParameters_optional mobileAsset)
{
  retstr->sampling.value = *(Swift::Double *)&sampling.is_nil;
  retstr->sampling.is_nil = mobileAsset.value.assetType._countAndFlagsBits & 1;
  Swift::String v3 = (Swift::String)*((_OWORD *)mobileAsset.value.assetType._object + 1);
  retstr->mobileAsset.value.assetType = *(Swift::String *)mobileAsset.value.assetType._object;
  retstr->mobileAsset.value.assetSpecifier = v3;
}

uint64_t sub_2545108E0(char a1)
{
  if (a1) {
    return 0x7341656C69626F6DLL;
  }
  else {
    return 0x676E696C706D6173;
  }
}

uint64_t sub_254510920()
{
  return sub_2545108E0(*v0);
}

uint64_t sub_254510928@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25451378C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_254510950(uint64_t a1)
{
  unint64_t v2 = sub_254510B7C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25451098C(uint64_t a1)
{
  unint64_t v2 = sub_254510B7C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MLHostSystemParameters.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4AE8);
  uint64_t v15 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  uint64_t v13 = v1[3];
  uint64_t v14 = v7;
  uint64_t v8 = v1[4];
  uint64_t v11 = v1[5];
  uint64_t v12 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254510B7C();
  sub_254527B00();
  LOBYTE(v16) = 0;
  sub_2545278E0();
  if (!v2)
  {
    uint64_t v16 = v14;
    uint64_t v17 = v13;
    uint64_t v18 = v12;
    uint64_t v19 = v11;
    char v20 = 1;
    sub_254510BD0();
    sub_254527910();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v6, v4);
}

unint64_t sub_254510B7C()
{
  unint64_t result = qword_269DF4AF0;
  if (!qword_269DF4AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4AF0);
  }
  return result;
}

unint64_t sub_254510BD0()
{
  unint64_t result = qword_269DF4AF8;
  if (!qword_269DF4AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4AF8);
  }
  return result;
}

uint64_t MLHostSystemParameters.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4B00);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254510B7C();
  sub_254527AF0();
  if (!v2)
  {
    LOBYTE(v15[0]) = 0;
    uint64_t v9 = sub_2545277E0();
    char v11 = v10;
    char v16 = 1;
    sub_254510DEC();
    sub_254527810();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    long long v12 = v15[0];
    long long v13 = v15[1];
    *(void *)a2 = v9;
    *(unsigned char *)(a2 + 8) = v11 & 1;
    *(_OWORD *)(a2 + 16) = v12;
    *(_OWORD *)(a2 + 32) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_254510DEC()
{
  unint64_t result = qword_269DF4B08;
  if (!qword_269DF4B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4B08);
  }
  return result;
}

uint64_t sub_254510E40@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MLHostSystemParameters.init(from:)(a1, a2);
}

uint64_t sub_254510E58(void *a1)
{
  return MLHostSystemParameters.encode(to:)(a1);
}

uint64_t MLHostAssetParameters.assetType.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MLHostAssetParameters.assetSpecifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

LighthouseBackground::MLHostAssetParameters __swiftcall MLHostAssetParameters.init(assetType:assetSpecifier:)(Swift::String assetType, Swift::String assetSpecifier)
{
  *uint64_t v2 = assetType;
  v2[1] = assetSpecifier;
  result.assetSpecifier = assetSpecifier;
  result.assetType = assetType;
  return result;
}

uint64_t sub_254510EDC(char a1)
{
  if (a1) {
    return 0x6570537465737361;
  }
  else {
    return 0x7079547465737361;
  }
}

uint64_t sub_254510F24()
{
  return sub_254510EDC(*v0);
}

uint64_t sub_254510F2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_254513888(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_254510F54(uint64_t a1)
{
  unint64_t v2 = sub_254511144();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254510F90(uint64_t a1)
{
  unint64_t v2 = sub_254511144();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MLHostAssetParameters.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4B10);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  id v10[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254511144();
  sub_254527B00();
  char v12 = 0;
  uint64_t v8 = v10[3];
  sub_254527930();
  if (!v8)
  {
    char v11 = 1;
    sub_254527930();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_254511144()
{
  unint64_t result = qword_269DF4B18;
  if (!qword_269DF4B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4B18);
  }
  return result;
}

uint64_t MLHostAssetParameters.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4B20);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254511144();
  sub_254527AF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v20 = 0;
  uint64_t v9 = sub_254527830();
  uint64_t v11 = v10;
  char v19 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_254527830();
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v18 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v18;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25451139C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return MLHostAssetParameters.init(from:)(a1, a2);
}

uint64_t sub_2545113B4(void *a1)
{
  return MLHostAssetParameters.encode(to:)(a1);
}

uint64_t sub_2545113CC(uint64_t a1)
{
  unint64_t v2 = sub_254511554();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254511408(uint64_t a1)
{
  unint64_t v2 = sub_254511554();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MLHostEmptyParameters.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4B28);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254511554();
  sub_254527B00();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_254511554()
{
  unint64_t result = qword_269DF4B30;
  if (!qword_269DF4B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4B30);
  }
  return result;
}

uint64_t MLHostEmptyParameters.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_2545115D0(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_2545115F8(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4B28);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254511554();
  sub_254527B00();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

LighthouseBackground::MLHostCommonError_optional __swiftcall MLHostCommonError.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_254527790();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t MLHostCommonError.rawValue.getter()
{
  unint64_t v1 = 0xD000000000000011;
  if (*v0 == 1) {
    unint64_t v1 = 0xD000000000000016;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000019;
  }
}

uint64_t sub_2545117C4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_254490954(*a1, *a2);
}

uint64_t sub_2545117D0()
{
  return sub_25451A908();
}

uint64_t sub_2545117D8()
{
  return sub_25451AF10();
}

uint64_t sub_2545117E0()
{
  return sub_25451B9C0();
}

LighthouseBackground::MLHostCommonError_optional sub_2545117E8(Swift::String *a1)
{
  return MLHostCommonError.init(rawValue:)(*a1);
}

unint64_t sub_2545117F4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = MLHostCommonError.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t MLHostExtensionContext.taskId.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC20LighthouseBackground22MLHostExtensionContext_taskId);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MLHostExtensionContext.taskName.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC20LighthouseBackground22MLHostExtensionContext_taskName);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MLHostExtensionContext.taskFolder.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC20LighthouseBackground22MLHostExtensionContext_taskFolder);
  swift_bridgeObjectRetain();
  return v1;
}

id MLHostExtensionContext.__allocating_init(taskId:taskName:taskFolder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (char *)objc_allocWithZone(v6);
  uint64_t v14 = &v13[OBJC_IVAR____TtC20LighthouseBackground22MLHostExtensionContext_taskId];
  *(void *)uint64_t v14 = a1;
  *((void *)v14 + 1) = a2;
  uint64_t v15 = &v13[OBJC_IVAR____TtC20LighthouseBackground22MLHostExtensionContext_taskName];
  *(void *)uint64_t v15 = a3;
  *((void *)v15 + 1) = a4;
  char v16 = &v13[OBJC_IVAR____TtC20LighthouseBackground22MLHostExtensionContext_taskFolder];
  *(void *)char v16 = a5;
  *((void *)v16 + 1) = a6;
  v18.receiver = v13;
  v18.super_class = v6;
  return objc_msgSendSuper2(&v18, sel_init);
}

id MLHostExtensionContext.init(taskId:taskName:taskFolder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v14 = &v6[OBJC_IVAR____TtC20LighthouseBackground22MLHostExtensionContext_taskId];
  *(void *)uint64_t v14 = a1;
  *((void *)v14 + 1) = a2;
  uint64_t v15 = &v6[OBJC_IVAR____TtC20LighthouseBackground22MLHostExtensionContext_taskName];
  *(void *)uint64_t v15 = a3;
  *((void *)v15 + 1) = a4;
  char v16 = &v6[OBJC_IVAR____TtC20LighthouseBackground22MLHostExtensionContext_taskFolder];
  *(void *)char v16 = a5;
  *((void *)v16 + 1) = a6;
  v18.receiver = v6;
  v18.super_class = ObjectType;
  return objc_msgSendSuper2(&v18, sel_init);
}

unint64_t MLHostExtensionContext.description.getter()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC20LighthouseBackground22MLHostExtensionContext_taskFolder + 8))
  {
    unint64_t v2 = 0;
    sub_254527630();
    sub_254527080();
    swift_bridgeObjectRetain();
    sub_254527080();
    swift_bridgeObjectRelease();
    sub_254527080();
    swift_bridgeObjectRetain();
    sub_254527080();
    swift_bridgeObjectRelease();
    sub_254527080();
    sub_254527080();
  }
  else
  {
    sub_254527630();
    swift_bridgeObjectRelease();
    unint64_t v2 = 0xD00000000000001FLL;
    swift_bridgeObjectRetain();
    sub_254527080();
    swift_bridgeObjectRelease();
    sub_254527080();
    swift_bridgeObjectRetain();
    sub_254527080();
    swift_bridgeObjectRelease();
  }
  sub_254527080();
  return v2;
}

uint64_t static MLHostExtensionContext.supportsSecureCoding.getter()
{
  return byte_269DF4AD0;
}

uint64_t static MLHostExtensionContext.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_269DF4AD0 = a1;
  return result;
}

uint64_t (*static MLHostExtensionContext.supportsSecureCoding.modify())()
{
  return j_j__swift_endAccess;
}

Swift::Void __swiftcall MLHostExtensionContext.encode(with:)(NSCoder with)
{
  id v3 = objc_msgSend(objc_allocWithZone(NSString), sel_initWithUTF8String_, sub_254527040() + 32);
  swift_release();
  uint64_t v4 = (void *)sub_254526FD0();
  [(objc_class *)with.super.isa encodeObject:v3 forKey:v4];

  id v5 = objc_msgSend(objc_allocWithZone(NSString), sel_initWithUTF8String_, sub_254527040() + 32);
  swift_release();
  uint64_t v6 = (void *)sub_254526FD0();
  [(objc_class *)with.super.isa encodeObject:v5 forKey:v6];

  if (*(void *)(v1 + OBJC_IVAR____TtC20LighthouseBackground22MLHostExtensionContext_taskFolder + 8))
  {
    id v7 = objc_msgSend(objc_allocWithZone(NSString), sel_initWithUTF8String_, sub_254527040() + 32);
    swift_release();
    id v8 = (id)sub_254526FD0();
    [(objc_class *)with.super.isa encodeObject:v7 forKey:v8];
  }
}

id MLHostExtensionContext.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return MLHostExtensionContext.init(coder:)(a1);
}

id MLHostExtensionContext.init(coder:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_2545121C8();
  id v5 = v2;
  uint64_t v6 = sub_2545274A0();
  if (!v6) {
    goto LABEL_6;
  }
  id v7 = (void *)v6;
  uint64_t v8 = sub_2545274A0();
  if (!v8)
  {

LABEL_6:
    swift_deallocPartialClassInstance();
    return 0;
  }
  uint64_t v9 = (void *)v8;
  uint64_t v10 = sub_254526FE0();
  uint64_t v11 = (uint64_t *)&v5[OBJC_IVAR____TtC20LighthouseBackground22MLHostExtensionContext_taskId];
  *uint64_t v11 = v10;
  v11[1] = v12;
  uint64_t v13 = sub_254526FE0();
  uint64_t v14 = (uint64_t *)&v5[OBJC_IVAR____TtC20LighthouseBackground22MLHostExtensionContext_taskName];
  *uint64_t v14 = v13;
  v14[1] = v15;
  uint64_t v16 = sub_2545274A0();
  if (v16)
  {
    uint64_t v17 = (void *)v16;
    uint64_t v18 = sub_254526FE0();
    uint64_t v20 = v19;

    long long v21 = (uint64_t *)&v5[OBJC_IVAR____TtC20LighthouseBackground22MLHostExtensionContext_taskFolder];
    *long long v21 = v18;
    v21[1] = v20;
  }
  else
  {

    uint64_t v23 = &v5[OBJC_IVAR____TtC20LighthouseBackground22MLHostExtensionContext_taskFolder];
    *(void *)uint64_t v23 = 0;
    *((void *)v23 + 1) = 0;
  }

  v25.receiver = v5;
  v25.super_class = ObjectType;
  id v22 = objc_msgSendSuper2(&v25, sel_init);

  return v22;
}

unint64_t sub_2545121C8()
{
  unint64_t result = qword_26B267310;
  if (!qword_26B267310)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B267310);
  }
  return result;
}

void MLHostExtensionContext.init()()
{
}

void *static MLHostResultStatus.allCases.getter()
{
  return &unk_2703D60B0;
}

void sub_254512314(void *a1@<X8>)
{
  *a1 = &unk_2703D52D8;
}

unint64_t MLHostResultPolicy.init(rawValue:)(unint64_t result)
{
  if (result > 2) {
    return 0;
  }
  return result;
}

void *static MLHostResultPolicy.allCases.getter()
{
  return &unk_2703D60E8;
}

BOOL sub_254512344(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_254512358()
{
  return sub_254527AB0();
}

uint64_t sub_2545123A0()
{
  return sub_254527A90();
}

uint64_t sub_2545123CC()
{
  return sub_254527AB0();
}

uint64_t *sub_254512410@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  BOOL v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2) {
    uint64_t v2 = 0;
  }
  *(void *)a2 = v2;
  *(unsigned char *)(a2 + 8) = v3;
  return result;
}

void sub_25451242C(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_254512438(void *a1@<X8>)
{
  *a1 = &unk_2703D52A0;
}

uint64_t MLHostResult.status.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_status);
}

uint64_t MLHostResult.policy.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_policy);
}

id MLHostResult.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id MLHostResult.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_status] = 0;
  *(void *)&v0[OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_policy] = 1;
  uint64_t v2 = &v0[OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_error];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_init);
}

id MLHostResult.__allocating_init(status:policy:)(uint64_t a1, uint64_t a2)
{
  id v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_status] = a1;
  *(void *)&v5[OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_policy] = a2;
  uint64_t v6 = &v5[OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_error];
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  v8.receiver = v5;
  v8.super_class = v2;
  return objc_msgSendSuper2(&v8, sel_init);
}

id MLHostResult.init(status:policy:)(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_status] = a1;
  *(void *)&v2[OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_policy] = a2;
  uint64_t v6 = &v2[OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_error];
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  v8.receiver = v2;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_init);
}

id MLHostResult.__allocating_init(error:policy:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1(a1, v5);
  id v8 = sub_254513994(v7, a2, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v8;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

id MLHostResult.init(error:policy:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1(a1, v5);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v9);
  id v11 = sub_25451355C((uint64_t)v9, a2, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v11;
}

uint64_t MLHostResult.errorString.getter()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_status)) {
    return 0;
  }
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_error);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_254512874(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  uint64_t v5 = (void *)sub_254526FD0();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t MLHostResult.description.getter()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_error + 8))
  {
    sub_254527630();
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_status) < 3uLL)
    {
      sub_254527080();
      swift_bridgeObjectRelease();
      sub_254527080();
      if (*(void *)(v0 + OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_policy) < 3uLL)
      {
        sub_254527080();
        swift_bridgeObjectRelease();
        sub_254527080();
        sub_254527080();
LABEL_8:
        sub_254527080();
        return 0xD000000000000015;
      }
    }
  }
  else
  {
    sub_254527630();
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_status) < 3uLL)
    {
      sub_254527080();
      swift_bridgeObjectRelease();
      sub_254527080();
      if (*(void *)(v0 + OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_policy) < 3uLL)
      {
        sub_254527080();
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
    }
  }
  uint64_t result = sub_254527A10();
  __break(1u);
  return result;
}

uint64_t static MLHostResult.supportsSecureCoding.getter()
{
  return byte_269DF4AD1;
}

uint64_t static MLHostResult.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_269DF4AD1 = a1;
  return result;
}

uint64_t (*static MLHostResult.supportsSecureCoding.modify())()
{
  return j__swift_endAccess;
}

Swift::Void __swiftcall MLHostResult.encode(with:)(NSCoder with)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_status);
  id v4 = (void *)sub_254526FD0();
  [(objc_class *)with.super.isa encodeInteger:v3 forKey:v4];

  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_policy);
  uint64_t v6 = (void *)sub_254526FD0();
  [(objc_class *)with.super.isa encodeInteger:v5 forKey:v6];

  if (*(void *)(v1 + OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_error + 8))
  {
    id v7 = objc_msgSend(objc_allocWithZone(NSString), sel_initWithUTF8String_, sub_254527040() + 32);
    swift_release();
    id v8 = (id)sub_254526FD0();
    [(objc_class *)with.super.isa encodeObject:v7 forKey:v8];
  }
}

id MLHostResult.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return MLHostResult.init(coder:)(a1);
}

id MLHostResult.init(coder:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = v2;
  uint64_t v6 = (void *)sub_254526FD0();
  id v7 = objc_msgSend(a1, sel_decodeIntegerForKey_, v6);

  if ((unint64_t)v7 > 2
    || (id v8 = (void *)sub_254526FD0(),
        id v9 = objc_msgSend(a1, sel_decodeIntegerForKey_, v8),
        v8,
        (unint64_t)v9 >= 3))
  {

    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(void *)&v5[OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_status] = v7;
    *(void *)&v5[OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_policy] = v9;
    sub_2545121C8();
    if (sub_2545274A0())
    {
      uint64_t v10 = sub_254527020();
      id v11 = (uint64_t *)&v5[OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_error];
      *id v11 = v10;
      v11[1] = v12;
    }
    else
    {
      uint64_t v14 = &v5[OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_error];
      *(void *)uint64_t v14 = 0;
      *((void *)v14 + 1) = 0;
    }

    v16.receiver = v5;
    v16.super_class = ObjectType;
    id v13 = objc_msgSendSuper2(&v16, sel_init);
  }
  return v13;
}

id _s20LighthouseBackground22MLHostExtensionContextCfD_0()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t MLHostResultStatus.description.getter(unint64_t a1)
{
  if (a1 < 3) {
    return *(void *)&aFailure_1[8 * a1];
  }
  uint64_t result = sub_254527A10();
  __break(1u);
  return result;
}

uint64_t sub_2545130FC()
{
  return MLHostResultStatus.description.getter(*v0);
}

uint64_t MLHostResultPolicy.description.getter(unint64_t a1)
{
  if (a1 < 3) {
    return *(void *)&aExecute[8 * a1];
  }
  uint64_t result = sub_254527A10();
  __break(1u);
  return result;
}

uint64_t sub_254513168()
{
  return MLHostResultPolicy.description.getter(*v0);
}

uint64_t MLHostParameters.description.getter(uint64_t a1)
{
  uint64_t v3 = sub_254527AE0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12[3] = a1;
  boxed_opaque_existential_0Tunint64_t m = __swift_allocate_boxed_opaque_existential_0Tm(v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(boxed_opaque_existential_0Tm, v1, a1);
  sub_254527AC0();
  sub_254527AD0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  id v8 = sub_2544BE18C();
  swift_release();
  v12[0] = sub_254527B40();
  v12[1] = v9;
  sub_254527080();
  id v11 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B266BC0);
  sub_25448FFD4(&qword_26B266BD0, &qword_26B266BC0);
  sub_254526F70();
  swift_bridgeObjectRelease();
  sub_254527080();
  swift_bridgeObjectRelease();
  sub_254527080();
  return v12[0];
}

unint64_t MLHostSystemParameters.description.getter()
{
  uint64_t v1 = sub_254527AE0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  char v6 = *((unsigned char *)v0 + 8);
  uint64_t v7 = v0[2];
  uint64_t v8 = v0[3];
  uint64_t v10 = v0[4];
  uint64_t v9 = v0[5];
  uint64_t v17 = &type metadata for MLHostSystemParameters;
  uint64_t v11 = swift_allocObject();
  unint64_t v15 = v11;
  *(void *)(v11 + 16) = v5;
  *(unsigned char *)(v11 + 24) = v6;
  *(void *)(v11 + 32) = v7;
  *(void *)(v11 + 40) = v8;
  *(void *)(v11 + 48) = v10;
  *(void *)(v11 + 56) = v9;
  sub_25450FC68(v7, v8);
  sub_254527AC0();
  sub_254527AD0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t v12 = sub_2544BE18C();
  swift_release();
  unint64_t v15 = 0xD000000000000017;
  unint64_t v16 = 0x8000000254534410;
  uint64_t v14 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B266BC0);
  sub_25448FFD4(&qword_26B266BD0, &qword_26B266BC0);
  sub_254526F70();
  swift_bridgeObjectRelease();
  sub_254527080();
  swift_bridgeObjectRelease();
  sub_254527080();
  return v15;
}

id sub_25451355C(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  boxed_opaque_existential_0Tunint64_t m = __swift_allocate_boxed_opaque_existential_0Tm(v25);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_0Tm, a1, a4);
  *(void *)&a3[OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_status] = 0;
  *(void *)&a3[OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_policy] = a2;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v24[3] = AssociatedTypeWitness;
  v24[4] = swift_getAssociatedConformanceWitness();
  id v13 = __swift_allocate_boxed_opaque_existential_0Tm(v24);
  uint64_t v14 = a3;
  uint64_t v15 = sub_254527140();
  MEMORY[0x270FA5388](v15);
  (*(void (**)(char *, uint64_t *, uint64_t))(v17 + 16))((char *)&v23 - v16, v13, AssociatedTypeWitness);
  uint64_t v18 = sub_2545270F0();
  uint64_t v19 = (uint64_t *)&v14[OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_error];
  *uint64_t v19 = v18;
  v19[1] = v20;

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  v23.receiver = v14;
  v23.super_class = ObjectType;
  id v21 = objc_msgSendSuper2(&v23, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return v21;
}

uint64_t sub_254513784()
{
  return 2;
}

uint64_t sub_25451378C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x676E696C706D6173 && a2 == 0xE800000000000000;
  if (v3 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7341656C69626F6DLL && a2 == 0xEB00000000746573)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2545279E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_254513888(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x7079547465737361 && a2 == 0xE900000000000065;
  if (v3 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6570537465737361 && a2 == 0xEE00726569666963)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2545279E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

id sub_254513994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = (char *)objc_allocWithZone(v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, a4);
  return sub_25451355C((uint64_t)v11, a2, v13, a4, a5);
}

uint64_t sub_254513A88()
{
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return MEMORY[0x270FA0238](v0, 64, 7);
}

unint64_t sub_254513AD0()
{
  unint64_t result = qword_269DF4B70;
  if (!qword_269DF4B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4B70);
  }
  return result;
}

unint64_t sub_254513B24(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_254513B54();
  unint64_t result = sub_254513BA8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_254513B54()
{
  unint64_t result = qword_269DF4B80;
  if (!qword_269DF4B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4B80);
  }
  return result;
}

unint64_t sub_254513BA8()
{
  unint64_t result = qword_269DF4B88;
  if (!qword_269DF4B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4B88);
  }
  return result;
}

unint64_t sub_254513C00()
{
  unint64_t result = qword_269DF4B90;
  if (!qword_269DF4B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4B90);
  }
  return result;
}

uint64_t sub_254513C54()
{
  return sub_25448FFD4(&qword_269DF4B98, &qword_269DF4BA0);
}

unint64_t sub_254513C94()
{
  unint64_t result = qword_269DF4BA8;
  if (!qword_269DF4BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4BA8);
  }
  return result;
}

uint64_t sub_254513CE8()
{
  return sub_25448FFD4(&qword_269DF4BB0, (uint64_t *)&unk_269DF4BB8);
}

uint64_t sub_254513D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_254513D2C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_254513DC8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80);
  if (v7 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((v7 + 48) & (unint64_t)~v7) + *(void *)(v6 + 64) > 0x18)
  {
    uint64_t v10 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v10 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v11 = a2[3];
    if (v11)
    {
      v4[2] = a2[2];
      v4[3] = v11;
      uint64_t v12 = a2[5];
      v4[4] = a2[4];
      v4[5] = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v13 = *((_OWORD *)a2 + 2);
      *((_OWORD *)v4 + 1) = *((_OWORD *)a2 + 1);
      *((_OWORD *)v4 + 2) = v13;
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(((unint64_t)v4 + v7 + 48) & ~v7, ((unint64_t)a2 + v7 + 48) & ~v7, v5);
  }
  return v4;
}

uint64_t sub_254513F14(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

uint64_t sub_254513F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 24);
  if (v6)
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v8;
  }
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 16))((*(unsigned __int8 *)(v9 + 80) + 48 + a1) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), (*(unsigned __int8 *)(v9 + 80) + 48 + a2) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

uint64_t sub_254514054(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = (_OWORD *)(a1 + 16);
  long long v8 = a2 + 2;
  uint64_t v9 = a2[3];
  if (*(void *)(a1 + 24))
  {
    if (v9)
    {
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 32) = a2[4];
      *(void *)(a1 + 40) = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_25451418C(a1 + 16);
      long long v10 = v8[1];
      _OWORD *v7 = *v8;
      v7[1] = v10;
    }
  }
  else if (v9)
  {
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v11 = *((_OWORD *)a2 + 2);
    _OWORD *v7 = *v8;
    *(_OWORD *)(a1 + 32) = v11;
  }
  uint64_t v12 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v12 + 24))((*(unsigned __int8 *)(v12 + 80) + 48 + a1) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  return a1;
}

uint64_t sub_25451418C(uint64_t a1)
{
  return a1;
}

_OWORD *sub_2545141C0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v5 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a1;
}

uint64_t sub_254514238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = (_OWORD *)(a1 + 16);
  uint64_t v7 = (_OWORD *)(a2 + 16);
  if (!*(void *)(a1 + 24)) {
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(a2 + 24);
  if (!v8)
  {
    sub_25451418C((uint64_t)v6);
LABEL_5:
    long long v10 = v7[1];
    *uint64_t v6 = *v7;
    v6[1] = v10;
    goto LABEL_6;
  }
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v9;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v11 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v11 + 40))((*(unsigned __int8 *)(v11 + 80) + 48 + a1) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80), (*(unsigned __int8 *)(v11 + 80) + 48 + a2) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  return a1;
}

uint64_t sub_254514310(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFE) {
    unsigned int v7 = 2147483646;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 48) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if (v5 > 0x7FFFFFFE) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 48) & ~v6);
      }
      unint64_t v15 = *((void *)a1 + 3);
      if (v15 >= 0xFFFFFFFF) {
        LODWORD(v15) = -1;
      }
      int v16 = v15 - 1;
      if (v16 < 0) {
        int v16 = -1;
      }
      return (v16 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_2545144C4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 48) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x254514744);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 > 0x7FFFFFFE)
        {
          unint64_t v18 = (unint64_t)&a1[v9 + 48] & ~v9;
          uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else if (a2 > 0x7FFFFFFE)
        {
          *((void *)a1 + 5) = 0;
          *(_OWORD *)(a1 + 24) = 0u;
          *(_OWORD *)(a1 + 8) = 0u;
          *(void *)a1 = a2 - 0x7FFFFFFF;
        }
        else
        {
          *((void *)a1 + 3) = a2;
        }
      }
      return;
  }
}

uint64_t destroy for MLHostSystemParameters(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for MLHostSystemParameters(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v3;
    uint64_t v4 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v5;
  }
  return a1;
}

uint64_t assignWithCopy for MLHostSystemParameters(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  long long v5 = (_OWORD *)(a1 + 16);
  uint64_t v6 = a2 + 2;
  uint64_t v7 = a2[3];
  if (*(void *)(a1 + 24))
  {
    if (v7)
    {
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 32) = a2[4];
      *(void *)(a1 + 40) = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_25451418C(a1 + 16);
      long long v8 = v6[1];
      _OWORD *v5 = *v6;
      v5[1] = v8;
    }
  }
  else if (v7)
  {
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *((_OWORD *)a2 + 2);
    _OWORD *v5 = *v6;
    *(_OWORD *)(a1 + 32) = v9;
  }
  return a1;
}

uint64_t assignWithTake for MLHostSystemParameters(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = (_OWORD *)(a1 + 16);
  uint64_t v4 = (_OWORD *)(a2 + 16);
  if (!*(void *)(a1 + 24)) {
    goto LABEL_5;
  }
  uint64_t v6 = *(void *)(a2 + 24);
  if (!v6)
  {
    sub_25451418C((uint64_t)v3);
LABEL_5:
    long long v8 = v4[1];
    *uint64_t v3 = *v4;
    v3[1] = v8;
    return a1;
  }
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MLHostSystemParameters(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MLHostSystemParameters(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MLHostSystemParameters()
{
  return &type metadata for MLHostSystemParameters;
}

ValueMetadata *type metadata accessor for MLHostAssetParameters()
{
  return &type metadata for MLHostAssetParameters;
}

ValueMetadata *type metadata accessor for MLHostEmptyParameters()
{
  return &type metadata for MLHostEmptyParameters;
}

unsigned char *storeEnumTagSinglePayload for MLHostCommonError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254514B54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MLHostCommonError()
{
  return &type metadata for MLHostCommonError;
}

uint64_t type metadata accessor for MLHostExtensionContext()
{
  return self;
}

uint64_t method lookup function for MLHostExtensionContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MLHostExtensionContext);
}

uint64_t dispatch thunk of MLHostExtensionContext.__allocating_init(taskId:taskName:taskFolder:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of MLHostExtensionContext.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

ValueMetadata *type metadata accessor for MLHostResultStatus()
{
  return &type metadata for MLHostResultStatus;
}

ValueMetadata *type metadata accessor for MLHostResultPolicy()
{
  return &type metadata for MLHostResultPolicy;
}

uint64_t type metadata accessor for MLHostResult()
{
  return self;
}

uint64_t method lookup function for MLHostResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MLHostResult);
}

uint64_t dispatch thunk of MLHostResult.__allocating_init(status:policy:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of MLHostResult.__allocating_init(error:policy:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of MLHostResult.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

ValueMetadata *type metadata accessor for MLHostEmptyParameters.CodingKeys()
{
  return &type metadata for MLHostEmptyParameters.CodingKeys;
}

ValueMetadata *type metadata accessor for MLHostAssetParameters.CodingKeys()
{
  return &type metadata for MLHostAssetParameters.CodingKeys;
}

ValueMetadata *type metadata accessor for MLHostSystemParameters.CodingKeys()
{
  return &type metadata for MLHostSystemParameters.CodingKeys;
}

uint64_t sub_254514CBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

unsigned char *_s20LighthouseBackground21MLHostAssetParametersV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254514D90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_254514DB8()
{
  return swift_getWitnessTable();
}

unint64_t sub_254514DD8()
{
  unint64_t result = qword_269DF4CB0;
  if (!qword_269DF4CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4CB0);
  }
  return result;
}

unint64_t sub_254514E30()
{
  unint64_t result = qword_269DF4CB8;
  if (!qword_269DF4CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4CB8);
  }
  return result;
}

unint64_t sub_254514E88()
{
  unint64_t result = qword_269DF4CC0;
  if (!qword_269DF4CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4CC0);
  }
  return result;
}

unint64_t sub_254514EE0()
{
  unint64_t result = qword_269DF4CC8;
  if (!qword_269DF4CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4CC8);
  }
  return result;
}

unint64_t sub_254514F38()
{
  unint64_t result = qword_269DF4CD0;
  if (!qword_269DF4CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4CD0);
  }
  return result;
}

unint64_t sub_254514F90()
{
  unint64_t result = qword_269DF4CD8;
  if (!qword_269DF4CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4CD8);
  }
  return result;
}

unint64_t sub_254514FE8()
{
  unint64_t result = qword_269DF4CE0;
  if (!qword_269DF4CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4CE0);
  }
  return result;
}

unint64_t sub_254515040()
{
  unint64_t result = qword_269DF4CE8;
  if (!qword_269DF4CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4CE8);
  }
  return result;
}

uint64_t sub_254515094()
{
  return swift_getWitnessTable();
}

uint64_t sub_2545150B0()
{
  return swift_getWitnessTable();
}

uint64_t *__swift_allocate_boxed_opaque_existential_0Tm(uint64_t *a1)
{
  unint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_254515178()
{
  return MEMORY[0x270FA2498](sub_254515194, 0, 0);
}

uint64_t sub_254515194()
{
  unint64_t v1 = (objc_class *)type metadata accessor for MLHostResult();
  uint64_t v2 = (char *)objc_allocWithZone(v1);
  *(void *)&v2[OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_status] = 2;
  *(void *)&v2[OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_policy] = 0;
  int v3 = &v2[OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_error];
  *(void *)int v3 = 0;
  *((void *)v3 + 1) = 0;
  v0[1].receiver = v2;
  v0[1].super_class = v1;
  id v4 = objc_msgSendSuper2(v0 + 1, sel_init);
  super_class = (uint64_t (*)(id))v0->super_class;
  return super_class(v4);
}

uint64_t MLHostExtension.shouldRun(context:)()
{
  return MEMORY[0x270FA2498](sub_25451A1E4, 0, 0);
}

uint64_t sub_254515268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v13 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v13;
  *int v13 = v5;
  v13[1] = sub_2544D59D8;
  return MLHostExtension.loadConfig<A>(context:)(a1, a2, v11, a3, v12, a4, a5);
}

uint64_t MLHostExtension.loadConfig<A>(context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[8] = a6;
  v7[9] = a7;
  v7[6] = a2;
  v7[7] = a4;
  v7[5] = a1;
  uint64_t v8 = sub_254526AA0();
  v7[10] = v8;
  v7[11] = *(void *)(v8 - 8);
  v7[12] = swift_task_alloc();
  uint64_t v9 = sub_254526AB0();
  v7[13] = v9;
  v7[14] = *(void *)(v9 - 8);
  v7[15] = swift_task_alloc();
  uint64_t v10 = sub_254526C10();
  v7[16] = v10;
  v7[17] = *(void *)(v10 - 8);
  v7[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(qword_26B2671B8);
  v7[19] = swift_task_alloc();
  uint64_t v11 = sub_254526C60();
  v7[20] = v11;
  v7[21] = *(void *)(v11 - 8);
  v7[22] = swift_task_alloc();
  v7[23] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25451554C, 0, 0);
}

uint64_t sub_25451554C()
{
  if (!*(void *)(v0[6] + OBJC_IVAR____TtC20LighthouseBackground22MLHostExtensionContext_taskFolder + 8))
  {
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_254526E00();
    __swift_project_value_buffer(v27, (uint64_t)qword_26B267340);
    uint64_t v28 = sub_254526DE0();
    os_log_type_t v29 = sub_254527420();
    if (!os_log_type_enabled(v28, v29)) {
      goto LABEL_18;
    }
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    uint64_t v31 = "TaskFolder missing.";
    goto LABEL_17;
  }
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[21];
  uint64_t v38 = v0[23];
  uint64_t v39 = v0[20];
  uint64_t v3 = v0[19];
  uint64_t v4 = v0[18];
  uint64_t v5 = v0[17];
  uint64_t v6 = v0[16];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 56))(v3, 1, 1);
  uint64_t v7 = *MEMORY[0x263F06E50];
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 104);
  v8(v4, v7, v6);
  swift_bridgeObjectRetain();
  sub_254526C40();
  void v40[2] = 0x6574656D61726170;
  v40[3] = 0xEF6E6F736A2E7372;
  v8(v4, v7, v6);
  sub_25448D434();
  sub_254526C50();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v9(v1, v39);
  sub_254526C30();
  v9(v38, v39);
  uint64_t v10 = self;
  id v11 = objc_msgSend(v10, sel_defaultManager);
  uint64_t v12 = (void *)sub_254526FD0();
  unsigned __int8 v13 = objc_msgSend(v11, sel_fileExistsAtPath_, v12);

  if ((v13 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_254526E00();
    __swift_project_value_buffer(v32, (uint64_t)qword_26B267340);
    uint64_t v28 = sub_254526DE0();
    os_log_type_t v29 = sub_254527420();
    uint64_t v0 = v40;
    if (!os_log_type_enabled(v28, v29)) {
      goto LABEL_18;
    }
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    uint64_t v31 = "ParameterFile missing.";
    goto LABEL_17;
  }
  id v14 = objc_msgSend(v10, sel_defaultManager);
  uint64_t v15 = (void *)sub_254526FD0();
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(v14, sel_contentsAtPath_, v15);

  if (v16)
  {
    uint64_t v18 = v40[14];
    uint64_t v17 = v40[15];
    uint64_t v19 = v40[12];
    uint64_t v20 = v40[13];
    uint64_t v22 = v40[10];
    uint64_t v21 = v40[11];
    uint64_t v23 = sub_254526CC0();
    unint64_t v25 = v24;

    sub_254526B00();
    swift_allocObject();
    sub_254526AF0();
    (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v17, *MEMORY[0x263F060E0], v20);
    sub_254526AD0();
    (*(void (**)(uint64_t, void, uint64_t))(v21 + 104))(v19, *MEMORY[0x263F060C0], v22);
    sub_254526AC0();
    uint64_t v26 = type metadata accessor for MLHostParameters();
    swift_getWitnessTable();
    sub_254526AE0();
    (*(void (**)(void, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v40[5], 0, 1, v26);
    swift_release();
    sub_2544E848C(v23, v25);
    uint64_t v0 = v40;
    goto LABEL_19;
  }
  uint64_t v0 = v40;
  if (qword_26B267240 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_254526E00();
  __swift_project_value_buffer(v33, (uint64_t)qword_26B267340);
  uint64_t v28 = sub_254526DE0();
  os_log_type_t v29 = sub_254527420();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    uint64_t v31 = "ParameterFile invalid.";
LABEL_17:
    _os_log_impl(&dword_254486000, v28, v29, v31, v30, 2u);
    MEMORY[0x25A27C9E0](v30, -1, -1);
  }
LABEL_18:
  uint64_t v34 = v0[5];

  uint64_t v35 = type metadata accessor for MLHostParameters();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 1, 1, v35);
LABEL_19:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v36 = (uint64_t (*)(void))v0[1];
  return v36();
}

id MLHostExtension.configuration.getter@<X0>(void *a1@<X8>)
{
  id result = sub_254518FA4(v1);
  *a1 = result;
  return result;
}

uint64_t sub_254515E18(void *a1, uint64_t a2)
{
  objc_msgSend(a1, sel_setExportedObject_, a2);
  id v3 = objc_msgSend(self, sel_interfaceWithProtocol_, &unk_2703DF320);
  objc_msgSend(a1, sel_setExportedInterface_, v3);

  objc_msgSend(a1, sel_resume);
  return 1;
}

void sub_254515EA4(uint64_t a1, unint64_t a2)
{
  id v3 = v2;
  type metadata accessor for SandboxExtension();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = 0;
  *(unsigned char *)(v6 + 40) = 1;
  *(void *)(v6 + 16) = a1;
  uint64_t v7 = qword_26B267240;
  swift_bridgeObjectRetain();
  if (v7 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_254526E00();
  __swift_project_value_buffer(v8, (uint64_t)qword_26B267340);
  swift_retain_n();
  uint64_t v9 = sub_254526DE0();
  os_log_type_t v10 = sub_254527410();
  if (os_log_type_enabled(v9, v10))
  {
    id v11 = (uint8_t *)swift_slowAlloc();
    os_log_t logb = (os_log_t)a1;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v57 = v12;
    *(_DWORD *)id v11 = 136315138;
    swift_retain();
    unint64_t v13 = SandboxExtension.description.getter();
    unint64_t v51 = a2;
    id v14 = v3;
    unint64_t v16 = v15;
    swift_release();
    id v60 = (id)sub_254498B68(v13, v16, &v57);
    sub_254527500();
    swift_release_n();
    id v3 = v14;
    a2 = v51;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_254486000, v9, v10, "Processing sandbox extension: %s", v11, 0xCu);
    swift_arrayDestroy();
    uint64_t v17 = v12;
    a1 = (uint64_t)logb;
    MEMORY[0x25A27C9E0](v17, -1, -1);
    MEMORY[0x25A27C9E0](v11, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  SandboxExtension.consume()();
  if (v18)
  {
    id v60 = v18;
    id v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3870);
    if (!swift_dynamicCast())
    {
LABEL_10:

      swift_bridgeObjectRetain_n();
      uint64_t v23 = sub_254526DE0();
      os_log_type_t v24 = sub_254527420();
      os_log_t log = v23;
      if (os_log_type_enabled(v23, v24))
      {
        unint64_t v25 = (uint8_t *)swift_slowAlloc();
        uint64_t v52 = swift_slowAlloc();
        uint64_t v57 = v52;
        *(_DWORD *)unint64_t v25 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v27 = sub_254521DB0(16, a1, a2, v26);
        uint64_t v29 = v28;
        uint64_t v31 = v30;
        uint64_t v33 = v32;
        swift_bridgeObjectRelease();
        uint64_t v34 = MEMORY[0x25A27B820](v27, v29, v31, v33);
        unint64_t v36 = v35;
        swift_bridgeObjectRelease();
        id v60 = (id)sub_254498B68(v34, v36, &v57);
        sub_254527500();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_254486000, log, v24, "Failed at consuming sandbox extension for token: %s", v25, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x25A27C9E0](v52, -1, -1);
        MEMORY[0x25A27C9E0](v25, -1, -1);

        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_release();
      }
      return;
    }
    uint64_t v21 = v57;
    uint64_t v20 = v58;
    uint64_t v22 = v59;
    if ((unint64_t)(v59 - 1) < 2)
    {
      sub_25451A1C0(v57, v58, v59);
      goto LABEL_10;
    }

    swift_bridgeObjectRetain();
    uint64_t v46 = sub_254526DE0();
    os_log_type_t v47 = sub_254527420();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = swift_slowAlloc();
      os_log_t loga = (os_log_t)swift_slowAlloc();
      os_log_t v56 = loga;
      *(_DWORD *)uint64_t v48 = 67109378;
      sub_254527500();
      *(_WORD *)(v48 + 8) = 2080;
      if (v22) {
        uint64_t v49 = v20;
      }
      else {
        uint64_t v49 = 0;
      }
      if (v22) {
        unint64_t v50 = v22;
      }
      else {
        unint64_t v50 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      sub_254498B68(v49, v50, (uint64_t *)&v56);
      sub_254527500();
      swift_bridgeObjectRelease();
      sub_25451A1C0(v21, v20, v22);
      sub_25451A1C0(v21, v20, v22);
      _os_log_impl(&dword_254486000, v46, v47, "Failed at consuming sandbox extension: %d %s", (uint8_t *)v48, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x25A27C9E0](loga, -1, -1);
      MEMORY[0x25A27C9E0](v48, -1, -1);
      swift_release();
    }
    else
    {
      swift_release();
      sub_25451A1C0(v21, v20, v22);
      sub_25451A1C0(v21, v20, v22);
    }
  }
  else
  {
    uint64_t v37 = (void *)((char *)v3 + *(void *)((*MEMORY[0x263F8EED0] & *v3) + 0x68));
    swift_beginAccess();
    uint64_t v38 = swift_retain();
    MEMORY[0x25A27B960](v38);
    if (*(void *)((*v37 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v37 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_254527200();
    }
    sub_254527240();
    sub_2545271E0();
    swift_endAccess();
    swift_retain_n();
    uint64_t v39 = sub_254526DE0();
    os_log_type_t v40 = sub_254527410();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      uint64_t v57 = v42;
      *(_DWORD *)uint64_t v41 = 136315138;
      swift_retain();
      unint64_t v43 = SandboxExtension.description.getter();
      unint64_t v45 = v44;
      swift_release();
      id v60 = (id)sub_254498B68(v43, v45, &v57);
      sub_254527500();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_254486000, v39, v40, "Consumed sandbox extension: %s", v41, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A27C9E0](v42, -1, -1);
      MEMORY[0x25A27C9E0](v41, -1, -1);
      swift_release();
    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t sub_25451665C(void *a1)
{
  uint64_t v2 = sub_254526FE0();
  unint64_t v4 = v3;
  id v5 = a1;
  sub_254515EA4(v2, v4);

  return swift_bridgeObjectRelease();
}

uint64_t sub_2545166C4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[18] = a6;
  v7[19] = a7;
  v7[16] = a4;
  v7[17] = a5;
  v7[20] = *MEMORY[0x263F8EED0] & *a4;
  os_log_type_t v10 = (void *)swift_task_alloc();
  v7[21] = v10;
  *os_log_type_t v10 = v7;
  v10[1] = sub_2545167B4;
  return sub_254517910((uint64_t)(v7 + 2), a4, a5);
}

uint64_t sub_2545167B4()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2545168B0, 0, 0);
}

uint64_t sub_2545168B0()
{
  *(void *)(v0 + 176) = *(void *)(v0 + 16);
  *(unsigned char *)(v0 + 265) = *(unsigned char *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  *(void *)(v0 + 184) = v2;
  *(void *)(v0 + 192) = v1;
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 56);
  *(void *)(v0 + 200) = v3;
  *(void *)(v0 + 208) = v4;
  if (v1)
  {
    sub_25450FC68(v2, v1);
    unint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269DF3830
                                                                              + dword_269DF3830);
    id v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 216) = v5;
    void *v5 = v0;
    v5[1] = sub_254516AB8;
    uint64_t v6 = *(void *)(v0 + 136);
    return v15(v6, v2, v1, v3, v4);
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 160);
    uint64_t v9 = *(void *)(v8 + 88);
    *(void *)(v0 + 232) = v9;
    os_log_type_t v10 = *(int **)(v9 + 16);
    uint64_t v11 = *(void *)(v8 + 80);
    *(void *)(v0 + 240) = v11;
    id v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 248) = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_2545172F4;
    uint64_t v13 = *(void *)(v0 + 136);
    return v14(v13, v11, v9);
  }
}

uint64_t sub_254516AB8(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 224) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v4 + 192);
  uint64_t v6 = *(void *)(v4 + 184);
  if (v1)
  {
    sub_254510828(v6, v5);
    uint64_t v7 = sub_254516EBC;
  }
  else
  {
    *(unsigned char *)(v4 + 266) = a1 & 1;
    sub_254510828(v6, v5);
    uint64_t v7 = sub_254516C40;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_254516C40()
{
  if (*(unsigned char *)(v0 + 266))
  {
    uint64_t v1 = *(void *)(v0 + 160);
    uint64_t v2 = *(void *)(v1 + 88);
    *(void *)(v0 + 232) = v2;
    uint64_t v3 = *(int **)(v2 + 16);
    uint64_t v4 = *(void *)(v1 + 80);
    *(void *)(v0 + 240) = v4;
    uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v3 + *v3);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 248) = v5;
    void *v5 = v0;
    v5[1] = sub_2545172F4;
    uint64_t v6 = *(void *)(v0 + 136);
    return v18(v6, v4, v2);
  }
  else
  {
    sub_254510828(*(void *)(v0 + 184), *(void *)(v0 + 192));
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_254526E00();
    __swift_project_value_buffer(v8, (uint64_t)qword_26B267340);
    uint64_t v9 = sub_254526DE0();
    os_log_type_t v10 = sub_254527400();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_254486000, v9, v10, "MobileAsset not available. Rescheduling.", v11, 2u);
      MEMORY[0x25A27C9E0](v11, -1, -1);
    }
    uint64_t v12 = *(void *)(v0 + 152);
    uint64_t v14 = *(void *)(v0 + 136);
    uint64_t v13 = *(uint64_t (**)(uint64_t))(v0 + 144);

    unint64_t v15 = (char *)objc_allocWithZone((Class)type metadata accessor for MLHostResult());
    id v16 = sub_254518C60(1, 1, v15);
    sub_25451947C((uint64_t)v16, v14, v13, v12);

    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
}

uint64_t sub_254516EBC()
{
  uint64_t v1 = *(void **)(v0 + 224);
  sub_254510828(*(void *)(v0 + 184), *(void *)(v0 + 192));
  *(void *)(v0 + 104) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3870);
  if (swift_dynamicCast())
  {

    char v3 = *(unsigned char *)(v0 + 264);
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_254526E00();
    __swift_project_value_buffer(v4, (uint64_t)qword_26B267340);
    uint64_t v5 = sub_254526DE0();
    os_log_type_t v6 = sub_254527420();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 138412290;
      sub_2544B38D8();
      swift_allocError();
      *uint64_t v9 = v3;
      uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 120) = v10;
      sub_254527500();
      *uint64_t v8 = v10;
      _os_log_impl(&dword_254486000, v5, v6, "Got MLHostError while accessing MAAutoAsset: %@", v7, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      swift_arrayDestroy();
      MEMORY[0x25A27C9E0](v8, -1, -1);
      MEMORY[0x25A27C9E0](v7, -1, -1);
    }
    uint64_t v11 = *(void *)(v0 + 152);
    uint64_t v13 = *(void *)(v0 + 136);
    uint64_t v12 = *(uint64_t (**)(uint64_t))(v0 + 144);

    uint64_t v14 = (char *)objc_allocWithZone((Class)type metadata accessor for MLHostResult());
    id v15 = sub_254518A20(v3, 1, v14);
    sub_25451947C((uint64_t)v15, v13, v12, v11);

    id v16 = *(void **)(v0 + 104);
  }
  else
  {

    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v17 = *(void **)(v0 + 224);
    uint64_t v18 = sub_254526E00();
    __swift_project_value_buffer(v18, (uint64_t)qword_26B267340);
    id v19 = v17;
    id v20 = v17;
    uint64_t v21 = sub_254526DE0();
    os_log_type_t v22 = sub_254527420();
    BOOL v23 = os_log_type_enabled(v21, v22);
    os_log_type_t v24 = *(void **)(v0 + 224);
    if (v23)
    {
      unint64_t v25 = (uint8_t *)swift_slowAlloc();
      unint64_t v26 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v25 = 138412290;
      id v27 = v24;
      uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 112) = v28;
      sub_254527500();
      void *v26 = v28;

      _os_log_impl(&dword_254486000, v21, v22, "Got unexpected non-MLHostError while accessing MAAutoAsset: %@", v25, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DF48F0);
      swift_arrayDestroy();
      MEMORY[0x25A27C9E0](v26, -1, -1);
      MEMORY[0x25A27C9E0](v25, -1, -1);
    }
    else
    {
    }
    uint64_t v29 = *(void **)(v0 + 224);
    uint64_t v30 = *(void *)(v0 + 152);
    uint64_t v32 = *(void *)(v0 + 136);
    uint64_t v31 = *(uint64_t (**)(uint64_t))(v0 + 144);

    uint64_t v33 = (char *)objc_allocWithZone((Class)type metadata accessor for MLHostResult());
    id v34 = sub_254518C60(2, 1, v33);
    sub_25451947C((uint64_t)v34, v32, v31, v30);

    id v16 = v29;
  }

  unint64_t v35 = *(uint64_t (**)(void))(v0 + 8);
  return v35();
}

uint64_t sub_2545172F4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 256) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2545173F4, 0, 0);
}

uint64_t sub_2545173F4()
{
  uint64_t v44 = v0;
  uint64_t v1 = *(void *)(*(void *)(v0 + 256) + OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_policy);
  sub_254510828(*(void *)(v0 + 184), *(void *)(v0 + 192));
  if (v1)
  {
    if (qword_26B267240 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_254526E00();
    __swift_project_value_buffer(v2, (uint64_t)qword_26B267340);
    uint64_t v3 = sub_254526DE0();
    os_log_type_t v4 = sub_254527400();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_254486000, v3, v4, "Extension indicated shouldRun() = false.", v5, 2u);
      MEMORY[0x25A27C9E0](v5, -1, -1);
    }
    os_log_type_t v6 = *(void **)(v0 + 256);
    uint64_t v8 = *(uint64_t (**)(uint64_t))(v0 + 144);
    uint64_t v7 = *(void *)(v0 + 152);
    uint64_t v9 = *(void *)(v0 + 136);

    uint64_t v10 = (uint64_t)v6;
    uint64_t v11 = v9;
    uint64_t v12 = v8;
    uint64_t v13 = v7;
    goto LABEL_19;
  }
  if (*(unsigned char *)(v0 + 265))
  {
LABEL_18:
    os_log_type_t v6 = *(void **)(v0 + 256);
    uint64_t v12 = *(uint64_t (**)(uint64_t))(v0 + 144);
    uint64_t v13 = *(void *)(v0 + 152);
    uint64_t v11 = *(void *)(v0 + 136);
    uint64_t v10 = (uint64_t)v6;
LABEL_19:
    sub_25451947C(v10, v11, v12, v13);
    goto LABEL_20;
  }
  if (qword_26B267240 != -1) {
    swift_once();
  }
  uint64_t v14 = *(void **)(v0 + 136);
  uint64_t v15 = sub_254526E00();
  __swift_project_value_buffer(v15, (uint64_t)qword_26B267340);
  id v16 = v14;
  uint64_t v17 = sub_254526DE0();
  os_log_type_t v18 = sub_254527400();
  BOOL v19 = os_log_type_enabled(v17, v18);
  id v20 = *(char **)(v0 + 136);
  if (v19)
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v43 = v22;
    *(_DWORD *)uint64_t v21 = 136315138;
    uint64_t v24 = *(void *)&v20[OBJC_IVAR____TtC20LighthouseBackground22MLHostExtensionContext_taskId];
    unint64_t v23 = *(void *)&v20[OBJC_IVAR____TtC20LighthouseBackground22MLHostExtensionContext_taskId + 8];
    swift_bridgeObjectRetain();
    *(void *)(v0 + 96) = sub_254498B68(v24, v23, &v43);
    sub_254527500();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_254486000, v17, v18, "Evaluating system sampling condition for task: %s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A27C9E0](v22, -1, -1);
    MEMORY[0x25A27C9E0](v21, -1, -1);
  }
  else
  {
  }
  unint64_t v25 = sub_254518994(0x20000000000001uLL);
  double v26 = *(double *)(v0 + 176);
  if (v25 == 0x20000000000000)
  {
    double v27 = 1.0;
    if (v26 >= 1.0)
    {
LABEL_15:
      uint64_t v28 = sub_254526DE0();
      os_log_type_t v29 = sub_254527400();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v30 = 134217984;
        *(double *)(v0 + 80) = v27;
        sub_254527500();
        _os_log_impl(&dword_254486000, v28, v29, "Device has been selected for execution this time. Executing. Score: %f", v30, 0xCu);
        MEMORY[0x25A27C9E0](v30, -1, -1);
      }

      goto LABEL_18;
    }
  }
  else
  {
    double v27 = (double)v25 * 1.11022302e-16 + 0.0;
    if (v26 >= v27) {
      goto LABEL_15;
    }
  }
  uint64_t v33 = sub_254526DE0();
  os_log_type_t v34 = sub_254527400();
  if (os_log_type_enabled(v33, v34))
  {
    unint64_t v35 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v35 = 134217984;
    *(double *)(v0 + 88) = v27;
    sub_254527500();
    _os_log_impl(&dword_254486000, v33, v34, "Device has not been selected for execution this time. Rescheduling. Score: %f", v35, 0xCu);
    MEMORY[0x25A27C9E0](v35, -1, -1);
  }
  os_log_type_t v6 = *(void **)(v0 + 256);
  uint64_t v37 = *(uint64_t (**)(uint64_t))(v0 + 144);
  uint64_t v36 = *(void *)(v0 + 152);
  uint64_t v38 = *(void *)(v0 + 136);

  uint64_t v39 = (objc_class *)type metadata accessor for MLHostResult();
  os_log_type_t v40 = (char *)objc_allocWithZone(v39);
  *(void *)&v40[OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_status] = 2;
  *(void *)&v40[OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_policy] = 1;
  uint64_t v41 = &v40[OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_error];
  *(void *)uint64_t v41 = 0;
  *((void *)v41 + 1) = 0;
  *(void *)(v0 + 64) = v40;
  *(void *)(v0 + 72) = v39;
  id v42 = objc_msgSendSuper2((objc_super *)(v0 + 64), sel_init);
  sub_25451947C((uint64_t)v42, v38, v37, v36);

LABEL_20:
  uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_254517910(uint64_t a1, void *a2, uint64_t a3)
{
  *(void *)(v3 + 64) = a1;
  uint64_t v5 = *(void *)((*MEMORY[0x263F8EED0] & *a2) + 0x58);
  uint64_t v6 = *(void *)((*MEMORY[0x263F8EED0] & *a2) + 0x50);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, unint64_t, uint64_t, uint64_t))(*(void *)(v5 + 32) + **(int **)(v5 + 32));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 72) = v7;
  unint64_t v8 = sub_25451A118();
  unint64_t v9 = sub_25451A16C();
  void *v7 = v3;
  v7[1] = sub_254517A9C;
  return v11(v3 + 16, a3, &type metadata for MLHostEmptyParameters, v8, v9, v6, v5);
}

uint64_t sub_254517A9C()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_254517B98, 0, 0);
}

uint64_t sub_254517B98()
{
  uint64_t v1 = *(void *)(v0 + 40);
  if (v1 == 1)
  {
    uint64_t v2 = 0;
    uint64_t v3 = 0;
    uint64_t v1 = 0;
    long long v4 = 0uLL;
    char v5 = 1;
  }
  else
  {
    long long v4 = *(_OWORD *)(v0 + 48);
    uint64_t v3 = *(void *)(v0 + 32);
    uint64_t v2 = *(void *)(v0 + 16);
    char v5 = *(unsigned char *)(v0 + 24) & 1;
  }
  uint64_t v6 = *(void *)(v0 + 64);
  *(void *)uint64_t v6 = v2;
  *(unsigned char *)(v6 + 8) = v5;
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v1;
  *(_OWORD *)(v6 + 32) = v4;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_254517BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_254527310();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_254527300();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_2544D7974(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2545272C0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_254517D9C(void *a1, int a2, void *a3, void *a4)
{
  return sub_25451823C(a1, a2, a3, a4, (uint64_t)&unk_2703DB380, (uint64_t)sub_25451A1D8, (uint64_t)&unk_2703DB3A8, (uint64_t)&unk_269DF4DB0);
}

uint64_t sub_254517DD8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_26B267250);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_254527310();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = 0;
  _OWORD v14[3] = 0;
  v14[4] = v5;
  v14[5] = a1;
  v14[6] = a2;
  v14[7] = a3;
  uint64_t v15 = v5;
  id v16 = a1;
  swift_retain();
  *(void *)((char *)v15 + *(void *)((*MEMORY[0x263F8EED0] & *v15) + 0x70)) = sub_254517BF8((uint64_t)v12, a5, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_254517F24(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[3] = a6;
  v7[4] = a7;
  v7[2] = a5;
  uint64_t v9 = *MEMORY[0x263F8EED0] & *a4;
  uint64_t v10 = *(void *)(v9 + 0x58);
  v7[5] = v10;
  uint64_t v11 = *(int **)(v10 + 24);
  uint64_t v12 = *(void *)(v9 + 80);
  v7[6] = v12;
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v11 + *v11);
  uint64_t v13 = (void *)swift_task_alloc();
  v7[7] = v13;
  *uint64_t v13 = v7;
  v13[1] = sub_25451808C;
  return v15(a5, v12, v10);
}

uint64_t sub_25451808C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 64) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25451818C, 0, 0);
}

uint64_t sub_25451818C()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_25451947C((uint64_t)v1, *(void *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24), *(void *)(v0 + 32));

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_254518200(void *a1, int a2, void *a3, void *a4)
{
  return sub_25451823C(a1, a2, a3, a4, (uint64_t)&unk_2703DB2B8, (uint64_t)sub_254519A80, (uint64_t)&unk_2703DB2E0, (uint64_t)&unk_269DF4D90);
}

uint64_t sub_25451823C(void *a1, int a2, void *a3, void *aBlock, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = _Block_copy(aBlock);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  id v15 = a3;
  id v16 = a1;
  sub_254517DD8(v15, a6, v14, a7, a8);

  return swift_release();
}

void sub_2545182F4()
{
  uint64_t v1 = v0;
  if (qword_26B267240 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_254526E00();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B267340);
  uint64_t v3 = sub_254526DE0();
  os_log_type_t v4 = sub_254527400();
  if (os_log_type_enabled(v3, v4))
  {
    char v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v5 = 0;
    _os_log_impl(&dword_254486000, v3, v4, "Extension asked to stop!", v5, 2u);
    MEMORY[0x25A27C9E0](v5, -1, -1);
  }

  if (*(void *)((char *)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x70)))
  {
    swift_retain();
    sub_254527320();
    swift_release();
  }
}

void sub_254518448(void *a1)
{
  id v1 = a1;
  sub_2545182F4();
}

unint64_t TaskErrorEvent.coreAnalyticsDictionary.getter()
{
  unint64_t v0 = sub_2544A57CC(MEMORY[0x263F8EE78]);
  type metadata accessor for TaskErrorEvent(0);
  sub_2544FDA20();
  uint64_t v1 = sub_254526FD0();
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534(v1, 0x6D61745365746164, 0xE900000000000070, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_254526FD0();
  char v4 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534(v3, 0x656D614E6B736174, 0xE800000000000000, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_254526FD0();
  char v6 = swift_isUniquelyReferenced_nonNull_native();
  sub_2544BB534(v5, 0x73654D726F727265, 0xEC00000065676173, v6);
  swift_bridgeObjectRelease();
  return v0;
}

id sub_2545185F0(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_254519F08();
    char v4 = (void *)sub_254526EC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v4 = 0;
  }

  return v4;
}

void sub_25451867C()
{
}

uint64_t sub_2545186C0(char *a1)
{
  (*(void (**)(char *))(*(void *)(*(void *)((*MEMORY[0x263F8EED0] & *(void *)a1) + 0x50) - 8) + 8))(&a1[*(void *)((*MEMORY[0x263F8EED0] & *(void *)a1) + 0x60)]);
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_25451879C(void *a1)
{
  sub_254515E18(a1, *v1);
  return 1;
}

uint64_t sub_2545187C0(uint64_t a1, int *a2)
{
  char v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  char v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *char v4 = v2;
  v4[1] = sub_25451889C;
  return v6(a1);
}

uint64_t sub_25451889C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

unint64_t sub_254518994(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    unint64_t v3 = 0;
    MEMORY[0x25A27C9F0](&v3, 8);
    id result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      unint64_t v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          unint64_t v3 = 0;
          MEMORY[0x25A27C9F0](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_254518A20(char a1, uint64_t a2, char *a3)
{
  unint64_t v6 = 0xD000000000000014;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v21[3] = &type metadata for MLHostAssetError;
  v21[4] = sub_25451A070();
  *(void *)&a3[OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_status] = 0;
  LOBYTE(v21[0]) = a1;
  *(void *)&a3[OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_policy] = a2;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(v21, (uint64_t)&type metadata for MLHostAssetError);
  v20[3] = swift_getAssociatedTypeWitness();
  v20[4] = swift_getAssociatedConformanceWitness();
  boxed_opaque_existential_0Tunint64_t m = __swift_allocate_boxed_opaque_existential_0Tm(v20);
  if (*(unsigned char *)v8)
  {
    if (*(unsigned char *)v8 == 1)
    {
      unint64_t v6 = 0xD00000000000001ELL;
      uint64_t v10 = "failedToExpressInterestInAsset";
    }
    else
    {
      unint64_t v6 = 0xD000000000000023;
      uint64_t v10 = "failedToGetMAAutoAssetCurrentStatus";
    }
  }
  else
  {
    uint64_t v10 = "failedToGetAutoAsset";
  }
  *boxed_opaque_existential_0Tunint64_t m = v6;
  boxed_opaque_existential_0Tm[1] = (unint64_t)(v10 - 32) | 0x8000000000000000;
  MEMORY[0x270FA5388](boxed_opaque_existential_0Tm);
  (*(void (**)(char *))(v12 + 16))((char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = a3;
  uint64_t v14 = sub_2545270F0();
  id v15 = (uint64_t *)&v13[OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_error];
  *id v15 = v14;
  v15[1] = v16;

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  v19.receiver = v13;
  v19.super_class = ObjectType;
  id v17 = objc_msgSendSuper2(&v19, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return v17;
}

id sub_254518C60(char a1, uint64_t a2, char *a3)
{
  unint64_t v6 = 0xD000000000000011;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v21[3] = &type metadata for MLHostCommonError;
  v21[4] = sub_25451A0C4();
  *(void *)&a3[OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_status] = 0;
  LOBYTE(v21[0]) = a1;
  *(void *)&a3[OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_policy] = a2;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(v21, (uint64_t)&type metadata for MLHostCommonError);
  v20[3] = swift_getAssociatedTypeWitness();
  v20[4] = swift_getAssociatedConformanceWitness();
  boxed_opaque_existential_0Tunint64_t m = __swift_allocate_boxed_opaque_existential_0Tm(v20);
  if (*(unsigned char *)v8)
  {
    if (*(unsigned char *)v8 == 1)
    {
      unint64_t v6 = 0xD000000000000016;
      uint64_t v10 = "mobileAssetUnavailable";
    }
    else
    {
      uint64_t v10 = "mobileAssetFailed";
    }
  }
  else
  {
    unint64_t v6 = 0xD000000000000019;
    uint64_t v10 = "extensionInvocationFailed";
  }
  *boxed_opaque_existential_0Tunint64_t m = v6;
  boxed_opaque_existential_0Tm[1] = (unint64_t)(v10 - 32) | 0x8000000000000000;
  MEMORY[0x270FA5388](boxed_opaque_existential_0Tm);
  (*(void (**)(char *))(v12 + 16))((char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = a3;
  uint64_t v14 = sub_2545270F0();
  id v15 = (uint64_t *)&v13[OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_error];
  *id v15 = v14;
  v15[1] = v16;

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  v19.receiver = v13;
  v19.super_class = ObjectType;
  id v17 = objc_msgSendSuper2(&v19, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return v17;
}

id sub_254518EA0(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = (void *)MEMORY[0x263F8EED0];
  uint64_t v5 = *MEMORY[0x263F8EED0] & *(void *)v1;
  *(void *)&v1[*(void *)(v5 + 0x68)] = MEMORY[0x263F8EE78];
  *(void *)&v1[*(void *)((*v4 & *(void *)v1) + 0x70)] = 0;
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v5 + 80) - 8) + 16))(&v1[*(void *)((*v4 & *(void *)v1) + 0x60)], a1);
  v7.receiver = v1;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_init);
}

id sub_254518FA4(uint64_t a1)
{
  id v2 = objc_allocWithZone((Class)type metadata accessor for _MLHostExtensionConfiguration.ExportedObject());
  return sub_254518EA0(a1);
}

uint64_t dispatch thunk of MLHostExtension.shouldRun(context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 16) + **(int **)(a3 + 16));
  objc_super v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_25451A1DC;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of MLHostExtension.doWork(context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  objc_super v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_2544AFC7C;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of MLHostExtension.loadConfig<A>(context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 32)
                                                                                              + **(int **)(a7 + 32));
  id v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *id v15 = v7;
  v15[1] = sub_2544D7A5C;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_25451931C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for _MLHostExtensionConfiguration.ExportedObject()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2545193E0()
{
  type metadata accessor for _MLHostExtensionConfiguration();

  return swift_getWitnessTable();
}

uint64_t type metadata accessor for _MLHostExtensionConfiguration()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_254519440(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25451947C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v61 = a4;
  uint64_t v7 = (int *)type metadata accessor for TaskErrorEvent(0);
  uint64_t v59 = *((void *)v7 - 1);
  uint64_t v8 = *(void *)(v59 + 64);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v60 = (uint64_t)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v58 = (uint64_t)&v50 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (uint8_t **)((char *)&v50 - v12);
  uint64_t v14 = sub_254526D90();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v50 - v20;
  if (*(void *)(a1 + OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_status)) {
    return a3(a1);
  }
  uint64_t v23 = *(void *)(a1 + OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_error + 8);
  if (!v23) {
    return a3(a1);
  }
  uint64_t v55 = a1;
  uint64_t v57 = (void (*)(uint64_t))a3;
  uint64_t v51 = *(void *)(a1 + OBJC_IVAR____TtC20LighthouseBackground12MLHostResult_error);
  uint64_t v24 = v19;
  swift_bridgeObjectRetain();
  sub_254526D60();
  sub_254526CE0();
  uint64_t v52 = *(void (**)(char *, uint64_t))(v15 + 8);
  uint64_t v53 = v15 + 8;
  v52(v21, v24);
  sub_254526CD0();
  uint64_t v26 = *(void *)(a2 + OBJC_IVAR____TtC20LighthouseBackground22MLHostExtensionContext_taskId);
  uint64_t v25 = *(void *)(a2 + OBJC_IVAR____TtC20LighthouseBackground22MLHostExtensionContext_taskId + 8);
  double v27 = (char *)v13 + v7[5];
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  uint64_t v54 = v18;
  uint64_t v56 = v24;
  v28(v27, v18, v24);
  uint64_t v29 = *(void *)(a2 + OBJC_IVAR____TtC20LighthouseBackground22MLHostExtensionContext_taskName);
  uint64_t v30 = *(void *)(a2 + OBJC_IVAR____TtC20LighthouseBackground22MLHostExtensionContext_taskName + 8);
  *uint64_t v13 = v26;
  v13[1] = v25;
  uint64_t v31 = (void *)((char *)v13 + v7[6]);
  *uint64_t v31 = v29;
  v31[1] = v30;
  uint64_t v32 = (void *)((char *)v13 + v7[7]);
  *uint64_t v32 = v51;
  v32[1] = v23;
  uint64_t v33 = qword_26B267240;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v33 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_254526E00();
  __swift_project_value_buffer(v34, (uint64_t)qword_26B267340);
  uint64_t v35 = v58;
  sub_254519C5C((uint64_t)v13, v58);
  uint64_t v36 = sub_254526DE0();
  os_log_type_t v37 = sub_254527410();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = (uint8_t *)swift_slowAlloc();
    uint64_t v51 = swift_slowAlloc();
    aBlock[0] = v51;
    *(_DWORD *)uint64_t v38 = 136315138;
    unint64_t v50 = v38 + 4;
    TaskErrorEvent.coreAnalyticsDictionary.getter();
    sub_254519F08();
    uint64_t v39 = sub_254526EE0();
    unint64_t v41 = v40;
    swift_bridgeObjectRelease();
    uint64_t v62 = sub_254498B68(v39, v41, aBlock);
    sub_254527500();
    swift_bridgeObjectRelease();
    sub_254519CC0(v35);
    _os_log_impl(&dword_254486000, v36, v37, "Sending Error: %s", v38, 0xCu);
    uint64_t v42 = v51;
    swift_arrayDestroy();
    MEMORY[0x25A27C9E0](v42, -1, -1);
    MEMORY[0x25A27C9E0](v38, -1, -1);
  }
  else
  {
    sub_254519CC0(v35);
  }

  uint64_t v43 = v57;
  uint64_t v44 = v55;
  uint64_t v45 = (void *)sub_254526FD0();
  uint64_t v46 = v60;
  sub_254519C5C((uint64_t)v13, v60);
  unint64_t v47 = (*(unsigned __int8 *)(v59 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  uint64_t v48 = swift_allocObject();
  sub_254519E30(v46, v48 + v47);
  aBlock[4] = (uint64_t)sub_254519E94;
  aBlock[5] = v48;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_2545185F0;
  aBlock[3] = (uint64_t)&block_descriptor_5;
  uint64_t v49 = _Block_copy(aBlock);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v49);

  v43(v44);
  sub_254519CC0((uint64_t)v13);
  return ((uint64_t (*)(char *, uint64_t))v52)(v54, v56);
}

void sub_254519A18()
{
}

uint64_t sub_254519A48()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_254519A80()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_254519A98(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  unint64_t v6 = (void *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_2544D7A5C;
  return sub_254517F24(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_254519B6C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_254519BA4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_2544D59D8;
  unint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269DF4D98 + dword_269DF4D98);
  return v6(a1, v4);
}

uint64_t sub_254519C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TaskErrorEvent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_254519CC0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TaskErrorEvent(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_254519D1C()
{
  uint64_t v1 = (int *)(type metadata accessor for TaskErrorEvent(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + v1[7];
  uint64_t v8 = sub_254526D90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_254519E30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TaskErrorEvent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_254519E94()
{
  return TaskErrorEvent.coreAnalyticsDictionary.getter();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

unint64_t sub_254519F08()
{
  unint64_t result = qword_26B267080;
  if (!qword_26B267080)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B267080);
  }
  return result;
}

uint64_t objectdestroy_8Tm()
{
  swift_unknownObjectRelease();

  swift_release();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_254519F9C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (void *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_2544D7A5C;
  return sub_2545166C4(a1, v4, v5, v6, v7, v9, v8);
}

unint64_t sub_25451A070()
{
  unint64_t result = qword_269DF4DC0;
  if (!qword_269DF4DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4DC0);
  }
  return result;
}

unint64_t sub_25451A0C4()
{
  unint64_t result = qword_269DF4DC8;
  if (!qword_269DF4DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4DC8);
  }
  return result;
}

unint64_t sub_25451A118()
{
  unint64_t result = qword_26B267130[0];
  if (!qword_26B267130[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B267130);
  }
  return result;
}

unint64_t sub_25451A16C()
{
  unint64_t result = qword_26B267128;
  if (!qword_26B267128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B267128);
  }
  return result;
}

uint64_t sub_25451A1C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((unint64_t)(a3 - 1) >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25451A1E8()
{
  return sub_254527AB0();
}

uint64_t sub_25451A278()
{
  return sub_254527AB0();
}

uint64_t sub_25451A2E0()
{
  return sub_254527AB0();
}

uint64_t sub_25451A38C()
{
  return sub_254527AB0();
}

uint64_t sub_25451A3F8()
{
  return sub_254527AB0();
}

uint64_t sub_25451A464()
{
  return sub_254527AB0();
}

uint64_t sub_25451A578()
{
  return sub_254527AB0();
}

uint64_t sub_25451A614()
{
  return sub_254527AB0();
}

uint64_t sub_25451A680()
{
  return sub_254527AB0();
}

uint64_t sub_25451A6EC()
{
  return sub_254527AB0();
}

uint64_t sub_25451A758()
{
  return sub_254527AB0();
}

uint64_t sub_25451A7C4()
{
  return sub_254527AB0();
}

uint64_t sub_25451A830()
{
  return sub_254527AB0();
}

uint64_t sub_25451A89C()
{
  return sub_254527AB0();
}

uint64_t sub_25451A908()
{
  return sub_254527AB0();
}

uint64_t sub_25451A9B0()
{
  return sub_254527AB0();
}

uint64_t sub_25451AA1C()
{
  sub_254527060();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25451AA70()
{
  sub_254527060();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25451AAC4()
{
  sub_254527060();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25451AB3C()
{
  sub_254527060();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25451AB90()
{
  sub_254527060();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25451ACBC()
{
  sub_254527060();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25451AD10()
{
  sub_254527060();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25451AD64()
{
  sub_254527060();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25451ADB8()
{
  sub_254527060();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25451AEBC()
{
  sub_254527060();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25451AF10()
{
  sub_254527060();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25451AFA0()
{
  sub_254527060();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25451AFE8()
{
  sub_254527060();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25451B03C()
{
  sub_254527060();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25451B0D0()
{
  sub_254527060();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25451B154()
{
  return sub_254527AA0();
}

uint64_t sub_25451B188()
{
  sub_254527060();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25451B1DC()
{
  sub_254527060();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25451B2DC()
{
  sub_254527060();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25451B330()
{
  sub_254527060();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25451B384()
{
  sub_254527060();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25451B51C()
{
  return sub_254527AB0();
}

uint64_t sub_25451B584()
{
  return sub_254527AB0();
}

uint64_t sub_25451B5EC()
{
  return sub_254527AB0();
}

uint64_t sub_25451B6FC()
{
  return sub_254527AB0();
}

uint64_t sub_25451B764()
{
  return sub_254527AB0();
}

uint64_t sub_25451B7B4()
{
  return sub_254527AB0();
}

uint64_t sub_25451B84C()
{
  return sub_254527AB0();
}

uint64_t sub_25451B8F4()
{
  return sub_254527AB0();
}

uint64_t sub_25451B95C()
{
  return sub_254527AB0();
}

uint64_t sub_25451B9C0()
{
  return sub_254527AB0();
}

uint64_t sub_25451BA64()
{
  return sub_254527AB0();
}

uint64_t sub_25451BACC()
{
  return sub_254527AB0();
}

uint64_t sub_25451BBE8()
{
  return sub_254527AB0();
}

uint64_t sub_25451BC50()
{
  return sub_254527AB0();
}

uint64_t sub_25451BCB8()
{
  return sub_254527AB0();
}

uint64_t sub_25451BD20()
{
  return sub_254527AB0();
}

uint64_t sub_25451BE68()
{
  return sub_254527AB0();
}

uint64_t sub_25451BED0()
{
  return sub_254527AB0();
}

uint64_t sub_25451BF5C()
{
  return sub_254527AB0();
}

uint64_t sub_25451BFC4()
{
  return sub_254527AB0();
}

uint64_t currentDataVersion.getter()
{
  return 1;
}

LighthouseBackground::LHStreams_optional __swiftcall LHStreams.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_254527790();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static LHStreams.allCases.getter()
{
  return &unk_2703D61A0;
}

uint64_t LHStreams.rawValue.getter()
{
  return *(void *)&aTaskstattasker_0[8 * *v0];
}

uint64_t sub_25451C0C0(char *a1, char *a2)
{
  return sub_25449012C(*a1, *a2);
}

uint64_t sub_25451C0CC()
{
  return sub_25451A9B0();
}

uint64_t sub_25451C0D4()
{
  return sub_25451AA70();
}

uint64_t sub_25451C0DC()
{
  return sub_25451BF5C();
}

LighthouseBackground::LHStreams_optional sub_25451C0E4(Swift::String *a1)
{
  return LHStreams.init(rawValue:)(*a1);
}

uint64_t sub_25451C0F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = LHStreams.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_25451C118(void *a1@<X8>)
{
  *a1 = &unk_2703D5400;
}

uint64_t sub_25451C170()
{
  uint64_t v1 = (unsigned int *)(v0 + OBJC_IVAR____TtC20LighthouseBackground11LHStoreItem_dataVersion);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_25451C204(int a1)
{
  uint64_t v3 = (_DWORD *)(v1 + OBJC_IVAR____TtC20LighthouseBackground11LHStoreItem_dataVersion);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_25451C250())()
{
  return j__swift_endAccess;
}

double sub_25451C2AC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC20LighthouseBackground11LHStoreItem_messageTimestamp;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_25451C2F4(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC20LighthouseBackground11LHStoreItem_messageTimestamp);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_25451C348())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_25451C3A4()
{
  return sub_25451C48C(&OBJC_IVAR____TtC20LighthouseBackground11LHStoreItem_messageType);
}

uint64_t sub_25451C3B0(uint64_t a1, uint64_t a2)
{
  return sub_25451C4EC(a1, a2, &OBJC_IVAR____TtC20LighthouseBackground11LHStoreItem_messageType);
}

uint64_t (*sub_25451C3BC())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_25451C418(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v7 = (void *)(*a2 + *a5);
  swift_beginAccess();
  void *v7 = v6;
  v7[1] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25451C480()
{
  return sub_25451C48C(&OBJC_IVAR____TtC20LighthouseBackground11LHStoreItem_messagePayload);
}

uint64_t sub_25451C48C(void *a1)
{
  uint64_t v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess();
  uint64_t v3 = *v2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_25451C4E0(uint64_t a1, uint64_t a2)
{
  return sub_25451C4EC(a1, a2, &OBJC_IVAR____TtC20LighthouseBackground11LHStoreItem_messagePayload);
}

uint64_t sub_25451C4EC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (void *)(v3 + *a3);
  swift_beginAccess();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_25451C548())()
{
  return j_j__swift_endAccess;
}

id LHStoreItem.__allocating_init(dataVersion:messageTimestamp:messageType:messagePayload:)(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v13 = (char *)objc_allocWithZone(v6);
  *(_DWORD *)&v13[OBJC_IVAR____TtC20LighthouseBackground11LHStoreItem_dataVersion] = a1;
  *(double *)&v13[OBJC_IVAR____TtC20LighthouseBackground11LHStoreItem_messageTimestamp] = a6;
  uint64_t v14 = &v13[OBJC_IVAR____TtC20LighthouseBackground11LHStoreItem_messageType];
  *(void *)uint64_t v14 = a2;
  *((void *)v14 + 1) = a3;
  uint64_t v15 = &v13[OBJC_IVAR____TtC20LighthouseBackground11LHStoreItem_messagePayload];
  *(void *)uint64_t v15 = a4;
  *((void *)v15 + 1) = a5;
  v17.receiver = v13;
  v17.super_class = v6;
  return objc_msgSendSuper2(&v17, sel_init);
}

id LHStoreItem.init(dataVersion:messageTimestamp:messageType:messagePayload:)(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  *(_DWORD *)&v6[OBJC_IVAR____TtC20LighthouseBackground11LHStoreItem_dataVersion] = a1;
  *(double *)&v6[OBJC_IVAR____TtC20LighthouseBackground11LHStoreItem_messageTimestamp] = a6;
  uint64_t v7 = &v6[OBJC_IVAR____TtC20LighthouseBackground11LHStoreItem_messageType];
  *(void *)uint64_t v7 = a2;
  *((void *)v7 + 1) = a3;
  uint64_t v8 = &v6[OBJC_IVAR____TtC20LighthouseBackground11LHStoreItem_messagePayload];
  *(void *)uint64_t v8 = a4;
  *((void *)v8 + 1) = a5;
  v10.receiver = v6;
  v10.super_class = (Class)type metadata accessor for LHStoreItem();
  return objc_msgSendSuper2(&v10, sel_init);
}

uint64_t type metadata accessor for LHStoreItem()
{
  return self;
}

uint64_t static LHStoreItem.event(with:dataVersion:)(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = sub_254526AA0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_254526AB0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = 0;
  if (a3 == 1)
  {
    sub_254526B00();
    swift_allocObject();
    sub_254526AF0();
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F060E0], v8);
    sub_254526AD0();
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F060C0], v4);
    sub_254526AC0();
    sub_25451CBC0(&qword_26B267010);
    sub_254526AE0();
    swift_release();
    return v13[1];
  }
  return result;
}

uint64_t sub_25451C9A0()
{
  uint64_t v1 = sub_254526B10();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_254526B20();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_254526B70();
  swift_allocObject();
  sub_254526B60();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F06198], v5);
  sub_254526B40();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F06160], v1);
  sub_254526B30();
  uint64_t v12 = v0;
  type metadata accessor for LHStoreItem();
  sub_25451CBC0(&qword_26B267008);
  uint64_t v9 = sub_254526B50();
  swift_release();
  return v9;
}

uint64_t sub_25451CBC0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for LHStoreItem();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id LHStoreItem.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void LHStoreItem.init()()
{
}

unint64_t sub_25451CD18(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      return result;
    case 2:
      unint64_t result = 0x546567617373656DLL;
      break;
    case 3:
      unint64_t result = 0x506567617373656DLL;
      break;
    default:
      unint64_t result = 0x7372655661746164;
      break;
  }
  return result;
}

unint64_t sub_25451CDCC()
{
  return sub_25451CD18(*v0);
}

uint64_t sub_25451CDD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25451DE20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25451CDFC(uint64_t a1)
{
  unint64_t v2 = sub_25451D198();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25451CE38(uint64_t a1)
{
  unint64_t v2 = sub_25451D198();

  return MEMORY[0x270FA00B8](a1, v2);
}

id LHStoreItem.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LHStoreItem();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_25451CEFC(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B267070);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25451D198();
  sub_254527B00();
  swift_beginAccess();
  v8[64] = 0;
  sub_254527980();
  if (v1) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
  swift_beginAccess();
  v8[40] = 1;
  sub_254527950();
  swift_beginAccess();
  unsigned char v8[16] = 2;
  swift_bridgeObjectRetain();
  sub_254527930();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v8[15] = 3;
  swift_bridgeObjectRetain();
  sub_254527930();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  return swift_bridgeObjectRelease();
}

unint64_t sub_25451D198()
{
  unint64_t result = qword_26B266FE8;
  if (!qword_26B266FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B266FE8);
  }
  return result;
}

id LHStoreItem.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return LHStoreItem.init(from:)(a1);
}

id LHStoreItem.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B267060);
  uint64_t v21 = *(void *)(v4 - 8);
  uint64_t v22 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25451D198();
  uint64_t v8 = v1;
  id v9 = v7;
  sub_254527AF0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

    type metadata accessor for LHStoreItem();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v10 = v21;
    uint64_t v11 = v22;
    char v24 = 0;
    *(_DWORD *)&v8[OBJC_IVAR____TtC20LighthouseBackground11LHStoreItem_dataVersion] = sub_254527880();
    char v24 = 1;
    sub_254527850();
    *(void *)&v8[OBJC_IVAR____TtC20LighthouseBackground11LHStoreItem_messageTimestamp] = v12;
    char v24 = 2;
    uint64_t v13 = sub_254527830();
    uint64_t v15 = (uint64_t *)&v8[OBJC_IVAR____TtC20LighthouseBackground11LHStoreItem_messageType];
    *uint64_t v15 = v13;
    v15[1] = v16;
    char v24 = 3;
    uint64_t v17 = sub_254527830();
    uint64_t v18 = (uint64_t *)&v8[OBJC_IVAR____TtC20LighthouseBackground11LHStoreItem_messagePayload];
    *uint64_t v18 = v17;
    v18[1] = v19;

    uint64_t v20 = (objc_class *)type metadata accessor for LHStoreItem();
    v23.receiver = v8;
    v23.super_class = v20;
    id v9 = objc_msgSendSuper2(&v23, sel_init);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v9;
}

unint64_t sub_25451D4D0()
{
  unint64_t result = qword_269DF4DF8;
  if (!qword_269DF4DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4DF8);
  }
  return result;
}

unint64_t sub_25451D528()
{
  unint64_t result = qword_269DF4E00;
  if (!qword_269DF4E00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_269DF4E08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4E00);
  }
  return result;
}

id sub_25451D584@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v5 = objc_allocWithZone((Class)type metadata accessor for LHStoreItem());
  id result = LHStoreItem.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_25451D5D8(void *a1)
{
  return sub_25451CEFC(a1);
}

uint64_t sub_25451D5FC@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  id v3 = (_DWORD *)(*a1 + OBJC_IVAR____TtC20LighthouseBackground11LHStoreItem_dataVersion);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_25451D650(int *a1, void *a2)
{
  int v2 = *a1;
  id v3 = (_DWORD *)(*a2 + OBJC_IVAR____TtC20LighthouseBackground11LHStoreItem_dataVersion);
  uint64_t result = swift_beginAccess();
  *id v3 = v2;
  return result;
}

double sub_25451D6A0@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  id v3 = (double *)(*a1 + OBJC_IVAR____TtC20LighthouseBackground11LHStoreItem_messageTimestamp);
  swift_beginAccess();
  double result = *v3;
  *a2 = *(void *)v3;
  return result;
}

uint64_t sub_25451D6F4(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  id v3 = (void *)(*a2 + OBJC_IVAR____TtC20LighthouseBackground11LHStoreItem_messageTimestamp);
  uint64_t result = swift_beginAccess();
  *id v3 = v2;
  return result;
}

uint64_t sub_25451D74C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtC20LighthouseBackground11LHStoreItem_messageType, a2);
}

uint64_t sub_25451D758(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_25451C418(a1, a2, a3, a4, &OBJC_IVAR____TtC20LighthouseBackground11LHStoreItem_messageType);
}

uint64_t sub_25451D778@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtC20LighthouseBackground11LHStoreItem_messagePayload, a2);
}

uint64_t keypath_get_5Tm@<X0>(void *a1@<X0>, void *a2@<X3>, void *a3@<X8>)
{
  uint64_t v4 = (void *)(*a1 + *a2);
  swift_beginAccess();
  uint64_t v5 = v4[1];
  *a3 = *v4;
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25451D7D8(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_25451C418(a1, a2, a3, a4, &OBJC_IVAR____TtC20LighthouseBackground11LHStoreItem_messagePayload);
}

ValueMetadata *type metadata accessor for LHStreams()
{
  return &type metadata for LHStreams;
}

uint64_t method lookup function for LHStoreItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for LHStoreItem);
}

uint64_t dispatch thunk of LHStoreItem.dataVersion.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of LHStoreItem.dataVersion.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of LHStoreItem.dataVersion.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of LHStoreItem.messageTimestamp.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of LHStoreItem.messageTimestamp.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of LHStoreItem.messageTimestamp.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of LHStoreItem.messageType.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of LHStoreItem.messageType.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of LHStoreItem.messageType.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of LHStoreItem.messagePayload.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of LHStoreItem.messagePayload.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of LHStoreItem.messagePayload.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of LHStoreItem.__allocating_init(dataVersion:messageTimestamp:messageType:messagePayload:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of LHStoreItem.serialize()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of LHStoreItem.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of LHStoreItem.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 232))();
}

unsigned char *_s20LighthouseBackground9LHStreamsOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25451DC18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LHStoreItem.CodingKeys()
{
  return &type metadata for LHStoreItem.CodingKeys;
}

unint64_t sub_25451DC54()
{
  unint64_t result = qword_269DF4E18;
  if (!qword_269DF4E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4E18);
  }
  return result;
}

unint64_t sub_25451DCAC()
{
  unint64_t result = qword_26B267000;
  if (!qword_26B267000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B267000);
  }
  return result;
}

unint64_t sub_25451DD04()
{
  unint64_t result = qword_26B266FF8;
  if (!qword_26B266FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B266FF8);
  }
  return result;
}

uint64_t sub_25451DD58()
{
  return sub_254527AB0();
}

uint64_t sub_25451DDAC()
{
  return sub_254527060();
}

uint64_t sub_25451DDC8()
{
  return sub_254527AB0();
}

uint64_t sub_25451DE20(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x7372655661746164 && a2 == 0xEB000000006E6F69;
  if (v3 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000254534750 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x546567617373656DLL && a2 == 0xEB00000000657079 || (sub_2545279E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x506567617373656DLL && a2 == 0xEE0064616F6C7961)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_2545279E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_25451DFFC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_2544E848C(a1, a2);
  }
  return a1;
}

uint64_t sub_25451E010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3780);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3788);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v16 = *(void *)(v4 + 32);
  if (!*(void *)(v16 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
LABEL_7:
    sub_254498AB8((uint64_t)v11, &qword_269DF3780);
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v17 = sub_2544B9B58(a1, a2);
  if (v18)
  {
    sub_254493CFC(*(void *)(v16 + 56) + *(void *)(v13 + 72) * v17, (uint64_t)v11, &qword_269DF3788);
    uint64_t v19 = 0;
  }
  else
  {
    uint64_t v19 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v19, 1, v12);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1) {
    goto LABEL_7;
  }
  sub_2544AED30((uint64_t)v11, (uint64_t)v15);
  uint64_t v21 = *(void *)&v15[*(int *)(v12 + 52)];
  uint64_t v22 = *(void *)(v21 + 16);
  if (v22)
  {
    objc_super v23 = (void *)(v21 + 56);
    while (1)
    {
      BOOL v24 = *(v23 - 1) == a3 && *v23 == a4;
      if (v24 || (sub_2545279E0() & 1) != 0) {
        break;
      }
      v23 += 4;
      if (!--v22) {
        goto LABEL_16;
      }
    }
    uint64_t v20 = 1;
  }
  else
  {
LABEL_16:
    uint64_t v20 = 0;
  }
  sub_254498AB8((uint64_t)v15, &qword_269DF3788);
  return v20;
}

uint64_t StateMachineAnalytics.firstEventTimestamp.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 80))(a1, a2);
  uint64_t v9 = type metadata accessor for LedgerState();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9) == 1)
  {
    sub_254498AB8((uint64_t)v8, &qword_269DF3688);
    uint64_t v10 = sub_254526D90();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a3, 1, 1, v10);
  }
  else
  {
    uint64_t v12 = &v8[*(int *)(v9 + 20)];
    uint64_t v13 = sub_254526D90();
    uint64_t v14 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(a3, v12, v13);
    sub_25448D07C((uint64_t)v8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
  }
}

uint64_t StateMachineAnalytics.lastEventTimestamp.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 104))(a1, a2);
  uint64_t v9 = type metadata accessor for LedgerState();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9) == 1)
  {
    sub_254498AB8((uint64_t)v8, &qword_269DF3688);
    uint64_t v10 = sub_254526D90();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a3, 1, 1, v10);
  }
  else
  {
    uint64_t v12 = &v8[*(int *)(v9 + 20)];
    uint64_t v13 = sub_254526D90();
    uint64_t v14 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(a3, v12, v13);
    sub_25448D07C((uint64_t)v8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
  }
}

uint64_t StateMachineAnalytics.description.getter(uint64_t a1, uint64_t a2)
{
  return 0;
}

char *LedgerStateMachine.__allocating_init(inputGraph:)(uint64_t a1)
{
  swift_allocObject();
  uint64_t v2 = sub_254520D00(a1);
  swift_release();
  return v2;
}

uint64_t sub_25451E7F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_254493CFC(v2 + *(int *)(a1 + 24), (uint64_t)v7, &qword_269DF3688);
  uint64_t v8 = type metadata accessor for LedgerState();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    sub_254498AB8((uint64_t)v7, &qword_269DF3688);
    uint64_t v9 = sub_254526D90();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a2, 1, 1, v9);
  }
  else
  {
    uint64_t v11 = &v7[*(int *)(v8 + 20)];
    uint64_t v12 = sub_254526D90();
    uint64_t v13 = *(void *)(v12 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(a2, v11, v12);
    sub_25448D07C((uint64_t)v7);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(a2, 0, 1, v12);
  }
}

uint64_t sub_25451E9C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_254493CFC(v2 + *(int *)(a1 + 28), (uint64_t)v7, &qword_269DF3688);
  uint64_t v8 = type metadata accessor for LedgerState();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    sub_254498AB8((uint64_t)v7, &qword_269DF3688);
    uint64_t v9 = sub_254526D90();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a2, 1, 1, v9);
  }
  else
  {
    uint64_t v11 = &v7[*(int *)(v8 + 20)];
    uint64_t v12 = sub_254526D90();
    uint64_t v13 = *(void *)(v12 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(a2, v11, v12);
    sub_25448D07C((uint64_t)v7);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(a2, 0, 1, v12);
  }
}

void sub_25451EB98(void *a1@<X8>)
{
  *a1 = 0;
}

LighthouseBackground::LedgerTransitionStatistics __swiftcall LedgerTransitionStatistics.init()()
{
  *uint64_t v0 = 0x7FEFFFFFFFFFFFFFLL;
  v0[1] = 0;
  v0[2] = 0;
  v0[3] = 0;
  return result;
}

double LedgerTransitionStatistics.min.getter()
{
  return *(double *)v0;
}

void LedgerTransitionStatistics.min.setter(double a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*LedgerTransitionStatistics.min.modify())()
{
  return nullsub_1;
}

double LedgerTransitionStatistics.max.getter()
{
  return *(double *)(v0 + 8);
}

void LedgerTransitionStatistics.max.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*LedgerTransitionStatistics.max.modify())()
{
  return nullsub_1;
}

double LedgerTransitionStatistics.mean.getter()
{
  return *(double *)(v0 + 16);
}

void LedgerTransitionStatistics.mean.setter(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t (*LedgerTransitionStatistics.mean.modify())()
{
  return nullsub_1;
}

uint64_t LedgerTransitionStatistics.count.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t LedgerTransitionStatistics.count.setter(uint64_t result)
{
  *(void *)(v1 + 24) = result;
  return result;
}

uint64_t (*LedgerTransitionStatistics.count.modify())()
{
  return nullsub_1;
}

Swift::Void __swiftcall LedgerTransitionStatistics.processTime(delta:)(Swift::Double delta)
{
  if (*(double *)v1 > delta) {
    *(Swift::Double *)uint64_t v1 = delta;
  }
  if (*(double *)(v1 + 8) < delta) {
    *(Swift::Double *)(v1 + 8) = delta;
  }
  uint64_t v2 = *(void *)(v1 + 24);
  BOOL v3 = __OFADD__(v2, 1);
  uint64_t v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v1 + 24) = v4;
    *(double *)(v1 + 16) = *(double *)(v1 + 16) + (delta - *(double *)(v1 + 16)) / (double)v4;
  }
}

double LedgerTransitionStatistics.cumulativeTotalLatency.getter()
{
  return *(double *)(v0 + 16) * (double)*(uint64_t *)(v0 + 24);
}

uint64_t LedgerTransitionStatistics.description.getter()
{
  return 0;
}

uint64_t sub_25451EDD0(char a1)
{
  return qword_254532330[a1];
}

uint64_t sub_25451EDF0()
{
  return sub_25451EDD0(*v0);
}

uint64_t sub_25451EDF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25452152C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25451EE20(uint64_t a1)
{
  unint64_t v2 = sub_254520F24();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25451EE5C(uint64_t a1)
{
  unint64_t v2 = sub_254520F24();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LedgerTransitionStatistics.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4E20);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254520F24();
  sub_254527B00();
  v8[15] = 0;
  sub_254527950();
  if (!v1)
  {
    v8[14] = 1;
    sub_254527950();
    v8[13] = 2;
    sub_254527950();
    v8[12] = 3;
    sub_254527960();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t LedgerTransitionStatistics.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF4E30);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254520F24();
  sub_254527AF0();
  if (!v2)
  {
    v17[15] = 0;
    sub_254527850();
    uint64_t v10 = v9;
    v17[14] = 1;
    sub_254527850();
    uint64_t v12 = v11;
    v17[13] = 2;
    sub_254527850();
    uint64_t v15 = v14;
    v17[12] = 3;
    uint64_t v16 = sub_254527860();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
    a2[1] = v12;
    a2[2] = v15;
    a2[3] = v16;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_25451F274@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return LedgerTransitionStatistics.init(from:)(a1, a2);
}

uint64_t sub_25451F28C(void *a1)
{
  return LedgerTransitionStatistics.encode(to:)(a1);
}

uint64_t sub_25451F2AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_269DF4E38;
  swift_beginAccess();
  return sub_254493CFC(v3, a1, &qword_269DF3688);
}

uint64_t sub_25451F308(uint64_t a1)
{
  uint64_t v3 = v1 + qword_269DF4E38;
  swift_beginAccess();
  sub_2544F0DB0(a1, v3);
  return swift_endAccess();
}

uint64_t sub_25451F364@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 112);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t sub_25451F408(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 112);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess();
}

char *LedgerStateMachine.init(inputGraph:)(uint64_t a1)
{
  uint64_t v1 = sub_254520D00(a1);
  swift_release();
  return v1;
}

uint64_t sub_25451F4E8()
{
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_2544D51E0(v0);
  swift_bridgeObjectRelease();
  uint64_t v2 = MEMORY[0x25A27B9A0](v1, MEMORY[0x263F8D310]);
  swift_release();
  swift_bridgeObjectRetain();
  sub_254527080();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3788);
  sub_254526EE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_254527080();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_25451F60C(uint64_t a1)
{
  uint64_t v21 = a1;
  uint64_t v2 = *v1;
  uint64_t v3 = type metadata accessor for LedgerState();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v20 = (uint64_t)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v2 + 80);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v18 - v14;
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v19((char *)&v18 - v14, 1, 1, v3);
  sub_25451F308((uint64_t)v15);
  (*(void (**)(uint64_t))(*(void *)(v2 + 88) + 144))(v7);
  sub_25451F408((uint64_t)v9);
  sub_254493CFC(v21, (uint64_t)v13, &qword_269DF3688);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v13, 1, v3) == 1) {
    return sub_254498AB8((uint64_t)v13, &qword_269DF3688);
  }
  uint64_t v17 = v20;
  sub_2544AEC64((uint64_t)v13, v20);
  sub_25448D018(v17, (uint64_t)v15);
  v19(v15, 0, 1, v3);
  sub_25451F308((uint64_t)v15);
  sub_254520184(v17);
  return sub_25448D07C(v17);
}

uint64_t sub_25451F8A4(uint64_t *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  unint64_t v7 = (unint64_t)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v81 - v8;
  uint64_t v10 = type metadata accessor for LedgerState();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v84 = (uint64_t *)((char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v83 = (uint64_t *)((char *)&v81 - v15);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (uint64_t *)((char *)&v81 - v16);
  uint64_t v18 = (uint64_t)v1 + qword_269DF4E38;
  swift_beginAccess();
  sub_254493CFC(v18, (uint64_t)v9, &qword_269DF3688);
  int v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  uint64_t v85 = v1;
  if (v19 != 1)
  {
    uint64_t v82 = v3;
    sub_2544AEC64((uint64_t)v9, (uint64_t)v17);
    uint64_t v39 = *v17;
    uint64_t v40 = v17[1];
    unint64_t v41 = a1;
    uint64_t v43 = *a1;
    uint64_t v42 = a1[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v44 = sub_25451E010(v39, v40, v43, v42);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v44 & 1) == 0)
    {
      uint64_t v81 = v17;
      uint64_t v20 = v41;
      if (qword_26B267240 == -1) {
        goto LABEL_9;
      }
      goto LABEL_29;
    }
    sub_254520330(v17, v41);
    sub_25448D018((uint64_t)v41, v7);
    (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    sub_25451F308(v7);
    uint64_t v45 = (uint64_t)v17;
    return sub_25448D07C(v45);
  }
  sub_254498AB8((uint64_t)v9, &qword_269DF3688);
  sub_25448D018((uint64_t)a1, v7);
  (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
  sub_25451F308(v7);
  uint64_t v20 = (uint64_t *)*a1;
  uint64_t v21 = a1[1];
  uint64_t v84 = a1;
  swift_beginAccess();
  uint64_t v23 = *(void *)(v3 + 80);
  uint64_t v22 = *(void *)(v3 + 88);
  uint64_t v24 = (uint64_t)v20;
  uint64_t v25 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v22 + 48);
  swift_bridgeObjectRetain();
  uint64_t v26 = (uint64_t **)v25(v87, v23, v22);
  unint64_t v28 = v27;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v86 = *(uint64_t **)v28;
  uint64_t v30 = v86;
  *(void *)unint64_t v28 = 0x8000000000000000;
  unint64_t v7 = sub_2544B9B58((uint64_t)v20, v21);
  uint64_t v32 = v30[2];
  BOOL v33 = (v31 & 1) == 0;
  uint64_t v34 = v32 + v33;
  if (__OFADD__(v32, v33))
  {
    __break(1u);
    goto LABEL_28;
  }
  char v35 = v31;
  if (v30[3] < v34)
  {
    sub_2544BA458(v34, isUniquelyReferenced_nonNull_native);
    unint64_t v36 = sub_2544B9B58((uint64_t)v20, v21);
    uint64_t v38 = (uint64_t)v84;
    if ((v35 & 1) == (v37 & 1))
    {
      unint64_t v7 = v36;
      goto LABEL_12;
    }
    goto LABEL_34;
  }
  uint64_t v38 = (uint64_t)v84;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_31;
  }
  while (1)
  {
LABEL_12:
    *(void *)unint64_t v28 = v86;
    swift_bridgeObjectRelease();
    uint64_t v20 = *(uint64_t **)v28;
    swift_bridgeObjectRetain();
    if ((v35 & 1) == 0)
    {
      sub_2544BBBCC(v7, v24, v21, 0, v20);
      swift_bridgeObjectRetain();
    }
    uint64_t v58 = v20[7];
    uint64_t v59 = *(void *)(v58 + 8 * v7);
    BOOL v60 = __OFADD__(v59, 1);
    uint64_t v61 = v59 + 1;
    if (!v60)
    {
      *(void *)(v58 + 8 * v7) = v61;
      ((void (*)(uint64_t *, void))v26)(v87, 0);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_254520184(v38);
    }
LABEL_28:
    __break(1u);
LABEL_29:
    swift_once();
LABEL_9:
    uint64_t v46 = sub_254526E00();
    __swift_project_value_buffer(v46, (uint64_t)qword_26B267340);
    unint64_t v47 = v83;
    sub_25448D018((uint64_t)v81, (uint64_t)v83);
    uint64_t v48 = v20;
    uint64_t v49 = v84;
    sub_25448D018((uint64_t)v20, (uint64_t)v84);
    unint64_t v50 = sub_254526DE0();
    os_log_type_t v51 = sub_254527410();
    if (os_log_type_enabled(v50, v51))
    {
      unint64_t v7 = swift_slowAlloc();
      uint64_t v52 = swift_slowAlloc();
      v87[0] = v52;
      *(_DWORD *)unint64_t v7 = 136315394;
      uint64_t v53 = *v47;
      unint64_t v54 = v47[1];
      swift_bridgeObjectRetain();
      uint64_t v88 = sub_254498B68(v53, v54, v87);
      sub_254527500();
      swift_bridgeObjectRelease();
      sub_25448D07C((uint64_t)v47);
      *(_WORD *)(v7 + 12) = 2080;
      uint64_t v55 = (uint64_t)v49;
      uint64_t v56 = *v49;
      unint64_t v57 = v49[1];
      swift_bridgeObjectRetain();
      uint64_t v88 = sub_254498B68(v56, v57, v87);
      uint64_t v48 = v20;
      sub_254527500();
      swift_bridgeObjectRelease();
      sub_25448D07C(v55);
      _os_log_impl(&dword_254486000, v50, v51, "Invalid StateMachine transition, incrementing state: %s -> %s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25A27C9E0](v52, -1, -1);
      MEMORY[0x25A27C9E0](v7, -1, -1);
    }
    else
    {
      sub_25448D07C((uint64_t)v47);
      sub_25448D07C((uint64_t)v49);
    }

    uint64_t v63 = v82;
    uint64_t v21 = *v48;
    uint64_t v38 = v48[1];
    swift_beginAccess();
    uint64_t v65 = v63 + 80;
    uint64_t v24 = *(void *)(v63 + 80);
    uint64_t v64 = *(void *)(v65 + 8);
    uint64_t v66 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v64 + 48);
    swift_bridgeObjectRetain();
    uint64_t v67 = (void (*)(uint64_t *, void))v66(v87, v24, v64);
    uint64_t v26 = v68;
    char v35 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v86 = *v26;
    int v69 = v86;
    void *v26 = (uint64_t *)0x8000000000000000;
    unint64_t v28 = sub_2544B9B58(v21, v38);
    uint64_t v71 = v69[2];
    BOOL v72 = (v70 & 1) == 0;
    uint64_t v73 = v71 + v72;
    if (!__OFADD__(v71, v72)) {
      break;
    }
    __break(1u);
LABEL_31:
    sub_2544BC110();
  }
  char v74 = v70;
  if (v69[3] >= v73)
  {
    if ((v35 & 1) == 0) {
      goto LABEL_33;
    }
    goto LABEL_22;
  }
  sub_2544BA458(v73, v35);
  unint64_t v75 = sub_2544B9B58(v21, v38);
  if ((v74 & 1) == (v76 & 1))
  {
    unint64_t v28 = v75;
    while (1)
    {
LABEL_22:
      void *v26 = v86;
      swift_bridgeObjectRelease();
      id v77 = *v26;
      swift_bridgeObjectRetain();
      if ((v74 & 1) == 0)
      {
        sub_2544BBBCC(v28, v21, v38, 0, v77);
        swift_bridgeObjectRetain();
      }
      uint64_t v78 = v77[7];
      uint64_t v79 = *(void *)(v78 + 8 * v28);
      BOOL v60 = __OFADD__(v79, 1);
      uint64_t v80 = v79 + 1;
      if (!v60) {
        break;
      }
      __break(1u);
LABEL_33:
      sub_2544BC110();
    }
    *(void *)(v78 + 8 * v28) = v80;
    v67(v87, 0);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v45 = (uint64_t)v81;
    return sub_25448D07C(v45);
  }
LABEL_34:
  uint64_t result = sub_254527A30();
  __break(1u);
  return result;
}

uint64_t sub_2545200B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v5 = *(void *)(type metadata accessor for LedgerState() - 8);
    uint64_t v6 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
    uint64_t v7 = *(void *)(v5 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_25451F8A4(v6);
      uint64_t v6 = (uint64_t *)((char *)v6 + v7);
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }

  return sub_25451F364(a2);
}

uint64_t sub_254520184(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25448D018(a1, (uint64_t)v6);
  uint64_t v7 = type metadata accessor for LedgerState();
  uint64_t v8 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  v8(v6, 0, 1, v7);
  swift_beginAccess();
  uint64_t v9 = *(void *)(v3 + 88);
  uint64_t v10 = *(void *)(v3 + 80);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 88))(v6, v10, v9);
  sub_25448D018(a1, (uint64_t)v6);
  v8(v6, 0, 1, v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 112))(v6, v10, v9);
  return swift_endAccess();
}

uint64_t sub_254520330(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v55 = (uint64_t)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void (*)(unsigned char *, void))a1[1];
  uint64_t v58 = *a1;
  uint64_t v11 = *a2;
  uint64_t v10 = a2[1];
  uint64_t v53 = type metadata accessor for LedgerState();
  unint64_t v54 = a2;
  uint64_t v56 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_254526D70();
  double v13 = v12;
  swift_beginAccess();
  uint64_t v14 = *(void *)(v6 + 88);
  uint64_t v15 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v16 = *(void *)(v6 + 80);
  swift_bridgeObjectRetain();
  uint64_t v57 = v16;
  uint64_t v17 = (void **)v15(v60, v16, v14);
  unint64_t v19 = v18;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v59 = *(void **)v19;
  uint64_t v21 = v59;
  *(void *)unint64_t v19 = 0x8000000000000000;
  unint64_t v23 = sub_2544B9B58(v11, v10);
  uint64_t v24 = v21[2];
  BOOL v25 = (v22 & 1) == 0;
  uint64_t v26 = v24 + v25;
  if (__OFADD__(v24, v25))
  {
    __break(1u);
    goto LABEL_24;
  }
  LOBYTE(v6) = v22;
  if (v21[3] >= v26)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_27;
    }
    while (1)
    {
LABEL_6:
      uint64_t v29 = (uint64_t)v56;
      *(void *)unint64_t v19 = v59;
      swift_bridgeObjectRelease();
      uint64_t v30 = *(void **)v19;
      if ((v6 & 1) == 0)
      {
        sub_2544BBBCC(v23, v11, v10, 0, *(void **)v19);
        swift_bridgeObjectRetain();
      }
      uint64_t v31 = v30[7];
      uint64_t v32 = *(void *)(v31 + 8 * v23);
      BOOL v33 = __OFADD__(v32, 1);
      uint64_t v34 = v32 + 1;
      if (v33) {
        break;
      }
      *(void *)(v31 + 8 * v23) = v34;
      ((void (*)(unsigned char *, void))v17)(v60, 0);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      uint64_t v56 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v14 + 72))(v60, v57, v14);
      uint64_t v17 = v35;
      LOBYTE(v6) = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v59 = *v17;
      unint64_t v36 = v59;
      *uint64_t v17 = (void *)0x8000000000000000;
      unint64_t v19 = sub_2544B9A98(v58, v29, v11, v10);
      uint64_t v38 = v36[2];
      BOOL v39 = (v37 & 1) == 0;
      uint64_t v40 = v38 + v39;
      if (__OFADD__(v38, v39)) {
        goto LABEL_25;
      }
      unint64_t v23 = v37;
      if (v36[3] >= v40)
      {
        if ((v6 & 1) == 0) {
          sub_2544BBF3C();
        }
      }
      else
      {
        sub_2544BA0E4(v40, v6);
        unint64_t v41 = sub_2544B9A98(v58, v29, v11, v10);
        if ((v23 & 1) != (v42 & 1)) {
          goto LABEL_29;
        }
        unint64_t v19 = v41;
      }
      *uint64_t v17 = v59;
      swift_bridgeObjectRelease();
      uint64_t v43 = (uint64_t)*v17;
      if ((v23 & 1) == 0)
      {
        sub_2544BBB70(v19, v58, v29, v11, v10, 0, *v17, 1.79769313e308, 0.0, 0.0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      uint64_t v44 = *(void *)(v43 + 56);
      uint64_t v45 = (double *)(v44 + 32 * v19);
      if (v13 < *v45) {
        *uint64_t v45 = v13;
      }
      double v47 = v45[1];
      uint64_t v46 = v45 + 1;
      if (v47 < v13) {
        *uint64_t v46 = v13;
      }
      uint64_t v48 = v44 + 32 * v19;
      uint64_t v49 = *(void *)(v48 + 24);
      BOOL v33 = __OFADD__(v49, 1);
      uint64_t v50 = v49 + 1;
      if (!v33)
      {
        *(void *)(v48 + 24) = v50;
        *(double *)(v48 + 16) = *(double *)(v48 + 16) + (v13 - *(double *)(v48 + 16)) / (double)v50;
        v56(v60, 0);
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v51 = v55;
        sub_25448D018((uint64_t)v54, v55);
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v53 - 8) + 56))(v51, 0, 1);
        swift_beginAccess();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 112))(v51, v57, v14);
        return swift_endAccess();
      }
LABEL_26:
      __break(1u);
LABEL_27:
      sub_2544BC110();
    }
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_2544BA458(v26, isUniquelyReferenced_nonNull_native);
  unint64_t v27 = sub_2544B9B58(v11, v10);
  if ((v6 & 1) == (v28 & 1))
  {
    unint64_t v23 = v27;
    goto LABEL_6;
  }
  sub_254527A30();
  __break(1u);
LABEL_29:
  uint64_t result = sub_254527A30();
  __break(1u);
  return result;
}

uint64_t static LedgerStateMachine.meanEdgeLatencySumForPath(path:computedAnalytics:)(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    uint64_t v3 = result;
    uint64_t v4 = v2 - 1;
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_254520B8C(0, v4, v3);
    swift_bridgeObjectRelease();
    uint64_t v6 = *(void *)(v5 + 16);
    if (v6)
    {
      uint64_t v7 = (uint64_t *)(v5 + 56);
      double v8 = 0.0;
      while (1)
      {
        uint64_t v21 = v6;
        uint64_t v10 = *(v7 - 3);
        uint64_t v9 = *(v7 - 2);
        uint64_t v12 = *(v7 - 1);
        uint64_t v11 = *v7;
        uint64_t v14 = a2[3];
        uint64_t v13 = a2[4];
        __swift_project_boxed_opaque_existential_1(a2, v14);
        uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v16 = v15(v14, v13);
        if (!*(void *)(v16 + 16)) {
          break;
        }
        unint64_t v17 = sub_2544B9A98(v10, v9, v12, v11);
        if ((v18 & 1) == 0) {
          break;
        }
        v7 += 4;
        double v19 = *(double *)(*(void *)(v16 + 56) + 32 * v17 + 16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        double v8 = v8 + v19;
        uint64_t v6 = v21 - 1;
        if (v21 == 1)
        {
          swift_bridgeObjectRelease();
          return *(void *)&v8;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static LedgerStateMachine.averageLatencyAcrossPaths(paths:computedAnalytics:)(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    double v6 = 0.0;
    while (1)
    {
      uint64_t v7 = swift_bridgeObjectRetain();
      double v8 = COERCE_DOUBLE(static LedgerStateMachine.meanEdgeLatencySumForPath(path:computedAnalytics:)(v7, a2));
      char v10 = v9;
      uint64_t result = swift_bridgeObjectRelease();
      if ((v10 & 1) == 0)
      {
        if (__OFADD__(v4++, 1))
        {
          __break(1u);
          return result;
        }
        double v6 = v6 + (v8 - v6) / (double)v4;
      }
      if (v2 == ++v5) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t *LedgerStateMachine.deinit()
{
  uint64_t v1 = *v0;
  swift_release();
  sub_254498AB8((uint64_t)v0 + qword_269DF4E38, &qword_269DF3688);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 112));
  return v0;
}

uint64_t LedgerStateMachine.__deallocating_deinit()
{
  LedgerStateMachine.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t sub_254520B8C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = result;
  uint64_t v3 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (!v3) {
    return v4;
  }
  uint64_t v6 = a2;
  uint64_t v21 = MEMORY[0x263F8EE78];
  uint64_t result = sub_2544FEED0(0, v3 & ~(v3 >> 63), 0);
  if (v6 >= v20 && (v3 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v6;
    uint64_t v4 = v21;
    uint64_t v7 = *(void *)(a3 + 16);
    uint64_t v8 = v20;
    unint64_t v18 = v7;
    if (v7 <= v20) {
      uint64_t v7 = v20;
    }
    uint64_t v19 = v7;
    char v9 = (uint64_t *)(a3 + 16 * v20 + 56);
    while (v6 != v8)
    {
      if (v20 < 0) {
        goto LABEL_17;
      }
      if (v19 == v8) {
        goto LABEL_18;
      }
      if (++v8 >= v18) {
        goto LABEL_19;
      }
      uint64_t v11 = *(v9 - 3);
      uint64_t v10 = *(v9 - 2);
      uint64_t v13 = *(v9 - 1);
      uint64_t v12 = *v9;
      unint64_t v15 = *(void *)(v21 + 16);
      unint64_t v14 = *(void *)(v21 + 24);
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRetain();
      if (v15 >= v14 >> 1) {
        uint64_t result = sub_2544FEED0(v14 > 1, v15 + 1, 1);
      }
      *(void *)(v21 + 16) = v15 + 1;
      uint64_t v16 = (void *)(v21 + 32 * v15);
      void v16[4] = v11;
      v16[5] = v10;
      void v16[6] = v13;
      v16[7] = v12;
      v9 += 2;
      uint64_t v6 = v17;
      if (v17 == v8) {
        return v4;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
LABEL_21:
  __break(1u);
  return result;
}

char *sub_254520D00(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v16 = *(void *)v1;
  uint64_t v4 = *(void *)(v16 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v16 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DF3688);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = &v2[qword_269DF4E38];
  uint64_t v12 = type metadata accessor for LedgerState();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  v13(v11, 1, 1, v12);
  *((void *)v2 + 2) = a1;
  v13(v10, 1, 1, v12);
  uint64_t v14 = (uint64_t)&v2[qword_269DF4E38];
  swift_beginAccess();
  swift_retain();
  sub_2544F0DB0((uint64_t)v10, v14);
  swift_endAccess();
  (*(void (**)(uint64_t))(*(void *)(v16 + 88) + 144))(v4);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v2[*(void *)(*(void *)v2 + 112)], v7, v4);
  return v2;
}

unint64_t sub_254520F24()
{
  unint64_t result = qword_269DF4E28;
  if (!qword_269DF4E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DF4E28);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LedgerTransitionStatistics(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LedgerTransitionStatistics(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for LedgerTransitionStatistics()
{
  return &type metadata for LedgerTransitionStatistics;
}

uint64_t dispatch thunk of StateMachineAnalytics.stateCountMap.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of StateMachineAnalytics.stateCountMap.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of StateMachineAnalytics.stateCountMap.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of StateMachineAnalytics.transitionStatsMap.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of StateMachineAnalytics.transitionStatsMap.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of StateMachineAnalytics.transitionStatsMap.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of StateMachineAnalytics.firstValidState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of StateMachineAnalytics.firstValidState.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of StateMachineAnalytics.firstValidState.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of StateMachineAnalytics.latestValidState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of StateMachineAnalytics.latestValidState.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of StateMachineAnalytics.latestValidState.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of StateMachineAnalytics.firstEventTimestamp.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of StateMachineAnalytics.lastEventTimestamp.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of StateMachineAnalytics.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

void sub_254521100()
{
  sub_2544F2FCC();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F) {
      swift_initClassMetadata2();
    }
  }
}

uint64_t type metadata accessor for LedgerStateMachine()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for LedgerStateMachine(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for LedgerStateMachine);
}

uint64_t dispatch thunk of LedgerStateMachine.__allocating_init(inputGraph:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of LedgerStateMachine.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of LedgerStateMachine.state.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of LedgerStateMachine.reset(startState:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of LedgerStateMachine.nextState(nextState:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of LedgerStateMachine.processStates(states:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of LedgerStateMachine.setInitialState(currentState:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of LedgerStateMachine.processStateTransition(currentState:nextState:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

unsigned char *storeEnumTagSinglePayload for LedgerTransitionStatistics.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2545213ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LedgerTransitionStatistics.CodingKeys()
{
  return &type metadata for LedgerTransitionStatistics.CodingKeys;
}