uint64_t type metadata accessor for MercuryCacheUpdateInput()
{
  uint64_t result;

  result = qword_100231488;
  if (!qword_100231488) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10012A0F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_100230BC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL sub_10012A158()
{
  return sub_10011D154();
}

uint64_t sub_10012A178(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100043B1C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_10012A1D8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100043B1C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10012A230(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100043B1C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t *sub_10012A290(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    a1[3] = a2[3];
    uint64_t v7 = *(int *)(a3 + 32);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Date();
    v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t sub_10012A3A4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *sub_10012A434(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

void *sub_10012A4F4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_10012A5D0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *sub_10012A64C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_10012A708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10012A71C);
}

uint64_t sub_10012A71C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 32);
    return sub_10004FD40(v9, a2, v8);
  }
}

uint64_t sub_10012A7A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10012A7B8);
}

void *sub_10012A7B8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 32);
    return (void *)sub_100021AC0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_10012A838()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10012A8D8(uint64_t a1, void *a2)
{
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  int64_t v32 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v6 = 0;
  if (!v5) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v7 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v7 | (v6 << 6); ; unint64_t i = __clz(__rbit64(v10)) + (v6 << 6))
  {
    v12 = (void *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v13 = v12[1];
    *(void *)&long long v35 = *v12;
    *((void *)&v35 + 1) = v13;
    swift_bridgeObjectRetain_n();
    AnyHashable.init<A>(_:)();
    uint64_t v36 = sub_100043478(&qword_10022D6F0);
    *(void *)&long long v35 = _swiftEmptyDictionarySingleton;
    sub_100043510(&v35, v34);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v38 = (void *)*a2;
    v15 = v38;
    *a2 = 0x8000000000000000;
    unint64_t v16 = sub_100043670((uint64_t)v37);
    uint64_t v18 = v15[2];
    BOOL v19 = (v17 & 1) == 0;
    Swift::Int v20 = v18 + v19;
    if (__OFADD__(v18, v19))
    {
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    unint64_t v21 = v16;
    char v22 = v17;
    sub_100043478(qword_10022E218);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v20))
    {
      unint64_t v23 = sub_100043670((uint64_t)v37);
      if ((v22 & 1) != (v24 & 1)) {
        goto LABEL_36;
      }
      unint64_t v21 = v23;
    }
    v25 = v38;
    if (v22)
    {
      v26 = (_OWORD *)(v38[7] + 32 * v21);
      sub_10004377C((uint64_t)v26);
      sub_100043510(v34, v26);
    }
    else
    {
      v38[(v21 >> 6) + 8] |= 1 << v21;
      sub_1000433B4((uint64_t)v37, v25[6] + 40 * v21);
      sub_100043510(v34, (_OWORD *)(v25[7] + 32 * v21));
      uint64_t v27 = v25[2];
      BOOL v28 = __OFADD__(v27, 1);
      uint64_t v29 = v27 + 1;
      if (v28) {
        goto LABEL_33;
      }
      v25[2] = v29;
    }
    *a2 = v25;
    swift_bridgeObjectRelease();
    sub_1000434BC((uint64_t)v37);
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v9 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_34;
    }
    if (v9 >= v32) {
      return swift_release();
    }
    unint64_t v10 = *(void *)(v31 + 8 * v9);
    ++v6;
    if (!v10)
    {
      int64_t v6 = v9 + 1;
      if (v9 + 1 >= v32) {
        return swift_release();
      }
      unint64_t v10 = *(void *)(v31 + 8 * v6);
      if (!v10)
      {
        int64_t v6 = v9 + 2;
        if (v9 + 2 >= v32) {
          return swift_release();
        }
        unint64_t v10 = *(void *)(v31 + 8 * v6);
        if (!v10)
        {
          int64_t v6 = v9 + 3;
          if (v9 + 3 >= v32) {
            return swift_release();
          }
          unint64_t v10 = *(void *)(v31 + 8 * v6);
          if (!v10) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v5 = (v10 - 1) & v10;
  }
  int64_t v11 = v9 + 4;
  if (v11 >= v32) {
    return swift_release();
  }
  unint64_t v10 = *(void *)(v31 + 8 * v11);
  if (v10)
  {
    int64_t v6 = v11;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v6 >= v32) {
      return swift_release();
    }
    unint64_t v10 = *(void *)(v31 + 8 * v6);
    ++v11;
    if (v10) {
      goto LABEL_20;
    }
  }
LABEL_35:
  __break(1u);
LABEL_36:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10012AC00(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v50 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 56);
  int64_t v52 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v51 = a3;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_22;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_42;
    }
    if (v11 >= v52)
    {
LABEL_40:
      swift_bridgeObjectRelease();
      return swift_release();
    }
    unint64_t v12 = *(void *)(v50 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v52) {
        goto LABEL_40;
      }
      unint64_t v12 = *(void *)(v50 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v52) {
          goto LABEL_40;
        }
        unint64_t v12 = *(void *)(v50 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v52) {
            goto LABEL_40;
          }
          unint64_t v12 = *(void *)(v50 + 8 * v8);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_22:
    v14 = (void *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v15 = v14[1];
    v57[0] = *v14;
    uint64_t v16 = v57[0];
    v57[1] = v15;
    swift_bridgeObjectRetain_n();
    AnyHashable.init<A>(_:)();
    *(void *)&long long v55 = v16;
    *((void *)&v55 + 1) = v15;
    swift_bridgeObjectRetain();
    AnyHashable.init<A>(_:)();
    if (*(void *)(a3 + 16) && (unint64_t v17 = sub_100043670((uint64_t)v57), (v18 & 1) != 0))
    {
      sub_100043520(*(void *)(a3 + 56) + 32 * v17, (uint64_t)&v55);
    }
    else
    {
      long long v55 = 0u;
      long long v56 = 0u;
    }
    sub_1000434BC((uint64_t)v57);
    if (*((void *)&v56 + 1))
    {
      unint64_t v19 = v7;
      int64_t v20 = v8;
      sub_100043510(&v55, v54);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v59 = (void *)*a2;
      char v22 = v59;
      unint64_t v23 = a2;
      *a2 = 0x8000000000000000;
      unint64_t v24 = sub_100043670((uint64_t)v58);
      uint64_t v26 = v22[2];
      BOOL v27 = (v25 & 1) == 0;
      Swift::Int v28 = v26 + v27;
      if (__OFADD__(v26, v27))
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      unint64_t v29 = v24;
      char v30 = v25;
      sub_100043478(qword_10022E218);
      Swift::Bool v31 = _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v28);
      int64_t v8 = v20;
      unint64_t v7 = v19;
      if (v31)
      {
        unint64_t v32 = sub_100043670((uint64_t)v58);
        if ((v30 & 1) != (v33 & 1)) {
          goto LABEL_45;
        }
        unint64_t v29 = v32;
      }
      v34 = v59;
      if (v30)
      {
        long long v35 = (_OWORD *)(v59[7] + 32 * v29);
        sub_10004377C((uint64_t)v35);
        sub_100043510(v54, v35);
      }
      else
      {
        v59[(v29 >> 6) + 8] |= 1 << v29;
        sub_1000433B4((uint64_t)v58, v34[6] + 40 * v29);
        sub_100043510(v54, (_OWORD *)(v34[7] + 32 * v29));
        uint64_t v46 = v34[2];
        BOOL v47 = __OFADD__(v46, 1);
        uint64_t v48 = v46 + 1;
        if (v47) {
          goto LABEL_43;
        }
        _OWORD v34[2] = v48;
      }
      a2 = v23;
      *unint64_t v23 = v34;
      swift_bridgeObjectRelease();
      sub_1000434BC((uint64_t)v58);
      swift_bridgeObjectRelease();
      a3 = v51;
    }
    else
    {
      sub_1000423CC((uint64_t)&v55);
      swift_bridgeObjectRetain();
      uint64_t v36 = a2;
      unint64_t v37 = sub_100043670((uint64_t)v58);
      char v39 = v38;
      swift_bridgeObjectRelease();
      if (v39)
      {
        char v40 = swift_isUniquelyReferenced_nonNull_native();
        v59 = (void *)*v36;
        v41 = v59;
        *uint64_t v36 = 0x8000000000000000;
        int64_t v42 = v8;
        Swift::Int v43 = v41[3];
        sub_100043478(qword_10022E218);
        Swift::Int v44 = v43;
        int64_t v8 = v42;
        _NativeDictionary.ensureUnique(isUnique:capacity:)(v40, v44);
        v45 = v59;
        sub_1000434BC(v59[6] + 40 * v37);
        sub_100043510((_OWORD *)(v45[7] + 32 * v37), v54);
        _NativeDictionary._delete(at:)();
        *uint64_t v36 = v45;
        swift_bridgeObjectRelease();
      }
      else
      {
        memset(v54, 0, sizeof(v54));
      }
      a2 = v36;
      sub_1000434BC((uint64_t)v58);
      sub_1000423CC((uint64_t)v54);
      swift_bridgeObjectRelease();
    }
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v52) {
    goto LABEL_40;
  }
  unint64_t v12 = *(void *)(v50 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v52) {
      goto LABEL_40;
    }
    unint64_t v12 = *(void *)(v50 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_21;
    }
  }
LABEL_44:
  __break(1u);
LABEL_45:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10012B0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v27 = a5;
  uint64_t v24 = a1 + 56;
  uint64_t v12 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(a1 + 56);
  int64_t v25 = (unint64_t)(v12 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v16 = 0;
  if (!v14) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v17 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    char v22 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v23 = v22[1];
    v26[0] = *v22;
    v26[1] = v23;
    swift_bridgeObjectRetain();
    sub_10012D8D4(v26, a2, a3, a4, v27, a6);
    if (v6)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_27;
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v16++, 1)) {
      break;
    }
    if (v16 >= v25) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v16);
    if (!v20)
    {
      int64_t v21 = v16 + 1;
      if (v16 + 1 >= v25) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v21);
      if (v20) {
        goto LABEL_16;
      }
      int64_t v21 = v16 + 2;
      if (v16 + 2 >= v25) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v21);
      if (v20) {
        goto LABEL_16;
      }
      int64_t v21 = v16 + 3;
      if (v16 + 3 >= v25) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v21);
      if (v20)
      {
LABEL_16:
        int64_t v16 = v21;
        goto LABEL_17;
      }
      int64_t v21 = v16 + 4;
      if (v16 + 4 < v25)
      {
        unint64_t v20 = *(void *)(v24 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v16 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_29;
            }
            if (v16 >= v25) {
              goto LABEL_26;
            }
            unint64_t v20 = *(void *)(v24 + 8 * v16);
            ++v21;
            if (v20) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_26:
      swift_bridgeObjectRelease();
      swift_release();
LABEL_27:
      swift_bridgeObjectRelease();
      return sub_10003E0EC((uint64_t)a4);
    }
LABEL_17:
    unint64_t v14 = (v20 - 1) & v20;
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_10012B2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v3 - 8);
  sub_100048238(v4, v144);
  uint64_t v5 = &type metadata for String;
  sub_100043478(&qword_10022D7B0);
  Dictionary.init(dictionaryLiteral:)();
  uint64_t v148 = a2 + 64;
  sub_100045FCC();
  uint64_t v157 = v8 & v7;
  uint64_t v158 = v6;
  int64_t v152 = (unint64_t)(v9 + 63) >> 6;
  unint64_t v10 = v170;
  swift_bridgeObjectRetain();
  int64_t v11 = 0;
  uint64_t v153 = a2;
  uint64_t v145 = a2 + 104;
  while (1)
  {
LABEL_2:
    unint64_t v12 = v157;
    if (v157)
    {
      int64_t v156 = v11;
      v157 &= v157 - 1;
      unint64_t v13 = __clz(__rbit64(v12)) | (v11 << 6);
LABEL_4:
      sub_1000433B4(*(void *)(v153 + 48) + 40 * v13, (uint64_t)&v169);
      sub_100043520(*(void *)(v153 + 56) + 32 * v13, (uint64_t)&v170[1] + 8);
      goto LABEL_11;
    }
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_136;
    }
    if (v14 >= v152)
    {
      int64_t v16 = v11;
    }
    else
    {
      unint64_t v15 = *(void *)(v148 + 8 * v14);
      if (v15) {
        goto LABEL_8;
      }
      int64_t v16 = v11 + 1;
      if (v11 + 2 < v152)
      {
        unint64_t v15 = *(void *)(v148 + 8 * (v11 + 2));
        if (v15)
        {
          int64_t v14 = v11 + 2;
LABEL_8:
          int64_t v156 = v14;
          uint64_t v157 = (v15 - 1) & v15;
          unint64_t v13 = __clz(__rbit64(v15)) + (v14 << 6);
          goto LABEL_4;
        }
        int64_t v16 = v11 + 2;
        if (v11 + 3 < v152)
        {
          unint64_t v15 = *(void *)(v148 + 8 * (v11 + 3));
          if (v15)
          {
            int64_t v14 = v11 + 3;
            goto LABEL_8;
          }
          int64_t v14 = v11 + 4;
          int64_t v16 = v11 + 3;
          if (v11 + 4 < v152)
          {
            unint64_t v15 = *(void *)(v148 + 8 * v14);
            if (v15) {
              goto LABEL_8;
            }
            while (v11 + 5 < v152)
            {
              unint64_t v15 = *(void *)(v145 + 8 * v11++);
              if (v15)
              {
                int64_t v14 = v11 + 4;
                goto LABEL_8;
              }
            }
            int64_t v16 = v152 - 1;
          }
        }
      }
    }
    int64_t v156 = v16;
    uint64_t v157 = 0;
    uint64_t v171 = 0;
    memset(v170, 0, sizeof(v170));
    long long v169 = 0u;
LABEL_11:
    sub_10004382C((uint64_t)&v169, (uint64_t)&v172, &qword_10022E210);
    if (!*((void *)&v173 + 1))
    {
      swift_release();
      if (*(void *)(v158 + 16))
      {
        uint64_t v126 = swift_bridgeObjectRetain();
        sub_1000AFE04(v126);
        uint64_t v128 = v127;
        swift_bridgeObjectRelease();
        sub_100043478(&qword_100231DE0);
        uint64_t v129 = swift_allocObject();
        *(_OWORD *)(v129 + 16) = xmmword_1001C4B80;
        sub_10004D510(0, &qword_10022EC18);
        id v130 = sub_1000488A4();
        [v130 setAllowsResponse:0];
        *(void *)(v129 + 32) = v130;
        *(void *)&long long v172 = v129;
        specialized Array._endMutation()();
        sub_10012CA34(0xD000000000000018, 0x80000001001CA6E0, v128, v172);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      return swift_bridgeObjectRelease();
    }
    sub_100043510(v175, v168);
    long long v169 = v172;
    v170[0] = v173;
    *(void *)&v170[1] = v174;
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_128;
    }
    long long v17 = v166;
    sub_100043520((uint64_t)v168, (uint64_t)&v169);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_128:
      if (qword_10022C4C0 == -1)
      {
LABEL_129:
        sub_100043478(&qword_10022E560);
        uint64_t v131 = type metadata accessor for LogMessage();
        sub_100044798(v131);
        *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
        *((void *)&v170[0] + 1) = &type metadata for MercuryCacheUpdateReporter;
        *(void *)&long long v169 = swift_allocObject();
        sub_10012DC98(v146, v169 + 16);
        id v132 = (id)AMSLogKey();
        if (v132)
        {
          v133 = v132;
          uint64_t v134 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v135 = v5;
          uint64_t v137 = v136;

          swift_bridgeObjectRetain();
          sub_1000208BC();
          sub_100020E60();
          sub_100049788(&v169, *((uint64_t *)&v170[0] + 1));
          uint64_t DynamicType = swift_getDynamicType();
          v167[1] = swift_getMetatypeMetadata();
          *(void *)&long long v166 = DynamicType;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_1000423CC((uint64_t)&v166);
          sub_100020E44();
          v167[1] = v135;
          *(void *)&long long v166 = v134;
          *((void *)&v166 + 1) = v137;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_1000423CC((uint64_t)&v166);
          v139._countAndFlagsBits = 93;
          v139._object = (void *)0xE100000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v139);
          LogMessage.init(stringInterpolation:)();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_100020E78();
          sub_100020E60();
          sub_100049788(&v169, *((uint64_t *)&v170[0] + 1));
          uint64_t v140 = swift_getDynamicType();
          v167[1] = swift_getMetatypeMetadata();
          *(void *)&long long v166 = v140;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_1000423CC((uint64_t)&v166);
          v141._countAndFlagsBits = 58;
          v141._object = (void *)0xE100000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v141);
          LogMessage.init(stringInterpolation:)();
        }
        sub_10004377C((uint64_t)&v169);
        LogMessage.init(stringLiteral:)();
        uint64_t v142 = static os_log_type_t.error.getter();
        sub_10004841C(v142);
        swift_bridgeObjectRelease();
        sub_10004377C((uint64_t)v168);
        swift_release();
        return swift_bridgeObjectRelease();
      }
LABEL_144:
      swift_once();
      goto LABEL_129;
    }
    uint64_t v18 = v166;
    if (!a1)
    {
      sub_100046438();
LABEL_101:
      uint64_t v111 = v18;
      sub_1000423CC((uint64_t)&v166);
      goto LABEL_103;
    }
    v165[0] = v17;
    swift_bridgeObjectRetain();
    AnyHashable.init<A>(_:)();
    if (*(void *)(a1 + 16) && (unint64_t v19 = sub_100043670((uint64_t)&v169), (v20 & 1) != 0)) {
      sub_100043520(*(void *)(a1 + 56) + 32 * v19, (uint64_t)&v166);
    }
    else {
      sub_100046438();
    }
    sub_1000434BC((uint64_t)&v169);
    if (!v167[1]) {
      goto LABEL_101;
    }
    if (swift_dynamicCast()) {
      break;
    }
    uint64_t v111 = v18;
LABEL_103:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v169 = v158;
    sub_100042ADC(v17, *((uint64_t *)&v17 + 1));
    sub_1000452FC();
    Swift::Int v117 = v115 + v116;
    if (__OFADD__(v115, v116))
    {
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
      goto LABEL_144;
    }
    unint64_t v118 = v113;
    char v119 = v114;
    sub_100043478(&qword_10022E9F0);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v117))
    {
      unint64_t v120 = sub_100042ADC(v17, *((uint64_t *)&v17 + 1));
      if ((v17 & 1) != (v121 & 1)) {
        goto LABEL_147;
      }
      unint64_t v118 = v120;
    }
    v122 = (void *)v169;
    uint64_t v158 = v169;
    if (v119)
    {
      uint64_t v123 = *(void *)(v169 + 56);
      swift_bridgeObjectRelease();
      *(void *)(v123 + 8 * v118) = v111;
    }
    else
    {
      *(void *)(v169 + 8 * (v118 >> 6) + 64) |= 1 << v118;
      *(_OWORD *)(v122[6] + 16 * v118) = v17;
      *(void *)(v122[7] + 8 * v118) = v111;
      uint64_t v124 = v122[2];
      BOOL v64 = __OFADD__(v124, 1);
      uint64_t v125 = v124 + 1;
      if (v64) {
        goto LABEL_137;
      }
      v122[2] = v125;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10004377C((uint64_t)v168);
    int64_t v11 = v156;
  }
  int64_t v21 = 0;
  uint64_t v5 = (void *)v169;
  sub_100045FCC();
  unint64_t v24 = v23 & v22;
  int64_t v160 = (unint64_t)(v25 + 63) >> 6;
  v161 = v5;
  uint64_t v155 = v26;
  uint64_t v147 = v26 + 40;
  uint64_t v151 = v18;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        if (v24)
        {
          unint64_t v27 = __clz(__rbit64(v24));
          v24 &= v24 - 1;
          unint64_t v28 = v27 | (v21 << 6);
LABEL_25:
          uint64_t v29 = *(void *)(v18 + 56);
          char v30 = (void *)(*(void *)(v18 + 48) + 16 * v28);
          uint64_t v31 = v30[1];
          *(void *)&long long v166 = *v30;
          *((void *)&v166 + 1) = v31;
          sub_100043520(v29 + 32 * v28, (uint64_t)v167);
          swift_bridgeObjectRetain();
          goto LABEL_32;
        }
        int64_t v32 = v21 + 1;
        if (__OFADD__(v21, 1))
        {
          __break(1u);
          goto LABEL_135;
        }
        if (v32 >= v160)
        {
          int64_t v34 = v21;
        }
        else
        {
          unint64_t v33 = *(void *)(v155 + 8 * v32);
          if (v33) {
            goto LABEL_29;
          }
          int64_t v34 = v21 + 1;
          if (v21 + 2 < v160)
          {
            unint64_t v33 = *(void *)(v155 + 8 * (v21 + 2));
            if (v33)
            {
              int64_t v32 = v21 + 2;
LABEL_29:
              unint64_t v24 = (v33 - 1) & v33;
              unint64_t v28 = __clz(__rbit64(v33)) + (v32 << 6);
              int64_t v21 = v32;
              goto LABEL_25;
            }
            int64_t v34 = v21 + 2;
            if (v21 + 3 < v160)
            {
              unint64_t v33 = *(void *)(v155 + 8 * (v21 + 3));
              if (v33)
              {
                int64_t v32 = v21 + 3;
                goto LABEL_29;
              }
              int64_t v32 = v21 + 4;
              int64_t v34 = v21 + 3;
              if (v21 + 4 < v160)
              {
                unint64_t v33 = *(void *)(v155 + 8 * v32);
                if (v33) {
                  goto LABEL_29;
                }
                while (v21 + 5 < v160)
                {
                  unint64_t v33 = *(void *)(v147 + 8 * v21++);
                  if (v33)
                  {
                    int64_t v32 = v21 + 4;
                    goto LABEL_29;
                  }
                }
                int64_t v34 = v160 - 1;
              }
            }
          }
        }
        unint64_t v24 = 0;
        memset(v167, 0, sizeof(v167));
        int64_t v21 = v34;
        long long v166 = 0u;
LABEL_32:
        sub_10004382C((uint64_t)&v166, (uint64_t)&v169, &qword_10022E200);
        uint64_t v35 = *((void *)&v169 + 1);
        if (!*((void *)&v169 + 1))
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_10004377C((uint64_t)v168);
          uint64_t v5 = &type metadata for String;
          int64_t v11 = v156;
          goto LABEL_2;
        }
        int64_t v162 = v21;
        uint64_t v36 = v169;
        sub_100043510(v10, &v166);
        uint64_t v37 = sub_10004D510(0, &qword_1002314F0);
        if (swift_dynamicCast()) {
          break;
        }
LABEL_37:
        swift_bridgeObjectRelease();
        int64_t v21 = v162;
      }
      char v38 = v5;
      uint64_t v5 = v10;
      char v39 = *(void **)&v165[0];
      if (!v38[2])
      {
        sub_100046438();
LABEL_47:
        sub_1000423CC((uint64_t)&v166);
LABEL_48:
        if (*(void *)(v158 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v44 = sub_100042ADC(v17, *((uint64_t *)&v17 + 1));
          if (v45)
          {
            uint64_t v46 = *(void **)(*(void *)(v158 + 56) + 8 * v44);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
LABEL_56:
            v167[1] = v37;
            *(void *)&long long v166 = v39;
            sub_100043510(&v166, v165);
            id v149 = v39;
            char v51 = swift_isUniquelyReferenced_nonNull_native();
            v163 = v46;
            sub_100047310();
            sub_1000452FC();
            Swift::Int v56 = v54 + v55;
            if (__OFADD__(v54, v55)) {
              goto LABEL_138;
            }
            unint64_t v57 = v52;
            char v58 = v53;
            sub_100043478(&qword_10022E5B0);
            if (_NativeDictionary.ensureUnique(isUnique:capacity:)(v51, v56))
            {
              unint64_t v59 = sub_100047310();
              if ((v58 & 1) != (v60 & 1)) {
                goto LABEL_147;
              }
              unint64_t v57 = v59;
            }
            if (v58)
            {
              v61 = (_OWORD *)(v46[7] + 32 * v57);
              sub_10004377C(v163[7] + 32 * v57);
              sub_100043510(v165, v61);
            }
            else
            {
              sub_10004DE54((uint64_t)&v46[v57 >> 6]);
              v62 = (void *)(v46[6] + 16 * v57);
              void *v62 = v36;
              v62[1] = v35;
              sub_100043510(v165, (_OWORD *)(v46[7] + 32 * v57));
              uint64_t v63 = v46[2];
              BOOL v64 = __OFADD__(v63, 1);
              uint64_t v65 = v63 + 1;
              if (v64) {
                goto LABEL_140;
              }
              v46[2] = v65;
              swift_bridgeObjectRetain();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            char v66 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)&long long v166 = v158;
            unint64_t v67 = sub_100042ADC(v17, *((uint64_t *)&v17 + 1));
            uint64_t v69 = *(void *)(v158 + 16);
            BOOL v70 = (v68 & 1) == 0;
            Swift::Int v71 = v69 + v70;
            if (__OFADD__(v69, v70)) {
              goto LABEL_139;
            }
            unint64_t v72 = v67;
            char v73 = v68;
            unint64_t v10 = v5;
            sub_100043478(&qword_10022E9F0);
            Swift::Bool v74 = _NativeDictionary.ensureUnique(isUnique:capacity:)(v66, v71);
            uint64_t v18 = v151;
            uint64_t v5 = v161;
            if (v74)
            {
              unint64_t v75 = sub_100042ADC(v17, *((uint64_t *)&v17 + 1));
              if ((v73 & 1) != (v76 & 1)) {
                goto LABEL_147;
              }
              unint64_t v72 = v75;
            }
            uint64_t v158 = v166;
            if (v73)
            {
              uint64_t v77 = *(void *)(v166 + 56);
              swift_bridgeObjectRelease();
              *(void *)(v77 + 8 * v72) = v163;
            }
            else
            {
              sub_1000495A8();
              *(void *)(v79 + 8 * v72) = v163;
              uint64_t v80 = *(void *)(v78 + 16);
              BOOL v64 = __OFADD__(v80, 1);
              uint64_t v81 = v80 + 1;
              if (v64) {
                goto LABEL_141;
              }
              *(void *)(v78 + 16) = v81;
              swift_bridgeObjectRetain();
            }

            swift_bridgeObjectRelease();
            goto LABEL_37;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v46 = (void *)Dictionary.init(dictionaryLiteral:)();
        goto LABEL_56;
      }
      swift_bridgeObjectRetain();
      unint64_t v40 = sub_100047310();
      if (v41) {
        sub_100043520(v38[7] + 32 * v40, (uint64_t)&v166);
      }
      else {
        sub_100046438();
      }
      swift_bridgeObjectRelease();
      if (!v167[1]) {
        goto LABEL_47;
      }
      sub_100043478(&qword_10022D6F0);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_48;
      }
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      unsigned __int8 v43 = [v39 isEqualToDictionary:isa];

      if ((v43 & 1) == 0) {
        break;
      }
      swift_bridgeObjectRelease();

      unint64_t v10 = v5;
      uint64_t v5 = v161;
      int64_t v21 = v162;
    }
    if (*(void *)(v158 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v47 = sub_100042ADC(v17, *((uint64_t *)&v17 + 1));
      if (v48)
      {
        uint64_t v49 = v158;
        uint64_t v50 = *(void **)(*(void *)(v158 + 56) + 8 * v47);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_78;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v49 = v158;
    uint64_t v50 = (void *)Dictionary.init(dictionaryLiteral:)();
LABEL_78:
    v167[1] = v37;
    *(void *)&long long v166 = v39;
    sub_100043510(&v166, v165);
    id v150 = v39;
    char v159 = swift_isUniquelyReferenced_nonNull_native();
    v164 = v50;
    sub_100047310();
    sub_1000452FC();
    Swift::Int v86 = v84 + v85;
    if (__OFADD__(v84, v85)) {
      goto LABEL_142;
    }
    unint64_t v87 = v82;
    char v88 = v83;
    sub_100043478(&qword_10022E5B0);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(v159, v86))
    {
      unint64_t v89 = sub_100047310();
      if ((v88 & 1) != (v90 & 1)) {
        goto LABEL_147;
      }
      unint64_t v87 = v89;
    }
    if (v88)
    {
      v91 = (_OWORD *)(v50[7] + 32 * v87);
      sub_10004377C(v164[7] + 32 * v87);
      sub_100043510(v165, v91);
      goto LABEL_86;
    }
    sub_10004DE54((uint64_t)&v50[v87 >> 6]);
    v92 = (void *)(v50[6] + 16 * v87);
    void *v92 = v36;
    v92[1] = v35;
    sub_100043510(v165, (_OWORD *)(v50[7] + 32 * v87));
    uint64_t v93 = v50[2];
    BOOL v64 = __OFADD__(v93, 1);
    uint64_t v94 = v93 + 1;
    if (v64) {
      break;
    }
    v50[2] = v94;
    swift_bridgeObjectRetain();
LABEL_86:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    char v95 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v166 = v49;
    sub_100042ADC(v17, *((uint64_t *)&v17 + 1));
    sub_1000452FC();
    Swift::Int v100 = v98 + v99;
    if (__OFADD__(v98, v99)) {
      goto LABEL_143;
    }
    unint64_t v101 = v96;
    char v102 = v97;
    unint64_t v10 = v5;
    sub_100043478(&qword_10022E9F0);
    Swift::Bool v103 = _NativeDictionary.ensureUnique(isUnique:capacity:)(v95, v100);
    uint64_t v18 = v151;
    uint64_t v5 = v161;
    if (v103)
    {
      unint64_t v104 = sub_100042ADC(v17, *((uint64_t *)&v17 + 1));
      if ((v102 & 1) != (v105 & 1)) {
        goto LABEL_147;
      }
      unint64_t v101 = v104;
    }
    uint64_t v158 = v166;
    if (v102)
    {
      uint64_t v106 = *(void *)(v166 + 56);
      swift_bridgeObjectRelease();
      *(void *)(v106 + 8 * v101) = v164;
    }
    else
    {
      sub_1000495A8();
      *(void *)(v108 + 8 * v101) = v164;
      uint64_t v109 = *(void *)(v107 + 16);
      BOOL v64 = __OFADD__(v109, 1);
      uint64_t v110 = v109 + 1;
      if (v64) {
        goto LABEL_146;
      }
      *(void *)(v107 + 16) = v110;
      swift_bridgeObjectRetain();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v21 = v162;
  }
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10012C328()
{
  if (qword_10022C430 != -1) {
    swift_once();
  }
  v0 = (void *)qword_100244090;
  unint64_t v1 = self;
  id v2 = v0;
  id v3 = [v1 defaultCenter];
  v5[4] = sub_10004D510(0, &qword_1002314D0);
  v5[5] = &off_1002145C0;
  v5[0] = v2;
  v5[1] = v3;
  sub_10012C3F8();
  return sub_10012DC28((uint64_t)v5);
}

uint64_t sub_10012C3F8()
{
  uint64_t v1 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v1 - 8);
  unint64_t v2 = sub_10012C9B4(0xD000000000000010, (void *)0x80000001001CA6C0);
  uint64_t v4 = v3;
  if (qword_10022C4C0 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v5 = type metadata accessor for LogMessage();
  sub_100044798(v5);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v26 = &type metadata for MercuryCacheUpdateReporter;
  uint64_t v24 = swift_allocObject();
  sub_10012DC98((uint64_t)v0, v24 + 16);
  id v6 = (id)AMSLogKey();
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100049788(&v24, (uint64_t)v26);
    uint64_t DynamicType = swift_getDynamicType();
    MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v22[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v22);
    sub_100020E44();
    MetatypeMetadata = &type metadata for String;
    v22[0] = v8;
    v22[1] = v10;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v22);
    v12._countAndFlagsBits = 93;
    v12._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    sub_100011DB4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    sub_100049788(&v24, (uint64_t)v26);
    uint64_t v13 = swift_getDynamicType();
    MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v22[0] = v13;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v22);
    v14._countAndFlagsBits = 58;
    v14._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    sub_100011DB4();
  }
  sub_10004377C((uint64_t)&v24);
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease();
  sub_100041FFC();
  uint64_t v24 = v15;
  unint64_t v25 = v16;
  v17._countAndFlagsBits = v2;
  v17._object = v4;
  String.append(_:)(v17);
  uint64_t v26 = (ValueMetadata *)&type metadata for String;
  static LogMessage.safe(_:)();
  sub_1000423CC((uint64_t)&v24);
  uint64_t v18 = static os_log_type_t.default.getter();
  sub_10004841C(v18);
  swift_bridgeObjectRelease();
  uint64_t v20 = v0[4];
  uint64_t v19 = v0[5];
  sub_100049788(v0 + 1, v20);
  (*(void (**)(unint64_t, void *, uint64_t, uint64_t))(v19 + 8))(v2, v4, v20, v19);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10012C758(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  if (qword_10022C430 != -1) {
    swift_once();
  }
  id v6 = (void *)qword_100244090;
  uint64_t v7 = self;
  id v8 = v6;
  id v9 = [v7 defaultCenter];
  v11[4] = sub_10004D510(0, &qword_1002314D0);
  v11[5] = &off_1002145C0;
  v11[0] = v8;
  v11[1] = v9;
  a3(a1, a2);
  return sub_10012DC28((uint64_t)v11);
}

uint64_t sub_10012C848(uint64_t a1, uint64_t a2)
{
  sub_10012D380(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_10012D224, 0);
  uint64_t v3 = v2;
  if (*(void *)(v2 + 16))
  {
    sub_100043478(&qword_100231DE0);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1001C4B80;
    sub_10004D510(0, &qword_10022EC18);
    id v5 = sub_1000488A4();
    [v5 setAllowsResponse:0];
    *(void *)(v4 + 32) = v5;
    specialized Array._endMutation()();
    sub_10012CA34(0xD000000000000013, 0x80000001001CA700, v3, v4);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_10012C958(uint64_t a1, uint64_t a2)
{
  return sub_10012C758(a1, a2, (void (*)(uint64_t, uint64_t))sub_10012B2D4);
}

uint64_t sub_10012C988(uint64_t a1, uint64_t a2)
{
  return sub_10012C758(a1, a2, (void (*)(uint64_t, uint64_t))sub_10012C848);
}

unint64_t sub_10012C9B4(uint64_t a1, void *a2)
{
  _StringGuts.grow(_:)(49);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = a1;
  v4._object = a2;
  String.append(_:)(v4);
  return 0xD00000000000002FLL;
}

uint64_t sub_10012CA34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for DispatchWorkItemFlags();
  sub_100020DEC();
  uint64_t v50 = v7;
  uint64_t v51 = v6;
  __chkstk_darwin(v6);
  sub_100040A70();
  uint64_t v48 = v8;
  uint64_t v49 = type metadata accessor for DispatchQoS();
  sub_100020DEC();
  uint64_t v47 = v9;
  __chkstk_darwin(v10);
  sub_100040A70();
  uint64_t v46 = v11;
  uint64_t v12 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v12 - 8);
  sub_100048238(v13, v43);
  id v14 = [objc_allocWithZone((Class)AMSEngagementEnqueueRequest) init];
  sub_100043478(&qword_10022D798);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1001C3110;
  sub_100043478((uint64_t *)&unk_10022E570);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3130;
  sub_100049A84();
  *(void *)(inited + 96) = &type metadata for String;
  sub_100041FFC();
  *(void *)(inited + 72) = v17;
  *(void *)(inited + 80) = v18;
  sub_100049A84();
  *(void *)(inited + 168) = &type metadata for String;
  strcpy((char *)(inited + 144), "amsengagementd");
  *(unsigned char *)(inited + 159) = -18;
  sub_100041FFC();
  *(void *)&long long v59 = 0xD000000000000012;
  *((void *)&v59 + 1) = v19;
  sub_100049A84();
  sub_100043478(&qword_1002314D8);
  uint64_t v20 = swift_initStackObject();
  *(_OWORD *)(v20 + 16) = xmmword_1001C3110;
  *(void *)(v20 + 32) = a1;
  *(void *)(v20 + 40) = a2;
  sub_100043478(&qword_1002314E0);
  uint64_t v21 = swift_initStackObject();
  *(_OWORD *)(v21 + 16) = xmmword_1001C3110;
  *(void *)(v21 + 32) = 0x64657461647075;
  *(void *)(v21 + 40) = 0xE700000000000000;
  *(void *)(v21 + 48) = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100043478(&qword_10022D6F0);
  *(void *)(v20 + 48) = Dictionary.init(dictionaryLiteral:)();
  sub_100043478(&qword_10022E688);
  uint64_t v22 = Dictionary.init(dictionaryLiteral:)();
  *(void *)(inited + 240) = sub_100043478(&qword_100230F80);
  *(void *)(inited + 216) = v22;
  *(void *)(v15 + 32) = Dictionary.init(dictionaryLiteral:)();
  sub_1000BD07C(v15, v14);
  id v23 = [self currentProcess];
  [v14 setClientInfo:v23];

  sub_10014CB38(a4, v14);
  if (qword_10022C4C0 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v24 = type metadata accessor for LogMessage();
  sub_100044798(v24);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  *((void *)&v60 + 1) = &type metadata for MercuryCacheUpdateReporter;
  *(void *)&long long v59 = swift_allocObject();
  sub_10012DC98(v52, v59 + 16);
  id v25 = (id)AMSLogKey();
  if (v25)
  {
    uint64_t v26 = v25;
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v29 = v28;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100049788(&v59, *((uint64_t *)&v60 + 1));
    uint64_t DynamicType = swift_getDynamicType();
    MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v53 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v53);
    sub_100020E44();
    MetatypeMetadata = &type metadata for String;
    uint64_t v53 = v27;
    uint64_t v54 = v29;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v53);
    v31._countAndFlagsBits = 93;
    v31._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v31);
    sub_100011DB4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    sub_100049788(&v59, *((uint64_t *)&v60 + 1));
    uint64_t v32 = swift_getDynamicType();
    MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v53 = v32;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v53);
    v33._countAndFlagsBits = 58;
    v33._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v33);
    sub_100011DB4();
  }
  sub_10004377C((uint64_t)&v59);
  *(void *)&long long v59 = 0;
  *((void *)&v59 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  sub_100041FFC();
  *(void *)&long long v59 = v34;
  *((void *)&v59 + 1) = v35;
  uint64_t v53 = sub_100038AF8(v14);
  sub_100043478(&qword_1002314E8);
  v36._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v36);
  swift_bridgeObjectRelease();
  *((void *)&v60 + 1) = &type metadata for String;
  static LogMessage.safe(_:)();
  sub_1000423CC((uint64_t)&v59);
  uint64_t v37 = static os_log_type_t.info.getter();
  sub_10004841C(v37);
  swift_bridgeObjectRelease();
  if (qword_10022C598 != -1) {
    swift_once();
  }
  sub_10012DC98(v52, (uint64_t)&v59);
  uint64_t v38 = swift_allocObject();
  long long v39 = v60;
  *(_OWORD *)(v38 + 16) = v59;
  *(_OWORD *)(v38 + 32) = v39;
  *(_OWORD *)(v38 + 48) = v61;
  *(void *)(v38 + 64) = v14;
  unint64_t v57 = sub_10012DD18;
  uint64_t v58 = v38;
  uint64_t v53 = (uint64_t)_NSConcreteStackBlock;
  uint64_t v54 = 1107296256;
  uint64_t v55 = sub_10002CD0C;
  MetatypeMetadata = &unk_100214660;
  unint64_t v40 = _Block_copy(&v53);
  id v41 = v14;
  static DispatchQoS.unspecified.getter();
  sub_10002352C();
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_1000234D8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v40);

  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v51);
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v49);
  return swift_release();
}

uint64_t sub_10012D1DC(uint64_t a1, uint64_t a2)
{
  swift_getObjectType();
  sub_10006D26C(a2);
  return swift_release();
}

id sub_10012D224(uint64_t a1, uint64_t a2)
{
  uint64_t v9 = a2;
  uint64_t v10 = a1;
  uint64_t v7 = 1635018093;
  unint64_t v8 = 0xE400000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  sub_10008A5B4(&v7, v6);
  sub_1000434BC((uint64_t)v6);
  sub_1000423CC((uint64_t)&v7);
  uint64_t v7 = 1635018093;
  unint64_t v8 = 0xE400000000000000;
  AnyHashable.init<A>(_:)();
  sub_10008A5B4(&v7, v6);
  sub_1000434BC((uint64_t)v6);
  sub_1000423CC((uint64_t)&v7);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  Class v3 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v4 = [(objc_class *)isa isEqualToDictionary:v3];

  return v4;
}

void sub_10012D380(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  if (!a1)
  {
    swift_bridgeObjectRetain();
    return;
  }
  BOOL v64 = _swiftEmptyDictionarySingleton;
  sub_10005370C(a1, v65);
  uint64_t v5 = v65[0];
  uint64_t v53 = v65[1];
  int64_t v6 = v65[3];
  unint64_t v7 = v65[4];
  int64_t v8 = (unint64_t)(v65[2] + 64) >> 6;
  uint64_t v51 = a1;
  swift_bridgeObjectRetain_n();
  uint64_t v9 = _swiftEmptyArrayStorage;
  while (1)
  {
    if (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v11 = v10 | (v6 << 6);
      goto LABEL_23;
    }
    int64_t v12 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
LABEL_63:
      __break(1u);
      return;
    }
    if (v12 >= v8) {
      goto LABEL_31;
    }
    unint64_t v13 = *(void *)(v53 + 8 * v12);
    int64_t v14 = v6 + 1;
    if (!v13)
    {
      if (v6 + 2 >= v8) {
        goto LABEL_31;
      }
      sub_100045FE8();
      if (!v13)
      {
        if (v15 + 2 >= v8) {
          goto LABEL_31;
        }
        sub_100045FE8();
        if (!v13)
        {
          if (v16 + 3 >= v8) {
            goto LABEL_31;
          }
          sub_100045FE8();
          if (!v13)
          {
            if (v17 + 4 >= v8) {
              goto LABEL_31;
            }
            sub_100045FE8();
            if (!v13)
            {
              int64_t v14 = v18 + 5;
              if (v18 + 5 >= v8) {
                goto LABEL_31;
              }
              unint64_t v13 = *(void *)(v53 + 8 * v14);
              if (!v13) {
                break;
              }
            }
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
    int64_t v6 = v14;
LABEL_23:
    sub_1000433B4(*(void *)(v5 + 48) + 40 * v11, (uint64_t)&v66);
    long long v61 = v66;
    long long v62 = v67;
    unint64_t v63 = v68;
    sub_1000433B4((uint64_t)&v61, (uint64_t)v59);
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v55 = 0;
      uint64_t v56 = 0;
    }
    sub_1000434BC((uint64_t)&v61);
    uint64_t v20 = v56;
    if (v56)
    {
      uint64_t v21 = v55;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000502C4(0, v9[2] + 1, 1, (uint64_t)v9);
        uint64_t v9 = v25;
      }
      unint64_t v23 = v9[2];
      unint64_t v22 = v9[3];
      if (v23 >= v22 >> 1)
      {
        sub_1000502C4(v22 > 1, v23 + 1, 1, (uint64_t)v9);
        uint64_t v9 = v26;
      }
      v9[2] = v23 + 1;
      uint64_t v24 = &v9[2 * v23];
      v24[4] = v21;
      v24[5] = v20;
    }
  }
  int64_t v19 = v6 + 7;
  while (v19 < v8)
  {
    unint64_t v13 = *(void *)(v53 + 8 * v19++);
    if (v13)
    {
      int64_t v14 = v19 - 1;
      goto LABEL_22;
    }
  }
LABEL_31:
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v54 = sub_10002318C((uint64_t)v9);
  sub_10005370C(a2, &v66);
  long long v27 = v66;
  int64_t v28 = *((void *)&v67 + 1);
  unint64_t v29 = v68;
  int64_t v30 = (unint64_t)(v67 + 64) >> 6;
  swift_bridgeObjectRetain_n();
  Swift::String v31 = _swiftEmptyArrayStorage;
  while (2)
  {
    if (v29)
    {
      unint64_t v32 = __clz(__rbit64(v29));
      v29 &= v29 - 1;
      unint64_t v33 = v32 | (v28 << 6);
LABEL_52:
      sub_1000433B4(*(void *)(v27 + 48) + 40 * v33, (uint64_t)&v61);
      v59[0] = v61;
      v59[1] = v62;
      unint64_t v60 = v63;
      sub_1000433B4((uint64_t)v59, (uint64_t)&v55);
      if ((swift_dynamicCast() & 1) == 0)
      {
        uint64_t v57 = 0;
        uint64_t v58 = 0;
      }
      sub_1000434BC((uint64_t)v59);
      uint64_t v38 = v58;
      if (v58)
      {
        uint64_t v39 = v57;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1000502C4(0, v31[2] + 1, 1, (uint64_t)v31);
          Swift::String v31 = v43;
        }
        unint64_t v41 = v31[2];
        unint64_t v40 = v31[3];
        if (v41 >= v40 >> 1)
        {
          sub_1000502C4(v40 > 1, v41 + 1, 1, (uint64_t)v31);
          Swift::String v31 = v44;
        }
        v31[2] = v41 + 1;
        int64_t v42 = &v31[2 * v41];
        v42[4] = v39;
        v42[5] = v38;
      }
      continue;
    }
    break;
  }
  int64_t v34 = v28 + 1;
  if (__OFADD__(v28, 1)) {
    goto LABEL_63;
  }
  if (v34 >= v30) {
    goto LABEL_60;
  }
  unint64_t v35 = *(void *)(*((void *)&v27 + 1) + 8 * v34);
  int64_t v36 = v28 + 1;
  if (v35) {
    goto LABEL_51;
  }
  int64_t v36 = v28 + 2;
  if (v28 + 2 >= v30) {
    goto LABEL_60;
  }
  unint64_t v35 = *(void *)(*((void *)&v27 + 1) + 8 * v36);
  if (v35) {
    goto LABEL_51;
  }
  int64_t v36 = v28 + 3;
  if (v28 + 3 >= v30) {
    goto LABEL_60;
  }
  unint64_t v35 = *(void *)(*((void *)&v27 + 1) + 8 * v36);
  if (v35) {
    goto LABEL_51;
  }
  int64_t v36 = v28 + 4;
  if (v28 + 4 >= v30) {
    goto LABEL_60;
  }
  unint64_t v35 = *(void *)(*((void *)&v27 + 1) + 8 * v36);
  if (v35) {
    goto LABEL_51;
  }
  int64_t v36 = v28 + 5;
  if (v28 + 5 >= v30) {
    goto LABEL_60;
  }
  unint64_t v35 = *(void *)(*((void *)&v27 + 1) + 8 * v36);
  if (v35) {
    goto LABEL_51;
  }
  int64_t v36 = v28 + 6;
  if (v28 + 6 >= v30) {
    goto LABEL_60;
  }
  unint64_t v35 = *(void *)(*((void *)&v27 + 1) + 8 * v36);
  if (v35)
  {
LABEL_51:
    unint64_t v29 = (v35 - 1) & v35;
    unint64_t v33 = __clz(__rbit64(v35)) + (v36 << 6);
    int64_t v28 = v36;
    goto LABEL_52;
  }
  int64_t v37 = v28 + 7;
  while (v37 < v30)
  {
    unint64_t v35 = *(void *)(*((void *)&v27 + 1) + 8 * v37++);
    if (v35)
    {
      int64_t v36 = v37 - 1;
      goto LABEL_51;
    }
  }
LABEL_60:
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v45 = sub_10002318C((uint64_t)v31);
  swift_bridgeObjectRetain();
  uint64_t v46 = sub_10012EEF0(v45, v54);
  sub_10012A8D8((uint64_t)v46, &v64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v47 = sub_10012EEF0(v54, v45);
  swift_bridgeObjectRetain();
  sub_10012AC00((uint64_t)v47, &v64, a2);
  swift_bridgeObjectRelease();
  uint64_t v48 = sub_1001330A4(v45, v54);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100050578((uint64_t)a3);
  sub_10012B0AC(v48, v51, a2, a3, a4, (uint64_t)&v64);
  swift_release();
}

uint64_t sub_10012D8D4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v11 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v18 = *a1;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)v19, a2, &v20);
  sub_1000434BC((uint64_t)v19);
  if (!v21) {
    return sub_1000423CC((uint64_t)&v20);
  }
  uint64_t v12 = sub_100043478(&qword_10022D6F0);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    return result;
  }
  uint64_t v22 = a6;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)v19, a3, &v20);
  sub_1000434BC((uint64_t)v19);
  if (!v21)
  {
    swift_bridgeObjectRelease();
    return sub_1000423CC((uint64_t)&v20);
  }
  if (swift_dynamicCast())
  {
    if (a4)
    {
      swift_retain();
      char v14 = a4(v18, v11);
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
      {
        *(void *)&long long v20 = v11;
        *((void *)&v20 + 1) = v10;
        swift_bridgeObjectRetain();
        AnyHashable.init<A>(_:)();
        uint64_t v21 = v12;
        *(void *)&long long v20 = v11;
        sub_100088240((uint64_t)&v20, (uint64_t)v19);
        return sub_10003E0EC((uint64_t)a4);
      }
      sub_10003E0EC((uint64_t)a4);
    }
    else
    {
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      Class v16 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      unsigned __int8 v17 = [(objc_class *)isa isEqualToDictionary:v16];

      if ((v17 & 1) == 0)
      {
        *(void *)&long long v20 = v11;
        *((void *)&v20 + 1) = v10;
        swift_bridgeObjectRetain();
        AnyHashable.init<A>(_:)();
        uint64_t v21 = v12;
        *(void *)&long long v20 = v11;
        return sub_100088240((uint64_t)&v20, (uint64_t)v19);
      }
    }
  }
  return swift_bridgeObjectRelease();
}

void sub_10012DB9C()
{
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 postNotificationName:v1 object:0 userInfo:0 deliverImmediately:1];
}

void sub_10012DBF4()
{
}

ValueMetadata *type metadata accessor for LiveMercuryCacheUpdateReporter()
{
  return &type metadata for LiveMercuryCacheUpdateReporter;
}

uint64_t sub_10012DC28(uint64_t a1)
{
  return a1;
}

uint64_t sub_10012DC58()
{
  swift_unknownObjectRelease();
  sub_10004377C(v0 + 24);
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10012DC98(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10012DCD0()
{
  swift_unknownObjectRelease();
  sub_10004377C(v0 + 24);

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10012DD18()
{
  return sub_10012D1DC(v0 + 16, *(void *)(v0 + 64));
}

uint64_t destroy for MercuryCacheUpdateReporter(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  swift_unknownObjectRelease();
  return sub_10004377C(v1);
}

uint64_t initializeWithCopy for MercuryCacheUpdateReporter(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = a2 + 8;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  uint64_t v5 = v4;
  int64_t v6 = **(void (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  swift_unknownObjectRetain();
  v6(a1 + 8, v3, v5);
  return a1;
}

void *assignWithCopy for MercuryCacheUpdateReporter(void *a1, void *a2)
{
  uint64_t v3 = a2 + 1;
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  sub_100119F88(a1 + 1, v3);
  return a1;
}

__n128 initializeWithTake for MercuryCacheUpdateReporter(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MercuryCacheUpdateReporter(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  sub_10004377C(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for MercuryCacheUpdateReporter(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MercuryCacheUpdateReporter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MercuryCacheUpdateReporter()
{
  return &type metadata for MercuryCacheUpdateReporter;
}

uint64_t sub_10012DF3C(uint64_t a1, void (*a2)(uint64_t *, void *), uint64_t a3, uint64_t a4)
{
  uint64_t v23 = a1;
  sub_10005370C(a4, v22);
  uint64_t v6 = v22[0];
  uint64_t v20 = v22[1];
  int64_t v7 = v22[3];
  unint64_t v8 = v22[4];
  int64_t v9 = (unint64_t)(v22[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  if (!v8) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v12 = v11 | (v7 << 6);
  while (1)
  {
    Class v16 = (void *)(*(void *)(v6 + 48) + 16 * v12);
    uint64_t v17 = v16[1];
    uint64_t v18 = *(void *)(*(void *)(v6 + 56) + 8 * v12);
    v21[0] = *v16;
    v21[1] = v17;
    v21[2] = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(&v23, v21);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v13 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      break;
    }
    if (v13 >= v9) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v20 + 8 * v13);
    if (!v14)
    {
      int64_t v15 = v7 + 2;
      if (v7 + 2 >= v9) {
        goto LABEL_24;
      }
      unint64_t v14 = *(void *)(v20 + 8 * v15);
      if (v14) {
        goto LABEL_12;
      }
      int64_t v15 = v7 + 3;
      if (v7 + 3 >= v9) {
        goto LABEL_24;
      }
      unint64_t v14 = *(void *)(v20 + 8 * v15);
      if (v14) {
        goto LABEL_12;
      }
      int64_t v15 = v7 + 4;
      if (v7 + 4 >= v9) {
        goto LABEL_24;
      }
      unint64_t v14 = *(void *)(v20 + 8 * v15);
      if (v14)
      {
LABEL_12:
        int64_t v13 = v15;
      }
      else
      {
        int64_t v13 = v7 + 5;
        if (v7 + 5 >= v9) {
          goto LABEL_24;
        }
        unint64_t v14 = *(void *)(v20 + 8 * v13);
        if (!v14)
        {
          int64_t v19 = v7 + 6;
          while (v19 < v9)
          {
            unint64_t v14 = *(void *)(v20 + 8 * v19++);
            if (v14)
            {
              int64_t v13 = v19 - 1;
              goto LABEL_13;
            }
          }
LABEL_24:
          swift_release();
          return v23;
        }
      }
    }
LABEL_13:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v13 << 6);
    int64_t v7 = v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_10012E130(uint64_t a1)
{
  *(void *)&long long v3 = 0x73746C75736572;
  *((void *)&v3 + 1) = 0xE700000000000000;
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)v4, a1, &v3);
  sub_1000434BC((uint64_t)v4);
  sub_100043478(&qword_10022F490);
  sub_100043478(&qword_10022E688);
  if (swift_dynamicCast()) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_10012E1E4(char a1, uint64_t a2)
{
  return sub_10012E1FC(a1, a2);
}

uint64_t sub_10012E1F0(char a1, uint64_t a2)
{
  return sub_10012E1FC(a1, a2);
}

uint64_t sub_10012E1FC(char a1, uint64_t a2)
{
  *(void *)&long long v7 = sub_10011BA64(a1);
  *((void *)&v7 + 1) = v3;
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)v8, a2, &v7);
  sub_1000434BC((uint64_t)v8);
  sub_100043478(&qword_10022F490);
  int v4 = swift_dynamicCast();
  uint64_t v5 = v9;
  if (!v4) {
    return 0;
  }
  return v5;
}

uint64_t sub_10012E29C@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)&long long v9 = sub_10011BA64(a1);
  *((void *)&v9 + 1) = v5;
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)v10, a2, &v9);
  sub_1000434BC((uint64_t)v10);
  sub_100043478(&qword_10022F490);
  uint64_t v6 = type metadata accessor for Date();
  int v7 = swift_dynamicCast();
  return sub_100021AC0(a3, v7 ^ 1u, 1, v6);
}

uint64_t sub_10012E354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  updated = (int *)type metadata accessor for MercuryCacheUpdateResponse();
  sub_100043B1C();
  __chkstk_darwin(v13);
  int64_t v15 = (uint64_t *)&v23[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_10012E130(a1);
  uint64_t v17 = swift_bridgeObjectRelease();
  if (v16)
  {
    __chkstk_darwin(v17);
    *(void *)&v23[-32] = a2;
    *(double *)&v23[-24] = a5;
    *(void *)&v23[-16] = a3;
    *(double *)&v23[-8] = a6;
    uint64_t v18 = sub_10012DF3C((uint64_t)_swiftEmptyDictionarySingleton, (void (*)(uint64_t *, void *))sub_10012E7B8, (uint64_t)&v23[-48], v16);
    swift_bridgeObjectRelease();
    uint64_t *v15 = v18;
    int64_t v19 = (char *)v15 + updated[5];
    type metadata accessor for Date();
    sub_100043B1C();
    (*(void (**)(char *, uint64_t))(v20 + 32))(v19, a2);
    *(double *)((char *)v15 + updated[6]) = a5;
    *(uint64_t *)((char *)v15 + updated[7]) = a3;
    *(double *)((char *)v15 + updated[8]) = a6;
    sub_10012E7E0((uint64_t)v15, a4);
    return sub_100021AC0(a4, 0, 1, (uint64_t)updated);
  }
  else
  {
    type metadata accessor for Date();
    sub_100043B1C();
    (*(void (**)(uint64_t))(v22 + 8))(a2);
    return sub_100021AC0(a4, 1, 1, (uint64_t)updated);
  }
}

uint64_t type metadata accessor for MercuryCacheUpdateResponse()
{
  uint64_t result = qword_100231550;
  if (!qword_100231550) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10012E5A8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  v25[0] = a4;
  v25[1] = a1;
  uint64_t v10 = sub_100043478(&qword_10022E670);
  __chkstk_darwin(v10 - 8);
  unint64_t v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for MercuryCacheUpdateData(0);
  __chkstk_darwin(updated - 8);
  int64_t v19 = (double *)((char *)v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = *a2;
  uint64_t v21 = a2[1];
  uint64_t v22 = a2[2];
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a3, v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001264E4(v20, v21, v22, (uint64_t)v16, v25[0], v19, a5, a6);
  swift_bridgeObjectRetain();
  sub_1001261A0(v12);
  uint64_t v23 = type metadata accessor for MercuryCacheUpdateData.DataKind(0);
  sub_100021AC0((uint64_t)v12, 0, 1, v23);
  sub_100088744((uint64_t)v12, v20, v21);
  return sub_10012E844((uint64_t)v19);
}

uint64_t sub_10012E7B8(uint64_t a1, uint64_t *a2)
{
  return sub_10012E5A8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 32), *(double *)(v2 + 24), *(double *)(v2 + 40));
}

uint64_t sub_10012E7E0(uint64_t a1, uint64_t a2)
{
  uint64_t updated = type metadata accessor for MercuryCacheUpdateResponse();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 32))(a2, a1, updated);
  return a2;
}

uint64_t sub_10012E844(uint64_t a1)
{
  uint64_t updated = type metadata accessor for MercuryCacheUpdateData(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(updated - 8) + 8))(a1, updated);
  return a1;
}

uint64_t *sub_10012E8A0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    int v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    int v7 = a1;
    uint64_t v8 = a3[5];
    long long v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    unint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    *(uint64_t *)((char *)v7 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v7 + v13) = *(uint64_t *)((char *)a2 + v13);
    *(uint64_t *)((char *)v7 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  }
  return v7;
}

uint64_t sub_10012E9B4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *sub_10012EA2C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  int v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

void *sub_10012EAF4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  int v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

void *sub_10012EBB4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  int v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

void *sub_10012EC60(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  int v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_10012ED14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10012ED28);
}

uint64_t sub_10012ED28(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 20);
    return sub_10004FD40(v9, a2, v8);
  }
}

uint64_t sub_10012EDB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10012EDC4);
}

void *sub_10012EDC4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 20);
    return (void *)sub_100021AC0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_10012EE44()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t *sub_10012EEF0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) <= *(void *)(a2 + 16) >> 3)
  {
    sub_10016D2A4(a1);
    return (unint64_t *)a2;
  }
  else
  {
    return sub_10012F9F8(a1, a2);
  }
}

uint64_t sub_10012EF54()
{
  if (qword_10022C4C0 != -1) {
    swift_once();
  }
  qword_100231598 = qword_100244128;
  return swift_retain();
}

uint64_t sub_10012EFB8(uint64_t a1)
{
  v2[28] = a1;
  v2[29] = v1;
  type metadata accessor for LogMessage.StringInterpolation();
  v2[30] = swift_task_alloc();
  return _swift_task_switch(sub_10012F048, v1, 0);
}

uint64_t sub_10012F048()
{
  uint64_t v1 = v0[28];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v2 = swift_bridgeObjectRetain();
  int v3 = sub_10012EEF0(v2, v1);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_10016B680(v4);
  swift_endAccess();
  if (qword_10022C540 != -1) {
    swift_once();
  }
  uint64_t v5 = v0[29];
  sub_100043478(&qword_10022E560);
  uint64_t v6 = type metadata accessor for LogMessage();
  sub_100044798(v6);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  v0[13] = type metadata accessor for MercuryCacheUpdateStateManager();
  v0[10] = v5;
  swift_retain();
  id v7 = (id)AMSLogKey();
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v21 = v3;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100049788(v0 + 10, v0[13]);
    uint64_t DynamicType = swift_getDynamicType();
    v0[9] = swift_getMetatypeMetadata();
    v0[6] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)(v0 + 6));
    sub_100020E44();
    v0[17] = &type metadata for String;
    v0[14] = v9;
    v0[15] = v11;
    int v3 = v21;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)(v0 + 14));
    v13._countAndFlagsBits = 93;
    v13._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    sub_100049788(v0 + 10, v0[13]);
    uint64_t v14 = swift_getDynamicType();
    v0[5] = swift_getMetatypeMetadata();
    v0[2] = v14;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)(v0 + 2));
    v15._countAndFlagsBits = 58;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)(v0 + 10));
  sub_100049AA0();
  uint64_t v22 = v16;
  swift_bridgeObjectRetain();
  v17._countAndFlagsBits = Set.description.getter();
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0[21] = &type metadata for String;
  v0[18] = v22;
  v0[19] = 0xEA0000000000203ALL;
  static LogMessage.safe(_:)();
  sub_1000423CC((uint64_t)(v0 + 18));
  uint64_t v18 = static os_log_type_t.info.getter();
  sub_10004841C(v18);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  int64_t v19 = (uint64_t (*)(unint64_t *))v0[1];
  return v19(v3);
}

uint64_t sub_10012F3E8(uint64_t a1)
{
  v2[45] = a1;
  v2[46] = v1;
  type metadata accessor for LogMessage.StringInterpolation();
  v2[47] = swift_task_alloc();
  return _swift_task_switch(sub_10012F478, v1, 0);
}

uint64_t sub_10012F478()
{
  uint64_t v1 = (uint64_t)(v0 + 10);
  if (qword_10022C540 != -1) {
    swift_once();
  }
  long long v66 = v0 + 18;
  uint64_t v2 = v0[46];
  uint64_t v60 = qword_100231598;
  uint64_t v3 = sub_100043478(&qword_10022E560);
  uint64_t v4 = type metadata accessor for LogMessage();
  sub_100044798(v4);
  uint64_t v6 = *(void *)(v5 + 72);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v8 + 32) & ~v8;
  uint64_t v64 = v3;
  uint64_t v61 = v8 | 7;
  uint64_t v62 = v9 + 2 * v6;
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1001C3120;
  uint64_t v63 = v9;
  uint64_t v58 = v10 + v9;
  uint64_t updated = type metadata accessor for MercuryCacheUpdateStateManager();
  v0[5] = updated;
  v0[2] = v2;
  swift_retain();
  id v11 = (id)AMSLogKey();
  if (v11)
  {
    unint64_t v12 = v11;
    uint64_t v57 = (uint64_t)(v0 + 10);
    uint64_t v13 = (uint64_t)(v0 + 2);
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100049788(v0 + 2, updated);
    uint64_t DynamicType = swift_getDynamicType();
    v0[41] = swift_getMetatypeMetadata();
    v0[38] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)(v0 + 38));
    sub_100020E44();
    v0[17] = &type metadata for String;
    v0[14] = v14;
    v0[15] = v16;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    uint64_t v1 = (uint64_t)(v0 + 10);
    sub_1000423CC((uint64_t)(v0 + 14));
    v18._countAndFlagsBits = 93;
    v18._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    sub_100049788(v0 + 2, updated);
    uint64_t v13 = (uint64_t)(v0 + 2);
    uint64_t v19 = swift_getDynamicType();
    v0[9] = swift_getMetatypeMetadata();
    v0[6] = v19;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)(v0 + 6));
    v20._countAndFlagsBits = 58;
    v20._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    LogMessage.init(stringInterpolation:)();
  }
  uint64_t v21 = v0[45];
  uint64_t v22 = v0[46];
  sub_10004377C(v13);
  v23._countAndFlagsBits = Set.description.getter();
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  v0[13] = &type metadata for String;
  v0[10] = 0x676E69766F6D6572;
  v0[11] = 0xEA0000000000203ALL;
  static LogMessage.safe(_:)();
  sub_1000423CC(v1);
  uint64_t v24 = static os_log_type_t.info.getter();
  sub_10004841C(v24);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_10016D2A4(v21);
  swift_endAccess();
  uint64_t v65 = qword_100231598;
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1001C3120;
  uint64_t v26 = v25 + v63;
  v0[21] = updated;
  v0[18] = v22;
  swift_retain();
  id v27 = (id)AMSLogKey();
  if (v27)
  {
    int64_t v28 = v27;
    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v31 = v30;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    uint64_t v40 = sub_100048254(v32, v33, v34, v35, v36, v37, v38, v39, v57, v58, 2, 4, v59, v60, v61, v62, v63, v26, v65,
            v66);
    v0[33] = swift_getMetatypeMetadata();
    v0[30] = v40;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)(v0 + 30));
    sub_100020E44();
    v0[37] = &type metadata for String;
    v0[34] = v29;
    v0[35] = v31;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)(v0 + 34));
    v41._countAndFlagsBits = 93;
    v41._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v41);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    uint64_t v50 = sub_100048254(v42, v43, v44, v45, v46, v47, v48, v49, v57, v58, 2, 4, v59, v60, v61, v62, v63, v64, v65,
            v66);
    v0[25] = swift_getMetatypeMetadata();
    v0[22] = v50;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)(v0 + 22));
    v51._countAndFlagsBits = 58;
    v51._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v51);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C(v22);
  sub_100049AA0();
  uint64_t v68 = v52;
  swift_bridgeObjectRetain();
  v53._countAndFlagsBits = Set.description.getter();
  String.append(_:)(v53);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0[29] = &type metadata for String;
  v0[26] = v68;
  v0[27] = 0xEA0000000000203ALL;
  static LogMessage.safe(_:)();
  sub_1000423CC((uint64_t)(v0 + 26));
  uint64_t v54 = static os_log_type_t.info.getter();
  sub_10004841C(v54);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v55 = (uint64_t (*)(void))v0[1];
  return v55();
}

uint64_t type metadata accessor for MercuryCacheUpdateStateManager()
{
  return self;
}

unint64_t *sub_10012F9F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v37 = a1 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v35 = ~v5;
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v36 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v9 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v10 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v11 = v10 | (v9 << 6);
    while (1)
    {
      uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      Swift::Int v19 = Hasher._finalize()();
      uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
        break;
      }
LABEL_37:
      swift_bridgeObjectRelease();
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v12 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
        goto LABEL_50;
      }
      if (v12 >= v36) {
        goto LABEL_48;
      }
      unint64_t v13 = *(void *)(v37 + 8 * v12);
      int64_t v14 = v9 + 1;
      if (!v13)
      {
        int64_t v14 = v9 + 2;
        if (v9 + 2 >= v36) {
          goto LABEL_48;
        }
        unint64_t v13 = *(void *)(v37 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = v9 + 3;
          if (v9 + 3 >= v36) {
            goto LABEL_48;
          }
          unint64_t v13 = *(void *)(v37 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 4;
            if (v9 + 4 >= v36) {
              goto LABEL_48;
            }
            unint64_t v13 = *(void *)(v37 + 8 * v14);
            if (!v13)
            {
              int64_t v15 = v9 + 5;
              if (v9 + 5 >= v36)
              {
LABEL_48:
                sub_100011E28();
                return (unint64_t *)v2;
              }
              unint64_t v13 = *(void *)(v37 + 8 * v15);
              if (!v13)
              {
                while (1)
                {
                  int64_t v14 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    break;
                  }
                  if (v14 >= v36) {
                    goto LABEL_48;
                  }
                  unint64_t v13 = *(void *)(v37 + 8 * v14);
                  ++v15;
                  if (v13) {
                    goto LABEL_22;
                  }
                }
LABEL_50:
                __break(1u);
              }
              int64_t v14 = v9 + 5;
            }
          }
        }
      }
LABEL_22:
      unint64_t v7 = (v13 - 1) & v13;
      unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
      int64_t v9 = v14;
    }
    uint64_t v22 = *(void *)(v2 + 48);
    Swift::String v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
    }
    else
    {
      uint64_t v25 = ~v20;
      do
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_37;
        }
        uint64_t v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    char v29 = *(unsigned char *)(v2 + 32);
    unint64_t v30 = (unint64_t)((1 << v29) + 63) >> 6;
    size_t v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      __chkstk_darwin(isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_10013026C((unint64_t *)((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0)), v30, v2, v21, &v38);
      swift_release();
      sub_100011E28();
    }
    else
    {
      uint64_t v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_10013026C((unint64_t *)v33, v30, v2, v21, &v38);
      swift_release();
      sub_100011E28();
      swift_slowDealloc();
    }
    return v32;
  }
  else
  {
    swift_release();
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
}

unint64_t *sub_10012FE70(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
  sub_10005370C(a1, v38);
  uint64_t v3 = v38[0];
  uint64_t v37 = v38[1];
  int64_t v4 = v40;
  unint64_t v5 = v41;
  v35[1] = v39;
  int64_t v36 = (unint64_t)(v39 + 64) >> 6;
  swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_4;
  }
LABEL_3:
  unint64_t v6 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v7 = v6 | (v4 << 6);
  while (1)
  {
    int64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v7);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    Swift::Int v18 = Hasher._finalize()();
    uint64_t v19 = -1 << *(unsigned char *)(v2 + 32);
    uint64_t v20 = v18 & ~v19;
    sub_10004AC94();
    if ((v21 & 1) == 0) {
      goto LABEL_37;
    }
    uint64_t v22 = *(void *)(v2 + 48);
    Swift::String v23 = (void *)(v22 + 16 * v20);
    BOOL v24 = *v23 == v17 && v23[1] == v16;
    if (v24 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_1000495E0();
LABEL_40:
      char v30 = *(unsigned char *)(v2 + 32);
      size_t v31 = 8 * ((unint64_t)((1 << v30) + 63) >> 6);
      if ((v30 & 0x3Fu) < 0xE
        || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
      {
        __chkstk_darwin(isStackAllocationSafe);
        memcpy((char *)v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
        uint64_t v32 = sub_10004530C();
        swift_release();
        if (v2 == -56)
        {
          sub_100011E28();
          return v32;
        }
        swift_willThrow();
        swift_errorRelease();
        __break(1u);
      }
      else
      {
        uint64_t v33 = (void *)swift_slowAlloc();
        memcpy(v33, (const void *)(v2 + 56), v31);
        uint64_t v32 = sub_10004530C();
        swift_release();
        if (v2 == -56)
        {
          sub_100011E28();
          swift_slowDealloc();
          return v32;
        }
      }
      swift_errorRelease();
      uint64_t result = (unint64_t *)swift_slowDealloc();
      __break(1u);
      return result;
    }
    uint64_t v25 = ~v19;
    while (1)
    {
      uint64_t v20 = (v20 + 1) & v25;
      sub_10004AC94();
      if ((v26 & 1) == 0) {
        break;
      }
      BOOL v27 = (void *)(v22 + 16 * v20);
      BOOL v28 = *v27 == v17 && v27[1] == v16;
      if (v28 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        sub_1000495E0();
        uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
        goto LABEL_40;
      }
    }
LABEL_37:
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_3;
    }
LABEL_4:
    int64_t v8 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      __break(1u);
    }
    if (v8 >= v36) {
      goto LABEL_50;
    }
    unint64_t v9 = *(void *)(v37 + 8 * v8);
    int64_t v10 = v4 + 1;
    if (!v9)
    {
      sub_10004DE6C();
      if (v11 == v12) {
        goto LABEL_50;
      }
      sub_100046444();
      if (!v9)
      {
        sub_10004DE6C();
        if (v11 == v12) {
          goto LABEL_50;
        }
        sub_100046444();
        if (!v9)
        {
          sub_10004DE6C();
          if (v11 == v12) {
            goto LABEL_50;
          }
          sub_100046444();
          if (!v9)
          {
            int64_t v10 = v13 + 4;
            if (v13 + 4 >= v36) {
              goto LABEL_50;
            }
            unint64_t v9 = *(void *)(v37 + 8 * v10);
            if (!v9) {
              break;
            }
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v9 - 1) & v9;
    unint64_t v7 = __clz(__rbit64(v9)) + (v10 << 6);
    int64_t v4 = v10;
  }
  int64_t v14 = v4 + 6;
  while (v14 < v36)
  {
    unint64_t v9 = *(void *)(v37 + 8 * v14++);
    if (v9)
    {
      int64_t v10 = v14 - 1;
      goto LABEL_22;
    }
  }
LABEL_50:
  sub_100011E28();
  return (unint64_t *)v2;
}

unint64_t *sub_10013026C(unint64_t *result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v39 = result;
  *(unint64_t *)((char *)result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v40 = a3 + 56;
  while (2)
  {
    uint64_t v38 = v8;
    do
    {
      while (1)
      {
        int64_t v9 = a5[3];
        unint64_t v10 = a5[4];
        if (v10)
        {
          uint64_t v11 = (v10 - 1) & v10;
          unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_15;
        }
        int64_t v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_48;
        }
        int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
        int64_t v15 = a5[3];
        if (v13 >= v14) {
          goto LABEL_46;
        }
        uint64_t v16 = a5[1];
        unint64_t v17 = *(void *)(v16 + 8 * v13);
        if (!v17)
        {
          int64_t v18 = v9 + 2;
          int64_t v15 = v9 + 1;
          if (v9 + 2 >= v14) {
            goto LABEL_46;
          }
          unint64_t v17 = *(void *)(v16 + 8 * v18);
          if (!v17)
          {
            int64_t v15 = v9 + 2;
            if (v9 + 3 >= v14) {
              goto LABEL_46;
            }
            unint64_t v17 = *(void *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              int64_t v13 = v9 + 3;
              goto LABEL_14;
            }
            int64_t v18 = v9 + 4;
            int64_t v15 = v9 + 3;
            if (v9 + 4 >= v14) {
              goto LABEL_46;
            }
            unint64_t v17 = *(void *)(v16 + 8 * v18);
            if (!v17)
            {
              int64_t v13 = v9 + 5;
              int64_t v15 = v9 + 4;
              if (v9 + 5 >= v14) {
                goto LABEL_46;
              }
              unint64_t v17 = *(void *)(v16 + 8 * v13);
              if (!v17)
              {
                int64_t v36 = v9 + 6;
                while (v36 < v14)
                {
                  unint64_t v17 = *(void *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    int64_t v13 = v36 - 1;
                    goto LABEL_14;
                  }
                }
                int64_t v15 = v14 - 1;
LABEL_46:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                return (unint64_t *)sub_10013083C(v39, a2, v38, a3);
              }
              goto LABEL_14;
            }
          }
          int64_t v13 = v18;
        }
LABEL_14:
        uint64_t v11 = (v17 - 1) & v17;
        unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
        int64_t v9 = v13;
LABEL_15:
        uint64_t v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v22 = Hasher._finalize()();
        uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v24 = v22 & ~v23;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = 1 << v24;
        if (((1 << v24) & *(void *)(v40 + 8 * (v24 >> 6))) == 0) {
          goto LABEL_32;
        }
        uint64_t v27 = *(void *)(a3 + 48);
        BOOL v28 = (void *)(v27 + 16 * v24);
        BOOL v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          break;
        }
        uint64_t v31 = ~v23;
        for (unint64_t i = v24 + 1; ; unint64_t i = v33 + 1)
        {
          unint64_t v33 = i & v31;
          if (((*(void *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0) {
            break;
          }
          uint64_t v34 = (void *)(v27 + 16 * v33);
          BOOL v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
            unint64_t v25 = v33 >> 6;
            uint64_t v26 = 1 << v33;
            goto LABEL_22;
          }
        }
LABEL_32:
        uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
      }
      uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
LABEL_22:
      unint64_t v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    uint64_t v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_48:
      __break(1u);
      return result;
    }
    if (v38 != 1) {
      continue;
    }
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
}

unint64_t *sub_100130560(unint64_t *result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v38 = result;
  *(unint64_t *)((char *)result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v39 = a3 + 56;
  while (2)
  {
    uint64_t v37 = v8;
    do
    {
      while (1)
      {
        int64_t v9 = a5[3];
        unint64_t v10 = a5[4];
        if (v10)
        {
          uint64_t v11 = (v10 - 1) & v10;
          unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
        }
        else
        {
          int64_t v13 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            goto LABEL_46;
          }
          int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
          int64_t v15 = a5[3];
          if (v13 >= v14) {
            goto LABEL_44;
          }
          uint64_t v16 = a5[1];
          unint64_t v17 = *(void *)(v16 + 8 * v13);
          if (!v17)
          {
            int64_t v15 = v9 + 1;
            if (v9 + 2 >= v14) {
              goto LABEL_44;
            }
            unint64_t v17 = *(void *)(v16 + 8 * (v9 + 2));
            if (v17)
            {
              int64_t v13 = v9 + 2;
            }
            else
            {
              int64_t v15 = v9 + 2;
              if (v9 + 3 >= v14) {
                goto LABEL_44;
              }
              unint64_t v17 = *(void *)(v16 + 8 * (v9 + 3));
              if (v17)
              {
                int64_t v13 = v9 + 3;
              }
              else
              {
                int64_t v13 = v9 + 4;
                int64_t v15 = v9 + 3;
                if (v9 + 4 >= v14) {
                  goto LABEL_44;
                }
                unint64_t v17 = *(void *)(v16 + 8 * v13);
                if (!v17)
                {
                  int64_t v18 = v9 + 5;
                  while (v18 < v14)
                  {
                    unint64_t v17 = *(void *)(v16 + 8 * v18++);
                    if (v17)
                    {
                      int64_t v13 = v18 - 1;
                      goto LABEL_20;
                    }
                  }
                  int64_t v15 = v14 - 1;
LABEL_44:
                  a5[3] = v15;
                  a5[4] = 0;
                  swift_retain();
                  return (unint64_t *)sub_10013083C(v38, a2, v37, a3);
                }
              }
            }
          }
LABEL_20:
          uint64_t v11 = (v17 - 1) & v17;
          unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
          int64_t v9 = v13;
        }
        uint64_t v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v22 = Hasher._finalize()();
        uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v24 = v22 & ~v23;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = 1 << v24;
        if (((1 << v24) & *(void *)(v39 + 8 * (v24 >> 6))) != 0) {
          break;
        }
LABEL_38:
        uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
      }
      uint64_t v27 = *(void *)(a3 + 48);
      BOOL v28 = (void *)(v27 + 16 * v24);
      BOOL v29 = *v28 == v21 && v28[1] == v20;
      if (!v29 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        uint64_t v31 = ~v23;
        for (unint64_t i = v24 + 1; ; unint64_t i = v33 + 1)
        {
          unint64_t v33 = i & v31;
          if (((*(void *)(v39 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0) {
            break;
          }
          uint64_t v34 = (void *)(v27 + 16 * v33);
          BOOL v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
            unint64_t v25 = v33 >> 6;
            uint64_t v26 = 1 << v33;
            goto LABEL_28;
          }
        }
        goto LABEL_38;
      }
      uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
LABEL_28:
      unint64_t v30 = v38[v25];
      v38[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    uint64_t v8 = v37 - 1;
    if (__OFSUB__(v37, 1))
    {
LABEL_46:
      __break(1u);
      return result;
    }
    if (v37 != 1) {
      continue;
    }
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
}

uint64_t sub_10013083C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = &_swiftEmptySetSingleton;
LABEL_35:
    swift_release();
    return (uint64_t)v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_100043478(&qword_100231680);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  uint64_t v8 = (unsigned char *)result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_35;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_35;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_35;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    unint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v20 = -1 << v8[32];
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) == 0)
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
        if (v27 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    BOOL v28 = (void *)(*((void *)v8 + 6) + 16 * v23);
    *BOOL v28 = v18;
    v28[1] = v19;
    ++*((void *)v8 + 2);
    if (__OFSUB__(v5--, 1)) {
      goto LABEL_38;
    }
    if (!v5) {
      goto LABEL_35;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_35;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_35;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_100130ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = a2;
  uint64_t v4 = type metadata accessor for MercuryCacheMetadata(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4 - 8);
  uint64_t v23 = (uint64_t)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v6);
  uint64_t v10 = (uint64_t *)((char *)&v21 - v9);
  uint64_t v11 = _swiftEmptyArrayStorage;
  unint64_t v25 = _swiftEmptyArrayStorage;
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22)
  {
    uint64_t v21 = v2;
    unint64_t v12 = 0;
    while (v12 < *(void *)(a1 + 16))
    {
      unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v14 = *(void *)(v5 + 72);
      sub_1001332A4(a1 + v13 + v14 * v12, (uint64_t)v10, type metadata accessor for MercuryCacheMetadata);
      uint64_t v15 = *v10;
      uint64_t v16 = v10[1];
      swift_bridgeObjectRetain();
      sub_100148B90(v15, v16, v24);
      char v18 = v17;
      swift_bridgeObjectRelease();
      if (v18)
      {
        sub_100120CCC((uint64_t)v10, v23);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_100073420(0, v11[2] + 1, 1);
        }
        uint64_t v11 = v25;
        unint64_t v20 = v25[2];
        unint64_t v19 = v25[3];
        if (v20 >= v19 >> 1)
        {
          sub_100073420(v19 > 1, v20 + 1, 1);
          uint64_t v11 = v25;
        }
        v11[2] = v20 + 1;
        uint64_t result = sub_100120CCC(v23, (uint64_t)v11 + v13 + v20 * v14);
      }
      else
      {
        uint64_t result = sub_10013330C((uint64_t)v10, type metadata accessor for MercuryCacheMetadata);
      }
      if (v22 == ++v12)
      {
        uint64_t v11 = v25;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)v11;
  }
  return result;
}

uint64_t sub_100130D0C()
{
  sub_100020958();
  *(unsigned char *)(v1 + 257) = v2;
  *(void *)(v1 + 264) = v3;
  *(void *)(v1 + 272) = v0;
  *(void *)(v1 + 280) = type metadata accessor for MercuryCacheDataUpdateHandler();
  *(void *)(v1 + 288) = sub_10004ACA8();
  *(void *)(v1 + 296) = swift_task_alloc();
  uint64_t v4 = type metadata accessor for MercuryCacheMetadata(0);
  sub_100044798(v4);
  *(void *)(v1 + 304) = v5;
  *(void *)(v1 + 312) = sub_10004ACA8();
  *(void *)(v1 + 320) = swift_task_alloc();
  type metadata accessor for LogMessage.StringInterpolation();
  *(void *)(v1 + 328) = swift_task_alloc();
  *(void *)(v1 + 336) = type metadata accessor for MercuryCacheUpdateInput();
  *(void *)(v1 + 344) = sub_10004ACA8();
  *(void *)(v1 + 352) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Date();
  *(void *)(v1 + 360) = v6;
  sub_100044798(v6);
  *(void *)(v1 + 368) = v7;
  *(void *)(v1 + 376) = swift_task_alloc();
  sub_100043E7C();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_100130E70()
{
  uint64_t v1 = sub_100132F28();
  v0[48] = v1;
  if (v1)
  {
    char v2 = v1;
    if ([v1 isActive])
    {
      uint64_t v3 = (uint64_t *)v0[34];
      uint64_t v4 = *v3;
      v0[49] = *v3;
      uint64_t v5 = 17;
      if (*((unsigned char *)v3 + 152)) {
        uint64_t v5 = 18;
      }
      uint64_t v6 = (void *)v3[v5];
      v0[50] = v6;
      id v7 = v6;
      return _swift_task_switch(sub_100131020, v4, 0);
    }
    sub_100132FBC();
    swift_allocError();
    unsigned char *v9 = 1;
    swift_willThrow();
  }
  else
  {
    sub_100132FBC();
    swift_allocError();
    unsigned char *v8 = 0;
    swift_willThrow();
  }
  sub_10004B58C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100040954();
  return v10();
}

uint64_t sub_100131020()
{
  sub_100020958();
  uint64_t v1 = *(void **)(v0 + 400);
  *(void *)(v0 + 408) = sub_10011F048(v1);

  sub_100043E7C();
  return _swift_task_switch(v2, v3, v4);
}

uint64_t sub_10013108C()
{
  sub_100020958();
  uint64_t v1 = *(void *)(*(void *)(v0 + 272) + 56);
  *(void *)(v0 + 416) = v1;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  static Date.now.getter();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 424) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100131154;
  uint64_t v3 = *(void *)(v0 + 408);
  uint64_t v4 = *(void *)(v0 + 376);
  uint64_t v5 = *(void *)(v0 + 352);
  uint64_t v6 = *(void *)(v0 + 264);
  char v7 = *(unsigned char *)(v0 + 257);
  return sub_100129530(v5, v4, v1, v3, v6, v7);
}

uint64_t sub_100131154()
{
  sub_100020958();
  sub_1000447B0();
  sub_100044DDC();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_100020EBC();
  *uint64_t v5 = v4;
  *(void *)(v6 + 432) = v0;
  swift_task_dealloc();
  sub_100043E7C();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_100131230()
{
  sub_100048290();
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_1001A0DD0(v2, v0);
  Swift::Int v4 = v3;
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_1001A0DD0(v5, v4);
  uint64_t v7 = v6;
  *(void *)(v1 + 440) = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 448) = v8;
  void *v8 = v1;
  v8[1] = sub_100131300;
  return sub_10012EFB8(v7);
}

uint64_t sub_100131300()
{
  sub_100020958();
  sub_1000447B0();
  sub_100044DDC();
  *uint64_t v2 = v1;
  uint64_t v3 = *v0;
  sub_100020EBC();
  *Swift::Int v4 = v3;
  *(void *)(v6 + 456) = v5;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_100043E7C();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_1001313E8()
{
  char v95 = (void *)(v0 + 16);
  uint64_t v96 = v0 + 80;
  uint64_t v1 = *(void *)(v0 + 456);
  uint64_t v2 = *(void *)(v0 + 432);
  uint64_t v3 = *(void *)(v0 + 368);
  uint64_t v99 = v0 + 112;
  uint64_t v101 = *(void *)(v0 + 360);
  Swift::Int v4 = *(char **)(v0 + 352);
  uint64_t v94 = *(char **)(v0 + 344);
  uint64_t v5 = *(void *)(v0 + 336);
  uint64_t v6 = *((void *)v4 + 1);
  swift_bridgeObjectRetain();
  Swift::Int v7 = sub_1001330A4(v1, v6);
  uint64_t v8 = *((void *)v4 + 2);
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1001330A4(v1, v8);
  swift_retain();
  uint64_t v10 = swift_retain();
  sub_1001A0DD0(v10, v7);
  Swift::Int v12 = v11;
  uint64_t v13 = *(void *)v4;
  uint64_t v14 = swift_bridgeObjectRetain();
  sub_1001A0DD0(v14, v12);
  uint64_t v16 = v15;
  uint64_t v17 = swift_bridgeObjectRetain();
  uint64_t v18 = sub_100130ACC(v17, v16);
  uint64_t v97 = v2;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(&v94[*(int *)(v5 + 32)], &v4[*(int *)(v5 + 32)], v101);
  *(void *)uint64_t v94 = v13;
  *((void *)v94 + 1) = v7;
  *((void *)v94 + 2) = v9;
  *((void *)v94 + 3) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = qword_10022C548;
  swift_bridgeObjectRetain();
  if (v19 != -1) {
LABEL_30:
  }
    swift_once();
  uint64_t v98 = v18;
  unint64_t v20 = *(_OWORD **)(v0 + 272);
  sub_100043478(&qword_10022E560);
  uint64_t v21 = type metadata accessor for LogMessage();
  sub_100044798(v21);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  *(void *)(v0 + 40) = &type metadata for MercuryCacheUpdateTask;
  uint64_t v22 = swift_allocObject();
  *(void *)(v0 + 16) = v22;
  sub_10013326C(v20, v22 + 16);
  id v23 = (id)AMSLogKey();
  char v102 = (void *)v0;
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v27 = v26;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v28._countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    uint64_t v29 = (uint64_t)v95;
    sub_100049788(v95, (uint64_t)&type metadata for MercuryCacheUpdateTask);
    uint64_t DynamicType = swift_getDynamicType();
    *(void *)(v0 + 200) = swift_getMetatypeMetadata();
    *(void *)(v0 + 176) = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC(v0 + 176);
    v31._countAndFlagsBits = 5972026;
    v31._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v31);
    *(void *)(v0 + 168) = &type metadata for String;
    *(void *)(v0 + 144) = v25;
    *(void *)(v0 + 152) = v27;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC(v0 + 144);
    v32._countAndFlagsBits = 93;
    v32._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v32);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v33._countAndFlagsBits = 0;
    v33._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v33);
    uint64_t v29 = (uint64_t)v95;
    sub_100049788(v95, (uint64_t)&type metadata for MercuryCacheUpdateTask);
    uint64_t v34 = swift_getDynamicType();
    *(void *)(v0 + 72) = swift_getMetatypeMetadata();
    *(void *)(v0 + 48) = v34;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC(v0 + 48);
    v35._countAndFlagsBits = 58;
    v35._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v35);
    LogMessage.init(stringInterpolation:)();
  }
  int64_t v36 = *(Swift::Int **)(v0 + 344);
  uint64_t v38 = *(void *)(v0 + 264);
  uint64_t v37 = *(void *)(v0 + 272);
  char v39 = *(unsigned char *)(v0 + 257);
  sub_10004377C(v29);
  uint64_t v40 = *(void **)(v37 + 136);
  unint64_t v41 = *(void **)(v37 + 144);
  char v42 = *(unsigned char *)(v37 + 152);
  *(void *)(v0 + 104) = &unk_100214280;
  *(void *)(v0 + 80) = v40;
  *(void *)(v0 + 88) = v41;
  *(unsigned char *)(v0 + 96) = v42;
  sub_100121A5C(v40, v41, v42);
  static LogMessage.sensitive(_:)();
  sub_1000423CC(v96);
  _StringGuts.grow(_:)(35);
  *(void *)(v0 + 232) = 0;
  *(void *)(v0 + 240) = 0xE000000000000000;
  v43._object = (void *)0x80000001001D4040;
  v43._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v43);
  Swift::Int v44 = *v36;
  swift_bridgeObjectRetain();
  uint64_t v45 = swift_bridgeObjectRetain();
  sub_1001A0DD0(v45, v44);
  Swift::Int v47 = v46;
  uint64_t v48 = swift_bridgeObjectRetain();
  sub_1001A0DD0(v48, v47);
  v49._countAndFlagsBits = Set.description.getter();
  String.append(_:)(v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v50._countAndFlagsBits = 0x646F6D20726F6620;
  v50._object = (void *)0xEB00000000203A65;
  String.append(_:)(v50);
  *(void *)(v0 + 248) = v38;
  *(unsigned char *)(v0 + 256) = v39;
  _print_unlocked<A, B>(_:_:)();
  uint64_t v51 = *(void *)(v0 + 232);
  uint64_t v52 = *(void *)(v0 + 240);
  *(void *)(v0 + 136) = &type metadata for String;
  *(void *)(v0 + 112) = v51;
  *(void *)(v0 + 120) = v52;
  static LogMessage.safe(_:)();
  sub_1000423CC(v99);
  uint64_t v53 = static os_log_type_t.info.getter();
  sub_10004841C(v53);
  swift_bridgeObjectRelease();
  Swift::Int v54 = *v36;
  swift_bridgeObjectRetain();
  uint64_t v55 = swift_bridgeObjectRetain();
  sub_1001A0DD0(v55, v54);
  Swift::Int v57 = v56;
  uint64_t v58 = swift_bridgeObjectRetain();
  sub_1001A0DD0(v58, v57);
  sub_100133008(v59, v39, v59);
  if (v97)
  {
    uint64_t v60 = *(void **)(v0 + 384);
    uint64_t v61 = *(void *)(v0 + 368);
    uint64_t v100 = *(void *)(v0 + 360);
    uint64_t v103 = *(void *)(v0 + 376);
    uint64_t v63 = *(void *)(v0 + 344);
    uint64_t v62 = *(void *)(v0 + 352);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_10013330C(v63, (uint64_t (*)(void))type metadata accessor for MercuryCacheUpdateInput);
    sub_10013330C(v62, (uint64_t (*)(void))type metadata accessor for MercuryCacheUpdateInput);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v103, v100);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100040954();
    sub_100049AB4();
    __asm { BRAA            X1, X16 }
  }
  swift_bridgeObjectRelease();
  uint64_t v0 = *(void *)(v98 + 16);
  if (v0)
  {
    long long v66 = v102;
    uint64_t v99 = v102[40];
    uint64_t v67 = v102[38];
    uint64_t v68 = v98 + ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80));
    uint64_t v69 = *(void *)(v67 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v18 = v66[39];
      BOOL v70 = (uint64_t *)v66[40];
      sub_1001332A4(v68, (uint64_t)v70, type metadata accessor for MercuryCacheMetadata);
      uint64_t v71 = *v70;
      uint64_t v72 = *(void *)(v99 + 8);
      sub_1001332A4((uint64_t)v70, v18, type metadata accessor for MercuryCacheMetadata);
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v74 = sub_100042ADC(v71, v72);
      uint64_t v76 = _swiftEmptyDictionarySingleton[2];
      BOOL v77 = (v75 & 1) == 0;
      Swift::Int v78 = v76 + v77;
      if (__OFADD__(v76, v77))
      {
        __break(1u);
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      unint64_t v79 = v74;
      uint64_t v18 = v75;
      sub_100043478(&qword_100230F90);
      Swift::Bool v80 = _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v78);
      long long v66 = v102;
      if (v80)
      {
        unint64_t v81 = sub_100042ADC(v71, v72);
        if ((v18 & 1) != (v82 & 1))
        {
          sub_100049AB4();
          return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        }
        unint64_t v79 = v81;
      }
      uint64_t v83 = v102[39];
      if (v18)
      {
        sub_100120D30(v83, _swiftEmptyDictionarySingleton[7] + v79 * v69);
      }
      else
      {
        _swiftEmptyDictionarySingleton[(v79 >> 6) + 8] |= 1 << v79;
        uint64_t v84 = (uint64_t *)(_swiftEmptyDictionarySingleton[6] + 16 * v79);
        *uint64_t v84 = v71;
        v84[1] = v72;
        sub_100120CCC(v83, _swiftEmptyDictionarySingleton[7] + v79 * v69);
        uint64_t v85 = _swiftEmptyDictionarySingleton[2];
        BOOL v86 = __OFADD__(v85, 1);
        uint64_t v87 = v85 + 1;
        if (v86) {
          goto LABEL_29;
        }
        _swiftEmptyDictionarySingleton[2] = v87;
        swift_bridgeObjectRetain();
      }
      uint64_t v88 = v102[40];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10013330C(v88, type metadata accessor for MercuryCacheMetadata);
      v68 += v69;
      if (!--v0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
    }
  }
  long long v66 = v102;
LABEL_22:
  v66[58] = _swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  unint64_t v89 = (void *)swift_task_alloc();
  v66[59] = v89;
  *unint64_t v89 = v66;
  v89[1] = sub_100131CEC;
  sub_100049AB4();
  return sub_10010BC10(v90);
}

uint64_t sub_100131CEC()
{
  sub_100020958();
  sub_1000447B0();
  sub_100044DDC();
  *uint64_t v2 = v1;
  uint64_t v3 = *v0;
  sub_100020EBC();
  *Swift::Int v4 = v3;
  *(void *)(v5 + 480) = v6;
  swift_task_dealloc();
  sub_100043E7C();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_100131DB4()
{
  sub_100020958();
  uint64_t v1 = *(void *)(*(void *)(v0 + 272) + 56);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 488) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100131E48;
  return sub_10010B4C4(v1);
}

uint64_t sub_100131E48()
{
  sub_100020958();
  sub_1000447B0();
  sub_100044DDC();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 496) = v3;
  swift_task_dealloc();
  sub_100043E7C();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_100131F18()
{
  sub_100020958();
  uint64_t v1 = *(void *)(*(void *)(v0 + 272) + 56);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 504) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100131FAC;
  return sub_10010B884(v1);
}

uint64_t sub_100131FAC()
{
  sub_100020958();
  sub_1000447B0();
  sub_100044DDC();
  *uint64_t v2 = v1;
  uint64_t v3 = *v0;
  sub_100020EBC();
  *uint64_t v4 = v3;
  *(void *)(v5 + 512) = v6;
  swift_task_dealloc();
  sub_100043E7C();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_100132074()
{
  uint64_t v1 = *(void *)(v0 + 384);
  uint64_t v2 = *(void **)(v0 + 272);
  uint64_t v4 = v2[10];
  uint64_t v3 = v2[11];
  uint64_t v5 = v2[7];
  Swift::Int v6 = **(void **)(v0 + 344);
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_1001A0DD0(v7, v6);
  Swift::Int v9 = v8;
  uint64_t v10 = swift_bridgeObjectRetain();
  sub_1001A0DD0(v10, v9);
  uint64_t v12 = v11;
  *(void *)(v0 + 520) = v11;
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8)
                                                                                              + **(int **)(v3 + 8));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 528) = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1001321D0;
  uint64_t v14 = *(void *)(v0 + 264);
  uint64_t v15 = *(unsigned __int8 *)(v0 + 257);
  return v17(v1, v5, v12, v14, v15, v4, v3);
}

uint64_t sub_1001321D0()
{
  sub_100020958();
  sub_1000447B0();
  uint64_t v3 = v2;
  sub_100044DDC();
  *uint64_t v4 = v3;
  v3[26] = v1;
  v3[27] = v5;
  v3[28] = v0;
  uint64_t v6 = *v1;
  sub_100020EBC();
  *uint64_t v7 = v6;
  v3[67] = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_bridgeObjectRelease();
  }
  sub_100043E7C();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_1001322BC()
{
  sub_100048290();
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_1001A0DD0(v2, v0);
  Swift::Int v4 = v3;
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_1001A0DD0(v5, v4);
  uint64_t v7 = v6;
  *(void *)(v1 + 544) = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 552) = v8;
  void *v8 = v1;
  v8[1] = sub_10013238C;
  return sub_10012F3E8(v7);
}

uint64_t sub_10013238C()
{
  sub_100020958();
  sub_1000447B0();
  uint64_t v1 = *v0;
  sub_100020EBC();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_100043E7C();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_100132470()
{
  uint64_t v1 = (long long *)v0[34];
  uint64_t v2 = (int *)v0[35];
  uint64_t v3 = 136;
  if (*((unsigned char *)v1 + 152)) {
    uint64_t v3 = 144;
  }
  uint64_t v4 = v0[64];
  uint64_t v5 = v0[62];
  uint64_t v6 = v0[60];
  uint64_t v7 = v0[58];
  uint64_t v8 = v0[43];
  uint64_t v9 = (void *)v0[37];
  uint64_t v10 = *(void **)((char *)v1 + v3);
  v0[70] = v0[27];
  uint64_t v11 = (uint64_t)v9 + v2[6];
  id v12 = v10;
  sub_1001332A4(v8, v11, (uint64_t (*)(void))type metadata accessor for MercuryCacheUpdateInput);
  swift_bridgeObjectRetain();
  static Date.now.getter();
  sub_10005416C((uint64_t)(v1 + 1), (uint64_t)v9 + v2[11]);
  long long v13 = *v1;
  void *v9 = v12;
  v9[1] = v7;
  *(void *)((char *)v9 + v2[7]) = v6;
  *(void *)((char *)v9 + v2[8]) = v5;
  *(void *)((char *)v9 + v2[10]) = v4;
  *(_OWORD *)((char *)v9 + v2[12]) = v13;
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = (void *)swift_task_alloc();
  v0[71] = v14;
  void *v14 = v0;
  v14[1] = sub_1001325F8;
  return sub_100116208();
}

uint64_t sub_1001325F8()
{
  sub_100020958();
  sub_1000447B0();
  uint64_t v2 = *(void *)(v1 + 296);
  uint64_t v3 = *v0;
  sub_100020EBC();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_10013330C(v2, (uint64_t (*)(void))type metadata accessor for MercuryCacheDataUpdateHandler);
  sub_100043E7C();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_10013270C()
{
  uint64_t v2 = v0[47];
  uint64_t v1 = (void *)v0[48];
  uint64_t v4 = v0[45];
  uint64_t v3 = v0[46];
  uint64_t v6 = v0[43];
  uint64_t v5 = v0[44];
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_10013330C(v6, (uint64_t (*)(void))type metadata accessor for MercuryCacheUpdateInput);
  sub_10013330C(v5, (uint64_t (*)(void))type metadata accessor for MercuryCacheUpdateInput);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100040954();
  return v7();
}

uint64_t sub_10013284C()
{
  uint64_t v1 = v0[47];
  uint64_t v2 = (void *)v0[48];
  uint64_t v3 = v0[45];
  uint64_t v4 = v0[46];
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  sub_10004B58C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100040954();
  return v5();
}

uint64_t sub_100132938()
{
  uint64_t v1 = v0[34];
  swift_bridgeObjectRelease();
  uint64_t v2 = (void *)_convertErrorToNSError(_:)();
  sub_10013306C();

  uint64_t v3 = 136;
  if (*(unsigned char *)(v1 + 152)) {
    uint64_t v3 = 144;
  }
  uint64_t v4 = v0[64];
  uint64_t v5 = v0[62];
  uint64_t v6 = v0[60];
  uint64_t v7 = v0[58];
  uint64_t v8 = v0[43];
  uint64_t v10 = (int *)v0[35];
  uint64_t v9 = (void *)v0[36];
  uint64_t v11 = (long long *)v0[34];
  uint64_t v12 = (uint64_t)v9 + v10[6];
  id v13 = *(id *)((char *)v11 + v3);
  sub_1001332A4(v8, v12, (uint64_t (*)(void))type metadata accessor for MercuryCacheUpdateInput);
  swift_bridgeObjectRetain();
  static Date.now.getter();
  sub_10005416C((uint64_t)(v11 + 1), (uint64_t)v9 + v10[11]);
  long long v14 = *v11;
  void *v9 = v13;
  v9[1] = v7;
  *(void *)((char *)v9 + v10[7]) = v6;
  *(void *)((char *)v9 + v10[8]) = v5;
  *(void *)((char *)v9 + v10[10]) = v4;
  *(_OWORD *)((char *)v9 + v10[12]) = v14;
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = (void *)swift_task_alloc();
  v0[72] = v15;
  void *v15 = v0;
  v15[1] = sub_100132AE4;
  return sub_100116968();
}

uint64_t sub_100132AE4()
{
  sub_100020958();
  sub_1000447B0();
  uint64_t v2 = *(void *)(v1 + 288);
  uint64_t v3 = *v0;
  sub_100020EBC();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  sub_10013330C(v2, (uint64_t (*)(void))type metadata accessor for MercuryCacheDataUpdateHandler);
  sub_100043E7C();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_100132BDC()
{
  sub_100048290();
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_1001A0DD0(v2, v0);
  Swift::Int v4 = v3;
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_1001A0DD0(v5, v4);
  uint64_t v7 = v6;
  *(void *)(v1 + 584) = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 592) = v8;
  void *v8 = v1;
  v8[1] = sub_100132CAC;
  return sub_10012F3E8(v7);
}

uint64_t sub_100132CAC()
{
  sub_100020958();
  sub_1000447B0();
  uint64_t v1 = *v0;
  sub_100020EBC();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_100043E7C();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_100132D90()
{
  uint64_t v1 = (void *)v0[48];
  uint64_t v8 = v0[47];
  uint64_t v3 = v0[45];
  uint64_t v2 = v0[46];
  uint64_t v5 = v0[43];
  uint64_t v4 = v0[44];
  swift_willThrow();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_10013330C(v5, (uint64_t (*)(void))type metadata accessor for MercuryCacheUpdateInput);
  sub_10013330C(v4, (uint64_t (*)(void))type metadata accessor for MercuryCacheUpdateInput);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v8, v3);
  sub_10004B58C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100040954();
  return v6();
}

uint64_t sub_100132EC4()
{
  if (qword_10022C4C0 != -1) {
    swift_once();
  }
  qword_100231688 = qword_100244128;
  return swift_retain();
}

void *sub_100132F28()
{
  uint64_t v1 = *(void **)(v0 + 136);
  if (*(unsigned char *)(v0 + 152))
  {
    id v2 = v1;
    return v1;
  }
  else
  {
    uint64_t v4 = *(void **)(v0 + 144);
    uint64_t v5 = (*(uint64_t (**)(id, void, void))(*(void *)(v0 + 72) + 8))([v1 integerValue], *(void *)(v0 + 64), *(void *)(v0 + 72));
    sub_100121AA8(v1, v4, 0);
    return (void *)v5;
  }
}

unint64_t sub_100132FBC()
{
  unint64_t result = qword_100231698;
  if (!qword_100231698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100231698);
  }
  return result;
}

void sub_100133008(uint64_t a1, char a2, uint64_t a3)
{
  if (a2)
  {
    if (!*(void *)(a3 + 16))
    {
      sub_100132FBC();
      swift_allocError();
      *uint64_t v3 = 4;
      swift_willThrow();
    }
  }
}

uint64_t sub_10013306C()
{
  BOOL v0 = (unint64_t)(sub_1001565FC() - 500) < 0xFFFFFFFFFFFFFF9CLL;
  return (v1 | v0) & 1;
}

uint64_t sub_1001330A4(uint64_t isStackAllocationSafe, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 32);
  unint64_t v3 = (unint64_t)((1 << v2) + 63) >> 6;
  if ((v2 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    sub_1001A638C(0, v3, (uint64_t *)((char *)&v7 - ((8 * v3 + 15) & 0x3FFFFFFFFFFFFFF0)));
    uint64_t v4 = sub_100046454();
    swift_release();
    if (!v3) {
      return v4;
    }
    swift_willThrow();
    swift_errorRelease();
    __break(1u);
  }
  uint64_t v5 = (void *)swift_slowAlloc();
  sub_1001A638C(0, v3, v5);
  uint64_t v4 = sub_100046454();
  swift_release();
  if (!v3)
  {
    swift_slowDealloc();
    return v4;
  }
  swift_errorRelease();
  uint64_t result = swift_slowDealloc();
  __break(1u);
  return result;
}

uint64_t sub_100133210()
{
  swift_unknownObjectRelease();
  sub_10004377C(v0 + 32);
  swift_unknownObjectRelease();
  sub_10004377C(v0 + 112);
  sub_100121AA8(*(void **)(v0 + 152), *(void **)(v0 + 160), *(unsigned char *)(v0 + 168));
  return _swift_deallocObject(v0, 169, 7);
}

uint64_t sub_10013326C(_OWORD *a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1001332A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10013330C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10013336C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  Swift::Int v57 = (unint64_t *)result;
  if (*(void *)(a4 + 16) >= *(void *)(a3 + 16))
  {
    int64_t v34 = 0;
    uint64_t v60 = a3 + 56;
    uint64_t v61 = 0;
    uint64_t v35 = 1 << *(unsigned char *)(a3 + 32);
    if (v35 < 64) {
      uint64_t v36 = ~(-1 << v35);
    }
    else {
      uint64_t v36 = -1;
    }
    unint64_t v37 = v36 & *(void *)(a3 + 56);
    int64_t v63 = (unint64_t)(v35 + 63) >> 6;
    uint64_t v38 = a4 + 56;
    while (1)
    {
      while (1)
      {
        if (v37)
        {
          unint64_t v39 = __clz(__rbit64(v37));
          v37 &= v37 - 1;
          unint64_t v40 = v39 | (v34 << 6);
        }
        else
        {
          int64_t v41 = v34 + 1;
          if (__OFADD__(v34, 1))
          {
LABEL_81:
            __break(1u);
LABEL_82:
            __break(1u);
LABEL_83:
            __break(1u);
            goto LABEL_84;
          }
          if (v41 >= v63) {
            goto LABEL_79;
          }
          unint64_t v42 = *(void *)(v60 + 8 * v41);
          ++v34;
          if (!v42)
          {
            int64_t v34 = v41 + 1;
            if (v41 + 1 >= v63) {
              goto LABEL_79;
            }
            unint64_t v42 = *(void *)(v60 + 8 * v34);
            if (!v42)
            {
              int64_t v34 = v41 + 2;
              if (v41 + 2 >= v63) {
                goto LABEL_79;
              }
              unint64_t v42 = *(void *)(v60 + 8 * v34);
              if (!v42)
              {
                int64_t v43 = v41 + 3;
                if (v43 >= v63) {
                  goto LABEL_79;
                }
                unint64_t v42 = *(void *)(v60 + 8 * v43);
                if (!v42)
                {
                  while (1)
                  {
                    int64_t v34 = v43 + 1;
                    if (__OFADD__(v43, 1)) {
                      goto LABEL_85;
                    }
                    if (v34 >= v63) {
                      break;
                    }
                    unint64_t v42 = *(void *)(v60 + 8 * v34);
                    ++v43;
                    if (v42) {
                      goto LABEL_61;
                    }
                  }
LABEL_79:
                  swift_retain();
                  return sub_10013083C(v57, a2, v61, v5);
                }
                int64_t v34 = v43;
              }
            }
          }
LABEL_61:
          unint64_t v37 = (v42 - 1) & v42;
          unint64_t v40 = __clz(__rbit64(v42)) + (v34 << 6);
        }
        Swift::Int v44 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v40);
        uint64_t v46 = *v44;
        uint64_t v45 = v44[1];
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v47 = Hasher._finalize()();
        uint64_t v48 = -1 << *(unsigned char *)(v4 + 32);
        unint64_t v49 = v47 & ~v48;
        if ((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49)) {
          break;
        }
LABEL_78:
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v5 = a3;
        uint64_t v4 = a4;
      }
      uint64_t v50 = *(void *)(a4 + 48);
      uint64_t v51 = (void *)(v50 + 16 * v49);
      BOOL v52 = *v51 == v46 && v51[1] == v45;
      if (!v52 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        uint64_t v53 = ~v48;
        do
        {
          unint64_t v49 = (v49 + 1) & v53;
          if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
            goto LABEL_78;
          }
          Swift::Int v54 = (void *)(v50 + 16 * v49);
          BOOL v55 = *v54 == v46 && v54[1] == v45;
        }
        while (!v55 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
      }
      uint64_t result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v57 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v5 = a3;
      uint64_t v4 = a4;
      if (v33) {
        goto LABEL_83;
      }
    }
  }
  int64_t v6 = 0;
  uint64_t v58 = a4 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  int64_t v59 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v61 = 0;
  uint64_t v10 = a3 + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      int64_t v62 = v6;
      unint64_t v12 = v11 | (v6 << 6);
      goto LABEL_22;
    }
    int64_t v13 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_81;
    }
    if (v13 >= v59) {
      goto LABEL_79;
    }
    unint64_t v14 = *(void *)(v58 + 8 * v13);
    int64_t v15 = v6 + 1;
    if (!v14)
    {
      int64_t v15 = v6 + 2;
      if (v6 + 2 >= v59) {
        goto LABEL_79;
      }
      unint64_t v14 = *(void *)(v58 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v6 + 3;
        if (v6 + 3 >= v59) {
          goto LABEL_79;
        }
        unint64_t v14 = *(void *)(v58 + 8 * v15);
        if (!v14) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v9 = (v14 - 1) & v14;
    int64_t v62 = v15;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_22:
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    Swift::Int v20 = Hasher._finalize()();
    uint64_t v21 = -1 << *(unsigned char *)(v5 + 32);
    unint64_t v22 = v20 & ~v21;
    unint64_t v23 = v22 >> 6;
    uint64_t v24 = 1 << v22;
    if (((1 << v22) & *(void *)(v10 + 8 * (v22 >> 6))) == 0) {
      goto LABEL_36;
    }
    uint64_t v25 = *(void *)(a3 + 48);
    uint64_t v26 = (void *)(v25 + 16 * v22);
    BOOL v27 = *v26 == v19 && v26[1] == v18;
    if (v27 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
LABEL_38:
      int64_t v6 = v62;
      uint64_t v5 = a3;
      v57[v23] |= v24;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v4 = a4;
      if (v33) {
        goto LABEL_82;
      }
    }
    else
    {
      uint64_t v28 = ~v21;
      for (unint64_t i = v22 + 1; ; unint64_t i = v30 + 1)
      {
        unint64_t v30 = i & v28;
        if (((*(void *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0) {
          break;
        }
        Swift::String v31 = (void *)(v25 + 16 * v30);
        BOOL v32 = *v31 == v19 && v31[1] == v18;
        if (v32 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          uint64_t result = swift_bridgeObjectRelease();
          unint64_t v23 = v30 >> 6;
          uint64_t v24 = 1 << v30;
          goto LABEL_38;
        }
      }
LABEL_36:
      uint64_t result = swift_bridgeObjectRelease();
      int64_t v6 = v62;
      uint64_t v5 = a3;
      uint64_t v4 = a4;
    }
  }
  uint64_t v16 = v6 + 4;
  if (v6 + 4 >= v59) {
    goto LABEL_79;
  }
  unint64_t v14 = *(void *)(v58 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v6 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v59) {
      goto LABEL_79;
    }
    unint64_t v14 = *(void *)(v58 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_21;
    }
  }
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
  return result;
}

unsigned char *storeEnumTagSinglePayload for MercuryCacheUpdateTask.UpdateError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100133978);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MercuryCacheUpdateTask.UpdateError()
{
  return &type metadata for MercuryCacheUpdateTask.UpdateError;
}

void destroy for MercuryCacheUpdateTask(uint64_t a1)
{
  swift_unknownObjectRelease();
  sub_10004377C(a1 + 16);
  swift_unknownObjectRelease();
  sub_10004377C(a1 + 96);
  char v2 = *(void **)(a1 + 136);
  int v3 = *(void **)(a1 + 144);
  char v4 = *(unsigned char *)(a1 + 152);
  sub_100121AA8(v2, v3, v4);
}

uint64_t initializeWithCopy for MercuryCacheUpdateTask(uint64_t a1, _OWORD *a2)
{
  char v2 = a2;
  *(_OWORD *)a1 = *a2;
  uint64_t v4 = a1 + 16;
  uint64_t v5 = a2 + 1;
  long long v6 = *(_OWORD *)((char *)a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, _OWORD *, uint64_t))(v6 - 8);
  swift_unknownObjectRetain();
  v8(v4, v5, v7);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)((char *)v2 + 56);
  uint64_t v9 = *((void *)v2 + 11);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)((char *)v2 + 72);
  *(void *)(a1 + 88) = v9;
  long long v10 = *(_OWORD *)((char *)v2 + 120);
  *(_OWORD *)(a1 + 120) = v10;
  uint64_t v11 = v10;
  unint64_t v12 = **(void (***)(uint64_t, _OWORD *, uint64_t))(v10 - 8);
  swift_unknownObjectRetain();
  v12(a1 + 96, v2 + 6, v11);
  int64_t v13 = (void *)*((void *)v2 + 17);
  unint64_t v14 = (void *)*((void *)v2 + 18);
  LOBYTE(v2) = *((unsigned char *)v2 + 152);
  sub_100121A5C(v13, v14, (char)v2);
  *(void *)(a1 + 136) = v13;
  *(void *)(a1 + 144) = v14;
  *(unsigned char *)(a1 + 152) = (_BYTE)v2;
  return a1;
}

uint64_t assignWithCopy for MercuryCacheUpdateTask(uint64_t a1, void *a2)
{
  char v2 = a2;
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = v4;
  sub_100119F88((uint64_t *)(a1 + 16), v2 + 2);
  *(void *)(a1 + 56) = v2[7];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 64) = *((_OWORD *)v2 + 4);
  *(_OWORD *)(a1 + 80) = *((_OWORD *)v2 + 5);
  sub_100119F88((uint64_t *)(a1 + 96), v2 + 12);
  uint64_t v5 = (void *)v2[17];
  long long v6 = (void *)v2[18];
  LOBYTE(v2) = *((unsigned char *)v2 + 152);
  sub_100121A5C(v5, v6, (char)v2);
  uint64_t v7 = *(void **)(a1 + 136);
  uint64_t v8 = *(void **)(a1 + 144);
  char v9 = *(unsigned char *)(a1 + 152);
  *(void *)(a1 + 136) = v5;
  *(void *)(a1 + 144) = v6;
  *(unsigned char *)(a1 + 152) = (_BYTE)v2;
  sub_100121AA8(v7, v8, v9);
  return a1;
}

void *initializeWithTake for MercuryCacheUpdateTask(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x99uLL);
}

uint64_t assignWithTake for MercuryCacheUpdateTask(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = v4;
  sub_10004377C(a1 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_unknownObjectRelease();
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  sub_10004377C(a1 + 96);
  long long v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  char v9 = *(unsigned char *)(a2 + 152);
  long long v10 = *(void **)(a1 + 136);
  uint64_t v11 = *(void **)(a1 + 144);
  char v12 = *(unsigned char *)(a1 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(unsigned char *)(a1 + 152) = v9;
  sub_100121AA8(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for MercuryCacheUpdateTask(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 153))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MercuryCacheUpdateTask(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 152) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 153) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 153) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MercuryCacheUpdateTask()
{
  return &type metadata for MercuryCacheUpdateTask;
}

unint64_t sub_100133D58()
{
  unint64_t result = qword_1002316A0;
  if (!qword_1002316A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002316A0);
  }
  return result;
}

void sub_100133DA4(uint64_t a1)
{
  id v3 = [objc_allocWithZone((Class)AMSEngagementPushEvent) init];
  sub_100043478(&qword_10022D798);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1001C3110;
  *(void *)(v2 + 32) = a1;
  swift_bridgeObjectRetain();
  sub_1000BED1C(v2, v3);
  type metadata accessor for MessageEventNotifier();
  sub_100133E8C((uint64_t)v3);
}

uint64_t type metadata accessor for MessageAction()
{
  return self;
}

void sub_100133E74(uint64_t a1)
{
}

uint64_t sub_100133E8C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_100043478(&qword_10022E560);
  uint64_t v6 = *(void *)(type metadata accessor for LogMessage() - 8);
  uint64_t v7 = *(void *)(v6 + 72);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = (v8 + 32) & ~v8;
  uint64_t v53 = (uint64_t *)v5;
  uint64_t v50 = v8 | 7;
  uint64_t v51 = v9 + 2 * v7;
  long long v49 = xmmword_1001C3120;
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v52 = v9;
  uint64_t v48 = sub_100043478(&qword_1002317D8);
  uint64_t v58 = v48;
  v57[0] = v2;
  id v10 = (id)AMSLogKey();
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100043D14();
    sub_1000211AC();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_100049600(MetatypeMetadata);
    sub_1000423CC((uint64_t)&v54);
    v16._countAndFlagsBits = 5972026;
    v16._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    Swift::Int v56 = &type metadata for String;
    uint64_t v54 = v12;
    uint64_t v55 = v14;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v54);
    v17._countAndFlagsBits = 93;
    v17._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100043D14();
    sub_1000211AC();
    uint64_t v18 = swift_getMetatypeMetadata();
    sub_100049600(v18);
    sub_1000423CC((uint64_t)&v54);
    v19._countAndFlagsBits = 58;
    v19._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v57);
  LogMessage.init(stringLiteral:)();
  if (qword_10022C460 == -1) {
    goto LABEL_5;
  }
LABEL_34:
  swift_once();
LABEL_5:
  uint64_t v20 = static os_log_type_t.debug.getter();
  sub_10004841C(v20);
  swift_bridgeObjectRelease();
  if (qword_10022C3F0 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1000797A0();
  if (*(void *)(v21 + 16))
  {
    uint64_t v53 = &v47;
    sub_10005370C(v21, v57);
    uint64_t v22 = v57[0];
    uint64_t v23 = v57[1];
    uint64_t v24 = v58;
    unint64_t v25 = v59;
    int64_t v26 = (unint64_t)(v57[2] + 64) >> 6;
    swift_bridgeObjectRetain();
    if (v25)
    {
LABEL_9:
      unint64_t v27 = __clz(__rbit64(v25));
      v25 &= v25 - 1;
      unint64_t v28 = v27 | (v24 << 6);
      goto LABEL_26;
    }
    while (1)
    {
      int64_t v29 = v24 + 1;
      if (__OFADD__(v24, 1))
      {
        __break(1u);
        goto LABEL_34;
      }
      if (v29 >= v26) {
        goto LABEL_28;
      }
      unint64_t v30 = *(void *)(v23 + 8 * v29);
      uint64_t v31 = v24 + 1;
      if (!v30)
      {
        uint64_t v31 = v24 + 2;
        if (v24 + 2 >= v26) {
          goto LABEL_28;
        }
        unint64_t v30 = *(void *)(v23 + 8 * v31);
        if (!v30)
        {
          uint64_t v31 = v24 + 3;
          if (v24 + 3 >= v26) {
            goto LABEL_28;
          }
          unint64_t v30 = *(void *)(v23 + 8 * v31);
          if (!v30)
          {
            uint64_t v31 = v24 + 4;
            if (v24 + 4 >= v26) {
              goto LABEL_28;
            }
            unint64_t v30 = *(void *)(v23 + 8 * v31);
            if (!v30)
            {
              uint64_t v31 = v24 + 5;
              if (v24 + 5 >= v26) {
                goto LABEL_28;
              }
              unint64_t v30 = *(void *)(v23 + 8 * v31);
              if (!v30) {
                break;
              }
            }
          }
        }
      }
LABEL_25:
      unint64_t v25 = (v30 - 1) & v30;
      unint64_t v28 = __clz(__rbit64(v30)) + (v31 << 6);
      uint64_t v24 = v31;
LABEL_26:
      int v33 = *(_DWORD *)(*(void *)(v22 + 48) + 4 * v28);
      int64_t v34 = *(void **)(*(void *)(v22 + 56) + 8 * v28);
      swift_unknownObjectRetain();
      sub_100134460(v33, v34, v2, a1);
      swift_unknownObjectRelease();
      if (v25) {
        goto LABEL_9;
      }
    }
    int64_t v32 = v24 + 6;
    while (v32 < v26)
    {
      unint64_t v30 = *(void *)(v23 + 8 * v32++);
      if (v30)
      {
        uint64_t v31 = v32 - 1;
        goto LABEL_25;
      }
    }
LABEL_28:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    *(_OWORD *)(swift_allocObject() + 16) = v49;
    uint64_t v58 = v48;
    v57[0] = v2;
    id v36 = (id)AMSLogKey();
    if (v36)
    {
      unint64_t v37 = v36;
      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v40 = v39;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100043D14();
      sub_1000211AC();
      uint64_t v41 = swift_getMetatypeMetadata();
      sub_100049600(v41);
      sub_1000423CC((uint64_t)&v54);
      v42._countAndFlagsBits = 5972026;
      v42._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v42);
      Swift::Int v56 = &type metadata for String;
      uint64_t v54 = v38;
      uint64_t v55 = v40;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v54);
      v43._countAndFlagsBits = 93;
      v43._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v43);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100043D14();
      sub_100049788(v57, v58);
      uint64_t DynamicType = swift_getDynamicType();
      Swift::Int v56 = (void *)swift_getMetatypeMetadata();
      uint64_t v54 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v54);
      v45._countAndFlagsBits = 58;
      v45._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v45);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v57);
    LogMessage.init(stringLiteral:)();
    uint64_t v46 = static os_log_type_t.default.getter();
    sub_10004841C(v46);
    return swift_bridgeObjectRelease();
  }
}

id sub_100134460(int a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v8 - 8);
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3FC0;
  int64_t v26 = (void *)sub_100043478(&qword_1002317D8);
  v25[0] = a3;
  id v9 = (id)AMSLogKey();
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v14._countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    sub_100049788(v25, (uint64_t)v26);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v23[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v23);
    v16._countAndFlagsBits = 5972026;
    v16._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    uint64_t MetatypeMetadata = &type metadata for String;
    v23[0] = v11;
    v23[1] = v13;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v23);
    v17._countAndFlagsBits = 93;
    v17._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v18._countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    sub_100049788(v25, (uint64_t)v26);
    uint64_t v19 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v23[0] = v19;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v23);
    v20._countAndFlagsBits = 58;
    v20._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v25);
  LogMessage.init(stringLiteral:)();
  int64_t v26 = &type metadata for Int32;
  LODWORD(v25[0]) = a1;
  static LogMessage.safe(_:)();
  sub_1000423CC((uint64_t)v25);
  LogMessage.init(stringLiteral:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v21 = static os_log_type_t.debug.getter();
  sub_10004841C(v21);
  swift_bridgeObjectRelease();
  return [a2 handlePushedEvent:a4];
}

uint64_t type metadata accessor for MessageEventNotifier()
{
  return self;
}

uint64_t sub_1001347D8(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_11;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v15 = v3 & 0xC000000000000001;
    a2 += 120;
    uint64_t v5 = 4;
    while (1)
    {
      if (v15)
      {
        uint64_t v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v6 = *(void **)(v3 + 8 * v5);
        swift_unknownObjectRetain();
      }
      uint64_t v7 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      uint64_t v8 = v4;
      unint64_t v9 = v3;
      id v10 = objc_msgSend(objc_msgSend(v6, "identifier"), "name");
      swift_unknownObjectRelease();
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;

      unint64_t v3 = v9;
      uint64_t v4 = v8;
      swift_beginAccess();
      sub_10016CF70(v11, v13);
      swift_endAccess();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++v5;
      if (v7 == v8) {
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
  }
LABEL_12:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100134990(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_11;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v16 = v3 & 0xC000000000000001;
    a2 += 120;
    uint64_t v5 = 4;
    while (1)
    {
      if (v16)
      {
        uint64_t v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v6 = *(void **)(v3 + 8 * v5);
        swift_unknownObjectRetain();
      }
      uint64_t v7 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      id v8 = [v6 name];
      uint64_t v9 = v4;
      unint64_t v10 = v3;
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;

      swift_beginAccess();
      uint64_t v14 = v11;
      unint64_t v3 = v10;
      uint64_t v4 = v9;
      sub_10016CF70(v14, v13);
      swift_endAccess();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++v5;
      if (v7 == v9) {
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
  }
LABEL_12:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100134B24(uint64_t a1, void (*a2)(unsigned char *, id))
{
  sub_10005370C(a1, v17);
  uint64_t v3 = v17[0];
  uint64_t v4 = v17[1];
  int64_t v5 = v17[3];
  unint64_t v6 = v17[4];
  int64_t v7 = (unint64_t)(v17[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v10 = v9 | (v5 << 6);
  while (1)
  {
    sub_1000433B4(*(void *)(v3 + 48) + 40 * v10, (uint64_t)v15);
    id v16 = *(id *)(*(void *)(v3 + 56) + 8 * v10);
    a2(v15, v16);
    uint64_t result = sub_100027BD8((uint64_t)v15, (uint64_t *)&unk_100231DC0);
    if (v6) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v11 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (v11 >= v7) {
      return swift_release();
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    int64_t v13 = v5 + 1;
    if (!v12)
    {
      int64_t v13 = v5 + 2;
      if (v5 + 2 >= v7) {
        return swift_release();
      }
      unint64_t v12 = *(void *)(v4 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v5 + 3;
        if (v5 + 3 >= v7) {
          return swift_release();
        }
        unint64_t v12 = *(void *)(v4 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v5 + 4;
          if (v5 + 4 >= v7) {
            return swift_release();
          }
          unint64_t v12 = *(void *)(v4 + 8 * v13);
          if (!v12)
          {
            int64_t v13 = v5 + 5;
            if (v5 + 5 >= v7) {
              return swift_release();
            }
            unint64_t v12 = *(void *)(v4 + 8 * v13);
            if (!v12)
            {
              int64_t v14 = v5 + 6;
              while (v14 < v7)
              {
                unint64_t v12 = *(void *)(v4 + 8 * v14++);
                if (v12)
                {
                  int64_t v13 = v14 - 1;
                  goto LABEL_18;
                }
              }
              return swift_release();
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v5 = v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_100134CB8(uint64_t a1, void (*a2)(unsigned char *, uint64_t))
{
  sub_10005370C(a1, v18);
  uint64_t v3 = v18[0];
  uint64_t v4 = v18[1];
  int64_t v5 = v18[3];
  unint64_t v6 = v18[4];
  int64_t v7 = (unint64_t)(v18[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v10 = v9 | (v5 << 6);
  while (1)
  {
    sub_1000433B4(*(void *)(v3 + 48) + 40 * v10, (uint64_t)v16);
    uint64_t v17 = *(void *)(*(void *)(v3 + 56) + 8 * v10);
    uint64_t v15 = v17;
    swift_unknownObjectRetain();
    a2(v16, v15);
    uint64_t result = sub_100027BD8((uint64_t)v16, &qword_100231E18);
    if (v6) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v11 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (v11 >= v7) {
      return swift_release();
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    int64_t v13 = v5 + 1;
    if (!v12)
    {
      int64_t v13 = v5 + 2;
      if (v5 + 2 >= v7) {
        return swift_release();
      }
      unint64_t v12 = *(void *)(v4 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v5 + 3;
        if (v5 + 3 >= v7) {
          return swift_release();
        }
        unint64_t v12 = *(void *)(v4 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v5 + 4;
          if (v5 + 4 >= v7) {
            return swift_release();
          }
          unint64_t v12 = *(void *)(v4 + 8 * v13);
          if (!v12)
          {
            int64_t v13 = v5 + 5;
            if (v5 + 5 >= v7) {
              return swift_release();
            }
            unint64_t v12 = *(void *)(v4 + 8 * v13);
            if (!v12)
            {
              int64_t v14 = v5 + 6;
              while (v14 < v7)
              {
                unint64_t v12 = *(void *)(v4 + 8 * v14++);
                if (v12)
                {
                  int64_t v13 = v14 - 1;
                  goto LABEL_18;
                }
              }
              return swift_release();
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v5 = v13;
  }
  __break(1u);
  return result;
}

void *sub_100134E50(unint64_t a1, __objc2_prot_list **p_prots)
{
  unint64_t v3 = a1;
  unint64_t v27 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  int64_t v5 = (uint64_t *)(p_prots + 15);
  swift_beginAccess();
  if (v4)
  {
    unint64_t v6 = 0;
    uint64_t v23 = v3 & 0xFFFFFFFFFFFFFF8;
    unint64_t v24 = v3 & 0xC000000000000001;
    p_prots = &OBJC_CATEGORY_CKDatabase___amsengagementd.prots;
    uint64_t v21 = v4;
    unint64_t v22 = v3;
    while (1)
    {
      if (v24)
      {
        int64_t v7 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v6 >= *(void *)(v23 + 16))
        {
          __break(1u);
LABEL_18:
          __break(1u);
LABEL_19:
          uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
          goto LABEL_3;
        }
        int64_t v7 = *(void **)(v3 + 8 * v6 + 32);
        swift_unknownObjectRetain();
      }
      if (__OFADD__(v6, 1)) {
        goto LABEL_18;
      }
      unint64_t v25 = v6 + 1;
      uint64_t v8 = *v5;
      swift_bridgeObjectRetain();
      id v9 = objc_msgSend(objc_msgSend(v7, "identifier"), (SEL)p_prots[480]);
      swift_unknownObjectRelease();
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      int64_t v11 = p_prots;
      uint64_t v13 = v12;

      sub_100148B90(v10, v13, v8);
      LOBYTE(v9) = v14;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v9)
      {
        swift_unknownObjectRelease();
      }
      else
      {
        id v15 = objc_msgSend(objc_msgSend(v7, "identifier"), (SEL)v11[480]);
        swift_unknownObjectRelease();
        Swift::Int v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        Swift::Int v18 = v17;

        swift_beginAccess();
        sub_10004A8EC(&v26, v16, v18);
        swift_endAccess();
        swift_bridgeObjectRelease();
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      unint64_t v3 = v22;
      ++v6;
      p_prots = (__objc2_prot_list **)(&OBJC_CATEGORY_CKDatabase___amsengagementd + 32);
      if (v25 == v21)
      {
        uint64_t v19 = v27;
        goto LABEL_16;
      }
    }
  }
  uint64_t v19 = _swiftEmptyArrayStorage;
LABEL_16:
  swift_release();
  swift_bridgeObjectRelease();
  return v19;
}

void *sub_1001350DC(unint64_t a1, __objc2_prot_list **p_prots)
{
  unint64_t v3 = a1;
  Swift::Int v26 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  int64_t v5 = (uint64_t *)(p_prots + 15);
  swift_beginAccess();
  if (v4)
  {
    unint64_t v6 = 0;
    uint64_t v23 = v3 & 0xFFFFFFFFFFFFFF8;
    unint64_t v24 = v3 & 0xC000000000000001;
    p_prots = &OBJC_CATEGORY_CKDatabase___amsengagementd.prots;
    unint64_t v21 = v3;
    uint64_t v22 = v4;
    while (1)
    {
      if (v24)
      {
        int64_t v7 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v6 >= *(void *)(v23 + 16))
        {
          __break(1u);
LABEL_18:
          __break(1u);
LABEL_19:
          uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
          goto LABEL_3;
        }
        int64_t v7 = *(void **)(v3 + 8 * v6 + 32);
        swift_unknownObjectRetain();
      }
      unint64_t v8 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_18;
      }
      uint64_t v9 = *v5;
      swift_bridgeObjectRetain();
      id v10 = [v7 name];
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;

      sub_100148B90(v11, v13, v9);
      LOBYTE(v11) = v14;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v11)
      {
        swift_unknownObjectRelease();
      }
      else
      {
        id v15 = [v7 name];
        Swift::Int v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        Swift::Int v18 = v17;

        swift_beginAccess();
        sub_10004A8EC(&v25, v16, v18);
        swift_endAccess();
        swift_bridgeObjectRelease();
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      unint64_t v3 = v21;
      ++v6;
      if (v8 == v22)
      {
        uint64_t v19 = v26;
        goto LABEL_16;
      }
    }
  }
  uint64_t v19 = _swiftEmptyArrayStorage;
LABEL_16:
  swift_release();
  swift_bridgeObjectRelease();
  return v19;
}

void sub_100135314()
{
  type metadata accessor for MetricsIdentifierCloudDataController();
  uint64_t v0 = swift_allocObject();
  sub_1001369B0();
  qword_100244160 = v0;
}

uint64_t sub_100135354()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  sub_10006741C(v0, qword_1002317E0);
  sub_100067344(v0, (uint64_t)qword_1002317E0);
  return static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
}

id sub_1001353A4()
{
  if (*(void *)(v0 + 48))
  {
    id v1 = *(id *)(v0 + 48);
  }
  else
  {
    uint64_t v2 = *(void **)(v0 + 40);
    if (v2)
    {
      id v1 = *(id *)(v0 + 40);
    }
    else
    {
      id v3 = [objc_allocWithZone((Class)AMSCloudDataContainerOptions) init];
      [v3 setRecordZoneEncryption:1];
      id v4 = *(id *)(v0 + 72);
      sub_10002064C();
      NSString v5 = String._bridgeToObjectiveC()();
      id v1 = [v4 containerWithContainerIdentifier:v5 options:v3];

      uint64_t v2 = 0;
    }
    *(void *)(v0 + 48) = v1;
    id v6 = v2;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  return v1;
}

BOOL sub_1001354A4()
{
  uint64_t v0 = type metadata accessor for Date();
  sub_100020DEC();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_100011EC0();
  id v6 = (char *)(v4 - v5);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v12 - v8;
  sub_100135AE4();
  sub_100135618();
  Date.addingTimeInterval(_:)();
  id v10 = *(void (**)(char *, uint64_t))(v2 + 8);
  v10(v6, v0);
  Date.timeIntervalSinceNow.getter();
  v10(v9, v0);
  return (Double.sign.getter() & 1) == 0;
}

uint64_t sub_1001355A4()
{
  if (qword_10022C4A0 != -1) {
    swift_once();
  }
  id v0 = *(id *)(qword_100244108 + 16);
  return OSSignposter.init(logHandle:)();
}

void sub_100135618()
{
  sub_100049AD0();
  uint64_t v1 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v2 = sub_1000208F0(v1);
  __chkstk_darwin(v2);
  sub_100011D4C();
  uint64_t v3 = (void *)v0[4];
  sub_10002064C();
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v3 doubleForKey:v4];

  id v6 = [v5 valuePromise];
  v23[0] = 0;
  id v7 = [v6 resultWithError:v23];

  if (v7)
  {
    id v8 = v23[0];
    [v7 doubleValue];

    id v5 = v7;
  }
  else
  {
    id v9 = v23[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_10022C4A0 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v10 = type metadata accessor for LogMessage();
    sub_100044798(v10);
    sub_100109CB8();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
    uint64_t v24 = type metadata accessor for MetricsIdentifierCloudDataController();
    v23[0] = v0;
    swift_retain();
    id v11 = (id)AMSLogKey();
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v15 = v14;

      swift_bridgeObjectRetain();
      sub_100020F60();
      sub_100020E60();
      sub_100049788(v23, v24);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v21[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v21, &qword_10022F490);
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      v21[0] = v13;
      v21[1] = v15;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v21, &qword_10022F490);
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      sub_100020E60();
      uint64_t v17 = sub_10002106C(v23);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v21[0] = v17;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v21, &qword_10022F490);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v23);
    LogMessage.init(stringLiteral:)();
    swift_getErrorValue();
    uint64_t v24 = v20;
    sub_10003BAA4((uint64_t *)v23);
    sub_1000456E0();
    sub_100011DCC();
    v18();
    static LogMessage.safe(_:)();
    sub_100027BD8((uint64_t)v23, &qword_10022F490);
    uint64_t v19 = static os_log_type_t.debug.getter();
    sub_10004841C(v19);
    swift_bridgeObjectRelease();
    swift_errorRelease();
  }

  sub_100020998();
}

uint64_t sub_100135A08(uint64_t a1)
{
  Date.timeIntervalSince1970.getter();
  id v2 = [self standardUserDefaults];
  Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  NSString v4 = String._bridgeToObjectiveC()();
  [v2 setValue:isa forKey:v4];

  type metadata accessor for Date();
  sub_1000456E0();
  id v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  return v7(a1, v5);
}

uint64_t sub_100135AE4()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 doubleForKey:v1];
  unint64_t v3 = v2;

  v4.n128_u64[0] = v3;
  return Date.init(timeIntervalSince1970:)(v4);
}

void sub_100135B7C()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v5 = sub_1000208F0(v4);
  __chkstk_darwin(v5);
  sub_10002D300();
  uint64_t v6 = sub_1001366BC();
  uint64_t v8 = v7;
  if (!v1)
  {
    if (!v7)
    {
LABEL_37:
      sub_100020FDC();
      return;
    }
    if (qword_10022C4A0 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v11 = sub_10002D318();
    sub_100044798(v11);
    *(_OWORD *)(sub_10002D330() + 16) = xmmword_1001C3120;
    uint64_t v12 = type metadata accessor for MetricsIdentifierCloudDataController();
    sub_10002123C(v12);
    id v13 = (id)AMSLogKey();
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v17 = v16;

      swift_bridgeObjectRetain();
      sub_100020F60();
      sub_100020B08();
      sub_100020F04(v54);
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_100043998(MetatypeMetadata);
      sub_10002E604();
      sub_100020E44();
      uint64_t v53 = &type metadata for String;
      uint64_t v51 = v15;
      uint64_t v52 = v17;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002E604();
      sub_1000208D8();
      sub_100047718();
      uint64_t v1 = 0;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      sub_100020B08();
      sub_100020F04(v54);
      uint64_t v32 = swift_getMetatypeMetadata();
      sub_100043998(v32);
      sub_100027BD8((uint64_t)&v51, &qword_10022F490);
      sub_100020E94();
      sub_100047718();
    }
    sub_10004377C((uint64_t)v54);
    sub_100020924();
    LogMessage.init(stringLiteral:)();
    uint64_t v33 = static os_log_type_t.info.getter();
    sub_10004841C(v33);
    swift_bridgeObjectRelease();
LABEL_25:
    swift_bridgeObjectRelease();
    if (qword_10022C4A0 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v34 = sub_10002D318();
    sub_100044798(v34);
    *(_OWORD *)(sub_10002D330() + 16) = xmmword_1001C3120;
    uint64_t v35 = type metadata accessor for MetricsIdentifierCloudDataController();
    sub_10002123C(v35);
    id v36 = (id)AMSLogKey();
    if (v36)
    {
      unint64_t v37 = v36;
      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v50 = v1;
      uint64_t v40 = v39;

      swift_bridgeObjectRetain();
      sub_100020F60();
      sub_100020B08();
      sub_100020F04(v54);
      uint64_t v41 = swift_getMetatypeMetadata();
      sub_100043998(v41);
      sub_1001439C8();
      sub_100020E44();
      uint64_t v53 = &type metadata for String;
      uint64_t v51 = v38;
      uint64_t v52 = v40;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1001439C8();
      sub_1000208D8();
      sub_100047718();
      uint64_t v1 = v50;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      sub_100020B08();
      sub_100020F04(v54);
      uint64_t v42 = swift_getMetatypeMetadata();
      sub_100043998(v42);
      sub_100027BD8((uint64_t)&v51, &qword_10022F490);
      sub_100020E94();
      sub_100047718();
    }
    sub_10004377C((uint64_t)v54);
    LogMessage.init(stringLiteral:)();
    uint64_t v43 = static os_log_type_t.info.getter();
    sub_10004841C(v43);
    swift_bridgeObjectRelease();
    sub_100136314();
    id v44 = [sub_1001353A4() privateDatabase];
    swift_unknownObjectRelease();
    if (qword_10022C560 != -1) {
      swift_once();
    }
    objc_msgSend(v44, "persistChangedRecordsChangeToken:forRecordZoneIdentifier:", 0, qword_1002317F8, v48);
    swift_unknownObjectRelease();
LABEL_33:
    id v45 = [self standardUserDefaults];
    if (v1)
    {
      NSString v46 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v46 = 0;
    }
    NSString v47 = String._bridgeToObjectiveC()();
    [v45 setValue:v46 forKey:v47];

    swift_unknownObjectRelease();
    sub_100136764(0);
    goto LABEL_37;
  }
  if (!v7 || (v6 == v3 ? (BOOL v9 = v7 == v1) : (BOOL v9 = 0), !v9 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0))
  {
    if (qword_10022C4A0 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v19 = sub_10002D318();
    sub_100044798(v19);
    uint64_t v48 = *(void *)(v20 + 72);
    *(_OWORD *)(sub_10002D330() + 16) = xmmword_1001C3120;
    uint64_t v21 = type metadata accessor for MetricsIdentifierCloudDataController();
    sub_10002123C(v21);
    id v22 = (id)AMSLogKey();
    if (v22)
    {
      uint64_t v23 = v22;
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v49 = v1;
      uint64_t v26 = v25;

      swift_bridgeObjectRetain();
      sub_100020F60();
      sub_100020B08();
      sub_100020F04(v54);
      uint64_t v27 = swift_getMetatypeMetadata();
      sub_100043998(v27);
      sub_10002E604();
      sub_100020E44();
      uint64_t v53 = &type metadata for String;
      uint64_t v51 = v24;
      uint64_t v52 = v26;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002E604();
      sub_1000208D8();
      sub_100047718();
      uint64_t v1 = v49;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      sub_100020B08();
      sub_100020F04(v54);
      uint64_t v28 = swift_getMetatypeMetadata();
      sub_100043998(v28);
      sub_100027BD8((uint64_t)&v51, &qword_10022F490);
      sub_100020E94();
      sub_100047718();
    }
    sub_10004377C((uint64_t)v54);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v29._countAndFlagsBits = 0xD000000000000038;
    v29._object = (void *)0x80000001001D4D70;
    LogMessage.StringInterpolation.appendLiteral(_:)(v29);
    v54[3] = &type metadata for String;
    v54[0] = v3;
    v54[1] = v1;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v54, &qword_10022F490);
    v30._countAndFlagsBits = 46;
    v30._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    LogMessage.init(stringInterpolation:)();
    uint64_t v31 = static os_log_type_t.info.getter();
    sub_10004841C(v31);
    swift_bridgeObjectRelease();
    if (!v8) {
      goto LABEL_33;
    }
    goto LABEL_25;
  }
  swift_bridgeObjectRelease();
  sub_100020FDC();
  swift_bridgeObjectRelease();
}

uint64_t sub_100136314()
{
  uint64_t v0 = sub_100043478(&qword_10022FB40);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  BOOL v9 = (char *)v30 - v8;
  id v10 = [self defaultManager];
  sub_1001AD0C0();
  URL._bridgeToObjectiveC()(v11);
  id v13 = v12;
  id v36 = 0;
  id v35 = v10;
  id v14 = [v10 contentsOfDirectoryAtURL:v12 includingPropertiesForKeys:0 options:1 error:&v36];

  id v15 = v36;
  if (v14)
  {
    uint64_t v31 = v9;
    uint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    id v17 = v15;

    uint64_t v18 = *(void *)(v16 + 16);
    uint64_t v32 = v4;
    v30[1] = v16;
    if (v18)
    {
      uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      uint64_t v19 = v4 + 16;
      unint64_t v21 = v16 + ((*(unsigned __int8 *)(v19 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 64));
      uint64_t v33 = *(void *)(v19 + 56);
      uint64_t v34 = v20;
      swift_bridgeObjectRetain();
      while (1)
      {
        v34(v2, v21, v3);
        sub_100021AC0((uint64_t)v2, 0, 1, v3);
        if (sub_10004FD40((uint64_t)v2, 1, v3) == 1) {
          break;
        }
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v7, v2, v3);
        URL._bridgeToObjectiveC()(v22);
        uint64_t v24 = v23;
        id v36 = 0;
        unsigned int v25 = [v35 removeItemAtURL:v23 error:&v36];

        if (v25)
        {
          id v26 = v36;
        }
        else
        {
          id v27 = v36;
          _convertNSErrorToError(_:)();

          swift_willThrow();
          swift_errorRelease();
        }
        (*(void (**)(char *, uint64_t))(v19 - 8))(v7, v3);
        v21 += v33;
        if (!--v18) {
          goto LABEL_12;
        }
      }
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_12:
      sub_100021AC0((uint64_t)v2, 1, 1, v3);
    }
    swift_bridgeObjectRelease_n();
    BOOL v9 = v31;
    uint64_t v4 = v32;
  }
  else
  {
    id v28 = v36;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
  }
  [self clearSyncState];

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
}

uint64_t sub_1001366BC()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 stringForKey:v1];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void sub_100136764(char a1)
{
  id v2 = [self standardUserDefaults];
  Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
  NSString v4 = String._bridgeToObjectiveC()();
  [v2 setValue:isa forKey:v4];

  if ((a1 & 1) == 0)
  {
    sub_100136898();
  }
}

id sub_100136820()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 BOOLForKey:v1];

  return v2;
}

void sub_100136898()
{
  id v0 = [self standardUserDefaults];
  Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
  NSString v2 = String._bridgeToObjectiveC()();
  [v0 setValue:isa forKey:v2];
}

id sub_100136938()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 BOOLForKey:v1];

  return v2;
}

void sub_1001369B0()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  NSString v47 = v2;
  uint64_t v3 = sub_100043478((uint64_t *)&unk_100231D40);
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  sub_100040A70();
  uint64_t v40 = v5;
  sub_100043EA8();
  uint64_t v48 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  sub_100020DEC();
  uint64_t v50 = v6;
  __chkstk_darwin(v7);
  sub_100040A70();
  uint64_t v39 = v8;
  uint64_t v42 = sub_100043478((uint64_t *)&unk_10022F680);
  sub_100020DEC();
  uint64_t v49 = v9;
  __chkstk_darwin(v10);
  sub_100040A70();
  uint64_t v41 = v11;
  sub_100043EA8();
  type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  sub_100020DEC();
  uint64_t v44 = v13;
  uint64_t v46 = v12;
  __chkstk_darwin(v12);
  sub_100040A70();
  uint64_t v43 = v14;
  sub_100043EA8();
  type metadata accessor for OS_dispatch_queue.Attributes();
  sub_1000456E0();
  __chkstk_darwin(v15);
  sub_10004277C();
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v17 = sub_1000208F0(v16);
  __chkstk_darwin(v17);
  sub_100022558();
  sub_100043478((uint64_t *)&unk_100231D50);
  swift_allocObject();
  *(void *)(v0 + 16) = PassthroughSubject.init()();
  *(void *)(v0 + 24) = 0;
  sub_10004D510(0, (unint64_t *)&qword_100232020);
  id v18 = sub_100051DF8();
  *(void *)(v0 + 64) = 0;
  *(unsigned char *)(v0 + 80) = 0;
  *(void *)(v0 + 40) = 0;
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 32) = v18;
  *(unsigned char *)(v0 + 56) = 0;
  swift_allocObject();
  *(void *)(v0 + 88) = PassthroughSubject.init()();
  *(void *)(v0 + 96) = 0;
  *(void *)(v0 + 112) = [objc_allocWithZone((Class)NSLock) init];
  *(void *)(v0 + 120) = &_swiftEmptySetSingleton;
  sub_10004D510(0, (unint64_t *)&qword_10022F690);
  if (qword_10022C590 != -1) {
    swift_once();
  }
  id v19 = (id)qword_100244188;
  static DispatchQoS.unspecified.getter();
  sub_10002AFF8((unint64_t *)&qword_10022F470, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100043478((uint64_t *)&unk_100231D60);
  sub_10002B6DC((unint64_t *)&qword_10022F480, (uint64_t *)&unk_100231D60);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(uint64_t, void, uint64_t))(v44 + 104))(v43, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v46);
  sub_10002064C();
  *(void *)(v0 + 128) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  swift_allocObject();
  *(void *)(v0 + 136) = PassthroughSubject.init()();
  *(_OWORD *)(v0 + 144) = xmmword_1001C70C0;
  *(void *)(v0 + 160) = 0x80000001001D4420;
  *(void *)(v0 + 168) = 0xD000000000000022;
  *(void *)(v0 + 192) = 0x80000001001D4480;
  *(void *)(v0 + 200) = 0xD00000000000002BLL;
  *(void *)(v0 + 176) = 0x80000001001D4450;
  *(void *)(v0 + 184) = 0xD00000000000001FLL;
  *(void *)(v0 + 208) = 0x80000001001D44A0;
  uint64_t v20 = *(void **)(v0 + 40);
  *(void *)(v1 + 40) = v47;
  id v38 = v47;

  sub_10004D510(0, (unint64_t *)&unk_100231D70);
  sub_10002064C();
  *(void *)(v1 + 72) = sub_100137294();
  *(void *)(v1 + 104) = [objc_allocWithZone((Class)AMSMetricsIdentifierCloudDataSource) init];
  [*(id *)(v1 + 72) setDelegate:v1];
  [*(id *)(v1 + 104) setDelegate:v1];
  uint64_t v21 = qword_10022C558;
  swift_retain();
  if (v21 != -1) {
    swift_once();
  }
  sub_100067344(v48, (uint64_t)qword_1002317E0);
  sub_100035D08();
  v22();
  uint64_t v23 = *(void **)(v1 + 128);
  uint64_t v51 = v23;
  uint64_t v45 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  sub_100021AC0(v40, 1, 1, v45);
  sub_10002B6DC(&qword_10022ED18, (uint64_t *)&unk_100231D50);
  sub_100143190((unint64_t *)&qword_10022F6A0, (unint64_t *)&qword_10022F690);
  id v24 = v23;
  sub_100049FB4();
  Publisher.debounce<A>(for:scheduler:options:)();
  sub_100027BD8(v40, (uint64_t *)&unk_100231D40);

  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v39, v48);
  swift_release();
  unsigned int v25 = (void *)sub_100021AF4();
  sub_100143A10();
  sub_10002B6DC(&qword_10022ED20, (uint64_t *)&unk_10022F680);
  uint64_t v26 = Publisher<>.sink(receiveValue:)();
  swift_release();
  id v27 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
  sub_100043FB0();
  v28();
  *(void *)(v1 + 24) = v26;
  swift_release();
  sub_100035D08();
  v29();
  sub_100035D14();
  id v30 = v25;
  sub_100049FB4();
  Publisher.debounce<A>(for:scheduler:options:)();
  sub_100027BD8(v40, (uint64_t *)&unk_100231D40);

  sub_100043FB0();
  v31();
  swift_release();
  uint64_t v32 = (void *)sub_100021AF4();
  sub_100143A10();
  uint64_t v33 = Publisher<>.sink(receiveValue:)();
  swift_release();
  v27(v41, v42);
  *(void *)(v1 + 96) = v33;
  swift_release();
  sub_100035D08();
  v34();
  sub_100035D14();
  id v35 = v32;
  sub_100049FB4();
  Publisher.debounce<A>(for:scheduler:options:)();
  sub_100027BD8(v40, (uint64_t *)&unk_100231D40);

  sub_100043FB0();
  v36();
  swift_release();
  sub_100021AF4();
  sub_100143A10();
  uint64_t v37 = Publisher<>.sink(receiveValue:)();

  swift_release();
  v27(v41, v42);
  *(void *)(v1 + 144) = v37;
  swift_release();
  sub_100020FDC();
}

id sub_100137294()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithPushNotificationTopic:v1];

  return v2;
}

uint64_t sub_100137308()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    sub_100141B00();
    return swift_release_n();
  }
  return result;
}

void sub_100137374()
{
}

uint64_t sub_10013739C()
{
  uint64_t v0 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v0 - 8);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v2 = result;
    if (sub_1001354A4())
    {
      if (qword_10022C4A0 != -1) {
        swift_once();
      }
      sub_100043478(&qword_10022E560);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      uint64_t v19 = type metadata accessor for MetricsIdentifierCloudDataController();
      v18[0] = v2;
      swift_retain();
      id v3 = (id)AMSLogKey();
      if (v3)
      {
        uint64_t v4 = v3;
        uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v7 = v6;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v8._countAndFlagsBits = 0;
        v8._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v8);
        sub_100049788(v18, v19);
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v16[0] = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)v16, &qword_10022F490);
        v10._countAndFlagsBits = 5972026;
        v10._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v10);
        uint64_t MetatypeMetadata = &type metadata for String;
        v16[0] = v5;
        v16[1] = v7;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)v16, &qword_10022F490);
        v11._countAndFlagsBits = 93;
        v11._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v11);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v12._countAndFlagsBits = 0;
        v12._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v12);
        sub_100049788(v18, v19);
        uint64_t v13 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v16[0] = v13;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)v16, &qword_10022F490);
        v14._countAndFlagsBits = 58;
        v14._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v14);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)v18);
      LogMessage.init(stringLiteral:)();
      uint64_t v15 = static os_log_type_t.info.getter();
      sub_10004841C(v15);
      swift_release();
      return swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
      sub_100141B00();
      return swift_release_n();
    }
  }
  return result;
}

void sub_100137720()
{
  sub_100045024();
  sub_1001377B4();
  if ((v0 & 1) == 0)
  {
    swift_retain();
    sub_100141B00();
    swift_release();
  }
}

void sub_1001377B4()
{
  sub_1000209F4();
  char v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v8 = sub_1000208F0(v7);
  __chkstk_darwin(v8);
  sub_100011D4C();
  if (static DeviceDetails.deviceIsRunningInternalBuild()())
  {
    unsigned int v9 = [self autoSyncDisabledForMetricsIdentifierStore];
    if (v9)
    {
      if ((v2 & 1) == 0)
      {
        char v10 = v9;
        if (qword_10022C4A0 != -1) {
          swift_once();
        }
        sub_100043478(&qword_10022E560);
        uint64_t v11 = type metadata accessor for LogMessage();
        sub_100044798(v11);
        sub_100022804();
        *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
        uint64_t v26 = (void *)sub_100043478(&qword_100231E38);
        v25[0] = v0;
        id v12 = (id)AMSLogKey();
        if (v12)
        {
          uint64_t v13 = v12;
          uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v16 = v15;

          swift_bridgeObjectRetain();
          sub_100020F60();
          sub_100020E60();
          sub_100049788(v25, (uint64_t)v26);
          swift_getDynamicType();
          swift_getMetatypeMetadata();
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_1000409A0();
          sub_100020E44();
          uint64_t MetatypeMetadata = &type metadata for String;
          v23[0] = v14;
          v23[1] = v16;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_1000409A0();
          sub_1000208D8();
          sub_100011DB4();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_100020980();
          sub_100020E60();
          uint64_t v17 = sub_100043D30(v25);
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
          v23[0] = v17;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_100027BD8((uint64_t)v23, &qword_10022F490);
          sub_100020E94();
          sub_100011DB4();
        }
        sub_10004377C((uint64_t)v25);
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v18._countAndFlagsBits = 0x676E697070696B53;
        v18._object = (void *)0xE900000000000020;
        LogMessage.StringInterpolation.appendLiteral(_:)(v18);
        uint64_t v26 = &type metadata for String;
        v25[0] = v6;
        v25[1] = v4;
        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100036364();
        v19._countAndFlagsBits = 0xD000000000000018;
        v19._object = (void *)0x80000001001D4CA0;
        LogMessage.StringInterpolation.appendLiteral(_:)(v19);
        uint64_t v26 = &type metadata for Bool;
        LOBYTE(v25[0]) = 1;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100036364();
        sub_10002064C();
        v20._countAndFlagsBits = 0xD000000000000016;
        LogMessage.StringInterpolation.appendLiteral(_:)(v20);
        uint64_t v26 = &type metadata for Bool;
        LOBYTE(v25[0]) = v10;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100036364();
        v21._countAndFlagsBits = 0x6C61756E616D202CLL;
        v21._object = (void *)0xEF203A636E797320;
        LogMessage.StringInterpolation.appendLiteral(_:)(v21);
        uint64_t v26 = &type metadata for Bool;
        LOBYTE(v25[0]) = 0;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100036364();
        sub_100020E60();
        sub_100011DB4();
        uint64_t v22 = static os_log_type_t.default.getter();
        sub_10004841C(v22);
        swift_bridgeObjectRelease();
      }
    }
  }
  sub_100020FDC();
}

id sub_100137B30(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v2 - 8);
  if (sub_1001354A4())
  {
    if (qword_10022C4A0 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v38 = type metadata accessor for MetricsIdentifierCloudDataController();
    v37[0] = a1;
    swift_retain();
    id v3 = (id)AMSLogKey();
    if (v3)
    {
      uint64_t v4 = v3;
      uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v7 = v6;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v8._countAndFlagsBits = 0;
      v8._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v8);
      sub_100049788(v37, v38);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v34 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v34, &qword_10022F490);
      v10._countAndFlagsBits = 5972026;
      v10._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v10);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v34 = v5;
      uint64_t v35 = v7;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v34, &qword_10022F490);
      v11._countAndFlagsBits = 93;
      v11._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v11);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v21._countAndFlagsBits = 0;
      v21._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v21);
      sub_100049788(v37, v38);
      uint64_t v22 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v34 = v22;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v34, &qword_10022F490);
      v23._countAndFlagsBits = 58;
      v23._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v37);
    LogMessage.init(stringLiteral:)();
    uint64_t v24 = static os_log_type_t.info.getter();
    sub_10004841C(v24);
    swift_bridgeObjectRelease();
    id v25 = [self promiseWithSuccess];
    return v25;
  }
  else
  {
    if (qword_10022C4A0 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v38 = type metadata accessor for MetricsIdentifierCloudDataController();
    v37[0] = a1;
    swift_retain();
    id v12 = (id)AMSLogKey();
    if (v12)
    {
      uint64_t v13 = v12;
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v16 = v15;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v17._countAndFlagsBits = 0;
      v17._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v17);
      sub_100049788(v37, v38);
      uint64_t v18 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v34 = v18;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v34, &qword_10022F490);
      v19._countAndFlagsBits = 5972026;
      v19._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v19);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v34 = v14;
      uint64_t v35 = v16;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v34, &qword_10022F490);
      v20._countAndFlagsBits = 93;
      v20._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v27._countAndFlagsBits = 0;
      v27._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      sub_100049788(v37, v38);
      uint64_t v28 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v34 = v28;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v34, &qword_10022F490);
      v29._countAndFlagsBits = 58;
      v29._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v29);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v37);
    LogMessage.init(stringLiteral:)();
    uint64_t v30 = static os_log_type_t.info.getter();
    sub_10004841C(v30);
    swift_bridgeObjectRelease();
    [self cleanupIdentifiers];
    sub_10004D510(0, &qword_100231DE8);
    sub_100043478(&qword_100231DE0);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1001C70D0;
    sub_10013CD4C();
    *(void *)(v31 + 32) = v32;
    sub_100139330();
    *(void *)(v31 + 40) = v33;
    v37[0] = v31;
    specialized Array._endMutation()();
    return sub_1001381A0();
  }
}

id sub_1001381A0()
{
  sub_10004D510(0, &qword_100231DE8);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v1 = [(id)swift_getObjCClassFromMetadata() promiseWithFlattenedPromises:isa];

  return v1;
}

void sub_100138224()
{
  sub_1000209F4();
  sub_100045024();
  uint64_t v0 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v1 = sub_1000208F0(v0);
  __chkstk_darwin(v1);
  sub_100047480();
  sub_1001377B4();
  if ((v2 & 1) == 0)
  {
    if (qword_10022C4A0 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v3 = sub_10002D318();
    sub_100044798(v3);
    sub_100109CB8();
    *(_OWORD *)(sub_10002D330() + 16) = xmmword_1001C3120;
    uint64_t v4 = type metadata accessor for MetricsIdentifierCloudDataController();
    sub_10002123C(v4);
    id v5 = (id)AMSLogKey();
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v9 = v8;

      swift_bridgeObjectRetain();
      sub_100020F60();
      sub_100043D14();
      sub_100020F04(v14);
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_100044930(MetatypeMetadata);
      sub_100027BD8((uint64_t)v13, &qword_10022F490);
      sub_100020E44();
      v13[3] = &type metadata for String;
      v13[0] = v7;
      v13[1] = v9;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v13, &qword_10022F490);
      sub_1000208D8();
      sub_100042BD8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      sub_100043D14();
      sub_100020F04(v14);
      uint64_t v11 = swift_getMetatypeMetadata();
      sub_100044930(v11);
      sub_100027BD8((uint64_t)v13, &qword_10022F490);
      sub_100020E94();
      sub_100042BD8();
    }
    sub_10004377C((uint64_t)v14);
    LogMessage.init(stringLiteral:)();
    uint64_t v12 = static os_log_type_t.debug.getter();
    sub_10004841C(v12);
    swift_bridgeObjectRelease();
    swift_retain();
    sub_100043478((uint64_t *)&unk_100231D50);
    sub_10002B6DC((unint64_t *)&unk_10022F6B0, (uint64_t *)&unk_100231D50);
    Subject<>.send()();
    swift_release();
  }
  sub_100020FDC();
}

void sub_1001384B4()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  char v3 = v2;
  sub_100045024();
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v5 = sub_1000208F0(v4);
  __chkstk_darwin(v5);
  sub_100022558();
  sub_1001377B4();
  if ((v6 & 1) == 0)
  {
    if (qword_10022C4A0 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v7 = sub_10002D318();
    sub_100044798(v7);
    sub_10003BDEC();
    *(_OWORD *)(sub_10002D330() + 16) = xmmword_1001C3120;
    uint64_t v8 = type metadata accessor for MetricsIdentifierCloudDataController();
    sub_10002123C(v8);
    id v9 = (id)AMSLogKey();
    if (v9)
    {
      Swift::String v10 = v9;
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;

      swift_bridgeObjectRetain();
      sub_100020F60();
      v14._countAndFlagsBits = 0;
      v14._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v14);
      sub_100020F04(v20);
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_10002069C(MetatypeMetadata);
      sub_1000409A0();
      sub_100020E44();
      v19[3] = &type metadata for String;
      v19[0] = v11;
      v19[1] = v13;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000409A0();
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      v16._countAndFlagsBits = 0;
      v16._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v16);
      sub_100020F04(v20);
      uint64_t v17 = swift_getMetatypeMetadata();
      sub_10002069C(v17);
      sub_100027BD8((uint64_t)v19, &qword_10022F490);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v20);
    LogMessage.init(stringLiteral:)();
    uint64_t v18 = static os_log_type_t.debug.getter();
    sub_10004841C(v18);
    swift_bridgeObjectRelease();
    *(unsigned char *)(v1 + 56) = v3 & 1;
    swift_retain();
    sub_100043478((uint64_t *)&unk_100231D50);
    sub_10002B6DC((unint64_t *)&unk_10022F6B0, (uint64_t *)&unk_100231D50);
    Subject<>.send()();
    swift_release();
  }
  sub_100020FDC();
}

id sub_10013877C(void *a1, char a2)
{
  if (qword_10022C560 != -1) {
    swift_once();
  }
  NSString v5 = [(id)qword_1002317F8 name];
  if (!v5)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  id v6 = [a1 createRecordZoneWithRecordZoneName:v5];

  if (a2)
  {
    id v7 = [self promiseWithResult:v6];
    swift_unknownObjectRelease();
    return v7;
  }
  else
  {
    id v9 = [a1 saveRecordZone:v6];
    uint64_t v10 = sub_100035CB8();
    *(void *)(v10 + 16) = v2;
    *(void *)(v10 + 24) = a1;
    v12[4] = sub_1001438E8;
    v12[5] = v10;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_100138D04;
    v12[3] = &unk_100215000;
    uint64_t v11 = _Block_copy(v12);
    swift_retain();
    swift_unknownObjectRetain();
    swift_release();
    [v9 addSuccessBlock:v11];
    _Block_release(v11);
    swift_unknownObjectRelease();
    return v9;
  }
}

void sub_10013895C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v6 - 8);
  sub_100136764(1);
  if (qword_10022C4A0 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t ObjectType = type metadata accessor for MetricsIdentifierCloudDataController();
  v25[0] = a2;
  swift_retain();
  id v7 = (id)AMSLogKey();
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v22 = a3;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    sub_100049788(v25, ObjectType);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v23[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v23, &qword_10022F490);
    v14._countAndFlagsBits = 5972026;
    v14._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    uint64_t MetatypeMetadata = &type metadata for String;
    v23[0] = v9;
    v23[1] = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v23, &qword_10022F490);
    v15._countAndFlagsBits = 93;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
    a3 = v22;
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    sub_100049788(v25, ObjectType);
    uint64_t v17 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v23[0] = v17;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v23, &qword_10022F490);
    v18._countAndFlagsBits = 58;
    v18._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v25);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v19._object = (void *)0x80000001001D4C80;
  v19._countAndFlagsBits = 0xD000000000000014;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  uint64_t ObjectType = swift_getObjectType();
  v25[0] = a1;
  swift_unknownObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100027BD8((uint64_t)v25, &qword_10022F490);
  v20._countAndFlagsBits = 46;
  v20._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v20);
  LogMessage.init(stringInterpolation:)();
  uint64_t v21 = static os_log_type_t.info.getter();
  sub_10004841C(v21);
  swift_bridgeObjectRelease();
  sub_100138D08(a3);
}

void sub_100138D08(void *a1)
{
  uint64_t v2 = v1;
  if (qword_10022C560 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1002317F8;
  _StringGuts.grow(_:)(39);
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v4, "name", 0xD000000000000019, 0x80000001001D4BF0);
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  v9._countAndFlagsBits = v6;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 0x7069726373627553;
  v10._object = (void *)0xEC0000006E6F6974;
  String.append(_:)(v10);
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v12 = [a1 subscribeWithIdentifier:v11 recordZoneIdentifier:v4];

  uint64_t v13 = sub_100035CB8();
  *(void *)(v13 + 16) = v2;
  *(void *)(v13 + 24) = v4;
  v16[4] = sub_100143868;
  v16[5] = v13;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_10006D514;
  void v16[3] = &unk_100214FB0;
  Swift::String v14 = _Block_copy(v16);
  id v15 = v4;
  swift_retain();
  swift_release();
  [v12 addFinishBlock:v14];
  _Block_release(v14);
}

void sub_100138F20(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v7 - 8);
  if (a2)
  {
    swift_errorRetain();
    if (qword_10022C4A0 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v30 = type metadata accessor for MetricsIdentifierCloudDataController();
    v29[0] = a3;
    swift_retain();
    id v8 = (id)AMSLogKey();
    if (v8)
    {
      Swift::String v9 = v8;
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v12 = v11;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v13._countAndFlagsBits = 0;
      v13._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v13);
      sub_100049788(v29, v30);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v27[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v27, &qword_10022F490);
      v15._countAndFlagsBits = 5972026;
      v15._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v15);
      uint64_t MetatypeMetadata = &type metadata for String;
      v27[0] = v10;
      v27[1] = v12;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v27, &qword_10022F490);
      v16._countAndFlagsBits = 93;
      v16._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v16);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v17._countAndFlagsBits = 0;
      v17._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v17);
      sub_100049788(v29, v30);
      uint64_t v18 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v27[0] = v18;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v27, &qword_10022F490);
      v19._countAndFlagsBits = 58;
      v19._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v19);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v29);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v20._object = (void *)0x80000001001D4C10;
    v20._countAndFlagsBits = 0xD000000000000036;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    uint64_t v30 = sub_10004D510(0, (unint64_t *)&unk_100231D88);
    v29[0] = (uint64_t)a4;
    id v21 = a4;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v29, &qword_10022F490);
    v22._countAndFlagsBits = 0x20726F72726520;
    v22._object = (void *)0xE700000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    swift_getErrorValue();
    uint64_t v30 = v26;
    Swift::String v23 = sub_10003BAA4(v29);
    (*(void (**)(uint64_t *))(*(void *)(v26 - 8) + 16))(v23);
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v29, &qword_10022F490);
    v24._countAndFlagsBits = 46;
    v24._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    LogMessage.init(stringInterpolation:)();
    uint64_t v25 = static os_log_type_t.error.getter();
    sub_10004841C(v25);
    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  else
  {
    sub_100136898();
  }
}

void sub_100139330()
{
  sub_100049AD0();
  uint64_t v2 = v0;
  int v59 = v3;
  sub_100045024();
  uint64_t v5 = v4;
  type metadata accessor for OSSignposter();
  sub_100020DEC();
  uint64_t v57 = v7;
  uint64_t v58 = v6;
  __chkstk_darwin(v6);
  sub_100035C70();
  int64_t v62 = v8;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v54 - v10;
  uint64_t v12 = type metadata accessor for OSSignpostID();
  sub_100020DEC();
  uint64_t v60 = v13;
  __chkstk_darwin(v14);
  sub_100035C70();
  uint64_t v56 = v15;
  __chkstk_darwin(v16);
  sub_100043EA8();
  uint64_t v17 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v18 = sub_1000208F0(v17);
  __chkstk_darwin(v18);
  sub_100011D4C();
  uint64_t v19 = type metadata accessor for DispatchPredicate();
  sub_100020DEC();
  uint64_t v21 = v20;
  __chkstk_darwin(v22);
  sub_10002D300();
  Swift::String v23 = *(void **)(v0 + 128);
  *uint64_t v1 = v23;
  (*(void (**)(void *, void, uint64_t))(v21 + 104))(v1, enum case for DispatchPredicate.onQueue(_:), v19);
  id v24 = v23;
  LOBYTE(v23) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v21 + 8))(v1, v19);
  if (v23)
  {
    uint64_t v55 = v5;
    uint64_t v61 = v12;
    if (qword_10022C4A0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  sub_100043478(&qword_10022E560);
  uint64_t v25 = type metadata accessor for LogMessage();
  sub_100044798(v25);
  uint64_t v27 = *(void *)(v26 + 72);
  sub_100109CB8();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  long long v66 = (void *)type metadata accessor for MetricsIdentifierCloudDataController();
  int64_t v63 = (void **)v0;
  swift_retain();
  id v28 = (id)AMSLogKey();
  if (v28)
  {
    Swift::String v29 = v28;
    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v54 = v27;
    uint64_t v31 = v30;
    uint64_t v33 = v32;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100020E60();
    sub_100049788(&v63, (uint64_t)v66);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v69[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v69, &qword_10022F490);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v69[0] = v31;
    v69[1] = v33;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v69, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100020E60();
    uint64_t v35 = sub_100045CF8(&v63);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v69[0] = v35;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v69, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v63);
  sub_100020924();
  LogMessage.init(stringLiteral:)();
  uint64_t v36 = static os_log_type_t.info.getter();
  sub_10004841C(v36);
  swift_bridgeObjectRelease();
  sub_1001355A4();
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  uint64_t v37 = v58;
  uint64_t v38 = *(void (**)(char *, uint64_t))(v57 + 8);
  v38(v11, v58);
  sub_1001355A4();
  uint64_t v39 = OSSignposter.logHandle.getter();
  os_signpost_type_t v40 = static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v41 = (uint8_t *)sub_1001439F8();
    *(_WORD *)uint64_t v41 = 0;
    os_signpost_id_t v42 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v39, v40, v42, "MetricsIdentifier", "Fetching changes from cloud", v41, 2u);
    sub_1001439E0();
  }

  sub_100035D08();
  v43();
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  uint64_t v44 = OSSignpostIntervalState.init(id:isOpen:)();
  v38(v62, v37);
  *(unsigned char *)(v0 + 80) = 0;
  sub_10013BC40();
  uint64_t v46 = v45;
  NSString v47 = (void *)sub_100011D64();
  v47[2] = v0;
  v47[3] = v44;
  uint64_t v48 = v55;
  v47[4] = v55;
  uint64_t v67 = sub_100143788;
  uint64_t v68 = v47;
  int64_t v63 = _NSConcreteStackBlock;
  uint64_t v64 = 1107296256;
  uint64_t v65 = sub_10013A778;
  long long v66 = &unk_100214E98;
  uint64_t v49 = _Block_copy(&v63);
  swift_retain();
  swift_retain();
  swift_release();
  id v50 = [v46 thenWithBlock:v49];
  _Block_release(v49);

  uint64_t v51 = (void *)sub_100011D64();
  v51[2] = v2;
  v51[3] = v44;
  v51[4] = v48;
  uint64_t v67 = sub_1001437AC;
  uint64_t v68 = v51;
  int64_t v63 = _NSConcreteStackBlock;
  uint64_t v64 = 1107296256;
  uint64_t v65 = sub_100181204;
  long long v66 = &unk_100214EE8;
  uint64_t v52 = _Block_copy(&v63);
  swift_retain();
  swift_retain();
  swift_release();
  [v50 addErrorBlock:v52];
  _Block_release(v52);
  [self promiseWithPromise:v50];
  swift_release();

  sub_10003629C();
  v53();
  sub_100020998();
}

id sub_100139A10(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_10022C560 != -1) {
    swift_once();
  }
  id v8 = (void *)qword_1002317F8;
  sub_100043478(&qword_100231DE0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1001C4B80;
  *(void *)(v9 + 32) = v8;
  v18[0] = v9;
  specialized Array._endMutation()();
  id v10 = v8;
  sub_100043478(&qword_100231E08);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(a1, "fetchChangedRecordsInRecordZonesWithRecordZoneIdentifiers:", isa, v18[0]);

  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a2;
  v13[3] = a1;
  void v13[4] = v10;
  v13[5] = a3;
  v13[6] = a4;
  v18[4] = sub_100143814;
  void v18[5] = v13;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_10013A774;
  void v18[3] = &unk_100214F60;
  uint64_t v14 = _Block_copy(v18);
  id v15 = v10;
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  id v16 = [v12 continueWithBlock:v14];
  _Block_release(v14);

  return v16;
}

id sub_100139C04(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v78 = a6;
  uint64_t v79 = a4;
  uint64_t v10 = type metadata accessor for OSSignpostError();
  uint64_t v75 = *(void *)(v10 - 8);
  uint64_t v76 = v10;
  __chkstk_darwin(v10);
  BOOL v77 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for OSSignpostID();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for OSSignposter();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  Swift::Bool v80 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v19 - 8);
  if (a1)
  {
    uint64_t v70 = v17;
    uint64_t v71 = v15;
    uint64_t v72 = v16;
    uint64_t v74 = v12;
    id v20 = a1;
    uint64_t v21 = sub_100143514(v20, (SEL *)&selRef_changedRecords, &qword_100231E30);
    if (v21)
    {
      uint64_t v22 = v21;
      v83[0] = a5;
      sub_10004D510(0, (unint64_t *)&unk_100231D88);
      sub_100143190(&qword_100231E10, (unint64_t *)&unk_100231D88);
      id v23 = a5;
      AnyHashable.init<A>(_:)();
      sub_100088C18(v81, v22);
      swift_bridgeObjectRelease();
      sub_1000434BC((uint64_t)v81);
    }
    uint64_t v24 = sub_100143514(v20, (SEL *)&selRef_deletedRecords, &qword_100231E28);
    if (v24)
    {
      uint64_t v25 = v24;
      v83[0] = a5;
      sub_10004D510(0, (unint64_t *)&unk_100231D88);
      sub_100143190(&qword_100231E10, (unint64_t *)&unk_100231D88);
      id v26 = a5;
      AnyHashable.init<A>(_:)();
      sub_100088C18(v81, v25);
      swift_bridgeObjectRelease();
      sub_1000434BC((uint64_t)v81);
    }
    uint64_t v73 = v13;
    uint64_t v27 = sub_100143514(v20, (SEL *)&selRef_errors, (uint64_t *)&unk_100233150);
    if (v27)
    {
      uint64_t v28 = v27;
      v83[0] = a5;
      sub_10004D510(0, (unint64_t *)&unk_100231D88);
      sub_100143190(&qword_100231E10, (unint64_t *)&unk_100231D88);
      id v29 = a5;
      AnyHashable.init<A>(_:)();
      sub_100088C60((uint64_t)v81, v28);
      swift_bridgeObjectRelease();
      sub_1000434BC((uint64_t)v81);
    }
    uint64_t v30 = v79;
    sub_100140BF4();
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v31 = sub_100143514(v20, (SEL *)&selRef_changeTokens, &qword_100231E20);
    if (v31)
    {
      uint64_t v32 = __chkstk_darwin(v31);
      *(&v70 - 2) = (uint64_t)a5;
      *(&v70 - 1) = v30;
      sub_100134CB8(v32, (void (*)(unsigned char *, uint64_t))sub_100143824);
      swift_bridgeObjectRelease();
    }
    uint64_t v33 = sub_100143514(v20, (SEL *)&selRef_errors, (uint64_t *)&unk_100233150);
    if (v33)
    {
      uint64_t v34 = v33;
      v83[0] = a5;
      sub_10004D510(0, (unint64_t *)&unk_100231D88);
      sub_100143190(&qword_100231E10, (unint64_t *)&unk_100231D88);
      id v35 = a5;
      AnyHashable.init<A>(_:)();
      uint64_t v36 = sub_100088C60((uint64_t)v81, v34);
      swift_bridgeObjectRelease();
      sub_1000434BC((uint64_t)v81);
      if (v36)
      {
        sub_10013B120();
        swift_errorRelease();
      }
    }
    if (qword_10022C4A0 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v82 = type metadata accessor for MetricsIdentifierCloudDataController();
    v81[0] = a3;
    swift_retain();
    id v37 = (id)AMSLogKey();
    if (v37)
    {
      uint64_t v38 = v37;
      uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v41 = v40;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v42._countAndFlagsBits = 0;
      v42._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v42);
      sub_100049788(v81, v82);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v83[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v83, &qword_10022F490);
      v44._countAndFlagsBits = 5972026;
      v44._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v44);
      uint64_t MetatypeMetadata = &type metadata for String;
      v83[0] = v39;
      v83[1] = v41;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v83, &qword_10022F490);
      v45._countAndFlagsBits = 93;
      v45._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v45);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v46._countAndFlagsBits = 0;
      v46._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v46);
      sub_100049788(v81, v82);
      uint64_t v47 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v83[0] = v47;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v83, &qword_10022F490);
      v48._countAndFlagsBits = 58;
      v48._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v48);
      LogMessage.init(stringInterpolation:)();
    }
    uint64_t v49 = v72;
    uint64_t v50 = v70;
    uint64_t v51 = v77;
    sub_10004377C((uint64_t)v81);
    LogMessage.init(stringLiteral:)();
    uint64_t v52 = static os_log_type_t.info.getter();
    sub_10004841C(v52);
    swift_bridgeObjectRelease();
    sub_1001355A4();
    uint64_t v53 = OSSignposter.logHandle.getter();
    uint64_t v54 = v71;
    OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v55 = static os_signpost_type_t.end.getter();
    char v56 = OS_os_log.signpostsEnabled.getter();
    uint64_t v57 = v73;
    if (v56)
    {
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v59 = v75;
      uint64_t v58 = v76;
      if ((*(unsigned int (**)(char *, uint64_t))(v75 + 88))(v51, v76) == enum case for OSSignpostError.doubleEnd(_:))
      {
        uint64_t v60 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v59 + 8))(v51, v58);
        uint64_t v60 = "Finished";
      }
      uint64_t v61 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v61 = 0;
      os_signpost_id_t v62 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v53, v55, v62, "MetricsIdentifier", v60, v61, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v57 + 8))(v54, v74);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v80, v49);
    id v63 = [self promiseWithResult:v20];

    return v63;
  }
  else
  {
    if (!a2)
    {
      NSString v65 = String._bridgeToObjectiveC()();
      NSString v66 = String._bridgeToObjectiveC()();
      id v67 = (id)AMSError();
    }
    swift_errorRetain();
    sub_10013B120();
    uint64_t v68 = (void *)_convertErrorToNSError(_:)();
    id v69 = [self promiseWithError:v68];
    swift_errorRelease();

    return v69;
  }
}

id sub_10013A684(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  sub_10004D510(0, (unint64_t *)&unk_100231D88);
  sub_100143190(&qword_100231E10, (unint64_t *)&unk_100231D88);
  id v7 = a3;
  AnyHashable.init<A>(_:)();
  char v8 = static AnyHashable.== infix(_:_:)();
  id result = (id)sub_1000434BC((uint64_t)v11);
  if (v8) {
    return objc_msgSend(a4, "persistChangedRecordsChangeToken:forRecordZoneIdentifier:", a2, v7, a3);
  }
  return result;
}

id sub_10013A778(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  int v3 = (void *)v1(v2);
  swift_release();
  swift_unknownObjectRelease();
  return v3;
}

uint64_t sub_10013A7E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a3;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v62 = *(void *)(v4 - 8);
  uint64_t v63 = v4;
  __chkstk_darwin(v4);
  uint64_t v60 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for DispatchQoS();
  uint64_t v59 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v58 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for OSSignpostError();
  uint64_t v50 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  char v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for OSSignpostID();
  uint64_t v56 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for OSSignposter();
  uint64_t v53 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v13 - 8);
  if (qword_10022C4A0 != -1) {
    swift_once();
  }
  uint64_t v49 = v8;
  uint64_t v52 = qword_100244108;
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  NSString v65 = (void *)type metadata accessor for MetricsIdentifierCloudDataController();
  aBlock[0] = a2;
  swift_retain();
  id v14 = (id)AMSLogKey();
  if (v14)
  {
    id v15 = v14;
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    Swift::String v48 = v12;
    uint64_t v18 = v17;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    sub_100049788(aBlock, (uint64_t)v65);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v70[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v70, &qword_10022F490);
    v21._countAndFlagsBits = 5972026;
    v21._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    uint64_t MetatypeMetadata = &type metadata for String;
    v70[0] = v16;
    v70[1] = v18;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v70, &qword_10022F490);
    v22._countAndFlagsBits = 93;
    v22._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    LogMessage.init(stringInterpolation:)();
    uint64_t v12 = v48;
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v23._countAndFlagsBits = 0;
    v23._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    sub_100049788(aBlock, (uint64_t)v65);
    uint64_t v24 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v70[0] = v24;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v70, &qword_10022F490);
    v25._countAndFlagsBits = 58;
    v25._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)aBlock);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v26._object = (void *)0x80000001001D4B00;
  v26._countAndFlagsBits = 0xD000000000000043;
  LogMessage.StringInterpolation.appendLiteral(_:)(v26);
  swift_getErrorValue();
  uint64_t v27 = v68;
  uint64_t v28 = v69;
  NSString v65 = v69;
  id v29 = sub_10003BAA4(aBlock);
  (*(void (**)(uint64_t *, uint64_t, void *))(*(v28 - 1) + 16))(v29, v27, v28);
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100027BD8((uint64_t)aBlock, &qword_10022F490);
  v30._countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v30);
  LogMessage.init(stringInterpolation:)();
  uint64_t v31 = static os_log_type_t.error.getter();
  sub_10004841C(v31);
  swift_bridgeObjectRelease();
  sub_1001355A4();
  uint64_t v32 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  os_signpost_type_t v33 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    swift_retain();
    uint64_t v34 = v49;
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v35 = v50;
    uint64_t v36 = v51;
    if ((*(unsigned int (**)(char *, uint64_t))(v50 + 88))(v34, v51) == enum case for OSSignpostError.doubleEnd(_:))
    {
      id v37 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v36);
      id v37 = "Failed";
    }
    uint64_t v38 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v38 = 0;
    os_signpost_id_t v39 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v32, v33, v39, "MetricsIdentifier", v37, v38, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v56 + 8))(v10, v57);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v12, v54);
  uint64_t v40 = *(void **)(a2 + 128);
  NSString v66 = sub_1001437B8;
  uint64_t v67 = a2;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10002CD0C;
  NSString v65 = &unk_100214F10;
  uint64_t v41 = _Block_copy(aBlock);
  swift_retain();
  id v42 = v40;
  uint64_t v43 = v58;
  static DispatchQoS.unspecified.getter();
  v70[0] = _swiftEmptyArrayStorage;
  sub_10002AFF8((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_10002B6DC((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
  Swift::String v44 = v60;
  uint64_t v45 = v63;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v41);

  (*(void (**)(char *, uint64_t))(v62 + 8))(v44, v45);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v61);
  return swift_release();
}

void sub_10013B120()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  int v3 = v2;
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v5 = sub_1000208F0(v4);
  __chkstk_darwin(v5);
  sub_100047480();
  id v6 = (id)_convertErrorToNSError(_:)();
  __int16 v52 = 0;
  id v7 = sub_10013B7AC(26);

  if (v7 || (id v8 = sub_10013B7AC(28), v8, v8))
  {
    HIBYTE(v52) = 1;
LABEL_4:
    if (v52 == 1)
    {
      if (qword_10022C4A0 != -1) {
        swift_once();
      }
      sub_100043478(&qword_10022E560);
      uint64_t v9 = sub_10002D318();
      sub_100044798(v9);
      sub_10003BDEC();
      *(_OWORD *)(sub_10002D330() + 16) = xmmword_1001C3120;
      uint64_t v49 = (void *)type metadata accessor for MetricsIdentifierCloudDataController();
      *(void *)&long long v47 = v1;
      swift_retain();
      id v10 = (id)AMSLogKey();
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v14 = v13;

        swift_bridgeObjectRetain();
        sub_100020F60();
        sub_100043D14();
        sub_100020F04(&v47);
        uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
        sub_1000225B0(MetatypeMetadata);
        sub_100027BD8((uint64_t)v46, &qword_10022F490);
        sub_100020E44();
        v46[3] = &type metadata for String;
        v46[0] = v12;
        v46[1] = v14;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)v46, &qword_10022F490);
        sub_1000208D8();
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100020980();
        sub_100043D14();
        sub_100020F04(&v47);
        uint64_t v18 = swift_getMetatypeMetadata();
        sub_1000225B0(v18);
        sub_100027BD8((uint64_t)v46, &qword_10022F490);
        sub_100020E94();
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)&v47);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_10002064C();
      v19._countAndFlagsBits = 0xD000000000000017;
      LogMessage.StringInterpolation.appendLiteral(_:)(v19);
      uint64_t v49 = (void *)sub_10004D510(0, (unint64_t *)&qword_100234520);
      *(void *)&long long v47 = v6;
      id v6 = v6;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v47, &qword_10022F490);
      sub_100020E60();
      LogMessage.init(stringInterpolation:)();
      uint64_t v20 = static os_log_type_t.error.getter();
      sub_10004841C(v20);
      swift_bridgeObjectRelease();
    }
    else if (HIBYTE(v52) == 1)
    {
      sub_100136764(0);
      id v16 = sub_10013877C(v3, 0);
      uint64_t v50 = sub_100143768;
      id v51 = v1;
      *(void *)&long long v47 = _NSConcreteStackBlock;
      *((void *)&v47 + 1) = 1107296256;
      Swift::String v48 = sub_100181204;
      uint64_t v49 = &unk_100214E48;
      uint64_t v17 = _Block_copy(&v47);
      swift_retain();
      swift_release();
      [v16 addErrorBlock:v17];

      _Block_release(v17);
      id v6 = v16;
    }

    sub_100020FDC();
    return;
  }
  id v21 = sub_10013B7AC(112);

  if (v21) {
    LOBYTE(v52) = 1;
  }
  id v22 = sub_10013B7AC(2);
  if (!v22) {
    goto LABEL_4;
  }
  Swift::String v23 = v22;
  v53[0] = (uint64_t)v22;
  type metadata accessor for CKError(0);
  sub_10002AFF8(&qword_10022CC10, type metadata accessor for CKError);
  uint64_t v24 = _BridgedStoredNSError.userInfo.getter();
  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10004D120(v25, v26, v24, &v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v49)
  {

    sub_100027BD8((uint64_t)&v47, &qword_10022F490);
    goto LABEL_4;
  }
  sub_100043478(&qword_100231DB8);
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_4;
  }
  id v44 = v23;
  uint64_t v45 = v3;
  v43[2] = v43;
  uint64_t v27 = v53[0];
  sub_10005370C(v53[0], v53);
  uint64_t v29 = v53[0];
  uint64_t v28 = v53[1];
  uint64_t v30 = v53[3];
  unint64_t v31 = v53[4];
  int64_t v32 = (unint64_t)(v53[2] + 64) >> 6;
  v43[1] = v27;
  swift_bridgeObjectRetain();
  if (!v31) {
    goto LABEL_21;
  }
LABEL_20:
  unint64_t v33 = __clz(__rbit64(v31));
  v31 &= v31 - 1;
  unint64_t v34 = v33 | (v30 << 6);
  while (1)
  {
    sub_1000433B4(*(void *)(v29 + 48) + 40 * v34, (uint64_t)&v47);
    id v51 = *(id *)(*(void *)(v29 + 56) + 8 * v34);
    char v39 = HIBYTE(v52);
    v51;
    if ((v39 & 1) == 0
      && ((v41 = sub_10013B7AC(26), v41, v41) || (id v42 = sub_10013B7AC(28), v42, v42)))
    {
      HIBYTE(v52) = 1;
    }
    else if ((v52 & 1) == 0)
    {
      id v40 = sub_10013B7AC(112);

      if (v40) {
        LOBYTE(v52) = 1;
      }
    }
    sub_100027BD8((uint64_t)&v47, (uint64_t *)&unk_100231DC0);
    if (v31) {
      goto LABEL_20;
    }
LABEL_21:
    int64_t v35 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v35 >= v32) {
      goto LABEL_48;
    }
    unint64_t v36 = *(void *)(v28 + 8 * v35);
    uint64_t v37 = v30 + 1;
    if (!v36)
    {
      uint64_t v37 = v30 + 2;
      if (v30 + 2 >= v32) {
        goto LABEL_48;
      }
      unint64_t v36 = *(void *)(v28 + 8 * v37);
      if (!v36)
      {
        uint64_t v37 = v30 + 3;
        if (v30 + 3 >= v32) {
          goto LABEL_48;
        }
        unint64_t v36 = *(void *)(v28 + 8 * v37);
        if (!v36)
        {
          uint64_t v37 = v30 + 4;
          if (v30 + 4 >= v32) {
            goto LABEL_48;
          }
          unint64_t v36 = *(void *)(v28 + 8 * v37);
          if (!v36)
          {
            uint64_t v37 = v30 + 5;
            if (v30 + 5 >= v32) {
              goto LABEL_48;
            }
            unint64_t v36 = *(void *)(v28 + 8 * v37);
            if (!v36)
            {
              int64_t v38 = v30 + 6;
              while (v38 < v32)
              {
                unint64_t v36 = *(void *)(v28 + 8 * v38++);
                if (v36)
                {
                  uint64_t v37 = v38 - 1;
                  goto LABEL_36;
                }
              }
LABEL_48:
              swift_release();
              swift_bridgeObjectRelease();

              int v3 = v45;
              goto LABEL_4;
            }
          }
        }
      }
    }
LABEL_36:
    unint64_t v31 = (v36 - 1) & v36;
    unint64_t v34 = __clz(__rbit64(v36)) + (v37 << 6);
    uint64_t v30 = v37;
  }
  __break(1u);
}

id sub_10013B7AC(uint64_t a1)
{
  if (objc_msgSend(v1, "ams_hasDomain:code:", CKErrorDomain, a1))
  {
    sub_10004D510(0, (unint64_t *)&qword_100234520);
    type metadata accessor for CKError(0);
    id v3 = v1;
  }
  else
  {
    id result = objc_msgSend(v1, "ams_underlyingErrorWithDomain:code:", CKErrorDomain, a1);
    if (!result) {
      return result;
    }
    sub_100043478((uint64_t *)&unk_100233150);
    type metadata accessor for CKError(0);
  }
  if (swift_dynamicCast()) {
    return (id)v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_10013B8AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v3 - 8);
  if (qword_10022C4A0 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v25 = type metadata accessor for MetricsIdentifierCloudDataController();
  v24[0] = a2;
  swift_retain();
  id v4 = (id)AMSLogKey();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v9._countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v9);
    sub_100049788(v24, v25);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v22[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v22, &qword_10022F490);
    v11._countAndFlagsBits = 5972026;
    v11._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    uint64_t MetatypeMetadata = &type metadata for String;
    v22[0] = v6;
    v22[1] = v8;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v22, &qword_10022F490);
    v12._countAndFlagsBits = 93;
    v12._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v13._countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    sub_100049788(v24, v25);
    uint64_t v14 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v22[0] = v14;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v22, &qword_10022F490);
    v15._countAndFlagsBits = 58;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v24);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._object = (void *)0x80000001001D4AB0;
  v16._countAndFlagsBits = 0xD00000000000002ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  swift_getErrorValue();
  uint64_t v25 = v21;
  uint64_t v17 = sub_10003BAA4(v24);
  (*(void (**)(uint64_t *))(*(void *)(v21 - 8) + 16))(v17);
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100027BD8((uint64_t)v24, &qword_10022F490);
  v18._countAndFlagsBits = 46;
  v18._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v18);
  LogMessage.init(stringInterpolation:)();
  uint64_t v19 = static os_log_type_t.error.getter();
  sub_10004841C(v19);
  return swift_bridgeObjectRelease();
}

void sub_10013BC40()
{
  sub_100049AD0();
  uint64_t v2 = v0;
  char v39 = v3;
  type metadata accessor for OSSignposter();
  sub_100020DEC();
  __chkstk_darwin(v4);
  sub_100011EC0();
  __chkstk_darwin(v5);
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  sub_100020DEC();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_10002D2D4();
  id v10 = *(void **)(v2 + 128);
  *uint64_t v1 = v10;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v1, enum case for DispatchPredicate.onQueue(_:), v6);
  id v11 = v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v1, v6);
  if (v10)
  {
    Swift::String v12 = *(void **)(v2 + 64);
    if (v12)
    {
      v12;
      sub_1001355A4();
      Swift::String v13 = OSSignposter.logHandle.getter();
      os_signpost_type_t v14 = static os_signpost_type_t.event.getter();
      if (OS_os_log.signpostsEnabled.getter())
      {
        Swift::String v15 = (uint8_t *)sub_1001439F8();
        *(_WORD *)Swift::String v15 = 0;
        os_signpost_id_t v16 = OSSignpostID.rawValue.getter();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v13, v14, v16, "MetricsIdentifier", "Re-using cloud database", v15, 2u);
        sub_1001439E0();
      }

      sub_10003629C();
      v17();
    }
    else
    {
      sub_1001355A4();
      Swift::String v18 = OSSignposter.logHandle.getter();
      os_signpost_type_t v19 = static os_signpost_type_t.event.getter();
      if (OS_os_log.signpostsEnabled.getter())
      {
        uint64_t v20 = (uint8_t *)sub_1001439F8();
        *(_WORD *)uint64_t v20 = 0;
        os_signpost_id_t v21 = OSSignpostID.rawValue.getter();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v18, v19, v21, "MetricsIdentifier", "Preparing database", v20, 2u);
        sub_1001439E0();
      }

      sub_10003629C();
      v22();
      id v23 = [objc_allocWithZone((Class)AMSMutablePromise) init];
      uint64_t v24 = *(void **)(v2 + 64);
      *(void *)(v2 + 64) = v23;
      id v25 = v23;

      uint64_t v26 = sub_100035CB8();
      *(void *)(v26 + 16) = v2;
      *(void *)(v26 + 24) = v25;
      id v44 = sub_10014365C;
      uint64_t v45 = v26;
      id v40 = _NSConcreteStackBlock;
      uint64_t v41 = 1107296256;
      id v42 = sub_100181204;
      uint64_t v43 = &unk_100214CE0;
      uint64_t v27 = _Block_copy(&v40);
      id v28 = v25;
      swift_retain();
      swift_release();
      [v28 addErrorBlock:v27];
      _Block_release(v27);
      id v29 = [sub_1001353A4() queryDeviceToDeviceEncryptionAvailability];
      swift_unknownObjectRelease();
      id v30 = [sub_1001353A4() fetchUserRecordID];
      swift_unknownObjectRelease();
      id v31 = [sub_1001353A4() privateDatabase];
      swift_unknownObjectRelease();
      sub_100043478(&qword_100231DE0);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_1001C70D0;
      *(void *)(v32 + 32) = v29;
      *(void *)(v32 + 40) = v30;
      id v40 = (void **)v32;
      specialized Array._endMutation()();
      id v33 = v29;
      id v34 = v30;
      sub_100043478(&qword_100231DF8);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v36 = [self promiseWithAll:isa timeout:30.0];

      uint64_t v37 = swift_allocObject();
      *(unsigned char *)(v37 + 16) = v39 & 1;
      *(void *)(v37 + 24) = v2;
      *(void *)(v37 + 32) = v28;
      *(void *)(v37 + 40) = v31;
      id v44 = sub_1001436A4;
      uint64_t v45 = v37;
      id v40 = _NSConcreteStackBlock;
      uint64_t v41 = 1107296256;
      id v42 = (void (*)(uint64_t, void *))sub_10013CC28;
      uint64_t v43 = &unk_100214D30;
      int64_t v38 = _Block_copy(&v40);
      v28;
      swift_retain();
      swift_unknownObjectRetain();
      swift_release();
      [v36 addFinishBlock:v38];
      swift_unknownObjectRelease();

      _Block_release(v38);
    }
    sub_100020998();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10013C18C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v30 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v28 = *(void *)(v8 - 8);
  uint64_t v29 = v8;
  __chkstk_darwin(v8);
  id v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchTime();
  uint64_t v27 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  Swift::String v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v24 - v16;
  id v25 = *(id *)(a2 + 128);
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v12 + 8);
  v26(v15, v11);
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a3;
  *(void *)(v19 + 24) = v18;
  aBlock[4] = sub_100143760;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CD0C;
  uint64_t aBlock[3] = &unk_100214E20;
  uint64_t v20 = _Block_copy(aBlock);
  id v21 = a3;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  id v31 = _swiftEmptyArrayStorage;
  sub_10002AFF8((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_10002B6DC((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  id v22 = v25;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v29);
  v26(v17, v27);
  swift_release();
  return swift_release();
}

void sub_10013C570(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    char v3 = *(void **)(Strong + 64);
    id v4 = v3;
    swift_release();
    if (v3)
    {
      sub_100043478(&qword_100231DF8);
      id v5 = a1;
      char v6 = static NSObject.== infix(_:_:)();

      if (v6)
      {
        swift_beginAccess();
        uint64_t v7 = swift_weakLoadStrong();
        if (v7)
        {
          uint64_t v8 = *(void **)(v7 + 64);
          *(void *)(v7 + 64) = 0;
          swift_release();
        }
      }
    }
  }
}

void sub_10013C64C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void *a5, void *a6)
{
  if (a3)
  {
    uint64_t v9 = sub_10013877C(a6, 1);
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a5;
    *(void *)(v10 + 24) = a6;
    uint64_t v37 = sub_1001439C4;
    uint64_t v38 = v10;
    aBlock = _NSConcreteStackBlock;
    uint64_t v34 = 1107296256;
    int64_t v35 = sub_10013CC28;
    id v36 = &unk_100214DD0;
    uint64_t v11 = _Block_copy(&aBlock);
    id v12 = a5;
    swift_unknownObjectRetain();
    swift_release();
    [v9 addFinishBlock:v11];
    uint64_t v13 = v11;
LABEL_3:
    _Block_release(v13);
LABEL_4:

    return;
  }
  if (!a1) {
    goto LABEL_11;
  }
  swift_unknownObjectRetain();
  self;
  Swift::String v15 = (void *)swift_dynamicCastObjCClass();
  if (!v15 || (uint64_t v16 = v15, [v15 count] != (id)2))
  {
    swift_unknownObjectRelease();
LABEL_11:
    if (a2)
    {
      uint64_t v20 = (void *)_convertErrorToNSError(_:)();
      id v21 = sub_10013B7AC(9);

      if (v21)
      {
        id v22 = *(void **)(a4 + 112);
        swift_retain();
        [v22 lock];
        sub_100135B7C();
        [v22 unlock];

        swift_release();
      }
      else
      {
      }
    }
    else
    {
      NSString v23 = String._bridgeToObjectiveC()();
      NSString v24 = String._bridgeToObjectiveC()();
      (id)AMSError();
    }
    swift_errorRetain();
    id v25 = (void *)_convertErrorToNSError(_:)();
    [a5 finishWithError:v25];

    swift_errorRelease();
    return;
  }
  id v17 = [v16 objectAtIndexedSubscript:0];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_10004D510(0, (unint64_t *)&qword_100231E00);
  swift_dynamicCast();
  id v18 = v39;
  unsigned __int8 v19 = [v39 integerValue];
  if ((v19 & 1) == 0 || (v19 & 2) == 0)
  {
    NSString v26 = String._bridgeToObjectiveC()();
    NSString v27 = String._bridgeToObjectiveC()();
    id v28 = (id)AMSError();

    uint64_t v9 = (void *)_convertErrorToNSError(_:)();
    [a5 finishWithError:v9];
    swift_unknownObjectRelease();

    goto LABEL_4;
  }
  id v29 = [v16 objectAtIndexedSubscript:1];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100043478(&qword_100231DF0);
  swift_dynamicCast();
  swift_retain();
  swift_unknownObjectRetain();
  sub_1001419B0(a4, a4, v39);
  if ((sub_100136820() & 1) == 0)
  {
    uint64_t v9 = sub_10013877C(a6, 0);
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = a5;
    *(void *)(v30 + 24) = a6;
    uint64_t v37 = sub_1001436CC;
    uint64_t v38 = v30;
    aBlock = _NSConcreteStackBlock;
    uint64_t v34 = 1107296256;
    int64_t v35 = sub_10013CC28;
    id v36 = &unk_100214D80;
    id v31 = _Block_copy(&aBlock);
    id v32 = a5;
    swift_unknownObjectRetain();
    swift_release();
    [v9 addFinishBlock:v31];
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    uint64_t v13 = v31;
    goto LABEL_3;
  }
  if ((sub_100136938() & 1) == 0) {
    sub_100138D08(a6);
  }
  [a5 finishWithResult:a6];
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
}

id sub_10013CC2C(int a1, uint64_t a2, id a3, uint64_t a4)
{
  if (a2)
  {
    swift_errorRetain();
    id v5 = (void *)_convertErrorToNSError(_:)();
    [a3 finishWithError:v5];

    return (id)swift_errorRelease();
  }
  else
  {
    return [a3 finishWithResult:a4];
  }
}

uint64_t sub_10013CCCC(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

void sub_10013CD4C()
{
  sub_100049AD0();
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  sub_100047480();
  if (qword_10022C4A0 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v5 = type metadata accessor for LogMessage();
  sub_100044798(v5);
  sub_10003BDEC();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v27 = type metadata accessor for MetricsIdentifierCloudDataController();
  id v31 = (void *)v27;
  id v28 = v0;
  swift_retain();
  id v6 = (id)AMSLogKey();
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100043D14();
    sub_100020F04(&v28);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_10002D464(MetatypeMetadata);
    sub_100027BD8((uint64_t)&v34, &qword_10022F490);
    sub_100020E44();
    id v36 = &type metadata for String;
    uint64_t v34 = v8;
    uint64_t v35 = v10;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v34, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100043D14();
    sub_100020F04(&v28);
    uint64_t v12 = swift_getMetatypeMetadata();
    sub_10002D464(v12);
    sub_100027BD8((uint64_t)&v34, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v28);
  sub_100020924();
  LogMessage.init(stringLiteral:)();
  uint64_t v13 = static os_log_type_t.info.getter();
  sub_10004841C(v13);
  swift_bridgeObjectRelease();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  id v31 = (void *)v27;
  id v28 = v2;
  swift_retain();
  id v14 = (id)AMSLogKey();
  if (v14)
  {
    Swift::String v15 = v14;
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100043D14();
    sub_100020F04(&v28);
    uint64_t v19 = swift_getMetatypeMetadata();
    sub_10002D464(v19);
    sub_100027BD8((uint64_t)&v34, &qword_10022F490);
    sub_100020E44();
    id v36 = &type metadata for String;
    uint64_t v34 = v16;
    uint64_t v35 = v18;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v34, &qword_10022F490);
    sub_1000208D8();
    sub_100042BD8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100043D14();
    sub_100020F04(&v28);
    uint64_t v20 = swift_getMetatypeMetadata();
    sub_10002D464(v20);
    sub_100027BD8((uint64_t)&v34, &qword_10022F490);
    sub_100020E94();
    sub_100042BD8();
  }
  sub_10004377C((uint64_t)&v28);
  LogMessage.init(stringLiteral:)();
  uint64_t v21 = static os_log_type_t.debug.getter();
  sub_10004841C(v21);
  swift_bridgeObjectRelease();
  id v22 = [objc_allocWithZone((Class)AMSMutableBinaryPromise) init];
  NSString v23 = v2[13];
  uint64_t v24 = sub_100035CB8();
  *(void *)(v24 + 16) = v2;
  *(void *)(v24 + 24) = v22;
  id v32 = sub_1001435EC;
  uint64_t v33 = v24;
  id v28 = _NSConcreteStackBlock;
  uint64_t v29 = 1107296256;
  uint64_t v30 = sub_10013D614;
  id v31 = &unk_100214BF0;
  _Block_copy(&v28);
  sub_1000226C4();
  id v25 = v23;
  id v26 = v22;
  swift_release();
  [v25 fetchModifiedRecordsWithCompletion:v1];
  _Block_release(v1);

  id v32 = sub_1001435F4;
  uint64_t v33 = (uint64_t)v2;
  id v28 = _NSConcreteStackBlock;
  uint64_t v29 = 1107296256;
  uint64_t v30 = sub_10002CD0C;
  id v31 = &unk_100214C18;
  _Block_copy(&v28);
  sub_1000226C4();
  swift_release();
  [v26 addSuccessBlock:v1];
  _Block_release(v1);
  id v32 = sub_1001435FC;
  uint64_t v33 = (uint64_t)v2;
  id v28 = _NSConcreteStackBlock;
  uint64_t v29 = 1107296256;
  uint64_t v30 = sub_100181204;
  id v31 = &unk_100214C40;
  _Block_copy(&v28);
  sub_1000226C4();
  swift_release();
  [v26 addErrorBlock:v1];
  _Block_release(v1);
  sub_100020998();
}

uint64_t sub_10013D2C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v23 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  id v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v15 = *(void **)(a4 + 128);
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a5;
  void v16[3] = a4;
  v16[4] = a1;
  v16[5] = a2;
  aBlock[4] = sub_10014364C;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CD0C;
  uint64_t aBlock[3] = &unk_100214C90;
  uint64_t v17 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v18 = v15;
  id v19 = a5;
  swift_retain();
  swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter();
  uint64_t v24 = _swiftEmptyArrayStorage;
  sub_10002AFF8((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_10002B6DC((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v22);
  return swift_release();
}

void sub_10013D5B0(void *a1)
{
  sub_10013DAA4();
  id v3 = v2;
  [a1 finishWithPromise:v2];
}

uint64_t sub_10013D614(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = a2;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_100043478((uint64_t *)&unk_100231DD0);
    uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  if (a3)
  {
    sub_100043478(&qword_100231DF0);
    a3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v8 = a4;
  v7(v6, a3, a4);
  swift_release();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10013D6DC()
{
  uint64_t v0 = swift_retain();
  return sub_100141A5C(v0, v0, (void (*)(id))&static Date.now.getter);
}

uint64_t sub_10013D710(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v3 - 8);
  if (qword_10022C4A0 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v25 = type metadata accessor for MetricsIdentifierCloudDataController();
  v24[0] = a2;
  swift_retain();
  id v4 = (id)AMSLogKey();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v9._countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v9);
    sub_100049788(v24, v25);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v22[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v22, &qword_10022F490);
    v11._countAndFlagsBits = 5972026;
    v11._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    uint64_t MetatypeMetadata = &type metadata for String;
    v22[0] = v6;
    v22[1] = v8;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v22, &qword_10022F490);
    v12._countAndFlagsBits = 93;
    v12._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v13._countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    sub_100049788(v24, v25);
    uint64_t v14 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v22[0] = v14;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v22, &qword_10022F490);
    v15._countAndFlagsBits = 58;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v24);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._object = (void *)0x80000001001D4920;
  v16._countAndFlagsBits = 0xD000000000000040;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  swift_getErrorValue();
  uint64_t v25 = v21;
  uint64_t v17 = sub_10003BAA4(v24);
  (*(void (**)(uint64_t *))(*(void *)(v21 - 8) + 16))(v17);
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100027BD8((uint64_t)v24, &qword_10022F490);
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v18);
  LogMessage.init(stringInterpolation:)();
  uint64_t v19 = static os_log_type_t.error.getter();
  sub_10004841C(v19);
  return swift_bridgeObjectRelease();
}

void sub_10013DAA4()
{
  sub_100049AD0();
  uint64_t v1 = v0;
  uint64_t v44 = v3;
  uint64_t v45 = v2;
  sub_100045024();
  uint64_t v46 = v4;
  uint64_t v5 = type metadata accessor for OSSignposter();
  sub_100020DEC();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_100011EC0();
  uint64_t v11 = v9 - v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v39 - v13;
  uint64_t v15 = type metadata accessor for OSSignpostID();
  sub_100020DEC();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  sub_100011EC0();
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v39 - v20;
  sub_1001355A4();
  OSSignposter.logHandle.getter();
  uint64_t v22 = v21;
  OSSignpostID.init(log:)();
  uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  uint64_t v42 = v5;
  id v40 = v23;
  v23((uint64_t)v14, v5);
  sub_1001355A4();
  uint64_t v24 = OSSignposter.logHandle.getter();
  os_signpost_type_t v25 = static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    id v26 = (uint8_t *)sub_1001439F8();
    uint64_t v39 = v17;
    uint64_t v27 = v26;
    *(_WORD *)id v26 = 0;
    os_signpost_id_t v28 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v24, v25, v28, "MetricsIdentifier", "Syncing changes to cloud", v27, 2u);
    uint64_t v17 = v39;
    sub_1001439E0();
  }

  uint64_t v41 = v22;
  uint64_t v43 = v15;
  sub_100035D08();
  v29();
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  uint64_t v30 = OSSignpostIntervalState.init(id:isOpen:)();
  v40(v11, v42);
  sub_10013BC40();
  id v32 = v31;
  uint64_t v33 = (void *)sub_100011D64();
  uint64_t v34 = v44;
  v33[2] = v45;
  v33[3] = v34;
  v33[4] = v1;
  id v51 = sub_100143458;
  __int16 v52 = v33;
  long long v47 = _NSConcreteStackBlock;
  uint64_t v48 = 1107296256;
  uint64_t v49 = sub_10013A778;
  uint64_t v50 = &unk_100214AB0;
  uint64_t v35 = _Block_copy(&v47);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  id v36 = [v32 thenWithBlock:v35];
  _Block_release(v35);

  uint64_t v37 = (void *)sub_100011D64();
  v37[2] = v1;
  void v37[3] = v30;
  v37[4] = v46;
  id v51 = sub_10014347C;
  __int16 v52 = v37;
  long long v47 = _NSConcreteStackBlock;
  uint64_t v48 = 1107296256;
  uint64_t v49 = (id (*)(uint64_t))sub_10013CC28;
  uint64_t v50 = &unk_100214B00;
  uint64_t v38 = _Block_copy(&v47);
  swift_retain();
  swift_retain();
  swift_release();
  [v36 addFinishBlock:v38];
  _Block_release(v38);
  [self promiseWithPromise:v36];
  swift_release();

  (*(void (**)(char *, uint64_t))(v17 + 8))(v41, v43);
  sub_100020998();
}

id sub_10013DEA8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a3;
  uint64_t v10 = *(void **)(a4 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  [v10 lock];
  if (a2)
  {
    swift_retain();
    unint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v12 = sub_100134E50(v11, (__objc2_prot_list **)a4);
  }
  else
  {
    uint64_t v12 = 0;
  }
  *(void *)(v8 + 16) = v12;
  swift_bridgeObjectRelease();
  if (a3)
  {
    swift_retain();
    unint64_t v13 = swift_bridgeObjectRetain();
    uint64_t v14 = sub_1001350DC(v13, (__objc2_prot_list **)a4);
  }
  else
  {
    uint64_t v14 = 0;
  }
  *(void *)(v9 + 16) = v14;
  swift_bridgeObjectRelease();
  [v10 unlock];
  if (!v12)
  {
    v15.super.Class isa = 0;
    if (v14) {
      goto LABEL_9;
    }
LABEL_11:
    v16.super.Class isa = 0;
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  sub_100043478((uint64_t *)&unk_100231DD0);
  v15.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  if (!v14) {
    goto LABEL_11;
  }
LABEL_9:
  swift_bridgeObjectRetain();
  sub_100043478(&qword_100231DF0);
  v16.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
LABEL_12:
  id v17 = [a1 addRecordsToSave:v15.super.isa recordIdentifiersToDelete:v16.super.isa];

  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = a4;
  void v18[3] = v8;
  v18[4] = v9;
  void v18[5] = a1;
  aBlock[4] = sub_100143508;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10013A774;
  uint64_t aBlock[3] = &unk_100214BA0;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_release();
  id v20 = [v17 continueWithBlock:v19];
  _Block_release(v19);
  swift_release();
  swift_release();

  return v20;
}

id sub_10013E164(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = (void *)(a4 + 16);
  uint64_t v7 = (unint64_t *)(a5 + 16);
  if (a1)
  {
    swift_beginAccess();
    unint64_t v9 = *v7;
    if (*v7)
    {
      if (v9 >> 62) {
        goto LABEL_18;
      }
      uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      id v11 = a1;
      swift_retain();
      for (; v10; uint64_t v10 = _CocoaArrayWrapper.endIndex.getter())
      {
        uint64_t v12 = v6;
        uint64_t v13 = 4;
        while (1)
        {
          if ((v9 & 0xC000000000000001) != 0)
          {
            uint64_t v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v6 = *(void **)(v9 + 8 * v13);
            swift_unknownObjectRetain();
          }
          uint64_t v14 = v13 - 3;
          if (__OFADD__(v13 - 4, 1)) {
            break;
          }
          sub_10013FD88();
          swift_unknownObjectRelease();
          ++v13;
          if (v14 == v10)
          {
            swift_release();
            swift_bridgeObjectRelease_n();
            uint64_t v6 = v12;
            goto LABEL_20;
          }
        }
        __break(1u);
LABEL_18:
        swift_bridgeObjectRetain_n();
        id v22 = a1;
        swift_retain();
      }
      swift_release();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      id v15 = a1;
    }
LABEL_20:
    sub_100143584(a1);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    id v23 = [a1 error];
    sub_100140BF4();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    id v24 = [a1 error];
    if (v24)
    {
      os_signpost_type_t v25 = v24;
      sub_10013B120();
    }
    id v26 = [self promiseWithResult:a1];

    sub_10013E494(a3, v6, v7);
    return v26;
  }
  else
  {
    if (!a2)
    {
      NSString v16 = String._bridgeToObjectiveC()();
      NSString v17 = String._bridgeToObjectiveC()();
      id v18 = (id)AMSError();
    }
    swift_errorRetain();
    sub_10013B120();
    uint64_t v19 = (void *)_convertErrorToNSError(_:)();
    id v20 = [self promiseWithError:v19];
    swift_errorRelease();

    sub_10013E494(a3, v6, v7);
    return v20;
  }
}

id sub_10013E494(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = *(void **)(a1 + 112);
  [v6 lock];
  swift_beginAccess();
  if (*a2)
  {
    swift_retain();
    unint64_t v7 = swift_bridgeObjectRetain();
    sub_1001347D8(v7, a1);
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*a3)
  {
    swift_retain();
    unint64_t v8 = swift_bridgeObjectRetain();
    sub_100134990(v8, a1);
    swift_bridgeObjectRelease();
  }
  return [v6 unlock];
}

id sub_10013E574(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(uint64_t (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v6 = a2;
  id v7 = a3;
  unint64_t v8 = (void *)v5(a2, a3);
  swift_release();

  return v8;
}

uint64_t sub_10013E600(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for OSSignpostError();
  uint64_t v38 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(v3);
  id v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v37 - v7;
  uint64_t v9 = type metadata accessor for OSSignpostID();
  uint64_t v41 = *(void *)(v9 - 8);
  uint64_t v42 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v37 - v13;
  uint64_t v15 = type metadata accessor for OSSignposter();
  uint64_t v39 = *(void *)(v15 - 8);
  uint64_t v40 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  id v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  id v20 = (char *)&v37 - v19;
  if (a2)
  {
    sub_1001355A4();
    uint64_t v21 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v22 = static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v23 = v38;
      if ((*(unsigned int (**)(char *, uint64_t))(v38 + 88))(v8, v3) == enum case for OSSignpostError.doubleEnd(_:))
      {
        id v24 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v3);
        id v24 = "Failed";
      }
      id v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v32 = 0;
      os_signpost_id_t v33 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v21, v22, v33, "MetricsIdentifier", v24, v32, 2u);
LABEL_14:
      uint64_t v29 = v41;
      uint64_t v28 = v42;
      uint64_t v31 = v39;
      uint64_t v30 = v40;
      swift_slowDealloc();
      goto LABEL_15;
    }
  }
  else
  {
    sub_1001355A4();
    uint64_t v21 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v25 = static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v26 = v38;
      if ((*(unsigned int (**)(char *, uint64_t))(v38 + 88))(v6, v3) == enum case for OSSignpostError.doubleEnd(_:))
      {
        uint64_t v27 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v3);
        uint64_t v27 = "Finished";
      }
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      os_signpost_id_t v35 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v21, v25, v35, "MetricsIdentifier", v27, v34, 2u);
      uint64_t v14 = v12;
      id v20 = v18;
      goto LABEL_14;
    }
    uint64_t v14 = v12;
    id v20 = v18;
  }
  uint64_t v29 = v41;
  uint64_t v28 = v42;
  uint64_t v31 = v39;
  uint64_t v30 = v40;
LABEL_15:

  (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v28);
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v20, v30);
}

void sub_10013EA64()
{
  sub_100049AD0();
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v3 = sub_1000208F0(v2);
  __chkstk_darwin(v3);
  sub_100011D4C();
  if (qword_10022C4A0 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v4 = type metadata accessor for LogMessage();
  sub_100044798(v4);
  *(_OWORD *)(sub_100046CCC() + 16) = xmmword_1001C3120;
  os_signpost_type_t v25 = (void *)type metadata accessor for MetricsIdentifierCloudDataController();
  os_signpost_type_t v22 = v0;
  swift_retain();
  id v5 = (id)AMSLogKey();
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100020E60();
    uint64_t v10 = sub_100043D30(&v22);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v28[0] = v10;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v28, &qword_10022F490);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v28[0] = v7;
    v28[1] = v9;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v28, &qword_10022F490);
    sub_1000208D8();
    sub_100040C54();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100020E60();
    uint64_t v11 = sub_100045CF8(&v22);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v28[0] = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v28, &qword_10022F490);
    sub_100020E94();
    sub_100040C54();
  }
  sub_10004377C((uint64_t)&v22);
  sub_100020924();
  LogMessage.init(stringLiteral:)();
  uint64_t v12 = static os_log_type_t.debug.getter();
  sub_10004841C(v12);
  swift_bridgeObjectRelease();
  id v13 = objc_allocWithZone((Class)AMSMutableBinaryPromise);
  id v14 = objc_msgSend(v13, "init", v22);
  id v15 = [sub_1001353A4() fetchUserRecordID];
  swift_unknownObjectRelease();
  uint64_t v16 = sub_100021AF4();
  sub_100143A10();
  uint64_t v17 = sub_100035CB8();
  *(void *)(v17 + 16) = v16;
  *(void *)(v17 + 24) = v14;
  uint64_t v26 = sub_1001433F0;
  uint64_t v27 = v17;
  os_signpost_type_t v22 = _NSConcreteStackBlock;
  uint64_t v23 = 1107296256;
  id v24 = sub_100138D04;
  os_signpost_type_t v25 = &unk_1002149C0;
  id v18 = _Block_copy(&v22);
  id v19 = v14;
  swift_release();
  [v15 addSuccessBlock:v18];
  _Block_release(v18);
  uint64_t v20 = sub_100035CB8();
  *(void *)(v20 + 16) = v1;
  *(void *)(v20 + 24) = v19;
  uint64_t v26 = sub_1001433FC;
  uint64_t v27 = v20;
  os_signpost_type_t v22 = _NSConcreteStackBlock;
  uint64_t v23 = 1107296256;
  id v24 = sub_100181204;
  os_signpost_type_t v25 = &unk_100214A10;
  uint64_t v21 = _Block_copy(&v22);
  swift_retain();
  v19;
  swift_release();
  [v15 addErrorBlock:v21];

  _Block_release(v21);
  sub_100020998();
}

id sub_10013EE38(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v65 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v12 - 8);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return [a3 finishWithSuccess];
  }
  uint64_t v14 = Strong;
  uint64_t v62 = v9;
  uint64_t v63 = v6;
  id v64 = a3;
  id v15 = *(void **)(Strong + 112);
  swift_retain();
  [v15 lock];
  uint64_t v16 = sub_1001366BC();
  uint64_t v18 = v17;
  [v15 unlock];
  swift_release();
  id v19 = [a1 name];
  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;

  if (!v18)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if (v16 != v20 || v18 != v22)
  {
    char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v24) {
      goto LABEL_16;
    }
LABEL_11:
    if (qword_10022C4A0 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v26 = *(void *)(type metadata accessor for LogMessage() - 8);
    unint64_t v27 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1001C3120;
    v61[1] = v28 + v27;
    uint64_t v67 = (void *)type metadata accessor for MetricsIdentifierCloudDataController();
    aBlock[0] = v14;
    swift_retain();
    id v29 = (id)AMSLogKey();
    if (v29)
    {
      uint64_t v30 = v29;
      v61[0] = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v32 = v31;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v33._countAndFlagsBits = 0;
      v33._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v33);
      sub_100049788(aBlock, (uint64_t)v67);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v70 = (void *)DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v70, &qword_10022F490);
      v35._countAndFlagsBits = 5972026;
      v35._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v35);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v70 = (void *)v61[0];
      uint64_t v71 = v32;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v70, &qword_10022F490);
      v36._countAndFlagsBits = 93;
      v36._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v36);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v46._countAndFlagsBits = 0;
      v46._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v46);
      sub_100049788(aBlock, (uint64_t)v67);
      uint64_t v47 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v70 = (void *)v47;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)&v70, &qword_10022F490);
      v48._countAndFlagsBits = 58;
      v48._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v48);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)aBlock);
    LogMessage.init(stringLiteral:)();
    uint64_t v49 = static os_log_type_t.debug.getter();
    sub_10004841C(v49);
    swift_bridgeObjectRelease();
    uint64_t v50 = swift_retain();
    sub_100141A5C(v50, v14, (void (*)(id))&static Date.distantPast.getter);
    id v51 = *(void **)(v14 + 128);
    uint64_t v52 = swift_allocObject();
    id v53 = v64;
    *(void *)(v52 + 16) = v14;
    *(void *)(v52 + 24) = v53;
    uint64_t v68 = sub_100143408;
    uint64_t v69 = v52;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002CD0C;
    uint64_t v67 = &unk_100214A60;
    uint64_t v54 = _Block_copy(aBlock);
    swift_retain();
    id v55 = v51;
    id v56 = v53;
    static DispatchQoS.unspecified.getter();
    uint64_t v70 = _swiftEmptyArrayStorage;
    sub_10002AFF8((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100043478((uint64_t *)&unk_10022F4C0);
    sub_10002B6DC((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v54);
    swift_release();

    (*(void (**)(char *, uint64_t))(v63 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v11, v62);
    return (id)swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_16:
  if (qword_10022C4A0 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v67 = (void *)type metadata accessor for MetricsIdentifierCloudDataController();
  aBlock[0] = v14;
  swift_retain();
  id v37 = (id)AMSLogKey();
  if (v37)
  {
    uint64_t v38 = v37;
    uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v41 = v40;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v42._countAndFlagsBits = 0;
    v42._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v42);
    sub_100049788(aBlock, (uint64_t)v67);
    uint64_t v43 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v70 = (void *)v43;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v70, &qword_10022F490);
    v44._countAndFlagsBits = 5972026;
    v44._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v44);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v70 = (void *)v39;
    uint64_t v71 = v41;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v70, &qword_10022F490);
    v45._countAndFlagsBits = 93;
    v45._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v45);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v57._countAndFlagsBits = 0;
    v57._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v57);
    sub_100049788(aBlock, (uint64_t)v67);
    uint64_t v58 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v70 = (void *)v58;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v70, &qword_10022F490);
    v59._countAndFlagsBits = 58;
    v59._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v59);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)aBlock);
  LogMessage.init(stringLiteral:)();
  uint64_t v60 = static os_log_type_t.debug.getter();
  sub_10004841C(v60);
  swift_bridgeObjectRelease();
  [v64 finishWithSuccess];
  return (id)swift_release();
}

void sub_10013F7C0(uint64_t a1, void *a2)
{
  sub_100043478(&qword_100231DE0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1001C70D0;
  sub_10013CD4C();
  *(void *)(v3 + 32) = v4;
  sub_100139330();
  *(void *)(v3 + 40) = v5;
  specialized Array._endMutation()();
  sub_10004D510(0, &qword_100231DE8);
  id v6 = sub_1001381A0();
  [a2 finishWithPromise:v6];
}

uint64_t sub_10013F894(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_10013F8F4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  if (qword_10022C4A0 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v23 = type metadata accessor for MetricsIdentifierCloudDataController();
  v22[0] = a2;
  swift_retain();
  id v6 = (id)AMSLogKey();
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v11._countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    sub_100049788(v22, v23);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v20[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v20, &qword_10022F490);
    v13._countAndFlagsBits = 5972026;
    v13._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    uint64_t MetatypeMetadata = &type metadata for String;
    v20[0] = v8;
    v20[1] = v10;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v20, &qword_10022F490);
    v14._countAndFlagsBits = 93;
    v14._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v15._countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    sub_100049788(v22, v23);
    uint64_t v16 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v20[0] = v16;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v20, &qword_10022F490);
    v17._countAndFlagsBits = 58;
    v17._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v22);
  LogMessage.init(stringLiteral:)();
  uint64_t v18 = static os_log_type_t.error.getter();
  sub_10004841C(v18);
  swift_bridgeObjectRelease();
  id v19 = (void *)_convertErrorToNSError(_:)();
  [a3 finishWithError:v19];
}

uint64_t sub_10013FC20@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1001AD0C0();
  id v4 = [a1 name];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = 95;
  v8._object = (void *)0xE100000000000000;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  uint64_t v10 = v5;
  uint64_t v9 = v7;
  id v11 = objc_msgSend(objc_msgSend(a1, "zoneIdentifier"), "name");
  swift_unknownObjectRelease();
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  Swift::String v14 = v13;

  swift_bridgeObjectRetain();
  v15._countAndFlagsBits = v12;
  v15._object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = v10;
  v16._object = v9;
  URL.appendPathComponent(_:)(v16);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 0x64726F636572;
  v17._object = (void *)0xE600000000000000;
  URL.appendPathExtension(_:)(v17);
  uint64_t v18 = type metadata accessor for URL();
  return sub_100021AC0(a2, 0, 1, v18);
}

void sub_10013FD88()
{
  sub_1000209F4();
  id v4 = v3;
  uint64_t v5 = sub_100043478(&qword_10022FB40);
  uint64_t v6 = sub_1000208F0(v5);
  __chkstk_darwin(v6);
  uint64_t v7 = sub_1000440DC();
  sub_100020DEC();
  uint64_t v44 = v8;
  __chkstk_darwin(v9);
  sub_100045B24();
  uint64_t v10 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v11 = sub_1000208F0(v10);
  __chkstk_darwin(v11);
  sub_10002D300();
  if (qword_10022C4A0 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v12 = type metadata accessor for LogMessage();
  sub_100044798(v12);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v42 = type metadata accessor for MetricsIdentifierCloudDataController();
  uint64_t v51 = v42;
  v50[0] = v0;
  Swift::String v45 = (id *)v0;
  swift_retain();
  id v13 = (id)AMSLogKey();
  if (v13)
  {
    Swift::String v14 = v13;
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v43 = v7;
    uint64_t v17 = v16;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100020B08();
    sub_100020F04(v50);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_100046DD8(MetatypeMetadata);
    sub_100027BD8((uint64_t)&v47, &qword_10022F490);
    sub_100020E44();
    uint64_t v49 = &type metadata for String;
    uint64_t v47 = v15;
    uint64_t v48 = v17;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v47, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    uint64_t v7 = v43;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100020B08();
    sub_100020F04(v50);
    uint64_t v19 = swift_getMetatypeMetadata();
    sub_100046DD8(v19);
    sub_100027BD8((uint64_t)&v47, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v50);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  sub_10002064C();
  v20._countAndFlagsBits = 0xD000000000000022;
  LogMessage.StringInterpolation.appendLiteral(_:)(v20);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v51 = ObjectType;
  v50[0] = v4;
  swift_unknownObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100027BD8((uint64_t)v50, &qword_10022F490);
  v22._countAndFlagsBits = 46;
  v22._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v22);
  LogMessage.init(stringInterpolation:)();
  uint64_t v23 = static os_log_type_t.info.getter();
  sub_10004841C(v23);
  swift_bridgeObjectRelease();
  [v45[13] removeRecordWithIdentifier:v4];
  sub_10013FC20(v4, v1);
  if (sub_10004FD40(v1, 1, v7) == 1)
  {
    sub_100027BD8(v1, &qword_10022FB40);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v2, v1, v7);
    id v24 = [self defaultManager];
    URL._bridgeToObjectiveC()(v25);
    unint64_t v27 = v26;
    v50[0] = 0;
    unsigned int v28 = [v24 removeItemAtURL:v26 error:v50];

    if (v28)
    {
      id v29 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
      id v30 = v50[0];
      v29(v2, v7);
    }
    else
    {
      id v31 = v50[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      uint64_t v51 = v42;
      v50[0] = v45;
      swift_retain();
      id v32 = (id)AMSLogKey();
      if (v32)
      {
        Swift::String v33 = v32;
        uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v36 = v35;

        swift_bridgeObjectRetain();
        sub_100020F60();
        sub_100020B08();
        sub_100020F04(v50);
        uint64_t v37 = swift_getMetatypeMetadata();
        sub_100046DD8(v37);
        sub_10004D6EC();
        sub_100020E44();
        uint64_t v49 = &type metadata for String;
        uint64_t v47 = v34;
        uint64_t v48 = v36;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10004D6EC();
        sub_1000208D8();
        sub_100047718();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100020980();
        sub_100020B08();
        sub_100020F04(v50);
        uint64_t v38 = swift_getMetatypeMetadata();
        sub_100046DD8(v38);
        sub_100027BD8((uint64_t)&v47, &qword_10022F490);
        sub_100020E94();
        sub_100047718();
      }
      sub_10004377C((uint64_t)v50);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v39._countAndFlagsBits = 0xD000000000000035;
      v39._object = (void *)0x80000001001D4700;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      uint64_t v51 = ObjectType;
      v50[0] = v4;
      swift_unknownObjectRetain();
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CB40();
      sub_10004A5C8();
      swift_getErrorValue();
      uint64_t v51 = v46;
      sub_10003BAA4((uint64_t *)v50);
      sub_1000456E0();
      sub_100011DCC();
      v40();
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CB40();
      sub_100020E60();
      LogMessage.init(stringInterpolation:)();
      uint64_t v41 = static os_log_type_t.error.getter();
      sub_10004841C(v41);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v2, v7);
    }
  }
  sub_100020FDC();
}

void sub_10014045C()
{
  sub_1000209F4();
  char v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v8 = sub_1000208F0(v7);
  __chkstk_darwin(v8);
  sub_100011D4C();
  uint64_t v9 = sub_100043478(&qword_10022FB40);
  uint64_t v10 = sub_1000208F0(v9);
  __chkstk_darwin(v10);
  uint64_t v11 = sub_1000440DC();
  sub_100020DEC();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_10002D300();
  [*(id *)(v0 + 104) saveRecord:v6 isServerRecord:v4 & 1];
  self;
  uint64_t v15 = swift_dynamicCastObjCClass();
  if (v15)
  {
    uint64_t v16 = (void *)v15;
    uint64_t v36 = v2;
    id v17 = objc_allocWithZone((Class)NSKeyedArchiver);
    swift_unknownObjectRetain();
    id v18 = [v17 initRequiringSecureCoding:1];
    [v16 encodeSystemFieldsWithCoder:v18];
    id v19 = [v18 encodedData];
    uint64_t v20 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v22 = v21;

    sub_10013FC20([v6 identifier], v1);
    swift_unknownObjectRelease();
    if (sub_10004FD40(v1, 1, v11) == 1)
    {
      sub_10004B278(v20, v22);

      swift_unknownObjectRelease();
      sub_100027BD8(v1, &qword_10022FB40);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v36, v1, v11);
      Data.write(to:options:)();
      if (qword_10022C4A0 != -1) {
        swift_once();
      }
      sub_100043478(&qword_10022E560);
      uint64_t v23 = type metadata accessor for LogMessage();
      sub_100044798(v23);
      sub_10003BDEC();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      uint64_t ObjectType = type metadata accessor for MetricsIdentifierCloudDataController();
      v39[0] = v0;
      swift_retain();
      id v24 = (id)AMSLogKey();
      if (v24)
      {
        os_signpost_type_t v25 = v24;
        uint64_t v35 = v13;
        uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v28 = v27;

        swift_bridgeObjectRetain();
        sub_100020F60();
        sub_100020E60();
        sub_100049788(v39, ObjectType);
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v37[0] = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)v37, &qword_10022F490);
        sub_100020E44();
        uint64_t MetatypeMetadata = &type metadata for String;
        v37[0] = v26;
        v37[1] = v28;
        uint64_t v13 = v35;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)v37, &qword_10022F490);
        sub_1000208D8();
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100020980();
        sub_100020E60();
        uint64_t v30 = sub_10002106C(v39);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v37[0] = v30;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8((uint64_t)v37, &qword_10022F490);
        sub_100020E94();
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)v39);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_10002064C();
      v31._countAndFlagsBits = 0xD000000000000031;
      LogMessage.StringInterpolation.appendLiteral(_:)(v31);
      id v32 = [v6 identifier];
      uint64_t ObjectType = swift_getObjectType();
      v39[0] = v32;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v39, &qword_10022F490);
      v33._countAndFlagsBits = 46;
      v33._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v33);
      LogMessage.init(stringInterpolation:)();
      uint64_t v34 = static os_log_type_t.info.getter();
      sub_10004841C(v34);
      sub_10004B278(v20, v22);

      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v36, v11);
    }
  }
  sub_100020FDC();
}

void sub_100140BF4()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  unint64_t v5 = v4;
  unint64_t v7 = v6;
  type metadata accessor for DispatchWorkItemFlags();
  sub_100020DEC();
  v31[4] = v9;
  v31[5] = v8;
  __chkstk_darwin(v8);
  sub_100040A70();
  v31[2] = v10;
  sub_100043EA8();
  v31[3] = type metadata accessor for DispatchQoS();
  sub_100020DEC();
  v31[1] = v11;
  __chkstk_darwin(v12);
  sub_100040A70();
  v31[0] = v13;
  if (!v7) {
    goto LABEL_11;
  }
  uint64_t v32 = v3;
  if (v7 >> 62) {
    goto LABEL_32;
  }
  uint64_t v14 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  swift_retain();
  if (v14) {
    goto LABEL_4;
  }
LABEL_10:
  while (1)
  {
    swift_release();
    swift_bridgeObjectRelease_n();
    uint64_t v3 = v32;
LABEL_11:
    if (!v5) {
      break;
    }
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain_n();
      swift_retain();
      unint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
      if (!v7)
      {
LABEL_20:
        swift_release();
        swift_bridgeObjectRelease_n();
        break;
      }
    }
    else
    {
      unint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      swift_retain();
      if (!v7) {
        goto LABEL_20;
      }
    }
    uint64_t v17 = 4;
    while (1)
    {
      if ((v5 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_unknownObjectRetain();
      }
      uint64_t v18 = v17 - 3;
      if (__OFADD__(v17 - 4, 1)) {
        break;
      }
      sub_10013FD88();
      swift_unknownObjectRelease();
      ++v17;
      if (v18 == v7) {
        goto LABEL_20;
      }
    }
    while (1)
    {
      __break(1u);
LABEL_32:
      swift_bridgeObjectRetain_n();
      swift_retain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      if (!v14) {
        break;
      }
LABEL_4:
      uint64_t v15 = 4;
      while (1)
      {
        if ((v7 & 0xC000000000000001) != 0) {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          swift_unknownObjectRetain();
        }
        uint64_t v16 = v15 - 3;
        if (__OFADD__(v15 - 4, 1)) {
          break;
        }
        sub_10014045C();
        swift_unknownObjectRelease();
        ++v15;
        if (v16 == v14) {
          goto LABEL_10;
        }
      }
      __break(1u);
    }
  }
  if (v3)
  {
    id v19 = (void *)_convertErrorToNSError(_:)();
    uint64_t v20 = sub_10013B7AC(2);

    if (v20)
    {
      Swift::String v39 = v20;
      type metadata accessor for CKError(0);
      sub_10002AFF8(&qword_10022CC10, type metadata accessor for CKError);
      uint64_t v21 = _BridgedStoredNSError.userInfo.getter();
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_10004D120(v22, v23, v21, &v33);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v35)
      {
        sub_100043478(&qword_100231DB8);
        uint64_t v24 = swift_dynamicCast();
        if ((v24 & 1) != 0
          && (uint64_t v25 = (uint64_t)v39,
              char v38 = 0,
              __chkstk_darwin(v24),
              v31[-2] = v1,
              v31[-1] = &v38,
              sub_100134B24(v25, (void (*)(unsigned char *, id))sub_1001433A4),
              swift_bridgeObjectRelease(),
              v38 == 1))
        {
          uint64_t v26 = *(void **)(v1 + 128);
          uint64_t v36 = sub_1001433AC;
          uint64_t v37 = v1;
          *(void *)&long long v33 = _NSConcreteStackBlock;
          *((void *)&v33 + 1) = 1107296256;
          uint64_t v34 = sub_10002CD0C;
          uint64_t v35 = &unk_100214948;
          uint64_t v27 = _Block_copy(&v33);
          swift_retain();
          id v28 = v26;
          static DispatchQoS.unspecified.getter();
          Swift::String v39 = _swiftEmptyArrayStorage;
          sub_10002AFF8((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          sub_100043478((uint64_t *)&unk_10022F4C0);
          sub_10002B6DC((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
          dispatch thunk of SetAlgebra.init<A>(_:)();
          OS_dispatch_queue.async(group:qos:flags:execute:)();
          _Block_release(v27);

          sub_100043FB0();
          v29();
          sub_100043FB0();
          v30();
          swift_release();
        }
        else
        {
        }
      }
      else
      {

        sub_100027BD8((uint64_t)&v33, &qword_10022F490);
      }
    }
  }
  sub_100020FDC();
}

void sub_100141164(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v8 - 8);
  id v9 = sub_10013B7AC(14);
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v49 = (uint64_t)v9;
    type metadata accessor for CKError(0);
    sub_10002AFF8(&qword_10022CC10, type metadata accessor for CKError);
    uint64_t v11 = _BridgedStoredNSError.userInfo.getter();
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_10004D120(v12, v13, v11, &v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (ObjectType)
    {
      sub_100043478((uint64_t *)&unk_100231DD0);
      if (swift_dynamicCast())
      {
        uint64_t v14 = v49;
        if (qword_10022C4A0 != -1) {
          swift_once();
        }
        sub_100043478(&qword_10022E560);
        type metadata accessor for LogMessage();
        *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
        uint64_t ObjectType = (void *)type metadata accessor for MetricsIdentifierCloudDataController();
        *(void *)&long long v52 = a3;
        swift_retain();
        id v15 = (id)AMSLogKey();
        if (v15)
        {
          uint64_t v16 = v15;
          uint64_t v48 = a4;
          uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v19 = v18;

          swift_bridgeObjectRetain();
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
          v20._countAndFlagsBits = 0;
          v20._object = (void *)0xE000000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v20);
          sub_100049788(&v52, (uint64_t)ObjectType);
          uint64_t DynamicType = swift_getDynamicType();
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
          uint64_t v49 = DynamicType;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_100027BD8((uint64_t)&v49, &qword_10022F490);
          v22._countAndFlagsBits = 5972026;
          v22._object = (void *)0xE300000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v22);
          uint64_t MetatypeMetadata = &type metadata for String;
          uint64_t v49 = v17;
          uint64_t v50 = v19;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_100027BD8((uint64_t)&v49, &qword_10022F490);
          v23._countAndFlagsBits = 93;
          v23._object = (void *)0xE100000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v23);
          LogMessage.init(stringInterpolation:)();
          a4 = v48;
          swift_bridgeObjectRelease();
        }
        else
        {
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
          v42._countAndFlagsBits = 0;
          v42._object = (void *)0xE000000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v42);
          sub_100049788(&v52, (uint64_t)ObjectType);
          uint64_t v43 = swift_getDynamicType();
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
          uint64_t v49 = v43;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_100027BD8((uint64_t)&v49, &qword_10022F490);
          v44._countAndFlagsBits = 58;
          v44._object = (void *)0xE100000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v44);
          LogMessage.init(stringInterpolation:)();
        }
        sub_10004377C((uint64_t)&v52);
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v45._countAndFlagsBits = 0xD000000000000042;
        v45._object = (void *)0x80000001001D4600;
        LogMessage.StringInterpolation.appendLiteral(_:)(v45);
        uint64_t ObjectType = (void *)swift_getObjectType();
        *(void *)&long long v52 = v14;
        swift_unknownObjectRetain();
        LogMessage.StringInterpolation.appendInterpolation(sensitive:)();
        sub_100027BD8((uint64_t)&v52, &qword_10022F490);
        v46._countAndFlagsBits = 0;
        v46._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v46);
        LogMessage.init(stringInterpolation:)();
        uint64_t v47 = static os_log_type_t.default.getter();
        sub_10004841C(v47);
        swift_bridgeObjectRelease();
        sub_10014045C();
        swift_unknownObjectRelease();

        *a4 = 1;
        return;
      }
    }
    else
    {

      sub_100027BD8((uint64_t)&v52, &qword_10022F490);
    }
  }
  if (qword_10022C4A0 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t ObjectType = (void *)type metadata accessor for MetricsIdentifierCloudDataController();
  *(void *)&long long v52 = a3;
  swift_retain();
  id v24 = (id)AMSLogKey();
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v26 = a1;
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v29 = v28;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v30._countAndFlagsBits = 0;
    v30._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    sub_100049788(&v52, (uint64_t)ObjectType);
    uint64_t v31 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v49 = v31;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v49, &qword_10022F490);
    v32._countAndFlagsBits = 5972026;
    v32._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v32);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v49 = v27;
    uint64_t v50 = v29;
    a1 = v26;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v49, &qword_10022F490);
    v33._countAndFlagsBits = 93;
    v33._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v33);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v34._countAndFlagsBits = 0;
    v34._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v34);
    sub_100049788(&v52, (uint64_t)ObjectType);
    uint64_t v35 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v49 = v35;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)&v49, &qword_10022F490);
    v36._countAndFlagsBits = 58;
    v36._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v36);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v52);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v37._object = (void *)0x80000001001D45C0;
  v37._countAndFlagsBits = 0xD000000000000031;
  LogMessage.StringInterpolation.appendLiteral(_:)(v37);
  uint64_t ObjectType = &type metadata for AnyHashable;
  *(void *)&long long v52 = swift_allocObject();
  sub_1000433B4(a1, v52 + 16);
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100027BD8((uint64_t)&v52, &qword_10022F490);
  v38._countAndFlagsBits = 0x203A726F72726520;
  v38._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v38);
  uint64_t ObjectType = (void *)sub_10004D510(0, (unint64_t *)&qword_100234520);
  *(void *)&long long v52 = a2;
  id v39 = a2;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100027BD8((uint64_t)&v52, &qword_10022F490);
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v40);
  LogMessage.init(stringInterpolation:)();
  uint64_t v41 = static os_log_type_t.error.getter();
  sub_10004841C(v41);
  swift_bridgeObjectRelease();
}

void sub_100141978()
{
  uint64_t v0 = (void *)sub_100139330(0);
}

uint64_t sub_1001419B0(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v4 = *(void **)(a1 + 112);
  [v4 lock];
  id v5 = [a3 name];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100135B7C();
  [v4 unlock];
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t sub_100141A5C(uint64_t a1, uint64_t a2, void (*a3)(id))
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = sub_1000208F0(v6);
  __chkstk_darwin(v7);
  sub_100022558();
  uint64_t v8 = *(void **)(a1 + 112);
  a3([v8 lock]);
  sub_100135A08(v3);
  [v8 unlock];
  return swift_release();
}

void sub_100141B00()
{
  sub_1000209F4();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  type metadata accessor for DispatchWorkItemFlags();
  sub_100020DEC();
  __chkstk_darwin(v6);
  uint64_t v15 = type metadata accessor for DispatchQoS();
  sub_100020DEC();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_10002D300();
  if (qword_10022C5C8 != -1) {
    swift_once();
  }
  sub_10002A570(0x696669746E656469, 0xEE00636E79537265);
  uint64_t v10 = *(void **)(v0 + 128);
  uint64_t v11 = sub_100035CB8();
  *(void *)(v11 + 16) = v5;
  *(void *)(v11 + 24) = v3;
  v16[4] = sub_10014339C;
  v16[5] = v11;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_10002CD0C;
  void v16[3] = &unk_1002148F8;
  uint64_t v12 = _Block_copy(v16);
  id v13 = v10;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  sub_10002AFF8((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_10002B6DC((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);

  sub_10003629C();
  v14();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v15);
  swift_release();
  sub_100020FDC();
}

void sub_100141DB0(uint64_t (*a1)(void))
{
  uint64_t v1 = (void *)a1();
  v3[4] = sub_100141E68;
  v3[5] = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 1107296256;
  v3[2] = sub_10016D7B4;
  v3[3] = &unk_100214920;
  uint64_t v2 = _Block_copy(v3);
  [v1 addFinishBlock:v2];
  _Block_release(v2);
}

uint64_t sub_100141E68()
{
  if (qword_10022C5C8 != -1) {
    swift_once();
  }
  return sub_10000A734(0x696669746E656469, 0xEE00636E79537265);
}

id *sub_100141EE0()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100141F90()
{
  sub_100141EE0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MetricsIdentifierCloudDataController()
{
  return self;
}

void sub_100141FE8()
{
  sub_1000209F4();
  uint64_t v0 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v1 = sub_1000208F0(v0);
  __chkstk_darwin(v1);
  sub_100011D4C();
  if (qword_10022C4A0 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v2 = type metadata accessor for LogMessage();
  sub_100044798(v2);
  *(_OWORD *)(sub_100046CCC() + 16) = xmmword_1001C3120;
  uint64_t v3 = type metadata accessor for MetricsIdentifierCloudDataController();
  sub_10002123C(v3);
  id v4 = (id)AMSLogKey();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100020E60();
    sub_100043D30(v13);
    swift_getMetatypeMetadata();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1001439C8();
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v11[0] = v6;
    v11[1] = v8;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1001439C8();
    sub_1000208D8();
    sub_100040C54();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100020E60();
    uint64_t v9 = sub_100045CF8(v13);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v11[0] = v9;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v11, &qword_10022F490);
    sub_100020E94();
    sub_100040C54();
  }
  sub_10004377C((uint64_t)v13);
  sub_100020924();
  LogMessage.init(stringLiteral:)();
  uint64_t v10 = static os_log_type_t.info.getter();
  sub_10004841C(v10);
  swift_bridgeObjectRelease();
  swift_retain();
  sub_100043478((uint64_t *)&unk_100231D50);
  sub_10002B6DC((unint64_t *)&unk_10022F6B0, (uint64_t *)&unk_100231D50);
  Subject<>.send()();
  swift_release();
  sub_100020FDC();
}

void sub_10014226C()
{
  sub_1000209F4();
  type metadata accessor for DispatchWorkItemFlags();
  sub_100020DEC();
  __chkstk_darwin(v1);
  sub_100022558();
  type metadata accessor for DispatchQoS();
  sub_100020DEC();
  __chkstk_darwin(v2);
  sub_10004277C();
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  sub_100011D4C();
  if (qword_10022C4A0 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v5 = type metadata accessor for LogMessage();
  sub_100044798(v5);
  sub_100022804();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  Swift::String v20 = (void *)type metadata accessor for MetricsIdentifierCloudDataController();
  v19[0] = v0;
  swift_retain();
  id v6 = (id)AMSLogKey();
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100020E60();
    uint64_t v11 = sub_10002106C(v19);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v23[0] = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v23, &qword_10022F490);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v23[0] = v8;
    v23[1] = v10;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v23, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100020E60();
    uint64_t v12 = sub_100040FF8(v19);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v23[0] = v12;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v23, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v19);
  sub_100020924();
  LogMessage.init(stringLiteral:)();
  uint64_t v13 = static os_log_type_t.info.getter();
  sub_10004841C(v13);
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void **)(v0 + 128);
  uint64_t v21 = sub_100143364;
  uint64_t v22 = v0;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_10002CD0C;
  Swift::String v20 = &unk_1002148A8;
  uint64_t v15 = _Block_copy(v19);
  swift_retain();
  id v16 = v14;
  static DispatchQoS.unspecified.getter();
  v23[0] = _swiftEmptyArrayStorage;
  sub_10002AFF8((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_10002B6DC((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  sub_100043FB0();
  v17();
  sub_100043FB0();
  v18();
  swift_release();
  sub_100020FDC();
}

uint64_t sub_1001426AC(uint64_t result)
{
  if (*(unsigned char *)(result + 80) == 1)
  {
    swift_retain();
    sub_100043478((uint64_t *)&unk_100231D50);
    sub_10002B6DC((unint64_t *)&unk_10022F6B0, (uint64_t *)&unk_100231D50);
    Subject<>.send()();
    return swift_release();
  }
  return result;
}

uint64_t sub_100142768(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_unknownObjectRetain();
  uint64_t v5 = swift_retain();
  a4(v5);
  swift_unknownObjectRelease();
  return swift_release();
}

CKRecordZoneID sub_1001427CC()
{
  sub_10004D510(0, (unint64_t *)&unk_100231D88);
  v0._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v0._object = v1;
  v2._countAndFlagsBits = 0x696669746E656449;
  v2._object = (void *)0xEE00656E6F5A7265;
  result.super.Class isa = CKRecordZoneID.init(zoneName:ownerName:)(v2, v0).super.isa;
  qword_1002317F8 = (uint64_t)result.super.isa;
  return result;
}

void sub_100142910()
{
  sub_1000209F4();
  v30._countAndFlagsBits = v2;
  v30._object = v3;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v9 = sub_1000208F0(v8);
  __chkstk_darwin(v9);
  sub_10002D2D4();
  uint64_t v10 = sub_100043478(&qword_10022FB40);
  uint64_t v11 = sub_1000208F0(v10);
  __chkstk_darwin(v11);
  uint64_t v12 = sub_1000440DC();
  sub_100020DEC();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_100045B24();
  sub_10004D510(0, &qword_100231D80);
  uint64_t v16 = qword_10022C560;
  swift_bridgeObjectRetain();
  if (v16 != -1) {
    swift_once();
  }
  id v17 = (id)qword_1002317F8;
  v18._countAndFlagsBits = v7;
  v18._object = v5;
  uint64_t v19 = CKRecordID.init(recordName:zoneID:)(v18, (CKRecordZoneID)v17).super.isa;
  sub_10013FC20(v19, v0);

  if (sub_10004FD40(v0, 1, v12) == 1)
  {
    sub_100027BD8(v0, &qword_10022FB40);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v1, v0, v12);
    id v20 = [self defaultManager];
    URL.path.getter();
    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    unsigned int v22 = [v20 fileExistsAtPath:v21];

    if (v22)
    {
      uint64_t v23 = Data.init(contentsOf:options:)();
      unint64_t v25 = v24;
      id v26 = objc_allocWithZone((Class)NSKeyedUnarchiver);
      sub_10004EA44(v23, v25);
      id v27 = sub_100143284(v23, v25);
      [v27 setRequiresSecureCoding:1];
      id v28 = [objc_allocWithZone((Class)CKRecord) initWithCoder:v27];

      sub_10004B278(v23, v25);
      sub_10003629C();
      v29();
      if (v28)
      {

        goto LABEL_9;
      }
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v1, v12);
    }
  }
  sub_10004D510(0, &qword_100231D98);
  swift_bridgeObjectRetain();
  CKRecord.init(recordType:recordID:)(v30, (CKRecordID)v19);
LABEL_9:
  sub_100020FDC();
}

uint64_t sub_100142F94(void *a1)
{
  id v1 = [a1 name];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

CKRecordID sub_10014307C(uint64_t a1, void *a2)
{
  sub_10004D510(0, &qword_100231D80);
  uint64_t v4 = qword_10022C560;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  id v5 = (id)qword_1002317F8;
  v6._countAndFlagsBits = a1;
  v6._object = a2;
  return CKRecordID.init(recordName:zoneID:)(v6, (CKRecordZoneID)v5);
}

uint64_t sub_100143190(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10004D510(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001431D4()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10014320C()
{
  return sub_100137308();
}

uint64_t sub_10014323C()
{
  return sub_100137308();
}

uint64_t sub_10014326C()
{
  return sub_10013739C();
}

void sub_100143278()
{
}

id sub_100143284(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v11 = 0;
  id v7 = [v3 initForReadingFromData:isa error:&v11];

  if (v7)
  {
    id v8 = v11;
  }
  else
  {
    id v9 = v11;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  sub_10004B278(a1, a2);
  return v7;
}

uint64_t sub_100143364()
{
  return sub_1001426AC(v0);
}

uint64_t sub_10014336C()
{
  swift_release();
  uint64_t v0 = sub_100044104();
  return _swift_deallocObject(v0, v1, v2);
}

void sub_10014339C()
{
  sub_100141DB0(*(uint64_t (**)(void))(v0 + 16));
}

void sub_1001433A4(uint64_t a1, void *a2)
{
  sub_100141164(a1, a2, *(void *)(v2 + 16), *(unsigned char **)(v2 + 24));
}

void sub_1001433AC()
{
}

uint64_t sub_1001433B4()
{
  sub_10004377C(v0 + 16);
  return _swift_deallocObject(v0, 56, 7);
}

id sub_1001433F0(void *a1)
{
  return sub_10013EE38(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_1001433FC(uint64_t a1)
{
  sub_10013F8F4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_100143408()
{
  sub_10013F7C0(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100143410()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

id sub_100143458(void *a1)
{
  return sub_10013DEA8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100143464()
{
  return sub_10004C8AC((void (*)(void))&_swift_release);
}

uint64_t sub_10014347C(uint64_t a1, uint64_t a2)
{
  return sub_10013E600(a1, a2);
}

uint64_t sub_100143488()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001434C0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v0 = sub_10002068C();
  return _swift_deallocObject(v0, v1, v2);
}

id sub_100143508(void *a1, uint64_t a2)
{
  return sub_10013E164(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_100143514(void *a1, SEL *a2, uint64_t *a3)
{
  id v4 = [a1 *a2];
  if (!v4) {
    return 0;
  }
  id v5 = v4;
  sub_100043478(a3);
  uint64_t v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  return v6;
}

uint64_t sub_100143584(void *a1)
{
  id v1 = [a1 savedRecords];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  sub_100043478((uint64_t *)&unk_100231DD0);
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_1001435EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10013D2C0(a1, a2, a3, *(void *)(v3 + 16), *(void **)(v3 + 24));
}

uint64_t sub_1001435F4()
{
  return sub_10013D6DC();
}

uint64_t sub_1001435FC(uint64_t a1)
{
  return sub_10013D710(a1, v1);
}

uint64_t sub_100143604()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_10002068C();
  return _swift_deallocObject(v1, v2, v3);
}

void sub_10014364C()
{
  sub_10013D5B0(*(void **)(v0 + 16));
}

uint64_t sub_10014365C(uint64_t a1)
{
  return sub_10013C18C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100143664()
{
  swift_release();

  swift_unknownObjectRelease();
  uint64_t v1 = sub_10002068C();
  return _swift_deallocObject(v1, v2, v3);
}

void sub_1001436A4(uint64_t a1, uint64_t a2)
{
  sub_10013C64C(a1, a2, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_1001436B4()
{
  return sub_100143718((void (*)(void))&_swift_unknownObjectRelease);
}

id sub_1001436CC(int a1, uint64_t a2)
{
  return sub_10013CC2C(a1, a2, *(id *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1001436E8()
{
  return sub_100143718((void (*)(void))&_swift_unknownObjectRelease);
}

uint64_t sub_100143700()
{
  return sub_100143718((void (*)(void))&_swift_release);
}

uint64_t sub_100143718(void (*a1)(void))
{
  a1(*(void *)(v1 + 24));
  uint64_t v3 = sub_100044104();
  return _swift_deallocObject(v3, v4, v5);
}

void sub_100143760()
{
  sub_10013C570(*(void **)(v0 + 16));
}

uint64_t sub_100143768(uint64_t a1)
{
  return sub_10013B8AC(a1, v1);
}

uint64_t sub_100143770()
{
  return sub_10004C8AC((void (*)(void))&_swift_release);
}

id sub_100143788(void *a1)
{
  return sub_100139A10(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100143794()
{
  return sub_10004C8AC((void (*)(void))&_swift_release);
}

uint64_t sub_1001437AC(uint64_t a1)
{
  return sub_10013A7E4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1001437B8()
{
  *(unsigned char *)(v0 + 80) = 1;
}

uint64_t sub_1001437C4()
{
  swift_release();
  swift_unknownObjectRelease();

  swift_release();
  return _swift_deallocObject(v0, 56, 7);
}

id sub_100143814(void *a1, uint64_t a2)
{
  return sub_100139C04(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 40));
}

id sub_100143824(uint64_t a1, uint64_t a2)
{
  return sub_10013A684(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_100143830()
{
  swift_release();

  uint64_t v1 = sub_100044104();
  return _swift_deallocObject(v1, v2, v3);
}

void sub_100143868(uint64_t a1, uint64_t a2)
{
  sub_100138F20(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_100143870()
{
  return sub_10014388C((void (*)(void))&_swift_unknownObjectRelease, 32);
}

uint64_t sub_10014388C(void (*a1)(void), uint64_t a2)
{
  swift_release();
  a1(*(void *)(v2 + 24));
  return _swift_deallocObject(v2, a2, 7);
}

void sub_1001438E8(uint64_t a1)
{
  sub_10013895C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

id sub_1001438F0()
{
  return sub_100137B30(v0);
}

uint64_t sub_1001439C8()
{
  return sub_100027BD8(v1 - 144, v0);
}

uint64_t sub_1001439E0()
{
  return swift_slowDealloc();
}

uint64_t sub_1001439F8()
{
  return swift_slowAlloc();
}

uint64_t sub_100143A10()
{
  return swift_weakInit();
}

uint64_t sub_100143A28(void (*a1)(void *), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a3 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    Swift::String v18 = (void *)(*(void *)(a3 + 48) + 16 * i);
    uint64_t v19 = v18[1];
    v20[0] = *v18;
    v20[1] = v19;
    swift_bridgeObjectRetain();
    a1(v20);
    if (v3)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v10) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    if (!v16) {
      break;
    }
LABEL_17:
    unint64_t v9 = (v16 - 1) & v16;
  }
  int64_t v17 = v12 + 1;
  if (v12 + 1 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 2;
  if (v12 + 2 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 3;
  if (v12 + 3 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 4;
  if (v12 + 4 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_16:
    int64_t v12 = v17;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v10) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_100143BDC(char a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  int64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  int64_t v12 = (char *)v20 - v11;
  sub_10003CF18();
  URL.appendingPathComponent(_:)();
  unint64_t v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v10, v6);
  v20[0] = 0;
  v20[1] = 0xE000000000000000;
  unint64_t v14 = 0xE900000000000073;
  uint64_t v15 = 0x636974796C616E61;
  switch(a1)
  {
    case 1:
      unint64_t v14 = 0xE800000000000000;
      uint64_t v15 = 0x6C616E7265746E69;
      break;
    case 2:
      unint64_t v14 = 0xE800000000000000;
      uint64_t v15 = 0x7379656E72756F6ALL;
      break;
    case 3:
      unint64_t v14 = 0xEF736E6F69746164;
      uint64_t v15 = 0x6E656D6D6F636572;
      break;
    default:
      break;
  }
  unint64_t v16 = v14;
  String.append(_:)(*(Swift::String *)&v15);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 46;
  v17._object = (void *)0xE100000000000000;
  String.append(_:)(v17);
  v18._countAndFlagsBits = a2;
  v18._object = a3;
  String.append(_:)(v18);
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v13)(v12, v6);
}

void *sub_100143E00()
{
  uint64_t v0 = sub_100078E48();
  uint64_t v1 = (char *)v0[2];
  if (v1)
  {
    uint64_t v2 = (unsigned __int8 *)(v0 + 4);
    do
    {
      unsigned int v3 = *v2++;
      sub_100143ED4(v3);
      sub_100144B10();
      sub_1001451A0(v3);
      sub_10014651C(v3);
      --v1;
    }
    while (v1);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = &type metadata for AMSFlags;
  unint64_t v8 = sub_10002FDEC();
  v6[0] = 0;
  char v4 = isFeatureEnabled(_:)();
  sub_10004377C((uint64_t)v6);
  if (v4) {
    [self erase];
  }
  type metadata accessor for AppDatabase();
  return sub_10007F190();
}

uint64_t sub_100143ED4(int a1)
{
  int v102 = a1;
  uint64_t v1 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v1 - 8);
  uint64_t v106 = (char *)&v95 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v99 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v103 = (char *)&v95 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v101 = (char *)&v95 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v100 = (char *)&v95 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  char v105 = (char *)&v95 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  unint64_t v104 = (char *)&v95 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v95 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  unsigned int v22 = (char *)&v95 - v21;
  __chkstk_darwin(v20);
  unint64_t v24 = (char *)&v95 - v23;
  unint64_t v25 = self;
  id v26 = [v25 defaultManager];
  id v27 = [v26 temporaryDirectory];

  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  URL.appendingPathComponent(_:)();
  id v28 = *(void (**)(char *, uint64_t))(v4 + 8);
  v28(v22, v3);
  sub_1000FA888();
  id v97 = v25;
  uint64_t v98 = v4;
  uint64_t v29 = v105;
  v28(v24, v3);
  sub_10003CF18();
  URL.appendingPathComponent(_:)();
  v28(v22, v3);
  sub_1000FA888();
  v28(v19, v3);
  uint64_t v47 = v104;
  LOBYTE(v22) = v102;
  sub_100143BDC(v102, 29546, (void *)0xE200000000000000);
  sub_100008358((char)v22, 29546, (void *)0xE200000000000000);
  id v48 = v97;
  id v49 = [v97 defaultManager];
  URL.path.getter();
  NSString v50 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v51 = [v49 fileExistsAtPath:v50];

  long long v52 = *(void (**)(char *, char *, uint64_t))(v98 + 16);
  id v53 = v100;
  v98 += 16;
  char v95 = v52;
  v52(v100, v29, v3);
  uint64_t v96 = v28;
  if (!v51)
  {
    v28(v53, v3);
    uint64_t v58 = &selRef_scope;
    Swift::String v59 = v101;
    uint64_t v60 = v103;
    uint64_t v61 = &selRef_scope;
LABEL_13:
    char v69 = v102;
    sub_100143BDC(v102, 0x6B63617074656ALL, (void *)0xE700000000000000);
    sub_100008358(v69, 0x6B63617074656ALL, (void *)0xE700000000000000);
    id v70 = [v48 v58[259]];
    URL.path.getter();
    uint64_t v71 = v60;
    NSString v72 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    unsigned int v73 = objc_msgSend(v70, v61[302], v72);

    uint64_t v74 = v99;
    v95(v99, v71, v3);
    if (v73)
    {
      id v75 = [v48 v58[259]];
      URL.path.getter();
      uint64_t v76 = v61;
      BOOL v77 = v74;
      NSString v78 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      unsigned __int8 v79 = objc_msgSend(v75, v76[302], v78);

      Swift::Bool v80 = v96;
      v96(v77, v3);
      unint64_t v81 = v104;
      if ((v79 & 1) == 0)
      {
        id v82 = [v48 v58[259]];
        URL.path.getter();
        NSString v83 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        uint64_t v84 = v103;
        URL.path.getter();
        NSString v85 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        v112[0] = 0;
        BOOL v86 = v59;
        unsigned int v87 = [v82 moveItemAtPath:v83 toPath:v85 error:v112];

        if (v87)
        {
          id v88 = v112[0];
          unint64_t v89 = v96;
          v96(v84, v3);
          v89(v86, v3);
          v89(v105, v3);
          return ((uint64_t (*)(char *, uint64_t))v89)(v104, v3);
        }
        id v94 = v112[0];
        _convertNSErrorToError(_:)();

        swift_willThrow();
        v92 = v96;
        v96(v84, v3);
        v92(v86, v3);
        v92(v105, v3);
        uint64_t v93 = v104;
        goto LABEL_2;
      }
    }
    else
    {
      Swift::Bool v80 = v96;
      v96(v74, v3);
      unint64_t v81 = v104;
    }
    v80(v103, v3);
    v80(v59, v3);
    v80(v105, v3);
    return ((uint64_t (*)(char *, uint64_t))v80)(v81, v3);
  }
  id v54 = [v48 defaultManager];
  URL.path.getter();
  id v55 = v53;
  NSString v56 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned __int8 v57 = [v54 fileExistsAtPath:v56];

  v28(v55, v3);
  uint64_t v58 = &selRef_scope;
  Swift::String v59 = v101;
  uint64_t v60 = v103;
  uint64_t v61 = &selRef_scope;
  if (v57) {
    goto LABEL_13;
  }
  id v62 = [v48 defaultManager];
  URL.path.getter();
  NSString v63 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v64 = v105;
  URL.path.getter();
  NSString v65 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v112[0] = 0;
  NSString v66 = v47;
  unsigned int v67 = [v62 moveItemAtPath:v63 toPath:v65 error:v112];

  if (v67)
  {
    id v68 = v112[0];
    Swift::String v59 = v101;
    id v48 = v97;
    uint64_t v58 = &selRef_scope;
    uint64_t v60 = v103;
    goto LABEL_13;
  }
  id v90 = v112[0];
  _convertNSErrorToError(_:)();

  swift_willThrow();
  uint64_t v91 = v64;
  v92 = v96;
  v96(v91, v3);
  uint64_t v93 = v66;
LABEL_2:
  v92(v93, v3);
  if (qword_10022C4A8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v113 = sub_100043478(&qword_100231ED8);
  v112[0] = v107;
  id v30 = (id)AMSLogKey();
  if (v30)
  {
    uint64_t v31 = v30;
    uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v34 = v33;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v35._countAndFlagsBits = 0;
    v35._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v35);
    sub_100049788(v112, v113);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v110[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v110, &qword_10022F490);
    v37._countAndFlagsBits = 5972026;
    v37._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v37);
    uint64_t MetatypeMetadata = &type metadata for String;
    v110[0] = v32;
    v110[1] = v34;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v110, &qword_10022F490);
    v38._countAndFlagsBits = 93;
    v38._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v38);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v39._countAndFlagsBits = 0;
    v39._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v39);
    sub_100049788(v112, v113);
    uint64_t v40 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v110[0] = v40;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v110, &qword_10022F490);
    v41._countAndFlagsBits = 58;
    v41._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v41);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v112);
  LogMessage.init(stringLiteral:)();
  swift_getErrorValue();
  uint64_t v42 = v108;
  uint64_t v43 = v109;
  uint64_t v113 = v109;
  Swift::String v44 = sub_10003BAA4((uint64_t *)v112);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16))(v44, v42, v43);
  static LogMessage.safe(_:)();
  sub_10002CC0C((uint64_t)v112, &qword_10022F490);
  uint64_t v45 = static os_log_type_t.error.getter();
  sub_10004841C(v45);
  swift_bridgeObjectRelease();
  return swift_errorRelease();
}

uint64_t sub_100144B10()
{
  uint64_t v0 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)v39 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v39 - v9;
  sub_10003CF18();
  URL.appendingPathComponent(_:isDirectory:)();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v2 + 8);
  v11(v5, v1);
  URL.appendingPathComponent(_:isDirectory:)();
  v11(v8, v1);
  uint64_t v12 = self;
  id v13 = [v12 defaultManager];
  URL.path.getter();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  LODWORD(v5) = [v13 fileExistsAtPath:v14];

  if (v5)
  {
    id v15 = [v12 defaultManager];
    URL._bridgeToObjectiveC()(v16);
    uint64_t v18 = v17;
    v45[0] = 0;
    unsigned int v19 = [v15 removeItemAtURL:v17 error:v45];

    if (v19)
    {
      id v20 = v45[0];
    }
    else
    {
      id v21 = v45[0];
      uint64_t v22 = _convertNSErrorToError(_:)();

      swift_willThrow();
      if (qword_10022C4A8 != -1) {
        swift_once();
      }
      v39[2] = qword_100244110;
      sub_100043478(&qword_10022E560);
      v39[1] = *(void *)(*(void *)(type metadata accessor for LogMessage() - 8) + 72);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
      uint64_t v46 = sub_100043478(&qword_100231ED8);
      v45[0] = v40;
      id v23 = (id)AMSLogKey();
      if (v23)
      {
        unint64_t v24 = v23;
        v39[0] = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v40 = (void *)v22;
        uint64_t v26 = v25;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v27._countAndFlagsBits = 0;
        v27._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v27);
        sub_100049788(v45, v46);
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v43[0] = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)v43, &qword_10022F490);
        v29._countAndFlagsBits = 5972026;
        v29._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v29);
        uint64_t MetatypeMetadata = &type metadata for String;
        v43[0] = v39[0];
        v43[1] = v26;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)v43, &qword_10022F490);
        v30._countAndFlagsBits = 93;
        v30._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v30);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v31._countAndFlagsBits = 0;
        v31._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v31);
        sub_100049788(v45, v46);
        uint64_t v32 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v43[0] = v32;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)v43, &qword_10022F490);
        v33._countAndFlagsBits = 58;
        v33._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v33);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)v45);
      LogMessage.init(stringLiteral:)();
      swift_getErrorValue();
      uint64_t v34 = v41;
      uint64_t v35 = v42;
      uint64_t v46 = v42;
      Swift::String v36 = sub_10003BAA4((uint64_t *)v45);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v36, v34, v35);
      static LogMessage.safe(_:)();
      sub_10002CC0C((uint64_t)v45, &qword_10022F490);
      uint64_t v37 = static os_log_type_t.error.getter();
      sub_10004841C(v37);
      swift_bridgeObjectRelease();
      swift_errorRelease();
    }
  }
  return ((uint64_t (*)(char *, uint64_t))v11)(v10, v1);
}

uint64_t sub_1001451A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v2 - 8);
  char v114 = (char *)v112 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100043478(&qword_10022FB40);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v112 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)v112 - v9;
  __chkstk_darwin(v8);
  uint64_t v121 = (uint64_t)v112 - v11;
  uint64_t v122 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v122 - 8);
  uint64_t v13 = __chkstk_darwin(v122);
  unint64_t v120 = (char *)v112 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)v112 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  id v20 = (char *)v112 - v19;
  __chkstk_darwin(v18);
  uint64_t v123 = (char *)v112 - v21;
  sub_1001A9D4C();
  uint64_t v115 = v22;
  sub_10003CF18();
  uint64_t v116 = a1;
  URL.appendingPathComponent(_:isDirectory:)();
  swift_bridgeObjectRelease();
  id v23 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v24 = v122;
  uint64_t v118 = v12 + 8;
  Swift::Int v117 = v23;
  v23(v20, v122);
  sub_10003C948();
  if (sub_10004FD40((uint64_t)v10, 1, v24) == 1)
  {
    sub_10002CC0C((uint64_t)v10, &qword_10022FB40);
    uint64_t v25 = 1;
    uint64_t v26 = v121;
  }
  else
  {
    URL.appendingPathComponent(_:isDirectory:)();
    swift_bridgeObjectRelease();
    Swift::String v27 = v117;
    v117(v10, v24);
    uint64_t v26 = v121;
    URL.appendingPathComponent(_:isDirectory:)();
    v27(v17, v24);
    uint64_t v25 = 0;
  }
  sub_100021AC0(v26, v25, 1, v24);
  sub_100006084(v26, (uint64_t)v7);
  int v28 = sub_10004FD40((uint64_t)v7, 1, v24);
  Swift::String v29 = v120;
  if (v28 == 1)
  {
    swift_bridgeObjectRelease();
    sub_10002CC0C((uint64_t)v7, &qword_10022FB40);
    if (qword_10022C4A8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v131 = (void *)sub_100043478(&qword_100231ED8);
    v130[0] = v119;
    id v30 = (id)AMSLogKey();
    if (v30)
    {
      Swift::String v31 = v30;
      uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v34 = v33;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v35._countAndFlagsBits = 0;
      v35._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v35);
      sub_100049788(v130, (uint64_t)v131);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v127 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v127, &qword_10022F490);
      v37._countAndFlagsBits = 5972026;
      v37._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v37);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v127 = v32;
      uint64_t v128 = v34;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v127, &qword_10022F490);
      v38._countAndFlagsBits = 93;
      v38._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v38);
      LogMessage.init(stringInterpolation:)();
      uint64_t v26 = v121;
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v59._countAndFlagsBits = 0;
      v59._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v59);
      sub_100049788(v130, (uint64_t)v131);
      uint64_t v60 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v127 = v60;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v127, &qword_10022F490);
      v61._countAndFlagsBits = 58;
      v61._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v61);
      LogMessage.init(stringInterpolation:)();
    }
    uint64_t v62 = v122;
    sub_10004377C((uint64_t)v130);
    LogMessage.init(stringLiteral:)();
    uint64_t v63 = static os_log_type_t.fault.getter();
    sub_10004841C(v63);
    swift_bridgeObjectRelease();
    sub_10002CC0C(v26, &qword_10022FB40);
    return ((uint64_t (*)(char *, uint64_t))v117)(v123, v62);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v120, v7, v24);
    Swift::String v39 = self;
    id v40 = [v39 defaultManager];
    char v126 = 1;
    URL.path.getter();
    NSString v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    unsigned int v42 = [v40 fileExistsAtPath:v41 isDirectory:&v126];

    if (v42)
    {
      if (qword_10022C4A8 != -1) {
        swift_once();
      }
      sub_100043478(&qword_10022E560);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      uint64_t v131 = (void *)sub_100043478(&qword_100231ED8);
      v130[0] = v119;
      id v43 = (id)AMSLogKey();
      if (v43)
      {
        Swift::String v44 = v43;
        id v45 = v40;
        uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v48 = v47;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v49._countAndFlagsBits = 0;
        v49._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v49);
        sub_100049788(v130, (uint64_t)v131);
        uint64_t v50 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v127 = v50;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v127, &qword_10022F490);
        v51._countAndFlagsBits = 5972026;
        v51._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v51);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v127 = v46;
        uint64_t v128 = v48;
        id v40 = v45;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v127, &qword_10022F490);
        v52._countAndFlagsBits = 93;
        v52._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v52);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v76._countAndFlagsBits = 0;
        v76._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v76);
        sub_100049788(v130, (uint64_t)v131);
        uint64_t v77 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v127 = v77;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v127, &qword_10022F490);
        v78._countAndFlagsBits = 58;
        v78._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v78);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)v130);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v79._countAndFlagsBits = 0xD000000000000020;
      v79._object = (void *)0x80000001001D4FB0;
      LogMessage.StringInterpolation.appendLiteral(_:)(v79);
      uint64_t v131 = &unk_10020E0E8;
      char v80 = v116;
      LOBYTE(v130[0]) = v116;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v130, &qword_10022F490);
      v81._countAndFlagsBits = 41;
      v81._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v81);
      LogMessage.init(stringInterpolation:)();
      uint64_t v82 = static os_log_type_t.debug.getter();
      sub_10004841C(v82);
      uint64_t v83 = swift_bridgeObjectRelease();
      __chkstk_darwin(v83);
      unsigned __int8 v57 = v123;
      v112[-4] = v123;
      v112[-3] = v40;
      v112[-2] = v119;
      LOBYTE(v112[-1]) = v80;
      sub_100143A28((void (*)(void *))sub_100148B78, (uint64_t)&v112[-6], v115);
      swift_bridgeObjectRelease();
    }
    else
    {
      id v53 = [v39 defaultManager];
      URL.path.getter();
      NSString v54 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v130[0] = 0;
      unsigned int v55 = [v53 createDirectoryAtPath:v54 withIntermediateDirectories:1 attributes:0 error:v130];

      id v113 = v40;
      if (v55)
      {
        id v56 = v130[0];
        unsigned __int8 v57 = v123;
        char v58 = v116;
      }
      else
      {
        id v65 = v130[0];
        uint64_t v66 = _convertNSErrorToError(_:)();

        v112[2] = v66;
        swift_willThrow();
        if (qword_10022C4A8 != -1) {
          swift_once();
        }
        v112[1] = qword_100244110;
        sub_100043478(&qword_10022E560);
        type metadata accessor for LogMessage();
        *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
        uint64_t v131 = (void *)sub_100043478(&qword_100231ED8);
        v130[0] = v119;
        id v67 = (id)AMSLogKey();
        if (v67)
        {
          id v68 = v67;
          uint64_t v69 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v71 = v70;

          swift_bridgeObjectRetain();
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
          v72._countAndFlagsBits = 0;
          v72._object = (void *)0xE000000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v72);
          sub_100049788(v130, (uint64_t)v131);
          uint64_t v73 = swift_getDynamicType();
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
          uint64_t v127 = v73;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_10002CC0C((uint64_t)&v127, &qword_10022F490);
          v74._countAndFlagsBits = 5972026;
          v74._object = (void *)0xE300000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v74);
          uint64_t MetatypeMetadata = &type metadata for String;
          uint64_t v127 = v69;
          uint64_t v128 = v71;
          Swift::String v29 = v120;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_10002CC0C((uint64_t)&v127, &qword_10022F490);
          v75._countAndFlagsBits = 93;
          v75._object = (void *)0xE100000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v75);
          LogMessage.init(stringInterpolation:)();
          swift_bridgeObjectRelease();
        }
        else
        {
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
          v84._countAndFlagsBits = 0;
          v84._object = (void *)0xE000000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v84);
          sub_100049788(v130, (uint64_t)v131);
          uint64_t v85 = swift_getDynamicType();
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
          uint64_t v127 = v85;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_10002CC0C((uint64_t)&v127, &qword_10022F490);
          v86._countAndFlagsBits = 58;
          v86._object = (void *)0xE100000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v86);
          LogMessage.init(stringInterpolation:)();
        }
        sub_10004377C((uint64_t)v130);
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v87._countAndFlagsBits = 0xD000000000000025;
        v87._object = (void *)0x80000001001D4F60;
        LogMessage.StringInterpolation.appendLiteral(_:)(v87);
        uint64_t v131 = &unk_10020E0E8;
        char v58 = v116;
        LOBYTE(v130[0]) = v116;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)v130, &qword_10022F490);
        v88._object = (void *)0xE900000000000020;
        v88._countAndFlagsBits = 0x3A726F727265202CLL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v88);
        swift_getErrorValue();
        uint64_t v89 = v124;
        id v90 = v125;
        uint64_t v131 = v125;
        uint64_t v91 = sub_10003BAA4((uint64_t *)v130);
        (*(void (**)(uint64_t *, uint64_t, void *))(*(v90 - 1) + 16))(v91, v89, v90);
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)v130, &qword_10022F490);
        v92._countAndFlagsBits = 41;
        v92._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v92);
        LogMessage.init(stringInterpolation:)();
        uint64_t v93 = static os_log_type_t.fault.getter();
        sub_10004841C(v93);
        swift_bridgeObjectRelease();
        id v56 = (id)swift_errorRelease();
        unsigned __int8 v57 = v123;
      }
      __chkstk_darwin(v56);
      id v94 = v119;
      v112[-4] = v57;
      v112[-3] = v94;
      v112[-2] = v29;
      LOBYTE(v112[-1]) = v58;
      sub_100143A28((void (*)(void *))sub_100148B2C, (uint64_t)&v112[-6], v115);
      if (qword_10022C4A8 != -1) {
        swift_once();
      }
      sub_100043478(&qword_10022E560);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      uint64_t v131 = (void *)sub_100043478(&qword_100231ED8);
      v130[0] = v94;
      id v95 = (id)AMSLogKey();
      if (v95)
      {
        uint64_t v96 = v95;
        uint64_t v97 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v99 = v98;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v100._countAndFlagsBits = 0;
        v100._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v100);
        sub_100049788(v130, (uint64_t)v131);
        uint64_t v101 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v127 = v101;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v127, &qword_10022F490);
        v102._countAndFlagsBits = 5972026;
        v102._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v102);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v127 = v97;
        uint64_t v128 = v99;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        id v94 = v119;
        sub_10002CC0C((uint64_t)&v127, &qword_10022F490);
        v103._countAndFlagsBits = 93;
        v103._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v103);
        LogMessage.init(stringInterpolation:)();
        unsigned __int8 v57 = v123;
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v104._countAndFlagsBits = 0;
        v104._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v104);
        sub_100049788(v130, (uint64_t)v131);
        uint64_t v105 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v127 = v105;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v127, &qword_10022F490);
        v106._countAndFlagsBits = 58;
        v106._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v106);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)v130);
      LogMessage.init(stringLiteral:)();
      uint64_t v107 = static os_log_type_t.default.getter();
      sub_10004841C(v107);
      uint64_t v108 = swift_bridgeObjectRelease();
      __chkstk_darwin(v108);
      uint64_t v109 = v113;
      v112[-4] = v57;
      v112[-3] = v109;
      v112[-2] = v94;
      LOBYTE(v112[-1]) = v116;
      sub_100143A28((void (*)(void *))sub_100148B50, (uint64_t)&v112[-6], v115);
      swift_bridgeObjectRelease();
    }
    sub_10002CC0C(v121, &qword_10022FB40);
    uint64_t v110 = v122;
    uint64_t v111 = (uint64_t (*)(char *, uint64_t))v117;
    v117(v120, v122);
    return v111(v57, v110);
  }
}

uint64_t sub_10014651C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ScheduleInfo(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AppDatabase();
  sub_1000124C0(a1);
  id v56 = v9;
  uint64_t v54 = v4;
  uint64_t v58 = v1;
  uint64_t v10 = sub_10007E6A0();
  swift_release();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = _swiftEmptyArrayStorage;
  uint64_t v12 = v11 + 16;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = _swiftEmptyArrayStorage;
  uint64_t v14 = swift_allocObject();
  int v55 = a1;
  *(unsigned char *)(v14 + 16) = a1;
  uint64_t v15 = v13;
  uint64_t v16 = v11;
  *(void *)(v14 + 24) = v15;
  *(void *)(v14 + 32) = v11;
  sub_100085280();
  unsigned __int8 v57 = v10;
  swift_retain();
  swift_retain();
  swift_release();
  swift_beginAccess();
  if (!*(void *)(*(void *)(v15 + 16) + 16))
  {
    uint64_t v53 = v11;
    uint64_t v54 = v15;
    if (qword_10022C4A8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v34 = v58;
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v62[0] = v34;
    id v35 = (id)AMSLogKey();
    if (v35)
    {
      Swift::String v36 = v35;
      uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v39 = v38;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v40._countAndFlagsBits = 0;
      v40._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v40);
      sub_100049788(v62, (uint64_t)MetatypeMetadata);
      uint64_t DynamicType = swift_getDynamicType();
      Swift::String v61 = (void *)swift_getMetatypeMetadata();
      uint64_t v59 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v59, &qword_10022F490);
      v42._countAndFlagsBits = 5972026;
      v42._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v42);
      Swift::String v61 = &type metadata for String;
      uint64_t v59 = v37;
      uint64_t v60 = v39;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v59, &qword_10022F490);
      v43._countAndFlagsBits = 93;
      v43._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v43);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v48._countAndFlagsBits = 0;
      v48._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v48);
      sub_100049788(v62, (uint64_t)MetatypeMetadata);
      uint64_t v49 = swift_getDynamicType();
      Swift::String v61 = (void *)swift_getMetatypeMetadata();
      uint64_t v59 = v49;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v59, &qword_10022F490);
      v50._countAndFlagsBits = 58;
      v50._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v50);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v62);
    LogMessage.init(stringLiteral:)();
    uint64_t v51 = static os_log_type_t.debug.getter();
    sub_10004841C(v51);
    swift_release();
    swift_release();
    goto LABEL_19;
  }
  uint64_t v17 = swift_bridgeObjectRetain();
  sub_100087700(v17);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v44 = *(void *)v12;
  uint64_t v45 = *(void *)(*(void *)v12 + 16);
  uint64_t v34 = v58;
  if (v45)
  {
    uint64_t v53 = v16;
    uint64_t v46 = v44 + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80));
    uint64_t v47 = *(void *)(v54 + 72);
    swift_bridgeObjectRetain();
    swift_retain();
    do
    {
      sub_100087CD0(v46, (uint64_t)v6);
      sub_100087974((uint64_t)v6);
      sub_1000800C0((uint64_t)v6);
      v46 += v47;
      --v45;
    }
    while (v45);
    swift_release();
    swift_release();
    swift_release();
LABEL_19:
    swift_bridgeObjectRelease();
    char v52 = v55;
    goto LABEL_3;
  }
  swift_release();
  swift_release();
  char v52 = v55;
LABEL_3:
  if (qword_10022C4A8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
  v62[0] = v34;
  id v18 = (id)AMSLogKey();
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v22 = v21;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v23._countAndFlagsBits = 0;
    v23._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    sub_100049788(v62, (uint64_t)MetatypeMetadata);
    uint64_t v24 = swift_getDynamicType();
    Swift::String v61 = (void *)swift_getMetatypeMetadata();
    uint64_t v59 = v24;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v59, &qword_10022F490);
    v25._countAndFlagsBits = 5972026;
    v25._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    Swift::String v61 = &type metadata for String;
    uint64_t v59 = v20;
    uint64_t v60 = v22;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v59, &qword_10022F490);
    v26._countAndFlagsBits = 93;
    v26._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v27._countAndFlagsBits = 0;
    v27._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    sub_100049788(v62, (uint64_t)MetatypeMetadata);
    uint64_t v28 = swift_getDynamicType();
    Swift::String v61 = (void *)swift_getMetatypeMetadata();
    uint64_t v59 = v28;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v59, &qword_10022F490);
    v29._countAndFlagsBits = 58;
    v29._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v29);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v62);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v30._object = (void *)0x80000001001D4EE0;
  v30._countAndFlagsBits = 0xD000000000000017;
  LogMessage.StringInterpolation.appendLiteral(_:)(v30);
  uint64_t MetatypeMetadata = &unk_10020E0E8;
  LOBYTE(v62[0]) = v52;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CC0C((uint64_t)v62, &qword_10022F490);
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v31);
  LogMessage.init(stringInterpolation:)();
  uint64_t v32 = static os_log_type_t.info.getter();
  sub_10004841C(v32);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001473C0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, int a5)
{
  int v68 = a5;
  uint64_t v69 = a4;
  uint64_t v70 = a3;
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  uint64_t v71 = &v67[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v73 = *(void *)(v7 - 8);
  Swift::String v74 = (void *)v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = &v67[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v12 = &v67[-v11];
  URL.appendingPathComponent(_:)();
  uint64_t v13 = self;
  id v14 = [v13 defaultManager];
  URL.path.getter();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v16 = [v14 fileExistsAtPath:v15];

  if (v16)
  {
    URL.appendingPathComponent(_:)();
    id v17 = [v13 defaultManager];
    URL.path.getter();
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    URL.path.getter();
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v80[0] = 0;
    unsigned int v20 = [v17 moveItemAtPath:v18 toPath:v19 error:v80];

    if (v20)
    {
      uint64_t v21 = *(void (**)(unsigned char *, void *))(v73 + 8);
      id v22 = v80[0];
      Swift::String v23 = v74;
      v21(v10, v74);
      return ((uint64_t (*)(unsigned char *, void *))v21)(v12, v23);
    }
    else
    {
      Swift::String v72 = v10;
      id v34 = v80[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      if (qword_10022C4A8 != -1) {
        swift_once();
      }
      uint64_t v69 = qword_100244110;
      sub_100043478(&qword_10022E560);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      Swift::String v81 = (void *)sub_100043478(&qword_100231ED8);
      v80[0] = v70;
      id v35 = (id)AMSLogKey();
      if (v35)
      {
        Swift::String v36 = v35;
        uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v38 = v12;
        uint64_t v40 = v39;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v41._countAndFlagsBits = 0;
        v41._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v41);
        sub_100049788(v80, (uint64_t)v81);
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v77 = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v77, &qword_10022F490);
        v43._countAndFlagsBits = 5972026;
        v43._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v43);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v77 = v37;
        uint64_t v78 = v40;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v77, &qword_10022F490);
        v44._countAndFlagsBits = 93;
        v44._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v44);
        LogMessage.init(stringInterpolation:)();
        uint64_t v12 = v38;
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v55._countAndFlagsBits = 0;
        v55._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v55);
        sub_100049788(v80, (uint64_t)v81);
        uint64_t v56 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v77 = v56;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v77, &qword_10022F490);
        v57._countAndFlagsBits = 58;
        v57._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v57);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)v80);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v58._object = (void *)0x80000001001D5090;
      v58._countAndFlagsBits = 0xD000000000000022;
      LogMessage.StringInterpolation.appendLiteral(_:)(v58);
      Swift::String v81 = &unk_10020E0E8;
      LOBYTE(v80[0]) = v68;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v80, &qword_10022F490);
      v59._countAndFlagsBits = 0x3A726F727265202CLL;
      v59._object = (void *)0xE900000000000020;
      LogMessage.StringInterpolation.appendLiteral(_:)(v59);
      swift_getErrorValue();
      uint64_t v60 = v75;
      Swift::String v61 = v76;
      Swift::String v81 = v76;
      uint64_t v62 = sub_10003BAA4((uint64_t *)v80);
      (*(void (**)(uint64_t *, uint64_t, void *))(*(v61 - 1) + 16))(v62, v60, v61);
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v80, &qword_10022F490);
      v63._countAndFlagsBits = 41;
      v63._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v63);
      LogMessage.init(stringInterpolation:)();
      uint64_t v64 = static os_log_type_t.fault.getter();
      sub_10004841C(v64);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      id v65 = *(void (**)(unsigned char *, void *))(v73 + 8);
      uint64_t v66 = v74;
      v65(v72, v74);
      return ((uint64_t (*)(unsigned char *, void *))v65)(v12, v66);
    }
  }
  else
  {
    uint64_t v69 = (uint64_t)v12;
    if (qword_10022C4A8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    Swift::String v81 = (void *)sub_100043478(&qword_100231ED8);
    v80[0] = v70;
    id v25 = (id)AMSLogKey();
    if (v25)
    {
      Swift::String v26 = v25;
      uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v29 = v28;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v30._countAndFlagsBits = 0;
      v30._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v30);
      sub_100049788(v80, (uint64_t)v81);
      uint64_t v31 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v77 = v31;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v77, &qword_10022F490);
      v32._countAndFlagsBits = 5972026;
      v32._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v77 = v27;
      uint64_t v78 = v29;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v77, &qword_10022F490);
      v33._countAndFlagsBits = 93;
      v33._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v33);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v45._countAndFlagsBits = 0;
      v45._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v45);
      sub_100049788(v80, (uint64_t)v81);
      uint64_t v46 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v77 = v46;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v77, &qword_10022F490);
      v47._countAndFlagsBits = 58;
      v47._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v47);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v80);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v48._countAndFlagsBits = 0xD000000000000034;
    v48._object = (void *)0x80000001001D5050;
    LogMessage.StringInterpolation.appendLiteral(_:)(v48);
    uint64_t v49 = v74;
    Swift::String v81 = v74;
    Swift::String v50 = sub_10003BAA4((uint64_t *)v80);
    uint64_t v51 = v73;
    uint64_t v52 = v69;
    (*(void (**)(uint64_t *, uint64_t, void *))(v73 + 16))(v50, v69, v49);
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v80, &qword_10022F490);
    v53._countAndFlagsBits = 41;
    v53._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v53);
    LogMessage.init(stringInterpolation:)();
    uint64_t v54 = static os_log_type_t.debug.getter();
    sub_10004841C(v54);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, void *))(v51 + 8))(v52, v49);
  }
}

uint64_t sub_100147D4C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for ScheduleInfo(0);
  uint64_t v38 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v39 = (uint64_t)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v34 = (uint64_t *)(a3 + 16);
  uint64_t v36 = a1;
  uint64_t v37 = (uint64_t *)(a4 + 16);
  uint64_t v11 = a1 + *(int *)(v9 + 20);
  uint64_t v35 = type metadata accessor for ScheduleInfo.Metadata(0);
  uint64_t v12 = (uint64_t *)(v11 + *(int *)(v35 + 44));
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];
  uint64_t v40 = *v12;
  uint64_t v41 = v14;
  unint64_t v44 = 0xD000000000000019;
  unint64_t v45 = 0x80000001001D4F20;
  uint64_t v42 = 0;
  unint64_t v43 = 0xE000000000000000;
  sub_10003C8FC();
  swift_bridgeObjectRetain();
  uint64_t v40 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  uint64_t v41 = v15;
  unint64_t v16 = 0xE900000000000073;
  uint64_t v17 = 0x636974796C616E61;
  switch(a2)
  {
    case 1:
      unint64_t v16 = 0xE800000000000000;
      uint64_t v17 = 0x6C616E7265746E69;
      break;
    case 2:
      unint64_t v16 = 0xE800000000000000;
      uint64_t v17 = 0x7379656E72756F6ALL;
      break;
    case 3:
      unint64_t v16 = 0xEF736E6F69746164;
      uint64_t v17 = 0x6E656D6D6F636572;
      break;
    default:
      break;
  }
  unint64_t v44 = v17;
  unint64_t v45 = v16;
  swift_bridgeObjectRetain();
  v18._countAndFlagsBits = 95;
  v18._object = (void *)0xE100000000000000;
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  uint64_t v42 = 0;
  unint64_t v43 = 0xE000000000000000;
  uint64_t v19 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v13 == v19 && v14 == v21)
  {
    swift_bridgeObjectRelease_n();
  }
  else if (_stringCompareWithSmolCheck(_:_:expecting:)())
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1001ADE08();
    Swift::String v23 = v34;
    swift_beginAccess();
    sub_1000BA3DC();
    uint64_t v24 = *(void *)(*v23 + 16);
    sub_1000BA510(v24);
    uint64_t v25 = *v23;
    *(void *)(v25 + 16) = v24 + 1;
    uint64_t v26 = v25 + 16 * v24;
    *(void *)(v26 + 32) = v13;
    *(void *)(v26 + 40) = v14;
    swift_endAccess();
    uint64_t v27 = v39;
    sub_100087CD0(v36, v39);
    uint64_t v28 = (uint64_t *)(v27 + *(int *)(v8 + 20) + (uint64_t)*(int *)(v35 + 44));
    swift_bridgeObjectRelease();
    *uint64_t v28 = v19;
    v28[1] = v21;
    uint64_t v29 = v37;
    swift_beginAccess();
    sub_1000BA40C();
    uint64_t v30 = *(void *)(*v29 + 16);
    sub_1000BA540(v30);
    uint64_t v31 = *v29;
    *(void *)(v31 + 16) = v30 + 1;
    sub_100087CD0(v27, v31+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v30);
    swift_endAccess();
    sub_1000800C0(v27);
  }
  return 1;
}

uint64_t type metadata accessor for Migrator()
{
  return self;
}

uint64_t sub_100148158()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100148190()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001481D0(uint64_t a1)
{
  return sub_100147D4C(a1, *(unsigned char *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32)) & 1;
}

uint64_t sub_1001481F4(uint64_t a1, uint64_t a2, void *a3, void *a4, int a5)
{
  int v62 = a5;
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = type metadata accessor for URL.DirectoryHint();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v64 = *(void *)(v13 - 8);
  uint64_t v65 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v16 = *(void **)(a1 + 8);
  v71[0] = *(id *)a1;
  v71[1] = v16;
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for URL.DirectoryHint.inferFromPath(_:), v9);
  sub_10003C8FC();
  URL.appending<A>(path:directoryHint:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  URL.path.getter();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  LODWORD(v12) = [a3 fileExistsAtPath:v17];

  if (v12)
  {
    URL._bridgeToObjectiveC()(v18);
    uint64_t v20 = v19;
    v71[0] = 0;
    unsigned int v21 = [a3 removeItemAtURL:v19 error:v71];

    if (v21)
    {
      uint64_t v22 = qword_10022C4A8;
      id v23 = v71[0];
      if (v22 != -1) {
        swift_once();
      }
      sub_100043478(&qword_10022E560);
      uint64_t v61 = *(void *)(*(void *)(type metadata accessor for LogMessage() - 8) + 72);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      Swift::String v72 = (void *)sub_100043478(&qword_100231ED8);
      v71[0] = a4;
      id v24 = (id)AMSLogKey();
      if (v24)
      {
        uint64_t v25 = v24;
        uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v28 = v27;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v29._countAndFlagsBits = 0;
        v29._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v29);
        sub_100049788(v71, (uint64_t)v72);
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v68 = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v68, &qword_10022F490);
        v31._countAndFlagsBits = 5972026;
        v31._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v31);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v68 = v26;
        uint64_t v69 = v28;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v68, &qword_10022F490);
        v32._countAndFlagsBits = 93;
        v32._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v32);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v44._countAndFlagsBits = 0;
        v44._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v44);
        sub_100049788(v71, (uint64_t)v72);
        uint64_t v45 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v68 = v45;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v68, &qword_10022F490);
        v46._countAndFlagsBits = 58;
        v46._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v46);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)v71);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v47._object = (void *)0x80000001001D5020;
      v47._countAndFlagsBits = 0xD00000000000002DLL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v47);
      Swift::String v72 = &unk_10020E0E8;
      LOBYTE(v71[0]) = v62;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v71, &qword_10022F490);
      v48._countAndFlagsBits = 41;
      v48._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v48);
      LogMessage.init(stringInterpolation:)();
      uint64_t v49 = static os_log_type_t.debug.getter();
      sub_10004841C(v49);
      swift_bridgeObjectRelease();
    }
    else
    {
      id v33 = v71[0];
      uint64_t v34 = _convertNSErrorToError(_:)();

      uint64_t v63 = v34;
      swift_willThrow();
      if (qword_10022C4A8 != -1) {
        swift_once();
      }
      uint64_t v61 = qword_100244110;
      sub_100043478(&qword_10022E560);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      Swift::String v72 = (void *)sub_100043478(&qword_100231ED8);
      v71[0] = a4;
      id v35 = (id)AMSLogKey();
      if (v35)
      {
        uint64_t v36 = v35;
        uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v39 = v38;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v40._countAndFlagsBits = 0;
        v40._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v40);
        sub_100049788(v71, (uint64_t)v72);
        uint64_t v41 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v68 = v41;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v68, &qword_10022F490);
        v42._countAndFlagsBits = 5972026;
        v42._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v42);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v68 = v37;
        uint64_t v69 = v39;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v68, &qword_10022F490);
        v43._countAndFlagsBits = 93;
        v43._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v43);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v50._countAndFlagsBits = 0;
        v50._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v50);
        sub_100049788(v71, (uint64_t)v72);
        uint64_t v51 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v68 = v51;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v68, &qword_10022F490);
        v52._countAndFlagsBits = 58;
        v52._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v52);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)v71);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v53._countAndFlagsBits = 0xD000000000000035;
      v53._object = (void *)0x80000001001D4FE0;
      LogMessage.StringInterpolation.appendLiteral(_:)(v53);
      Swift::String v72 = &unk_10020E0E8;
      LOBYTE(v71[0]) = v62;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v71, &qword_10022F490);
      v54._countAndFlagsBits = 0x3A726F727265202CLL;
      v54._object = (void *)0xE900000000000020;
      LogMessage.StringInterpolation.appendLiteral(_:)(v54);
      swift_getErrorValue();
      uint64_t v55 = v66;
      uint64_t v56 = v67;
      Swift::String v72 = v67;
      Swift::String v57 = sub_10003BAA4((uint64_t *)v71);
      (*(void (**)(uint64_t *, uint64_t, void *))(*(v56 - 1) + 16))(v57, v55, v56);
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v71, &qword_10022F490);
      v58._countAndFlagsBits = 41;
      v58._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v58);
      LogMessage.init(stringInterpolation:)();
      uint64_t v59 = static os_log_type_t.debug.getter();
      sub_10004841C(v59);
      swift_bridgeObjectRelease();
      swift_errorRelease();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v15, v65);
}

uint64_t sub_100148B2C(uint64_t a1)
{
  return sub_1001473C0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
}

uint64_t sub_100148B50(uint64_t a1)
{
  return sub_1001481F4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
}

uint64_t sub_100148B78(uint64_t a1)
{
  return sub_100148B50(a1);
}

void sub_100148B90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    Swift::Int v8 = v6 & ~v7;
    sub_100043FE4();
    if (v9)
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      if ((*v11 != a1 || v11[1] != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        uint64_t v13 = ~v7;
        uint64_t v14 = (v8 + 1) & v13;
        sub_100043FE4();
        if (v15)
        {
          do
          {
            unint64_t v16 = (void *)(v10 + 16 * v14);
            if (*v16 == a1 && v16[1] == a2) {
              break;
            }
            if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
              break;
            }
            uint64_t v14 = (v14 + 1) & v13;
            sub_100043FE4();
          }
          while ((v18 & 1) != 0);
        }
      }
    }
  }
}

id sub_100148CA4()
{
  return sub_100021294(&OBJC_IVAR____TtC14amsengagementd15NetworkObserver____lazy_storage___session, 604800.0);
}

id sub_100148CB8()
{
  return sub_100021294(&OBJC_IVAR____TtC14amsengagementd15NetworkObserver____lazy_storage___sessionOnTimeout, 300.0);
}

id sub_100148CCC()
{
  return sub_100148CE4(&OBJC_IVAR____TtC14amsengagementd15NetworkObserver____lazy_storage___sessionPluggedIn, 1, 604800.0);
}

id sub_100148CE4(uint64_t *a1, char a2, double a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void **)(v3 + *a1);
  if (v5)
  {
    id v6 = *(id *)(v3 + *a1);
  }
  else
  {
    id v7 = sub_100148D44(a2 & 1, a3);
    Swift::Int v8 = *(void **)(v3 + v4);
    *(void *)(v3 + v4) = v7;
    id v6 = v7;

    uint64_t v5 = 0;
  }
  id v9 = v5;
  return v6;
}

id sub_100148D44(char a1, double a2)
{
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v6 = sub_1000208F0(v5);
  __chkstk_darwin(v6);
  sub_100022558();
  unint64_t v32 = 0xD000000000000018;
  unint64_t v33 = 0x80000001001CA820;
  if (a1)
  {
    v7._countAndFlagsBits = 0x64656767756C702ELL;
    v7._object = (void *)0xEA00000000006E49;
    String.append(_:)(v7);
  }
  if (a2 < 604800.0)
  {
    v8._object = (void *)0xEA00000000007475;
    v8._countAndFlagsBits = 0x6F656D69546E6F2ELL;
    String.append(_:)(v8);
  }
  if (qword_10022C480 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v9 = type metadata accessor for LogMessage();
  sub_100044798(v9);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  Swift::String v31 = (void *)type metadata accessor for NetworkObserver();
  v30[0] = v2;
  id v10 = v2;
  id v11 = (id)AMSLogKey();
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;

    swift_bridgeObjectRetain();
    sub_100020F60();
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    sub_100020F04(v30);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_10004A5EC(MetatypeMetadata);
    sub_10002CC0C((uint64_t)v29, &qword_10022F490);
    sub_100020E44();
    uint64_t v29[3] = &type metadata for String;
    v29[0] = v13;
    v29[1] = v15;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v29, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    v18._countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    sub_100020F04(v30);
    uint64_t v19 = swift_getMetatypeMetadata();
    sub_10004A5EC(v19);
    sub_10002CC0C((uint64_t)v29, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v30);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  sub_10002064C();
  LogMessage.StringInterpolation.appendLiteral(_:)(v20);
  Swift::String v31 = &type metadata for String;
  v30[0] = v32;
  v30[1] = v33;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CC0C((uint64_t)v30, &qword_10022F490);
  sub_100020E60();
  LogMessage.init(stringInterpolation:)();
  uint64_t v21 = static os_log_type_t.default.getter();
  sub_10004841C(v21);
  swift_bridgeObjectRelease();
  uint64_t v22 = self;
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v24 = [v22 backgroundSessionConfigurationWithIdentifier:v23];

  id v26 = sub_10002D484(v25, "setSessionSendsLaunchEvents:");
  sub_10002D484((uint64_t)v26, "setDiscretionary:");
  sub_10002D484((uint64_t)[v24 setHTTPShouldSetCookies:0], "setHTTPShouldUsePipelining:");
  sub_10002D484((uint64_t)[v24 setHTTPCookieAcceptPolicy:1], "set_allowsRetryForBackgroundDataTasks:");
  objc_msgSend(v24, "set_requiresPowerPluggedIn:", a1 & 1);
  sub_10002064C();
  sub_100006B54(0xD000000000000012, v27, v24);
  [v24 setURLCache:0];
  [v24 setRequestCachePolicy:1];
  [v24 setTimeoutIntervalForResource:a2];
  sub_10004D510(0, (unint64_t *)&unk_100232030);
  swift_unknownObjectRetain();
  return sub_1001491DC(v24, (uint64_t)v10, 0);
}

id sub_1001491DC(void *a1, uint64_t a2, void *a3)
{
  id v5 = [(id)swift_getObjCClassFromMetadata() sessionWithConfiguration:a1 delegate:a2 delegateQueue:a3];

  swift_unknownObjectRelease();
  return v5;
}

id sub_10014924C()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for NetworkObserver()) init];
  qword_100244168 = (uint64_t)result;
  return result;
}

id sub_10014927C()
{
  *(void *)&v0[OBJC_IVAR____TtC14amsengagementd15NetworkObserver____lazy_storage___session] = 0;
  *(void *)&v0[OBJC_IVAR____TtC14amsengagementd15NetworkObserver____lazy_storage___sessionOnTimeout] = 0;
  *(void *)&v0[OBJC_IVAR____TtC14amsengagementd15NetworkObserver____lazy_storage___sessionPluggedIn] = 0;
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for NetworkObserver();
  id v1 = objc_msgSendSuper2(&v3, "init");

  return v1;
}

void sub_100149328()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v3 = sub_1000208F0(v2);
  __chkstk_darwin(v3);
  sub_100011EC0();
  __chkstk_darwin(v4);
  if (qword_10022C5C8 != -1) {
    goto LABEL_77;
  }
  while (1)
  {
    uint64_t v5 = sub_1000482CC();
    sub_10002A570(v5, v6);
    id v7 = sub_100148CA4();
    unint64_t v88 = (unint64_t)sub_10014B828(v7);

    id v8 = sub_100148CB8();
    unint64_t v91 = (unint64_t)sub_10014B828(v8);

    id v9 = sub_100148CCC();
    unint64_t v90 = (unint64_t)sub_10014B828(v9);

    if (qword_10022C480 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v10 = type metadata accessor for LogMessage();
    sub_100044798(v10);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v99 = type metadata accessor for NetworkObserver();
    v98[0] = v1;
    (id)v1;
    id v11 = (id)AMSLogKey();
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v15 = v14;

      swift_bridgeObjectRetain();
      sub_100020F60();
      v16._countAndFlagsBits = 0;
      v16._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v16);
      uint64_t v17 = sub_100020F04(v98);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v96[0] = v17;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v96, &qword_10022F490);
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      v96[0] = v13;
      v96[1] = v15;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v96, &qword_10022F490);
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      sub_100049788(v98, v99);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v96[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v96, &qword_10022F490);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v98);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_10002064C();
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    unint64_t v21 = v88;
    if (v88 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    sub_10004DE7C();
    sub_10002CC0C((uint64_t)v98, &qword_10022F490);
    v22._countAndFlagsBits = 0x6D69546E6F5B202CLL;
    v22._object = (void *)0xED00003A74756F65;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    if (v91 >> 62)
    {
      sub_100045334();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    sub_10004DE7C();
    sub_10002CC0C((uint64_t)v98, &qword_10022F490);
    sub_10002064C();
    v23._countAndFlagsBits = 0xD000000000000014;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    if (v90 >> 62)
    {
      sub_100045334();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    sub_10004DE7C();
    sub_10002CC0C((uint64_t)v98, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    uint64_t v24 = static os_log_type_t.default.getter();
    sub_10004841C(v24);
    swift_bridgeObjectRelease();
    sub_10004D510(0, &qword_10022E6D8);
    uint64_t v25 = (void *)Dictionary.init(dictionaryLiteral:)();
    if (v88 >> 62) {
      break;
    }
    uint64_t v1 = *(void *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v1) {
      goto LABEL_17;
    }
LABEL_31:
    swift_bridgeObjectRelease();
    if (v91 >> 62)
    {
      sub_100045334();
      uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      unint64_t v46 = v91;
      if (v47)
      {
LABEL_35:
        unint64_t v89 = v46 & 0xC000000000000001;
        uint64_t v1 = 4;
        while (1)
        {
          id v48 = v89 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v46 + 8 * v1);
          uint64_t v49 = v48;
          if (__OFADD__(v1 - 4, 1)) {
            break;
          }
          uint64_t v94 = v1 - 3;
          id v50 = sub_100148CB8();
          uint64_t v51 = sub_10014B934(v50, v49);
          uint64_t v53 = v52;

          id v54 = v49;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v98[0] = v25;
          sub_100042ADC(v51, v53);
          sub_100049AEC();
          if (v37) {
            goto LABEL_71;
          }
          unint64_t v58 = v56;
          char v59 = v57;
          sub_100043478(&qword_10022E6D0);
          if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, (Swift::Int)v25))
          {
            unint64_t v60 = sub_100042ADC(v51, v53);
            if ((v59 & 1) != (v61 & 1)) {
              goto LABEL_78;
            }
            unint64_t v58 = v60;
          }
          uint64_t v25 = (void *)v98[0];
          if (v59)
          {
            uint64_t v62 = *(void *)(v98[0] + 56);

            *(void *)(v62 + 8 * v58) = v54;
          }
          else
          {
            sub_100048EE8();
            *uint64_t v63 = v51;
            v63[1] = v53;
            *(void *)(v25[7] + 8 * v58) = v54;
            uint64_t v64 = v25[2];
            BOOL v37 = __OFADD__(v64, 1);
            uint64_t v65 = v64 + 1;
            if (v37) {
              goto LABEL_75;
            }
            uint64_t v25[2] = v65;
            swift_bridgeObjectRetain();
          }

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          ++v1;
          unint64_t v46 = v91;
          if (v94 == v47) {
            goto LABEL_49;
          }
        }
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
        goto LABEL_72;
      }
    }
    else
    {
      unint64_t v46 = v91;
      uint64_t v47 = *(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v47) {
        goto LABEL_35;
      }
    }
LABEL_49:
    swift_bridgeObjectRelease();
    if (v90 >> 62)
    {
      sub_100045334();
      uint64_t v67 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      unint64_t v66 = v90;
      if (!v67)
      {
LABEL_67:
        swift_bridgeObjectRelease();
        type metadata accessor for ContentManager();
        sub_10009401C();
        swift_bridgeObjectRelease();
        uint64_t v86 = sub_1000482CC();
        sub_10000A734(v86, v87);
        sub_100020FDC();
        return;
      }
    }
    else
    {
      unint64_t v66 = v90;
      uint64_t v67 = *(void *)((v90 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v67) {
        goto LABEL_67;
      }
    }
    unint64_t v92 = v66 & 0xC000000000000001;
    uint64_t v1 = 4;
    while (1)
    {
      id v68 = v92 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v66 + 8 * v1);
      uint64_t v69 = v68;
      if (__OFADD__(v1 - 4, 1)) {
        break;
      }
      uint64_t v95 = v1 - 3;
      id v70 = sub_100148CCC();
      uint64_t v71 = sub_10014B934(v70, v69);
      uint64_t v73 = v72;

      id v74 = v69;
      char v75 = swift_isUniquelyReferenced_nonNull_native();
      v98[0] = v25;
      sub_100042ADC(v71, v73);
      sub_100049AEC();
      if (v37) {
        goto LABEL_73;
      }
      unint64_t v78 = v76;
      char v79 = v77;
      sub_100043478(&qword_10022E6D0);
      if (_NativeDictionary.ensureUnique(isUnique:capacity:)(v75, (Swift::Int)v25))
      {
        unint64_t v80 = sub_100042ADC(v71, v73);
        if ((v79 & 1) != (v81 & 1)) {
          goto LABEL_78;
        }
        unint64_t v78 = v80;
      }
      uint64_t v25 = (void *)v98[0];
      if (v79)
      {
        uint64_t v82 = *(void *)(v98[0] + 56);

        *(void *)(v82 + 8 * v78) = v74;
      }
      else
      {
        *(void *)(v98[0] + 8 * (v78 >> 6) + 64) |= 1 << v78;
        uint64_t v83 = (uint64_t *)(v25[6] + 16 * v78);
        *uint64_t v83 = v71;
        v83[1] = v73;
        *(void *)(v25[7] + 8 * v78) = v74;
        uint64_t v84 = v25[2];
        BOOL v37 = __OFADD__(v84, 1);
        uint64_t v85 = v84 + 1;
        if (v37) {
          goto LABEL_76;
        }
        uint64_t v25[2] = v85;
        swift_bridgeObjectRetain();
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++v1;
      unint64_t v66 = v90;
      if (v95 == v67) {
        goto LABEL_67;
      }
    }
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v1 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v1) {
    goto LABEL_31;
  }
LABEL_17:
  uint64_t v26 = 4;
  while (1)
  {
    if ((v88 & 0xC000000000000001) != 0) {
      id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v27 = *(id *)(v21 + 8 * v26);
    }
    uint64_t v28 = v27;
    if (__OFADD__(v26 - 4, 1))
    {
      __break(1u);
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
    uint64_t v93 = v26 - 3;
    id v29 = sub_100148CA4();
    uint64_t v30 = sub_10014B934(v29, v28);
    uint64_t v32 = v31;

    id v33 = v28;
    char v34 = swift_isUniquelyReferenced_nonNull_native();
    v98[0] = v25;
    sub_100042ADC(v30, v32);
    sub_100049AEC();
    if (v37) {
      goto LABEL_69;
    }
    unint64_t v38 = v35;
    char v39 = v36;
    sub_100043478(&qword_10022E6D0);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(v34, (Swift::Int)v25)) {
      break;
    }
LABEL_26:
    uint64_t v25 = (void *)v98[0];
    if (v39)
    {
      uint64_t v42 = *(void *)(v98[0] + 56);

      *(void *)(v42 + 8 * v38) = v33;
    }
    else
    {
      sub_100048EE8();
      *Swift::String v43 = v30;
      v43[1] = v32;
      *(void *)(v25[7] + 8 * v38) = v33;
      uint64_t v44 = v25[2];
      BOOL v37 = __OFADD__(v44, 1);
      uint64_t v45 = v44 + 1;
      if (v37) {
        goto LABEL_74;
      }
      uint64_t v25[2] = v45;
      swift_bridgeObjectRetain();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ++v26;
    unint64_t v21 = v88;
    if (v93 == v1) {
      goto LABEL_31;
    }
  }
  unint64_t v40 = sub_100042ADC(v30, v32);
  if ((v39 & 1) == (v41 & 1))
  {
    unint64_t v38 = v40;
    goto LABEL_26;
  }
LABEL_78:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

void sub_100149D14()
{
  sub_1000209F4();
  int v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v7 = sub_1000208F0(v6);
  __chkstk_darwin(v7);
  sub_100020EAC();
  uint64_t v8 = type metadata accessor for String.Encoding();
  sub_100020DEC();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_100020EAC();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = type metadata accessor for URL();
  sub_100020DEC();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  sub_100011D4C();
  type metadata accessor for URLRequest();
  sub_100020DEC();
  uint64_t v42 = v20;
  uint64_t v43 = v19;
  __chkstk_darwin(v19);
  sub_100022558();
  uint64_t v41 = v15;
  unint64_t v40 = *(void (**)(void *, uint64_t, uint64_t))(v17 + 16);
  v40(v0, v5, v15);
  URLRequest.init(url:cachePolicy:timeoutInterval:)();
  unint64_t v21 = (int *)type metadata accessor for JSContent.Request(0);
  sub_1000D6658(*(unsigned char *)(v5 + v21[6]));
  URLRequest.httpMethod.setter();
  sub_100109CC8(*(void *)(v5 + v21[5]));
  if (!v22) {
    Dictionary.init(dictionaryLiteral:)();
  }
  URLRequest.allHTTPHeaderFields.setter();
  URLRequest.cachePolicy.setter();
  if (*(void *)(v5 + v21[7] + 8))
  {
    static String.Encoding.utf8.getter();
    String.data(using:allowLossyConversion:)();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v14, v8);
  }
  URLRequest.httpBody.setter();
  if ((v3 & 0x10000) != 0)
  {
    URLRequest.allowsCellularAccess.setter();
    URLRequest.allowsConstrainedNetworkAccess.setter();
    URLRequest.allowsExpensiveNetworkAccess.setter();
  }
  if (qword_10022C480 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v23 = type metadata accessor for LogMessage();
  sub_100044798(v23);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v46 = type metadata accessor for NetworkObserver();
  v45[0] = (uint64_t)v0;
  v0;
  id v24 = (id)AMSLogKey();
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v28 = v27;

    swift_bridgeObjectRetain();
    sub_100020F60();
    v29._countAndFlagsBits = 0;
    v29._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v29);
    sub_100020F04(v45);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_100043998(MetatypeMetadata);
    sub_10002CC0C((uint64_t)v44, &qword_10022F490);
    sub_100020E44();
    v44[3] = &type metadata for String;
    v44[0] = v26;
    v44[1] = v28;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v44, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    v31._countAndFlagsBits = 0;
    v31._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v31);
    sub_100020F04(v45);
    uint64_t v32 = swift_getMetatypeMetadata();
    sub_100043998(v32);
    sub_10002CC0C((uint64_t)v44, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v45);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  sub_10002064C();
  v33._countAndFlagsBits = 0xD000000000000013;
  LogMessage.StringInterpolation.appendLiteral(_:)(v33);
  uint64_t v46 = v41;
  char v34 = sub_10003BAA4(v45);
  v40(v34, v5, v41);
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CC0C((uint64_t)v45, &qword_10022F490);
  sub_100020E60();
  LogMessage.init(stringInterpolation:)();
  uint64_t v35 = static os_log_type_t.default.getter();
  sub_10004841C(v35);
  swift_bridgeObjectRelease();
  if ((v3 & 0x100) != 0)
  {
    id v36 = sub_100148CCC();
  }
  else if (v3)
  {
    id v36 = sub_100148CB8();
  }
  else
  {
    id v36 = sub_100148CA4();
  }
  BOOL v37 = v36;
  Class isa = URLRequest._bridgeToObjectiveC()().super.isa;
  id v39 = [v37 downloadTaskWithRequest:isa];

  [v39 resume];
  sub_10014B934(v37, v39);

  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v1, v43);
  sub_100020FDC();
}

uint64_t sub_10014A298(uint64_t a1)
{
  swift_getObjectType();
  uint64_t v2 = type metadata accessor for ContentInfo();
  uint64_t v3 = sub_1000208F0(v2);
  __chkstk_darwin(v3);
  sub_100011EC0();
  uint64_t v6 = v4 - v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v20 - v8;
  id v10 = sub_100148CA4();
  sub_10014B2E0();
  char v12 = v11;

  sub_100092730(a1, (uint64_t)v9);
  if (v12)
  {
    sub_10007CDA8((uint64_t)v9);
    sub_100092730(a1, v6);
  }
  else
  {
    id v13 = sub_100148CB8();
    sub_10014B2E0();
    char v15 = v14;

    sub_10007CDA8((uint64_t)v9);
    sub_100092730(a1, v6);
    if ((v15 & 1) == 0)
    {
      id v17 = sub_100148CCC();
      sub_10014B2E0();
      char v16 = v18;

      goto LABEL_6;
    }
  }
  char v16 = 1;
LABEL_6:
  sub_10007CDA8(v6);
  return v16 & 1;
}

void sub_10014A3F8(uint64_t a1, void *a2, void *a3)
{
  sub_10004D510(0, &qword_100232018);
  id v5 = sub_10014A5A8(a2, a3);
  sub_10004D510(0, (unint64_t *)&qword_100232020);
  id v6 = sub_100051DF8();
  [v5 setBag:v6];

  id v7 = [self shouldCollectMetricsPromiseForContext:v5];
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v5;
  v11[4] = sub_10014BC60;
  v11[5] = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_1000FE3F8;
  void v11[3] = &unk_100215140;
  uint64_t v9 = _Block_copy(v11);
  id v10 = v5;
  swift_release();
  [v7 addSuccessBlock:v9];
  _Block_release(v9);
}

id sub_10014A5A8(void *a1, void *a2)
{
  id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithTask:a1 metrics:a2];

  return v4;
}

void sub_10014A604(void *a1, void *a2)
{
  if ([a1 BOOLValue])
  {
    id v3 = [self loadURLEventPromiseWithContext:a2];
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = a2;
    v7[4] = sub_10014BC68;
    v7[5] = v4;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    v7[2] = sub_1000E84B0;
    v7[3] = &unk_100215190;
    id v5 = _Block_copy(v7);
    id v6 = a2;
    swift_release();
    [v3 addSuccessBlock:v5];
    _Block_release(v5);
  }
}

void sub_10014A718(uint64_t a1, void *a2)
{
  id v3 = objc_msgSend(self, "internalInstanceUsingBag:", objc_msgSend(a2, "bag"));
  swift_unknownObjectRelease();
  [v3 enqueueEvent:a1];
}

void sub_10014A84C()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  id v6 = v5;
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v8 = sub_1000208F0(v7);
  __chkstk_darwin(v8);
  sub_100011D4C();
  uint64_t v9 = sub_100043478((uint64_t *)&unk_100232000);
  uint64_t v10 = sub_1000208F0(v9);
  __chkstk_darwin(v10);
  sub_100011EC0();
  uint64_t v13 = v11 - v12;
  __chkstk_darwin(v14);
  char v16 = (char *)&v58 - v15;
  uint64_t v17 = sub_100043478(&qword_10022FB40);
  uint64_t v18 = sub_1000208F0(v17);
  __chkstk_darwin(v18);
  sub_100020EAC();
  uint64_t v21 = v20 - v19;
  uint64_t v59 = sub_10014B934(v6, v4);
  uint64_t v23 = v22;
  id v24 = [v4 response];
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v58 = v2;
    self;
    uint64_t v26 = (void *)swift_dynamicCastObjCClass();
    if (v26)
    {
      uint64_t v27 = v26;
      if ((char *)[v26 statusCode] - 300 >= (char *)0xFFFFFFFFFFFFFF9CLL)
      {
        swift_bridgeObjectRelease();
        sub_10014B934(v6, v4);
        id v47 = [v4 originalRequest];
        if (v47)
        {
          id v48 = v47;
          static URLRequest._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v49 = type metadata accessor for URLRequest();
          uint64_t v50 = v13;
          uint64_t v51 = 0;
        }
        else
        {
          uint64_t v49 = type metadata accessor for URLRequest();
          uint64_t v50 = v13;
          uint64_t v51 = 1;
        }
        sub_100021AC0(v50, v51, 1, v49);
        sub_10014BBC0(v13, (uint64_t)v16);
        type metadata accessor for URLRequest();
        if (sub_10004FD40((uint64_t)v16, 1, v49) == 1)
        {
          sub_10002CC0C((uint64_t)v16, (uint64_t *)&unk_100232000);
          uint64_t v57 = type metadata accessor for URL();
          sub_100021AC0(v21, 1, 1, v57);
        }
        else
        {
          URLRequest.url.getter();
          (*(void (**)(char *, uint64_t))(*(void *)(v49 - 8) + 8))(v16, v49);
        }
        type metadata accessor for ContentManager();
        sub_100097FE8();

        swift_bridgeObjectRelease();
        sub_10002CC0C(v21, &qword_10022FB40);
      }
      else
      {
        if (qword_10022C480 != -1) {
          swift_once();
        }
        uint64_t v58 = qword_1002440E8;
        sub_100043478(&qword_10022E560);
        uint64_t v28 = type metadata accessor for LogMessage();
        sub_100044798(v28);
        *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3FC0;
        uint64_t v65 = (void *)type metadata accessor for NetworkObserver();
        uint64_t v63 = (uint64_t)v0;
        id v29 = v0;
        id v30 = (id)AMSLogKey();
        if (v30)
        {
          Swift::String v31 = v30;
          uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v34 = v33;

          swift_bridgeObjectRetain();
          sub_100020F60();
          sub_100020E60();
          sub_100049788(&v63, (uint64_t)v65);
          uint64_t DynamicType = swift_getDynamicType();
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
          uint64_t v60 = DynamicType;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_10002CC0C((uint64_t)&v60, &qword_10022F490);
          sub_100020E44();
          uint64_t MetatypeMetadata = &type metadata for String;
          uint64_t v60 = v32;
          uint64_t v61 = v34;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_10002CC0C((uint64_t)&v60, &qword_10022F490);
          sub_1000208D8();
          LogMessage.init(stringInterpolation:)();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_100020980();
          sub_100020E60();
          uint64_t v52 = sub_100046E68();
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
          uint64_t v60 = v52;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_10002CC0C((uint64_t)&v60, &qword_10022F490);
          sub_100020E94();
          LogMessage.init(stringInterpolation:)();
        }
        sub_10004377C((uint64_t)&v63);
        LogMessage.init(stringLiteral:)();
        uint64_t v65 = &type metadata for String;
        uint64_t v63 = v59;
        uint64_t v64 = v23;
        swift_bridgeObjectRetain();
        static LogMessage.safe(_:)();
        sub_10002CC0C((uint64_t)&v63, &qword_10022F490);
        id v53 = [v27 statusCode];
        uint64_t v65 = &type metadata for Int;
        uint64_t v63 = (uint64_t)v53;
        static LogMessage.safe(_:)();
        sub_10002CC0C((uint64_t)&v63, &qword_10022F490);
        uint64_t v54 = static os_log_type_t.error.getter();
        sub_10004841C(v54);
        swift_bridgeObjectRelease();
        type metadata accessor for ContentManager();
        id v55 = [v27 statusCode];
        sub_10014BB74();
        swift_allocError();
        *(void *)uint64_t v56 = v55;
        *(unsigned char *)(v56 + 8) = 0;
        sub_100096E2C();
        swift_errorRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_24;
    }
  }
  if (qword_10022C480 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v36 = type metadata accessor for LogMessage();
  sub_100044798(v36);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v65 = (void *)type metadata accessor for NetworkObserver();
  uint64_t v63 = (uint64_t)v0;
  id v37 = v0;
  id v38 = (id)AMSLogKey();
  if (v38)
  {
    id v39 = v38;
    uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v42 = v41;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100020E60();
    sub_100049788(&v63, (uint64_t)v65);
    uint64_t v43 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v60 = v43;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v60, &qword_10022F490);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v60 = v40;
    uint64_t v61 = v42;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v60, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100020E60();
    uint64_t v44 = sub_100046E68();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v60 = v44;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v60, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v63);
  LogMessage.init(stringLiteral:)();
  uint64_t v65 = &type metadata for String;
  uint64_t v63 = v59;
  uint64_t v64 = v23;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_10002CC0C((uint64_t)&v63, &qword_10022F490);
  uint64_t v45 = static os_log_type_t.error.getter();
  sub_10004841C(v45);
  swift_bridgeObjectRelease();
  type metadata accessor for ContentManager();
  sub_10014BB74();
  swift_allocError();
  *(void *)uint64_t v46 = 0;
  *(unsigned char *)(v46 + 8) = 1;
  sub_100096E2C();
  swift_errorRelease();
  swift_bridgeObjectRelease();
LABEL_24:
  sub_100020FDC();
}

uint64_t sub_10014B1C0(uint64_t result, void *a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v4 = (void *)result;
    type metadata accessor for ContentManager();
    swift_errorRetain();
    sub_10014B934(v4, a2);
    sub_100096E2C();
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
  return result;
}

void sub_10014B2E0()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for Date();
  sub_100020DEC();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_100011EC0();
  uint64_t v11 = v9 - v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v30[-1] - v13;
  id v15 = [objc_allocWithZone((Class)AMSMutablePromise) init];
  char v16 = (void *)swift_allocObject();
  v16[2] = v0;
  void v16[3] = v2;
  v16[4] = v15;
  v30[4] = sub_10014BB68;
  v30[5] = v16;
  v30[0] = _NSConcreteStackBlock;
  v30[1] = (id)1107296256;
  void v30[2] = sub_10014B72C;
  void v30[3] = &unk_1002150F0;
  uint64_t v17 = _Block_copy(v30);
  id v18 = v2;
  id v19 = v15;
  swift_release();
  [v18 getTasksWithCompletionHandler:v17];
  _Block_release(v17);
  static Date.now.getter();
  static Date.+ infix(_:_:)();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v20(v11, v5);
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  v20((uint64_t)v14, v5);
  v30[0] = 0;
  id v22 = [v19 resultBeforeDate:isa error:v30];

  id v23 = v30[0];
  if (!v22)
  {
    uint64_t v25 = v23;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
LABEL_5:
    swift_bridgeObjectRelease();
    id v24 = &_swiftEmptySetSingleton;
    goto LABEL_6;
  }
  v30[0] = 0;
  static Set._conditionallyBridgeFromObjectiveC(_:result:)();

  id v24 = v30[0];
  if (!v30[0]) {
    goto LABEL_5;
  }
LABEL_6:
  uint64_t v26 = (uint64_t *)(v4 + *(int *)(type metadata accessor for ContentInfo() + 44));
  uint64_t v27 = *v26;
  uint64_t v28 = v26[1];
  swift_bridgeObjectRetain();
  sub_100148B90(v27, v28, (uint64_t)v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_100020FDC();
}

void sub_10014B5B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void *a5, void *a6)
{
  v16[2] = (Swift::Int)&_swiftEmptySetSingleton;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    if (v9) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v9) {
    goto LABEL_11;
  }
LABEL_3:
  if (v9 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v10 = 0;
  do
  {
    if ((a3 & 0xC000000000000001) != 0) {
      id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v11 = *(id *)(a3 + 8 * v10 + 32);
    }
    uint64_t v12 = v11;
    ++v10;
    Swift::Int v13 = sub_10014B934(a5, v11);
    sub_10004A8EC(v16, v13, v14);

    swift_bridgeObjectRelease();
  }
  while (v9 != v10);
  swift_bridgeObjectRelease();
LABEL_12:
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a6 finishWithResult:isa];
}

uint64_t sub_10014B72C(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  sub_10004D510(0, &qword_100231FE8);
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10004D510(0, (unint64_t *)&unk_100231FF0);
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10004D510(0, &qword_10022E6D8);
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v1(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

NSString sub_10014B828(void *a1)
{
  sub_100043478(&qword_100231FE0);
  aBlock[4] = sub_10014BB00;
  aBlock[5] = Promise.__allocating_init()();
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10014B72C;
  void aBlock[3] = &unk_1002150A0;
  uint64_t v2 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [a1 getTasksWithCompletionHandler:v2];
  _Block_release(v2);
  NSString v3 = sub_10018FE58();
  swift_release();
  return v3;
}

uint64_t sub_10014B934(void *a1, void *a2)
{
  uint64_t v3 = sub_10014BA90([a1 configuration]);
  if (v4) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v9 = v5;
  v6._countAndFlagsBits = 45;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  [a2 taskIdentifier];
  v7._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  return v9;
}

id sub_10014B9DC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NetworkObserver();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for NetworkObserver()
{
  return self;
}

uint64_t sub_10014BA90(void *a1)
{
  id v2 = [a1 identifier];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_10014BB00()
{
  return Promise.resolve(_:)();
}

uint64_t sub_10014BB28()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_10014BB68(uint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_10014B5B4(a1, a2, a3, *(void *)(v3 + 16), *(void **)(v3 + 24), *(void **)(v3 + 32));
}

unint64_t sub_10014BB74()
{
  unint64_t result = qword_100232010;
  if (!qword_100232010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100232010);
  }
  return result;
}

uint64_t sub_10014BBC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478((uint64_t *)&unk_100232000);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10014BC28()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10014BC60(void *a1)
{
  sub_10014A604(a1, *(void **)(v1 + 16));
}

void sub_10014BC68(uint64_t a1)
{
  sub_10014A718(a1, *(void **)(v1 + 16));
}

uint64_t getEnumTagSinglePayload for NetworkObserver.NetworkError(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for NetworkObserver.NetworkError(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_10014BCC0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10014BCDC(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    char v2 = 1;
  }
  else
  {
    char v2 = 0;
  }
  *(unsigned char *)(result + 8) = v2;
  return result;
}

ValueMetadata *type metadata accessor for NetworkObserver.NetworkError()
{
  return &type metadata for NetworkObserver.NetworkError;
}

void sub_10014BD28(void *a1, char a2)
{
  if (a2)
  {
    swift_errorRetain();
    Promise.reject(_:)();
    sub_10014CA94(a1, 1);
  }
  else
  {
    id v3 = a1;
    Promise.resolve(_:)();
    sub_10014CA94(a1, 0);
  }
}

uint64_t sub_10014BDA8(uint64_t a1, char a2)
{
  if (a2)
  {
    swift_errorRetain();
    Promise.reject(_:)();
    return sub_10014C674(a1, 1);
  }
  else
  {
    return Promise.resolve(_:)();
  }
}

uint64_t sub_10014BE0C(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10020C500, v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = 2;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t sub_10014BE60(char a1)
{
  if (a1) {
    return 0x656C646E61686E75;
  }
  else {
    return 0x726F727265;
  }
}

uint64_t sub_10014BE9C(char *a1, char *a2)
{
  return sub_10007D484(*a1, *a2);
}

Swift::Int sub_10014BEA8()
{
  return sub_10005A000();
}

uint64_t sub_10014BEB0()
{
  return sub_10005A588();
}

Swift::Int sub_10014BEB8()
{
  return sub_10005B00C();
}

uint64_t sub_10014BEC0@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10014BE0C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10014BEF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10014BE60(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10014BF1C(uint64_t a1, uint64_t a2)
{
  sub_10004D510(0, &qword_1002320A0);
  sub_100043478(&qword_100231DE0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001C4B80;
  sub_10004D510(0, &qword_10022EC18);
  id v5 = sub_1000BC5A4();
  [v5 setAllowsResponse:1];
  *(void *)(v4 + 32) = v5;
  specialized Array._endMutation()();
  id v6 = sub_10014C094(a1, v4);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022F198);
  uint64_t v7 = Promise.__allocating_init()();
  swift_getObjectType();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = v7;
  swift_unknownObjectRetain();
  swift_retain();
  sub_10006D30C((uint64_t)v6, (uint64_t)sub_10014C65C, v8);

  swift_release();
  return v7;
}

id sub_10014C094(uint64_t a1, uint64_t a2)
{
  id v3 = [objc_allocWithZone((Class)AMSEngagementEnqueueRequest) init];
  sub_100043478(&qword_10022D798);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001C3110;
  sub_100043478((uint64_t *)&unk_10022E570);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3130;
  sub_100044C04();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 72) = 0x6E61635343464ELL;
  *(void *)(inited + 80) = 0xE700000000000000;
  sub_100044C04();
  *(void *)(inited + 168) = &type metadata for String;
  strcpy((char *)(inited + 144), "amsengagementd");
  *(unsigned char *)(inited + 159) = -18;
  sub_100044C04();
  uint64_t v6 = URL.absoluteString.getter();
  *(void *)(inited + 240) = &type metadata for String;
  *(void *)(inited + 216) = v6;
  *(void *)(inited + 224) = v7;
  *(void *)(v4 + 32) = Dictionary.init(dictionaryLiteral:)();
  sub_1000BD07C(v4, v3);
  id v8 = [self currentProcess];
  [v3 setClientInfo:v8];

  sub_10014CB38(a2, v3);
  return v3;
}

uint64_t sub_10014C278(void *a1, char a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v6 - 8);
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v28 = &type metadata for NFCEngagementEventHandler;
  uint64_t v26 = a3;
  swift_unknownObjectRetain();
  id v7 = (id)AMSLogKey();
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    sub_100049788(&v26, (uint64_t)v28);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v24[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v24);
    v14._countAndFlagsBits = 5972026;
    v14._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    uint64_t MetatypeMetadata = &type metadata for String;
    v24[0] = v9;
    v24[1] = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v24);
    v15._countAndFlagsBits = 93;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    sub_100049788(&v26, (uint64_t)v28);
    uint64_t v17 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v24[0] = v17;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v24);
    v18._countAndFlagsBits = 58;
    v18._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v26);
  LogMessage.init(stringLiteral:)();
  uint64_t v28 = (ValueMetadata *)sub_100043478(&qword_1002320A8);
  uint64_t v26 = (uint64_t)a1;
  char v27 = a2 & 1;
  sub_10014C668(a1, a2 & 1);
  static LogMessage.safe(_:)();
  sub_1000423CC((uint64_t)&v26);
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v19 = static os_log_type_t.default.getter();
  sub_10004841C(v19);
  swift_bridgeObjectRelease();
  if (a2)
  {
    swift_errorRetain();
    char v20 = 1;
  }
  else
  {
    swift_unknownObjectRetain();
    sub_10014C668(a1, 0);
    uint64_t v21 = sub_10014C680(a1, a3);
    char v20 = v22 & 1;
    sub_10014CA94(a1, 0);
    swift_unknownObjectRelease();
    a1 = (void *)v21;
  }
  sub_10014BDA8((uint64_t)a1, v20);
  return sub_10014C674((uint64_t)a1, v20);
}

uint64_t sub_10014C61C()
{
  swift_unknownObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10014C65C(void *a1, char a2)
{
  return sub_10014C278(a1, a2 & 1, *(void *)(v2 + 16));
}

id sub_10014C668(void *a1, char a2)
{
  if (a2) {
    return (id)swift_errorRetain();
  }
  else {
    return a1;
  }
}

uint64_t sub_10014C674(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_10014C680(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  uint64_t result = sub_100027D14(a1);
  if (!result) {
    return result;
  }
  uint64_t v6 = result;
  sub_10014CAA0();
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)v22, v6, &v24);
  swift_bridgeObjectRelease();
  sub_1000434BC((uint64_t)v22);
  if (!MetatypeMetadata)
  {
    sub_1000423CC((uint64_t)&v24);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0) {
    return 0;
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  id v23 = &type metadata for NFCEngagementEventHandler;
  v22[0] = a2;
  swift_unknownObjectRetain();
  id v8 = (id)AMSLogKey();
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v13._countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    sub_100049788(v22, (uint64_t)v23);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    *(void *)&long long v24 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v24);
    v15._countAndFlagsBits = 5972026;
    v15._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    uint64_t MetatypeMetadata = &type metadata for String;
    *(void *)&long long v24 = v10;
    *((void *)&v24 + 1) = v12;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v24);
    v16._countAndFlagsBits = 93;
    v16._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    sub_100049788(v22, (uint64_t)v23);
    uint64_t v18 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    *(void *)&long long v24 = v18;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v24);
    v19._countAndFlagsBits = 58;
    v19._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v22);
  LogMessage.init(stringLiteral:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v20 = static os_log_type_t.error.getter();
  sub_10004841C(v20);
  swift_bridgeObjectRelease();
  sub_10014CAEC();
  uint64_t result = swift_allocError();
  *uint64_t v21 = 1;
  return result;
}

void sub_10014CA94(void *a1, char a2)
{
  if (a2) {
    swift_errorRelease();
  }
  else {
}
  }

unint64_t sub_10014CAA0()
{
  unint64_t result = qword_1002320B0;
  if (!qword_1002320B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002320B0);
  }
  return result;
}

unint64_t sub_10014CAEC()
{
  unint64_t result = qword_1002320B8;
  if (!qword_1002320B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002320B8);
  }
  return result;
}

void sub_10014CB38(uint64_t a1, void *a2)
{
  sub_10004D510(0, &qword_10022EC18);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [a2 setDestinations:isa];
}

unsigned char *storeEnumTagSinglePayload for NFCEngagementEventHandler.ErrorCase(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10014CC80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NFCEngagementEventHandler.ErrorCase()
{
  return &type metadata for NFCEngagementEventHandler.ErrorCase;
}

ValueMetadata *type metadata accessor for NFCEngagementEventHandler()
{
  return &type metadata for NFCEngagementEventHandler;
}

unint64_t sub_10014CCCC()
{
  unint64_t result = qword_1002320C0;
  if (!qword_1002320C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002320C0);
  }
  return result;
}

uint64_t sub_10014CD18(void *a1)
{
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v3 - 8);
  sub_100020EAC();
  uint64_t v4 = sub_100043478(&qword_10022FB40);
  __chkstk_darwin(v4 - 8);
  sub_100020EAC();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for URL();
  sub_100020DEC();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_100020EAC();
  uint64_t v14 = v13 - v12;
  *((void *)&v45 + 1) = &type metadata for AMSFlags;
  unint64_t v46 = sub_10002FDEC();
  LOBYTE(v44) = 2;
  char v15 = isFeatureEnabled(_:)();
  sub_10004377C((uint64_t)&v44);
  if ((v15 & 1) == 0)
  {
    sub_100043478(&qword_10022E560);
    uint64_t v16 = type metadata accessor for LogMessage();
    sub_100044798(v16);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
    *((void *)&v45 + 1) = &type metadata for NFCEventHandler;
    *(void *)&long long v44 = swift_allocObject();
    sub_10014D458(v1, (_OWORD *)(v44 + 16));
    id v17 = (id)AMSLogKey();
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v21 = v20;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100020E60();
      sub_100049788(&v44, *((uint64_t *)&v45 + 1));
      uint64_t DynamicType = swift_getDynamicType();
      *((void *)&v43 + 1) = swift_getMetatypeMetadata();
      *(void *)&long long v42 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v42, &qword_10022F490);
      v23._countAndFlagsBits = 5972026;
      v23._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      *((void *)&v43 + 1) = &type metadata for String;
      *(void *)&long long v42 = v19;
      *((void *)&v42 + 1) = v21;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v42, &qword_10022F490);
      v24._countAndFlagsBits = 93;
      v24._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v24);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100020E60();
      uint64_t v27 = sub_100048D28();
      *((void *)&v43 + 1) = swift_getMetatypeMetadata();
      *(void *)&long long v42 = v27;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v42, &qword_10022F490);
      v28._countAndFlagsBits = 58;
      v28._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v44);
    sub_1000482F0();
    *((void *)&v45 + 1) = &type metadata for NFCEventHandlingError;
    LOBYTE(v44) = 0;
    static LogMessage.safe(_:)();
    sub_10002CC0C((uint64_t)&v44, &qword_10022F490);
    if (qword_10022C460 == -1) {
      goto LABEL_23;
    }
LABEL_25:
    swift_once();
LABEL_23:
    uint64_t v40 = static os_log_type_t.error.getter();
    sub_10004841C(v40);
    return swift_bridgeObjectRelease();
  }
  if ([a1 object])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v42 = 0u;
    long long v43 = 0u;
  }
  sub_100053404((uint64_t)&v42, (uint64_t)&v44);
  if (!*((void *)&v45 + 1))
  {
    uint64_t v25 = &qword_10022F490;
    uint64_t v26 = &v44;
    goto LABEL_15;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_16;
  }
  URL.init(string:)();
  swift_bridgeObjectRelease();
  if (sub_10004FD40(v7, 1, v8) == 1)
  {
    uint64_t v25 = &qword_10022FB40;
    uint64_t v26 = (long long *)v7;
LABEL_15:
    sub_10002CC0C((uint64_t)v26, v25);
LABEL_16:
    sub_100043478(&qword_10022E560);
    uint64_t v29 = type metadata accessor for LogMessage();
    sub_100044798(v29);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
    *((void *)&v45 + 1) = &type metadata for NFCEventHandler;
    *(void *)&long long v44 = swift_allocObject();
    sub_10014D458(v1, (_OWORD *)(v44 + 16));
    id v30 = (id)AMSLogKey();
    if (v30)
    {
      Swift::String v31 = v30;
      uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v34 = v33;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100020E60();
      sub_100049788(&v44, *((uint64_t *)&v45 + 1));
      uint64_t v35 = swift_getDynamicType();
      *((void *)&v43 + 1) = swift_getMetatypeMetadata();
      *(void *)&long long v42 = v35;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v42, &qword_10022F490);
      v36._countAndFlagsBits = 5972026;
      v36._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v36);
      *((void *)&v43 + 1) = &type metadata for String;
      *(void *)&long long v42 = v32;
      *((void *)&v42 + 1) = v34;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v42, &qword_10022F490);
      v37._countAndFlagsBits = 93;
      v37._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v37);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100020E60();
      uint64_t v38 = sub_100048D28();
      *((void *)&v43 + 1) = swift_getMetatypeMetadata();
      *(void *)&long long v42 = v38;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v42, &qword_10022F490);
      v39._countAndFlagsBits = 58;
      v39._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v44);
    sub_1000482F0();
    if ([a1 object])
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v44 = 0u;
      long long v45 = 0u;
    }
    static LogMessage.safe(_:)();
    sub_10002CC0C((uint64_t)&v44, &qword_10022F490);
    if (qword_10022C460 == -1) {
      goto LABEL_23;
    }
    goto LABEL_25;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v14, v7, v8);
  sub_10014D490(v14);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v14, v8);
}

_OWORD *sub_10014D458(_OWORD *a1, _OWORD *a2)
{
  return a2;
}

uint64_t sub_10014D490(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3);
  uint64_t v6 = sub_100049788((void *)(v1 + 40), *(void *)(v1 + 64));
  sub_10014BF1C(a1, *v6);
  sub_10014D458((_OWORD *)v1, __src);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)__src - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 176) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  memcpy((void *)(v8 + 16), __src, 0xA0uLL);
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8 + v7, (char *)__src - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_10014D7B0;
  *(void *)(v9 + 24) = v8;
  swift_retain();
  sub_10003A184();
  swift_release();
  swift_release();
  sub_10014D458((_OWORD *)v1, __src);
  uint64_t v10 = swift_allocObject();
  memcpy((void *)(v10 + 16), __src, 0xA0uLL);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_10014E110;
  *(void *)(v11 + 24) = v10;
  swift_retain();
  sub_10003A184();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_10014D710()
{
  uint64_t v1 = type metadata accessor for URL();
  sub_100020DEC();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 176) & ~v6;
  uint64_t v8 = v7 + *(void *)(v5 + 64);
  uint64_t v9 = v6 | 7;
  sub_100045354();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);
  return _swift_deallocObject(v0, v8, v9);
}

uint64_t sub_10014D7B0(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for URL() - 8);
  return sub_10014D81C(a1, v1 + ((*(unsigned __int8 *)(v3 + 80) + 176) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

uint64_t sub_10014D81C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v3 - 8);
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v41 = &type metadata for NFCEventHandler;
  v40[0] = swift_allocObject();
  uint64_t v34 = v2;
  sub_10014D458(v2, (_OWORD *)(v40[0] + 16));
  id v4 = (id)AMSLogKey();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v9._countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v9);
    sub_100049788(v40, (uint64_t)v41);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v37 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v37, &qword_10022F490);
    v11._countAndFlagsBits = 5972026;
    v11._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v37 = v6;
    uint64_t v38 = v8;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v37, &qword_10022F490);
    v12._countAndFlagsBits = 93;
    v12._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v13._countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    sub_100049788(v40, (uint64_t)v41);
    uint64_t v14 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v37 = v14;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v37, &qword_10022F490);
    v15._countAndFlagsBits = 58;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v40);
  LogMessage.init(stringLiteral:)();
  swift_getErrorValue();
  uint64_t v41 = v36;
  uint64_t v16 = sub_10003BAA4(v40);
  (*((void (**)(uint64_t *))v36[-1].Description + 2))(v16);
  static LogMessage.safe(_:)();
  sub_10002CC0C((uint64_t)v40, &qword_10022F490);
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v17 = static os_log_type_t.error.getter();
  sub_10004841C(v17);
  swift_bridgeObjectRelease();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v41 = &type metadata for NFCEventHandler;
  v40[0] = swift_allocObject();
  sub_10014D458(v34, (_OWORD *)(v40[0] + 16));
  id v18 = (id)AMSLogKey();
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v22 = v21;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v23._countAndFlagsBits = 0;
    v23._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    sub_100049788(v40, (uint64_t)v41);
    uint64_t v24 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v37 = v24;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v37, &qword_10022F490);
    v25._countAndFlagsBits = 5972026;
    v25._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v37 = v20;
    uint64_t v38 = v22;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v37, &qword_10022F490);
    v26._countAndFlagsBits = 93;
    v26._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v27._countAndFlagsBits = 0;
    v27._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    sub_100049788(v40, (uint64_t)v41);
    uint64_t v28 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v37 = v28;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v37, &qword_10022F490);
    v29._countAndFlagsBits = 58;
    v29._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v29);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v40);
  LogMessage.init(stringLiteral:)();
  uint64_t v30 = static os_log_type_t.default.getter();
  sub_10004841C(v30);
  swift_bridgeObjectRelease();
  uint64_t v31 = *((void *)v34 + 18);
  uint64_t v32 = *((void *)v34 + 19);
  sub_100049788((void *)v34 + 15, v31);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 8))(a2, v31, v32);
}

uint64_t sub_10014DDFC(uint64_t a1, _OWORD *a2)
{
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v3 - 8);
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v21 = &type metadata for NFCEventHandler;
  v20[0] = swift_allocObject();
  sub_10014D458(a2, (_OWORD *)(v20[0] + 16));
  id v4 = (id)AMSLogKey();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v9._countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v9);
    sub_100049788(v20, (uint64_t)v21);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v18[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v18, &qword_10022F490);
    v11._countAndFlagsBits = 5972026;
    v11._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    uint64_t MetatypeMetadata = &type metadata for String;
    v18[0] = v6;
    v18[1] = v8;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v18, &qword_10022F490);
    v12._countAndFlagsBits = 93;
    v12._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v13._countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    sub_100049788(v20, (uint64_t)v21);
    uint64_t v14 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v18[0] = v14;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v18, &qword_10022F490);
    v15._countAndFlagsBits = 58;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v20);
  LogMessage.init(stringLiteral:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v16 = static os_log_type_t.default.getter();
  sub_10004841C(v16);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10014E110(uint64_t a1)
{
  return sub_10014DDFC(a1, (_OWORD *)(v1 + 16));
}

uint64_t sub_10014E118()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t destroy for NFCEventHandler(uint64_t a1)
{
  return sub_10004377C(a1 + 120);
}

_OWORD *initializeWithCopy for NFCEventHandler(_OWORD *a1, _OWORD *a2)
{
  long long v4 = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = a2[4];
  a1[4] = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)a1 + 40, (uint64_t)a2 + 40);
  long long v6 = *(_OWORD *)((char *)a2 + 104);
  *(_OWORD *)((char *)a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
  long long v7 = a2[9];
  a1[9] = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)a1 + 120, (uint64_t)a2 + 120);
  return a1;
}

uint64_t *assignWithCopy for NFCEventHandler(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

void *initializeWithTake for NFCEventHandler(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xA0uLL);
}

uint64_t assignWithTake for NFCEventHandler(uint64_t a1, uint64_t a2)
{
  sub_10004377C(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  sub_10004377C(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  sub_10004377C(a1 + 80);
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  sub_10004377C(a1 + 120);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  return a1;
}

uint64_t getEnumTagSinglePayload for NFCEventHandler(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 160))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NFCEventHandler(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 160) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 160) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NFCEventHandler()
{
  return &type metadata for NFCEventHandler;
}

unsigned char *storeEnumTagSinglePayload for NFCEventHandlingError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10014E54CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NFCEventHandlingError()
{
  return &type metadata for NFCEventHandlingError;
}

unint64_t sub_10014E588()
{
  unint64_t result = qword_1002320C8;
  if (!qword_1002320C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002320C8);
  }
  return result;
}

id sub_10014E5D4()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for NotificationObserver()) init];
  qword_1002320D0 = (uint64_t)result;
  return result;
}

id sub_10014E604()
{
  uint64_t v14 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  sub_100020EAC();
  uint64_t v4 = v3 - v2;
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v5);
  sub_100020EAC();
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = sub_1000208F0(v6);
  __chkstk_darwin(v7);
  sub_100020EAC();
  uint64_t v13 = OBJC_IVAR____TtC14amsengagementd20NotificationObserver_queue;
  sub_10004D510(0, (unint64_t *)&qword_10022F690);
  uint64_t v8 = v0;
  static DispatchQoS.utility.getter();
  if (qword_10022C588 != -1) {
    swift_once();
  }
  Swift::String v9 = (void *)qword_100244180;
  uint64_t v16 = _swiftEmptyArrayStorage;
  sub_100050588((unint64_t *)&qword_10022F470, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  id v10 = v9;
  sub_100043478((uint64_t *)&unk_100231D60);
  sub_10002B720((unint64_t *)&qword_10022F480, (uint64_t *)&unk_100231D60);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(uint64_t, void, uint64_t))(v1 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v14);
  sub_10002064C();
  *(void *)&v8[v13] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();

  v15.receiver = v8;
  v15.super_class = (Class)type metadata accessor for NotificationObserver();
  id v11 = objc_msgSendSuper2(&v15, "init");
  sub_10014E8E0();
  sub_10014F0DC();

  return v11;
}

void sub_10014E8E0()
{
  id v1 = [self defaultCenter];
  [v1 addObserver:v0 selector:"timezoneChanged" name:NSSystemTimeZoneDidChangeNotification object:0];

  uint64_t v2 = CFNotificationCenterGetDarwinNotifyCenter();
  sub_10002064C();
  uint64_t v3 = (__CFString *)String._bridgeToObjectiveC()();
  CFNotificationCenterAddObserver(v2, v0, (CFNotificationCallback)sub_10014F040, v3, 0, CFNotificationSuspensionBehaviorDeliverImmediately);

  uint64_t v4 = *(NSObject **)&v0[OBJC_IVAR____TtC14amsengagementd20NotificationObserver_queue];
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v7[4] = sub_100150E30;
  v7[5] = v5;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_10013F894;
  v7[3] = &unk_1002155C8;
  uint64_t v6 = _Block_copy(v7);
  swift_release();
  xpc_set_event_stream_handler("com.apple.notifyd.matching", v4, v6);
  _Block_release(v6);
}

uint64_t sub_10014EA70()
{
  uint64_t v0 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v0 - 8);
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v1 = type metadata accessor for NotificationObserver();
  uint64_t v19 = sub_100043478(&qword_100232118);
  v18[0] = v1;
  id v2 = (id)AMSLogKey();
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v7._countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v7);
    sub_100049788(v18, v19);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v16[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v16);
    v9._countAndFlagsBits = 5972026;
    v9._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v9);
    uint64_t MetatypeMetadata = &type metadata for String;
    v16[0] = v4;
    v16[1] = v6;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v16);
    v10._countAndFlagsBits = 93;
    v10._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v10);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v11._countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    sub_100049788(v18, v19);
    uint64_t v12 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v16[0] = v12;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v16);
    v13._countAndFlagsBits = 58;
    v13._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v18);
  LogMessage.init(stringLiteral:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v14 = static os_log_type_t.default.getter();
  sub_10004841C(v14);
  swift_bridgeObjectRelease();
  return sub_10014ED58();
}

uint64_t sub_10014ED58()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v13[0] - 8);
  __chkstk_darwin(v13[0]);
  Swift::String v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10022C570 != -1) {
    swift_once();
  }
  uint64_t v8 = *(void **)(qword_1002320D0 + OBJC_IVAR____TtC14amsengagementd20NotificationObserver_queue);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v0;
  aBlock[4] = sub_100150DF0;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CD0C;
  void aBlock[3] = &unk_100215550;
  Swift::String v10 = _Block_copy(aBlock);
  id v11 = v8;
  static DispatchQoS.unspecified.getter();
  v13[1] = _swiftEmptyArrayStorage;
  sub_100050588((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_10002B720((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, void))(v5 + 8))(v7, v13[0]);
  return swift_release();
}

void sub_10014F040(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  id v7 = a1;
  id v8 = a3;
  id v9 = a5;
  sub_10014EA70();
}

void sub_10014F0DC()
{
  uint64_t v1 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v2 = sub_1000208F0(v1);
  __chkstk_darwin(v2);
  sub_100011D4C();
  uint64_t v20 = &type metadata for AMSFlags;
  unint64_t v21 = sub_10002FDEC();
  LOBYTE(aBlock[0]) = 2;
  char v3 = isFeatureEnabled(_:)();
  sub_10004377C((uint64_t)aBlock);
  if (v3)
  {
    id v4 = objc_msgSend(self, "defaultCenter", aBlock[0]);
    sub_10002064C();
    NSString v5 = String._bridgeToObjectiveC()();
    [v4 addObserver:v0 selector:"handleNFCNotification:" name:v5 object:0];

    uint64_t v6 = *(NSObject **)&v0[OBJC_IVAR____TtC14amsengagementd20NotificationObserver_queue];
    uint64_t v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    unint64_t v21 = (unint64_t)sub_100150E30;
    uint64_t v22 = v7;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10013F894;
    uint64_t v20 = (ValueMetadata *)&unk_1002155A0;
    id v8 = _Block_copy(aBlock);
    swift_release();
    xpc_set_event_stream_handler("com.apple.distnoted.matching", v6, v8);
    _Block_release(v8);
  }
  else
  {
    sub_100043478(&qword_10022E560);
    uint64_t v9 = sub_1000208FC();
    sub_100044798(v9);
    *(_OWORD *)(sub_100049B00() + 16) = xmmword_1001C3120;
    uint64_t v20 = (ValueMetadata *)type metadata accessor for NotificationObserver();
    aBlock[0] = v0;
    Swift::String v10 = v0;
    id v11 = (id)AMSLogKey();
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v15 = v14;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      uint64_t v16 = sub_100045CF8(aBlock);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v23[0] = v16;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v23);
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      v23[0] = v13;
      v23[1] = v15;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v23);
      sub_1000208D8();
      sub_10004ACC4();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100049788(aBlock, (uint64_t)v20);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v23[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v23);
      sub_100020E94();
      sub_10004ACC4();
    }
    sub_10004377C((uint64_t)aBlock);
    sub_100043B80();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v18 = static os_log_type_t.default.getter();
    sub_10004841C(v18);
    swift_bridgeObjectRelease();
  }
}

void sub_10014F454(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v3 = (void *)Strong;
    sub_10014F4B0(a1);
  }
}

void sub_10014F4B0(void *a1)
{
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v3 = sub_1000208F0(v2);
  __chkstk_darwin(v3);
  sub_100011D4C();
  if (!xpc_dictionary_get_string(a1, _xpc_event_key_name)) {
    return;
  }
  uint64_t v5 = String.init(cString:)();
  uint64_t v6 = v4;
  if (v5 == 0xD000000000000021 && v4 == 0x80000001001D5570
    || (sub_100049E60(), (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    sub_100043478(&qword_10022E560);
    uint64_t v7 = sub_1000208FC();
    sub_100044798(v7);
    *(_OWORD *)(sub_100049B00() + 16) = xmmword_1001C3120;
    uint64_t v8 = type metadata accessor for NotificationObserver();
    sub_100043D60(v8);
    id v9 = (id)AMSLogKey();
    if (v9)
    {
      Swift::String v10 = v9;
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      uint64_t v14 = sub_10002106C(v54);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v51 = v14;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v51);
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v51 = v11;
      uint64_t v52 = v13;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v51);
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100045EA4();
      uint64_t v15 = swift_getMetatypeMetadata();
      sub_100040FDC(v15);
      sub_1000423CC((uint64_t)&v51);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v54);
    sub_100043B80();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v16 = static os_log_type_t.default.getter();
    sub_10004841C(v16);
    swift_bridgeObjectRelease();
    sub_10014ED58();
    return;
  }
  if (v5 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v6 == v17)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      if (v5 == 0xD00000000000004FLL && v6 == 0x80000001001D55A0
        || (sub_100049E60(), (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
      {
        swift_bridgeObjectRelease();
        sub_100043478(&qword_10022E560);
        uint64_t v20 = sub_1000208FC();
        sub_100044798(v20);
        *(_OWORD *)(sub_10002129C() + 16) = xmmword_1001C3120;
        uint64_t v21 = type metadata accessor for NotificationObserver();
        sub_100043D60(v21);
        id v22 = (id)AMSLogKey();
        if (v22)
        {
          Swift::String v23 = v22;
          uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v26 = v25;

          swift_bridgeObjectRetain();
          sub_1000208BC();
          sub_100020E60();
          uint64_t v27 = sub_100045CF8(v54);
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
          uint64_t v51 = v27;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_1000423CC((uint64_t)&v51);
          sub_100020E44();
          uint64_t MetatypeMetadata = &type metadata for String;
          uint64_t v51 = v24;
          uint64_t v52 = v26;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_1000423CC((uint64_t)&v51);
          sub_1000208D8();
          sub_10004ACC4();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_100020E78();
          sub_100020E60();
          sub_100045EA4();
          uint64_t v38 = swift_getMetatypeMetadata();
          sub_100040FDC(v38);
          sub_1000423CC((uint64_t)&v51);
          sub_100020E94();
          sub_10004ACC4();
        }
        sub_10004377C((uint64_t)v54);
        sub_100043B80();
        if (qword_10022C460 != -1) {
          swift_once();
        }
        uint64_t v39 = static os_log_type_t.default.getter();
        sub_10004841C(v39);
        swift_bridgeObjectRelease();
        if (qword_10022C5C0 != -1) {
          swift_once();
        }
        sub_100181874();
      }
      else
      {
        sub_100043478(&qword_10022E560);
        uint64_t v40 = type metadata accessor for LogMessage();
        sub_100044798(v40);
        *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
        uint64_t v41 = type metadata accessor for NotificationObserver();
        sub_100043D60(v41);
        id v42 = (id)AMSLogKey();
        if (v42)
        {
          long long v43 = v42;
          uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v46 = v45;

          swift_bridgeObjectRetain();
          sub_1000208BC();
          sub_100020E60();
          sub_100049788(v54, (uint64_t)v55);
          uint64_t DynamicType = swift_getDynamicType();
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
          uint64_t v51 = DynamicType;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_1000423CC((uint64_t)&v51);
          sub_100020E44();
          uint64_t MetatypeMetadata = &type metadata for String;
          uint64_t v51 = v44;
          uint64_t v52 = v46;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_1000423CC((uint64_t)&v51);
          sub_1000208D8();
          LogMessage.init(stringInterpolation:)();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_100020E78();
          sub_100020E60();
          sub_100045EA4();
          uint64_t v48 = swift_getMetatypeMetadata();
          sub_100040FDC(v48);
          sub_1000423CC((uint64_t)&v51);
          sub_100020E94();
          LogMessage.init(stringInterpolation:)();
        }
        sub_10004377C((uint64_t)v54);
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        sub_10002064C();
        LogMessage.StringInterpolation.appendLiteral(_:)(v49);
        id v55 = &type metadata for String;
        v54[0] = v5;
        v54[1] = v6;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)v54);
        sub_100020E60();
        sub_100011CC0();
        if (qword_10022C460 != -1) {
          swift_once();
        }
        uint64_t v50 = static os_log_type_t.default.getter();
        sub_10004841C(v50);
        swift_bridgeObjectRelease();
      }
      return;
    }
  }
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022E560);
  uint64_t v28 = sub_1000208FC();
  sub_100044798(v28);
  *(_OWORD *)(sub_10002129C() + 16) = xmmword_1001C3120;
  uint64_t v29 = type metadata accessor for NotificationObserver();
  sub_100043D60(v29);
  id v30 = (id)AMSLogKey();
  if (v30)
  {
    uint64_t v31 = v30;
    uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v34 = v33;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    uint64_t v35 = sub_100045CF8(v54);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v51 = v35;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v51);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v51 = v32;
    uint64_t v52 = v34;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v51);
    sub_1000208D8();
    sub_10004ACC4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    sub_100045EA4();
    uint64_t v36 = swift_getMetatypeMetadata();
    sub_100040FDC(v36);
    sub_1000423CC((uint64_t)&v51);
    sub_100020E94();
    sub_10004ACC4();
  }
  sub_10004377C((uint64_t)v54);
  sub_100043B80();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v37 = static os_log_type_t.default.getter();
  sub_10004841C(v37);
  swift_bridgeObjectRelease();
  if (qword_10022C438 != -1) {
    swift_once();
  }
  sub_1000C4970();
}

uint64_t sub_10014FD18()
{
  swift_getObjectType();
  uint64_t v1 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v2 = sub_1000208F0(v1);
  __chkstk_darwin(v2);
  sub_100011D4C();
  sub_100043478(&qword_10022E560);
  uint64_t v3 = type metadata accessor for LogMessage();
  sub_100044798(v3);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v17 = type metadata accessor for NotificationObserver();
  v16[0] = v0;
  id v4 = v0;
  id v5 = (id)AMSLogKey();
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    uint64_t v10 = sub_10002106C(v16);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v14[0] = v10;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v14);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v14[0] = v7;
    v14[1] = v9;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v14);
    sub_1000208D8();
    sub_100011CC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    sub_100049788(v16, v17);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v14[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v14);
    sub_100020E94();
    sub_100011CC0();
  }
  sub_10004377C((uint64_t)v16);
  LogMessage.init(stringLiteral:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v12 = static os_log_type_t.default.getter();
  sub_10004841C(v12);
  swift_bridgeObjectRelease();
  return sub_10014ED58();
}

uint64_t sub_10014FFB0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for TimeZone();
  uint64_t v9 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AppDatabase();
  uint64_t v12 = sub_1000124C0(1);
  uint64_t v49 = a1;
  uint64_t v50 = v4;
  uint64_t v48 = v5;
  uint64_t v35 = v12;
  if (!v12)
  {
    uint64_t v46 = 0;
    long long v54 = 0u;
    long long v55 = 0u;
    char v13 = 1;
LABEL_3:
    sub_1000423CC((uint64_t)&v54);
    goto LABEL_4;
  }
  swift_retain();
  sub_10004CFE8();
  swift_release();
  sub_1000843F4(1, &v54);
  uint64_t v46 = v35;
  swift_release();
  if (!*((void *)&v55 + 1))
  {
    char v13 = 0;
    goto LABEL_3;
  }
  char v13 = 0;
  if (swift_dynamicCast())
  {
    uint64_t v14 = v51;
    int v15 = 1;
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v14 = 0;
  int v15 = 0;
LABEL_5:
  static TimeZone.current.getter();
  Date.init()();
  uint64_t v16 = TimeZone.secondsFromGMT(for:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v48);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v47);
  if (v15 && v14 == v16)
  {
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    *((void *)&v55 + 1) = sub_100043478(&qword_100232118);
    *(void *)&long long v54 = v49;
    id v17 = (id)AMSLogKey();
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v21 = v20;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v22._countAndFlagsBits = 0;
      v22._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v22);
      sub_100049788(&v54, *((uint64_t *)&v55 + 1));
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v51 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v51);
      v24._countAndFlagsBits = 5972026;
      v24._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v24);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v51 = v19;
      uint64_t v52 = v21;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v51);
      v25._countAndFlagsBits = 93;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v36._countAndFlagsBits = 0;
      v36._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v36);
      sub_100049788(&v54, *((uint64_t *)&v55 + 1));
      uint64_t v37 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v51 = v37;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v51);
      v38._countAndFlagsBits = 58;
      v38._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v38);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v54);
    LogMessage.init(stringLiteral:)();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v39 = static os_log_type_t.default.getter();
    sub_10004841C(v39);
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((v13 & 1) == 0)
    {
      swift_retain();
      sub_10004CFE8();
      swift_release();
      *((void *)&v55 + 1) = &type metadata for Int;
      *(void *)&long long v54 = v16;
      sub_10008437C((uint64_t)&v54, 1);
      swift_release();
      sub_1000423CC((uint64_t)&v54);
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    *((void *)&v55 + 1) = sub_100043478(&qword_100232118);
    *(void *)&long long v54 = v49;
    id v26 = (id)AMSLogKey();
    if (v26)
    {
      uint64_t v27 = v26;
      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v30 = v29;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v31._countAndFlagsBits = 0;
      v31._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v31);
      sub_100049788(&v54, *((uint64_t *)&v55 + 1));
      uint64_t v32 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v51 = v32;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v51);
      v33._countAndFlagsBits = 5972026;
      v33._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v33);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v51 = v28;
      uint64_t v52 = v30;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v51);
      v34._countAndFlagsBits = 93;
      v34._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v34);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v40._countAndFlagsBits = 0;
      v40._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v40);
      sub_100049788(&v54, *((uint64_t *)&v55 + 1));
      uint64_t v41 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v51 = v41;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v51);
      v42._countAndFlagsBits = 58;
      v42._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v42);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v54);
    LogMessage.init(stringLiteral:)();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v43 = static os_log_type_t.default.getter();
    sub_10004841C(v43);
    swift_bridgeObjectRelease();
    sub_100075468(1);
  }
  return swift_release();
}

uint64_t sub_1001507C4(void *a1)
{
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  sub_100011D4C();
  sub_100043478(&qword_10022E560);
  uint64_t v5 = type metadata accessor for LogMessage();
  sub_100044798(v5);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v24 = type metadata accessor for NotificationObserver();
  v23[0] = v1;
  id v6 = v1;
  id v7 = (id)AMSLogKey();
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    uint64_t v12 = sub_10002106C(v23);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v34[0] = v12;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v34);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v34[0] = v9;
    v34[1] = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v34);
    sub_1000208D8();
    sub_100011CC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    sub_100049788(v23, v24);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v34[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v34);
    sub_100020E94();
    sub_100011CC0();
  }
  sub_10004377C((uint64_t)v23);
  LogMessage.init(stringLiteral:)();
  uint64_t v24 = sub_10004D510(0, &qword_100232108);
  v23[0] = a1;
  id v14 = a1;
  static LogMessage.sensitive(_:)();
  sub_1000423CC((uint64_t)v23);
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v15 = static os_log_type_t.default.getter();
  sub_10004841C(v15);
  swift_bridgeObjectRelease();
  uint64_t v29 = &type metadata for FeatureFlagProvider;
  uint64_t v30 = &off_100210B68;
  uint64_t v16 = type metadata accessor for BagProvider();
  uint64_t v17 = swift_allocObject();
  uint64_t v24 = v16;
  Swift::String v25 = &off_10020E9C0;
  v23[0] = v17;
  if (qword_10022C430 != -1) {
    swift_once();
  }
  uint64_t v18 = (void *)qword_100244090;
  uint64_t v27 = &type metadata for NFCEngagementEventHandler;
  uint64_t v28 = &off_100215328;
  uint64_t v26 = qword_100244090;
  id v19 = objc_allocWithZone((Class)AMSDNFCAccessory);
  id v20 = v18;
  id v21 = objc_msgSend(v19, "init", v23[0]);
  uint64_t v32 = sub_10004D510(0, &qword_100232110);
  Swift::String v33 = &off_10020DBF0;
  id v31 = v21;
  sub_10014CD18(v14);
  return sub_100150D8C((uint64_t)v23);
}

uint64_t sub_100150BB4(void *a1)
{
  v7[13] = &type metadata for FeatureFlagProvider;
  v7[14] = &off_100210B68;
  v7[3] = type metadata accessor for BagProvider();
  v7[4] = &off_10020E9C0;
  v7[0] = swift_allocObject();
  if (qword_10022C430 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_100244090;
  v7[8] = &type metadata for NFCEngagementEventHandler;
  v7[9] = &off_100215328;
  v7[5] = qword_100244090;
  id v3 = objc_allocWithZone((Class)AMSDNFCAccessory);
  id v4 = v2;
  id v5 = objc_msgSend(v3, "init", v7[0]);
  v7[18] = sub_10004D510(0, &qword_100232110);
  v7[19] = &off_10020DBF0;
  v7[15] = v5;
  sub_10014CD18(a1);
  return sub_100150D8C((uint64_t)v7);
}

id sub_100150D24()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NotificationObserver();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for NotificationObserver()
{
  return self;
}

uint64_t sub_100150D8C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100150DE0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100150DF0()
{
  return sub_10014FFB0(*(void *)(v0 + 16));
}

uint64_t sub_100150DF8()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100150E30(void *a1)
{
}

id sub_100150E5C()
{
  sub_100040A08();
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithBundleIdentifier:v1];

  return v2;
}

uint64_t sub_100150ECC(uint64_t a1)
{
  NSString v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_10004D510(0, (unint64_t *)&unk_1002322E0);
  uint64_t v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_100150F60()
{
  sub_1001A9D4C();
  qword_100244170 = v0;
}

uint64_t sub_100150F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = v3;
  uint64_t v9 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v10 = sub_1000208F0(v9);
  __chkstk_darwin(v10);
  sub_10002D300();
  uint64_t v11 = sub_100043478(&qword_10022FB40);
  uint64_t v12 = sub_1000208F0(v11);
  __chkstk_darwin(v12);
  id v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for URL();
  sub_100020DEC();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  sub_100022558();
  sub_100151AD8(a2, a3, (uint64_t)v14);
  if (sub_10004FD40((uint64_t)v14, 1, v15) == 1) {
    return sub_100027BD8((uint64_t)v14, &qword_10022FB40);
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v4, v14, v15);
  id v20 = self;
  v50[0] = 0;
  id v21 = [v20 archivedDataWithRootObject:a1 requiringSecureCoding:1 error:v50];
  id v22 = v50[0];
  if (v21)
  {
    uint64_t v47 = v15;
    uint64_t v23 = v4;
    uint64_t v24 = v17;
    uint64_t v25 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v27 = v26;

    uint64_t v28 = v5[17];
    uint64_t v29 = v5[18];
    sub_100049788(v5 + 14, v28);
    (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v29 + 32))(v25, v27, v23, v28, v29);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v47);
    return sub_10004B278(v25, v27);
  }
  else
  {
    uint64_t v30 = v22;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_100043478(&qword_10022E560);
    uint64_t v31 = type metadata accessor for LogMessage();
    sub_100044798(v31);
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_1001C3120;
    uint64_t v51 = type metadata accessor for NotificationSettingsEventManager();
    v50[0] = v5;
    swift_retain();
    id v33 = (id)AMSLogKey();
    if (v33)
    {
      Swift::String v34 = v33;
      uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v36 = v35;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100020B08();
      sub_100020F04(v50);
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_100045260(MetatypeMetadata);
      uint64_t v47 = v32;
      sub_100027BD8((uint64_t)v49, &qword_10022F490);
      sub_100020E44();
      v49[3] = &type metadata for String;
      v49[0] = v46;
      v49[1] = v36;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8((uint64_t)v49, &qword_10022F490);
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100020B08();
      sub_100020F04(v50);
      uint64_t v38 = swift_getMetatypeMetadata();
      sub_100045260(v38);
      sub_100027BD8((uint64_t)v49, &qword_10022F490);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v50);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_10002064C();
    v39._countAndFlagsBits = 0xD000000000000024;
    LogMessage.StringInterpolation.appendLiteral(_:)(v39);
    uint64_t v51 = v15;
    sub_10003BAA4((uint64_t *)v50);
    sub_10004C00C();
    v40();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v50, &qword_10022F490);
    v41._countAndFlagsBits = 8250;
    v41._object = (void *)0xE200000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v41);
    swift_getErrorValue();
    uint64_t v51 = v48;
    sub_10003BAA4((uint64_t *)v50);
    sub_1000456E0();
    (*(void (**)(void))(v42 + 16))();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)v50, &qword_10022F490);
    sub_100020E60();
    LogMessage.init(stringInterpolation:)();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v43 = static os_log_type_t.debug.getter();
    sub_10004841C(v43);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    uint64_t v44 = sub_10004A220();
    return v45(v44);
  }
}

uint64_t sub_100151520(uint64_t a1, uint64_t a2)
{
  id v5 = v2;
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v9 = sub_1000208F0(v8);
  __chkstk_darwin(v9);
  sub_10002D300();
  uint64_t v10 = sub_100043478(&qword_10022FB40);
  uint64_t v11 = sub_1000208F0(v10);
  __chkstk_darwin(v11);
  sub_100045B24();
  uint64_t v12 = type metadata accessor for URL();
  sub_100020DEC();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_100022558();
  sub_100151AD8(a1, a2, v4);
  if (sub_10004FD40(v4, 1, v12) == 1)
  {
    uint64_t v16 = &qword_10022FB40;
    uint64_t v17 = (void *)v4;
LABEL_3:
    sub_100027BD8((uint64_t)v17, v16);
    return 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v3, v4, v12);
  uint64_t v18 = v5[18];
  sub_100049788(v5 + 14, v5[17]);
  uint64_t countAndFlagsBits = URL.path(percentEncoded:)(1)._countAndFlagsBits;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v18 + 8))(countAndFlagsBits);
  unint64_t v22 = v21;
  swift_bridgeObjectRelease();
  if (v22 >> 60 == 15)
  {
    uint64_t v26 = sub_10004A220();
    v27(v26);
    return 0;
  }
  sub_10004D510(0, &qword_100232388);
  sub_100043478((uint64_t *)&unk_100232390);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1001C3130;
  *(void *)(v23 + 32) = type metadata accessor for DisplayCriteria();
  *(void *)(v23 + 40) = sub_10004D510(0, (unint64_t *)&unk_1002322E0);
  *(void *)(v23 + 48) = sub_10004D510(0, &qword_1002314F0);
  static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)();
  sub_100043FB0();
  v24();
  swift_bridgeObjectRelease();
  sub_10004B6AC(v20, v22);
  if (!v29[3])
  {
    uint64_t v16 = &qword_10022F490;
    uint64_t v17 = v29;
    goto LABEL_3;
  }
  if (swift_dynamicCast()) {
    return v28;
  }
  else {
    return 0;
  }
}

uint64_t sub_100151AD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v49 = type metadata accessor for URL.DirectoryHint();
  sub_100020DEC();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_100045B24();
  uint64_t v11 = sub_100043478(&qword_10022FB40);
  uint64_t v12 = sub_1000208F0(v11);
  __chkstk_darwin(v12);
  sub_100035C70();
  uint64_t v48 = v13;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v41 - v15;
  uint64_t v17 = type metadata accessor for URL();
  sub_100020DEC();
  uint64_t v50 = v18;
  __chkstk_darwin(v19);
  sub_100035C70();
  uint64_t v47 = v20;
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v24 = (char *)v41 - v23;
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)v41 - v25;
  sub_10003C948();
  if (sub_10004FD40((uint64_t)v16, 1, v17) == 1)
  {
    sub_100027BD8((uint64_t)v16, &qword_10022FB40);
    uint64_t v27 = 1;
  }
  else
  {
    uint64_t v44 = a1;
    uint64_t v45 = a2;
    uint64_t v46 = a3;
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
    v41[1] = v50 + 32;
    v43(v26, v16, v17);
    uint64_t v28 = v3[8];
    uint64_t v51 = v3[7];
    uint64_t v52 = v28;
    uint64_t v29 = v49;
    uint64_t v42 = *(void (**)(uint64_t, void, uint64_t))(v9 + 104);
    v41[0] = v9 + 104;
    v42(v4, enum case for URL.DirectoryHint.isDirectory(_:), v49);
    uint64_t v30 = v3;
    unint64_t v31 = sub_10003C8FC();
    swift_bridgeObjectRetain();
    v41[2] = v31;
    URL.appending<A>(path:directoryHint:)();
    uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v32(v4, v29);
    swift_bridgeObjectRelease();
    uint64_t v33 = v3[17];
    uint64_t v34 = v30[18];
    sub_100049788(v30 + 14, v30[17]);
    uint64_t v35 = v48;
    sub_1000C50D0((uint64_t)v24, 1, 0, v33, v34, v48);
    if (sub_10004FD40(v35, 1, v17) == 1)
    {
      uint64_t v36 = *(void (**)(void))(v50 + 8);
      sub_10004ACDC();
      v36();
      sub_10004ACDC();
      v36();
      sub_100027BD8(v35, &qword_10022FB40);
      uint64_t v27 = 1;
      a3 = v46;
    }
    else
    {
      v43(v47, (char *)v35, v17);
      uint64_t v51 = v44;
      uint64_t v52 = v45;
      uint64_t v37 = v49;
      v42(v4, enum case for URL.DirectoryHint.inferFromPath(_:), v49);
      uint64_t v38 = v32;
      a3 = v46;
      URL.appending<A>(path:directoryHint:)();
      v38(v4, v37);
      Swift::String v39 = *(void (**)(void))(v50 + 8);
      sub_10004ACDC();
      v39();
      sub_10004ACDC();
      v39();
      sub_10004ACDC();
      v39();
      uint64_t v27 = 0;
    }
  }
  return sub_100021AC0(a3, v27, 1, v17);
}

uint64_t sub_100151EB8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 1360) = a2;
  *(void *)(v2 + 1352) = a1;
  return sub_100044BDC((uint64_t)sub_100151ED4);
}

uint64_t sub_100151ED4()
{
  sub_10004A400();
  NSString v1 = self;
  NSString v2 = String._bridgeToObjectiveC()();
  v0[171] = [v1 explicitContentSettingForBundleID:v2];

  sub_10004D510(0, &qword_100232340);
  swift_bridgeObjectRetain();
  id v3 = sub_100150E5C();
  v0[172] = v3;
  uint64_t v4 = swift_task_alloc();
  v0[173] = v4;
  *(void *)(v4 + 16) = v3;
  sub_10004D510(255, (unint64_t *)&unk_1002322E0);
  swift_asyncLet_begin();
  uint64_t v5 = swift_task_alloc();
  v0[174] = v5;
  *(void *)(v5 + 16) = v3;
  sub_10006026C((uint64_t *)&unk_1002322F0);
  swift_asyncLet_begin();
  sub_10004A60C();
  return _swift_asyncLet_get(v6, v7, v8, v9);
}

uint64_t sub_100152078()
{
  sub_100041F70();
  NSString v1 = *(void **)(v0 + 1344);
  *(void *)(v0 + 1400) = v1;
  id v2 = v1;
  return _swift_asyncLet_get(v0 + 16, v0 + 1336, sub_1001520F8, v0 + 1296);
}

uint64_t sub_1001520F8()
{
  return sub_100044BDC((uint64_t)sub_10015210C);
}

uint64_t sub_10015210C()
{
  uint64_t v1 = v0[175];
  uint64_t v2 = v0[171];
  uint64_t v3 = v0[167];
  objc_allocWithZone((Class)type metadata accessor for DisplayCriteria());
  swift_bridgeObjectRetain();
  v0[176] = sub_100154574(v2, v1, v3);
  return _swift_asyncLet_finish(v0 + 2);
}

uint64_t sub_1001521CC()
{
  return sub_100044BDC((uint64_t)sub_1001521E0);
}

uint64_t sub_1001521E0()
{
  sub_100041F70();
  swift_task_dealloc();
  uint64_t v0 = sub_10004C220();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_100152258()
{
  return sub_100044BDC((uint64_t)sub_10015226C);
}

uint64_t sub_10015226C()
{
  sub_100020958();

  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 1408);
  return v1(v2);
}

uint64_t sub_1001522D8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_1001522F8, 0, 0);
}

uint64_t sub_1001522F8()
{
  sub_100020958();
  uint64_t v1 = v0[3];
  uint64_t v2 = swift_task_alloc();
  v0[4] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  sub_10004D510(0, (unint64_t *)&unk_1002322E0);
  *uint64_t v3 = v0;
  v3[1] = sub_100156518;
  sub_10004419C();
  return withCheckedContinuation<A>(isolation:function:_:)();
}

void sub_1001523E4(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_100043478((uint64_t *)&unk_100232370);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_10015645C;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000FE3F8;
  void aBlock[3] = &unk_100215768;
  uint64_t v9 = _Block_copy(aBlock);
  swift_release();
  [a2 getNotificationSettingsWithCompletionHandler:v9];
  _Block_release(v9);
}

uint64_t sub_10015258C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_1001525AC, 0, 0);
}

uint64_t sub_1001525AC()
{
  sub_100020958();
  uint64_t v1 = v0[3];
  uint64_t v2 = swift_task_alloc();
  v0[4] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  sub_100043478((uint64_t *)&unk_1002322F0);
  *uint64_t v3 = v0;
  v3[1] = sub_10015268C;
  sub_10004419C();
  return withCheckedContinuation<A>(isolation:function:_:)();
}

uint64_t sub_10015268C()
{
  sub_100020958();
  sub_1000447B0();
  uint64_t v1 = *v0;
  sub_100020EBC();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

void sub_100152770(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_100043478(&qword_100232368);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_100156428;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100150ECC;
  void aBlock[3] = &unk_100215718;
  uint64_t v9 = _Block_copy(aBlock);
  swift_release();
  [a2 getNotificationSettingsForTopicsWithCompletionHandler:v9];
  _Block_release(v9);
}

uint64_t sub_100152918()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_100152960()
{
  *(void *)(v1 + 16) = v0;
  *(void *)(v1 + 24) = *v0;
  return sub_100044BDC((uint64_t)sub_1001529A0);
}

uint64_t sub_1001529A0()
{
  sub_100041F70();
  uint64_t v2 = v0[2];
  uint64_t v1 = v0[3];
  uint64_t v3 = swift_task_alloc();
  v0[4] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100152A7C;
  return withDiscardingTaskGroup<A>(returning:isolation:body:)();
}

uint64_t sub_100152A7C()
{
  sub_100020958();
  sub_1000447B0();
  uint64_t v1 = *v0;
  sub_100020EBC();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100043E7C();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_100152B60()
{
  sub_100040954();
  return v0();
}

uint64_t sub_100152B78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[9] = a2;
  v3[10] = a3;
  sub_100043478(&qword_10022D340);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  return _swift_task_switch(sub_100152C1C, 0, 0);
}

uint64_t sub_100152C1C()
{
  if (qword_10022C578 == -1) {
    goto LABEL_2;
  }
LABEL_35:
  swift_once();
LABEL_2:
  uint64_t v28 = qword_100244170 + 56;
  uint64_t v1 = -1;
  uint64_t v2 = -1 << *(unsigned char *)(qword_100244170 + 32);
  if (-v2 < 64) {
    uint64_t v1 = ~(-1 << -(char)v2);
  }
  unint64_t v3 = v1 & *(void *)(qword_100244170 + 56);
  int64_t v29 = (unint64_t)(63 - v2) >> 6;
  uint64_t v30 = qword_100244170;
  swift_bridgeObjectRetain();
  int64_t v4 = 0;
  if (v3)
  {
LABEL_5:
    unint64_t v5 = __clz(__rbit64(v3));
    v3 &= v3 - 1;
    int64_t v31 = v4;
    unint64_t v6 = v5 | (v4 << 6);
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v7 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    if (v7 >= v29) {
      goto LABEL_30;
    }
    unint64_t v8 = *(void *)(v28 + 8 * v7);
    int64_t v9 = v4 + 1;
    if (!v8)
    {
      int64_t v9 = v4 + 2;
      if (v4 + 2 >= v29) {
        goto LABEL_30;
      }
      unint64_t v8 = *(void *)(v28 + 8 * v9);
      if (!v8)
      {
        int64_t v9 = v4 + 3;
        if (v4 + 3 >= v29) {
          goto LABEL_30;
        }
        unint64_t v8 = *(void *)(v28 + 8 * v9);
        if (!v8) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v3 = (v8 - 1) & v8;
    int64_t v31 = v9;
    unint64_t v6 = __clz(__rbit64(v8)) + (v9 << 6);
LABEL_20:
    uint64_t v12 = *(void *)(v0 + 88);
    uint64_t v11 = *(void *)(v0 + 96);
    uint64_t v13 = *(void *)(v0 + 80);
    uint64_t v14 = (uint64_t *)(*(void *)(v30 + 48) + 16 * v6);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    uint64_t v17 = (void *)swift_allocObject();
    v17[2] = 0;
    v17[3] = 0;
    v17[4] = v13;
    void v17[5] = v16;
    v17[6] = v15;
    uint64_t v18 = type metadata accessor for TaskPriority();
    sub_100021AC0(v11, 1, 1, v18);
    sub_1000837D8(v11, v12, &qword_10022D340);
    LODWORD(v12) = sub_10004FD40(v12, 1, v18);
    swift_bridgeObjectRetain();
    swift_retain();
    if (v12 == 1)
    {
      sub_100027BD8(*(void *)(v0 + 88), &qword_10022D340);
    }
    else
    {
      TaskPriority.rawValue.getter();
      sub_1000456E0();
      sub_100043FB0();
      v19();
    }
    if (v17[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v20 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v22 = v21;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v20 = 0;
      uint64_t v22 = 0;
    }
    uint64_t v23 = **(void **)(v0 + 72);
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = &unk_100232328;
    *(void *)(v24 + 24) = v17;
    uint64_t v25 = v22 | v20;
    if (v22 | v20)
    {
      uint64_t v25 = v0 + 16;
      *(void *)(v0 + 16) = 0;
      *(void *)(v0 + 24) = 0;
      *(void *)(v0 + 32) = v20;
      *(void *)(v0 + 40) = v22;
    }
    *(void *)(v0 + 48) = 1;
    *(void *)(v0 + 56) = v25;
    *(void *)(v0 + 64) = v23;
    swift_task_create();
    swift_release();
    int64_t v4 = v31;
    if (v3) {
      goto LABEL_5;
    }
  }
  uint64_t v10 = v4 + 4;
  if (v4 + 4 < v29)
  {
    unint64_t v8 = *(void *)(v28 + 8 * v10);
    if (!v8)
    {
      while (1)
      {
        int64_t v9 = v10 + 1;
        if (__OFADD__(v10, 1)) {
          goto LABEL_34;
        }
        if (v9 >= v29) {
          goto LABEL_30;
        }
        unint64_t v8 = *(void *)(v28 + 8 * v9);
        ++v10;
        if (v8) {
          goto LABEL_19;
        }
      }
    }
    int64_t v9 = v4 + 4;
    goto LABEL_19;
  }
LABEL_30:
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100040954();
  return v26();
}

uint64_t sub_100152FF0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100052880;
  return sub_10015309C();
}

uint64_t sub_10015309C()
{
  sub_100041F70();
  sub_100040A08();
  v3[86] = v1;
  v3[85] = v4;
  v3[84] = v5;
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  sub_1000208F0(v6);
  v3[87] = swift_task_alloc();
  int64_t v7 = (void *)swift_task_alloc();
  v3[88] = v7;
  *int64_t v7 = v3;
  v7[1] = sub_10015316C;
  return sub_100151EB8(v2, v0);
}

uint64_t sub_10015316C()
{
  sub_100020958();
  sub_1000447B0();
  *(void *)(v1 + 712) = v0;
  swift_task_dealloc();
  sub_100043E7C();
  return _swift_task_switch(v2, v3, v4);
}

uint64_t sub_100153240()
{
  uint64_t v63 = v0;
  uint64_t v1 = (void *)sub_100151520(*(void *)(v0 + 672), *(void *)(v0 + 680));
  if (v1)
  {
    uint64_t v2 = v1;
    if ([v1 isEqual:*(void *)(v0 + 712)])
    {
      uint64_t v3 = v0 + 560;
      uint64_t v4 = v0 + 624;
      uint64_t v5 = *(void *)(v0 + 688);
      sub_100043478(&qword_10022E560);
      uint64_t v6 = type metadata accessor for LogMessage();
      sub_100044798(v6);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      uint64_t v7 = type metadata accessor for NotificationSettingsEventManager();
      *(void *)(v0 + 584) = v7;
      *(void *)(v0 + 560) = v5;
      swift_retain();
      id v8 = (id)AMSLogKey();
      if (v8)
      {
        uint64_t v9 = v8;
        uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v11 = v10;

        swift_bridgeObjectRetain();
        sub_1000208BC();
        sub_100020E60();
        sub_100049788((void *)(v0 + 560), v7);
        uint64_t DynamicType = swift_getDynamicType();
        *(void *)(v0 + 168) = swift_getMetatypeMetadata();
        *(void *)(v0 + 144) = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8(v0 + 144, &qword_10022F490);
        sub_100020E44();
        *(void *)(v0 + 392) = &type metadata for String;
        *(void *)(v0 + 368) = v61;
        *(void *)(v0 + 376) = v11;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        uint64_t v3 = v0 + 560;
        sub_100027BD8(v0 + 368, &qword_10022F490);
        sub_1000208D8();
        LogMessage.init(stringInterpolation:)();
        uint64_t v4 = v0 + 624;
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100020E78();
        sub_100020E60();
        sub_100049788((void *)(v0 + 560), v7);
        uint64_t v53 = swift_getDynamicType();
        *(void *)(v0 + 616) = swift_getMetatypeMetadata();
        *(void *)(v0 + 592) = v53;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100027BD8(v0 + 592, &qword_10022F490);
        sub_100020E94();
        LogMessage.init(stringInterpolation:)();
      }
      uint64_t v54 = *(void *)(v0 + 680);
      uint64_t v55 = *(void *)(v0 + 672);
      sub_10004377C(v3);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_10002064C();
      v56._uint64_t countAndFlagsBits = 0xD000000000000013;
      LogMessage.StringInterpolation.appendLiteral(_:)(v56);
      *(void *)(v0 + 648) = &type metadata for String;
      *(void *)(v0 + 624) = v55;
      *(void *)(v0 + 632) = v54;
      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100027BD8(v4, &qword_10022F490);
      sub_100020E60();
      LogMessage.init(stringInterpolation:)();
      if (qword_10022C460 != -1) {
        swift_once();
      }
      uint64_t v57 = *(void **)(v0 + 712);
      uint64_t v58 = static os_log_type_t.default.getter();
      sub_10004841C(v58);

      swift_bridgeObjectRelease();
      swift_task_dealloc();
      sub_100040954();
      return v59();
    }
  }
  uint64_t v13 = *(void *)(v0 + 688);
  uint64_t v14 = *(void *)(v0 + 680);
  uint64_t v15 = *(void *)(v0 + 672);
  sub_100043478(&qword_10022D330);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1001C74E0;
  *(void *)(v16 + 32) = 7368801;
  *(void *)(v16 + 40) = 0xE300000000000000;
  *(void *)(v16 + 48) = v15;
  *(void *)(v16 + 56) = v14;
  *(void *)(v16 + 72) = &type metadata for String;
  *(void *)(v16 + 80) = 0x4379616C70736964;
  *(void *)(v16 + 88) = 0xEF61697265746972;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_100154CD4();
  uint64_t v18 = sub_100043478(&qword_10022D7B0);
  *(void *)(v16 + 96) = v17;
  *(void *)(v16 + 120) = v18;
  *(void *)(v16 + 128) = 0x707954746E657665;
  *(void *)(v16 + 136) = 0xE900000000000065;
  *(void *)(v16 + 144) = 0x6B63696C63;
  *(void *)(v16 + 152) = 0xE500000000000000;
  *(void *)(v16 + 168) = &type metadata for String;
  strcpy((char *)(v16 + 176), "eventVersion");
  *(unsigned char *)(v16 + 189) = 0;
  *(_WORD *)(v16 + 190) = -5120;
  *(void *)(v16 + 192) = 5;
  *(void *)(v16 + 216) = &type metadata for Int;
  *(void *)(v16 + 224) = 0x746E6F4365676170;
  *(void *)(v16 + 232) = 0xEB00000000747865;
  *(void *)(v16 + 240) = 0xD000000000000018;
  *(void *)(v16 + 248) = 0x80000001001D5960;
  *(void *)(v16 + 264) = &type metadata for String;
  *(void *)(v16 + 272) = 0x6570795465676170;
  *(void *)(v16 + 280) = 0xE800000000000000;
  *(void *)(v16 + 288) = 0x73676E6974746553;
  *(void *)(v16 + 296) = 0xE800000000000000;
  *(void *)(v16 + 312) = &type metadata for String;
  *(void *)(v16 + 320) = 0x6369706F74;
  *(void *)(v16 + 360) = &type metadata for String;
  *(void *)(v16 + 328) = 0xE500000000000000;
  *(void *)(v16 + 336) = 0xD000000000000014;
  sub_100020640();
  *(void *)(v16 + 344) = v19;
  *(void *)(v0 + 664) = Dictionary.init(dictionaryLiteral:)();
  sub_100049788((void *)(v13 + 16), *(void *)(v13 + 40));
  uint64_t v20 = sub_10004C220();
  uint64_t v22 = (void *)v21(v20);
  if (v22)
  {
    uint64_t v23 = v22;
    id v24 = objc_msgSend(v22, "ams_DSID");

    if (v24)
    {
      id v25 = [v24 stringValue];

      uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v28 = v27;

      void v62[3] = &type metadata for String;
      v62[0] = v26;
      v62[1] = v28;
      sub_10003E698((uint64_t)v62, 1684632420, 0xE400000000000000);
    }
  }
  id v29 = (id)AMSLogKey();
  if (v29)
  {
    uint64_t v30 = v29;
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v33 = v32;
  }
  else
  {
    uint64_t v31 = 0;
    uint64_t v33 = 0;
  }
  *(void *)(v0 + 728) = v33;
  *(void *)(v0 + 720) = v31;
  uint64_t v34 = *(void *)(v0 + 688);
  *(void *)(v0 + 736) = sub_100043478(&qword_10022E560);
  uint64_t v35 = type metadata accessor for LogMessage();
  sub_100044798(v35);
  *(void *)(v0 + 744) = *(void *)(v36 + 72);
  *(_DWORD *)(v0 + 784) = *(_DWORD *)(v37 + 80);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v38 = type metadata accessor for NotificationSettingsEventManager();
  *(void *)(v0 + 752) = v38;
  *(void *)(v0 + 72) = v38;
  *(void *)(v0 + 48) = v34;
  if (v33)
  {
    uint64_t v39 = v0 + 528;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100049788((void *)(v0 + 48), v38);
    uint64_t v40 = swift_getDynamicType();
    *(void *)(v0 + 520) = swift_getMetatypeMetadata();
    *(void *)(v0 + 496) = v40;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8(v0 + 496, &qword_10022F490);
    sub_100020E44();
    uint64_t v41 = v31;
    uint64_t v42 = v0 + 48;
    *(void *)(v0 + 552) = &type metadata for String;
    *(void *)(v0 + 528) = v41;
    uint64_t v43 = 93;
    *(void *)(v0 + 536) = v33;
  }
  else
  {
    uint64_t v39 = v0 + 80;
    swift_retain();
    sub_100020E78();
    sub_100020E60();
    sub_100049788((void *)(v0 + 48), v38);
    uint64_t v44 = swift_getDynamicType();
    *(void *)(v0 + 104) = swift_getMetatypeMetadata();
    *(void *)(v0 + 80) = v44;
    uint64_t v43 = 58;
    uint64_t v42 = v0 + 48;
  }
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100027BD8(v39, &qword_10022F490);
  uint64_t v45 = *(void *)(v0 + 680);
  uint64_t v46 = *(void *)(v0 + 672);
  v47._uint64_t countAndFlagsBits = v43;
  v47._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v47);
  sub_100040C54();
  sub_10004377C(v42);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  sub_10002064C();
  LogMessage.StringInterpolation.appendLiteral(_:)(v48);
  *(void *)(v0 + 136) = &type metadata for String;
  *(void *)(v0 + 112) = v46;
  *(void *)(v0 + 120) = v45;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100027BD8(v0 + 112, &qword_10022F490);
  sub_100020E60();
  sub_100040C54();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v49 = *(void *)(v0 + 688);
  uint64_t v50 = static os_log_type_t.default.getter();
  sub_10004841C(v50);
  swift_bridgeObjectRelease();
  uint64_t v51 = swift_task_alloc();
  *(void *)(v0 + 760) = v51;
  *(void *)(v51 + 16) = v49;
  *(void *)(v51 + 24) = v0 + 664;
  uint64_t v52 = (void *)swift_task_alloc();
  *(void *)(v0 + 768) = v52;
  sub_10004D510(0, (unint64_t *)&qword_10022F358);
  *uint64_t v52 = v0;
  v52[1] = sub_100153B98;
  sub_100043E7C();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)();
}

uint64_t sub_100153B98()
{
  sub_100020958();
  sub_1000447B0();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_100020EBC();
  *uint64_t v5 = v4;
  *(void *)(v3 + 776) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  sub_100043E7C();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t sub_100153C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_10004A400();
  uint64_t v14 = v12[94];
  uint64_t v15 = (void *)v12[91];
  uint64_t v16 = v12[86];
  sub_100150F88(v12[89], v12[84], v12[85]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  v12[45] = v14;
  v12[42] = v16;
  if (v15)
  {
    uint64_t v17 = v12 + 58;
    uint64_t v15 = v12 + 54;
    uint64_t v18 = v12[91];
    uint64_t v13 = v12[90];
    sub_100046CF4();
    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100049788(v12 + 42, v12[45]);
    uint64_t DynamicType = swift_getDynamicType();
    v12[57] = swift_getMetatypeMetadata();
    v12[54] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)(v12 + 54), &qword_10022F490);
    sub_100020E44();
    v12[61] = &type metadata for String;
    v12[58] = v13;
    v12[59] = v18;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)(v12 + 58), &qword_10022F490);
    sub_1000208D8();
    sub_100040C54();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100046CF4();
    sub_100020E78();
    sub_100020E60();
    sub_100049788(v12 + 42, v12[45]);
    uint64_t v20 = swift_getDynamicType();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    v12[2] = v20;
    uint64_t v17 = v12 + 2;
    v12[5] = MetatypeMetadata;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8((uint64_t)(v12 + 2), &qword_10022F490);
    sub_100020E94();
    sub_100040C54();
  }
  sub_100020B84();
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  sub_10002064C();
  v22._uint64_t countAndFlagsBits = 0xD000000000000020;
  LogMessage.StringInterpolation.appendLiteral(_:)(v22);
  v12[53] = &type metadata for String;
  v12[50] = v13;
  v12[51] = v17;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100027BD8((uint64_t)(v12 + 50), &qword_10022F490);
  sub_100020E60();
  LogMessage.init(stringInterpolation:)();
  uint64_t v23 = static os_log_type_t.default.getter();
  sub_10004841C(v23);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_100040954();
  sub_10004A60C();
  return v25(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10, a11, a12);
}

uint64_t sub_100153EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_10004A400();
  uint64_t v14 = *(void *)(v12 + 752);
  uint64_t v15 = *(void *)(v12 + 728);
  uint64_t v16 = *(void *)(v12 + 688);
  uint64_t v17 = (char *)((*(unsigned __int8 *)(v12 + 784) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 784));
  swift_task_dealloc();
  uint64_t v18 = swift_allocObject();
  *(void *)(v12 + 176) = v16;
  *(_OWORD *)(v18 + 16) = xmmword_1001C3120;
  uint64_t v35 = &v17[v18];
  *(void *)(v12 + 200) = v14;
  if (v15)
  {
    uint64_t v19 = v12 + 304;
    uint64_t v17 = (char *)(v12 + 272);
    uint64_t v20 = *(void *)(v12 + 728);
    uint64_t v13 = *(void *)(v12 + 720);
    sub_100046CF4();
    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100049788((void *)(v12 + 176), *(void *)(v12 + 200));
    uint64_t DynamicType = swift_getDynamicType();
    *(void *)(v12 + 296) = swift_getMetatypeMetadata();
    *(void *)(v12 + 272) = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8(v12 + 272, &qword_10022F490);
    sub_100020E44();
    *(void *)(v12 + 328) = &type metadata for String;
    *(void *)(v12 + 304) = v13;
    *(void *)(v12 + 312) = v20;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8(v12 + 304, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100046CF4();
    sub_100020E78();
    sub_100020E60();
    sub_100049788((void *)(v12 + 176), *(void *)(v12 + 200));
    uint64_t v22 = swift_getDynamicType();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    *(void *)(v12 + 208) = v22;
    uint64_t v19 = v12 + 208;
    *(void *)(v12 + 232) = MetatypeMetadata;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100027BD8(v12 + 208, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_100020B84();
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  sub_10002064C();
  v24._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v24);
  *(void *)(v12 + 264) = &type metadata for String;
  *(void *)(v12 + 240) = v13;
  *(void *)(v12 + 248) = v19;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100027BD8(v12 + 240, &qword_10022F490);
  sub_100020E60();
  LogMessage.init(stringInterpolation:)();
  uint64_t v25 = static os_log_type_t.error.getter();
  sub_10004841C(v25);

  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_100040954();
  sub_10004A60C();
  return v27(v26, v27, v28, v29, v30, v31, v32, v33, v35, a10, a11, a12);
}

void sub_100154184(uint64_t a1, void *a2)
{
  uint64_t v24 = a1;
  uint64_t v4 = sub_100043478(&qword_100232300);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a2 + 9;
  uint64_t v10 = a2[12];
  uint64_t v9 = a2[13];
  sub_100049788(v8, v10);
  uint64_t v11 = swift_bridgeObjectRetain();
  sub_1000119BC(v11);
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  uint64_t v14 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8))(v13, v10, v9);
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v23(v7, a1, v4);
  uint64_t v15 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v16 = (v15 + 16) & ~v15;
  v22[1] = v15 | 7;
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v18(v17 + v16, v7, v4);
  uint64_t v29 = sub_100155FC8;
  uint64_t v30 = v17;
  aBlock = _NSConcreteStackBlock;
  uint64_t v26 = 1107296256;
  uint64_t v27 = (void (*)(uint64_t, void *))sub_1000FE3F8;
  uint64_t v28 = &unk_100215628;
  uint64_t v19 = _Block_copy(&aBlock);
  swift_release();
  [v14 addSuccessBlock:v19];
  _Block_release(v19);
  v23(v7, v24, v4);
  uint64_t v20 = swift_allocObject();
  v18(v20 + v16, v7, v4);
  uint64_t v29 = sub_100155FE0;
  uint64_t v30 = v20;
  aBlock = _NSConcreteStackBlock;
  uint64_t v26 = 1107296256;
  uint64_t v27 = sub_100181204;
  uint64_t v28 = &unk_100215678;
  uint64_t v21 = _Block_copy(&aBlock);
  swift_release();
  [v14 addErrorBlock:v21];
  _Block_release(v21);
}

uint64_t sub_100154478(void *a1, uint64_t a2, uint64_t *a3)
{
  id v4 = a1;
  sub_100043478(a3);
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_1001544C0()
{
  return CheckedContinuation.resume(throwing:)();
}

uint64_t sub_100154508()
{
  sub_10004377C(v0 + 16);
  swift_bridgeObjectRelease();
  sub_10004377C(v0 + 72);
  sub_10004377C(v0 + 112);
  return v0;
}

uint64_t sub_100154540()
{
  sub_100154508();
  return swift_deallocClassInstance();
}

id sub_100154574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[OBJC_IVAR____TtC14amsengagementd15DisplayCriteria_explicitContentSetting] = a1;
  *(void *)&v3[OBJC_IVAR____TtC14amsengagementd15DisplayCriteria_notificationSettings] = a2;
  *(void *)&v3[OBJC_IVAR____TtC14amsengagementd15DisplayCriteria_notificationSettingsForTopics] = a3;
  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for DisplayCriteria();
  return objc_msgSendSuper2(&v5, "init");
}

uint64_t sub_1001545CC()
{
  return byte_100232120;
}

uint64_t sub_1001545F4(uint64_t result)
{
  byte_100232120 = result;
  return result;
}

void sub_10015461C(void *a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC14amsengagementd15DisplayCriteria_explicitContentSetting);
  NSString v4 = sub_10004A760();
  [a1 encodeInteger:v3 forKey:v4];

  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC14amsengagementd15DisplayCriteria_notificationSettings);
  NSString v6 = sub_100043A48();
  [a1 encodeObject:v5 forKey:v6];

  sub_10004D510(0, (unint64_t *)&unk_1002322E0);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  NSString v8 = sub_10004A760();
  [a1 encodeObject:isa forKey:v8];
}

id sub_1001547C0(void *a1)
{
  uint64_t v3 = v1;
  NSString v4 = sub_10004A760();
  id v5 = [a1 decodeIntegerForKey:v4];

  NSString v6 = sub_100043A48();
  id v7 = [a1 decodeObjectForKey:v6];

  if (v7)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v16 = 0u;
    long long v17 = 0u;
  }
  sub_1000837D8((uint64_t)&v16, (uint64_t)v18, &qword_10022F490);
  if (!v19)
  {

LABEL_15:
    sub_100027BD8((uint64_t)v18, &qword_10022F490);
    goto LABEL_16;
  }
  sub_10004D510(0, (unint64_t *)&unk_1002322E0);
  if ((sub_1000410A0() & 1) == 0)
  {

LABEL_16:
    type metadata accessor for DisplayCriteria();
    swift_deallocPartialClassInstance();
    return 0;
  }
  id v8 = v15;
  NSString v9 = sub_10004A760();
  id v10 = [a1 decodeObjectForKey:v9];

  if (v10)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v16 = 0u;
    long long v17 = 0u;
  }
  sub_1000837D8((uint64_t)&v16, (uint64_t)v18, &qword_10022F490);
  if (!v19)
  {

    goto LABEL_15;
  }
  sub_100043478((uint64_t *)&unk_1002322F0);
  if ((sub_1000410A0() & 1) == 0)
  {

    goto LABEL_16;
  }
  id v11 = v15;
  *(void *)&v3[OBJC_IVAR____TtC14amsengagementd15DisplayCriteria_explicitContentSetting] = v5;
  *(void *)&v3[OBJC_IVAR____TtC14amsengagementd15DisplayCriteria_notificationSettings] = v8;
  *(void *)&v3[OBJC_IVAR____TtC14amsengagementd15DisplayCriteria_notificationSettingsForTopics] = v11;

  v14.receiver = v3;
  v14.super_class = (Class)type metadata accessor for DisplayCriteria();
  id v12 = objc_msgSendSuper2(&v14, "init");

  return v12;
}

uint64_t sub_100154A54(uint64_t a1)
{
  sub_100043410(a1, (uint64_t)v8);
  if (!v8[3])
  {
    sub_100027BD8((uint64_t)v8, &qword_10022F490);
    return 0;
  }
  type metadata accessor for DisplayCriteria();
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (*(void *)&v7[OBJC_IVAR____TtC14amsengagementd15DisplayCriteria_explicitContentSetting] != *(void *)(v1 + OBJC_IVAR____TtC14amsengagementd15DisplayCriteria_explicitContentSetting)
    || ![*(id *)&v7[OBJC_IVAR____TtC14amsengagementd15DisplayCriteria_notificationSettings] isEqual:*(void *)(v1 + OBJC_IVAR____TtC14amsengagementd15DisplayCriteria_notificationSettings)])
  {

    return 0;
  }
  sub_10004D510(0, (unint64_t *)&unk_1002322E0);
  v2.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v3.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v8[0] = 0;
  uint64_t result = static Dictionary._forceBridgeFromObjectiveC(_:result:)();
  if (v8[0])
  {
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v6 = [(objc_class *)v2.super.isa isEqualToDictionary:isa];

    return (uint64_t)v6;
  }
  __break(1u);
  return result;
}

uint64_t sub_100154C94(uint64_t a1)
{
  uint64_t v1 = 0x6E61656C63;
  if (a1) {
    uint64_t v1 = 0;
  }
  if (a1 == 1) {
    return 0x746963696C707865;
  }
  else {
    return v1;
  }
}

uint64_t sub_100154CD4()
{
  uint64_t v1 = 0x746963696C707865;
  uint64_t v10 = sub_100154DF4();
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC14amsengagementd15DisplayCriteria_explicitContentSetting);
  if (v2)
  {
    if (v2 != 1) {
      goto LABEL_6;
    }
    unint64_t v3 = 0xE800000000000000;
  }
  else
  {
    unint64_t v3 = 0xE500000000000000;
    uint64_t v1 = 0x6E61656C63;
  }
  NSString v9 = &type metadata for String;
  v8[0] = v1;
  v8[1] = v3;
  sub_10003E698((uint64_t)v8, 0x746963696C707865, 0xEF64656C62616E45);
LABEL_6:
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC14amsengagementd15DisplayCriteria_notificationSettingsForTopics);
  if (*(void *)(v4 + 16))
  {
    sub_100155DB0(v4);
    uint64_t v6 = v5;
    NSString v9 = (void *)sub_100043478(&qword_100230810);
    v8[0] = v6;
    sub_10003E698((uint64_t)v8, 0x6974636573627573, 0xEB00000000736E6FLL);
  }
  return v10;
}

uint64_t sub_100154DF4()
{
  sub_100043478(&qword_10022D330);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C64A0;
  strcpy((char *)(inited + 32), "alertSetting");
  *(unsigned char *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(void *)(inited + 48) = UNNotificationSetting.description.getter((uint64_t)[v0 alertSetting]);
  *(void *)(inited + 56) = v2;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = 0x7974537472656C61;
  *(void *)(inited + 88) = 0xEA0000000000656CLL;
  *(void *)(inited + 96) = UNAlertStyle.description.getter((uint64_t)[v0 alertStyle]);
  *(void *)(inited + 104) = v3;
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 128) = 0xD000000000000013;
  sub_100020640();
  *(void *)(inited + 136) = v4;
  *(void *)(inited + 144) = UNNotificationSetting.description.getter((uint64_t)[v0 announcementSetting]);
  *(void *)(inited + 152) = v5;
  *(void *)(inited + 168) = &type metadata for String;
  *(void *)(inited + 176) = 0xD000000000000013;
  sub_100020640();
  *(void *)(inited + 184) = v6;
  [v0 authorizationStatus];
  UNAuthorizationStatus.description.getter();
  *(void *)(inited + 192) = v7;
  *(void *)(inited + 200) = v8;
  *(void *)(inited + 216) = &type metadata for String;
  strcpy((char *)(inited + 224), "badgeSetting");
  *(unsigned char *)(inited + 237) = 0;
  *(_WORD *)(inited + 238) = -5120;
  *(void *)(inited + 240) = UNNotificationSetting.description.getter((uint64_t)[v0 badgeSetting]);
  *(void *)(inited + 248) = v9;
  *(void *)(inited + 264) = &type metadata for String;
  strcpy((char *)(inited + 272), "carPlaySetting");
  *(unsigned char *)(inited + 287) = -18;
  *(void *)(inited + 288) = UNNotificationSetting.description.getter((uint64_t)[v0 carPlaySetting]);
  *(void *)(inited + 296) = v10;
  *(void *)(inited + 312) = &type metadata for String;
  *(void *)(inited + 320) = 0xD000000000000014;
  sub_100020640();
  *(void *)(inited + 328) = v11;
  *(void *)(inited + 336) = UNNotificationSetting.description.getter((uint64_t)[v0 criticalAlertSetting]);
  *(void *)(inited + 344) = v12;
  *(void *)(inited + 360) = &type metadata for String;
  *(void *)(inited + 368) = 0xD000000000000015;
  sub_100045298();
  *(void *)(inited + 376) = v13;
  *(void *)(inited + 384) = UNNotificationSetting.description.getter((uint64_t)[v0 directMessagesSetting]);
  *(void *)(inited + 392) = v14;
  *(void *)(inited + 408) = &type metadata for String;
  *(void *)(inited + 416) = 0x676E6970756F7267;
  *(void *)(inited + 424) = 0xEF676E6974746553;
  *(void *)(inited + 432) = UNNotificationGroupingSetting.description.getter((uint64_t)[v0 groupingSetting]);
  *(void *)(inited + 440) = v15;
  *(void *)(inited + 456) = &type metadata for String;
  *(void *)(inited + 464) = 0xD000000000000011;
  sub_100045298();
  *(void *)(inited + 472) = v16;
  *(void *)(inited + 480) = UNNotificationSetting.description.getter((uint64_t)[v0 lockScreenSetting]);
  *(void *)(inited + 488) = v17;
  *(void *)(inited + 504) = &type metadata for String;
  *(void *)(inited + 512) = 0xD000000000000019;
  sub_100045298();
  *(void *)(inited + 520) = v18;
  uint64_t v19 = UNNotificationSetting.description.getter((uint64_t)[v0 notificationCenterSetting]);
  *(void *)(inited + 552) = &type metadata for String;
  *(void *)(inited + 528) = v19;
  *(void *)(inited + 536) = v20;
  *(void *)(inited + 560) = 0xD00000000000001FLL;
  sub_100045298();
  *(void *)(inited + 568) = v21;
  unsigned int v22 = [v0 providesAppNotificationSettings];
  uint64_t v23 = 28526;
  if (v22) {
    uint64_t v23 = 7562617;
  }
  unint64_t v24 = 0xE200000000000000;
  if (v22) {
    unint64_t v24 = 0xE300000000000000;
  }
  *(void *)(inited + 600) = &type metadata for String;
  *(void *)(inited + 576) = v23;
  *(void *)(inited + 584) = v24;
  *(void *)(inited + 608) = 0xD000000000000018;
  sub_100045298();
  *(void *)(inited + 616) = v25;
  uint64_t v26 = UNNotificationSetting.description.getter((uint64_t)[v0 scheduledDeliverySetting]);
  *(void *)(inited + 648) = &type metadata for String;
  *(void *)(inited + 624) = v26;
  *(void *)(inited + 632) = v27;
  *(void *)(inited + 656) = 0xD000000000000013;
  sub_100020640();
  *(void *)(inited + 664) = v28;
  uint64_t v29 = UNShowPreviewsSetting.description.getter((uint64_t)[v0 showPreviewsSetting]);
  *(void *)(inited + 696) = &type metadata for String;
  *(void *)(inited + 672) = v29;
  *(void *)(inited + 680) = v30;
  strcpy((char *)(inited + 704), "soundSetting");
  *(unsigned char *)(inited + 717) = 0;
  *(_WORD *)(inited + 718) = -5120;
  uint64_t v31 = UNNotificationSetting.description.getter((uint64_t)[v0 soundSetting]);
  *(void *)(inited + 744) = &type metadata for String;
  *(void *)(inited + 720) = v31;
  *(void *)(inited + 728) = v32;
  *(void *)(inited + 752) = 0xD000000000000014;
  sub_100020640();
  *(void *)(inited + 760) = v33;
  uint64_t v34 = UNNotificationSetting.description.getter((uint64_t)[v0 timeSensitiveSetting]);
  *(void *)(inited + 792) = &type metadata for String;
  *(void *)(inited + 768) = v34;
  *(void *)(inited + 776) = v35;
  sub_10004C220();
  return Dictionary.init(dictionaryLiteral:)();
}

void sub_1001551E4()
{
}

id sub_100155224()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DisplayCriteria();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_1001552A4()
{
  return sub_1001552C8();
}

id sub_1001552C8()
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  id v2 = [v0 enqueueData:isa];

  return v2;
}

uint64_t UNAlertStyle.description.getter(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      return 1701736302;
    case 2:
      return 0x7472656C61;
    case 1:
      return 0x72656E6E6162;
  }
  uint64_t result = sub_100048F10();
  __break(1u);
  return result;
}

uint64_t sub_1001553B0()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100155440()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1001554C0()
{
  return UNAlertStyle.description.getter(*v0);
}

void UNAuthorizationStatus.description.getter()
{
}

uint64_t sub_1001555C8()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100155658()
{
  return RawRepresentable<>.encode(to:)();
}

void sub_1001556D8()
{
}

uint64_t UNNotificationGroupingSetting.description.getter(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      return 0x746C7561666564;
    case 1:
      return 0x656372756F73;
    case 2:
      return 6710895;
  }
  uint64_t result = sub_100048F10();
  __break(1u);
  return result;
}

uint64_t sub_100155764()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1001557F4()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100155874()
{
  return UNNotificationGroupingSetting.description.getter(*v0);
}

uint64_t UNNotificationSetting.description.getter(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      return 0x6F70707553746F6ELL;
    case 1:
      return 0x64656C6261736964;
    case 2:
      return 0x64656C62616E65;
  }
  uint64_t result = sub_100048F10();
  __break(1u);
  return result;
}

uint64_t sub_100155914()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1001559A4()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100155A24()
{
  return UNNotificationSetting.description.getter(*v0);
}

uint64_t UNShowPreviewsSetting.description.getter(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      return 0x737961776C61;
    case 1:
      sub_10002064C();
      return 0xD000000000000011;
    case 2:
      return 0x726576656ELL;
    default:
      uint64_t result = sub_100048F10();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_100155ABC()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100155B4C()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100155BCC()
{
  return UNShowPreviewsSetting.description.getter(*v0);
}

uint64_t type metadata accessor for NotificationSettingsEventManager()
{
  return self;
}

uint64_t type metadata accessor for DisplayCriteria()
{
  return self;
}

uint64_t sub_100155C1C(int *a1)
{
  uint64_t v4 = (uint64_t (*)(void))((char *)a1 + *a1);
  id v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *id v2 = v1;
  v2[1] = sub_100155CE8;
  return v4();
}

uint64_t sub_100155CE8()
{
  sub_100020958();
  sub_1000447B0();
  uint64_t v1 = *v0;
  sub_100020EBC();
  *id v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

void sub_100155DB0(uint64_t a1)
{
  sub_100043478((uint64_t *)&unk_1002322D0);
  uint64_t v2 = static _DictionaryStorage.copy(original:)();
  uint64_t v3 = (void *)v2;
  int64_t v4 = 0;
  uint64_t v29 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = a1 + 64;
  uint64_t v5 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v5;
  uint64_t v27 = v6;
  int64_t v28 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v2 + 64;
  if ((v9 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v12 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v4 << 6))
  {
    uint64_t v17 = (uint64_t *)(*(void *)(v29 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = *(void **)(*(void *)(v29 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    id v21 = v20;
    uint64_t v22 = sub_100154DF4();

    *(void *)(v11 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v23 = (void *)(v3[6] + 16 * i);
    *uint64_t v23 = v18;
    v23[1] = v19;
    *(void *)(v3[7] + 8 * i) = v22;
    uint64_t v24 = v3[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v26;
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v14 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v14 >= v28) {
      return;
    }
    unint64_t v15 = *(void *)(v27 + 8 * v14);
    ++v4;
    if (!v15)
    {
      int64_t v4 = v14 + 1;
      if (v14 + 1 >= v28) {
        return;
      }
      unint64_t v15 = *(void *)(v27 + 8 * v4);
      if (!v15)
      {
        int64_t v4 = v14 + 2;
        if (v14 + 2 >= v28) {
          return;
        }
        unint64_t v15 = *(void *)(v27 + 8 * v4);
        if (!v15) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v10 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v28) {
    return;
  }
  unint64_t v15 = *(void *)(v27 + 8 * v16);
  if (v15)
  {
    int64_t v4 = v16;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v4 >= v28) {
      return;
    }
    unint64_t v15 = *(void *)(v27 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
}

void sub_100155FB4(uint64_t a1)
{
  sub_100154184(a1, *(void **)(v1 + 16));
}

uint64_t sub_100155FBC()
{
  return sub_10000E704(&qword_100232300);
}

uint64_t sub_100155FC8()
{
  return sub_100156468();
}

uint64_t sub_100155FD4()
{
  return sub_10000E704(&qword_100232300);
}

uint64_t sub_100155FE0(uint64_t a1)
{
  return sub_100156000(a1, &qword_100232300, (uint64_t (*)(uint64_t, uint64_t))sub_1001544C0);
}

uint64_t sub_100156000(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = sub_100043478(a2);
  sub_100044E90(v5);
  uint64_t v7 = v3 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a3(a1, v7);
}

uint64_t sub_100156064()
{
  sub_100041F70();
  sub_100040A08();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_10002219C(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_100045A38;
  return sub_100152B78(v2, v0, v3);
}

uint64_t sub_10015610C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100156154()
{
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10002219C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100052880;
  sub_10004C220();
  return sub_100152FF0();
}

uint64_t sub_100156208()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100156240()
{
  sub_100041F70();
  uint64_t v1 = *(int **)(v0 + 16);
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)sub_10002219C(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_100052880;
  uint64_t v5 = (uint64_t (*)(int *))((char *)&dword_100232330 + dword_100232330);
  return v5(v1);
}

uint64_t sub_1001562E4()
{
  sub_100020958();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_10002219C(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_100052880;
  return sub_1001522D8(v2, v3);
}

uint64_t sub_10015637C()
{
  sub_100020958();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_10002219C(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_100045A38;
  return sub_10015258C(v2, v3);
}

void sub_100156414(uint64_t a1)
{
  sub_100152770(a1, *(void **)(v1 + 16));
}

uint64_t sub_10015641C()
{
  return sub_10000E704(&qword_100232368);
}

uint64_t sub_100156428(uint64_t a1)
{
  return sub_100156000(a1, &qword_100232368, (uint64_t (*)(uint64_t, uint64_t))sub_100152918);
}

void sub_100156448(uint64_t a1)
{
  sub_1001523E4(a1, *(void **)(v1 + 16));
}

uint64_t sub_100156450()
{
  return sub_10000E704((uint64_t *)&unk_100232370);
}

uint64_t sub_10015645C()
{
  return sub_100156468();
}

uint64_t sub_100156468()
{
  sub_100040A08();
  uint64_t v4 = sub_100043478(v3);
  sub_100044E90(v4);
  return sub_100154478(v2, v1 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), v0);
}

uint64_t sub_1001564B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10015651C()
{
  if ([v0 code] == (id)4 || objc_msgSend(v0, "code") == (id)260)
  {
    id v1 = [v0 domain];
    uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v4 = v3;

    if (v2 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v4 == v5) {
      char v7 = 1;
    }
    else {
      char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_1001565FC()
{
  id v1 = [v0 userInfo];
  uint64_t v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10004D120(0x7574617453534D41, 0xED000065646F4373, v2, &v5);
  swift_bridgeObjectRelease();
  if (v6)
  {
    if (swift_dynamicCast()) {
      return v4;
    }
  }
  else
  {
    sub_1000423CC((uint64_t)&v5);
  }
  return 0;
}

uint64_t sub_1001566E8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  sub_100020EAC();
  uint64_t v6 = sub_100043478(&qword_10022FB40);
  __chkstk_darwin(v6 - 8);
  sub_100020EAC();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  sub_100020EAC();
  uint64_t v14 = v13 - v12;
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)v38, a1, &v39);
  sub_1000434BC((uint64_t)v38);
  if (!v40)
  {
    sub_10002CC0C((uint64_t)&v39, &qword_10022F490);
LABEL_7:
    sub_100043478(&qword_10022E560);
    uint64_t v17 = type metadata accessor for LogMessage();
    sub_100044798(v17);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v18 = sub_100043478(&qword_1002324C8);
    sub_10004B5B0(v18);
    if (v2)
    {
LABEL_8:
      uint64_t v19 = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100044C20();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_10004696C(MetatypeMetadata);
      sub_100045390();
      sub_100020E44();
      uint64_t v40 = &type metadata for String;
      *(void *)&long long v39 = v19;
      *((void *)&v39 + 1) = v2;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100045390();
      uint64_t v21 = 93;
LABEL_10:
      unint64_t v23 = 0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v21);
      LogMessage.init(stringInterpolation:)();
      sub_10004377C((uint64_t)v38);
      LogMessage.init(stringLiteral:)();
      if (qword_10022C460 != -1) {
        swift_once();
      }
      uint64_t v24 = static os_log_type_t.error.getter();
      sub_10004841C(v24);
      return swift_bridgeObjectRelease();
    }
LABEL_9:
    sub_100020E78();
    sub_100020E60();
    sub_100044C20();
    uint64_t v22 = swift_getMetatypeMetadata();
    sub_10004696C(v22);
    sub_10002CC0C((uint64_t)&v39, &qword_10022F490);
    uint64_t v21 = 58;
    goto LABEL_10;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_7;
  }
  URL.init(string:)();
  swift_bridgeObjectRelease();
  if (sub_10004FD40(v9, 1, v10) == 1)
  {
    sub_10002CC0C(v9, &qword_10022FB40);
    sub_100043478(&qword_10022E560);
    uint64_t v15 = type metadata accessor for LogMessage();
    sub_100044798(v15);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v16 = sub_100043478(&qword_1002324C8);
    sub_10004B5B0(v16);
    if (v2) {
      goto LABEL_8;
    }
    goto LABEL_9;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v14, v9, v10);
  sub_100043478(&qword_10022E560);
  uint64_t v26 = type metadata accessor for LogMessage();
  sub_100044798(v26);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v27 = sub_100043478(&qword_1002324C8);
  sub_10004B5B0(v27);
  if (v2)
  {
    uint64_t v37 = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100044C20();
    uint64_t v28 = swift_getMetatypeMetadata();
    sub_10004696C(v28);
    sub_100045390();
    sub_100020E44();
    uint64_t v40 = &type metadata for String;
    *(void *)&long long v39 = v37;
    *((void *)&v39 + 1) = v2;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100045390();
    uint64_t v29 = 93;
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    sub_100044C20();
    uint64_t v30 = swift_getMetatypeMetadata();
    sub_10004696C(v30);
    sub_10002CC0C((uint64_t)&v39, &qword_10022F490);
    uint64_t v29 = 58;
  }
  unint64_t v31 = 0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v29);
  LogMessage.init(stringInterpolation:)();
  sub_10004377C((uint64_t)v38);
  LogMessage.init(stringLiteral:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v32 = static os_log_type_t.default.getter();
  sub_10004841C(v32);
  swift_bridgeObjectRelease();
  uint64_t v33 = self;
  URL._bridgeToObjectiveC()(v34);
  uint64_t v36 = v35;
  [v33 openStandardURL:v35];

  return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v14, v10);
}

uint64_t type metadata accessor for OpenURLAction()
{
  return self;
}

uint64_t sub_100156DB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Data.init(contentsOf:options:)();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

uint64_t sub_100156DDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100043478(&qword_1002324D0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  JetpackBundle.init(bundleURL:)();
  uint64_t v11 = type metadata accessor for JetpackBundle();
  if (sub_10004FD40((uint64_t)v10, 1, v11) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a2, v10, v11);
  }
  sub_100156F9C((uint64_t)v10);
  sub_1000FAD60();
  swift_allocError();
  unsigned char *v12 = 0;
  return swift_willThrow();
}

uint64_t sub_100156F9C(uint64_t a1)
{
  uint64_t v2 = sub_100043478(&qword_1002324D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100156FFC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, id))
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_1000732A8();
    uint64_t v4 = _swiftEmptyArrayStorage;
    uint64_t v5 = sub_10015C0A8(a1);
    if ((v5 & 0x8000000000000000) == 0)
    {
      unint64_t v7 = v5;
      if (v5 < 1 << *(unsigned char *)(a1 + 32))
      {
        int v8 = v6;
        uint64_t v9 = a1 + 64;
        while ((*(void *)(v9 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
        {
          if (v8 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_18;
          }
          uint64_t v21 = v2;
          uint64_t v10 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v7);
          uint64_t v11 = v4;
          uint64_t v12 = *v10;
          uint64_t v13 = v10[1];
          uint64_t v14 = *(void **)(*(void *)(a1 + 56) + 8 * v7);
          swift_bridgeObjectRetain();
          id v15 = v14;
          uint64_t v16 = a2(v12, v13, v15);
          uint64_t v4 = v11;
          uint64_t v17 = v16;

          swift_bridgeObjectRelease();
          unint64_t v18 = v4[2];
          if (v18 >= v4[3] >> 1) {
            sub_1000732A8();
          }
          v4[2] = v18 + 1;
          v4[v18 + 4] = v17;
          if ((uint64_t)v7 >= -(-1 << *(unsigned char *)(a1 + 32))) {
            goto LABEL_19;
          }
          uint64_t v9 = a1 + 64;
          if ((*(void *)(a1 + 64 + 8 * (v7 >> 6)) & (1 << v7)) == 0) {
            goto LABEL_20;
          }
          if (v8 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_21;
          }
          uint64_t v19 = _HashTable.occupiedBucket(after:)();
          uint64_t v2 = v21 - 1;
          if (v21 == 1) {
            return;
          }
          unint64_t v7 = v19;
          if ((v19 & 0x8000000000000000) == 0)
          {
            int v8 = *(_DWORD *)(a1 + 36);
            if (v19 < 1 << *(unsigned char *)(a1 + 32)) {
              continue;
            }
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

id sub_1001571F4()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithTopic:v1];

  return v2;
}

id sub_100157268()
{
  NSString v1 = *(void **)(v0 + 16);
  if (v1)
  {
    id v2 = *(id *)(v0 + 16);
  }
  else
  {
    uint64_t v3 = v0;
    sub_10004D510(0, (unint64_t *)&qword_100232020);
    id v4 = sub_1000484EC();
    id v5 = objc_allocWithZone((Class)AMSMetrics);
    sub_10002064C();
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 initWithContainerID:v6 bag:v4];

    int v8 = *(void **)(v3 + 16);
    *(void *)(v3 + 16) = v7;
    id v2 = v7;

    NSString v1 = 0;
  }
  id v9 = v1;
  return v2;
}

id sub_100157330()
{
  sub_10002064C();
  NSString v0 = String._bridgeToObjectiveC()();
  sub_10004D510(0, (unint64_t *)&qword_100232020);
  id v1 = sub_1000484EC();
  id v2 = [v1 BOOLForKey:v0];

  id v3 = [v2 valuePromise];
  return v3;
}

void sub_1001573D8()
{
  id v1 = sub_100157330();
  int v8 = sub_100159B0C;
  uint64_t v9 = v0;
  id v4 = _NSConcreteStackBlock;
  uint64_t v5 = 1107296256;
  NSString v6 = sub_100181204;
  id v7 = &unk_100215818;
  id v2 = _Block_copy(&v4);
  swift_retain();
  swift_release();
  [v1 addErrorBlock:v2];
  _Block_release(v2);
  int v8 = sub_100159B30;
  uint64_t v9 = v0;
  id v4 = _NSConcreteStackBlock;
  uint64_t v5 = 1107296256;
  NSString v6 = (void (*)(uint64_t, void *))sub_1000FE3F8;
  id v7 = &unk_100215840;
  id v3 = _Block_copy(&v4);
  swift_retain();
  swift_release();
  [v1 addSuccessBlock:v3];
  _Block_release(v3);
}

void sub_100157538(void *a1, void **a2)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  if ([a1 BOOLValue])
  {
    id v5 = [objc_allocWithZone((Class)AMSSubscriptionEntitlementsTask) initWithMediaType:6];
    id v6 = [v5 performExternalLookup];

    uint64_t v26 = sub_100159B0C;
    uint64_t v27 = a2;
    aBlock = _NSConcreteStackBlock;
    uint64_t v23 = 1107296256;
    uint64_t v24 = sub_100181204;
    BOOL v25 = &unk_100215868;
    id v7 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    [v6 addErrorBlock:v7];
    _Block_release(v7);
    uint64_t v26 = sub_100159B38;
    uint64_t v27 = a2;
    aBlock = _NSConcreteStackBlock;
    uint64_t v23 = 1107296256;
    uint64_t v24 = sub_10018120C;
    BOOL v25 = &unk_100215890;
    int v8 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    [v6 addSuccessBlock:v8];
    _Block_release(v8);
  }
  else
  {
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    BOOL v25 = (void *)type metadata accessor for PodcastsEventManager();
    aBlock = a2;
    swift_retain();
    id v9 = (id)AMSLogKey();
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v14._uint64_t countAndFlagsBits = 0;
      v14._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v14);
      sub_100049788(&aBlock, (uint64_t)v25);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v28[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v28, &qword_10022F490);
      v16._uint64_t countAndFlagsBits = 5972026;
      v16._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v16);
      uint64_t MetatypeMetadata = &type metadata for String;
      v28[0] = v11;
      v28[1] = v13;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v28, &qword_10022F490);
      v17._uint64_t countAndFlagsBits = 93;
      v17._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v17);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      sub_100049788(&aBlock, (uint64_t)v25);
      uint64_t v19 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v28[0] = v19;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)v28, &qword_10022F490);
      v20._uint64_t countAndFlagsBits = 58;
      v20._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&aBlock);
    LogMessage.init(stringLiteral:)();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v21 = static os_log_type_t.default.getter();
    sub_10004841C(v21);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1001579A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v3 - 8);
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v23 = type metadata accessor for PodcastsEventManager();
  v22[0] = a2;
  swift_retain();
  id v4 = (id)AMSLogKey();
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v9._uint64_t countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v9);
    sub_100049788(v22, v23);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v20[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v20, &qword_10022F490);
    v11._uint64_t countAndFlagsBits = 5972026;
    v11._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    uint64_t MetatypeMetadata = &type metadata for String;
    v20[0] = v6;
    v20[1] = v8;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v20, &qword_10022F490);
    v12._uint64_t countAndFlagsBits = 93;
    v12._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v13._uint64_t countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    sub_100049788(v22, v23);
    uint64_t v14 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v20[0] = v14;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v20, &qword_10022F490);
    v15._uint64_t countAndFlagsBits = 58;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v22);
  LogMessage.init(stringLiteral:)();
  swift_getErrorValue();
  uint64_t v23 = v19;
  Swift::String v16 = sub_10003BAA4(v22);
  (*(void (**)(uint64_t *))(*(void *)(v19 - 8) + 16))(v16);
  static LogMessage.safe(_:)();
  sub_10002CC0C((uint64_t)v22, &qword_10022F490);
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v17 = static os_log_type_t.error.getter();
  sub_10004841C(v17);
  return swift_bridgeObjectRelease();
}

void sub_100157D14(void *a1)
{
  id v2 = [a1 entitlements];
  sub_10004D510(0, &qword_1002325C0);
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v4 = *(void *)(v3 + 16);
  swift_bridgeObjectRelease();
  if (v4)
  {
    id v5 = sub_100158C54();
    sub_1001599D8(0x746E756F636361, 0xE700000000000000, v5);
    id v6 = [a1 entitlements];
    uint64_t v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    sub_100156FFC(v7, (uint64_t (*)(uint64_t, uint64_t, id))sub_100159B40);
    swift_bridgeObjectRelease();
    sub_100043478(&qword_10022D7B0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    NSString v9 = String._bridgeToObjectiveC()();
    [v5 setProperty:isa forBodyKey:v9];

    id v10 = sub_100157268();
    [v10 enqueueEvent:v5];
  }
}

void sub_100157ECC(uint64_t a1)
{
  strcpy((char *)v17, "buyParameters");
  HIWORD(v17[1]) = -4864;
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)&v11, a1, &v18);
  sub_1000434BC((uint64_t)&v11);
  if (!v19)
  {
    sub_10002CC0C((uint64_t)&v18, &qword_10022F490);
    return;
  }
  sub_100043478(&qword_10022D6F0);
  if ((sub_100045FF4() & 1) == 0) {
    return;
  }
  uint64_t v3 = v17[0];
  sub_10004B5C0();
  v17[0] = v4;
  v17[1] = 0x80000001001D5D00;
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)&v11, v3, &v18);
  sub_1000434BC((uint64_t)&v11);
  if (!v19)
  {
    sub_10002CC0C((uint64_t)&v18, &qword_10022F490);
    goto LABEL_13;
  }
  if ((sub_100045FF4() & 1) == 0)
  {
LABEL_13:
    id v7 = sub_100157330();
    Swift::String v15 = sub_100159A84;
    Swift::String v16 = v1;
    Swift::String v11 = _NSConcreteStackBlock;
    uint64_t v12 = 1107296256;
    Swift::String v13 = sub_100181204;
    uint64_t v14 = &unk_1002157A0;
    uint64_t v8 = _Block_copy(&v11);
    swift_retain();
    swift_release();
    [v7 addErrorBlock:v8];
    _Block_release(v8);
    NSString v9 = (void *)swift_allocObject();
    v9[2] = v1;
    v9[3] = a1;
    v9[4] = v3;
    Swift::String v15 = sub_100159B00;
    Swift::String v16 = v9;
    Swift::String v11 = _NSConcreteStackBlock;
    uint64_t v12 = 1107296256;
    Swift::String v13 = (void (*)(uint64_t, void *))sub_1000FE3F8;
    uint64_t v14 = &unk_1002157F0;
    id v10 = _Block_copy(&v11);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_release();
    [v7 addSuccessBlock:v10];
    _Block_release(v10);

    return;
  }
  if (v17[0] != 1702195828 || v17[1] != 0xE400000000000000)
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
LABEL_15:
  swift_bridgeObjectRelease();
}

uint64_t sub_1001581C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v8 - 8);
  if ([a1 BOOLValue])
  {
    id v9 = sub_100158C54();
    sub_1001599D8(0x6C75736552797562, 0xE900000000000074, v9);
    strcpy((char *)&v59, "eventVersion");
    BYTE13(v59) = 0;
    HIWORD(v59) = -5120;
    AnyHashable.init<A>(_:)();
    sub_100032918((uint64_t)&v57, a3, &v59);
    sub_1000434BC((uint64_t)&v57);
    uint64_t v10 = *((void *)&v60 + 1);
    uint64_t v52 = a2;
    if (*((void *)&v60 + 1))
    {
      Swift::String v11 = sub_100049788(&v59, *((uint64_t *)&v60 + 1));
      uint64_t v12 = *(void *)(v10 - 8);
      __chkstk_darwin(v11);
      uint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v12 + 16))(v14);
      uint64_t v15 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v10);
      sub_10004377C((uint64_t)&v59);
    }
    else
    {
      uint64_t v15 = 0;
    }
    NSString v25 = String._bridgeToObjectiveC()();
    [v9 setProperty:v15 forBodyKey:v25];
    swift_unknownObjectRelease();

    sub_100043478(&qword_1002325B8);
    uint64_t v26 = swift_allocObject();
    long long v51 = xmmword_1001C3110;
    *(_OWORD *)(v26 + 16) = xmmword_1001C3110;
    uint64_t v27 = (_OWORD *)(v26 + 32);
    strcpy((char *)&v59, "salableAdamId");
    HIWORD(v59) = -4864;
    AnyHashable.init<A>(_:)();
    sub_100032918((uint64_t)&v57, a4, v27);
    sub_1000434BC((uint64_t)&v57);
    sub_100043478(&qword_10022F490);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    NSString v29 = String._bridgeToObjectiveC()();
    [v9 setProperty:isa forBodyKey:v29];

    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = v51;
    unint64_t v31 = (_OWORD *)(v30 + 32);
    *(void *)&long long v59 = 0x54746375646F7270;
    *((void *)&v59 + 1) = 0xEB00000000657079;
    AnyHashable.init<A>(_:)();
    sub_100032918((uint64_t)&v57, a4, v31);
    sub_1000434BC((uint64_t)&v57);
    Class v32 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    NSString v33 = String._bridgeToObjectiveC()();
    [v9 setProperty:v32 forBodyKey:v33];

    long long v59 = 0u;
    long long v60 = 0u;
    unint64_t v53 = 0xD000000000000012;
    unint64_t v54 = 0x80000001001D5D70;
    AnyHashable.init<A>(_:)();
    sub_100032918((uint64_t)&v57, a3, &v55);
    sub_1000434BC((uint64_t)&v57);
    if (v56)
    {
      sub_100043478(&qword_10022D6F0);
      if ((swift_dynamicCast() & 1) == 0)
      {
LABEL_21:
        sub_100043410((uint64_t)&v59, (uint64_t)&v55);
        if (v56)
        {
          sub_100043510(&v55, &v57);
        }
        else
        {
          uint64_t v58 = &type metadata for String;
          *(void *)&long long v57 = 0x6572756C696166;
          *((void *)&v57 + 1) = 0xE700000000000000;
          sub_10002CC0C((uint64_t)&v55, &qword_10022F490);
        }
        sub_100049788(&v57, (uint64_t)v58);
        uint64_t v48 = _bridgeAnythingToObjectiveC<A>(_:)();
        sub_10004377C((uint64_t)&v57);
        NSString v49 = String._bridgeToObjectiveC()();
        [v9 setProperty:v48 forBodyKey:v49];
        swift_unknownObjectRelease();

        id v50 = sub_100157268();
        [v50 enqueueEvent:v9];

        return sub_10002CC0C((uint64_t)&v59, &qword_10022F490);
      }
      uint64_t v34 = v53;
      strcpy((char *)&v55, "jingleDocType");
      HIWORD(v55) = -4864;
      AnyHashable.init<A>(_:)();
      sub_100032918((uint64_t)&v57, v34, &v55);
      sub_1000434BC((uint64_t)&v57);
      sub_10002CC0C((uint64_t)&v59, &qword_10022F490);
      sub_100053404((uint64_t)&v55, (uint64_t)&v59);
      unint64_t v53 = 0x7363697274656DLL;
      unint64_t v54 = 0xE700000000000000;
      AnyHashable.init<A>(_:)();
      sub_100032918((uint64_t)&v57, v34, &v55);
      swift_bridgeObjectRelease();
      sub_1000434BC((uint64_t)&v57);
      if (v56)
      {
        if (swift_dynamicCast())
        {
          uint64_t v35 = v53;
          strcpy((char *)&v55, "sapTypes");
          BYTE9(v55) = 0;
          WORD5(v55) = 0;
          HIDWORD(v55) = -402653184;
          AnyHashable.init<A>(_:)();
          sub_100032918((uint64_t)&v57, v35, &v55);
          swift_bridgeObjectRelease();
          sub_1000434BC((uint64_t)&v57);
          uint64_t v36 = v56;
          if (v56)
          {
            uint64_t v37 = sub_100049788(&v55, v56);
            uint64_t v38 = *(void *)(v36 - 8);
            __chkstk_darwin(v37);
            uint64_t v40 = (char *)&v51 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *))(v38 + 16))(v40);
            uint64_t v41 = _bridgeAnythingToObjectiveC<A>(_:)();
            (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v36);
            sub_10004377C((uint64_t)&v55);
          }
          else
          {
            uint64_t v41 = 0;
          }
          NSString v47 = String._bridgeToObjectiveC()();
          [v9 setProperty:v41 forBodyKey:v47];
          swift_unknownObjectRelease();
        }
        goto LABEL_21;
      }
    }
    sub_10002CC0C((uint64_t)&v55, &qword_10022F490);
    goto LABEL_21;
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v58 = (void *)type metadata accessor for PodcastsEventManager();
  *(void *)&long long v57 = a2;
  swift_retain();
  id v16 = (id)AMSLogKey();
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v19;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v21._uint64_t countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    sub_100049788(&v57, (uint64_t)v58);
    uint64_t DynamicType = swift_getDynamicType();
    *((void *)&v60 + 1) = swift_getMetatypeMetadata();
    *(void *)&long long v59 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v59, &qword_10022F490);
    v23._uint64_t countAndFlagsBits = 5972026;
    v23._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    *((void *)&v60 + 1) = &type metadata for String;
    *(void *)&long long v59 = v18;
    *((void *)&v59 + 1) = v20;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v59, &qword_10022F490);
    v24._uint64_t countAndFlagsBits = 93;
    v24._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v42._uint64_t countAndFlagsBits = 0;
    v42._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v42);
    sub_100049788(&v57, (uint64_t)v58);
    uint64_t v43 = swift_getDynamicType();
    *((void *)&v60 + 1) = swift_getMetatypeMetadata();
    *(void *)&long long v59 = v43;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v59, &qword_10022F490);
    v44._uint64_t countAndFlagsBits = 58;
    v44._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v44);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v57);
  LogMessage.init(stringLiteral:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v45 = static os_log_type_t.default.getter();
  sub_10004841C(v45);
  return swift_bridgeObjectRelease();
}

id sub_100158C54()
{
  id v0 = objc_msgSend(self, "ams_sharedAccountStore");
  id v1 = objc_msgSend(v0, "ams_activeiTunesAccount");

  id v2 = [objc_allocWithZone((Class)AMSMetricsIdentifierStore) init];
  [v2 setAccount:v1];
  sub_10004D510(0, &qword_10022FDF0);
  id v3 = sub_100189B58();
  [v2 setClientInfo:v3];

  sub_10004D510(0, (unint64_t *)&qword_10022D810);
  sub_10002064C();
  id v4 = sub_1001571F4();
  NSString v5 = String._bridgeToObjectiveC()();
  [v4 setApp:v5];

  sub_10004D510(0, (unint64_t *)&unk_100233D70);
  id v6 = sub_100189AEC(0x6449746E65696C63, 0xE800000000000000, 0);
  id v7 = [v2 identifierForKey:v6];

  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  sub_100159974(v8, v10, v4);
  [v4 setAnonymous:1];
  Swift::String v11 = self;
  NSString v12 = [v11 productType];
  if (!v12)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  NSString v13 = String._bridgeToObjectiveC()();
  sub_100046988();

  Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
  NSString v15 = String._bridgeToObjectiveC()();
  sub_100046988();

  NSString v16 = [v11 operatingSystem];
  if (!v16)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  NSString v17 = String._bridgeToObjectiveC()();
  sub_100046988();

  NSString v18 = [v11 buildVersion];
  if (!v18)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v16 = v19;
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  NSString v20 = String._bridgeToObjectiveC()();
  sub_100044C58((uint64_t)v20);

  if (v1)
  {
    uint64_t v21 = sub_100052800(v1);
    if (v22)
    {
      v37[0] = v21;
      v37[1] = v22;
      _bridgeAnythingToObjectiveC<A>(_:)();
      sub_100159A30((uint64_t)v37);
    }
  }
  sub_10002064C();
  NSString v23 = String._bridgeToObjectiveC()();
  sub_100044C58((uint64_t)v23);
  swift_unknownObjectRelease();

  Swift::String v24 = self;
  id v25 = [self currentProcess];
  NSString v26 = [v24 userAgentForProcessInfo:v25];

  if (!v26)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v25 = v27;
    NSString v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  NSString v28 = String._bridgeToObjectiveC()();
  sub_100044C58((uint64_t)v28);

  NSString v29 = String._bridgeToObjectiveC()();
  NSString v30 = String._bridgeToObjectiveC()();
  sub_100044C58((uint64_t)v30);

  uint64_t v31 = sub_10004DE9C();
  id v33 = sub_100189AEC(v31, v32, 1);
  NSString v34 = [v2 identifierForKey:v33];

  if (!v34)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  sub_10004DE9C();
  NSString v35 = String._bridgeToObjectiveC()();
  [v4 setProperty:v34 forBodyKey:v35];

  return v4;
}

void *sub_100159190(void *a1)
{
  uint64_t v2 = sub_100043478(&qword_1002344F0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  NSString v5 = (char *)v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  id v7 = (char *)v78 - v6;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  v78[0] = (char *)v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v78 - v13;
  __chkstk_darwin(v12);
  NSString v16 = (char *)v78 - v15;
  uint64_t v82 = _swiftEmptyDictionarySingleton;
  unsigned __int8 v17 = [a1 autoRenewEnabled];
  char v81 = &type metadata for Bool;
  LOBYTE(v79) = v17;
  uint64_t v18 = sub_10004ACEC();
  sub_10003E698(v18, 0x656E65526F747561, v19);
  id v20 = [a1 chargeStoreFrontID];
  if (v20)
  {
    uint64_t v21 = (uint64_t)v20;
    char v81 = (void *)sub_10004D510(0, (unint64_t *)&qword_100231E00);
    uint64_t v79 = v21;
  }
  else
  {
    sub_100048310();
  }
  sub_1000488CC((uint64_t)"chargeStoreFrontId");
  id v22 = [a1 expiration];
  v78[1] = v14;
  if (v22)
  {
    NSString v23 = v22;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    Swift::String v24 = *(void (**)(void))(v9 + 32);
    sub_1000453A8();
    v24();
    sub_100040A14((uint64_t)v7, 0);
    if (sub_10004FD40((uint64_t)v7, 1, v8) != 1)
    {
      sub_1000453A8();
      v24();
      id v25 = self;
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      id v27 = [v25 serverTimeFromDate:isa];

      char v81 = (void *)sub_10004D510(0, (unint64_t *)&qword_100231E00);
      uint64_t v79 = (uint64_t)v27;
      uint64_t v28 = sub_10004ACEC();
      sub_10003E698(v28, 0x6144657269707865, 0xEA00000000006574);
      uint64_t v29 = v9;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
      goto LABEL_9;
    }
  }
  else
  {
    sub_100040A14((uint64_t)v7, 1);
  }
  uint64_t v29 = v9;
  sub_10002CC0C((uint64_t)v7, &qword_1002344F0);
LABEL_9:
  id v30 = [a1 featureAccessTypeId];
  if (v30)
  {
    uint64_t v31 = v30;
    id v32 = [v30 description];

    uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v35 = v34;

    char v81 = &type metadata for String;
    uint64_t v79 = v33;
    uint64_t v80 = v35;
  }
  else
  {
    sub_100048310();
  }
  sub_10004B5C0();
  sub_100049B28(v36 + 1, (uint64_t)"featureAccessTypeId");
  id v37 = [a1 freeTrialPeriodId];
  if (v37)
  {
    uint64_t v38 = v37;
    id v39 = [v37 description];

    uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v42 = v41;

    char v81 = &type metadata for String;
    uint64_t v79 = v40;
    uint64_t v80 = v42;
  }
  else
  {
    sub_100048310();
  }
  sub_10004B5C0();
  sub_100049B28(v43 - 1, (uint64_t)"freeTrialPeriodId");
  id v44 = [a1 inAppAdamId];
  if (v44)
  {
    uint64_t v45 = v44;
    id v46 = [v44 description];

    uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v49 = v48;

    char v81 = &type metadata for String;
    uint64_t v79 = v47;
    uint64_t v80 = v49;
  }
  else
  {
    sub_100048310();
  }
  uint64_t v50 = sub_10004ACEC();
  sub_10003E698(v50, 0x6164417070416E69, 0xEB0000000064496DLL);
  [a1 initialPurchaseTimestamp];
  char v81 = &type metadata for Double;
  uint64_t v79 = v51;
  sub_10004B5C0();
  sub_10003E698((uint64_t)&v79, v52 + 6, 0x80000001001D5C60);
  unsigned __int8 v53 = [a1 period];
  char v81 = &type metadata for Bool;
  uint64_t v54 = sub_100046478((v53 & 4) != 0);
  sub_100048F38(v54, v55 | 0x5065636172470000);
  unsigned __int8 v56 = [a1 period];
  char v81 = &type metadata for Bool;
  uint64_t v57 = sub_100046478((v56 & 2) != 0);
  sub_100048F38(v57, v58 | 0x50726566664F0000);
  unsigned __int8 v59 = [a1 purchaser];
  char v81 = &type metadata for Bool;
  LOBYTE(v79) = v59;
  sub_10003E698((uint64_t)&v79, 0x6168637275507369, 0xEB00000000726573);
  unsigned __int8 v60 = [a1 period];
  char v81 = &type metadata for Bool;
  uint64_t v61 = sub_100046478(v60 & 1);
  sub_100048F38(v61, v62 | 0x506C616972540000);
  uint64_t v63 = sub_100038B5C(a1, (SEL *)&selRef_offerId);
  if (v64)
  {
    char v81 = &type metadata for String;
    uint64_t v79 = v63;
    uint64_t v80 = v64;
  }
  else
  {
    sub_100048310();
  }
  sub_10003E698((uint64_t)&v79, 0x656449726566666FLL, 0xEF7265696669746ELL);
  [a1 serviceBeginsTimestamp];
  char v81 = &type metadata for Double;
  uint64_t v79 = v65;
  sub_10004B5C0();
  sub_10003E698((uint64_t)&v79, v66 + 4, 0x80000001001D5C80);
  id v67 = [a1 startDate];
  if (v67)
  {
    id v68 = v67;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v69 = *(void (**)(void))(v29 + 32);
    sub_1000453A8();
    v69();
    sub_100040A14((uint64_t)v5, 0);
    if (sub_10004FD40((uint64_t)v5, 1, v8) != 1)
    {
      uint64_t v70 = v78[0];
      sub_1000453A8();
      v69();
      uint64_t v71 = self;
      Class v72 = Date._bridgeToObjectiveC()().super.isa;
      id v73 = [v71 serverTimeFromDate:v72];

      char v81 = (void *)sub_10004D510(0, (unint64_t *)&qword_100231E00);
      uint64_t v79 = (uint64_t)v73;
      uint64_t v74 = sub_10004ACEC();
      sub_10003E698(v74, 0x7461447472617473, 0xE900000000000065);
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v70, v8);
      goto LABEL_26;
    }
  }
  else
  {
    sub_100040A14((uint64_t)v5, 1);
  }
  sub_10002CC0C((uint64_t)v5, &qword_1002344F0);
LABEL_26:
  uint64_t v75 = sub_100038B5C(a1, (SEL *)&selRef_vendorAdHocOfferId);
  if (v76)
  {
    char v81 = &type metadata for String;
    uint64_t v79 = v75;
    uint64_t v80 = v76;
  }
  else
  {
    sub_100048310();
  }
  sub_1000488CC((uint64_t)"vendorAdHocOfferId");
  return v82;
}

uint64_t type metadata accessor for PodcastsEventManager()
{
  return self;
}

void sub_100159974(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 setClientIdentifier:v4];
}

void sub_1001599D8(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  [a3 setEventType:v4];
}

uint64_t sub_100159A30(uint64_t a1)
{
  return a1;
}

uint64_t sub_100159A84(uint64_t a1)
{
  return sub_1001579A8(a1, v1);
}

uint64_t sub_100159AB8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100159B00(void *a1)
{
  return sub_1001581C8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100159B0C(uint64_t a1)
{
  return sub_10004CF48(a1, v1);
}

void sub_100159B30(void *a1)
{
  sub_100157538(a1, v1);
}

void sub_100159B38(void *a1)
{
}

void *sub_100159B40(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_100159190(a3);
}

void sub_100159B84(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = a1;
    sub_100027304(0, v1, 0);
    uint64_t v3 = sub_1000672C4(v2);
    if ((v3 & 0x8000000000000000) == 0)
    {
      unint64_t v5 = v3;
      if (v3 < 1 << *(unsigned char *)(v2 + 32))
      {
        int v6 = v4;
        uint64_t v7 = v2 + 64;
        uint64_t v15 = v2 + 64;
        while ((*(void *)(v7 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v6 != *(_DWORD *)(v2 + 36)) {
            goto LABEL_18;
          }
          uint64_t v8 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v5);
          uint64_t v9 = v8[1];
          uint64_t v16 = v1;
          uint64_t v17 = *v8;
          uint64_t v10 = v2;
          unint64_t v12 = _swiftEmptyArrayStorage[2];
          unint64_t v11 = _swiftEmptyArrayStorage[3];
          swift_bridgeObjectRetain();
          if (v12 >= v11 >> 1) {
            sub_100027304(v11 > 1, v12 + 1, 1);
          }
          _swiftEmptyArrayStorage[2] = v12 + 1;
          uint64_t v13 = &_swiftEmptyArrayStorage[2 * v12];
          void v13[4] = v17;
          v13[5] = v9;
          if ((uint64_t)v5 >= -(-1 << *(unsigned char *)(v10 + 32))) {
            goto LABEL_19;
          }
          uint64_t v7 = v15;
          if ((*(void *)(v15 + 8 * (v5 >> 6)) & (1 << v5)) == 0) {
            goto LABEL_20;
          }
          uint64_t v2 = v10;
          if (v6 != *(_DWORD *)(v10 + 36)) {
            goto LABEL_21;
          }
          uint64_t v14 = _HashTable.occupiedBucket(after:)();
          uint64_t v1 = v16 - 1;
          if (v16 == 1) {
            return;
          }
          unint64_t v5 = v14;
          if ((v14 & 0x8000000000000000) == 0)
          {
            int v6 = *(_DWORD *)(v2 + 36);
            if (v14 < 1 << *(unsigned char *)(v2 + 32)) {
              continue;
            }
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

uint64_t sub_100159D48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = type metadata accessor for ContentInfo();
  if (v3)
  {
    sub_1000453B8();
    uint64_t v6 = sub_10004C028(*(unsigned __int8 *)(v5 + 80));
    sub_100092730(v6, v7);
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = 1;
  }
  return sub_100021AC0(a2, v8, 1, v4);
}

uint64_t sub_100159DC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = sub_100043478(&qword_10022D7B8);
  if (v3)
  {
    sub_1000453B8();
    uint64_t v6 = sub_10004C028(*(unsigned __int8 *)(v5 + 80));
    sub_100125770(v6, v7);
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = 1;
  }
  return sub_100021AC0(a2, v8, 1, v4);
}

unint64_t sub_100159E3C(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0) {
      uint64_t v3 = HIBYTE(a3) & 0xF;
    }
    else {
      uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
      uint64_t v4 = 11;
    }
    unint64_t v5 = v4 | (v3 << 16);
    uint64_t result = String.index(_:offsetBy:limitedBy:)();
    if (v6) {
      uint64_t result = v5;
    }
    if (4 * v3 >= result >> 14)
    {
      uint64_t v7 = String.subscript.getter();
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100159F10(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 72) == *(void *)(a2 + 72) && *(void *)(a1 + 80) == *(void *)(a2 + 80)) {
    return 0;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

unint64_t sub_100159F40(unint64_t result, uint64_t (*a2)(unint64_t *, unint64_t *), uint64_t a3, unint64_t a4)
{
  if ((uint64_t)(a4 + 0x4000000000000000) < 0)
  {
LABEL_13:
    __break(1u);
  }
  else
  {
    unint64_t v4 = a4;
    char v6 = (uint64_t *)result;
    while (!__OFADD__(2 * v4, 2))
    {
      uint64_t v7 = *v6;
      uint64_t v8 = *(void *)(*v6 + 16);
      unint64_t v9 = v4;
      if (v8 > (uint64_t)((2 * v4) | 1))
      {
        unint64_t v13 = sub_100037538((2 * v4) | 1, *v6);
        unint64_t v12 = sub_100037538(v4, v7);
        char v10 = a2(&v13, &v12);
        swift_release();
        uint64_t result = swift_release();
        if (v10) {
          unint64_t v9 = (2 * v4) | 1;
        }
        else {
          unint64_t v9 = v4;
        }
      }
      if (v8 > (uint64_t)(2 * v4 + 2))
      {
        unint64_t v13 = sub_100037538(2 * v4 + 2, v7);
        unint64_t v12 = sub_100037538(v9, v7);
        char v11 = a2(&v13, &v12);
        swift_release();
        uint64_t result = swift_release();
        if (v11) {
          unint64_t v9 = 2 * v4 + 2;
        }
      }
      if (v9 == v4) {
        return result;
      }
      uint64_t result = sub_10015A0B0(v4, v9);
      unint64_t v4 = v9;
      if ((uint64_t)(v9 + 0x4000000000000000) < 0) {
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  return result;
}

unint64_t sub_10015A0B0(unint64_t result, unint64_t a2)
{
  if (result == a2) {
    return result;
  }
  unint64_t v3 = result;
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v4 = *v2;
  unint64_t v5 = *(void *)(*v2 + 16);
  if (v5 <= result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v5 <= a2)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  uint64_t v7 = *(void *)(v4 + 32 + 8 * result);
  uint64_t v8 = *(void *)(v4 + 32 + 8 * a2);
  swift_retain();
  swift_retain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = v4;
  if ((result & 1) == 0)
  {
    uint64_t result = sub_100037618(v4);
    uint64_t v4 = result;
    *uint64_t v2 = result;
  }
  if (*(void *)(v4 + 16) <= v3) {
    goto LABEL_17;
  }
  *(void *)(v4 + 8 * v3 + 32) = v8;
  swift_release();
  specialized ContiguousArray._endMutation()();
  uint64_t v9 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = v9;
  if ((result & 1) == 0)
  {
    uint64_t result = sub_100037618(v9);
    uint64_t v9 = result;
    *uint64_t v2 = result;
  }
  if (*(void *)(v9 + 16) <= a2) {
    goto LABEL_18;
  }
  *(void *)(v9 + 8 * a2 + 32) = v7;
  swift_release();
  return specialized ContiguousArray._endMutation()();
}

uint64_t sub_10015A1DC(uint64_t *a1, uint64_t (*a2)(unint64_t *, uint64_t *), uint64_t a3, unint64_t a4, uint64_t a5)
{
  unint64_t v6 = a4;
  uint64_t v27 = a5;
  unint64_t v26 = sub_100037538(a4, *a1);
  char v9 = a2(&v26, &v27);
  swift_release();
  if (v9) {
    goto LABEL_30;
  }
  uint64_t v10 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v10 = sub_100037618(v10);
    *a1 = v10;
  }
  if ((v6 & 0x8000000000000000) != 0) {
    goto LABEL_28;
  }
  if (*(void *)(v10 + 16) <= v6)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  swift_retain();
  swift_release();
  *(void *)(v10 + 8 * v6 + 32) = a5;
  uint64_t result = specialized ContiguousArray._endMutation()();
  if (v6)
  {
    while (1)
    {
      unint64_t v13 = *(void *)(*a1 + 16);
      if (v6 >= v13) {
        break;
      }
      uint64_t v14 = *a1 + 32;
      unint64_t v26 = *(void *)(v14 + 8 * v6);
      unint64_t v15 = v6 - 1;
      unint64_t v16 = (v6 - 1) >> 1;
      if (v16 >= v13) {
        goto LABEL_23;
      }
      uint64_t v25 = *(void *)(v14 + 8 * v16);
      swift_retain();
      swift_retain();
      char v17 = a2(&v26, &v25);
      swift_release();
      uint64_t result = swift_release();
      if ((v17 & 1) == 0) {
        return result;
      }
      if (v6 != v16)
      {
        uint64_t v18 = *a1;
        unint64_t v19 = *(void *)(*a1 + 16);
        if (v6 >= v19) {
          goto LABEL_24;
        }
        if (v16 >= v19) {
          goto LABEL_25;
        }
        uint64_t v20 = *(void *)(v18 + 32 + 8 * v6);
        uint64_t v21 = *(void *)(v18 + 32 + 8 * v16);
        swift_retain();
        swift_retain();
        char v22 = swift_isUniquelyReferenced_nonNull_native();
        *a1 = v18;
        if ((v22 & 1) == 0)
        {
          uint64_t v18 = sub_100037618(v18);
          *a1 = v18;
        }
        if (v6 >= *(void *)(v18 + 16)) {
          goto LABEL_26;
        }
        *(void *)(v18 + 8 * v6 + 32) = v21;
        swift_release();
        specialized ContiguousArray._endMutation()();
        uint64_t v23 = *a1;
        char v24 = swift_isUniquelyReferenced_nonNull_native();
        *a1 = v23;
        if ((v24 & 1) == 0)
        {
          uint64_t v23 = sub_100037618(v23);
          *a1 = v23;
        }
        if (v16 >= *(void *)(v23 + 16)) {
          goto LABEL_27;
        }
        *(void *)(v23 + 8 * v16 + 32) = v20;
        swift_release();
        uint64_t result = specialized ContiguousArray._endMutation()();
      }
      unint64_t v6 = (v6 - 1) >> 1;
      if (v15 <= 1) {
        return result;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  return result;
}

void sub_10015A47C()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v3);
  sub_100022558();
  uint64_t v4 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v4 - 8);
  sub_100020EAC();
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  sub_100020DEC();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_100020EAC();
  uint64_t v11 = v10 - v9;
  type metadata accessor for Worker();
  *(void *)(v0 + 64) = Dictionary.init(dictionaryLiteral:)();
  *(void *)(v0 + 80) = 0;
  *(void *)(v0 + 88) = 0;
  unint64_t v12 = _swiftEmptyArrayStorage;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0) {
    unint64_t v12 = sub_10015B660((unint64_t)_swiftEmptyArrayStorage);
  }
  *(unsigned char *)(v0 + 24) = 1;
  *(void *)(v0 + 32) = v12;
  *(void *)(v0 + 40) = sub_10015C05C;
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 16) = Dictionary.init(dictionaryLiteral:)();
  *(void *)(v0 + 56) = v2;
  sub_1000438EC();
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v11, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v5);
  static DispatchQoS.unspecified.getter();
  sub_10001B96C((unint64_t *)&qword_10022F470, 255, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100043478((uint64_t *)&unk_100231D60);
  sub_10002B6DC((unint64_t *)&qword_10022F480, (uint64_t *)&unk_100231D60);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  *(void *)(v0 + 72) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  sub_100020FDC();
}

uint64_t sub_10015A714()
{
  sub_10002CAAC();
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_100159B84(v0);
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();
  return v2;
}

BOOL sub_10015A774()
{
  sub_10002CAAC();
  return *(void *)(*(void *)(v0 + 64) + 16) != 0;
}

uint64_t PriorityQueue.debugDescription.getter()
{
  _StringGuts.grow(_:)(75);
  v0._uint64_t countAndFlagsBits = 0x6B726F576C6C6128;
  v0._object = (void *)0xED0000203A737265;
  String.append(_:)(v0);
  sub_10002CAAC();
  type metadata accessor for Worker();
  swift_bridgeObjectRetain();
  v1._uint64_t countAndFlagsBits = Dictionary.description.getter();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = 0xD000000000000018;
  v2._object = (void *)0x80000001001D5E70;
  String.append(_:)(v2);
  sub_10002CAAC();
  sub_100043478(&qword_1002325C8);
  _print_unlocked<A, B>(_:_:)();
  v3._uint64_t countAndFlagsBits = 0x6E696E6E7572202CLL;
  v3._object = (void *)0xEB00000000203A67;
  String.append(_:)(v3);
  BOOL v4 = sub_10015A774();
  BOOL v5 = !v4;
  if (v4) {
    uint64_t v6 = 1702195828;
  }
  else {
    uint64_t v6 = 0x65736C6166;
  }
  if (v5) {
    unint64_t v7 = 0xE500000000000000;
  }
  else {
    unint64_t v7 = 0xE400000000000000;
  }
  unint64_t v8 = v7;
  String.append(_:)(*(Swift::String *)&v6);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001001D5E90;
  v9._uint64_t countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v9);
  sub_10002CAAC();
  swift_bridgeObjectRetain();
  v10._uint64_t countAndFlagsBits = Dictionary.description.getter();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = 41;
  v11._object = (void *)0xE100000000000000;
  String.append(_:)(v11);
  return 0;
}

uint64_t sub_10015A9E0()
{
  id v0 = [self currentProcess];
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_100027148();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();

  return v1;
}

uint64_t sub_10015AAB8(uint64_t a1, uint64_t a2)
{
  if (qword_10022C4B0 != -1) {
    swift_once();
  }
  swift_retain();
  sub_100108B54();
  sub_10015ABC8((uint64_t)v7);
  BOOL v5 = (void *)swift_allocObject();
  v5[2] = v2;
  v5[3] = a1;
  v5[4] = a2;
  swift_retain();
  swift_retain();
  sub_1000B9400();
  swift_release();
  long long v11 = v8;
  sub_10002711C((uint64_t)&v11);
  long long v10 = v9;
  sub_10002711C((uint64_t)&v10);
  return swift_release();
}

uint64_t sub_10015ABC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for UUID();
  sub_100020DEC();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_100022558();
  uint64_t v7 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v9 = v8;
  UUID.init()();
  uint64_t v10 = UUID.uuidString.getter();
  uint64_t v12 = v11;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
  *(_WORD *)a1 = 257;
  *(void *)(a1 + 8) = v10;
  *(void *)(a1 + 16) = v12;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v9;
  return result;
}

uint64_t sub_10015ACB0(uint64_t a1, void (*a2)(void))
{
  if (qword_10022C4B0 != -1) {
    swift_once();
  }
  swift_retain();
  sub_100108D18();
  a2();
  sub_100043478(&qword_1002346A0);
  return Promise.__allocating_init(value:)();
}

uint64_t PriorityQueue.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PriorityQueue.__deallocating_deinit()
{
  PriorityQueue.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_10015AE14()
{
  return PriorityQueue.debugDescription.getter();
}

uint64_t type metadata accessor for PriorityQueue()
{
  return self;
}

uint64_t sub_10015AE5C()
{
  v15[8] = 0;
  _StringGuts.grow(_:)(49);
  v1._uint64_t countAndFlagsBits = 0x203A70706128;
  v1._object = (void *)0xE600000000000000;
  String.append(_:)(v1);
  *(void *)unint64_t v15 = *v0;
  _print_unlocked<A, B>(_:_:)();
  v2._uint64_t countAndFlagsBits = 0x656972726162202CLL;
  v2._object = (void *)0xEB00000000203A72;
  String.append(_:)(v2);
  if (v0[1]) {
    uint64_t v3 = 1702195828;
  }
  else {
    uint64_t v3 = 0x65736C6166;
  }
  if (v0[1]) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  unint64_t v5 = v4;
  String.append(_:)(*(Swift::String *)&v3);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 0x4B6863746162202CLL;
  v6._object = (void *)0xEC000000203A7965;
  String.append(_:)(v6);
  uint64_t v7 = *((void *)v0 + 1);
  uint64_t v8 = (void *)*((void *)v0 + 2);
  swift_bridgeObjectRetain();
  v9._uint64_t countAndFlagsBits = v7;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v10._object = (void *)0xEC000000203A7974;
  v10._uint64_t countAndFlagsBits = 0x69726F697270202CLL;
  String.append(_:)(v10);
  uint64_t v12 = *((void *)v0 + 3);
  uint64_t v11 = (void *)*((void *)v0 + 4);
  swift_bridgeObjectRetain();
  v13._uint64_t countAndFlagsBits = v12;
  v13._object = v11;
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  return *(void *)&v15[1];
}

uint64_t sub_10015AFF0(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = 0xE900000000000073;
  uint64_t v3 = 0x636974796C616E61;
  uint64_t v4 = *a1;
  uint64_t v7 = 0x636974796C616E61;
  unint64_t v8 = 0xE900000000000073;
  switch(v4)
  {
    case 1:
      unint64_t v8 = 0xE800000000000000;
      uint64_t v7 = 0x6C616E7265746E69;
      break;
    case 2:
      unint64_t v8 = 0xE800000000000000;
      uint64_t v7 = 0x7379656E72756F6ALL;
      break;
    case 3:
      uint64_t v7 = 0x6E656D6D6F636572;
      unint64_t v8 = 0xEF736E6F69746164;
      break;
    default:
      break;
  }
  switch(*(unsigned char *)a2)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x6C616E7265746E69;
      break;
    case 2:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x7379656E72756F6ALL;
      break;
    case 3:
      uint64_t v3 = 0x6E656D6D6F636572;
      unint64_t v2 = 0xEF736E6F69746164;
      break;
    default:
      break;
  }
  if (v7 == v3 && v8 == v2)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v11 = 0;
    if ((v10 & 1) == 0) {
      return v11 & 1;
    }
  }
  BOOL v12 = *((void *)a1 + 3) == *(void *)(a2 + 24) && *((void *)a1 + 4) == *(void *)(a2 + 32);
  if (v12 || (v13 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v11 = 0, (v13 & 1) != 0))
  {
    BOOL v14 = *((void *)a1 + 1) == *(void *)(a2 + 8) && *((void *)a1 + 2) == *(void *)(a2 + 16);
    if (v14 || (v15 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v11 = 0, (v15 & 1) != 0)) {
      char v11 = ((a1[1] & 1) == 0) ^ *(unsigned char *)(a2 + 1);
    }
  }
  return v11 & 1;
}

uint64_t sub_10015B20C()
{
  _StringGuts.grow(_:)(54);
  v1._uint64_t countAndFlagsBits = 0x282072656B726F57;
  v1._object = (void *)0xED0000203A79656BLL;
  String.append(_:)(v1);
  _print_unlocked<A, B>(_:_:)();
  v2._object = (void *)0x80000001001D5FD0;
  v2._uint64_t countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v2);
  uint64_t result = sub_10002CAAC();
  if (__OFSUB__(*(void *)(v0 + 40) >> 1, *(void *)(v0 + 32)))
  {
    __break(1u);
  }
  else
  {
    v4._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v4);
    swift_bridgeObjectRelease();
    v5._uint64_t countAndFlagsBits = 0xD000000000000013;
    v5._object = (void *)0x80000001001D5FF0;
    String.append(_:)(v5);
    v6._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v6);
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t destroy for WorkerKey()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WorkerKey(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WorkerKey(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for WorkerKey(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for WorkerKey(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkerKey(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkerKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkerKey()
{
  return &type metadata for WorkerKey;
}

uint64_t sub_10015B5A0(uint64_t *a1, uint64_t *a2)
{
  return sub_100159F10(*a1, *a2) & 1;
}

uint64_t sub_10015B5D0()
{
  return sub_10015B20C();
}

uint64_t sub_10015B5F4()
{
  sub_100037704();
  return v0 & 1;
}

uint64_t sub_10015B618(uint64_t a1, uint64_t a2)
{
  return sub_10001B96C(&qword_100232850, a2, (void (*)(uint64_t))type metadata accessor for Worker);
}

void *sub_10015B660(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_8;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v2 <= 0)
    {
      long long v3 = _swiftEmptyArrayStorage;
    }
    else
    {
      sub_100043478(&qword_100231DE0);
      long long v3 = (void *)swift_allocObject();
      size_t v4 = j__malloc_size(v3);
      v3[2] = v2;
      v3[3] = (2 * ((uint64_t)(v4 - 32) / 8)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_10015BC84((uint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v5;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
  }
  return v3;
}

void *sub_10015B754(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return _swiftEmptyArrayStorage;
  }
  sub_100043478(&qword_10022D738);
  unint64_t v1 = (const void *)swift_allocObject();
  size_t v2 = j__malloc_size(v1);
  sub_100048F58(v2);
  sub_10015B884(v3, v4, v5, v6);
  sub_100047328();
  sub_100045940();
  if (!v7)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v1;
}

void *sub_10015B7EC(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return _swiftEmptyArrayStorage;
  }
  sub_100043478(&qword_10022D738);
  unint64_t v1 = (const void *)swift_allocObject();
  size_t v2 = j__malloc_size(v1);
  sub_100048F58(v2);
  sub_10015BA84(v3, v4, v5, v6);
  sub_100047328();
  sub_100045940();
  if (!v7)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v1;
}

uint64_t sub_10015B884(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  char v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *char v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    __n128 result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10015BA84(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  char v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *char v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    __n128 result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10015BC84(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = result;
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    __n128 result = swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      __n128 result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          sub_10002B6DC(&qword_100232860, &qword_100232858);
          swift_bridgeObjectRetain();
          for (uint64_t i = 0; i != v7; ++i)
          {
            sub_100043478(&qword_100232858);
            uint64_t v10 = sub_10015BE34(v13, i, a3);
            uint64_t v12 = *v11;
            swift_retain();
            ((void (*)(uint64_t **, void))v10)(v13, 0);
            *(void *)(v5 + 8 * i) = v12;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        sub_1000728C0((a3 & 0xFFFFFFFFFFFFFF8) + 32, *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10));
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t (*sub_10015BE34(uint64_t **a1, uint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_10015BF50(v6, a2, a3);
  return sub_10015BE9C;
}

uint64_t (*sub_10015BEA0(void *a1, uint64_t a2, uint64_t a3))()
{
  unint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_10015BFD8(v6, a2, a3);
  return sub_10015BE9C;
}

void sub_10015BF08(void *a1)
{
  unint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_10015BF50(uint64_t *a1, uint64_t a2, uint64_t a3))()
{
  unint64_t v4 = a3 & 0xC000000000000001;
  sub_1000BA1D0(a2, (a3 & 0xC000000000000001) == 0, a3);
  if (v4) {
    uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    uint64_t v5 = swift_retain();
  }
  *a1 = v5;
  return sub_10015BFD0;
}

uint64_t sub_10015BFD0()
{
  return swift_release();
}

uint64_t (*sub_10015BFD8(void *a1, uint64_t a2, uint64_t a3))()
{
  unint64_t v6 = a3 & 0xC000000000000001;
  sub_1000BA1D0(a2, (a3 & 0xC000000000000001) == 0, a3);
  if (v6) {
    id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v7 = *(id *)(a3 + 8 * a2 + 32);
  }
  *a1 = v7;
  return sub_10015C058;
}

uint64_t sub_10015C05C(uint64_t *a1, uint64_t *a2)
{
  return sub_100159F10(*a1, *a2);
}

uint64_t sub_10015C06C()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10015C0AC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v7 = *v3;
  uint64_t v8 = v7 + 32 + 16 * result;
  sub_100043478(&qword_10022D840);
  __n128 result = swift_arrayDestroy();
  BOOL v9 = __OFSUB__(a3, v4);
  uint64_t v10 = a3 - v4;
  if (v9)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (!v10) {
    goto LABEL_7;
  }
  uint64_t v11 = *(void *)(v7 + 16);
  if (__OFSUB__(v11, a2)) {
    goto LABEL_11;
  }
  __n128 result = (uint64_t)sub_1000334F0((char *)(v7 + 32 + 16 * a2), v11 - a2, (char *)(v8 + 16 * a3));
  uint64_t v12 = *(void *)(v7 + 16);
  BOOL v9 = __OFADD__(v12, v10);
  uint64_t v13 = v12 + v10;
  if (v9)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  *(void *)(v7 + 16) = v13;
LABEL_7:
  if (a3 > 0) {
LABEL_13:
  }
    __break(1u);
  return result;
}

uint64_t sub_10015C160(unint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *unint64_t v1 = v3;
  if ((result & 1) == 0)
  {
    uint64_t result = sub_100037618(v3);
    uint64_t v3 = result;
    *unint64_t v1 = result;
  }
  unint64_t v5 = *(void *)(v3 + 16);
  if (v5 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v6 = v5 - 1;
    uint64_t v7 = v5 - 1 - a1;
    uint64_t v8 = v3 + 8 * a1;
    uint64_t v9 = *(void *)(v8 + 32);
    sub_100072670((char *)(v8 + 40), v7, (char *)(v8 + 32));
    *(void *)(*v1 + 16) = v6;
    specialized ContiguousArray._endMutation()();
    return v9;
  }
  return result;
}

uint64_t sub_10015C1E4()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10015C224()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10015C264()
{
  return sub_10015ACB0(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t sub_10015C278(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

id sub_10015C2A0()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for PushService()) init];
  qword_100244178 = (uint64_t)result;
  return result;
}

void sub_10015C2D0(uint64_t a1)
{
  size_t v2 = *(void **)(v1 + OBJC_IVAR____TtC14amsengagementd11PushService_connection);
  *(void *)(v1 + OBJC_IVAR____TtC14amsengagementd11PushService_connection) = a1;
}

void sub_10015C2E4()
{
  sub_1000209F4();
  uint64_t v14 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  sub_100020DEC();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_100046690();
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v5);
  sub_10002D300();
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = sub_1000208F0(v6);
  __chkstk_darwin(v7);
  *(void *)&v0[OBJC_IVAR____TtC14amsengagementd11PushService_connection] = 0;
  uint64_t v13 = OBJC_IVAR____TtC14amsengagementd11PushService_connectionQueue;
  sub_10004D510(0, (unint64_t *)&qword_10022F690);
  uint64_t v8 = qword_10022C598;
  uint64_t v9 = v0;
  if (v8 != -1) {
    swift_once();
  }
  id v10 = (id)qword_100244190;
  static DispatchQoS.unspecified.getter();
  unint64_t v16 = _swiftEmptyArrayStorage;
  sub_100050588((unint64_t *)&qword_10022F470, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100043478((uint64_t *)&unk_100231D60);
  sub_10002B6DC((unint64_t *)&qword_10022F480, (uint64_t *)&unk_100231D60);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v14);
  sub_10002064C();
  *(void *)&v9[v13] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  sub_100043478(&qword_100232948);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3110;
  *(void *)(inited + 32) = 0xD000000000000033;
  *(void *)(inited + 40) = 0x80000001001D44D0;
  sub_100043478(&qword_100232928);
  swift_allocObject();
  *(void *)(inited + 48) = PassthroughSubject.init()();
  *(void *)&v9[OBJC_IVAR____TtC14amsengagementd11PushService_publishers] = Dictionary.init(dictionaryLiteral:)();

  uint64_t v12 = (objc_class *)type metadata accessor for PushService();
  v15.receiver = v9;
  v15.super_class = v12;
  objc_msgSendSuper2(&v15, "init");
  sub_100020FDC();
}

void sub_10015C618()
{
  sub_1000209F4();
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  sub_100020DEC();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_100046690();
  uint64_t v15 = type metadata accessor for DispatchQoS();
  sub_100020DEC();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_10002D300();
  id v10 = *(void **)&v0[OBJC_IVAR____TtC14amsengagementd11PushService_connectionQueue];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v0;
  v16[4] = sub_10015E118;
  v16[5] = v11;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_10002CD0C;
  void v16[3] = &unk_100215AD0;
  uint64_t v12 = _Block_copy(v16);
  id v13 = v10;
  uint64_t v14 = v0;
  static DispatchQoS.unspecified.getter();
  sub_100050588((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_10002B6DC((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v2, v15);
  swift_release();
  sub_100020FDC();
}

void sub_10015C85C(char *a1)
{
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = *(void **)&a1[OBJC_IVAR____TtC14amsengagementd11PushService_connection];
  if (v3)
  {
    id v4 = v3;
    [v4 shutdown];
    sub_10015C2D0(0);
  }
  [self pushEnvironment];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;
  uint64_t v8 = &NSFileProtectionComplete_ptr;
  uint64_t v9 = self;
  swift_bridgeObjectRetain();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  LOBYTE(v9) = [(id)v9 isValidEnvironment:v10];

  if (v9)
  {
    uint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v51 = (char *)sub_10015B7EC(v11);
    swift_bridgeObjectRelease();
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v57 = (void *)type metadata accessor for PushService();
    unsigned __int16 v55 = a1;
    uint64_t v12 = a1;
    id v13 = (id)AMSLogKey();
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v17 = v16;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      sub_100049788(&v55, (uint64_t)v57);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v52 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v52);
      v20._uint64_t countAndFlagsBits = 5972026;
      v20._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v52 = v15;
      uint64_t v53 = v17;
      uint64_t v8 = &NSFileProtectionComplete_ptr;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v52);
      v21._uint64_t countAndFlagsBits = 93;
      v21._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v21);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v32._uint64_t countAndFlagsBits = 0;
      v32._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      sub_100049788(&v55, (uint64_t)v57);
      uint64_t v33 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v52 = v33;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v52);
      v34._uint64_t countAndFlagsBits = 58;
      v34._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v34);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v55);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v35._uint64_t countAndFlagsBits = 0xD000000000000027;
    v35._object = (void *)0x80000001001D6120;
    LogMessage.StringInterpolation.appendLiteral(_:)(v35);
    uint64_t v57 = &type metadata for String;
    unsigned __int16 v55 = (char *)v5;
    uint64_t v56 = v7;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v55);
    v36._uint64_t countAndFlagsBits = 0x736369706F74202CLL;
    v36._object = (void *)0xEA0000000000203ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v36);
    uint64_t v57 = (void *)sub_100043478(&qword_100232940);
    unsigned __int16 v55 = v51;
    swift_retain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v55);
    v37._uint64_t countAndFlagsBits = 41;
    v37._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v37);
    LogMessage.init(stringInterpolation:)();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v38 = static os_log_type_t.info.getter();
    sub_10004841C(v38);
    swift_bridgeObjectRelease();
    id v39 = *(void **)&v12[OBJC_IVAR____TtC14amsengagementd11PushService_connectionQueue];
    id v40 = objc_allocWithZone((Class)v8[85]);
    id v41 = v39;
    id v42 = sub_10015DF00(v5, v7, 0xD00000000000001CLL, 0x80000001001D6150, v39);
    if (v42)
    {
      uint64_t v43 = v42;
      [v42 setDelegate:v12];
      sub_10015DFAC((uint64_t)v51, v43);
      id v44 = v43;
      sub_10015C2D0((uint64_t)v43);
    }
    else
    {
      swift_release();
    }
  }
  else
  {
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v57 = (void *)type metadata accessor for PushService();
    unsigned __int16 v55 = a1;
    char v22 = a1;
    id v23 = (id)AMSLogKey();
    if (v23)
    {
      char v24 = v23;
      uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v27 = v26;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v28._uint64_t countAndFlagsBits = 0;
      v28._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      sub_100049788(&v55, (uint64_t)v57);
      uint64_t v29 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v52 = v29;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v52);
      v30._uint64_t countAndFlagsBits = 5972026;
      v30._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v30);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v52 = v25;
      uint64_t v53 = v27;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v52);
      v31._uint64_t countAndFlagsBits = 93;
      v31._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v31);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v45._uint64_t countAndFlagsBits = 0;
      v45._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v45);
      sub_100049788(&v55, (uint64_t)v57);
      uint64_t v46 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v52 = v46;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v52);
      v47._uint64_t countAndFlagsBits = 58;
      v47._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v47);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v55);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v48._object = (void *)0x80000001001D6100;
    v48._uint64_t countAndFlagsBits = 0xD000000000000018;
    LogMessage.StringInterpolation.appendLiteral(_:)(v48);
    uint64_t v57 = &type metadata for String;
    unsigned __int16 v55 = (char *)v5;
    uint64_t v56 = v7;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v55);
    v49._uint64_t countAndFlagsBits = 0;
    v49._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v49);
    LogMessage.init(stringInterpolation:)();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v50 = static os_log_type_t.error.getter();
    sub_10004841C(v50);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10015D018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!*(void *)(*(void *)(v4 + OBJC_IVAR____TtC14amsengagementd11PushService_publishers) + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  sub_100042ADC(a1, a2);
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a3;
  *(void *)(v10 + 24) = a4;
  swift_retain();
  sub_100043478(&qword_100232928);
  sub_10002B6DC((unint64_t *)&unk_100232930, &qword_100232928);
  uint64_t v11 = Publisher.sink(receiveCompletion:receiveValue:)();
  swift_release();
  swift_release();
  return v11;
}

id sub_10015D168()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PushService();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PushService()
{
  return self;
}

uint64_t sub_10015D21C(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v5 = sub_1000208F0(v4);
  __chkstk_darwin(v5);
  sub_100011D4C();
  sub_100043478(&qword_10022E560);
  uint64_t v6 = type metadata accessor for LogMessage();
  sub_100044798(v6);
  sub_100046488();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  Swift::String v21 = (void *)type metadata accessor for PushService();
  v20[0] = v2;
  id v7 = v2;
  id v8 = (id)AMSLogKey();
  if (v8)
  {
    char v9 = v8;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    uint64_t v13 = sub_10002106C(v20);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v18[0] = v13;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v18);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v18[0] = v10;
    v18[1] = v12;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v18);
    sub_1000208D8();
    sub_100011CC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    sub_100049788(v20, (uint64_t)v21);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v18[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v18);
    sub_100020E94();
    sub_100011CC0();
  }
  sub_10004377C((uint64_t)v20);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  sub_10002064C();
  v15._uint64_t countAndFlagsBits = 0xD000000000000012;
  LogMessage.StringInterpolation.appendLiteral(_:)(v15);
  Swift::String v21 = &type metadata for Bool;
  LOBYTE(v20[0]) = a2 & 1;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000423CC((uint64_t)v20);
  sub_100020E60();
  sub_100011CC0();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v16 = static os_log_type_t.info.getter();
  sub_10004841C(v16);
  return swift_bridgeObjectRelease();
}

void sub_10015D4EC()
{
  sub_1000209F4();
  unint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v4 = sub_1000208F0(v3);
  uint64_t v5 = __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  sub_100043478(&qword_10022E560);
  uint64_t v6 = type metadata accessor for LogMessage();
  sub_100044798(v6);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  *((void *)&v21 + 1) = type metadata accessor for PushService();
  v20._uint64_t countAndFlagsBits = (uint64_t)v0;
  id v7 = v0;
  id v8 = (id)AMSLogKey();
  if (v8)
  {
    char v9 = v8;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100049788(&v20, *((uint64_t *)&v21 + 1));
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v18[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v18);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v18[0] = v10;
    v18[1] = v12;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v18);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    uint64_t v14 = sub_10002106C(&v20);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v18[0] = v14;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v18);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v20);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  sub_10002064C();
  v15._uint64_t countAndFlagsBits = 0xD000000000000017;
  LogMessage.StringInterpolation.appendLiteral(_:)(v15);
  if (v2 >> 60 == 15)
  {
    Swift::String v20 = (Swift::String)0;
    long long v21 = 0u;
  }
  else
  {
    Swift::String v16 = Data.base64EncodedString(options:)(0);
    *((void *)&v21 + 1) = &type metadata for String;
    Swift::String v20 = v16;
  }
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000423CC((uint64_t)&v20);
  sub_100020E60();
  LogMessage.init(stringInterpolation:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v17 = static os_log_type_t.info.getter();
  sub_10004841C(v17);
  swift_bridgeObjectRelease();
  sub_100020FDC();
}

void sub_10015D894()
{
  sub_1000209F4();
  unint64_t v2 = v0;
  id v4 = v3;
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v6 = sub_1000208F0(v5);
  __chkstk_darwin(v6);
  sub_100011D4C();
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  sub_100020DEC();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = *(void **)&v0[OBJC_IVAR____TtC14amsengagementd11PushService_connectionQueue];
  void *v12 = v13;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v7);
  id v14 = v13;
  LOBYTE(v13) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v9 + 8))(v12, v7);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (v4)
  {
    uint64_t v15 = sub_10015E018(v4);
    if (!v16)
    {
      sub_100043478(&qword_10022E560);
      uint64_t v27 = type metadata accessor for LogMessage();
      sub_100044798(v27);
      sub_100046488();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      uint64_t v50 = type metadata accessor for PushService();
      v49[0] = v0;
      Swift::String v28 = v0;
      id v29 = (id)AMSLogKey();
      if (v29)
      {
        Swift::String v30 = v29;
        uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v33 = v32;

        swift_bridgeObjectRetain();
        sub_1000208BC();
        sub_100020E60();
        uint64_t v34 = sub_10002106C(v49);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v46 = v34;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)&v46);
        sub_100020E44();
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v46 = v31;
        uint64_t v47 = v33;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)&v46);
        sub_1000208D8();
        sub_100011CC0();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100020E78();
        sub_100020E60();
        sub_100049788(v49, v50);
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v46 = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)&v46);
        sub_100020E94();
        sub_100011CC0();
      }
      sub_10004377C((uint64_t)v49);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_10002064C();
      LogMessage.StringInterpolation.appendLiteral(_:)(v41);
      uint64_t v50 = sub_10004D510(0, &qword_100232920);
      v49[0] = v4;
      id v42 = v4;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v49);
      sub_100020E60();
      sub_100011CC0();
      if (qword_10022C460 != -1) {
        swift_once();
      }
      uint64_t v43 = static os_log_type_t.info.getter();
      sub_10004841C(v43);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    uint64_t v1 = v15;
    uint64_t v7 = v16;
    sub_100043478(&qword_10022E560);
    uint64_t v17 = type metadata accessor for LogMessage();
    sub_100044798(v17);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v50 = type metadata accessor for PushService();
    v49[0] = v0;
    unint64_t v2 = v0;
    id v18 = (id)AMSLogKey();
    if (v18)
    {
      int64_t v19 = v18;
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v45 = v4;
      long long v21 = v2;
      uint64_t v22 = v1;
      uint64_t v23 = v20;
      uint64_t v25 = v24;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100049788(v49, v50);
      uint64_t v26 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v46 = v26;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v46);
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v46 = v23;
      uint64_t v47 = v25;
      uint64_t v1 = v22;
      unint64_t v2 = v21;
      id v4 = v45;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v46);
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100049788(v49, v50);
      uint64_t v35 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v46 = v35;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v46);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v49);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_10002064C();
    v36._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v36);
    uint64_t v50 = sub_10004D510(0, &qword_100232920);
    v49[0] = v4;
    id v4 = v4;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v49);
    sub_100020E60();
    LogMessage.init(stringInterpolation:)();
    if (qword_10022C460 == -1)
    {
LABEL_10:
      uint64_t v37 = static os_log_type_t.info.getter();
      sub_10004841C(v37);
      swift_bridgeObjectRelease();
      uint64_t v38 = sub_100033C7C(v1, v7, *(void *)&v2[OBJC_IVAR____TtC14amsengagementd11PushService_publishers]);
      swift_bridgeObjectRelease();
      if (v38)
      {
        v49[0] = v4;
        id v39 = v4;
        PassthroughSubject.send(_:)();

        swift_release();
      }
LABEL_16:
      sub_100020FDC();
      return;
    }
LABEL_18:
    swift_once();
    goto LABEL_10;
  }
  __break(1u);
}

id sub_10015DF00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (!a2)
  {
    NSString v8 = 0;
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    NSString v9 = 0;
    goto LABEL_6;
  }
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_6:
  id v10 = [v5 initWithEnvironmentName:v8 namedDelegatePort:v9 queue:a5];

  return v10;
}

void sub_10015DFAC(uint64_t a1, void *a2)
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 _setEnabledTopics:isa];
}

uint64_t sub_10015E018(void *a1)
{
  id v1 = [a1 topic];
  if (!v1) {
    return 0;
  }
  unint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_10015E07C()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10015E0B4(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_10015E0E0()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10015E118()
{
  sub_10015C85C(*(char **)(v0 + 16));
}

ValueMetadata *type metadata accessor for RemoteJetpackLoader()
{
  return &type metadata for RemoteJetpackLoader;
}

uint64_t sub_10015E130@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v161 = a2;
  uint64_t v153 = a1;
  uint64_t v131 = a3;
  uint64_t v133 = type metadata accessor for JSBytecodeSource();
  uint64_t v132 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  id v4 = (char *)&v131 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = type metadata accessor for JSStackContext();
  __chkstk_darwin(v152);
  uint64_t v135 = (uint64_t)&v131 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100043478(&qword_10022FB40);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v139 = (uint64_t)&v131 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v151 = (uint64_t)&v131 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v131 - v11;
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  v138 = (char *)&v131 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v137 = (char *)&v131 - v18;
  __chkstk_darwin(v17);
  uint64_t v142 = (char *)&v131 - v19;
  uint64_t v20 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v20 - 8);
  if (qword_10022C470 != -1) {
    swift_once();
  }
  Swift::String v141 = v4;
  uint64_t v134 = qword_1002440D8;
  uint64_t v21 = sub_100043478(&qword_10022E560);
  uint64_t v22 = *(void *)(type metadata accessor for LogMessage() - 8);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v24 = (v23 + 32) & ~v23;
  uint64_t v154 = *(void *)(v22 + 72);
  uint64_t v149 = v21;
  uint64_t v146 = v23 | 7;
  uint64_t v147 = v24 + 2 * v154;
  uint64_t v25 = swift_allocObject();
  long long v145 = xmmword_1001C3120;
  *(_OWORD *)(v25 + 16) = xmmword_1001C3120;
  uint64_t v148 = v24;
  uint64_t v26 = sub_100043478(&qword_100232958);
  uint64_t v143 = sub_100043478(&qword_100232A40);
  uint64_t v160 = v143;
  uint64_t v144 = v26;
  uint64_t v159 = v26;
  id v27 = (id)AMSLogKey();
  uint64_t v155 = v13;
  uint64_t v150 = v14;
  if (v27)
  {
    Swift::String v28 = v27;
    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v31 = v30;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v32._uint64_t countAndFlagsBits = 0;
    v32._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v32);
    sub_100049788(&v159, v160);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v156 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004357C((uint64_t)&v156, &qword_10022F490);
    v34._uint64_t countAndFlagsBits = 5972026;
    v34._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v34);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v156 = v29;
    uint64_t v157 = v31;
    uint64_t v14 = v150;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    uint64_t v13 = v155;
    sub_10004357C((uint64_t)&v156, &qword_10022F490);
    v35._uint64_t countAndFlagsBits = 93;
    v35._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v35);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v36._uint64_t countAndFlagsBits = 0;
    v36._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v36);
    sub_100049788(&v159, v160);
    uint64_t v37 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v156 = v37;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004357C((uint64_t)&v156, &qword_10022F490);
    v38._uint64_t countAndFlagsBits = 58;
    v38._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v38);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v159);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v39._uint64_t countAndFlagsBits = 0xD000000000000019;
  v39._object = (void *)0x80000001001D6260;
  LogMessage.StringInterpolation.appendLiteral(_:)(v39);
  uint64_t v160 = v13;
  id v40 = sub_10003BAA4(&v159);
  Swift::String v41 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v14 + 16);
  v41(v40, v153, v13);
  LogMessage.StringInterpolation.appendInterpolation(sensitive:)();
  sub_10004357C((uint64_t)&v159, &qword_10022F490);
  v42._uint64_t countAndFlagsBits = 41;
  v42._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v42);
  LogMessage.init(stringInterpolation:)();
  uint64_t v43 = static os_log_type_t.debug.getter();
  sub_10004841C(v43);
  swift_bridgeObjectRelease();
  uint64_t v44 = v152;
  uint64_t v45 = v161;
  sub_100006084(v161 + *(int *)(v152 + 32), (uint64_t)v12);
  uint64_t v46 = v45;
  uint64_t v47 = v135;
  sub_100020130(v46, v135);
  int v48 = sub_10004FD40((uint64_t)v12, 1, v13);
  uint64_t v136 = v41;
  if (v48 == 1)
  {
    Swift::String v49 = v142;
    v41((uint64_t *)v142, v47 + *(int *)(v44 + 40), v13);
    sub_100161858(v47);
    sub_10004357C((uint64_t)v12, &qword_10022FB40);
  }
  else
  {
    sub_100161858(v47);
    uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    Swift::String v49 = v142;
    v50(v142, v12, v13);
  }
  uint64_t v51 = v151;
  sub_100006084(v161 + *(int *)(v44 + 20), v151);
  int v52 = sub_10004FD40(v51, 1, v13);
  uint64_t v135 = qword_1002440D8;
  *(_OWORD *)(swift_allocObject() + 16) = v145;
  if (v52 == 1)
  {
    uint64_t v160 = v143;
    uint64_t v159 = v144;
    id v53 = (id)AMSLogKey();
    if (v53)
    {
      uint64_t v54 = v53;
      uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v57 = v56;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v58._uint64_t countAndFlagsBits = 0;
      v58._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v58);
      sub_100049788(&v159, v160);
      uint64_t v59 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v156 = v59;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004357C((uint64_t)&v156, &qword_10022F490);
      v60._uint64_t countAndFlagsBits = 5972026;
      v60._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v60);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v156 = v55;
      uint64_t v157 = v57;
      uint64_t v51 = v151;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004357C((uint64_t)&v156, &qword_10022F490);
      v61._uint64_t countAndFlagsBits = 93;
      v61._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v61);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v71._uint64_t countAndFlagsBits = 0;
      v71._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v71);
      sub_100049788(&v159, v160);
      uint64_t v72 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v156 = v72;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004357C((uint64_t)&v156, &qword_10022F490);
      v73._uint64_t countAndFlagsBits = 58;
      v73._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v73);
      LogMessage.init(stringInterpolation:)();
    }
    uint64_t v74 = v141;
    sub_10004377C((uint64_t)&v159);
    LogMessage.init(stringLiteral:)();
    uint64_t v75 = static os_log_type_t.debug.getter();
  }
  else
  {
    uint64_t v160 = v143;
    uint64_t v159 = v144;
    id v62 = (id)AMSLogKey();
    if (v62)
    {
      uint64_t v63 = v62;
      uint64_t v64 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v66 = v65;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v67._uint64_t countAndFlagsBits = 0;
      v67._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v67);
      sub_100049788(&v159, v160);
      uint64_t v68 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v156 = v68;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004357C((uint64_t)&v156, &qword_10022F490);
      v69._uint64_t countAndFlagsBits = 5972026;
      v69._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v69);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v156 = v64;
      uint64_t v157 = v66;
      uint64_t v51 = v151;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004357C((uint64_t)&v156, &qword_10022F490);
      v70._uint64_t countAndFlagsBits = 93;
      v70._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v70);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v76._uint64_t countAndFlagsBits = 0;
      v76._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v76);
      sub_100049788(&v159, v160);
      uint64_t v77 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v156 = v77;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004357C((uint64_t)&v156, &qword_10022F490);
      v78._uint64_t countAndFlagsBits = 58;
      v78._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v78);
      LogMessage.init(stringInterpolation:)();
    }
    uint64_t v74 = v141;
    sub_10004377C((uint64_t)&v159);
    LogMessage.init(stringLiteral:)();
    uint64_t v75 = static os_log_type_t.info.getter();
  }
  sub_10004841C(v75);
  swift_bridgeObjectRelease();
  uint64_t v79 = v155;
  uint64_t v80 = (void (*)(char *, char *, uint64_t))v136;
  v136((uint64_t *)v137, v153, v155);
  v80(v138, v49, v79);
  sub_100006084(v51, v139);
  id v81 = *(id *)(v161 + *(int *)(v152 + 48));
  uint64_t v82 = v140;
  JSBytecodeSource.init(fileURL:sourceURL:cacheURL:virtualMachine:)();
  if (!v82)
  {
    char v84 = JSBytecodeSource.isUsingBytecodeCache.getter();
    *(_OWORD *)(swift_allocObject() + 16) = v145;
    if (v84)
    {
      uint64_t v160 = v143;
      uint64_t v159 = v144;
      id v85 = (id)AMSLogKey();
      if (v85)
      {
        uint64_t v86 = v85;
        uint64_t v87 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v89 = v88;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v90._uint64_t countAndFlagsBits = 0;
        v90._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v90);
        sub_100049788(&v159, v160);
        uint64_t v91 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v156 = v91;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10004357C((uint64_t)&v156, &qword_10022F490);
        v92._uint64_t countAndFlagsBits = 5972026;
        v92._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v92);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v156 = v87;
        uint64_t v157 = v89;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        uint64_t v74 = v141;
        sub_10004357C((uint64_t)&v156, &qword_10022F490);
        v93._uint64_t countAndFlagsBits = 93;
        v93._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v93);
        LogMessage.init(stringInterpolation:)();
        uint64_t v51 = v151;
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v103._uint64_t countAndFlagsBits = 0;
        v103._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v103);
        sub_100049788(&v159, v160);
        uint64_t v104 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v156 = v104;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10004357C((uint64_t)&v156, &qword_10022F490);
        v105._uint64_t countAndFlagsBits = 58;
        v105._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v105);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)&v159);
      LogMessage.init(stringLiteral:)();
      uint64_t v106 = static os_log_type_t.info.getter();
      sub_10004841C(v106);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v160 = v143;
      uint64_t v159 = v144;
      id v94 = (id)AMSLogKey();
      if (v94)
      {
        uint64_t v95 = v94;
        uint64_t v96 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v98 = v97;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v99._uint64_t countAndFlagsBits = 0;
        v99._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v99);
        sub_100049788(&v159, v160);
        uint64_t v100 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v156 = v100;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10004357C((uint64_t)&v156, &qword_10022F490);
        v101._uint64_t countAndFlagsBits = 5972026;
        v101._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v101);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v156 = v96;
        uint64_t v157 = v98;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        uint64_t v74 = v141;
        sub_10004357C((uint64_t)&v156, &qword_10022F490);
        v102._uint64_t countAndFlagsBits = 93;
        v102._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v102);
        LogMessage.init(stringInterpolation:)();
        uint64_t v51 = v151;
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v107._uint64_t countAndFlagsBits = 0;
        v107._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v107);
        sub_100049788(&v159, v160);
        uint64_t v108 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v156 = v108;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10004357C((uint64_t)&v156, &qword_10022F490);
        v109._uint64_t countAndFlagsBits = 58;
        v109._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v109);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)&v159);
      LogMessage.init(stringLiteral:)();
      uint64_t v110 = static os_log_type_t.debug.getter();
      sub_10004841C(v110);
      swift_bridgeObjectRelease();
      if (sub_10004FD40(v51, 1, v155) != 1)
      {
        *(_OWORD *)(swift_allocObject() + 16) = v145;
        uint64_t v160 = v143;
        uint64_t v159 = v144;
        id v111 = (id)AMSLogKey();
        if (v111)
        {
          v112 = v111;
          uint64_t v113 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v115 = v114;

          swift_bridgeObjectRetain();
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
          v116._uint64_t countAndFlagsBits = 0;
          v116._object = (void *)0xE000000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v116);
          sub_100049788(&v159, v160);
          uint64_t v117 = swift_getDynamicType();
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
          uint64_t v156 = v117;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_10004357C((uint64_t)&v156, &qword_10022F490);
          v118._uint64_t countAndFlagsBits = 5972026;
          v118._object = (void *)0xE300000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v118);
          uint64_t MetatypeMetadata = &type metadata for String;
          uint64_t v156 = v113;
          uint64_t v157 = v115;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          uint64_t v74 = v141;
          sub_10004357C((uint64_t)&v156, &qword_10022F490);
          v119._uint64_t countAndFlagsBits = 93;
          v119._object = (void *)0xE100000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v119);
          LogMessage.init(stringInterpolation:)();
          uint64_t v51 = v151;
          swift_bridgeObjectRelease();
        }
        else
        {
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
          v120._uint64_t countAndFlagsBits = 0;
          v120._object = (void *)0xE000000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v120);
          sub_100049788(&v159, v160);
          uint64_t v121 = swift_getDynamicType();
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
          uint64_t v156 = v121;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_10004357C((uint64_t)&v156, &qword_10022F490);
          v122._uint64_t countAndFlagsBits = 58;
          v122._object = (void *)0xE100000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v122);
          LogMessage.init(stringInterpolation:)();
        }
        sub_10004377C((uint64_t)&v159);
        LogMessage.init(stringLiteral:)();
        uint64_t v123 = static os_log_type_t.debug.getter();
        sub_10004841C(v123);
        swift_bridgeObjectRelease();
        JSBytecodeSource.cacheBytecode()();
        if (v124)
        {
          (*(void (**)(char *, uint64_t))(v132 + 8))(v74, v133);
          uint64_t v83 = v150;
          Swift::String v49 = v142;
          goto LABEL_20;
        }
      }
    }
    uint64_t v125 = v133;
    uint64_t v126 = v132;
    uint64_t v127 = v131;
    uint64_t v128 = v150;
    v131[3] = v133;
    v127[4] = (uint64_t)&protocol witness table for JSBytecodeSource;
    uint64_t v129 = sub_10003BAA4(v127);
    (*(void (**)(uint64_t *, char *, uint64_t))(v126 + 32))(v129, v74, v125);
    (*(void (**)(char *, uint64_t))(v128 + 8))(v142, v155);
    return sub_10004357C(v51, &qword_10022FB40);
  }
  uint64_t v83 = v150;
LABEL_20:
  (*(void (**)(char *, uint64_t))(v83 + 8))(v49, v155);
  return sub_10004357C(v51, &qword_10022FB40);
}

uint64_t sub_10015F394(void *a1, uint64_t a2, void *a3)
{
  v164 = a3;
  uint64_t v168 = a2;
  uint64_t v135 = a1;
  type metadata accessor for DispatchQoS.QoSClass();
  sub_100020DEC();
  uint64_t v160 = v4;
  uint64_t v161 = v3;
  __chkstk_darwin(v3);
  sub_100040A70();
  uint64_t v159 = v5;
  uint64_t v158 = sub_100043478(&qword_100232950);
  sub_100020DEC();
  uint64_t v157 = v6;
  __chkstk_darwin(v7);
  sub_100040A70();
  sub_1000464A0(v8);
  uint64_t v156 = sub_100043478(&qword_100232958);
  sub_100020DEC();
  uint64_t v155 = v9;
  __chkstk_darwin(v10);
  sub_100040A70();
  sub_1000464A0(v11);
  uint64_t v153 = sub_100043478(&qword_100232960);
  sub_100020DEC();
  uint64_t v152 = v12;
  __chkstk_darwin(v13);
  sub_100040A70();
  sub_10004CF80(v14);
  uint64_t v162 = type metadata accessor for JSStackContext();
  sub_100020DEC();
  uint64_t v147 = v15;
  __chkstk_darwin(v16);
  uint64_t v148 = v17;
  sub_1000464A0((uint64_t)v134 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v150 = sub_100043478(&qword_100232968);
  sub_100020DEC();
  uint64_t v149 = v18;
  __chkstk_darwin(v19);
  sub_100040A70();
  sub_1000464A0(v20);
  uint64_t v146 = sub_100043478(&qword_100232970);
  sub_100020DEC();
  uint64_t v145 = v21;
  __chkstk_darwin(v22);
  sub_100040A70();
  sub_10004CF80(v23);
  uint64_t v167 = type metadata accessor for JetpackBundle.Resource();
  sub_100020DEC();
  uint64_t v170 = v24;
  __chkstk_darwin(v25);
  sub_100040A70();
  sub_1000464A0(v26);
  uint64_t v166 = sub_100043478(&qword_100232978);
  sub_100020DEC();
  uint64_t v169 = v27;
  __chkstk_darwin(v28);
  sub_100040A70();
  sub_1000464A0(v29);
  v134[9] = sub_100043478(&qword_100232980);
  sub_100020DEC();
  v134[8] = v30;
  __chkstk_darwin(v31);
  sub_100040A70();
  sub_1000464A0(v32);
  v134[6] = sub_100043478(&qword_100232988);
  sub_100020DEC();
  v134[5] = v33;
  __chkstk_darwin(v34);
  sub_100040A70();
  sub_1000464A0(v35);
  uint64_t v144 = sub_100043478(&qword_100232990);
  sub_100020DEC();
  uint64_t v143 = v36;
  __chkstk_darwin(v37);
  sub_100040A70();
  sub_1000464A0(v38);
  uint64_t v141 = sub_100043478(&qword_100232998);
  sub_100020DEC();
  uint64_t v140 = v39;
  uint64_t v41 = __chkstk_darwin(v40);
  v134[10] = (char *)v134 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  sub_1000464A0((uint64_t)v134 - v43);
  v134[2] = sub_100043478(&qword_1002329A0);
  sub_100020DEC();
  v134[1] = v44;
  __chkstk_darwin(v45);
  sub_100040A70();
  sub_10004CF80(v46);
  uint64_t v47 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v47 - 8);
  if (qword_10022C470 != -1) {
    swift_once();
  }
  uint64_t v48 = sub_100043478(&qword_10022E560);
  uint64_t v49 = *(void *)(type metadata accessor for LogMessage() - 8);
  unint64_t v50 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  uint64_t v165 = *(void *)(v49 + 72);
  uint64_t v138 = v48;
  uint64_t v137 = (void *)(v50 + 2 * v165);
  uint64_t v51 = swift_allocObject();
  long long v136 = xmmword_1001C3120;
  *(_OWORD *)(v51 + 16) = xmmword_1001C3120;
  long long v172 = &type metadata for RemoteJetpackLoader;
  id v52 = (id)AMSLogKey();
  if (v52)
  {
    id v53 = v52;
    uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v56 = v55;

    swift_bridgeObjectRetain();
    sub_10004C03C();
    sub_1000480D0();
    sub_100044E0C();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_100048F80(MetatypeMetadata);
    sub_10004357C((uint64_t)&v174, &qword_10022F490);
    sub_100020E44();
    v176 = &type metadata for String;
    uint64_t v174 = v54;
    uint64_t v175 = v56;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004357C((uint64_t)&v174, &qword_10022F490);
    v58._uint64_t countAndFlagsBits = 93;
    v58._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v58);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10004596C();
    sub_1000480D0();
    sub_100044E0C();
    uint64_t v59 = swift_getMetatypeMetadata();
    sub_100048F80(v59);
    sub_10004357C((uint64_t)&v174, &qword_10022F490);
    v60._uint64_t countAndFlagsBits = 58;
    v60._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v60);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v171);
  LogMessage.init(stringLiteral:)();
  uint64_t v61 = static os_log_type_t.info.getter();
  sub_10004841C(v61);
  swift_bridgeObjectRelease();
  sub_10004D510(0, &qword_10022FDF0);
  type metadata accessor for BaseObjectGraph();
  inject<A, B>(_:from:)();
  v163 = v171;
  id v62 = [self defaultManager];
  uint64_t v63 = v168;
  uint64_t v139 = v168 + *(int *)(v162 + 28);
  URL.path.getter();
  NSString v64 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v65 = [v62 fileExistsAtPath:v64];

  *(_OWORD *)(swift_allocObject() + 16) = v136;
  if (v65)
  {
    long long v172 = &type metadata for RemoteJetpackLoader;
    id v66 = (id)AMSLogKey();
    if (v66)
    {
      Swift::String v67 = v66;
      uint64_t v68 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v70 = v69;

      swift_bridgeObjectRetain();
      sub_10004C03C();
      sub_1000480D0();
      sub_100044E0C();
      uint64_t v71 = swift_getMetatypeMetadata();
      sub_100048F80(v71);
      sub_10004215C();
      sub_100020E44();
      v176 = &type metadata for String;
      uint64_t v174 = v68;
      uint64_t v175 = v70;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004215C();
      v72._uint64_t countAndFlagsBits = 93;
      v72._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v72);
      sub_100043BC8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10004596C();
      sub_1000480D0();
      sub_100044E0C();
      uint64_t v80 = swift_getMetatypeMetadata();
      sub_100048F80(v80);
      sub_10004357C((uint64_t)&v174, &qword_10022F490);
      v81._uint64_t countAndFlagsBits = 58;
      v81._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v81);
      sub_100043BC8();
    }
    sub_10004377C((uint64_t)&v171);
    LogMessage.init(stringLiteral:)();
    uint64_t v82 = static os_log_type_t.info.getter();
    sub_10004841C(v82);
    swift_bridgeObjectRelease();
    type metadata accessor for URL();
    static Pipeline.start<A>(with:)();
    type metadata accessor for JetpackBundle();
    PipelinePhase.init(mapOutput:)();
    sub_10002B6DC(&qword_100232A38, &qword_1002329A0);
    uint64_t v83 = (void *)PipelineTask.andThen<A>(_:)();
    sub_1000453D0();
    v84();
    sub_100049B64();
    sub_100043FB0();
    v85();
    uint64_t v171 = v83;
    sub_100046EA0();
    static PipelinePhase.cacheValueIfSuccessful()();
    sub_100043478(&qword_1002329C0);
    sub_10002B6DC(&qword_1002329C8, &qword_1002329C0);
    sub_1000515CC();
    uint64_t v86 = (void *)PipelineTask.andThen<A>(_:)();
    sub_10004B5CC();
  }
  else
  {
    long long v172 = &type metadata for RemoteJetpackLoader;
    id v73 = (id)AMSLogKey();
    if (v73)
    {
      uint64_t v74 = v73;
      uint64_t v75 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v77 = v76;

      swift_bridgeObjectRetain();
      sub_10004C03C();
      sub_1000480D0();
      sub_100044E0C();
      uint64_t v78 = swift_getMetatypeMetadata();
      sub_100048F80(v78);
      sub_10004215C();
      sub_100020E44();
      v176 = &type metadata for String;
      uint64_t v174 = v75;
      uint64_t v175 = v77;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004215C();
      v79._uint64_t countAndFlagsBits = 93;
      v79._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v79);
      sub_100043BC8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10004596C();
      sub_1000480D0();
      sub_100044E0C();
      uint64_t v87 = swift_getMetatypeMetadata();
      sub_100048F80(v87);
      sub_10004357C((uint64_t)&v174, &qword_10022F490);
      v88._uint64_t countAndFlagsBits = 58;
      v88._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v88);
      sub_100043BC8();
    }
    sub_10004377C((uint64_t)&v171);
    LogMessage.init(stringLiteral:)();
    uint64_t v89 = static os_log_type_t.debug.getter();
    sub_10004841C(v89);
    swift_bridgeObjectRelease();
    sub_100043478(&qword_10022FB40);
    static Pipeline.start<A>(with:)();
    sub_10004D510(0, &qword_10022FDE8);
    inject<A, B>(_:from:)();
    Swift::String v90 = v171;
    if (qword_10022C3E0 != -1) {
      swift_once();
    }
    uint64_t v91 = qword_10022D990;
    swift_unknownObjectRetain();
    sub_100046EA0();
    sub_100009924(v135, v63, v90, v163, v91);

    swift_unknownObjectRelease();
    type metadata accessor for URL();
    sub_10002B6DC(&qword_1002329A8, &qword_100232988);
    Swift::String v92 = (void *)PipelineTask.andThen<A>(_:)();
    sub_10004B5CC();
    sub_1000453D0();
    v93();
    sub_100043FB0();
    v94();
    uint64_t v171 = v92;
    sub_100160988();
    if (sub_10004EF18())
    {
      type metadata accessor for Defaults();
      sub_10003A8F4(0);
    }
    type metadata accessor for JetpackBundle();
    static PipelinePhase<>.unpackJetpack(keyURLs:bundleOutputURL:artifactStoreURL:verifySignature:)();
    swift_bridgeObjectRelease();
    sub_100043478(&qword_1002329B0);
    sub_10002B6DC(&qword_1002329B8, &qword_1002329B0);
    uint64_t v95 = (void *)sub_100046028();
    sub_100049B64();
    sub_1000453D0();
    v96();
    swift_release();
    uint64_t v171 = v95;
    sub_10004C8B4();
    sub_100043478(&qword_1002329C0);
    sub_10002B6DC(&qword_1002329C8, &qword_1002329C0);
    uint64_t v86 = (void *)sub_100046028();
    sub_100049B64();
  }
  sub_1000453D0();
  v97();
  swift_release();
  v164 = v86;
  uint64_t v171 = v86;
  uint64_t v98 = v151;
  *uint64_t v151 = xmmword_1001C7B00;
  v98[1] = xmmword_1001C7B10;
  uint64_t v99 = v170;
  uint64_t v100 = *(void (**)(_OWORD *, void, uint64_t))(v170 + 104);
  uint64_t v144 = v170 + 104;
  uint64_t v162 = (uint64_t)v100;
  uint64_t v101 = v167;
  v100(v98, enum case for JetpackBundle.Resource.other(_:), v167);
  type metadata accessor for URL();
  swift_retain();
  static PipelinePhase<>.urlForResource(_:)();
  Swift::String v102 = *(void (**)(void, void))(v99 + 8);
  uint64_t v170 = v99 + 8;
  uint64_t v143 = v102;
  v102(v98, v101);
  uint64_t v142 = sub_100043478(&qword_1002329D0);
  uint64_t v141 = sub_10002B6DC(&qword_1002329D8, &qword_1002329D0);
  Swift::String v103 = (void *)PipelineTask.andThen<A>(_:)();
  uint64_t v104 = *(void *)(v169 + 8);
  v169 += 8;
  uint64_t v140 = v104;
  sub_100043FB0();
  v105();
  swift_release();
  uint64_t v171 = v103;
  *(void *)(swift_allocObject() + 16) = 1;
  sub_100046EA0();
  PipelinePhase.init(mapOutput:)();
  uint64_t v139 = sub_100043478(&qword_1002329E0);
  uint64_t v138 = sub_10002B6DC(&qword_1002329E8, &qword_1002329E0);
  sub_1000515CC();
  uint64_t v106 = (void *)PipelineTask.andThen<A>(_:)();
  sub_10004B5CC();
  sub_1000453D0();
  v107();
  swift_release();
  uint64_t v171 = v106;
  uint64_t v108 = v154;
  sub_100020130(v63, v154);
  uint64_t v109 = *(unsigned __int8 *)(v147 + 80);
  v148 += (v109 + 16) & ~v109;
  uint64_t v110 = (v109 + 16) & ~v109;
  uint64_t v147 = v110;
  uint64_t v146 = v109 | 7;
  uint64_t v111 = swift_allocObject();
  sub_1000200CC(v108, v111 + v110);
  type metadata accessor for JSPackageIndex();
  PipelinePhase.init(mapOutput:)();
  sub_100043478(&qword_1002329F0);
  uint64_t v137 = &protocol conformance descriptor for MapPipelineTask<A, B>;
  sub_10002B6DC(&qword_1002329F8, &qword_1002329F0);
  sub_1000515CC();
  v112 = (void *)PipelineTask.andThen<A>(_:)();
  sub_10004B5CC();
  sub_1000453D0();
  v113();
  swift_release();
  uint64_t v171 = v112;
  sub_100046EA0();
  static PipelinePhase.cacheValueIfSuccessful()();
  sub_100043478(&qword_100232A00);
  sub_10002B6DC(&qword_100232A08, &qword_100232A00);
  uint64_t v165 = PipelineTask.andThen<A>(_:)();
  sub_10004B5CC();
  sub_1000453D0();
  v114();
  swift_release();
  uint64_t v171 = v164;
  ((void (*)(_OWORD *, void, uint64_t))v162)(v98, enum case for JetpackBundle.Resource.source(_:), v167);
  swift_retain();
  static PipelinePhase<>.urlForResource(_:)();
  sub_100043FB0();
  v115();
  Swift::String v116 = (void *)PipelineTask.andThen<A>(_:)();
  sub_100043FB0();
  v117();
  swift_release();
  uint64_t v171 = v116;
  sub_100020130(v168, v108);
  uint64_t v118 = swift_allocObject();
  sub_1000200CC(v108, v118 + v147);
  sub_100043478(&qword_100232A10);
  PipelinePhase.init(mapOutput:)();
  sub_1000515CC();
  Swift::String v119 = (void *)PipelineTask.andThen<A>(_:)();
  sub_10004B5CC();
  sub_1000453D0();
  v120();
  swift_release();
  uint64_t v171 = v119;
  sub_10004C8B4();
  sub_100043478(&qword_100232A18);
  sub_10002B6DC(&qword_100232A20, &qword_100232A18);
  uint64_t v170 = PipelineTask.andThen<A>(_:)();
  sub_100049B64();
  sub_1000453D0();
  v121();
  swift_release();
  dispatch thunk of MapPipelineTask.run()();
  sub_10004D510(0, (unint64_t *)&qword_10022F690);
  uint64_t v122 = enum case for DispatchQoS.QoSClass.default(_:);
  uint64_t v123 = v159;
  uint64_t v124 = v160;
  uint64_t v125 = *(void (**)(uint64_t, uint64_t, uint64_t))(v160 + 104);
  uint64_t v126 = v161;
  v125(v159, enum case for DispatchQoS.QoSClass.default(_:), v161);
  uint64_t v127 = (void *)static OS_dispatch_queue.global(qos:)();
  uint64_t v128 = *(void (**)(uint64_t))(v124 + 8);
  uint64_t v129 = sub_100020AF4();
  v128(v129);
  uint64_t v169 = sub_10016242C((uint64_t)sub_100161828, 0, v127);

  swift_release();
  dispatch thunk of MapPipelineTask.run()();
  long long v172 = (ValueMetadata *)type metadata accessor for SyncTaskScheduler();
  long long v173 = &protocol witness table for SyncTaskScheduler;
  sub_10003BAA4((uint64_t *)&v171);
  SyncTaskScheduler.init()();
  Promise.map<A>(on:_:)();
  swift_release();
  sub_10004377C((uint64_t)&v171);
  v125(v123, v122, v126);
  id v130 = (void *)static OS_dispatch_queue.global(qos:)();
  uint64_t v131 = sub_100020AF4();
  v128(v131);
  sub_100162460((uint64_t)sub_100161840, 0, v130);

  swift_release();
  sub_100043478(&qword_100232A28);
  sub_10002B6DC(&qword_100232A30, &qword_100232A28);
  uint64_t v132 = Promise.join<A>(with:)();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v132;
}

uint64_t sub_100160988()
{
  Dictionary.init(dictionaryLiteral:)();
  swift_bridgeObjectRetain();
  swift_isUniquelyReferenced_nonNull_native();
  sub_10008C9CC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_isUniquelyReferenced_nonNull_native();
  sub_10008C9CC();
  swift_bridgeObjectRelease();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1001612A8(v0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return v1;
}

uint64_t sub_100160B38()
{
  uint64_t v0 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v0 - 8);
  if (qword_10022C470 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v20 = &type metadata for RemoteJetpackLoader;
  id v1 = (id)AMSLogKey();
  if (v1)
  {
    unint64_t v2 = v1;
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v5 = v4;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v6._uint64_t countAndFlagsBits = 0;
    v6._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v6);
    sub_100049788(v19, (uint64_t)v20);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v17[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004357C((uint64_t)v17, &qword_10022F490);
    v8._uint64_t countAndFlagsBits = 5972026;
    v8._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v8);
    uint64_t MetatypeMetadata = &type metadata for String;
    v17[0] = v3;
    v17[1] = v5;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004357C((uint64_t)v17, &qword_10022F490);
    v9._uint64_t countAndFlagsBits = 93;
    v9._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v9);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v10._uint64_t countAndFlagsBits = 0;
    v10._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v10);
    sub_100049788(v19, (uint64_t)v20);
    uint64_t v11 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v17[0] = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004357C((uint64_t)v17, &qword_10022F490);
    v12._uint64_t countAndFlagsBits = 58;
    v12._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v19);
  LogMessage.init(stringLiteral:)();
  swift_getErrorValue();
  uint64_t v20 = v16;
  uint64_t v13 = sub_10003BAA4(v19);
  (*((void (**)(uint64_t *))v16[-1].Description + 2))(v13);
  static LogMessage.safe(_:)();
  sub_10004357C((uint64_t)v19, &qword_10022F490);
  uint64_t v14 = static os_log_type_t.error.getter();
  sub_10004841C(v14);
  swift_bridgeObjectRelease();
  swift_willThrow();
  return swift_errorRetain();
}

uint64_t sub_100160EB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = JSPackageIndex.properties.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100160EF4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v2 - 8);
  if (qword_10022C470 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v23 = &type metadata for RemoteJetpackLoader;
  id v3 = (id)AMSLogKey();
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = a1;
    uint64_t v7 = v6;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v8._uint64_t countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v8);
    sub_100049788(v22, (uint64_t)v23);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v20[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004357C((uint64_t)v20, &qword_10022F490);
    v10._uint64_t countAndFlagsBits = 5972026;
    v10._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v10);
    uint64_t MetatypeMetadata = &type metadata for String;
    v20[0] = v5;
    v20[1] = v7;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004357C((uint64_t)v20, &qword_10022F490);
    v11._uint64_t countAndFlagsBits = 93;
    v11._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    LogMessage.init(stringInterpolation:)();
    a1 = v18;
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v12._uint64_t countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    sub_100049788(v22, (uint64_t)v23);
    uint64_t v13 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v20[0] = v13;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004357C((uint64_t)v20, &qword_10022F490);
    v14._uint64_t countAndFlagsBits = 58;
    v14._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v22);
  LogMessage.init(stringLiteral:)();
  swift_getErrorValue();
  uint64_t v23 = v19;
  uint64_t v15 = sub_10003BAA4(v22);
  (*((void (**)(uint64_t *))v19[-1].Description + 2))(v15);
  static LogMessage.safe(_:)();
  sub_10004357C((uint64_t)v22, &qword_10022F490);
  uint64_t v16 = static os_log_type_t.default.getter();
  sub_10004841C(v16);
  swift_bridgeObjectRelease();
  uint64_t result = Dictionary.init(dictionaryLiteral:)();
  *a1 = result;
  return result;
}

uint64_t sub_1001612A8(uint64_t a1)
{
  uint64_t v2 = sub_100043478(&qword_10022FB40);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v39 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v37 = (char *)v35 - v9;
  uint64_t v48 = _swiftEmptyDictionarySingleton;
  sub_10005370C(a1, v44);
  uint64_t v42 = v44[0];
  int64_t v43 = v46;
  unint64_t v10 = v47;
  v35[1] = v45;
  uint64_t v40 = v44[1];
  int64_t v41 = (unint64_t)(v45 + 64) >> 6;
  uint64_t v36 = v6;
  uint64_t v38 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  for (uint64_t result = swift_bridgeObjectRetain(); ; uint64_t result = swift_bridgeObjectRelease())
  {
    while (1)
    {
      if (v10)
      {
        unint64_t v12 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v13 = v12 | (v43 << 6);
      }
      else
      {
        int64_t v14 = v43 + 1;
        if (__OFADD__(v43, 1)) {
          goto LABEL_38;
        }
        if (v14 >= v41) {
          goto LABEL_36;
        }
        unint64_t v15 = *(void *)(v40 + 8 * v14);
        int64_t v16 = v43 + 1;
        if (!v15)
        {
          int64_t v16 = v43 + 2;
          if (v43 + 2 >= v41) {
            goto LABEL_36;
          }
          unint64_t v15 = *(void *)(v40 + 8 * v16);
          if (!v15)
          {
            int64_t v16 = v43 + 3;
            if (v43 + 3 >= v41) {
              goto LABEL_36;
            }
            unint64_t v15 = *(void *)(v40 + 8 * v16);
            if (!v15)
            {
              int64_t v16 = v43 + 4;
              if (v43 + 4 >= v41) {
                goto LABEL_36;
              }
              unint64_t v15 = *(void *)(v40 + 8 * v16);
              if (!v15)
              {
                int64_t v16 = v43 + 5;
                if (v43 + 5 >= v41) {
                  goto LABEL_36;
                }
                unint64_t v15 = *(void *)(v40 + 8 * v16);
                if (!v15)
                {
                  int64_t v17 = v43 + 6;
                  while (v17 < v41)
                  {
                    unint64_t v15 = *(void *)(v40 + 8 * v17++);
                    if (v15)
                    {
                      int64_t v16 = v17 - 1;
                      goto LABEL_19;
                    }
                  }
LABEL_36:
                  sub_100011E28();
                  return (uint64_t)v48;
                }
              }
            }
          }
        }
LABEL_19:
        unint64_t v10 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
        int64_t v43 = v16;
      }
      uint64_t v18 = *(void *)(*(void *)(v42 + 48) + 8 * v13);
      uint64_t v19 = self;
      swift_bridgeObjectRetain();
      id v20 = [v19 defaultManager];
      NSString v21 = String._bridgeToObjectiveC()();
      unsigned int v22 = [v20 fileExistsAtPath:v21];

      if (v22) {
        break;
      }
      sub_100021AC0((uint64_t)v4, 1, 1, v5);
LABEL_27:
      swift_bridgeObjectRelease();
      uint64_t result = sub_10004357C((uint64_t)v4, &qword_10022FB40);
    }
    URL.init(fileURLWithPath:)();
    sub_100021AC0((uint64_t)v4, 0, 1, v5);
    if (sub_10004FD40((uint64_t)v4, 1, v5) == 1) {
      goto LABEL_27;
    }
    uint64_t v23 = v37;
    uint64_t v24 = *v38;
    (*v38)(v37, v4, v5);
    v24(v39, v23, v5);
    uint64_t v25 = v48;
    if (v48[3] <= v48[2])
    {
      sub_1001A5EA0();
      uint64_t v25 = v48;
    }
    uint64_t result = static Hasher._hash(seed:_:)();
    uint64_t v26 = v25 + 8;
    uint64_t v27 = -1 << *((unsigned char *)v25 + 32);
    unint64_t v28 = result & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~v25[(v28 >> 6) + 8]) == 0) {
      break;
    }
    unint64_t v30 = __clz(__rbit64((-1 << v28) & ~v25[(v28 >> 6) + 8])) | v28 & 0x7FFFFFFFFFFFFFC0;
LABEL_35:
    *(void *)((char *)v26 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
    *(void *)(v25[6] + 8 * v30) = v18;
    v24((char *)(v25[7] + *(void *)(v36 + 72) * v30), v39, v5);
    ++v25[2];
  }
  char v31 = 0;
  unint64_t v32 = (unint64_t)(63 - v27) >> 6;
  while (++v29 != v32 || (v31 & 1) == 0)
  {
    BOOL v33 = v29 == v32;
    if (v29 == v32) {
      unint64_t v29 = 0;
    }
    v31 |= v33;
    uint64_t v34 = v26[v29];
    if (v34 != -1)
    {
      unint64_t v30 = __clz(__rbit64(~v34)) + (v29 << 6);
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_100161784()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100161794@<X0>(uint64_t *a1@<X8>)
{
  return sub_100156DB0(a1);
}

uint64_t sub_1001617B4()
{
  uint64_t v0 = sub_1000441B8();
  sub_100044E90(v0);
  uint64_t v1 = sub_1000212C4();
  return sub_1001623E8(v1, v2, v3);
}

uint64_t sub_1001617F0()
{
  uint64_t v0 = sub_1000441B8();
  sub_100044E90(v0);
  uint64_t v1 = sub_1000212C4();
  return sub_10015E130(v1, v2, v3);
}

uint64_t sub_100161828()
{
  return sub_100160B38();
}

uint64_t sub_100161840@<X0>(uint64_t *a1@<X8>)
{
  return sub_100160EF4(a1);
}

uint64_t sub_100161858(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for JSStackContext();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for RemoteJetpackV2Loader()
{
  return &type metadata for RemoteJetpackV2Loader;
}

uint64_t sub_1001618C4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v53 = a3;
  uint64_t v47 = a4;
  uint64_t v6 = type metadata accessor for JSONContext();
  __chkstk_darwin(v6 - 8);
  uint64_t v46 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for JSONObject();
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for JSStackContext();
  __chkstk_darwin(v51);
  uint64_t v52 = (uint64_t)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100043478(&qword_10022FB40);
  __chkstk_darwin(v12 - 8);
  uint64_t v49 = (uint64_t)v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for URL();
  uint64_t v55 = *(void *)(v60 - 8);
  uint64_t v14 = __chkstk_darwin(v60);
  uint64_t v45 = (char *)v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v54 = (char *)v44 - v16;
  uint64_t v17 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v17 - 8);
  if (qword_10022C470 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v48 = *(void *)(*(void *)(type metadata accessor for LogMessage() - 8) + 72);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v18 = sub_100043478(&qword_100232968);
  uint64_t v59 = sub_100043478(&qword_100232AB0);
  v58[0] = v18;
  id v19 = (id)AMSLogKey();
  if (v19)
  {
    id v20 = v19;
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v44[1] = v10;
    uint64_t v22 = v21;
    uint64_t v24 = v23;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v25._uint64_t countAndFlagsBits = 0;
    v25._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    sub_100049788(v58, v59);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v56[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v56, &qword_10022F490);
    v27._uint64_t countAndFlagsBits = 5972026;
    v27._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    uint64_t MetatypeMetadata = &type metadata for String;
    v56[0] = v22;
    v56[1] = v24;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v56, &qword_10022F490);
    v28._uint64_t countAndFlagsBits = 93;
    v28._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v29._uint64_t countAndFlagsBits = 0;
    v29._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v29);
    sub_100049788(v58, v59);
    uint64_t v30 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v56[0] = v30;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v56, &qword_10022F490);
    v31._uint64_t countAndFlagsBits = 58;
    v31._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v31);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v58);
  LogMessage.init(stringLiteral:)();
  uint64_t v32 = static os_log_type_t.debug.getter();
  sub_10004841C(v32);
  swift_bridgeObjectRelease();
  uint64_t v33 = v51;
  uint64_t v34 = v53;
  uint64_t v35 = v49;
  sub_100006084(v53 + *(int *)(v51 + 32), v49);
  uint64_t v36 = v34;
  uint64_t v37 = v52;
  sub_100020130(v36, v52);
  uint64_t v38 = v60;
  int v39 = sub_10004FD40(v35, 1, v60);
  uint64_t v40 = v54;
  if (v39 == 1)
  {
    uint64_t v41 = v55;
    (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v54, v37 + *(int *)(v33 + 40), v38);
    sub_100161858(v37);
    sub_1000435D4(v35, &qword_10022FB40);
  }
  else
  {
    sub_100161858(v37);
    uint64_t v41 = v55;
    (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v40, v35, v38);
  }
  sub_10004EA44(a1, a2);
  uint64_t v42 = v50;
  JSONObject.init(deserializing:)();
  if (!v42)
  {
    JSONContext.init()();
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v45, v40, v38);
    JSPackageIndex.init(deserializing:using:from:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v40, v38);
}

uint64_t sub_100161F20()
{
  uint64_t v0 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v0 - 8);
  if (qword_10022C470 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  id v20 = &type metadata for RemoteJetpackV2Loader;
  id v1 = (id)AMSLogKey();
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v5 = v4;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v6._uint64_t countAndFlagsBits = 0;
    v6._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v6);
    sub_100049788(v19, (uint64_t)v20);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v17[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v17, &qword_10022F490);
    v8._uint64_t countAndFlagsBits = 5972026;
    v8._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v8);
    uint64_t MetatypeMetadata = &type metadata for String;
    v17[0] = v3;
    v17[1] = v5;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v17, &qword_10022F490);
    v9._uint64_t countAndFlagsBits = 93;
    v9._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v9);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v10._uint64_t countAndFlagsBits = 0;
    v10._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v10);
    sub_100049788(v19, (uint64_t)v20);
    uint64_t v11 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v17[0] = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v17, &qword_10022F490);
    v12._uint64_t countAndFlagsBits = 58;
    v12._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v19);
  LogMessage.init(stringLiteral:)();
  swift_getErrorValue();
  id v20 = v16;
  uint64_t v13 = sub_10003BAA4(v19);
  (*((void (**)(uint64_t *))v16[-1].Description + 2))(v13);
  static LogMessage.safe(_:)();
  sub_1000435D4((uint64_t)v19, &qword_10022F490);
  uint64_t v14 = static os_log_type_t.error.getter();
  sub_10004841C(v14);
  swift_bridgeObjectRelease();
  swift_willThrow();
  return swift_errorRetain();
}

uint64_t sub_1001622A0()
{
  type metadata accessor for JSStackContext();
  sub_1000469A8();
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = type metadata accessor for URL();
  sub_100043B1C();
  Swift::String v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v1 + v5, v8);
  if (!sub_100043D78(v0[5])) {
    v10(v2, v8);
  }
  uint64_t v11 = sub_100048FA0(v0[6]);
  ((void (*)(uint64_t))v10)(v11);
  uint64_t v12 = sub_100048FA0(v0[7]);
  ((void (*)(uint64_t))v10)(v12);
  if (!sub_100043D78(v0[8])) {
    v10(v2, v8);
  }
  uint64_t v13 = sub_100048FA0(v0[9]);
  ((void (*)(uint64_t))v10)(v13);
  uint64_t v14 = sub_100048FA0(v0[10]);
  ((void (*)(uint64_t))v10)(v14);

  return _swift_deallocObject(v1, v7 + v5 + 1, v4 | 7);
}

uint64_t sub_1001623E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1001618C4(*(void *)a1, *(void *)(a1 + 8), a2, a3);
}

uint64_t sub_100162414()
{
  return sub_100161F20();
}

uint64_t sub_10016242C(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_10001FFAC(a1, a2, a3);
}

uint64_t sub_100162460(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_10001FFAC(a1, a2, a3);
}

uint64_t sub_10016249C()
{
  return sub_1000B971C();
}

id sub_1001624A8(uint64_t a1, SEL *a2)
{
  sub_10005370C(a1, v15);
  uint64_t v3 = v15[0];
  uint64_t v4 = v15[1];
  int64_t v5 = v15[3];
  unint64_t v6 = v15[4];
  int64_t v7 = (unint64_t)(v15[2] + 64) >> 6;
  id result = (id)swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v10 = v9 | (v5 << 6);
  while (1)
  {
    id result = [*(id *)(*(void *)(*(void *)(v3 + 56) + 8 * v10)+ OBJC_IVAR____TtC14amsengagementd18XPCServiceProvider_listener) *a2];
    if (v6) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v11 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (v11 >= v7) {
      return (id)swift_release();
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    int64_t v13 = v5 + 1;
    if (!v12)
    {
      int64_t v13 = v5 + 2;
      if (v5 + 2 >= v7) {
        return (id)swift_release();
      }
      unint64_t v12 = *(void *)(v4 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v5 + 3;
        if (v5 + 3 >= v7) {
          return (id)swift_release();
        }
        unint64_t v12 = *(void *)(v4 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v5 + 4;
          if (v5 + 4 >= v7) {
            return (id)swift_release();
          }
          unint64_t v12 = *(void *)(v4 + 8 * v13);
          if (!v12)
          {
            int64_t v13 = v5 + 5;
            if (v5 + 5 >= v7) {
              return (id)swift_release();
            }
            unint64_t v12 = *(void *)(v4 + 8 * v13);
            if (!v12)
            {
              int64_t v14 = v5 + 6;
              while (v14 < v7)
              {
                unint64_t v12 = *(void *)(v4 + 8 * v14++);
                if (v12)
                {
                  int64_t v13 = v14 - 1;
                  goto LABEL_18;
                }
              }
              return (id)swift_release();
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v5 = v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_100162604(uint64_t a1)
{
  return sub_100049620(a1, 42, 0x80000001001D6680, &qword_100244180);
}

uint64_t sub_100162624(uint64_t a1)
{
  return sub_100049620(a1, 51, 0x80000001001D66B0, &qword_100244188);
}

uint64_t sub_100162644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  sub_100020DEC();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_100020EAC();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v11);
  sub_100018FA0();
  uint64_t v12 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v12 - 8);
  sub_100020EAC();
  sub_10004D510(0, (unint64_t *)&qword_10022F690);
  static DispatchQoS.unspecified.getter();
  sub_10002AFB0((unint64_t *)&qword_10022F470, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100043478((uint64_t *)&unk_100231D60);
  sub_10002B720((unint64_t *)&qword_10022F480, (uint64_t *)&unk_100231D60);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v4);
  uint64_t result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *a4 = result;
  return result;
}

uint64_t sub_100162840(uint64_t a1)
{
  return sub_100049620(a1, 54, 0x80000001001D6800, &qword_100244190);
}

uint64_t sub_100162860()
{
  uint64_t v1 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v1 - 8);
  sub_100020EAC();
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v27 = type metadata accessor for RunLoop();
  v26[0] = v0;
  id v2 = v0;
  id v3 = (id)AMSLogKey();
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v8._uint64_t countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v8);
    sub_100049788(v26, v27);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v24[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v24);
    v10._uint64_t countAndFlagsBits = 5972026;
    v10._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v10);
    uint64_t MetatypeMetadata = &type metadata for String;
    v24[0] = v5;
    v24[1] = v7;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v24);
    v11._uint64_t countAndFlagsBits = 93;
    v11._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v12._uint64_t countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    sub_100049788(v26, v27);
    uint64_t v13 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v24[0] = v13;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v24);
    v14._uint64_t countAndFlagsBits = 58;
    v14._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v26);
  LogMessage.init(stringLiteral:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v15 = static os_log_type_t.default.getter();
  sub_10004841C(v15);
  swift_bridgeObjectRelease();
  uint64_t v16 = qword_10022C5C8;
  id v17 = v2;
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1000469C8();
  sub_10002A570(v18, v19);
  sub_1001632F8();
  uint64_t v21 = sub_1000469C8();
  sub_10000A734(v21, v22);

  sub_10016363C();
  return sub_10016324C();
}

uint64_t sub_100162BF0(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC14amsengagementd7RunLoop_cloudKitPushSubscription) = a1;
  return swift_release();
}

uint64_t sub_100162C08(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC14amsengagementd7RunLoop_terminationSignalSource) = a1;
  return swift_unknownObjectRelease();
}

uint64_t sub_100162C20()
{
  uint64_t v16 = type metadata accessor for DispatchWorkItemFlags();
  sub_100020DEC();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_100020EAC();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for DispatchQoS();
  sub_100020DEC();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_100018FA0();
  sub_10004D510(0, &qword_100232B78);
  static OS_dispatch_source.makeSignalSource(signal:queue:)();
  swift_getObjectType();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v0;
  aBlock[4] = sub_100163F74;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CD0C;
  void aBlock[3] = &unk_100215CC0;
  uint64_t v13 = _Block_copy(aBlock);
  v0;
  static DispatchQoS.unspecified.getter();
  sub_1001630FC();
  OS_dispatch_source.setEventHandler(qos:flags:handler:)();
  _Block_release(v13);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v16);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v1, v8);
  swift_release();
  uint64_t v14 = swift_unknownObjectRetain();
  sub_100162C08(v14);
  OS_dispatch_source.activate()();
  return swift_unknownObjectRelease();
}

void sub_100162E38(void *a1)
{
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v2 - 8);
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v20 = type metadata accessor for RunLoop();
  v19[0] = a1;
  id v3 = a1;
  id v4 = (id)AMSLogKey();
  if (v4)
  {
    uint64_t v8 = v4;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v12._uint64_t countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    sub_100049788(v19, v20);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v17[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v17);
    v14._uint64_t countAndFlagsBits = 5972026;
    v14._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    uint64_t MetatypeMetadata = &type metadata for String;
    v17[0] = v9;
    v17[1] = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v17);
    v15._uint64_t countAndFlagsBits = 93;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v5._uint64_t countAndFlagsBits = 0;
    v5._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v5);
    sub_100049788(v19, v20);
    uint64_t v6 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v17[0] = v6;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v17);
    v7._uint64_t countAndFlagsBits = 58;
    v7._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v7);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v19);
  LogMessage.init(stringLiteral:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v16 = static os_log_type_t.default.getter();
  sub_10004841C(v16);
  swift_bridgeObjectRelease();
  exit(0);
}

uint64_t sub_1001630FC()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_1001631C4()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC14amsengagementd7RunLoop_terminationSignalSource))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    OS_dispatch_source.cancel()();
    sub_100162C08(0);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10016324C()
{
  if (qword_10022C3F0 != -1) {
    swift_once();
  }
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_1001624A8(v0, (SEL *)&selRef_suspend);
  swift_bridgeObjectRelease();
  sub_10017BB28();
  return sub_1001631C4();
}

uint64_t sub_1001632F8()
{
  setenv("JSC_criticalGCMemoryThreshold", "0.25", 1);
  setenv("JavaScriptCoreUseJIT", "0", 1);
  uint64_t v0 = self;
  [v0 setHARLoggingItemLimit:0];
  [v0 setPreferEphemeralURLSessions:1];
  type metadata accessor for Migrator();
  sub_100143E00();
  sub_100162C20();
  sub_10017B254();
  if (qword_10022C3F0 != -1) {
    swift_once();
  }
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_1001624A8(v1, (SEL *)&selRef_resume);
  swift_bridgeObjectRelease();
  if (qword_10022C3C8 != -1) {
    swift_once();
  }
  sub_1000647B8();
  if (qword_10022C570 != -1) {
    swift_once();
  }
  type metadata accessor for ActivityObserver();
  swift_initStaticObject();
  sub_100068308();
  if (qword_10022C580 != -1) {
    swift_once();
  }
  sub_10015C618();
  if (qword_10022C5D8 != -1) {
    swift_once();
  }
  if (qword_10022C568 != -1) {
    swift_once();
  }
  if (qword_10022C5C0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10015D018(0xD000000000000033, 0x80000001001D44D0, (uint64_t)sub_1001635E0, 0);
  sub_100162BF0(v2);
  type metadata accessor for ServerDataCacheService();
  id v3 = objc_msgSend(self, "ams_sharedAccountStore");
  sub_10016DD2C();

  return 1;
}

void sub_1001635E0()
{
  if (qword_10022C550 != -1) {
    swift_once();
  }
  sub_1001384B4();
}

void sub_10016363C()
{
  char v2 = 1;
  do
  {
    sub_100163698(v0, &v2);
  }
  while ((v2 & 1) != 0);
}

uint64_t sub_100163698(void *a1, unsigned char *a2)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  CFRunLoopRunResult v5 = CFRunLoopRunInMode(kCFRunLoopDefaultMode, 15.0, 0);
  if ((v5 - 3) >= 2)
  {
    if ((v5 - 1) > 1)
    {
      _StringGuts.grow(_:)(23);
      v40._uint64_t countAndFlagsBits = 0xD000000000000015;
      v40._object = (void *)0x80000001001D6710;
      String.append(_:)(v40);
      type metadata accessor for CFRunLoopRunResult(0);
      _print_unlocked<A, B>(_:_:)();
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
    else
    {
      sub_100043478(&qword_10022E560);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      uint64_t v45 = (void *)type metadata accessor for RunLoop();
      uint64_t v44 = (uint64_t)a1;
      id v18 = a1;
      id v19 = (id)AMSLogKey();
      if (v19)
      {
        uint64_t v20 = v19;
        uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v23 = v22;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v24._uint64_t countAndFlagsBits = 0;
        v24._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v24);
        sub_100049788(&v44, (uint64_t)v45);
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v41 = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)&v41);
        v26._uint64_t countAndFlagsBits = 5972026;
        v26._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v26);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v41 = v21;
        uint64_t v42 = v23;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)&v41);
        v27._uint64_t countAndFlagsBits = 93;
        v27._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v27);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v28._uint64_t countAndFlagsBits = 0;
        v28._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v28);
        sub_100049788(&v44, (uint64_t)v45);
        uint64_t v29 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v41 = v29;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)&v41);
        v30._uint64_t countAndFlagsBits = 58;
        v30._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v30);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)&v44);
      LogMessage.init(stringLiteral:)();
      if (qword_10022C460 != -1) {
        swift_once();
      }
      uint64_t v31 = static os_log_type_t.debug.getter();
      sub_10004841C(v31);
      uint64_t result = swift_bridgeObjectRelease();
      *a2 = 0;
    }
  }
  else
  {
    if (qword_10022C5C8 != -1) {
      swift_once();
    }
    uint64_t result = sub_1001897FC();
    if (result >= 1)
    {
      uint64_t v7 = result;
      if (qword_10022C4D0 != -1) {
        swift_once();
      }
      sub_100043478(&qword_10022E560);
      uint64_t v46 = *(void *)(*(void *)(type metadata accessor for LogMessage() - 8) + 72);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      uint64_t v45 = (void *)type metadata accessor for RunLoop();
      uint64_t v44 = (uint64_t)a1;
      id v8 = a1;
      id v9 = (id)AMSLogKey();
      if (v9)
      {
        uint64_t v10 = v9;
        uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v13 = v12;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v14._uint64_t countAndFlagsBits = 0;
        v14._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v14);
        sub_100049788(&v44, (uint64_t)v45);
        uint64_t v15 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v41 = v15;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)&v41);
        v16._uint64_t countAndFlagsBits = 5972026;
        v16._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v16);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v41 = v11;
        uint64_t v42 = v13;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)&v41);
        v17._uint64_t countAndFlagsBits = 93;
        v17._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v17);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v32._uint64_t countAndFlagsBits = 0;
        v32._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v32);
        sub_100049788(&v44, (uint64_t)v45);
        uint64_t v33 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v41 = v33;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)&v41);
        v34._uint64_t countAndFlagsBits = 58;
        v34._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v34);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)&v44);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v35._uint64_t countAndFlagsBits = 0x7261206572656854;
      v35._object = (void *)0xEA00000000002065;
      LogMessage.StringInterpolation.appendLiteral(_:)(v35);
      uint64_t v45 = &type metadata for Int;
      uint64_t v44 = v7;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v44);
      v36._object = (void *)0x80000001001D6730;
      v36._uint64_t countAndFlagsBits = 0xD000000000000016;
      LogMessage.StringInterpolation.appendLiteral(_:)(v36);
      uint64_t v37 = sub_1001896E8();
      uint64_t v45 = (void *)sub_10004D510(0, &qword_100232B70);
      uint64_t v44 = v37;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v44);
      v38._uint64_t countAndFlagsBits = 0;
      v38._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v38);
      LogMessage.init(stringInterpolation:)();
      uint64_t v39 = static os_log_type_t.debug.getter();
      sub_10004841C(v39);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

id sub_100163DEC()
{
  *(void *)&v0[OBJC_IVAR____TtC14amsengagementd7RunLoop_cloudKitPushSubscription] = 0;
  uint64_t v1 = OBJC_IVAR____TtC14amsengagementd7RunLoop_setupAssistantObserver;
  type metadata accessor for SetupAssistantObserver();
  uint64_t v2 = swift_allocObject();
  *(_DWORD *)(v2 + 16) = 0;
  *(void *)&v0[v1] = v2;
  *(void *)&v0[OBJC_IVAR____TtC14amsengagementd7RunLoop_terminationSignalSource] = 0;
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for RunLoop();
  return objc_msgSendSuper2(&v4, "init");
}

id sub_100163E88()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RunLoop();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for RunLoop()
{
  return self;
}

uint64_t sub_100163F3C()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100163F74()
{
  sub_100162E38(*(void **)(v0 + 16));
}

BOOL sub_100163F7C(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v5 = sub_1000208F0(v4);
  __chkstk_darwin(v5);
  sub_100020658();
  uint64_t v6 = sub_100043478(&qword_10022E6E0);
  uint64_t v7 = sub_1000208F0(v6);
  __chkstk_darwin(v7);
  sub_100022558();
  type metadata accessor for AppDatabase();
  sub_10004C06C();
  if (v1)
  {
    if (qword_10022C4B8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v9 = type metadata accessor for LogMessage();
    sub_100044798(v9);
    *(_OWORD *)(sub_10004734C() + 16) = xmmword_1001C3120;
    uint64_t v29 = sub_100043478(&qword_100232B80);
    v28[0] = (uint64_t)&type metadata for ScheduleDatabase;
    id v10 = (id)AMSLogKey();
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100044E44();
      sub_1000211AC();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_100043AFC(MetatypeMetadata);
      sub_100046EAC();
      v16._uint64_t countAndFlagsBits = 5972026;
      v16._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v16);
      void v27[3] = &type metadata for String;
      v27[0] = v12;
      v27[1] = v14;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100046EAC();
      v17._uint64_t countAndFlagsBits = 93;
      v17._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v17);
      sub_100046D6C();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100044E44();
      sub_1000211AC();
      uint64_t v18 = swift_getMetatypeMetadata();
      sub_100043AFC(v18);
      sub_10002CBB4((uint64_t)v27, &qword_10022F490);
      v19._uint64_t countAndFlagsBits = 58;
      v19._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v19);
      sub_100046D6C();
    }
    sub_10004A628();
    sub_1000515D8((uint64_t)"Failed to fetch schedules. ");
    swift_getErrorValue();
    uint64_t v29 = v26;
    sub_10003BAA4(v28);
    sub_1000456E0();
    sub_100011DCC();
    v20();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v28, &qword_10022F490);
    v21._uint64_t countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    sub_100046D6C();
    uint64_t v22 = static os_log_type_t.error.getter();
    sub_10004841C(v22);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    return 0;
  }
  else
  {
    sub_10007E6A0();
    swift_release();
    uint64_t v8 = type metadata accessor for ScheduleInfo.Metadata(0);
    sub_100085C64(*(void *)(a1 + *(int *)(v8 + 44)), *(void *)(a1 + *(int *)(v8 + 44) + 8), v2);
    swift_release();
    uint64_t v24 = type metadata accessor for ScheduleInfo(0);
    BOOL v25 = sub_10004FD40(v2, 1, v24) != 1;
    sub_10002CBB4(v2, &qword_10022E6E0);
  }
  return v25;
}

uint64_t sub_1001642E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v3 = sub_1000208F0(v2);
  __chkstk_darwin(v3);
  sub_100020658();
  if (qword_10022C4B8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v4 = type metadata accessor for LogMessage();
  sub_100044798(v4);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v33 = sub_100043478(&qword_100232B80);
  uint64_t v41 = (void *)v33;
  uint64_t v39 = &type metadata for ScheduleDatabase;
  id v5 = (id)AMSLogKey();
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;

    swift_bridgeObjectRetain();
    sub_100049814();
    sub_100044E44();
    sub_1000211AC();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_100043AFC(MetatypeMetadata);
    sub_10002CBB4((uint64_t)&v36, &qword_10022F490);
    sub_100020E44();
    Swift::String v38 = &type metadata for String;
    uint64_t v36 = v7;
    uint64_t v37 = v9;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)&v36, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020ECC();
    sub_100044E44();
    sub_1000211AC();
    uint64_t v11 = swift_getMetatypeMetadata();
    sub_100043AFC(v11);
    sub_10002CBB4((uint64_t)&v36, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v39);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._object = (void *)0x80000001001D68D0;
  v12._uint64_t countAndFlagsBits = 0xD000000000000015;
  LogMessage.StringInterpolation.appendLiteral(_:)(v12);
  uint64_t v13 = (unsigned __int8 *)(a1 + *(int *)(type metadata accessor for ScheduleInfo(0) + 20));
  uint64_t v14 = (ValueMetadata *)sub_1001681E4();
  uint64_t v41 = &type metadata for String;
  uint64_t v39 = v14;
  Swift::String v40 = v15;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CBB4((uint64_t)&v39, &qword_10022F490);
  sub_100020E60();
  LogMessage.init(stringInterpolation:)();
  uint64_t v16 = static os_log_type_t.default.getter();
  sub_10004841C(v16);
  swift_bridgeObjectRelease();
  uint64_t v17 = *v13;
  type metadata accessor for AppDatabase();
  sub_1000124C0(v17);
  if (v34)
  {
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v41 = (void *)v33;
    uint64_t v39 = &type metadata for ScheduleDatabase;
    id v18 = (id)AMSLogKey();
    if (v18)
    {
      Swift::String v19 = v18;
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v22 = v21;

      swift_bridgeObjectRetain();
      sub_100049814();
      sub_100044E44();
      sub_1000211AC();
      uint64_t v23 = swift_getMetatypeMetadata();
      sub_100043AFC(v23);
      sub_10004C8D4();
      sub_100020E44();
      Swift::String v38 = &type metadata for String;
      uint64_t v36 = v20;
      uint64_t v37 = v22;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004C8D4();
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020ECC();
      sub_100044E44();
      sub_1000211AC();
      uint64_t v24 = swift_getMetatypeMetadata();
      sub_100043AFC(v24);
      sub_10002CBB4((uint64_t)&v36, &qword_10022F490);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v39);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v25._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
    v25._object = (void *)0x80000001001D68F0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    uint64_t v26 = (ValueMetadata **)&v13[*(int *)(type metadata accessor for ScheduleInfo.Metadata(0) + 44)];
    Swift::String v28 = *v26;
    Swift::String v27 = v26[1];
    uint64_t v41 = &type metadata for String;
    uint64_t v39 = v28;
    Swift::String v40 = v27;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002D3F0();
    v29._uint64_t countAndFlagsBits = 8238;
    v29._object = (void *)0xE200000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v29);
    swift_getErrorValue();
    uint64_t v41 = v35;
    sub_10003BAA4((uint64_t *)&v39);
    sub_1000456E0();
    sub_100011DCC();
    v30();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002D3F0();
    sub_100020E60();
    LogMessage.init(stringInterpolation:)();
    uint64_t v31 = static os_log_type_t.error.getter();
    sub_10004841C(v31);
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  else
  {
    sub_10007E6A0();
    swift_release();
    sub_100087974(a1);
    return swift_release();
  }
}

uint64_t sub_100164850()
{
  uint64_t v1 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v2 = sub_1000208F0(v1);
  __chkstk_darwin(v2);
  sub_100020658();
  type metadata accessor for AppDatabase();
  sub_10004C06C();
  if (v0)
  {
    if (qword_10022C4B8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v3 = type metadata accessor for LogMessage();
    sub_100044798(v3);
    *(_OWORD *)(sub_10004734C() + 16) = xmmword_1001C3120;
    uint64_t v21 = sub_100043478(&qword_100232B80);
    v20[0] = (uint64_t)&type metadata for ScheduleDatabase;
    id v4 = (id)AMSLogKey();
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v8 = v7;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100044E44();
      sub_1000211AC();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_100043AFC(MetatypeMetadata);
      sub_100046EAC();
      v10._uint64_t countAndFlagsBits = 5972026;
      v10._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v10);
      void v19[3] = &type metadata for String;
      v19[0] = v6;
      v19[1] = v8;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100046EAC();
      v11._uint64_t countAndFlagsBits = 93;
      v11._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v11);
      sub_100046D6C();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100044E44();
      sub_1000211AC();
      uint64_t v12 = swift_getMetatypeMetadata();
      sub_100043AFC(v12);
      sub_10002CBB4((uint64_t)v19, &qword_10022F490);
      v13._uint64_t countAndFlagsBits = 58;
      v13._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v13);
      sub_100046D6C();
    }
    sub_10004A628();
    sub_1000515D8((uint64_t)"Failed to fetch schedules. ");
    swift_getErrorValue();
    uint64_t v21 = v18;
    sub_10003BAA4(v20);
    sub_1000456E0();
    sub_100011DCC();
    v14();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v20, &qword_10022F490);
    v15._uint64_t countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    sub_100046D6C();
    uint64_t v16 = static os_log_type_t.error.getter();
    sub_10004841C(v16);
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
  else
  {
    sub_10007E6A0();
    swift_release();
    sub_10008538C();
    return swift_release();
  }
}

uint64_t sub_100164B6C(ValueMetadata *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v5 = sub_1000208F0(v4);
  __chkstk_darwin(v5);
  sub_100020658();
  if (qword_10022C4B8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v6 = type metadata accessor for LogMessage();
  sub_100044798(v6);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v31 = sub_100043478(&qword_100232B80);
  uint64_t v42 = (void *)v31;
  Swift::String v40 = &type metadata for ScheduleDatabase;
  id v7 = (id)AMSLogKey();
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = a2;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    swift_bridgeObjectRetain();
    sub_100049814();
    sub_100044E44();
    sub_1000211AC();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_100043AFC(MetatypeMetadata);
    sub_10002CBB4((uint64_t)&v37, &qword_10022F490);
    sub_100020E44();
    uint64_t v39 = &type metadata for String;
    uint64_t v37 = v10;
    uint64_t v38 = v12;
    a2 = v9;
    uint64_t v14 = (uint64_t)a1;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)&v37, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020ECC();
    sub_100044E44();
    sub_1000211AC();
    uint64_t v15 = swift_getMetatypeMetadata();
    sub_100043AFC(v15);
    sub_10002CBB4((uint64_t)&v37, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
    uint64_t v14 = (uint64_t)a1;
  }
  sub_10004377C((uint64_t)&v40);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._object = (void *)0x80000001001D6840;
  v16._uint64_t countAndFlagsBits = 0xD000000000000012;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  uint64_t v42 = &type metadata for String;
  Swift::String v40 = (ValueMetadata *)v14;
  uint64_t v41 = a2;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CBB4((uint64_t)&v40, &qword_10022F490);
  v17._uint64_t countAndFlagsBits = 0x206D6F726620;
  v17._object = (void *)0xE600000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v17);
  uint64_t v42 = &unk_10020E0E8;
  LOBYTE(v40) = a3;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CBB4((uint64_t)&v40, &qword_10022F490);
  sub_100020E60();
  LogMessage.init(stringInterpolation:)();
  uint64_t v18 = static os_log_type_t.default.getter();
  sub_10004841C(v18);
  swift_bridgeObjectRelease();
  type metadata accessor for AppDatabase();
  sub_1000124C0(a3);
  if (v34)
  {
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v42 = (void *)v31;
    Swift::String v40 = &type metadata for ScheduleDatabase;
    id v19 = (id)AMSLogKey();
    if (v19)
    {
      uint64_t v20 = v19;
      uint64_t v33 = a2;
      uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v23 = v22;

      swift_bridgeObjectRetain();
      sub_100049814();
      sub_100044E44();
      sub_1000211AC();
      uint64_t v24 = swift_getMetatypeMetadata();
      sub_100043AFC(v24);
      sub_10004C8D4();
      sub_100020E44();
      uint64_t v39 = &type metadata for String;
      uint64_t v37 = v21;
      uint64_t v38 = v23;
      a2 = v33;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10004C8D4();
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020ECC();
      sub_100044E44();
      sub_1000211AC();
      uint64_t v25 = swift_getMetatypeMetadata();
      sub_100043AFC(v25);
      sub_10002CBB4((uint64_t)&v37, &qword_10022F490);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v40);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v26._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
    v26._object = (void *)0x80000001001D6860;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    uint64_t v42 = &type metadata for String;
    Swift::String v40 = a1;
    uint64_t v41 = a2;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002D3F0();
    v27._uint64_t countAndFlagsBits = 8238;
    v27._object = (void *)0xE200000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    swift_getErrorValue();
    uint64_t v42 = v36;
    sub_10003BAA4((uint64_t *)&v40);
    sub_1000456E0();
    sub_100011DCC();
    v28();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002D3F0();
    sub_100020E60();
    LogMessage.init(stringInterpolation:)();
    uint64_t v29 = static os_log_type_t.error.getter();
    sub_10004841C(v29);
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  else
  {
    sub_10007E6A0();
    swift_release();
    sub_1000875E4(v14, a2);
    return swift_release();
  }
}

uint64_t sub_100165118(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  sub_1000BA424();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) + 16);
  sub_1000BA4B0(v4);
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(v5 + 16) = v4 + 1;
  uint64_t v6 = type metadata accessor for ScheduleInfo.Metadata(0);
  sub_100044798(v6);
  sub_1001655D4(a1, v5+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v8 + 72) * v4);
  swift_endAccess();
  return 1;
}

uint64_t sub_1001651D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v10 = sub_1000208F0(v9);
  __chkstk_darwin(v10);
  sub_100022558();
  type metadata accessor for AppDatabase();
  sub_1000124C0(a3);
  if (v4)
  {
    if (qword_10022C4B8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v11 = type metadata accessor for LogMessage();
    sub_100044798(v11);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v31 = &type metadata for ScheduleDatabase;
    id v12 = (id)AMSLogKey();
    if (v12)
    {
      Swift::String v13 = v12;
      uint64_t v27 = a2;
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v16 = v15;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v17._uint64_t countAndFlagsBits = 0;
      v17._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v17);
      sub_100041F7C();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_10002069C(MetatypeMetadata);
      sub_10002CBB4((uint64_t)v29, &qword_10022F490);
      sub_100020E44();
      uint64_t v29[3] = &type metadata for String;
      v29[0] = v14;
      v29[1] = v16;
      a2 = v27;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)v29, &qword_10022F490);
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v19._uint64_t countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v19);
      sub_100041F7C();
      uint64_t v20 = swift_getMetatypeMetadata();
      sub_10002069C(v20);
      sub_10002CBB4((uint64_t)v29, &qword_10022F490);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v30);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v21._object = (void *)0x80000001001D6880;
    v21._uint64_t countAndFlagsBits = 0xD000000000000029;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    uint64_t v31 = (ValueMetadata *)&type metadata for String;
    v30[0] = a1;
    v30[1] = a2;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v30, &qword_10022F490);
    v22._uint64_t countAndFlagsBits = 0x70706120726F6620;
    v22._object = (void *)0xE900000000000020;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    uint64_t v31 = (ValueMetadata *)&unk_10020E0E8;
    LOBYTE(v30[0]) = a3;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v30, &qword_10022F490);
    v23._uint64_t countAndFlagsBits = 8238;
    v23._object = (void *)0xE200000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    swift_getErrorValue();
    uint64_t v31 = v28;
    sub_10003BAA4(v30);
    sub_1000456E0();
    sub_100011DCC();
    v24();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v30, &qword_10022F490);
    sub_100020E60();
    LogMessage.init(stringInterpolation:)();
    uint64_t v25 = static os_log_type_t.error.getter();
    sub_10004841C(v25);
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  else
  {
    sub_10007E6A0();
    swift_release();
    sub_100085C64(a1, a2, a4);
    return swift_release();
  }
}

uint64_t sub_1001655D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScheduleInfo.Metadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for ScheduleDatabase()
{
  return &type metadata for ScheduleDatabase;
}

BOOL sub_100165648()
{
  uint64_t v1 = type metadata accessor for Date();
  sub_100020DEC();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_10002257C();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v11 - v6;
  static Date.now.getter();
  sub_100165754();
  sub_1001688A0((unint64_t *)&qword_10022D728);
  char v8 = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v3 + 8);
  v9(v0, v1);
  v9(v7, v1);
  return (v8 & 1) == 0;
}

void sub_100165754()
{
  sub_100049AD0();
  uint64_t v2 = type metadata accessor for ScheduleInfo.Metadata(0);
  sub_100043B1C();
  __chkstk_darwin(v3);
  sub_100020EAC();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = sub_100043478(&qword_1002344F0);
  uint64_t v8 = sub_1000208F0(v7);
  __chkstk_darwin(v8);
  uint64_t v9 = sub_100043D98();
  sub_100020DEC();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_100020EAC();
  uint64_t v15 = v14 - v13;
  sub_10011D5E8(v0 + *(int *)(v2 + 32), v1, &qword_1002344F0);
  sub_1001687F4(v0, v6, (void (*)(void))type metadata accessor for ScheduleInfo.Metadata);
  if (sub_10004FD40(v1, 1, v9) == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v15, v6 + *(int *)(v2 + 24), v9);
    sub_100168848(v6, (void (*)(void))type metadata accessor for ScheduleInfo.Metadata);
    sub_10002CC68(v1, &qword_1002344F0);
  }
  else
  {
    sub_100168848(v6, (void (*)(void))type metadata accessor for ScheduleInfo.Metadata);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v15, v1, v9);
  }
  sub_100167C48();
  Date.addingTimeInterval(_:)();
  sub_100020B78();
  v16();
  sub_100020998();
}

#error "100165994: call analysis failed (funcsize=43)"

uint64_t sub_1001659F4@<X0>(uint64_t a1@<X0>, uint64_t (**a2)(void)@<X1>, void *a3@<X8>)
{
  uint64_t v5 = (void *)v3;
  uint64_t v9 = type metadata accessor for Date();
  sub_100020DEC();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_100020EAC();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = type metadata accessor for ScheduleInfo.Metadata(0);
  uint64_t v17 = sub_1000208F0(v16);
  __chkstk_darwin(v17);
  sub_100042174();
  uint64_t v18 = sub_1000A7208(a1);
  sub_100088A2C(7, v18, &v28);
  if (v29)
  {
    a1 = v11;
    uint64_t v11 = v9;
    uint64_t v9 = v3;
    uint64_t v5 = a3;
    a3 = a2;
    a2 = &type metadata for Any;
    sub_100043478(&qword_10022F258);
    if (swift_dynamicCast())
    {
      sub_100046064();
      goto LABEL_7;
    }
    sub_100046064();
  }
  else
  {
    sub_10002CC68((uint64_t)&v28, &qword_10022F490);
  }
  Swift::String v19 = _swiftEmptyArrayStorage;
LABEL_7:
  *a3 = v19;
  (*(void (**)(uint64_t, uint64_t (**)(void), uint64_t))(v11 + 16))(v15, a2, v9);
  sub_100165C78(a1, v15, v4);
  if (v5)
  {
    uint64_t v20 = sub_1000515FC();
    v21(v20);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v23 = type metadata accessor for ScheduleInfo(0);
  sub_100168790((uint64_t)v4, (uint64_t)a3 + *(int *)(v23 + 20));
  sub_100088A2C(12, v18, &v28);
  swift_bridgeObjectRelease();
  if (!v29)
  {
    sub_10002CC68((uint64_t)&v28, &qword_10022F490);
    goto LABEL_13;
  }
  sub_10004D510(0, (unint64_t *)&qword_100231E00);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    unsigned __int8 v25 = 0;
    goto LABEL_14;
  }
  id v24 = v30;
  unsigned __int8 v25 = [v30 BOOLValue];

LABEL_14:
  uint64_t v26 = sub_1000515FC();
  uint64_t result = v27(v26);
  *((unsigned char *)a3 + *(int *)(v23 + 24)) = v25;
  return result;
}

uint64_t sub_100165C78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v116 = a2;
  uint64_t v117 = a3;
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v7 = sub_1000208F0(v6);
  __chkstk_darwin(v7);
  sub_100047374(v8, v110[0]);
  uint64_t v115 = type metadata accessor for TimeZone();
  sub_100020DEC();
  uint64_t v114 = v9;
  __chkstk_darwin(v10);
  uint64_t v113 = (char *)v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100043478(&qword_10022EC40);
  uint64_t v13 = sub_1000208F0(v12);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)v110 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  v112 = (char *)v110 - v18;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v110 - v19;
  uint64_t v21 = type metadata accessor for Date();
  sub_100020DEC();
  uint64_t v119 = v22;
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v26 = (char *)v110 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v27 = sub_100043478(&qword_1002344F0);
  uint64_t v28 = sub_1000208F0(v27);
  __chkstk_darwin(v28);
  sub_1000464AC();
  __chkstk_darwin(v29);
  sub_10004A234();
  __chkstk_darwin(v30);
  uint64_t v118 = (uint64_t)v110 - v31;
  uint64_t v32 = sub_1000A7208(a1);
  swift_bridgeObjectRelease();
  sub_100088A2C(0, v32, &v122);
  uint64_t v33 = (void (*)(void))&type metadata for Any;
  if (v123)
  {
    if (sub_100049628())
    {
      Swift::String v34 = v120;
      goto LABEL_6;
    }
  }
  else
  {
    sub_10002CC68((uint64_t)&v122, &qword_10022F490);
  }
  v34._uint64_t countAndFlagsBits = sub_100049DE0();
LABEL_6:
  char v35 = sub_10003227C(v34);
  if (v35 == 4)
  {
    sub_1001688E4();
    swift_allocError();
    *(void *)uint64_t v36 = 7368801;
    *(void *)(v36 + 8) = 0xE300000000000000;
    sub_100088A2C(0, v32, (_OWORD *)(v36 + 16));
    swift_bridgeObjectRelease();
    swift_willThrow();
    uint64_t v37 = sub_100047568();
    return v39(v37, v38);
  }
  *uint64_t v117 = v35;
  sub_100049A68();
  sub_100021AC0(v40, v41, v42, v21);
  sub_100088A2C(2, v32, &v122);
  if (v123)
  {
    sub_10004D510(0, (unint64_t *)&qword_100231E00);
    if (sub_100049628())
    {
      uint64_t countAndFlagsBits = (void *)v120._countAndFlagsBits;
      [(id)v120._countAndFlagsBits doubleValue];
      Date.init(timeIntervalSinceReferenceDate:)();

      uint64_t v33 = (void (*)(void))v32;
      uint64_t v44 = v16;
      uint64_t v45 = v20;
      uint64_t v46 = v118;
      sub_10002CC68(v118, &qword_1002344F0);
      sub_100021AC0(v4, 0, 1, v21);
      uint64_t v47 = v46;
      uint64_t v20 = v45;
      uint64_t v16 = v44;
      uint64_t v32 = (uint64_t)v33;
      sub_100043890(v4, v47, &qword_1002344F0);
    }
  }
  else
  {
    sub_10002CC68((uint64_t)&v122, &qword_10022F490);
  }
  sub_10011D5E8(v118, v3, &qword_1002344F0);
  (*(void (**)(char *, uint64_t, uint64_t))(v119 + 16))(v26, v116, v21);
  if (sub_10004FD40(v3, 1, v21) == 1)
  {
    sub_100046EC4();
    sub_100040C6C();
    v33();
    sub_10002CC68(v3, &qword_1002344F0);
  }
  else
  {
    uint64_t v33 = (void (*)(void))v119;
    (*(void (**)(char *, uint64_t))(v119 + 8))(v26, v21);
    uint64_t v48 = sub_100046EC4();
    ((void (*)(uint64_t, uint64_t, uint64_t))v33)(v48, v3, v21);
  }
  uint64_t v49 = (int *)type metadata accessor for ScheduleInfo.Metadata(0);
  uint64_t v50 = v117;
  uint64_t v111 = &v117[v49[6]];
  v33();
  sub_100088A2C(4, v32, &v122);
  if (v123)
  {
    sub_10004D510(0, (unint64_t *)&qword_100231E00);
    if (sub_100049628()) {
      goto LABEL_21;
    }
  }
  else
  {
    sub_10002CC68((uint64_t)&v122, &qword_10022F490);
  }
  sub_100088A2C(6, v32, &v122);
  if (v123)
  {
    sub_10004D510(0, (unint64_t *)&qword_100231E00);
    if (sub_100049628())
    {
LABEL_21:
      uint64_t v51 = (void *)v120._countAndFlagsBits;
      uint64_t v52 = (uint64_t)&v50[v49[8]];
      [(id)v120._countAndFlagsBits doubleValue];
      Date.init(timeIntervalSinceReferenceDate:)();

      uint64_t v53 = v52;
      uint64_t v54 = 0;
      goto LABEL_24;
    }
  }
  else
  {
    sub_10002CC68((uint64_t)&v122, &qword_10022F490);
  }
  uint64_t v53 = (uint64_t)&v50[v49[8]];
  uint64_t v54 = 1;
LABEL_24:
  sub_100021AC0(v53, v54, 1, v21);
  sub_100088A2C(8, v32, &v122);
  if (v123)
  {
    if (swift_dynamicCast())
    {
      object = v120._object;
      uint64_t v56 = (uint64_t *)&v50[v49[11]];
      *uint64_t v56 = v120._countAndFlagsBits;
      v56[1] = (uint64_t)object;
      sub_100049A68();
      sub_100021AC0(v57, v58, v59, v115);
      sub_100088A2C(11, v32, &v122);
      if (v123)
      {
        sub_10004D510(0, (unint64_t *)&qword_100231E00);
        if (sub_100049628())
        {
          uint64_t v60 = (void *)v120._countAndFlagsBits;
          [(id)v120._countAndFlagsBits integerValue];
          uint64_t v61 = (uint64_t)v112;
          TimeZone.init(secondsFromGMT:)();

          sub_10002CC68((uint64_t)v20, &qword_10022EC40);
          sub_100043890(v61, (uint64_t)v20, &qword_10022EC40);
        }
      }
      else
      {
        sub_10002CC68((uint64_t)&v122, &qword_10022F490);
      }
      sub_10011D5E8((uint64_t)v20, (uint64_t)v16, &qword_10022EC40);
      uint64_t v68 = v115;
      if (sub_10004FD40((uint64_t)v16, 1, v115) == 1)
      {
        uint64_t v113 = v20;
        sub_10002CC68((uint64_t)v16, &qword_10022EC40);
        sub_100043478(&qword_10022E560);
        uint64_t v69 = type metadata accessor for LogMessage();
        sub_100044798(v69);
        uint64_t v71 = *(void *)(v70 + 72);
        unint64_t v73 = (*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
        uint64_t v74 = swift_allocObject();
        *(_OWORD *)(v74 + 16) = xmmword_1001C3120;
        v112 = (char *)(v74 + v73);
        uint64_t v123 = sub_100043478(&qword_100232BA0);
        *(void *)&long long v122 = v49;
        id v75 = (id)AMSLogKey();
        if (v75)
        {
          uint64_t v76 = v75;
          v110[0] = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v78 = v77;

          swift_bridgeObjectRetain();
          v110[1] = v71;
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
          v79._uint64_t countAndFlagsBits = sub_100049DE0();
          LogMessage.StringInterpolation.appendLiteral(_:)(v79);
          sub_100049788(&v122, v123);
          uint64_t DynamicType = swift_getDynamicType();
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
          v120._uint64_t countAndFlagsBits = DynamicType;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_10002CC68((uint64_t)&v120, &qword_10022F490);
          v81._uint64_t countAndFlagsBits = 5972026;
          v81._object = (void *)0xE300000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v81);
          uint64_t MetatypeMetadata = &type metadata for String;
          v120._uint64_t countAndFlagsBits = v110[0];
          v120._object = v78;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          uint64_t v82 = v117;
          sub_10002CC68((uint64_t)&v120, &qword_10022F490);
          v83._uint64_t countAndFlagsBits = 93;
          v83._object = (void *)0xE100000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v83);
          LogMessage.init(stringInterpolation:)();
          swift_bridgeObjectRelease();
        }
        else
        {
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
          v89._uint64_t countAndFlagsBits = sub_100049DE0();
          LogMessage.StringInterpolation.appendLiteral(_:)(v89);
          sub_100049788(&v122, v123);
          uint64_t v90 = swift_getDynamicType();
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
          v120._uint64_t countAndFlagsBits = v90;
          LogMessage.StringInterpolation.appendInterpolation(safe:)();
          sub_10002CC68((uint64_t)&v120, &qword_10022F490);
          v91._uint64_t countAndFlagsBits = 58;
          v91._object = (void *)0xE100000000000000;
          LogMessage.StringInterpolation.appendLiteral(_:)(v91);
          LogMessage.init(stringInterpolation:)();
          uint64_t v82 = v117;
        }
        sub_10004377C((uint64_t)&v122);
        LogMessage.init(stringLiteral:)();
        if (qword_10022C460 != -1) {
          swift_once();
        }
        uint64_t v92 = static os_log_type_t.error.getter();
        sub_10004841C(v92);
        swift_bridgeObjectRelease();
        static TimeZone.current.getter();
        uint64_t v20 = v113;
      }
      else
      {
        char v84 = *(void (**)(char *, char *, uint64_t))(v114 + 32);
        id v85 = v49;
        uint64_t v86 = v113;
        v84(v113, v16, v68);
        uint64_t v87 = v86;
        uint64_t v49 = v85;
        uint64_t v88 = v68;
        uint64_t v82 = v117;
        v84(&v117[v85[12]], v87, v88);
      }
      sub_100088A2C(10, v32, &v122);
      if (v123)
      {
        if (sub_100049628())
        {
          Swift::String v93 = v120;
          goto LABEL_49;
        }
      }
      else
      {
        sub_10002CC68((uint64_t)&v122, &qword_10022F490);
      }
      v93._uint64_t countAndFlagsBits = sub_100049DE0();
LABEL_49:
      char v94 = sub_100078F44(v93);
      if (v94 == 3)
      {
        sub_1001688E4();
        swift_allocError();
        *(void *)uint64_t v95 = 1701869940;
        *(void *)(v95 + 8) = 0xE400000000000000;
        sub_100088A2C(10, v32, (_OWORD *)(v95 + 16));
        swift_bridgeObjectRelease();
        swift_willThrow();
        uint64_t v96 = sub_10004AD14();
        type metadata for Any(v96);
        sub_10002CC68((uint64_t)v20, &qword_10022EC40);
        int v64 = 1;
        goto LABEL_31;
      }
      v82[v49[13]] = v94;
      sub_100088A2C(1, v32, &v122);
      if (v123)
      {
        sub_10004D510(0, (unint64_t *)&qword_100231E00);
        uint64_t v97 = (uint64_t)v20;
        if (sub_100049628())
        {
          uint64_t v98 = (void *)v120._countAndFlagsBits;
          unsigned __int8 v99 = [(id)v120._countAndFlagsBits BOOLValue];

          goto LABEL_56;
        }
      }
      else
      {
        uint64_t v97 = (uint64_t)v20;
        sub_10002CC68((uint64_t)&v122, &qword_10022F490);
      }
      unsigned __int8 v99 = 1;
LABEL_56:
      v82[1] = v99;
      sub_100088A2C(3, v32, &v122);
      if (v123)
      {
        if (sub_100049628())
        {
          Swift::String v100 = v120;
          goto LABEL_61;
        }
      }
      else
      {
        sub_10002CC68((uint64_t)&v122, &qword_10022F490);
      }
      v100._uint64_t countAndFlagsBits = sub_100049DE0();
LABEL_61:
      char v101 = sub_100012474(v100);
      if (v101 == 4) {
        char v102 = 0;
      }
      else {
        char v102 = v101;
      }
      v82[v49[7]] = v102;
      sub_100088A2C(5, v32, &v122);
      if (v123)
      {
        sub_10004D510(0, (unint64_t *)&qword_100231E00);
        if (sub_100049628())
        {
          Swift::String v103 = (void *)v120._countAndFlagsBits;
          unsigned __int8 v104 = [(id)v120._countAndFlagsBits BOOLValue];

          goto LABEL_69;
        }
      }
      else
      {
        sub_10002CC68((uint64_t)&v122, &qword_10022F490);
      }
      unsigned __int8 v104 = 0;
LABEL_69:
      v82[v49[9]] = v104;
      sub_100088A2C(9, v32, &v122);
      swift_bridgeObjectRelease();
      if (v123)
      {
        sub_10004D510(0, (unint64_t *)&qword_100231E00);
        if (sub_100049628())
        {
          Swift::String v105 = (void *)v120._countAndFlagsBits;
          [(id)v120._countAndFlagsBits doubleValue];
          uint64_t v107 = v106;

LABEL_74:
          uint64_t v108 = sub_100047568();
          v109(v108);
          sub_10002CC68(v97, &qword_10022EC40);
          uint64_t result = sub_10002CC68(v118, &qword_1002344F0);
          *(void *)&v82[v49[10]] = v107;
          return result;
        }
      }
      else
      {
        sub_10002CC68((uint64_t)&v122, &qword_10022F490);
      }
      uint64_t v107 = 0;
      goto LABEL_74;
    }
  }
  else
  {
    sub_10002CC68((uint64_t)&v122, &qword_10022F490);
  }
  sub_1001688E4();
  swift_allocError();
  *(void *)uint64_t v62 = 0x696669746E656469;
  *(void *)(v62 + 8) = 0xEA00000000007265;
  sub_100088A2C(8, v32, (_OWORD *)(v62 + 16));
  swift_bridgeObjectRelease();
  swift_willThrow();
  uint64_t v63 = sub_10004AD14();
  type metadata for Any(v63);
  int v64 = 0;
LABEL_31:
  sub_10002CC68(v118, &qword_1002344F0);
  type metadata for Any(v111);
  unsigned int v65 = v117;
  uint64_t result = sub_10002CC68((uint64_t)&v117[v49[8]], &qword_1002344F0);
  uint64_t v67 = v115;
  if (!v64) {
    return result;
  }
  swift_bridgeObjectRelease();
  uint64_t v37 = (uint64_t)&v65[v49[12]];
  uint64_t v39 = *(uint64_t (**)(uint64_t, uint64_t))(v114 + 8);
  uint64_t v38 = v67;
  return v39(v37, v38);
}

void sub_100166A28()
{
  sub_100049AD0();
  uint64_t v1 = sub_100043478(&qword_1002344F0);
  uint64_t v2 = sub_1000208F0(v1);
  __chkstk_darwin(v2);
  sub_100020EAC();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = type metadata accessor for Date();
  sub_100020DEC();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_1000464AC();
  __chkstk_darwin(v10);
  uint64_t v48 = (char *)&v47 - v11;
  sub_100043478(&qword_10022E6A0);
  sub_10008E668();
  uint64_t v56 = Dictionary.init(dictionaryLiteral:)();
  uint64_t v49 = type metadata accessor for ScheduleInfo(0);
  uint64_t v50 = v6;
  uint64_t v12 = *(int *)(v49 + 20);
  uint64_t v51 = v0;
  uint64_t v13 = v0 + v12;
  switch(*(unsigned char *)(v0 + v12))
  {
    case 1:
      sub_100046178();
      break;
    case 2:
      sub_100046164();
      break;
    case 3:
      sub_100040B04();
      break;
    default:
      break;
  }
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v54 = sub_10004D510(0, &qword_10022DE20);
  uint64_t v55 = &off_100215D30;
  uint64_t v15 = v54;
  v53[0] = v14;
  uint64_t v16 = sub_10004DEB8();
  sub_1000882C8(v16, 0);
  id v17 = [objc_allocWithZone((Class)NSNumber) initWithBool:*(unsigned __int8 *)(v13 + 1)];
  uint64_t v18 = sub_10004D510(0, (unint64_t *)&qword_100231E00);
  uint64_t v54 = v18;
  uint64_t v55 = &off_100215D20;
  v53[0] = v17;
  uint64_t v19 = sub_10004DEB8();
  sub_1000882C8(v19, 1);
  uint64_t v20 = (int *)type metadata accessor for ScheduleInfo.Metadata(0);
  Date.timeIntervalSinceReferenceDate.getter();
  id v22 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v21];
  uint64_t v54 = v18;
  uint64_t v55 = &off_100215D20;
  v53[0] = v22;
  uint64_t v23 = sub_10004DEB8();
  sub_1000882C8(v23, 2);
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v54 = v15;
  uint64_t v55 = &off_100215D30;
  uint64_t v52 = v15;
  v53[0] = v24;
  uint64_t v25 = sub_10004DEB8();
  sub_1000882C8(v25, 3);
  sub_10011D5E8(v13 + v20[8], v5, &qword_1002344F0);
  uint64_t v26 = v50;
  if (sub_10004FD40(v5, 1, v50) == 1)
  {
    sub_10002CC68(v5, &qword_1002344F0);
  }
  else
  {
    uint64_t v27 = v48;
    sub_100040C6C();
    v28();
    Date.timeIntervalSinceReferenceDate.getter();
    id v30 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v29];
    uint64_t v54 = v18;
    uint64_t v55 = &off_100215D20;
    v53[0] = v30;
    uint64_t v31 = sub_10004DEB8();
    sub_1000882C8(v31, 4);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v27, v26);
  }
  id v32 = [objc_allocWithZone((Class)NSNumber) initWithBool:*(unsigned __int8 *)(v13 + v20[9])];
  uint64_t v54 = v18;
  uint64_t v55 = &off_100215D20;
  v53[0] = v32;
  uint64_t v33 = sub_10004DEB8();
  sub_1000882C8(v33, 5);
  Date.init()();
  uint64_t v34 = TimeZone.secondsFromGMT(for:)();
  sub_100020B78();
  v35();
  id v36 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v34];
  uint64_t v54 = v18;
  uint64_t v55 = &off_100215D20;
  v53[0] = v36;
  uint64_t v37 = sub_10004DEB8();
  sub_1000882C8(v37, 11);
  uint64_t v38 = v51;
  sub_100043478(&qword_10022D6F0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  uint64_t v54 = sub_10004D510(0, &qword_100230800);
  uint64_t v55 = &off_100215D40;
  v53[0] = isa;
  uint64_t v40 = sub_10004DEB8();
  sub_1000882C8(v40, 7);
  NSString v41 = String._bridgeToObjectiveC()();
  uint64_t v54 = v52;
  uint64_t v55 = &off_100215D30;
  v53[0] = v41;
  sub_1000882C8((uint64_t)v53, 8);
  id v42 = [objc_allocWithZone((Class)NSNumber) initWithDouble:*(double *)(v13 + v20[10])];
  uint64_t v54 = v18;
  uint64_t v55 = &off_100215D20;
  v53[0] = v42;
  sub_1000882C8((uint64_t)v53, 9);
  uint64_t v43 = v49;
  NSString v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v54 = v52;
  uint64_t v55 = &off_100215D30;
  v53[0] = v44;
  uint64_t v45 = sub_10004DEB8();
  sub_1000882C8(v45, 10);
  id v46 = [objc_allocWithZone((Class)NSNumber) initWithBool:*(unsigned __int8 *)(v38 + *(int *)(v43 + 24))];
  uint64_t v54 = v18;
  uint64_t v55 = &off_100215D20;
  v53[0] = v46;
  sub_1000882C8((uint64_t)v53, 12);
  sub_1000A6584(v56);
  swift_bridgeObjectRelease();
  sub_100020998();
}

void sub_100167058()
{
  sub_100049AD0();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  int v75 = v7;
  int v76 = v8;
  uint64_t v10 = v9;
  uint64_t v79 = type metadata accessor for Date();
  sub_100020DEC();
  uint64_t v74 = v11;
  __chkstk_darwin(v12);
  uint64_t v14 = sub_100047374(v13, (uint64_t)object);
  uint64_t v15 = (int *)type metadata accessor for ScheduleInfo.Metadata(v14);
  sub_100043B1C();
  __chkstk_darwin(v16);
  sub_100042174();
  uint64_t v17 = sub_100043478(&qword_1002344F0);
  uint64_t v18 = sub_1000208F0(v17);
  __chkstk_darwin(v18);
  sub_100035C70();
  uint64_t v77 = v19;
  __chkstk_darwin(v20);
  sub_10004A234();
  uint64_t v22 = __chkstk_darwin(v21);
  NSString v24 = (char *)&object - v23;
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&object - v25;
  uint64_t v27 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v28 = sub_1000208F0(v27);
  __chkstk_darwin(v28);
  uint64_t v29 = sub_10004831C();
  uint64_t v80 = type metadata accessor for ScheduleInfo(v29);
  sub_100043B1C();
  __chkstk_darwin(v30);
  sub_100022558();
  void *v0 = v6;
  v81._uint64_t countAndFlagsBits = 0x696669746E656469;
  v81._object = (void *)0xEA00000000007265;
  AnyHashable.init<A>(_:)();
  sub_100048FB4();
  sub_1000434BC((uint64_t)v82);
  if (MetatypeMetadata)
  {
    if (sub_1000453F4())
    {
      object = v81._object;
      uint64_t countAndFlagsBits = v81._countAndFlagsBits;
      sub_100049A68();
      sub_100021AC0(v31, v32, v33, v79);
      v81._uint64_t countAndFlagsBits = 1702125924;
      v81._object = (void *)0xE400000000000000;
      AnyHashable.init<A>(_:)();
      sub_100048FB4();
      sub_1000434BC((uint64_t)v82);
      if (MetatypeMetadata)
      {
        if (sub_1000453F4())
        {
          if (qword_10022C448 != -1) {
            swift_once();
          }
          uint64_t v34 = (void *)qword_1002440A0;
          NSString v35 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v36 = [v34 dateFromString:v35];

          if (v36)
          {
            static Date._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v37 = 0;
          }
          else
          {
            uint64_t v37 = 1;
          }
          sub_10002CC68((uint64_t)v26, &qword_1002344F0);
          sub_100021AC0((uint64_t)v24, v37, 1, v79);
          uint64_t v58 = (uint64_t)v24;
          uint64_t v59 = (uint64_t)v26;
          goto LABEL_24;
        }
      }
      else
      {
        sub_10002CC68((uint64_t)&v84, &qword_10022F490);
      }
      v81._uint64_t countAndFlagsBits = 0x79616C6564;
      v81._object = (void *)0xE500000000000000;
      AnyHashable.init<A>(_:)();
      sub_100048FB4();
      sub_1000434BC((uint64_t)v82);
      if (!MetatypeMetadata)
      {
        sub_10002CC68((uint64_t)&v84, &qword_10022F490);
        goto LABEL_25;
      }
      if ((sub_1000453F4() & 1) == 0) {
        goto LABEL_25;
      }
      Date.init(timeIntervalSinceNow:)();
      sub_10002CC68((uint64_t)v26, &qword_1002344F0);
      sub_100021AC0(v1, 0, 1, v79);
      uint64_t v58 = v1;
      uint64_t v59 = (uint64_t)v26;
LABEL_24:
      sub_100043890(v58, v59, &qword_1002344F0);
LABEL_25:
      *(void *)&long long v84 = 0x79726574746162;
      *((void *)&v84 + 1) = 0xE700000000000000;
      sub_10004A660();
      sub_100048FB4();
      sub_1000434BC((uint64_t)v82);
      if (MetatypeMetadata)
      {
        if (sub_1000453F4())
        {
          char v60 = v81._countAndFlagsBits;
          goto LABEL_30;
        }
      }
      else
      {
        sub_10002CC68((uint64_t)&v84, &qword_10022F490);
      }
      char v60 = 0;
LABEL_30:
      static Date.now.getter();
      v81._uint64_t countAndFlagsBits = 0x73616C4361746164;
      v81._object = (void *)0xE900000000000073;
      AnyHashable.init<A>(_:)();
      sub_100048FB4();
      sub_1000434BC((uint64_t)v82);
      if (MetatypeMetadata)
      {
        if (sub_1000453F4())
        {
          uint64_t v61 = v10;
          Swift::String v62 = v81;
          goto LABEL_35;
        }
      }
      else
      {
        sub_10002CC68((uint64_t)&v84, &qword_10022F490);
      }
      uint64_t v61 = v10;
      v62._uint64_t countAndFlagsBits = sub_100049DE0();
LABEL_35:
      char v63 = sub_100012474(v62);
      if (v63 == 4) {
        char v64 = 0;
      }
      else {
        char v64 = v63;
      }
      sub_10011D5E8((uint64_t)v26, v77, &qword_1002344F0);
      strcpy((char *)&v84, "dateIsAdaptive");
      HIBYTE(v84) = -18;
      sub_10004A660();
      sub_100048FB4();
      sub_1000434BC((uint64_t)v82);
      if (MetatypeMetadata)
      {
        if (sub_1000453F4())
        {
          char v65 = v81._countAndFlagsBits;
          goto LABEL_43;
        }
      }
      else
      {
        sub_10002CC68((uint64_t)&v84, &qword_10022F490);
      }
      char v65 = 0;
LABEL_43:
      *(void *)&long long v84 = 0x6563617267;
      *((void *)&v84 + 1) = 0xE500000000000000;
      sub_10004A660();
      sub_100048FB4();
      sub_1000434BC((uint64_t)v82);
      if (MetatypeMetadata)
      {
        if (sub_1000453F4())
        {
          uint64_t v66 = v81._countAndFlagsBits;
LABEL_48:
          static TimeZone.current.getter();
          *uint64_t v2 = v75;
          v2[1] = v60;
          (*(void (**)(unsigned char *, uint64_t, uint64_t))(v74 + 32))(&v2[v15[6]], v78, v79);
          v2[v15[7]] = v64;
          sub_100043890(v77, (uint64_t)&v2[v15[8]], &qword_1002344F0);
          v2[v15[9]] = v65;
          *(void *)&v2[v15[10]] = v66;
          uint64_t v67 = (uint64_t *)&v2[v15[11]];
          uint64_t v68 = (uint64_t)object;
          *uint64_t v67 = countAndFlagsBits;
          v67[1] = v68;
          v2[v15[13]] = v76;
          sub_100168790((uint64_t)v2, (uint64_t)v0 + *(int *)(v80 + 20));
          *(void *)&long long v84 = 0x746972777265766FLL;
          *((void *)&v84 + 1) = 0xE900000000000065;
          sub_10004A660();
          sub_100048FB4();
          swift_bridgeObjectRelease();
          sub_1000434BC((uint64_t)v82);
          sub_10002CC68((uint64_t)v26, &qword_1002344F0);
          if (MetatypeMetadata)
          {
            uint64_t v69 = v61;
            if (sub_1000453F4()) {
              char v70 = v81._countAndFlagsBits;
            }
            else {
              char v70 = 0;
            }
          }
          else
          {
            sub_10002CC68((uint64_t)&v84, &qword_10022F490);
            char v70 = 0;
            uint64_t v69 = v61;
          }
          uint64_t v71 = v80;
          *((unsigned char *)v0 + *(int *)(v80 + 24)) = v70;
          sub_1001687F4((uint64_t)v0, v69, (void (*)(void))type metadata accessor for ScheduleInfo);
          sub_100021AC0(v69, 0, 1, v71);
          sub_100168848((uint64_t)v0, (void (*)(void))type metadata accessor for ScheduleInfo);
          goto LABEL_54;
        }
      }
      else
      {
        sub_10002CC68((uint64_t)&v84, &qword_10022F490);
      }
      uint64_t v66 = 0x404E000000000000;
      goto LABEL_48;
    }
    uint64_t v79 = v10;
  }
  else
  {
    uint64_t v79 = v10;
    sub_10002CC68((uint64_t)&v84, &qword_10022F490);
  }
  sub_100043478(&qword_10022E560);
  uint64_t v38 = type metadata accessor for LogMessage();
  sub_100044798(v38);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v83 = sub_100043478(&qword_100232B88);
  v82[0] = v80;
  id v39 = (id)AMSLogKey();
  if (v39)
  {
    uint64_t v40 = v39;
    uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v43 = v42;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v44._uint64_t countAndFlagsBits = 0;
    v44._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v44);
    sub_100049788(v82, v83);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    *(void *)&long long v84 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC68((uint64_t)&v84, &qword_10022F490);
    v46._uint64_t countAndFlagsBits = 5972026;
    v46._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v46);
    uint64_t MetatypeMetadata = &type metadata for String;
    *(void *)&long long v84 = v41;
    *((void *)&v84 + 1) = v43;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC68((uint64_t)&v84, &qword_10022F490);
    v47._uint64_t countAndFlagsBits = 93;
    v47._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v47);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v48._uint64_t countAndFlagsBits = 0;
    v48._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v48);
    sub_100049788(v82, v83);
    uint64_t v49 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    *(void *)&long long v84 = v49;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC68((uint64_t)&v84, &qword_10022F490);
    v50._uint64_t countAndFlagsBits = 58;
    v50._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v50);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v82);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v51._object = (void *)0x80000001001D6910;
  v51._uint64_t countAndFlagsBits = 0xD000000000000023;
  LogMessage.StringInterpolation.appendLiteral(_:)(v51);
  uint64_t v83 = sub_100043478(&qword_10022D6F0);
  v82[0] = v4;
  LogMessage.StringInterpolation.appendInterpolation(sensitive:)();
  sub_10002CC68((uint64_t)v82, &qword_10022F490);
  v52._uint64_t countAndFlagsBits = 0;
  v52._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v52);
  LogMessage.init(stringInterpolation:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v53 = static os_log_type_t.error.getter();
  sub_10004841C(v53);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100049A68();
  sub_100021AC0(v54, v55, v56, v57);
LABEL_54:
  sub_100020998();
}

unint64_t sub_100167AE4(char a1, uint64_t a2, void *a3)
{
  unint64_t v4 = 0xE900000000000073;
  uint64_t v5 = 0x636974796C616E61;
  switch(a1)
  {
    case 1:
      unint64_t v4 = 0xE800000000000000;
      uint64_t v5 = sub_100046178();
      break;
    case 2:
      unint64_t v4 = 0xE800000000000000;
      uint64_t v5 = sub_100046164();
      break;
    case 3:
      unint64_t v4 = 0xEF736E6F69746164;
      uint64_t v5 = sub_100040B04();
      break;
    default:
      break;
  }
  unint64_t v8 = v4;
  String.append(_:)(*(Swift::String *)&v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v9._uint64_t countAndFlagsBits = 95;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v10._uint64_t countAndFlagsBits = a2;
  v10._object = a3;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  return 0xD000000000000019;
}

uint64_t sub_100167C18()
{
  return sub_1001681E4();
}

uint64_t sub_100167C48()
{
  type metadata accessor for Date();
  sub_100020DEC();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_100022558();
  type metadata accessor for TimeZone();
  sub_100020DEC();
  __chkstk_darwin(v4);
  uint64_t v5 = sub_10004831C();
  uint64_t result = type metadata accessor for ScheduleInfo.Metadata(v5);
  if (*(unsigned char *)(v0 + *(int *)(result + 36)) == 1)
  {
    static TimeZone.current.getter();
    Date.init()();
    uint64_t v7 = TimeZone.secondsFromGMT(for:)();
    unint64_t v8 = *(void (**)(uint64_t))(v2 + 8);
    uint64_t v9 = sub_100045414();
    v8(v9);
    sub_100020B78();
    v10();
    Date.init()();
    uint64_t v11 = TimeZone.secondsFromGMT(for:)();
    uint64_t v12 = sub_100045414();
    uint64_t result = ((uint64_t (*)(uint64_t))v8)(v12);
    if (__OFSUB__(v7, v11)) {
      __break(1u);
    }
  }
  return result;
}

void sub_100167D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_100049AD0();
  a21 = v24;
  a22 = v25;
  uint64_t v26 = sub_100043478(&qword_1002344F0);
  uint64_t v27 = sub_1000208F0(v26);
  __chkstk_darwin(v27);
  uint64_t v28 = sub_100043D98();
  sub_100020DEC();
  uint64_t v30 = v29;
  __chkstk_darwin(v31);
  sub_10002257C();
  uint64_t v33 = __chkstk_darwin(v32);
  NSString v35 = (char *)&a9 - v34;
  __chkstk_darwin(v33);
  uint64_t v37 = (char *)&a9 - v36;
  uint64_t v38 = type metadata accessor for ScheduleInfo.Metadata(0);
  sub_10011D5E8(v22 + *(int *)(v38 + 32), v23, &qword_1002344F0);
  if (sub_10004FD40(v23, 1, v28) == 1)
  {
    sub_10002CC68(v23, &qword_1002344F0);
  }
  else
  {
    sub_100040C6C();
    v39();
    if (*(unsigned char *)(v22 + *(int *)(v38 + 36)) == 1)
    {
      sub_100167C48();
      Date.addingTimeInterval(_:)();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v35, v37, v28);
    }
    static Date.now.getter();
    Date.timeIntervalSince(_:)();
    uint64_t v40 = *(void (**)(void))(v30 + 8);
    sub_100020B78();
    v40();
    sub_100020B78();
    v40();
    sub_100020B78();
    v40();
  }
  sub_100020998();
}

unint64_t sub_100167F8C(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10020BFE8, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 0xD) {
    return 13;
  }
  else {
    return v3;
  }
}

unint64_t sub_100167FD8(char a1)
{
  unint64_t result = 7368801;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x79726574746162;
      break;
    case 2:
      unint64_t result = 0x64657461657263;
      break;
    case 3:
      unint64_t result = 0x73616C4361746164;
      break;
    case 4:
      unint64_t result = 1702125924;
      break;
    case 5:
      unint64_t result = 0x6441734965746164;
      break;
    case 6:
      unint64_t result = 0x79616C6564;
      break;
    case 7:
      unint64_t result = 0x73746E657665;
      break;
    case 8:
      unint64_t result = 0x696669746E656469;
      break;
    case 9:
      unint64_t result = 0x6563617267;
      break;
    case 10:
      unint64_t result = 1701869940;
      break;
    case 11:
      unint64_t result = 0xD000000000000010;
      break;
    case 12:
      unint64_t result = 0x746972777265766FLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100168164(char *a1, char *a2)
{
  return sub_10007DBD4(*a1, *a2);
}

Swift::Int sub_100168170()
{
  return sub_10005A00C(*v0);
}

uint64_t sub_100168178(uint64_t a1)
{
  return sub_10005AA20(a1, *v1);
}

Swift::Int sub_100168180(uint64_t a1)
{
  return sub_10005ADEC(a1, *v1);
}

unint64_t sub_100168188@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100167F8C(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_1001681B8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_100167FD8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1001681E4()
{
  uint64_t v1 = (unsigned char *)v0;
  uint64_t v2 = sub_100043478(&qword_1002344F0);
  uint64_t v3 = sub_1000208F0(v2);
  __chkstk_darwin(v3);
  sub_10004831C();
  uint64_t v4 = type metadata accessor for Date();
  sub_100020DEC();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_100035C70();
  uint64_t v59 = v8;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v59 - v10;
  uint64_t v12 = (int *)type metadata accessor for ScheduleInfo.Metadata(0);
  sub_10011D5E8(v0 + v12[8], v0, &qword_1002344F0);
  if (sub_10004FD40(v0, 1, v4) == 1)
  {
    sub_10002CC68(v0, &qword_1002344F0);
    uint64_t v13 = 0;
    uint64_t v14 = (void *)0xE000000000000000;
  }
  else
  {
    sub_100040C6C();
    v16(v15);
    if (qword_10022C448 != -1) {
      swift_once();
    }
    uint64_t v17 = (void *)qword_1002440A0;
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    id v19 = objc_msgSend(v17, "stringFromDate:", isa, v59);

    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v22 = v21;

    uint64_t v61 = 0x3D65746164;
    Swift::String v62 = (void *)0xE500000000000000;
    v23._uint64_t countAndFlagsBits = v20;
    v23._object = v22;
    String.append(_:)(v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v24._uint64_t countAndFlagsBits = 32;
    v24._object = (void *)0xE100000000000000;
    String.append(_:)(v24);
    swift_bridgeObjectRelease();
    uint64_t v13 = v61;
    uint64_t v14 = v62;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v4);
  }
  uint64_t v61 = 0;
  Swift::String v62 = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(108);
  v25._uint64_t countAndFlagsBits = 0x203A70706128;
  v25._object = (void *)0xE600000000000000;
  String.append(_:)(v25);
  HIBYTE(v60) = *v1;
  _print_unlocked<A, B>(_:_:)();
  v26._uint64_t countAndFlagsBits = 0x69746E656469202CLL;
  v26._object = (void *)0xEE00203A72656966;
  String.append(_:)(v26);
  uint64_t v27 = (uint64_t *)&v1[v12[11]];
  uint64_t v29 = *v27;
  uint64_t v28 = (void *)v27[1];
  swift_bridgeObjectRetain();
  v30._uint64_t countAndFlagsBits = v29;
  v30._object = v28;
  String.append(_:)(v30);
  swift_bridgeObjectRelease();
  v31._uint64_t countAndFlagsBits = 0x657461657263202CLL;
  v31._object = (void *)0xEA00000000003D64;
  String.append(_:)(v31);
  sub_1001688A0(&qword_100232B90);
  v32._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v32);
  swift_bridgeObjectRelease();
  v33._uint64_t countAndFlagsBits = 32;
  v33._object = (void *)0xE100000000000000;
  String.append(_:)(v33);
  v34._uint64_t countAndFlagsBits = v13;
  v34._object = v14;
  String.append(_:)(v34);
  swift_bridgeObjectRelease();
  v35._uint64_t countAndFlagsBits = 0x3D79616C6564203BLL;
  v35._object = (void *)0xE800000000000000;
  String.append(_:)(v35);
  sub_100167D98(v36, v37, v38, v39, v40, v41, v42, v43, v59, v60, v61, (uint64_t)v62, v63, v64, v65, v66, v67, v68, v69,
    v70,
    v71,
    v72);
  Double.write<A>(to:)();
  v44._uint64_t countAndFlagsBits = 0x3D7373616C63203BLL;
  v44._object = (void *)0xE800000000000000;
  String.append(_:)(v44);
  HIBYTE(v60) = v1[v12[7]];
  _print_unlocked<A, B>(_:_:)();
  v45._object = (void *)0xEA00000000003D79;
  v45._uint64_t countAndFlagsBits = 0x726574746162203BLL;
  String.append(_:)(v45);
  if (v1[1]) {
    uint64_t v46 = 1702195828;
  }
  else {
    uint64_t v46 = 0x65736C6166;
  }
  if (v1[1]) {
    unint64_t v47 = 0xE400000000000000;
  }
  else {
    unint64_t v47 = 0xE500000000000000;
  }
  unint64_t v48 = v47;
  String.append(_:)(*(Swift::String *)&v46);
  swift_bridgeObjectRelease();
  v49._uint64_t countAndFlagsBits = 0x3D6563617267203BLL;
  v49._object = (void *)0xE800000000000000;
  String.append(_:)(v49);
  Double.write<A>(to:)();
  v50._object = (void *)0xEA00000000003D73;
  v50._uint64_t countAndFlagsBits = 0x657269707865203BLL;
  String.append(_:)(v50);
  uint64_t v51 = v59;
  sub_100165754();
  v52._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v52);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v51, v4);
  v53._uint64_t countAndFlagsBits = 0x697470616461203BLL;
  v53._object = (void *)0xEC000000203A6576;
  String.append(_:)(v53);
  if (v1[v12[9]]) {
    uint64_t v54 = 1702195828;
  }
  else {
    uint64_t v54 = 0x65736C6166;
  }
  if (v1[v12[9]]) {
    unint64_t v55 = 0xE400000000000000;
  }
  else {
    unint64_t v55 = 0xE500000000000000;
  }
  unint64_t v56 = v55;
  String.append(_:)(*(Swift::String *)&v54);
  swift_bridgeObjectRelease();
  v57._uint64_t countAndFlagsBits = 41;
  v57._object = (void *)0xE100000000000000;
  String.append(_:)(v57);
  return v61;
}

uint64_t type metadata accessor for ScheduleInfo.Metadata(uint64_t a1)
{
  return sub_1000514B4(a1, (uint64_t *)&unk_100232C00);
}

uint64_t type metadata accessor for ScheduleInfo(uint64_t a1)
{
  return sub_1000514B4(a1, qword_100232CB8);
}

uint64_t sub_100168790(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScheduleInfo.Metadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001687F4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100043B1C();
  uint64_t v4 = sub_10002D450();
  v5(v4);
  return a2;
}

uint64_t sub_100168848(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100043B1C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001688A0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for Date();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001688E4()
{
  unint64_t result = qword_100232B98;
  if (!qword_100232B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100232B98);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ScheduleInfo.CodingPropertyKey(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF4)
  {
    if (a2 + 12 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 12) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 13;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v5 = v6 - 13;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ScheduleInfo.CodingPropertyKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100168A84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduleInfo.CodingPropertyKey()
{
  return &type metadata for ScheduleInfo.CodingPropertyKey;
}

unint64_t destroy for ScheduleInfo.ScheduleError(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    unint64_t result = swift_bridgeObjectRelease();
    if (*(void *)(a1 + 40))
    {
      return sub_10004377C(a1 + 16);
    }
  }
  return result;
}

uint64_t initializeWithCopy for ScheduleInfo.ScheduleError(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    unsigned int v4 = (_OWORD *)(a2 + 16);
    uint64_t v5 = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    if (v5)
    {
      *(void *)(a1 + 40) = v5;
      (**(void (***)(uint64_t, _OWORD *, uint64_t))(v5 - 8))(a1 + 16, v4, v5);
    }
    else
    {
      long long v7 = v4[1];
      *(_OWORD *)(a1 + 16) = *v4;
      *(_OWORD *)(a1 + 32) = v7;
    }
  }
  return a1;
}

uint64_t assignWithCopy for ScheduleInfo.ScheduleError(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      uint64_t v5 = (_OWORD *)(a1 + 16);
      long long v6 = a2 + 1;
      uint64_t v8 = *((void *)a2 + 5);
      swift_bridgeObjectRetain();
      if (v8)
      {
        *(void *)(a1 + 40) = v8;
        (**(void (***)(uint64_t, _OWORD *, uint64_t))(v8 - 8))(a1 + 16, v6, v8);
        return a1;
      }
LABEL_16:
      long long v11 = v6[1];
      *uint64_t v5 = *v6;
      v5[1] = v11;
      return a1;
    }
LABEL_11:
    long long v9 = *a2;
    long long v10 = a2[2];
    *(_OWORD *)(a1 + 16) = a2[1];
    *(_OWORD *)(a1 + 32) = v10;
    *(_OWORD *)a1 = v9;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 40)) {
      sub_10004377C(a1 + 16);
    }
    goto LABEL_11;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (_OWORD *)(a1 + 16);
  long long v6 = a2 + 1;
  uint64_t v7 = *((void *)a2 + 5);
  if (!*(void *)(a1 + 40))
  {
    if (v7)
    {
      *(void *)(a1 + 40) = v7;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(a1 + 16, (uint64_t)(a2 + 1), v7);
      return a1;
    }
    goto LABEL_16;
  }
  if (!v7)
  {
    sub_10004377C(a1 + 16);
    goto LABEL_16;
  }
  sub_100092988((uint64_t *)(a1 + 16), (uint64_t *)a2 + 2);
  return a1;
}

uint64_t assignWithTake for ScheduleInfo.ScheduleError(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
LABEL_8:
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 40)) {
      sub_10004377C(a1 + 16);
    }
    goto LABEL_8;
  }
  uint64_t v5 = (_OWORD *)(a2 + 16);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40)) {
    sub_10004377C(a1 + 16);
  }
  long long v6 = v5[1];
  *(_OWORD *)(a1 + 16) = *v5;
  *(_OWORD *)(a1 + 32) = v6;
  return a1;
}

uint64_t getEnumTagSinglePayload for ScheduleInfo.ScheduleError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ScheduleInfo.ScheduleError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_100168E80(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_100168E98(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 40) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 8) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduleInfo.ScheduleError()
{
  return &type metadata for ScheduleInfo.ScheduleError;
}

void *sub_100168ED8(_WORD *a1, void *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_WORD *)a2;
    uint64_t v7 = a3[6];
    uint64_t v8 = (char *)a1 + v7;
    long long v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Date();
    long long v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    uint64_t v12 = a3[8];
    *((unsigned char *)v4 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    uint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (char *)a2 + v12;
    if (sub_10004FD40((uint64_t)a2 + v12, 1, v10))
    {
      uint64_t v15 = sub_100043478(&qword_1002344F0);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      v11(v13, v14, v10);
      sub_100021AC0((uint64_t)v13, 0, 1, v10);
    }
    uint64_t v17 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *(void *)((char *)v4 + v17) = *(void *)((char *)a2 + v17);
    uint64_t v18 = a3[11];
    uint64_t v19 = a3[12];
    uint64_t v20 = (void *)((char *)v4 + v18);
    uint64_t v21 = (void *)((char *)a2 + v18);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    Swift::String v23 = (char *)v4 + v19;
    Swift::String v24 = (char *)a2 + v19;
    uint64_t v25 = type metadata accessor for TimeZone();
    Swift::String v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
    swift_bridgeObjectRetain();
    v26(v23, v24, v25);
    *((unsigned char *)v4 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  }
  return v4;
}

uint64_t sub_1001690D0(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = type metadata accessor for Date();
  long long v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = a1 + a2[8];
  if (!sub_10004FD40(v7, 1, v5)) {
    v6(v7, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + a2[12];
  uint64_t v9 = type metadata accessor for TimeZone();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  return v10(v8, v9);
}

_WORD *sub_1001691D4(_WORD *a1, _WORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v11 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  if (sub_10004FD40((uint64_t)a2 + v11, 1, v9))
  {
    uint64_t v14 = sub_100043478(&qword_1002344F0);
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    sub_100021AC0((uint64_t)v12, 0, 1, v9);
  }
  uint64_t v15 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  uint64_t v16 = a3[11];
  uint64_t v17 = a3[12];
  uint64_t v18 = (void *)((char *)a1 + v16);
  uint64_t v19 = (void *)((char *)a2 + v16);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = (char *)a1 + v17;
  uint64_t v22 = (char *)a2 + v17;
  uint64_t v23 = type metadata accessor for TimeZone();
  Swift::String v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
  swift_bridgeObjectRetain();
  v24(v21, v22, v23);
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  return a1;
}

unsigned char *sub_10016937C(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  a1[a3[7]] = a2[a3[7]];
  uint64_t v12 = a3[8];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = sub_10004FD40((uint64_t)&a1[v12], 1, v9);
  int v16 = sub_10004FD40((uint64_t)v14, 1, v9);
  if (!v15)
  {
    if (!v16)
    {
      v11(v13, v14, v9);
      goto LABEL_7;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_100043478(&qword_1002344F0);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v13, v14, v9);
  sub_100021AC0((uint64_t)v13, 0, 1, v9);
LABEL_7:
  a1[a3[9]] = a2[a3[9]];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  uint64_t v18 = a3[11];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[12];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = type metadata accessor for TimeZone();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  a1[a3[13]] = a2[a3[13]];
  return a1;
}

_WORD *sub_1001695B0(_WORD *a1, _WORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  if (sub_10004FD40((uint64_t)a2 + v11, 1, v9))
  {
    uint64_t v14 = sub_100043478(&qword_1002344F0);
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    sub_100021AC0((uint64_t)v12, 0, 1, v9);
  }
  uint64_t v15 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  uint64_t v16 = a3[12];
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  return a1;
}

unsigned char *sub_10016973C(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  uint64_t v12 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = sub_10004FD40((uint64_t)&a1[v12], 1, v9);
  int v16 = sub_10004FD40((uint64_t)v14, 1, v9);
  if (!v15)
  {
    if (!v16)
    {
      v11(v13, v14, v9);
      goto LABEL_7;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_100043478(&qword_1002344F0);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v13, v14, v9);
  sub_100021AC0((uint64_t)v13, 0, 1, v9);
LABEL_7:
  uint64_t v18 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  *(void *)&a1[v18] = *(void *)&a2[v18];
  uint64_t v19 = a3[11];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = (uint64_t *)&a2[v19];
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *uint64_t v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[12];
  uint64_t v25 = &a1[v24];
  Swift::String v26 = &a2[v24];
  uint64_t v27 = type metadata accessor for TimeZone();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v27 - 8) + 40))(v25, v26, v27);
  a1[a3[13]] = a2[a3[13]];
  return a1;
}

uint64_t sub_100169958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10016996C);
}

uint64_t sub_10016996C(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for Date();
  sub_100044124();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a3[6];
  }
  else
  {
    sub_100043478(&qword_1002344F0);
    sub_100044124();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v9 = a3[8];
    }
    else
    {
      if (a2 == 0x7FFFFFFF) {
        return sub_100043A18(*(void *)(a1 + a3[11] + 8));
      }
      uint64_t v8 = type metadata accessor for TimeZone();
      uint64_t v9 = a3[12];
    }
  }
  return sub_10004FD40(a1 + v9, a2, v8);
}

uint64_t sub_100169A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100169A50);
}

void sub_100169A50(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for Date();
  sub_100044124();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a4[6];
  }
  else
  {
    sub_100043478(&qword_1002344F0);
    sub_100044124();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v11 = a4[8];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(void *)(a1 + a4[11] + 8) = (a2 - 1);
        return;
      }
      uint64_t v10 = type metadata accessor for TimeZone();
      uint64_t v11 = a4[12];
    }
  }
  sub_100021AC0(a1 + v11, a2, a2, v10);
}

void sub_100169B28()
{
  type metadata accessor for Date();
  if (v0 <= 0x3F)
  {
    sub_100169C68();
    if (v1 <= 0x3F)
    {
      type metadata accessor for TimeZone();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_100169C68()
{
  if (!qword_100232C10)
  {
    type metadata accessor for Date();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100232C10);
    }
  }
}

void *sub_100169CC0(void *a1, void *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    *(_WORD *)((char *)a1 + v6) = *(_WORD *)((char *)a2 + v6);
    uint64_t v9 = (int *)type metadata accessor for ScheduleInfo.Metadata(0);
    uint64_t v10 = v9[6];
    uint64_t v11 = &v7[v10];
    uint64_t v12 = &v8[v10];
    uint64_t v13 = type metadata accessor for Date();
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    v7[v9[7]] = v8[v9[7]];
    uint64_t v15 = v9[8];
    int v16 = &v7[v15];
    uint64_t v17 = &v8[v15];
    if (sub_10004FD40((uint64_t)&v8[v15], 1, v13))
    {
      uint64_t v18 = sub_100043478(&qword_1002344F0);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      v14(v16, v17, v13);
      sub_100021AC0((uint64_t)v16, 0, 1, v13);
    }
    v7[v9[9]] = v8[v9[9]];
    *(void *)&v7[v9[10]] = *(void *)&v8[v9[10]];
    uint64_t v19 = v9[11];
    uint64_t v20 = &v7[v19];
    uint64_t v21 = &v8[v19];
    uint64_t v22 = *((void *)v21 + 1);
    *(void *)uint64_t v20 = *(void *)v21;
    *((void *)v20 + 1) = v22;
    uint64_t v23 = v9[12];
    uint64_t v24 = &v7[v23];
    uint64_t v25 = &v8[v23];
    uint64_t v26 = type metadata accessor for TimeZone();
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
    swift_bridgeObjectRetain();
    v27(v24, v25, v26);
    v7[v9[13]] = v8[v9[13]];
    *((unsigned char *)v5 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return v5;
}

uint64_t sub_100169EFC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = (int *)type metadata accessor for ScheduleInfo.Metadata(0);
  uint64_t v6 = v4 + v5[6];
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  uint64_t v9 = v4 + v5[8];
  if (!sub_10004FD40(v9, 1, v7)) {
    v8(v9, v7);
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = v4 + v5[12];
  uint64_t v11 = type metadata accessor for TimeZone();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  return v12(v10, v11);
}

void *sub_10016A01C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  *(_WORD *)((char *)a1 + v4) = *(_WORD *)((char *)a2 + v4);
  uint64_t v7 = (int *)type metadata accessor for ScheduleInfo.Metadata(0);
  uint64_t v8 = v7[6];
  uint64_t v9 = &v5[v8];
  uint64_t v10 = &v6[v8];
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v5[v7[7]] = v6[v7[7]];
  uint64_t v13 = v7[8];
  uint64_t v14 = &v5[v13];
  uint64_t v15 = &v6[v13];
  if (sub_10004FD40((uint64_t)&v6[v13], 1, v11))
  {
    uint64_t v16 = sub_100043478(&qword_1002344F0);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v11);
    sub_100021AC0((uint64_t)v14, 0, 1, v11);
  }
  v5[v7[9]] = v6[v7[9]];
  *(void *)&v5[v7[10]] = *(void *)&v6[v7[10]];
  uint64_t v17 = v7[11];
  uint64_t v18 = &v5[v17];
  uint64_t v19 = &v6[v17];
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = *(void *)v19;
  *((void *)v18 + 1) = v20;
  uint64_t v21 = v7[12];
  uint64_t v22 = &v5[v21];
  uint64_t v23 = &v6[v21];
  uint64_t v24 = type metadata accessor for TimeZone();
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
  swift_bridgeObjectRetain();
  v25(v22, v23, v24);
  v5[v7[13]] = v6[v7[13]];
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_10016A20C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  Swift::String v30 = a2;
  uint64_t v6 = *(int *)(a3 + 20);
  Swift::String v31 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *uint64_t v7 = *((unsigned char *)a2 + v6);
  v7[1] = *((unsigned char *)a2 + v6 + 1);
  uint64_t v9 = (int *)type metadata accessor for ScheduleInfo.Metadata(0);
  uint64_t v10 = v9[6];
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void (**)(unsigned char *, char *, uint64_t))(v14 + 24);
  v15(v11, v12, v13);
  v7[v9[7]] = v8[v9[7]];
  uint64_t v16 = v9[8];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = sub_10004FD40((uint64_t)&v7[v16], 1, v13);
  int v20 = sub_10004FD40((uint64_t)v18, 1, v13);
  if (!v19)
  {
    if (!v20)
    {
      v15(v17, v18, v13);
      goto LABEL_7;
    }
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v17, v13);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    uint64_t v21 = sub_100043478(&qword_1002344F0);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, char *, uint64_t))(v14 + 16))(v17, v18, v13);
  sub_100021AC0((uint64_t)v17, 0, 1, v13);
LABEL_7:
  v7[v9[9]] = v8[v9[9]];
  *(void *)&v7[v9[10]] = *(void *)&v8[v9[10]];
  uint64_t v22 = v9[11];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  *uint64_t v23 = *(void *)v24;
  v23[1] = *((void *)v24 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = v9[12];
  uint64_t v26 = &v7[v25];
  uint64_t v27 = &v8[v25];
  uint64_t v28 = type metadata accessor for TimeZone();
  (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v28 - 8) + 24))(v26, v27, v28);
  v7[v9[13]] = v8[v9[13]];
  double result = v31;
  *((unsigned char *)v31 + *(int *)(a3 + 24)) = *((unsigned char *)v30 + *(int *)(a3 + 24));
  return result;
}

void *sub_10016A490(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  *(_WORD *)((char *)a1 + v5) = *(_WORD *)((char *)a2 + v5);
  uint64_t v8 = (int *)type metadata accessor for ScheduleInfo.Metadata(0);
  uint64_t v9 = v8[6];
  uint64_t v10 = &v6[v9];
  uint64_t v11 = &v7[v9];
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  v6[v8[7]] = v7[v8[7]];
  uint64_t v14 = v8[8];
  uint64_t v15 = &v6[v14];
  uint64_t v16 = &v7[v14];
  if (sub_10004FD40((uint64_t)&v7[v14], 1, v12))
  {
    uint64_t v17 = sub_100043478(&qword_1002344F0);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v13(v15, v16, v12);
    sub_100021AC0((uint64_t)v15, 0, 1, v12);
  }
  v6[v8[9]] = v7[v8[9]];
  *(void *)&v6[v8[10]] = *(void *)&v7[v8[10]];
  *(_OWORD *)&v6[v8[11]] = *(_OWORD *)&v7[v8[11]];
  uint64_t v18 = v8[12];
  int v19 = &v6[v18];
  int v20 = &v7[v18];
  uint64_t v21 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
  v6[v8[13]] = v7[v8[13]];
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_10016A668(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  Swift::String v32 = a2;
  uint64_t v6 = *(int *)(a3 + 20);
  Swift::String v33 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *uint64_t v7 = *((unsigned char *)a2 + v6);
  v7[1] = *((unsigned char *)a2 + v6 + 1);
  uint64_t v9 = (int *)type metadata accessor for ScheduleInfo.Metadata(0);
  uint64_t v10 = v9[6];
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void (**)(unsigned char *, char *, uint64_t))(v14 + 40);
  v15(v11, v12, v13);
  v7[v9[7]] = v8[v9[7]];
  uint64_t v16 = v9[8];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = sub_10004FD40((uint64_t)&v7[v16], 1, v13);
  int v20 = sub_10004FD40((uint64_t)v18, 1, v13);
  if (!v19)
  {
    if (!v20)
    {
      v15(v17, v18, v13);
      goto LABEL_7;
    }
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v17, v13);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    uint64_t v21 = sub_100043478(&qword_1002344F0);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, char *, uint64_t))(v14 + 32))(v17, v18, v13);
  sub_100021AC0((uint64_t)v17, 0, 1, v13);
LABEL_7:
  v7[v9[9]] = v8[v9[9]];
  *(void *)&v7[v9[10]] = *(void *)&v8[v9[10]];
  uint64_t v22 = v9[11];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  uint64_t v26 = *(void *)v24;
  uint64_t v25 = *((void *)v24 + 1);
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = v9[12];
  uint64_t v28 = &v7[v27];
  uint64_t v29 = &v8[v27];
  uint64_t v30 = type metadata accessor for TimeZone();
  (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  v7[v9[13]] = v8[v9[13]];
  double result = v33;
  *((unsigned char *)v33 + *(int *)(a3 + 24)) = *((unsigned char *)v32 + *(int *)(a3 + 24));
  return result;
}

uint64_t sub_10016A8D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10016A8E8);
}

uint64_t sub_10016A8E8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_100043A18(*a1);
  }
  uint64_t v7 = type metadata accessor for ScheduleInfo.Metadata(0);
  uint64_t v8 = (uint64_t)a1 + *(int *)(a3 + 20);
  return sub_10004FD40(v8, a2, v7);
}

uint64_t sub_10016A964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10016A978);
}

void *sub_10016A978(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *double result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for ScheduleInfo.Metadata(0);
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 20);
    return (void *)sub_100021AC0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_10016A9F8()
{
  uint64_t result = type metadata accessor for ScheduleInfo.Metadata(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_10016AAA0()
{
  unint64_t result = qword_100232CF8;
  if (!qword_100232CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100232CF8);
  }
  return result;
}

id sub_10016AAEC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v2 - 8);
  int v3 = *(void **)(v0 + 40);
  [v3 lock];
  uint64_t v4 = *(void *)(v0 + 8);
  if (v4)
  {
    swift_errorRetain();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v26 = &type metadata for SentryLog;
    aBlock[0] = swift_allocObject();
    sub_100044CB4(aBlock[0]);
    sub_1000C3D64(v0);
    id v5 = (id)AMSLogKey();
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v9 = v8;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v10._uint64_t countAndFlagsBits = 0;
      v10._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v10);
      sub_100049788(aBlock, (uint64_t)v26);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v29[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v29);
      v12._uint64_t countAndFlagsBits = 5972026;
      v12._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v12);
      uint64_t MetatypeMetadata = &type metadata for String;
      v29[0] = v7;
      v29[1] = v9;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v29);
      v13._uint64_t countAndFlagsBits = 93;
      v13._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v13);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v15._uint64_t countAndFlagsBits = 0;
      v15._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v15);
      sub_100049788(aBlock, (uint64_t)v26);
      uint64_t v16 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v29[0] = v16;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v29);
      v17._uint64_t countAndFlagsBits = 58;
      v17._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v17);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)aBlock);
    LogMessage.init(stringLiteral:)();
    uint64_t v18 = static os_log_type_t.debug.getter();
    sub_10004841C(v18);
    swift_bridgeObjectRelease();
    int v19 = self;
    sub_10006E0A4();
    id v20 = sub_100051DF8();
    id v21 = [v19 shouldSampleErrorsWithBag:v20];

    uint64_t v22 = swift_allocObject();
    sub_100044CB4(v22);
    *(void *)(v23 + 64) = v4;
    uint64_t v27 = sub_10016B368;
    uint64_t v28 = v23;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10002CD0C;
    uint64_t v26 = (ValueMetadata *)&unk_100215EB8;
    uint64_t v24 = _Block_copy(aBlock);
    swift_errorRetain();
    sub_1000C3D64(v1);
    swift_release();
    [v21 addSuccessBlock:v24];
    _Block_release(v24);

    swift_errorRelease();
    return [v3 unlock];
  }
  else
  {
    return [v3 unlock];
  }
}

uint64_t sub_10016AFB4()
{
  swift_errorRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

BOOL sub_10016B00C(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10020C5A0, v2);
  swift_bridgeObjectRelease();
  return v3 != 0;
}

unint64_t sub_10016B054()
{
  return 0xD000000000000010;
}

BOOL sub_10016B07C@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_10016B00C(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_10016B0B4@<X0>(void *a1@<X8>)
{
  unint64_t result = sub_10016B054();
  *a1 = 0xD000000000000010;
  a1[1] = v3;
  return result;
}

void sub_10016B0E4(uint64_t a1)
{
  Swift::String v2 = *(void **)(a1 + 40);
  [v2 lock];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v3 = objc_allocWithZone((Class)AMSMetricsLoggingEvent);
  swift_errorRetain();
  id v4 = sub_1000BA128();
  sub_1000B04C8(*(void **)(a1 + 32));
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v4 setBreadcrumbs:isa];

  uint64_t v6 = *(void *)(a1 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a1 + 16);
    sub_100043478(&qword_10022D808);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1001C3110;
    *(void *)(v8 + 56) = &type metadata for String;
    *(void *)(v8 + 32) = v7;
    *(void *)(v8 + 40) = v6;
    swift_bridgeObjectRetain();
    Class v9 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v4 setEventDestinations:v9];
  }
  [v2 unlock];
  Swift::String v10 = self;
  sub_10006E0A4();
  id v11 = sub_100051DF8();
  id v12 = [v10 internalInstanceUsingBag:v11];

  [v12 enqueueEvent:v4];
}

uint64_t sub_10016B308()
{
  swift_errorRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_errorRelease();
  return _swift_deallocObject(v0, 72, 7);
}

void sub_10016B368()
{
  sub_10016B0E4(v0 + 16);
}

void destroy for SentryLog(uint64_t a1)
{
  swift_errorRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  Swift::String v2 = *(void **)(a1 + 40);
}

void *initializeWithCopy for SentryLog(void *a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  id v6 = v4;
  swift_errorRetain();
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  a1[1] = v5;
  a1[2] = v8;
  uint64_t v10 = *(void *)(a2 + 32);
  Class v9 = *(void **)(a2 + 40);
  a1[3] = v7;
  a1[4] = v10;
  a1[5] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v11 = v9;
  return a1;
}

uint64_t assignWithCopy for SentryLog(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 8);
  swift_errorRetain();
  *(void *)(a1 + 8) = v7;
  swift_errorRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void **)(a2 + 40);
  Class v9 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v8;
  id v10 = v8;

  return a1;
}

uint64_t assignWithTake for SentryLog(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_errorRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  id v4 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  return a1;
}

ValueMetadata *type metadata accessor for SentryLog()
{
  return &type metadata for SentryLog;
}

unsigned char *storeEnumTagSinglePayload for SentryLog.Category(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10016B5F8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SentryLog.Category()
{
  return &type metadata for SentryLog.Category;
}

unint64_t sub_10016B634()
{
  unint64_t result = qword_100232D00;
  if (!qword_100232D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100232D00);
  }
  return result;
}

void sub_10016B680(uint64_t a1)
{
  uint64_t v5 = 0;
  uint64_t v6 = a1 + 56;
  sub_100045428();
  if (!v4) {
    goto LABEL_3;
  }
LABEL_2:
  sub_10004B5DC();
  while (1)
  {
    sub_100046080();
    sub_10004A8EC(&v9, v1, v2);
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_2;
    }
LABEL_3:
    uint64_t v7 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
LABEL_25:
      __break(1u);
      return;
    }
    if (v7 >= v3) {
      goto LABEL_21;
    }
    ++v5;
    if (!*(void *)(v6 + 8 * v7))
    {
      uint64_t v5 = v7 + 1;
      if (v7 + 1 >= v3) {
        goto LABEL_21;
      }
      if (!*(void *)(v6 + 8 * v5))
      {
        uint64_t v5 = v7 + 2;
        if (v7 + 2 >= v3) {
          goto LABEL_21;
        }
        if (!*(void *)(v6 + 8 * v5))
        {
          uint64_t v5 = v7 + 3;
          if (v7 + 3 >= v3) {
            goto LABEL_21;
          }
          if (!*(void *)(v6 + 8 * v5)) {
            break;
          }
        }
      }
    }
LABEL_18:
    sub_100048914();
  }
  uint64_t v8 = v7 + 4;
  if (v8 < v3)
  {
    if (!*(void *)(v6 + 8 * v8))
    {
      while (1)
      {
        uint64_t v5 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_25;
        }
        if (v5 >= v3) {
          goto LABEL_21;
        }
        ++v8;
        if (*(void *)(v6 + 8 * v5)) {
          goto LABEL_18;
        }
      }
    }
    uint64_t v5 = v8;
    goto LABEL_18;
  }
LABEL_21:
  swift_release();
}

uint64_t sub_10016B7B4()
{
  if (qword_10022C4C0 != -1) {
    swift_once();
  }
  qword_100232D08 = qword_100244128;
  return swift_retain();
}

void sub_10016B818()
{
  sub_1000209F4();
  uint64_t v10 = v2;
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  sub_100020DEC();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_100045B24();
  swift_defaultActor_initialize();
  sub_10004D510(0, (unint64_t *)&qword_100231E00);
  sub_100043478(&qword_10022E638);
  sub_100143190((unint64_t *)&qword_10022E640, (unint64_t *)&qword_100231E00);
  *(void *)(v0 + 112) = Dictionary.init(dictionaryLiteral:)();
  *(void *)(v0 + 120) = _swiftEmptyDictionarySingleton;
  static OS_dispatch_queue.SchedulerTimeType.Stride.milliseconds(_:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v0 + OBJC_IVAR____TtCC14amsengagementd22ServerDataCacheService25BackgroundUpdateCoalescer_debounceDuration, v1, v5);
  Swift::Int v9 = (void *)(v0 + OBJC_IVAR____TtCC14amsengagementd22ServerDataCacheService25BackgroundUpdateCoalescer_onUpdate);
  void *v9 = v4;
  v9[1] = v10;
  sub_100020FDC();
}

void sub_10016B968()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  uint64_t v48 = v3;
  uint64_t v4 = sub_100043478((uint64_t *)&unk_100231D40);
  uint64_t v5 = sub_1000208F0(v4);
  __chkstk_darwin(v5);
  sub_100040A70();
  uint64_t v47 = v6;
  sub_100043478(&qword_100232E30);
  sub_100020DEC();
  __chkstk_darwin(v7);
  sub_100040A70();
  sub_100043478(&qword_100232E38);
  sub_100020DEC();
  __chkstk_darwin(v8);
  sub_100040A70();
  sub_100043478(&qword_100232E40);
  sub_100020DEC();
  __chkstk_darwin(v9);
  sub_100040A70();
  uint64_t v10 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v11 = sub_1000208F0(v10);
  __chkstk_darwin(v11);
  sub_100011D4C();
  if (qword_10022C5A0 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v12 = type metadata accessor for LogMessage();
  sub_100044798(v12);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t updated = (void *)_s25BackgroundUpdateCoalescerCMa();
  uint64_t v53 = v0;
  swift_retain();
  id v13 = (id)AMSLogKey();
  if (v13)
  {
    uint64_t v14 = v13;
    Swift::String v15 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = v16;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    sub_100049788(&v53, (uint64_t)updated);
    uint64_t DynamicType = (void *)swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    id v50 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100043624((uint64_t)&v50, &qword_10022F490);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    id v50 = v15;
    uint64_t v51 = v17;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100043624((uint64_t)&v50, &qword_10022F490);
    v19._uint64_t countAndFlagsBits = 93;
    v19._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    sub_100049788(&v53, (uint64_t)updated);
    id v20 = (void *)swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    id v50 = v20;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100043624((uint64_t)&v50, &qword_10022F490);
    v21._uint64_t countAndFlagsBits = 58;
    v21._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v53);
  uint64_t v53 = 0;
  unint64_t v54 = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  uint64_t v53 = 0x696373656C616F43;
  unint64_t v54 = 0xEB0000000020676ELL;
  v22._uint64_t countAndFlagsBits = Set.description.getter();
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  sub_100048FD0();
  id v23 = [v2 description];
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v26 = v25;

  v27._uint64_t countAndFlagsBits = v24;
  v27._object = v26;
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  uint64_t updated = &type metadata for String;
  static LogMessage.safe(_:)();
  sub_100043624((uint64_t)&v53, &qword_10022F490);
  uint64_t v28 = static os_log_type_t.default.getter();
  sub_10004841C(v28);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v29 = *(void *)(v0 + 112);
  id v30 = v2;
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_100088CAC(v30, v29);
  swift_bridgeObjectRelease();

  if (v31)
  {
    CurrentValueSubject.value.getter();
    uint64_t v32 = swift_bridgeObjectRetain();
    sub_10016B680(v32);
    id v33 = v50;
    swift_bridgeObjectRetain();
    CurrentValueSubject.send(_:)();
    swift_release();

    swift_bridgeObjectRelease_n();
  }
  else
  {
    id v50 = v30;
    uint64_t v51 = v48;
    sub_100043478(&qword_10022E638);
    swift_allocObject();
    id v34 = v30;
    swift_bridgeObjectRetain_n();
    id v35 = v34;
    uint64_t v36 = (void *)CurrentValueSubject.init(_:)();
    swift_beginAccess();
    id v37 = v35;
    swift_retain();
    sub_10008BC98();
    swift_endAccess();

    id v50 = v36;
    if (qword_10022C588 != -1) {
      swift_once();
    }
    uint64_t v38 = (void *)qword_100244180;
    Swift::String v49 = (void *)qword_100244180;
    type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    sub_100047394();
    sub_10004D510(0, (unint64_t *)&qword_10022F690);
    sub_10002B6DC(&qword_100232E48, &qword_10022E638);
    sub_100143190((unint64_t *)&qword_10022F6A0, (unint64_t *)&qword_10022F690);
    id v39 = v38;
    Publisher.debounce<A>(for:scheduler:options:)();
    sub_100043624(v47, (uint64_t *)&unk_100231D40);

    sub_10002B6DC(&qword_100232E50, &qword_100232E30);
    Publisher.filter(_:)();
    sub_100043FB0();
    v40();
    uint64_t v41 = (void *)qword_100244180;
    id v50 = (id)qword_100244180;
    sub_100047394();
    sub_10002B6DC(&qword_100232E58, &qword_100232E38);
    id v42 = v41;
    Publisher.receive<A>(on:options:)();
    sub_100043624(v47, (uint64_t *)&unk_100231D40);

    sub_100043FB0();
    v43();
    swift_allocObject();
    swift_weakInit();
    sub_10002B6DC(&qword_100232E60, &qword_100232E40);
    Publisher<>.sink(receiveValue:)();
    swift_release();
    sub_100043FB0();
    v44();
    sub_100046550();
    id v45 = v37;
    uint64_t v46 = swift_retain();
    sub_10008BBB4(v46, (uint64_t)v45);
    swift_endAccess();

    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  sub_100020FDC();
}

BOOL sub_10016C250(uint64_t a1)
{
  return *(void *)(*(void *)(a1 + 8) + 16) != 0;
}

uint64_t sub_10016C264(uint64_t a1)
{
  uint64_t v2 = sub_100043478(&qword_10022D340);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    uint64_t v9 = type metadata accessor for TaskPriority();
    sub_100021AC0((uint64_t)v4, 1, 1, v9);
    uint64_t v10 = (void *)swift_allocObject();
    v10[2] = 0;
    v10[3] = 0;
    v10[4] = v8;
    v10[5] = v6;
    v10[6] = v5;
    id v11 = v6;
    swift_bridgeObjectRetain();
    sub_10016D650((uint64_t)v4, (uint64_t)&unk_100232E70, (uint64_t)v10);
    return swift_release();
  }
  return result;
}

uint64_t sub_10016C384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return _swift_task_switch(sub_10016C3A8, a4, 0);
}

uint64_t sub_10016C3A8()
{
  (*(void (**)(void, void))(v0[2]
                                         + OBJC_IVAR____TtCC14amsengagementd22ServerDataCacheService25BackgroundUpdateCoalescer_onUpdate))(v0[3], v0[4]);
  sub_10016C7D4();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

void sub_10016C440()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  sub_100011D4C();
  if (qword_10022C5A0 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v5 = type metadata accessor for LogMessage();
  sub_100044798(v5);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t updated = (void *)_s25BackgroundUpdateCoalescerCMa();
  unint64_t v25 = v0;
  swift_retain();
  id v6 = (id)AMSLogKey();
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    sub_100049788(&v25, (uint64_t)updated);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v23[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100043624((uint64_t)v23, &qword_10022F490);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v23[0] = v8;
    v23[1] = v10;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100043624((uint64_t)v23, &qword_10022F490);
    v12._uint64_t countAndFlagsBits = 93;
    v12._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    sub_100049788(&v25, (uint64_t)updated);
    uint64_t v13 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v23[0] = v13;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100043624((uint64_t)v23, &qword_10022F490);
    v14._uint64_t countAndFlagsBits = 58;
    v14._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v25);
  unint64_t v25 = 0;
  unint64_t v26 = 0xE000000000000000;
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease();
  unint64_t v25 = 0xD000000000000019;
  unint64_t v26 = 0x80000001001D6A60;
  id v15 = [v2 description];
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  v19._uint64_t countAndFlagsBits = v16;
  v19._object = v18;
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  uint64_t updated = &type metadata for String;
  static LogMessage.safe(_:)();
  sub_100043624((uint64_t)&v25, &qword_10022F490);
  uint64_t v20 = static os_log_type_t.default.getter();
  sub_10004841C(v20);
  swift_bridgeObjectRelease();
  sub_100046550();
  id v21 = v2;
  sub_10008B4A0();
  swift_endAccess();

  swift_release();
  sub_100046550();
  uint64_t v22 = sub_10008B304(v21);
  swift_endAccess();
  if (v22)
  {
    AnyCancellable.cancel()();
    swift_release();
  }
  sub_100020FDC();
}

void sub_10016C7D4()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v7 = sub_1000208F0(v6);
  __chkstk_darwin(v7);
  sub_100045B24();
  swift_beginAccess();
  uint64_t v8 = v0[14];
  id v9 = v5;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_100088CAC(v9, v8);
  swift_bridgeObjectRelease();

  if (v10)
  {
    CurrentValueSubject.value.getter();
    sub_10016D2A4(v3);
    if (*(void *)(v39 + 16))
    {
      if (qword_10022C5A0 != -1) {
        swift_once();
      }
      sub_100043478(&qword_10022E560);
      uint64_t v11 = type metadata accessor for LogMessage();
      sub_100044798(v11);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      uint64_t updated = (void *)_s25BackgroundUpdateCoalescerCMa();
      id v35 = v1;
      swift_retain();
      id v12 = (id)AMSLogKey();
      if (v12)
      {
        uint64_t v13 = v12;
        uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v15 = v14;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v16._uint64_t countAndFlagsBits = 0;
        v16._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v16);
        sub_100020BAC();
        uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
        sub_100049E74(MetatypeMetadata);
        sub_100043624((uint64_t)v34, &qword_10022F490);
        sub_100020E44();
        void v34[3] = &type metadata for String;
        v34[0] = v33;
        v34[1] = v15;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100043624((uint64_t)v34, &qword_10022F490);
        v18._uint64_t countAndFlagsBits = 93;
        v18._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v18);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v19._uint64_t countAndFlagsBits = 0;
        v19._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v19);
        sub_100020BAC();
        uint64_t v20 = swift_getMetatypeMetadata();
        sub_100049E74(v20);
        sub_100043624((uint64_t)v34, &qword_10022F490);
        v21._uint64_t countAndFlagsBits = 58;
        v21._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v21);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)&v35);
      id v35 = 0;
      unint64_t v36 = 0xE000000000000000;
      _StringGuts.grow(_:)(63);
      v22._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
      v22._object = (void *)0x80000001001D6A20;
      String.append(_:)(v22);
      swift_bridgeObjectRetain();
      v23._uint64_t countAndFlagsBits = Set.description.getter();
      String.append(_:)(v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100048FD0();
      id v24 = v38;
      id v25 = [v24 description];
      uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v28 = v27;

      v29._uint64_t countAndFlagsBits = v26;
      v29._object = v28;
      String.append(_:)(v29);
      swift_bridgeObjectRelease();

      v30._object = (void *)0x80000001001D6A40;
      v30._uint64_t countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v30);
      uint64_t updated = &type metadata for String;
      static LogMessage.safe(_:)();
      sub_100043624((uint64_t)&v35, &qword_10022F490);
      uint64_t v31 = static os_log_type_t.default.getter();
      sub_10004841C(v31);
      swift_bridgeObjectRelease();
      id v35 = (uint64_t *)v38;
      unint64_t v36 = v39;
      id v32 = v38;
      swift_bridgeObjectRetain();
      CurrentValueSubject.send(_:)();
      swift_release();

      swift_bridgeObjectRelease_n();
    }
    else
    {
      sub_10016C440();
      swift_release();

      swift_bridgeObjectRelease();
    }
  }
  sub_100020FDC();
}

uint64_t sub_10016CC20()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  sub_1000457D8();
  sub_100043FB0();
  v1();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_10016CCA0()
{
  sub_10016CC20();
  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_10016CCCC()
{
  return _s25BackgroundUpdateCoalescerCMa();
}

uint64_t _s25BackgroundUpdateCoalescerCMa()
{
  uint64_t result = qword_100232D38;
  if (!qword_100232D38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10016CD1C()
{
  uint64_t result = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void *_s25BackgroundUpdateCoalescerC11UpdateEntryVwCP(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s25BackgroundUpdateCoalescerC11UpdateEntryVwxx(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t _s25BackgroundUpdateCoalescerC11UpdateEntryVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *_s25BackgroundUpdateCoalescerC11UpdateEntryVwta(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s25BackgroundUpdateCoalescerC11UpdateEntryVwet(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s25BackgroundUpdateCoalescerC11UpdateEntryVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s25BackgroundUpdateCoalescerC11UpdateEntryVMa()
{
  return &_s25BackgroundUpdateCoalescerC11UpdateEntryVN;
}

uint64_t sub_10016CF70(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  sub_10004C090();
  if ((v9 & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v10 = *(void *)(v5 + 48);
  uint64_t v11 = (void *)(v10 + 16 * v8);
  BOOL v12 = *v11 == a1 && v11[1] == a2;
  if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    uint64_t v16 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v16;
      sub_10004C090();
      if ((v17 & 1) == 0) {
        goto LABEL_18;
      }
      Swift::String v18 = (void *)(v10 + 16 * v8);
      BOOL v19 = *v18 == a1 && v18[1] == a2;
    }
    while (!v19 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = *v2;
  uint64_t v21 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1001A89A8();
    uint64_t v14 = v21;
  }
  uint64_t v15 = *(void *)(*(void *)(v14 + 48) + 16 * v8);
  sub_10016D0E8(v8);
  *uint64_t v2 = v21;
  swift_bridgeObjectRelease();
  return v15;
}

unint64_t sub_10016D0E8(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v10 = Hasher._finalize()();
        swift_bridgeObjectRelease();
        Swift::Int v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 >= v9 && v2 >= v11)
          {
LABEL_15:
            uint64_t v14 = *(void *)(v3 + 48);
            uint64_t v15 = (_OWORD *)(v14 + 16 * v2);
            uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
            BOOL v17 = v2 != v6 || v15 >= v16 + 1;
            int64_t v2 = v6;
            if (v17)
            {
              _OWORD *v15 = *v16;
              int64_t v2 = v6;
            }
          }
        }
        else if (v11 >= v9 || v2 >= v11)
        {
          goto LABEL_15;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_10016D2A4(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v6 = result + 56;
  sub_100045428();
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  if (!v5) {
    goto LABEL_4;
  }
LABEL_3:
  sub_10004B5DC();
  while (1)
  {
    sub_100046080();
    sub_10016CF70(v2, v3);
    uint64_t v2 = v10;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_3;
    }
LABEL_4:
    uint64_t v8 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v8 >= v4) {
      goto LABEL_22;
    }
    ++v7;
    if (!*(void *)(v6 + 8 * v8))
    {
      uint64_t v7 = v8 + 1;
      if (v8 + 1 >= v4) {
        goto LABEL_22;
      }
      if (!*(void *)(v6 + 8 * v7))
      {
        uint64_t v7 = v8 + 2;
        if (v8 + 2 >= v4) {
          goto LABEL_22;
        }
        if (!*(void *)(v6 + 8 * v7))
        {
          uint64_t v7 = v8 + 3;
          if (v8 + 3 >= v4) {
            goto LABEL_22;
          }
          if (!*(void *)(v6 + 8 * v7)) {
            break;
          }
        }
      }
    }
LABEL_19:
    sub_100048914();
  }
  uint64_t v9 = v8 + 4;
  if (v9 < v4)
  {
    if (!*(void *)(v6 + 8 * v9))
    {
      while (1)
      {
        uint64_t v7 = v9 + 1;
        if (__OFADD__(v9, 1)) {
          goto LABEL_27;
        }
        if (v7 >= v4) {
          goto LABEL_22;
        }
        ++v9;
        if (*(void *)(v6 + 8 * v7)) {
          goto LABEL_19;
        }
      }
    }
    uint64_t v7 = v9;
    goto LABEL_19;
  }
LABEL_22:
  return swift_release();
}

uint64_t sub_10016D400()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10016D438(uint64_t a1)
{
  return sub_10016C264(a1);
}

uint64_t sub_10016D440()
{
  swift_unknownObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10016D490(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_10016D558;
  return sub_10016C384(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10016D558()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10016D650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  if (sub_10004FD40(a1, 1, v6) == 1)
  {
    sub_10002CBB4(a1, &qword_10022D340);
  }
  else
  {
    TaskPriority.rawValue.getter();
    sub_1000456E0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  uint64_t v8 = sub_100035CB8();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

void sub_10016D7B4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_10016D82C(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  id v6 = v5;
  unint64_t v56 = v6;
  uint64_t ObjectType = swift_getObjectType();
  if (qword_10022C5A8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v10 = type metadata accessor for LogMessage();
  sub_100044798(v10);
  sub_10004A1C4();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  sub_10017B1F0();
  uint64_t v11 = static LogMessage.safe(_:)();
  sub_10017B130(v11, v12, v13, v14, v15, v16, v17, v18, v48, v51);
  sub_10004D510(0, (unint64_t *)&qword_100231E00);
  id v54 = a1;
  uint64_t v19 = static LogMessage.sensitive(_:)();
  sub_10017B130(v19, v20, v21, v22, v23, v24, v25, v26, v49, v52);
  sub_100021A94();
  swift_bridgeObjectRelease();
  v27._uint64_t countAndFlagsBits = Set.description.getter();
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  sub_10002CB58((uint64_t)" networkPolicy: ");
  v28._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v28);
  swift_bridgeObjectRelease();
  uint64_t v29 = static LogMessage.safe(_:)();
  sub_10017B130(v29, v30, v31, v32, v33, v34, v35, v36, v50, v53);
  uint64_t v37 = static os_log_type_t.info.getter();
  sub_10004841C(v37);
  swift_bridgeObjectRelease();
  if (a3 >= 6)
  {
    sub_1000441D8();
    sub_10002281C();
    uint64_t result = sub_10004757C();
    __break(1u);
  }
  else
  {
    type metadata accessor for MercuryCacheDatabase();
    id v38 = v54;
    sub_1000363B4();
    uint64_t v40 = v39;
    sub_10010E658();
    uint64_t v41 = (void *)swift_allocObject();
    v41[2] = a3;
    void v41[3] = a4;
    v41[4] = a5;
    v41[5] = v56;
    v41[6] = v38;
    v41[7] = a2;
    v41[8] = v40;
    v41[9] = 5 - a3;
    v41[10] = ObjectType;
    id v42 = (void *)swift_allocObject();
    v42[2] = a3;
    v42[3] = v56;
    v42[4] = a2;
    v42[5] = a4;
    v42[6] = a5;
    v42[7] = v38;
    v42[8] = v40;
    v42[9] = 5 - a3;
    v42[10] = ObjectType;
    id v43 = v38;
    swift_retain_n();
    id v44 = v56;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    id v45 = v43;
    id v46 = v44;
    sub_10003A184();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10016DBD8()
{
  uint64_t v0 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10004D510(0, (unint64_t *)&qword_10022F690);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for DispatchQoS.QoSClass.default(_:), v0);
  uint64_t v5 = static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  void v8[3] = v4;
  void v8[4] = &protocol witness table for OS_dispatch_queue;
  v8[0] = v5;
  Promise.always(on:perform:)();
  return sub_10004377C((uint64_t)v8);
}

void sub_10016DD2C()
{
  sub_1000209F4();
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  sub_1000448FC();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10004277C();
  uint64_t v28 = type metadata accessor for DispatchQoS();
  sub_1000448FC();
  uint64_t v30 = v8;
  __chkstk_darwin(v9);
  sub_100020EAC();
  uint64_t v29 = v11 - v10;
  uint64_t v12 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v13 = sub_1000208F0(v12);
  __chkstk_darwin(v13);
  sub_100011D4C();
  if (qword_10022C5A8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v14 = sub_10017B1B8();
  sub_100044798(v14);
  *(_OWORD *)(sub_10017B204() + 16) = xmmword_1001C3120;
  uint64_t v34 = (void *)sub_100043478(&qword_100232EE0);
  uint64_t v31 = v0;
  id v15 = (id)AMSLogKey();
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = v4;
    uint64_t v18 = v6;
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v21 = v20;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100049788(&v31, (uint64_t)v34);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v37[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v37, &qword_10022F490);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v37[0] = v19;
    v37[1] = v21;
    uint64_t v6 = v18;
    uint64_t v4 = v17;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v37, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    uint64_t v23 = sub_100040FF8(&v31);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v37[0] = v23;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v37, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v31);
  uint64_t v34 = &type metadata for String;
  uint64_t v31 = (void **)0xD00000000000002BLL;
  unint64_t v32 = 0x80000001001D72D0;
  static LogMessage.safe(_:)();
  sub_10002CBB4((uint64_t)&v31, &qword_10022F490);
  uint64_t v24 = static os_log_type_t.default.getter();
  sub_10004841C(v24);
  swift_bridgeObjectRelease();
  if (qword_10022C588 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_100035CB8();
  *(void *)(v25 + 16) = v3;
  *(void *)(v25 + 24) = v0;
  uint64_t v35 = sub_10017AB58;
  uint64_t v36 = v25;
  uint64_t v31 = _NSConcreteStackBlock;
  unint64_t v32 = 1107296256;
  uint64_t v33 = sub_10002CD0C;
  uint64_t v34 = &unk_100216940;
  uint64_t v26 = _Block_copy(&v31);
  id v27 = v3;
  static DispatchQoS.unspecified.getter();
  v37[0] = _swiftEmptyArrayStorage;
  sub_10017AB60((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_1000234D8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v26);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v28);
  swift_release();
  sub_100020FDC();
}

uint64_t sub_10016E1FC()
{
  if (qword_10022C4C0 != -1) {
    swift_once();
  }
  qword_100232E78 = qword_100244128;
  return swift_retain();
}

uint64_t sub_10016E260()
{
  uint64_t v1 = OBJC_IVAR____TtC14amsengagementd22ServerDataCacheService____lazy_storage___updateCoalescer;
  if (*(void *)(v0 + OBJC_IVAR____TtC14amsengagementd22ServerDataCacheService____lazy_storage___updateCoalescer))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC14amsengagementd22ServerDataCacheService____lazy_storage___updateCoalescer);
  }
  else
  {
    uint64_t v3 = v0;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    _s25BackgroundUpdateCoalescerCMa();
    swift_allocObject();
    sub_10016B818();
    uint64_t v2 = v4;
    *(void *)(v3 + v1) = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void sub_10016E324(void *a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    Class isa = Set._bridgeToObjectiveC()().super.isa;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a1;
    *(void *)(v7 + 24) = a2;
    aBlock[4] = sub_10017AB20;
    aBlock[5] = v7;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10016D7B4;
    uint64_t aBlock[3] = &unk_1002168F0;
    uint64_t v8 = _Block_copy(aBlock);
    id v9 = a1;
    swift_bridgeObjectRetain();
    swift_release();
    [v5 updateCacheForAccountDSID:v9 withCacheTypeIDs:isa completion:v8];
    _Block_release(v8);
  }
}

uint64_t sub_10016E468(char a1, uint64_t a2, void *a3, uint64_t a4)
{
  if (qword_10022C5A8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3140;
  LogMessage.init(stringLiteral:)();
  LogMessage.init(stringLiteral:)();
  uint64_t v17 = (void *)sub_10004D510(0, (unint64_t *)&qword_100231E00);
  v16[0] = (uint64_t)a3;
  id v7 = a3;
  static LogMessage.safe(_:)();
  sub_10002CBB4((uint64_t)v16, &qword_10022F490);
  uint64_t v17 = (void *)sub_100043478(&qword_100230818);
  v16[0] = a4;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_10002CBB4((uint64_t)v16, &qword_10022F490);
  uint64_t v8 = 0x64656C696166;
  if (a1) {
    uint64_t v8 = 0x73736563637573;
  }
  uint64_t v9 = 0xE600000000000000;
  if (a1) {
    uint64_t v9 = 0xE700000000000000;
  }
  uint64_t v17 = &type metadata for String;
  v16[0] = v8;
  v16[1] = v9;
  static LogMessage.safe(_:)();
  sub_10002CBB4((uint64_t)v16, &qword_10022F490);
  uint64_t v10 = static os_log_type_t.default.getter();
  sub_10004841C(v10);
  uint64_t result = swift_bridgeObjectRelease();
  if (a2)
  {
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    swift_errorRetain();
    LogMessage.init(stringLiteral:)();
    swift_getErrorValue();
    uint64_t v17 = v15;
    uint64_t v12 = sub_10003BAA4(v16);
    (*(void (**)(uint64_t *))(*(v15 - 1) + 16))(v12);
    static LogMessage.safe(_:)();
    sub_10002CBB4((uint64_t)v16, &qword_10022F490);
    uint64_t v13 = static os_log_type_t.error.getter();
    sub_10004841C(v13);
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
  return result;
}

id sub_10016E7A8()
{
  *(void *)&v0[OBJC_IVAR____TtC14amsengagementd22ServerDataCacheService____lazy_storage___updateCoalescer] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ServerDataCacheService();
  return objc_msgSendSuper2(&v2, "init");
}

id sub_10016E80C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ServerDataCacheService();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ServerDataCacheService()
{
  return self;
}

uint64_t sub_10016E874(void *a1, uint64_t a2)
{
  uint64_t v30 = a2;
  uint64_t v3 = sub_100043478(&qword_10022D340);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(a1, "ams_iTunesAccounts");
  sub_10004D510(0, (unint64_t *)&qword_10022D3D8);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v35 = (unint64_t)_swiftEmptyArrayStorage;
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v8 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    unint64_t v14 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v8) {
    goto LABEL_17;
  }
LABEL_3:
  if (v8 < 1)
  {
    __break(1u);
    goto LABEL_40;
  }
  for (uint64_t i = 0; i != v8; ++i)
  {
    if ((v7 & 0xC000000000000001) != 0) {
      id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v11 = *(id *)(v7 + 8 * i + 32);
    }
    uint64_t v12 = v11;
    if ([v11 isActive])
    {
      id v13 = objc_msgSend(v12, "ams_DSID");

      if (v13)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v14 = v35;
LABEL_18:
  uint64_t result = swift_bridgeObjectRelease();
  if (!(v14 >> 62))
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v15) {
      goto LABEL_20;
    }
LABEL_36:
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v15) {
    goto LABEL_36;
  }
LABEL_20:
  if (v15 >= 1)
  {
    uint64_t v16 = 0;
    unint64_t v28 = v14 & 0xC000000000000001;
    v27[1] = (char *)&type metadata for () + 8;
    uint64_t v29 = (void *)v14;
    do
    {
      if (v28) {
        id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v17 = *(id *)(v14 + 8 * v16 + 32);
      }
      uint64_t v18 = v17;
      uint64_t v19 = type metadata accessor for TaskPriority();
      sub_100021AC0((uint64_t)v5, 1, 1, v19);
      uint64_t v20 = (void *)swift_allocObject();
      void v20[2] = 0;
      uint64_t v20[3] = 0;
      void v20[4] = v18;
      v20[5] = v30;
      int v21 = sub_10004FD40((uint64_t)v5, 1, v19);
      id v22 = v18;
      if (v21 == 1)
      {
        sub_10002CBB4((uint64_t)v5, &qword_10022D340);
      }
      else
      {
        TaskPriority.rawValue.getter();
        (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v5, v19);
      }
      if (v20[2])
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v23 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v25 = v24;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v23 = 0;
        uint64_t v25 = 0;
      }
      unint64_t v14 = (unint64_t)v29;
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = &unk_100232F50;
      *(void *)(v26 + 24) = v20;
      if (v25 | v23)
      {
        uint64_t v31 = 0;
        uint64_t v32 = 0;
        uint64_t v33 = v23;
        uint64_t v34 = v25;
      }
      ++v16;
      swift_task_create();

      swift_release();
    }
    while (v15 != v16);
    return swift_bridgeObjectRelease();
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10016ECF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[50] = a4;
  v5[51] = a5;
  type metadata accessor for LogMessage.StringInterpolation();
  v5[52] = swift_task_alloc();
  return _swift_task_switch(sub_10016ED88, 0, 0);
}

uint64_t sub_10016ED88()
{
  sub_100041F70();
  if (qword_10022C538 != -1) {
    swift_once();
  }
  v0[53] = qword_100244158;
  if (qword_10022C518 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[50];
  v0[54] = qword_100244150;
  type metadata accessor for MercuryCacheDatabase();
  id v2 = v1;
  sub_1000363B4();
  v0[55] = v3;
  v0[56] = sub_10004D510(0, (unint64_t *)&qword_100232020);
  v0[57] = sub_100045068();
  type metadata accessor for MercuryCacheUpdateStateManager();
  v0[58] = sub_100042BF0();
  swift_defaultActor_initialize();
  sub_100036AA8((uint64_t)&_swiftEmptySetSingleton);
  v0[59] = sub_1000226E0();
  sub_10004D58C();
  return _swift_task_switch(v4, v5, v6);
}

#error "10016EF40: call analysis failed (funcsize=50)"

uint64_t sub_10016EFA0()
{
  sub_100020958();
  id v1 = sub_100045068();
  *(void *)(v0 + 488) = v1;
  id v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 496) = v2;
  *id v2 = v0;
  v2[1] = sub_10016F03C;
  return sub_10010BC10((uint64_t)v1);
}

uint64_t sub_10016F03C()
{
  sub_100020958();
  sub_1000447B0();
  sub_100044DDC();
  *id v2 = v1;
  uint64_t v3 = *v0;
  sub_100020EBC();
  *uint64_t v4 = v3;
  *(void *)(v5 + 504) = v6;
  swift_task_dealloc();
  sub_100043FD8();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_10016F118()
{
  sub_100020958();
  sub_1001239D4(*(double *)(v0 + 504));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 512) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10016F1C0;
  return sub_10012242C();
}

uint64_t sub_10016F1C0()
{
  sub_100020958();
  sub_1000447B0();
  sub_100044DDC();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_100020EBC();
  *uint64_t v5 = v4;
  *(void *)(v6 + 520) = v0;
  swift_task_dealloc();
  sub_100043E7C();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_10016F29C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_100049B90();
  if (qword_10022C5A8 != -1) {
    swift_once();
  }
  uint64_t v18 = v16[51];
  uint64_t v19 = qword_100232E78;
  sub_100043478(&qword_10022E560);
  uint64_t v20 = sub_10002D318();
  sub_100044798(v20);
  uint64_t v21 = sub_100049E94();
  *(_OWORD *)(v21 + 16) = xmmword_1001C3120;
  uint64_t v46 = v21 + v17;
  v16[37] = sub_100043478(&qword_100232EE0);
  v16[34] = v18;
  id v22 = (id)AMSLogKey();
  if (v22)
  {
    uint64_t v23 = v22;
    a9 = v19;
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v26 = v25;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    uint64_t v27 = sub_100043D30(v16 + 34);
    v16[25] = swift_getMetatypeMetadata();
    v16[22] = v27;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)(v16 + 22), &qword_10022F490);
    sub_100020E44();
    v16[21] = &type metadata for String;
    v16[18] = v24;
    v16[19] = v26;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)(v16 + 18), &qword_10022F490);
    sub_1000208D8();
    sub_100046ED8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    uint64_t v28 = sub_100043D30(v16 + 34);
    v16[41] = swift_getMetatypeMetadata();
    v16[38] = v28;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)(v16 + 38), &qword_10022F490);
    sub_100020E94();
    sub_100046ED8();
  }
  uint64_t v29 = (void *)v16[61];
  uint64_t v30 = (void *)v16[50];
  sub_10004377C((uint64_t)(v16 + 34));
  sub_100047730();
  _StringGuts.grow(_:)(39);
  swift_bridgeObjectRelease();
  sub_10017B148();
  id v31 = [v30 description];
  uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v34 = v33;

  v35._uint64_t countAndFlagsBits = v32;
  v35._object = v34;
  String.append(_:)(v35);
  swift_bridgeObjectRelease();
  v16[45] = &type metadata for String;
  v16[42] = a12;
  v16[43] = a13;
  static LogMessage.sensitive(_:)();
  sub_10002CBB4((uint64_t)(v16 + 42), &qword_10022F490);
  uint64_t v36 = static os_log_type_t.info.getter();
  sub_10004841C(v36);
  swift_release();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  sub_100040954();
  sub_1000212F0();
  return v38(v37, v38, v39, v40, v41, v42, v43, v44, a9, v46, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_10016F570()
{
  uint64_t v21 = v0;

  if (qword_10022C5A8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 408);
  sub_100043478(&qword_10022E560);
  uint64_t v2 = sub_10002D318();
  sub_100044798(v2);
  *(_OWORD *)(sub_10002D330() + 16) = xmmword_1001C3130;
  *(void *)(v0 + 40) = sub_100043478(&qword_100232EE0);
  *(void *)(v0 + 16) = v1;
  id v3 = (id)AMSLogKey();
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    uint64_t v8 = sub_100043D30((void *)(v0 + 16));
    *(void *)(v0 + 232) = swift_getMetatypeMetadata();
    *(void *)(v0 + 208) = v8;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4(v0 + 208, &qword_10022F490);
    sub_100020E44();
    *(void *)(v0 + 264) = &type metadata for String;
    *(void *)(v0 + 240) = v5;
    *(void *)(v0 + 248) = v7;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4(v0 + 240, &qword_10022F490);
    sub_1000208D8();
    sub_100040C54();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    uint64_t v9 = sub_100043D30((void *)(v0 + 16));
    *(void *)(v0 + 72) = swift_getMetatypeMetadata();
    *(void *)(v0 + 48) = v9;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4(v0 + 48, &qword_10022F490);
    sub_100020E94();
    sub_100040C54();
  }
  uint64_t v10 = *(void **)(v0 + 400);
  sub_10004377C(v0 + 16);
  sub_10017B1D0();
  swift_bridgeObjectRelease();
  v20[0] = 0xD000000000000022;
  v20[1] = 0x80000001001D7300;
  id v11 = [v10 description];
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v14 = v13;

  v15._uint64_t countAndFlagsBits = v12;
  v15._object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  sub_100050E0C(0xD000000000000022);
  static LogMessage.sensitive(_:)();
  sub_10002CBB4((uint64_t)v20, &qword_10022F490);
  swift_getErrorValue();
  *(void *)(v0 + 136) = *(void *)(v0 + 376);
  sub_10003BAA4((uint64_t *)(v0 + 112));
  sub_1000456E0();
  (*(void (**)(void))(v16 + 16))();
  static LogMessage.safe(_:)();
  sub_10002CBB4(v0 + 112, &qword_10022F490);
  uint64_t v17 = static os_log_type_t.error.getter();
  sub_10004841C(v17);
  swift_release();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_task_dealloc();
  sub_100040954();
  return v18();
}

uint64_t sub_10016F904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[61] = a7;
  v8[62] = a8;
  v8[59] = a5;
  v8[60] = a6;
  v8[58] = a4;
  type metadata accessor for LogMessage.StringInterpolation();
  v8[63] = swift_task_alloc();
  return _swift_task_switch(sub_10016F99C, 0, 0);
}

uint64_t sub_10016F99C()
{
  sub_100041F70();
  if (qword_10022C538 != -1) {
    swift_once();
  }
  v0[64] = qword_100244158;
  if (qword_10022C518 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[58];
  v0[65] = qword_100244150;
  type metadata accessor for MercuryCacheDatabase();
  id v2 = v1;
  sub_1000363B4();
  v0[66] = v3;
  sub_10004D510(0, (unint64_t *)&qword_100232020);
  v0[67] = sub_100045068();
  type metadata accessor for MercuryCacheUpdateStateManager();
  v0[68] = sub_100042BF0();
  swift_defaultActor_initialize();
  sub_100036AA8((uint64_t)&_swiftEmptySetSingleton);
  v0[69] = sub_1000226E0();
  sub_10004D58C();
  return _swift_task_switch(v4, v5, v6);
}

#error "10016FB60: call analysis failed (funcsize=68)"

uint64_t sub_10016FC04()
{
  sub_100020958();
  sub_1000447B0();
  sub_100044DDC();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_100020EBC();
  *uint64_t v5 = v4;
  *(void *)(v6 + 576) = v0;
  swift_task_dealloc();
  sub_100043E7C();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_10016FCE0()
{
  if (qword_10022C5A8 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[60];
  sub_100043478(&qword_10022E560);
  uint64_t v2 = sub_10002D318();
  sub_100044798(v2);
  *(_OWORD *)(sub_10002D330() + 16) = xmmword_1001C3130;
  v0[45] = type metadata accessor for ServerDataCacheService();
  v0[42] = v1;
  id v3 = v1;
  id v4 = (id)AMSLogKey();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    uint64_t v8 = sub_10002106C(v0 + 42);
    v0[25] = swift_getMetatypeMetadata();
    v0[22] = v8;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)(v0 + 22), &qword_10022F490);
    sub_100020E44();
    v0[21] = &type metadata for String;
    v0[18] = v22;
    v0[19] = v7;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)(v0 + 18), &qword_10022F490);
    sub_1000208D8();
    sub_100040C54();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    uint64_t v9 = sub_10002106C(v0 + 42);
    v0[49] = swift_getMetatypeMetadata();
    v0[46] = v9;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)(v0 + 46), &qword_10022F490);
    sub_100020E94();
    sub_100040C54();
  }
  uint64_t v21 = (void (*)(uint64_t, void))v0[61];
  uint64_t v10 = (void *)v0[58];
  sub_10004377C((uint64_t)(v0 + 42));
  sub_10017B1D0();
  swift_bridgeObjectRelease();
  id v11 = [v10 description];
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v14 = v13;

  v15._uint64_t countAndFlagsBits = v12;
  v15._object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  v0[33] = &type metadata for String;
  v0[30] = 0xD000000000000022;
  v0[31] = 0x80000001001D7270;
  static LogMessage.sensitive(_:)();
  sub_10017B23C();
  uint64_t v16 = Dictionary.description.getter();
  v0[29] = &type metadata for String;
  v0[26] = v16;
  v0[27] = v17;
  static LogMessage.safe(_:)();
  sub_10002CBB4((uint64_t)(v0 + 26), &qword_10022F490);
  uint64_t v18 = static os_log_type_t.info.getter();
  sub_10004841C(v18);
  swift_bridgeObjectRelease();
  v21(1, 0);
  swift_release();
  swift_task_dealloc();
  sub_100040954();
  return v19();
}

uint64_t sub_100170058()
{
  uint64_t v25 = v0 + 2;
  if (qword_10022C5A8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v4 = sub_10002D318();
  sub_100044798(v4);
  uint64_t v5 = sub_10002D330();
  *(_OWORD *)(v5 + 16) = xmmword_1001C3130;
  uint64_t v26 = (void *)v5;
  uint64_t v6 = type metadata accessor for ServerDataCacheService();
  sub_100036B14(v6);
  if ((id)AMSLogKey())
  {
    uint64_t v7 = sub_10017B174();
    uint64_t v9 = v8;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    uint64_t v10 = (uint64_t)(v0 + 2);
    sub_100044FF4(v25);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_1000533D4(MetatypeMetadata);
    sub_10002CBB4(v2, &qword_10022F490);
    sub_100020E44();
    v0[41] = (uint64_t)&type metadata for String;
    v0[38] = v7;
    v0[39] = v9;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4(v1, &qword_10022F490);
    sub_1000208D8();
    sub_1000206E8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    uint64_t v10 = (uint64_t)(v0 + 2);
    sub_100044FF4(v25);
    uint64_t v12 = swift_getMetatypeMetadata();
    sub_10017B158(v12);
    sub_10002CBB4((uint64_t)(v0 + 6), &qword_10022F490);
    sub_100020E94();
    sub_1000206E8();
  }
  id v13 = (void *)v0[58];
  sub_10004377C(v10);
  _StringGuts.grow(_:)(34);
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v13, "description", v0 + 57);
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

  v18._uint64_t countAndFlagsBits = v15;
  v18._object = v17;
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  sub_100050E0C(0xD000000000000020);
  static LogMessage.sensitive(_:)();
  sub_10017B23C();
  sub_10017B21C();
  v0[17] = v0[54];
  sub_10003BAA4(v0 + 14);
  sub_1000456E0();
  sub_100018FE8();
  v19();
  static LogMessage.safe(_:)();
  sub_10002CBB4((uint64_t)(v0 + 14), &qword_10022F490);
  uint64_t v20 = static os_log_type_t.error.getter();
  sub_10004841C(v20);
  swift_bridgeObjectRelease();
  swift_getErrorValue();
  sub_1000BED94(v0[51]);
  uint64_t v21 = sub_1000307E4();
  v22(v21);
  swift_release();

  swift_errorRelease();
  swift_task_dealloc();
  sub_100040954();
  return v23();
}

void sub_1001704F0(char a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, void))(a3 + 16))(a3, a1 & 1);
}

void sub_100170560()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  Swift::String v35 = v3;
  uint64_t v36 = v4;
  uint64_t v37 = v5;
  uint64_t v7 = v6;
  uint64_t v34 = v8;
  uint64_t v9 = sub_100043478(&qword_10022D340);
  uint64_t v10 = sub_1000208F0(v9);
  __chkstk_darwin(v10);
  sub_100020EAC();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v15 = sub_1000208F0(v14);
  __chkstk_darwin(v15);
  sub_100011D4C();
  if (qword_10022C5A8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v16 = type metadata accessor for LogMessage();
  sub_100044798(v16);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3FC0;
  uint64_t v41 = type metadata accessor for ServerDataCacheService();
  v40[0] = v0;
  id v17 = v0;
  id v18 = (id)AMSLogKey();
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v33 = v13;
    id v21 = v17;
    uint64_t v22 = v2;
    uint64_t v24 = v23;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    uint64_t v25 = sub_100040FF8(v40);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v38[0] = v25;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v38, &qword_10022F490);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v38[0] = v20;
    v38[1] = v24;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v38, &qword_10022F490);
    sub_1000208D8();
    sub_100020BE4();
    uint64_t v2 = v22;
    id v17 = v21;
    uint64_t v13 = v33;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    uint64_t v26 = sub_100044FF4(v40);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v38[0] = v26;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v38, &qword_10022F490);
    sub_100020E94();
    sub_100020BE4();
  }
  sub_10004377C((uint64_t)v40);
  LogMessage.init(stringLiteral:)();
  uint64_t v41 = sub_10004D510(0, (unint64_t *)&qword_100231E00);
  v40[0] = v34;
  id v27 = v34;
  static LogMessage.sensitive(_:)();
  sub_10002CBB4((uint64_t)v40, &qword_10022F490);
  uint64_t v41 = sub_100043478(v35);
  v40[0] = v7;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_10002CBB4((uint64_t)v40, &qword_10022F490);
  uint64_t v28 = static os_log_type_t.info.getter();
  sub_10004841C(v28);
  swift_bridgeObjectRelease();
  uint64_t v29 = type metadata accessor for TaskPriority();
  sub_100021AC0(v13, 1, 1, v29);
  uint64_t v30 = (void *)swift_allocObject();
  void v30[2] = 0;
  uint64_t v30[3] = 0;
  v30[4] = v27;
  v30[5] = v7;
  v30[6] = v17;
  id v30[7] = v36;
  v30[8] = v37;
  id v31 = v17;
  id v32 = v27;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10016D650(v13, v2, (uint64_t)v30);
  swift_release();
  sub_100020FDC();
}

uint64_t sub_100170900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[57] = a7;
  v8[58] = a8;
  v8[55] = a5;
  v8[56] = a6;
  v8[54] = a4;
  type metadata accessor for LogMessage.StringInterpolation();
  v8[59] = swift_task_alloc();
  return _swift_task_switch(sub_100170998, 0, 0);
}

uint64_t sub_100170998()
{
  sub_100041F70();
  if (qword_10022C538 != -1) {
    swift_once();
  }
  v0[60] = qword_100244158;
  if (qword_10022C518 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[54];
  v0[61] = qword_100244150;
  type metadata accessor for MercuryCacheDatabase();
  id v2 = v1;
  sub_1000363B4();
  v0[62] = v3;
  sub_10004D510(0, (unint64_t *)&qword_100232020);
  v0[63] = sub_100045068();
  type metadata accessor for MercuryCacheUpdateStateManager();
  v0[64] = sub_100042BF0();
  swift_defaultActor_initialize();
  sub_100036AA8((uint64_t)&_swiftEmptySetSingleton);
  v0[65] = sub_1000226E0();
  sub_10004D58C();
  return _swift_task_switch(v4, v5, v6);
}

#error "100170B54: call analysis failed (funcsize=66)"

uint64_t sub_100170BF8()
{
  sub_100020958();
  sub_1000447B0();
  sub_100044DDC();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_100020EBC();
  *uint64_t v5 = v4;
  *(void *)(v6 + 544) = v0;
  swift_task_dealloc();
  sub_100043E7C();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_100170CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24)
{
  sub_100049B90();
  a23 = v26;
  a24 = v27;
  a22 = v24;
  if (qword_10022C5A8 != -1) {
    swift_once();
  }
  uint64_t v28 = (void *)v24[56];
  uint64_t v29 = qword_100232E78;
  sub_100043478(&qword_10022E560);
  uint64_t v30 = sub_10002D318();
  sub_100044798(v30);
  uint64_t v31 = sub_100049E94();
  *(_OWORD *)(v31 + 16) = xmmword_1001C3120;
  uint64_t v53 = v31 + v25;
  v24[45] = type metadata accessor for ServerDataCacheService();
  v24[42] = v28;
  id v32 = v28;
  id v33 = (id)AMSLogKey();
  if (v33)
  {
    uint64_t v34 = v33;
    a9 = v29;
    uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v37 = v36;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    uint64_t v38 = sub_100043D30(v24 + 42);
    v24[21] = swift_getMetatypeMetadata();
    v24[18] = v38;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)(v24 + 18), &qword_10022F490);
    sub_100020E44();
    v24[33] = &type metadata for String;
    v24[30] = v35;
    v24[31] = v37;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)(v24 + 30), &qword_10022F490);
    sub_1000208D8();
    sub_100046ED8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    uint64_t v39 = sub_100043D30(v24 + 42);
    v24[29] = swift_getMetatypeMetadata();
    v24[26] = v39;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)(v24 + 26), &qword_10022F490);
    sub_100020E94();
    sub_100046ED8();
  }
  uint64_t v40 = (void (*)(uint64_t, void))v24[57];
  sub_10004377C((uint64_t)(v24 + 42));
  sub_100047730();
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease();
  sub_10017B148();
  v41._uint64_t countAndFlagsBits = Set.description.getter();
  String.append(_:)(v41);
  swift_bridgeObjectRelease();
  uint64_t v42 = a12;
  v24[25] = &type metadata for String;
  sub_10004FD14(v42);
  static LogMessage.safe(_:)();
  sub_10002CBB4((uint64_t)&a12, &qword_10022F490);
  uint64_t v43 = static os_log_type_t.info.getter();
  sub_10004841C(v43);
  swift_bridgeObjectRelease();
  v40(1, 0);
  swift_release();
  swift_task_dealloc();
  sub_100040954();
  sub_1000212F0();
  return v45(v44, v45, v46, v47, v48, v49, v50, v51, a9, v53, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_100170F90()
{
  if (qword_10022C5A8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v4 = sub_10002D318();
  sub_100044798(v4);
  *(_OWORD *)(sub_10002D330() + 16) = xmmword_1001C3130;
  uint64_t v5 = type metadata accessor for ServerDataCacheService();
  sub_100036B14(v5);
  if ((id)AMSLogKey())
  {
    uint64_t v6 = sub_10017B174();
    uint64_t v8 = v7;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100044FF4(v0 + 2);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_1000533D4(MetatypeMetadata);
    sub_10002CBB4(v2, &qword_10022F490);
    sub_100020E44();
    v0[41] = &type metadata for String;
    v0[38] = v6;
    v0[39] = v8;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4(v1, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    sub_100044FF4(v0 + 2);
    uint64_t v10 = swift_getMetatypeMetadata();
    sub_10017B158(v10);
    sub_10002CBB4((uint64_t)(v0 + 6), &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  id v17 = (void (*)(void, id))v0[57];
  sub_10004377C((uint64_t)(v0 + 2));
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = Set.description.getter();
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  v0[13] = &type metadata for String;
  v0[10] = 0xD000000000000016;
  v0[11] = 0x80000001001D71C0;
  static LogMessage.safe(_:)();
  sub_10017B23C();
  swift_getErrorValue();
  v0[17] = v0[47];
  sub_10003BAA4(v0 + 14);
  sub_1000456E0();
  (*(void (**)(void))(v12 + 16))();
  static LogMessage.safe(_:)();
  sub_10002CBB4((uint64_t)(v0 + 14), &qword_10022F490);
  uint64_t v13 = static os_log_type_t.error.getter();
  sub_10004841C(v13);
  swift_bridgeObjectRelease();
  swift_getErrorValue();
  id v14 = sub_1000BED94(v0[50]);
  v17(0, v14);
  swift_release();

  swift_errorRelease();
  swift_task_dealloc();
  sub_100040954();
  return v15();
}

uint64_t sub_100171440(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = sub_100043478(&qword_10022D340);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TaskPriority();
  sub_100021AC0((uint64_t)v10, 1, 1, v11);
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = a1;
  v12[5] = a2;
  void v12[6] = a3;
  v12[7] = a4;
  id v13 = a1;
  swift_bridgeObjectRetain();
  id v14 = a4;
  sub_10016D650((uint64_t)v10, (uint64_t)&unk_100232F20, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_10017153C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[10] = a6;
  v7[11] = a7;
  unsigned char v7[8] = a4;
  v7[9] = a5;
  return _swift_task_switch(sub_100171560, 0, 0);
}

uint64_t sub_100171560()
{
  sub_100041F70();
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  v0[12] = sub_10016E260();
  sub_100043478(&qword_10022D738);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3110;
  *(void *)(inited + 32) = v2;
  *(void *)(inited + 40) = v1;
  swift_bridgeObjectRetain();
  sub_1001A9D4C();
  v0[13] = v4;
  sub_100043FD8();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_100171614()
{
  sub_100020958();
  sub_10016B968();
  swift_bridgeObjectRelease();
  swift_release();
  sub_100040954();
  return v0();
}

void sub_100171684(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_100043478(&qword_10022D738);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3110;
  *(void *)(inited + 32) = a5;
  *(void *)(inited + 40) = a6;
  swift_bridgeObjectRetain();
  sub_1001A9D4C();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v15[4] = a1;
  void v15[5] = a2;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_10016D7B4;
  v15[3] = &unk_1002167B0;
  id v14 = _Block_copy(v15);
  swift_retain();
  swift_release();
  [a3 updateCacheForAccountDSID:a4 withCacheTypeIDs:isa completion:v14];
  _Block_release(v14);
}

uint64_t sub_1001717C4(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v13 - 8);
  if (qword_10022C5A8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v44 = (void *)type metadata accessor for ServerDataCacheService();
  unint64_t v42 = (unint64_t)a1;
  id v14 = a1;
  id v15 = (id)AMSLogKey();
  if (v15)
  {
    uint64_t v16 = v15;
    id v38 = v14;
    uint64_t v39 = a5;
    uint64_t v17 = a2;
    uint64_t v18 = a3;
    uint64_t v19 = a6;
    uint64_t v20 = a7;
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v24._uint64_t countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    sub_100049788(&v42, (uint64_t)v44);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v40[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v40, &qword_10022F490);
    v26._uint64_t countAndFlagsBits = 5972026;
    v26._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    uint64_t MetatypeMetadata = &type metadata for String;
    v40[0] = v21;
    v40[1] = v23;
    a7 = v20;
    a6 = v19;
    a3 = v18;
    a2 = v17;
    a5 = v39;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v40, &qword_10022F490);
    v27._uint64_t countAndFlagsBits = 93;
    v27._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    LogMessage.init(stringInterpolation:)();
    id v14 = v38;
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v28._uint64_t countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    sub_100049788(&v42, (uint64_t)v44);
    uint64_t v29 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v40[0] = v29;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v40, &qword_10022F490);
    v30._uint64_t countAndFlagsBits = 58;
    v30._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v42);
  unint64_t v42 = 0;
  unint64_t v43 = 0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  unint64_t v42 = 0xD000000000000014;
  unint64_t v43 = 0x80000001001D70D0;
  v31._uint64_t countAndFlagsBits = a2;
  v31._object = a3;
  String.append(_:)(v31);
  uint64_t v44 = &type metadata for String;
  static LogMessage.safe(_:)();
  sub_10002CBB4((uint64_t)&v42, &qword_10022F490);
  uint64_t v32 = static os_log_type_t.info.getter();
  sub_10004841C(v32);
  swift_bridgeObjectRelease();
  sub_100036B48();
  id v33 = (void *)swift_allocObject();
  v33[2] = a5;
  v33[3] = v14;
  v33[4] = a6;
  v33[5] = a7;
  uint64_t v34 = (void *)swift_allocObject();
  _OWORD v34[2] = v14;
  void v34[3] = a6;
  void v34[4] = a7;
  v34[5] = a2;
  v34[6] = a3;
  id v35 = v14;
  swift_retain_n();
  id v36 = v35;
  swift_bridgeObjectRetain();
  sub_10003A184();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_100171C30(unsigned __int8 *a1, char a2, void *a3, uint64_t (*a4)(void, void))
{
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v8 - 8);
  int v9 = *a1;
  if (v9 == 1 && (a2 & 1) == 0)
  {
    uint64_t v23 = a4;
    if (qword_10022C5A8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v49 = (void *)type metadata accessor for ServerDataCacheService();
    unint64_t v47 = (unint64_t)a3;
    id v24 = a3;
    id v25 = (id)AMSLogKey();
    if (v25)
    {
      Swift::String v26 = v25;
      uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v29 = v28;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v30._uint64_t countAndFlagsBits = 0;
      v30._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v30);
      sub_100049788(&v47, (uint64_t)v49);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v44 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v44, &qword_10022F490);
      v32._uint64_t countAndFlagsBits = 5972026;
      v32._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v44 = v27;
      uint64_t v45 = v29;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v44, &qword_10022F490);
      v33._uint64_t countAndFlagsBits = 93;
      v33._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v33);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      sub_100049788(&v47, (uint64_t)v49);
      uint64_t v40 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v44 = v40;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v44, &qword_10022F490);
      v41._uint64_t countAndFlagsBits = 58;
      v41._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v41);
      LogMessage.init(stringInterpolation:)();
    }
    a4 = v23;
    sub_10004377C((uint64_t)&v47);
    uint64_t v49 = &type metadata for String;
    unint64_t v47 = 0xD00000000000002FLL;
    unint64_t v48 = 0x80000001001D7150;
    static LogMessage.safe(_:)();
    sub_10002CBB4((uint64_t)&v47, &qword_10022F490);
    uint64_t v42 = static os_log_type_t.info.getter();
    sub_10004841C(v42);
    swift_bridgeObjectRelease();
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v11 = *((void *)a1 + 1);
    if (qword_10022C5A8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v49 = (void *)type metadata accessor for ServerDataCacheService();
    unint64_t v47 = (unint64_t)a3;
    id v12 = a3;
    id v13 = (id)AMSLogKey();
    if (v13)
    {
      id v14 = v13;
      id v15 = a4;
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v18 = v17;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v19._uint64_t countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v19);
      sub_100049788(&v47, (uint64_t)v49);
      uint64_t v20 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v44 = v20;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v44, &qword_10022F490);
      v21._uint64_t countAndFlagsBits = 5972026;
      v21._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v21);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v44 = v16;
      uint64_t v45 = v18;
      a4 = v15;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v44, &qword_10022F490);
      v22._uint64_t countAndFlagsBits = 93;
      v22._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v22);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v34._uint64_t countAndFlagsBits = 0;
      v34._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v34);
      sub_100049788(&v47, (uint64_t)v49);
      uint64_t v35 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v44 = v35;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v44, &qword_10022F490);
      v36._uint64_t countAndFlagsBits = 58;
      v36._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v36);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v47);
    unint64_t v47 = 0;
    unint64_t v48 = 0xE000000000000000;
    _StringGuts.grow(_:)(47);
    v37._object = (void *)0x80000001001D7120;
    v37._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
    String.append(_:)(v37);
    LOBYTE(v44) = v9;
    uint64_t v45 = v11;
    sub_100043478(&qword_100232F00);
    _print_unlocked<A, B>(_:_:)();
    uint64_t v49 = &type metadata for String;
    static LogMessage.safe(_:)();
    sub_10002CBB4((uint64_t)&v47, &qword_10022F490);
    uint64_t v38 = static os_log_type_t.info.getter();
    sub_10004841C(v38);
    swift_bridgeObjectRelease();
  }
  return a4(v11, 0);
}

void sub_100172298(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v18 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v18 - 8);
  uint64_t v19 = sub_100172754(a1, (uint64_t)&_swiftEmptyDictionarySingleton, a2);
  if ((_BYTE)v20 == 0xFF)
  {
    uint64_t v42 = (void *)a5;
    uint64_t v44 = a1;
    uint64_t v23 = (void (*)(void, id))a6;
    if (qword_10022C5A8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v49 = (void *)type metadata accessor for ServerDataCacheService();
    v48[0] = a3;
    id v24 = a3;
    id v25 = (id)AMSLogKey();
    if (v25)
    {
      Swift::String v26 = v25;
      uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v29 = v28;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v30._uint64_t countAndFlagsBits = 0;
      v30._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v30);
      sub_100049788(v48, (uint64_t)v49);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v46[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)v46, &qword_10022F490);
      v32._uint64_t countAndFlagsBits = 5972026;
      v32._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t MetatypeMetadata = &type metadata for String;
      v46[0] = v27;
      v46[1] = v29;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)v46, &qword_10022F490);
      v33._uint64_t countAndFlagsBits = 93;
      v33._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v33);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v34._uint64_t countAndFlagsBits = 0;
      v34._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v34);
      sub_100049788(v48, (uint64_t)v49);
      uint64_t v35 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v46[0] = v35;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)v46, &qword_10022F490);
      v36._uint64_t countAndFlagsBits = 58;
      v36._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v36);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v48);
    v48[0] = 0;
    v48[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(42);
    v37._object = (void *)0x80000001001D70A0;
    v37._uint64_t countAndFlagsBits = 0xD000000000000024;
    String.append(_:)(v37);
    v38._uint64_t countAndFlagsBits = a4;
    v38._object = v42;
    String.append(_:)(v38);
    v39._uint64_t countAndFlagsBits = 8250;
    v39._object = (void *)0xE200000000000000;
    String.append(_:)(v39);
    v46[0] = v44;
    sub_100043478((uint64_t *)&unk_100233150);
    _print_unlocked<A, B>(_:_:)();
    uint64_t v49 = &type metadata for String;
    static LogMessage.safe(_:)();
    sub_10002CBB4((uint64_t)v48, &qword_10022F490);
    uint64_t v40 = static os_log_type_t.error.getter();
    sub_10004841C(v40);
    swift_bridgeObjectRelease();
    swift_getErrorValue();
    id v41 = sub_1000BED94(v45);
    v23(0, v41);
  }
  else
  {
    uint64_t v21 = v19;
    unsigned __int8 v22 = v20;
    sub_100018564(v19, v20, a6, a7, a3, a4, a5, a8, a9, a10, a11);
    sub_10017A360(v21, v22);
  }
}

uint64_t sub_100172754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4 = 5;
  switch(a3)
  {
    case 0:
      break;
    case 1:
      char v4 = 4;
      break;
    case 2:
      char v4 = 3;
      break;
    case 3:
      char v4 = 2;
      break;
    case 4:
      char v4 = 1;
      break;
    case 5:
      char v4 = 0;
      break;
    default:
      sub_1000441D8();
      sub_10002281C();
      sub_100049FC4();
      __break(1u);
      JUMPOUT(0x1001728A0);
  }
  swift_errorRetain();
  sub_100043478((uint64_t *)&unk_100233150);
  if (!swift_dynamicCast())
  {
    swift_errorRelease();
    return 0;
  }
  swift_errorRelease();
  if (v6 != 2) {
    return 0;
  }
  if ((v4 & 2) != 0) {
    return 0;
  }
  if ((v4 & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1001728B8(void *a1, uint64_t a2, void *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v58 = v7;
  uint64_t ObjectType = swift_getObjectType();
  if (qword_10022C5A8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v12 = type metadata accessor for LogMessage();
  sub_100044798(v12);
  sub_10004A1C4();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  sub_10017B1F0();
  uint64_t v13 = static LogMessage.safe(_:)();
  sub_10017B130(v13, v14, v15, v16, v17, v18, v19, v20, v51, v54);
  sub_10004D510(0, (unint64_t *)&qword_100231E00);
  id v21 = a1;
  uint64_t v22 = static LogMessage.sensitive(_:)();
  sub_10017B130(v22, v23, v24, v25, v26, v27, v28, v29, v52, v55);
  sub_100021A94();
  swift_bridgeObjectRelease();
  v30._uint64_t countAndFlagsBits = a2;
  v30._object = a3;
  String.append(_:)(v30);
  sub_10002CB58((uint64_t)" networkPolicy: ");
  v31._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v31);
  swift_bridgeObjectRelease();
  uint64_t v32 = static LogMessage.safe(_:)();
  sub_10017B130(v32, v33, v34, v35, v36, v37, v38, v39, v53, v56);
  uint64_t v40 = static os_log_type_t.info.getter();
  sub_10004841C(v40);
  swift_bridgeObjectRelease();
  if (a4 >= 6)
  {
    sub_1000441D8();
    sub_10002281C();
    uint64_t result = sub_10004757C();
    __break(1u);
  }
  else
  {
    type metadata accessor for MercuryCacheDatabase();
    id v41 = v21;
    sub_1000363B4();
    uint64_t v43 = v42;
    sub_10010DE18();
    uint64_t v44 = (void *)sub_100035E38();
    void v44[2] = a4;
    v44[3] = a5;
    void v44[4] = a6;
    v44[5] = v58;
    v44[6] = v41;
    v44[7] = a2;
    v44[8] = a3;
    v44[9] = v43;
    v44[10] = 5 - a4;
    v44[11] = ObjectType;
    uint64_t v45 = (void *)sub_100035E38();
    v45[2] = a4;
    uint64_t v45[3] = v58;
    v45[4] = a2;
    v45[5] = a3;
    v45[6] = a5;
    v45[7] = a6;
    v45[8] = v41;
    v45[9] = v43;
    v45[10] = 5 - a4;
    v45[11] = ObjectType;
    id v46 = v41;
    swift_retain_n();
    id v47 = v58;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    id v48 = v46;
    id v49 = v47;
    sub_10003A184();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100172C4C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  HIDWORD(v29) = a2;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = a4;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a5;
  *(void *)(v17 + 24) = a6;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a5;
  *(void *)(v18 + 24) = a6;
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = a5;
  void v19[3] = a6;
  void v19[4] = a7;
  v19[5] = a8;
  v19[6] = a9;
  v19[7] = a10;
  v19[8] = a3;
  v19[9] = a4;
  id v20 = a5;
  id v21 = a6;
  id v22 = v20;
  id v23 = v21;
  swift_retain_n();
  id v24 = v22;
  id v25 = v23;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000187A0(a1, HIDWORD(v29), (uint64_t)sub_100019000, v16, (uint64_t)sub_10017A374, v17, (uint64_t)sub_10017A3AC, v18, (uint64_t)sub_10017A430, (uint64_t)v19, (uint64_t)&qword_10022D6F0, (uint64_t)&unk_100216540, (uint64_t)&unk_100216568, (uint64_t)sub_10017B12C, (uint64_t)sub_10017B0E4, (uint64_t)&unk_100216590, (uint64_t)sub_10017B098, a10, a7,
    a1,
    v29,
    a11,
    v30,
    v31,
    v32,
    v33,
    v34);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_100172E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_100172EA4, 0, 0);
}

uint64_t sub_100172EA4()
{
  sub_100020958();
  *(void *)(v0 + 32) = sub_10016E260();
  sub_1001A9D4C();
  *(void *)(v0 + 40) = v1;
  sub_100043FD8();
  return _swift_task_switch(v2, v3, v4);
}

uint64_t sub_100172F1C(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v11 - 8);
  if (qword_10022C5A8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  id v46 = (void *)type metadata accessor for ServerDataCacheService();
  unint64_t v44 = (unint64_t)a1;
  id v12 = a1;
  id v13 = (id)AMSLogKey();
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = v16;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v18._uint64_t countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    sub_100049788(&v44, (uint64_t)v46);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v42[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v42, &qword_10022F490);
    v20._uint64_t countAndFlagsBits = 5972026;
    v20._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    uint64_t MetatypeMetadata = &type metadata for String;
    v42[0] = v15;
    v42[1] = v17;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v42, &qword_10022F490);
    v21._uint64_t countAndFlagsBits = 93;
    v21._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v22._uint64_t countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    sub_100049788(&v44, (uint64_t)v46);
    uint64_t v23 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v42[0] = v23;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v42, &qword_10022F490);
    v24._uint64_t countAndFlagsBits = 58;
    v24._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v44);
  unint64_t v44 = 0;
  unint64_t v45 = 0xE000000000000000;
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease();
  unint64_t v44 = 0xD000000000000013;
  unint64_t v45 = 0x80000001001D6FB0;
  id v25 = [a2 description];
  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v28 = v27;

  v29._uint64_t countAndFlagsBits = v26;
  v29._object = v28;
  String.append(_:)(v29);
  swift_bridgeObjectRelease();
  v30._uint64_t countAndFlagsBits = 2108704;
  v30._object = (void *)0xE300000000000000;
  String.append(_:)(v30);
  v31._uint64_t countAndFlagsBits = a3;
  v31._object = a4;
  String.append(_:)(v31);
  id v46 = &type metadata for String;
  static LogMessage.safe(_:)();
  sub_10002CBB4((uint64_t)&v44, &qword_10022F490);
  uint64_t v32 = static os_log_type_t.info.getter();
  sub_10004841C(v32);
  swift_bridgeObjectRelease();
  sub_10010DE18();
  uint64_t v33 = (void *)swift_allocObject();
  v33[2] = a6;
  v33[3] = v12;
  v33[4] = a7;
  v33[5] = a8;
  v33[6] = a3;
  v33[7] = a4;
  uint64_t v34 = (void *)swift_allocObject();
  _OWORD v34[2] = v12;
  void v34[3] = a7;
  void v34[4] = a8;
  v34[5] = a3;
  v34[6] = a4;
  id v35 = v12;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  id v36 = v35;
  sub_10003A184();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1001733BC(unsigned __int8 *a1, char a2, void *a3, uint64_t (*a4)(void, void), uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v13 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v13 - 8);
  int v14 = *a1;
  if (v14 == 1 && (a2 & 1) == 0)
  {
    if (qword_10022C5A8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v55 = (void *)type metadata accessor for ServerDataCacheService();
    unint64_t v53 = (unint64_t)a3;
    id v28 = a3;
    id v29 = (id)AMSLogKey();
    if (v29)
    {
      Swift::String v30 = v29;
      uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v33 = v32;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v34._uint64_t countAndFlagsBits = 0;
      v34._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v34);
      sub_100049788(&v53, (uint64_t)v55);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v50 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v50, &qword_10022F490);
      v36._uint64_t countAndFlagsBits = 5972026;
      v36._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v36);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v50 = v31;
      uint64_t v51 = v33;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v50, &qword_10022F490);
      v37._uint64_t countAndFlagsBits = 93;
      v37._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v37);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v43._uint64_t countAndFlagsBits = 0;
      v43._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v43);
      sub_100049788(&v53, (uint64_t)v55);
      uint64_t v44 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v50 = v44;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v50, &qword_10022F490);
      v45._uint64_t countAndFlagsBits = 58;
      v45._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v45);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v53);
    unint64_t v53 = 0;
    unint64_t v54 = 0xE000000000000000;
    _StringGuts.grow(_:)(48);
    swift_bridgeObjectRelease();
    unint64_t v53 = 0xD00000000000001ALL;
    unint64_t v54 = 0x80000001001D7020;
    v46._uint64_t countAndFlagsBits = a6;
    v46._object = a7;
    String.append(_:)(v46);
    v47._object = (void *)0x80000001001D6F10;
    v47._uint64_t countAndFlagsBits = 0xD000000000000014;
    String.append(_:)(v47);
    uint64_t v55 = &type metadata for String;
    static LogMessage.safe(_:)();
    sub_10002CBB4((uint64_t)&v53, &qword_10022F490);
    uint64_t v48 = static os_log_type_t.info.getter();
    sub_10004841C(v48);
    swift_bridgeObjectRelease();
    uint64_t v16 = 0;
  }
  else
  {
    uint64_t v16 = *((void *)a1 + 1);
    if (qword_10022C5A8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v55 = (void *)type metadata accessor for ServerDataCacheService();
    unint64_t v53 = (unint64_t)a3;
    id v17 = a3;
    id v18 = (id)AMSLogKey();
    if (v18)
    {
      uint64_t v19 = v18;
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      Swift::String v21 = a4;
      uint64_t v23 = v22;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v24._uint64_t countAndFlagsBits = 0;
      v24._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v24);
      sub_100049788(&v53, (uint64_t)v55);
      uint64_t v25 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v50 = v25;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v50, &qword_10022F490);
      v26._uint64_t countAndFlagsBits = 5972026;
      v26._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v50 = v20;
      uint64_t v51 = v23;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v50, &qword_10022F490);
      v27._uint64_t countAndFlagsBits = 93;
      v27._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      LogMessage.init(stringInterpolation:)();
      a4 = v21;
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v38._uint64_t countAndFlagsBits = 0;
      v38._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v38);
      sub_100049788(&v53, (uint64_t)v55);
      uint64_t v39 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v50 = v39;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v50, &qword_10022F490);
      v40._uint64_t countAndFlagsBits = 58;
      v40._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v40);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v53);
    unint64_t v53 = 0;
    unint64_t v54 = 0xE000000000000000;
    _StringGuts.grow(_:)(32);
    v41._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
    v41._object = (void *)0x80000001001D7000;
    String.append(_:)(v41);
    LOBYTE(v50) = v14;
    uint64_t v51 = v16;
    sub_100043478(&qword_100232F00);
    _print_unlocked<A, B>(_:_:)();
    uint64_t v55 = &type metadata for String;
    static LogMessage.safe(_:)();
    sub_10002CBB4((uint64_t)&v53, &qword_10022F490);
    uint64_t v42 = static os_log_type_t.info.getter();
    sub_10004841C(v42);
    swift_bridgeObjectRelease();
  }
  return a4(v16, 0);
}

void sub_100173A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,Swift::Int a21,uint64_t a22,void *a23)
{
  sub_1000209F4();
  uint64_t v24 = v23;
  Swift::String v26 = v25;
  uint64_t v28 = v27;
  uint64_t v60 = v29;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v34 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v35 = sub_1000208F0(v34);
  __chkstk_darwin(v35);
  sub_100011D4C();
  uint64_t v69 = v33;
  swift_errorRetain();
  sub_100043478((uint64_t *)&unk_100233150);
  if (swift_dynamicCast() && v68 == 2)
  {
    if (qword_10022C5A8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v36 = sub_10017B1B8();
    sub_100044798(v36);
    sub_10004A1C4();
    *(_OWORD *)(sub_10017B204() + 16) = xmmword_1001C3120;
    uint64_t v67 = (void *)type metadata accessor for ServerDataCacheService();
    unint64_t v65 = (unint64_t)v31;
    id v37 = v31;
    id v38 = (id)AMSLogKey();
    if (v38)
    {
      uint64_t v39 = v38;
      uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v42 = v41;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      uint64_t v43 = sub_10002106C(&v65);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v62 = v43;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v62, &qword_10022F490);
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v62 = v40;
      uint64_t v63 = v42;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v62, &qword_10022F490);
      sub_1000208D8();
      sub_100011CC0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100049788(&v65, (uint64_t)v67);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v62 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v62, &qword_10022F490);
      sub_100020E94();
      sub_100011CC0();
    }
    sub_10004377C((uint64_t)&v65);
    uint64_t v67 = &type metadata for String;
    unint64_t v65 = 0xD000000000000038;
    unint64_t v66 = 0x80000001001D6E70;
    static LogMessage.safe(_:)();
    sub_10002CBB4((uint64_t)&v65, &qword_10022F490);
    uint64_t v59 = static os_log_type_t.info.getter();
    sub_10004841C(v59);
    swift_bridgeObjectRelease();
    v60(v24, 0);
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    if (qword_10022C5A8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v44 = sub_10017B1B8();
    sub_100044798(v44);
    sub_10003BDEC();
    *(_OWORD *)(sub_10017B204() + 16) = xmmword_1001C3120;
    uint64_t v67 = (void *)type metadata accessor for ServerDataCacheService();
    unint64_t v65 = (unint64_t)v31;
    id v45 = v31;
    id v46 = (id)AMSLogKey();
    if (v46)
    {
      Swift::String v47 = v46;
      uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v50 = v49;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100049788(&v65, (uint64_t)v67);
      uint64_t v51 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v62 = v51;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v62, &qword_10022F490);
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v62 = v48;
      uint64_t v63 = v50;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v62, &qword_10022F490);
      sub_1000208D8();
      sub_100020BE4();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100049788(&v65, (uint64_t)v67);
      uint64_t v52 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v62 = v52;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v62, &qword_10022F490);
      sub_100020E94();
      sub_100020BE4();
    }
    sub_10004377C((uint64_t)&v65);
    unint64_t v65 = 0;
    unint64_t v66 = 0xE000000000000000;
    _StringGuts.grow(_:)(a21);
    v53._uint64_t countAndFlagsBits = a22;
    v53._object = a23;
    String.append(_:)(v53);
    v54._uint64_t countAndFlagsBits = v28;
    v54._object = v26;
    String.append(_:)(v54);
    v55._uint64_t countAndFlagsBits = 8250;
    v55._object = (void *)0xE200000000000000;
    String.append(_:)(v55);
    uint64_t v62 = v33;
    _print_unlocked<A, B>(_:_:)();
    uint64_t v67 = &type metadata for String;
    static LogMessage.safe(_:)();
    sub_10002CBB4((uint64_t)&v65, &qword_10022F490);
    uint64_t v56 = static os_log_type_t.error.getter();
    sub_10004841C(v56);
    swift_bridgeObjectRelease();
    swift_getErrorValue();
    id v57 = sub_1000BED94(v61);
    v60(0, v57);
  }
  sub_100020FDC();
}

void sub_100174040(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v18 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v18 - 8);
  uint64_t v19 = sub_100172754(a1, (uint64_t)_swiftEmptyDictionarySingleton, a2);
  if ((_BYTE)v20 == 0xFF)
  {
    uint64_t v42 = (void *)a5;
    uint64_t v44 = a1;
    uint64_t v23 = (void (*)(void, id))a6;
    if (qword_10022C5A8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v49 = (void *)type metadata accessor for ServerDataCacheService();
    v48[0] = a3;
    id v24 = a3;
    id v25 = (id)AMSLogKey();
    if (v25)
    {
      Swift::String v26 = v25;
      uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v29 = v28;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v30._uint64_t countAndFlagsBits = 0;
      v30._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v30);
      sub_100049788(v48, (uint64_t)v49);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v46[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)v46, &qword_10022F490);
      v32._uint64_t countAndFlagsBits = 5972026;
      v32._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t MetatypeMetadata = &type metadata for String;
      v46[0] = v27;
      v46[1] = v29;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)v46, &qword_10022F490);
      v33._uint64_t countAndFlagsBits = 93;
      v33._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v33);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v34._uint64_t countAndFlagsBits = 0;
      v34._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v34);
      sub_100049788(v48, (uint64_t)v49);
      uint64_t v35 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v46[0] = v35;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)v46, &qword_10022F490);
      v36._uint64_t countAndFlagsBits = 58;
      v36._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v36);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v48);
    v48[0] = 0;
    v48[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(41);
    v37._object = (void *)0x80000001001D6F80;
    v37._uint64_t countAndFlagsBits = 0xD000000000000023;
    String.append(_:)(v37);
    v38._uint64_t countAndFlagsBits = a4;
    v38._object = v42;
    String.append(_:)(v38);
    v39._uint64_t countAndFlagsBits = 8250;
    v39._object = (void *)0xE200000000000000;
    String.append(_:)(v39);
    v46[0] = v44;
    sub_100043478((uint64_t *)&unk_100233150);
    _print_unlocked<A, B>(_:_:)();
    uint64_t v49 = &type metadata for String;
    static LogMessage.safe(_:)();
    sub_10002CBB4((uint64_t)v48, &qword_10022F490);
    uint64_t v40 = static os_log_type_t.error.getter();
    sub_10004841C(v40);
    swift_bridgeObjectRelease();
    swift_getErrorValue();
    id v41 = sub_1000BED94(v45);
    v23(0, v41);
  }
  else
  {
    uint64_t v21 = v19;
    unsigned __int8 v22 = v20;
    sub_100172C4C(v19, v20, a6, a7, a3, a8, a4, a5, a9, a10, a11);
    sub_10017A360(v21, v22);
  }
}

#error "10017453C: call analysis failed (funcsize=17)"

uint64_t sub_10017454C(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  Swift::String v33 = v8;
  uint64_t ObjectType = swift_getObjectType();
  if (qword_10022C5A8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v14 = type metadata accessor for LogMessage();
  sub_100044798(v14);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  Swift::String v37 = &type metadata for String;
  sub_100035D54();
  sub_10002CBB4((uint64_t)v36, &qword_10022F490);
  Swift::String v37 = (void *)sub_10004D510(0, (unint64_t *)&qword_100231E00);
  v36[0] = a1;
  id v29 = a1;
  static LogMessage.sensitive(_:)();
  sub_10002CBB4((uint64_t)v36, &qword_10022F490);
  sub_10004D704();
  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease();
  v36[0] = 0x3A65636976726573;
  v36[1] = 0xE900000000000020;
  v15._uint64_t countAndFlagsBits = a2;
  v15._object = a3;
  String.append(_:)(v15);
  v16._object = (void *)0x80000001001D6D10;
  v16._uint64_t countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v16);
  v17._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  Swift::String v37 = &type metadata for String;
  sub_100035D54();
  sub_10002CBB4((uint64_t)v36, &qword_10022F490);
  uint64_t v18 = static os_log_type_t.info.getter();
  sub_10004841C(v18);
  swift_bridgeObjectRelease();
  if (a6 >= 6)
  {
    sub_1000441D8();
    sub_10002281C();
    uint64_t result = sub_10004757C();
    __break(1u);
  }
  else
  {
    type metadata accessor for MercuryCacheDatabase();
    id v19 = v29;
    sub_1000363B4();
    uint64_t v21 = v20;
    uint64_t v30 = v20;
    sub_10010F07C();
    unsigned __int8 v22 = (void *)swift_allocObject();
    void v22[2] = a6;
    uint64_t v22[3] = a7;
    v22[4] = a8;
    void v22[5] = v33;
    v22[6] = v19;
    v22[7] = v21;
    v22[8] = a2;
    v22[9] = a3;
    v22[10] = a4;
    v22[11] = a5;
    v22[12] = 5 - a6;
    v22[13] = ObjectType;
    uint64_t v23 = (void *)swift_allocObject();
    v23[2] = a6;
    void v23[3] = v33;
    v23[4] = a2;
    v23[5] = a3;
    v23[6] = a7;
    v23[7] = a8;
    v23[8] = v19;
    v23[9] = v30;
    v23[10] = a4;
    v23[11] = a5;
    v23[12] = 5 - a6;
    v23[13] = ObjectType;
    id v24 = v19;
    swift_retain_n();
    id v25 = v33;
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    id v26 = v24;
    id v27 = v25;
    sub_10003A184();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100174960(uint64_t *a1, int a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  HIDWORD(v30) = a2;
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = a3;
  *(void *)(v28 + 24) = a4;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a5;
  *(void *)(v18 + 24) = a6;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a5;
  *(void *)(v19 + 24) = a6;
  uint64_t v20 = (void *)swift_allocObject();
  void v20[2] = a7;
  uint64_t v20[3] = a8;
  void v20[4] = a9;
  v20[5] = a10;
  v20[6] = a11;
  v20[7] = a12;
  v20[8] = a5;
  v20[9] = a3;
  v20[10] = a4;
  id v21 = a5;
  swift_retain_n();
  id v22 = a6;
  id v23 = v21;
  id v24 = v22;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000187A0((uint64_t)a1, HIDWORD(v30), (uint64_t)sub_10017A048, v28, (uint64_t)sub_10017A074, v18, (uint64_t)sub_10017A0AC, v19, (uint64_t)sub_10017A128, (uint64_t)v20, (uint64_t)&qword_10022F258, (uint64_t)&unk_100216310, (uint64_t)&unk_100216338, (uint64_t)sub_10017A160, (uint64_t)sub_10017A198, (uint64_t)&unk_100216360, (uint64_t)sub_10001B5D4, v26, a10,
    a12,
    a8,
    v28,
    a1,
    v30,
    a13,
    v31,
    v32);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_100174BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_100174BC4, 0, 0);
}

uint64_t sub_100174BC4()
{
  sub_100020958();
  *(void *)(v0 + 32) = sub_10016E260();
  sub_1001A9D4C();
  *(void *)(v0 + 40) = v1;
  sub_100043FD8();
  return _swift_task_switch(v2, v3, v4);
}

uint64_t sub_100174C3C()
{
  sub_100020958();
  sub_10016B968();
  swift_bridgeObjectRelease();
  swift_release();
  sub_100040954();
  return v0();
}

uint64_t sub_100174CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  sub_10010F07C();
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = a6;
  void v14[3] = a7;
  void v14[4] = a8;
  v14[5] = a9;
  v14[6] = a2;
  v14[7] = a3;
  Swift::String v15 = (void *)swift_allocObject();
  v15[2] = a7;
  v15[3] = a8;
  v15[4] = a9;
  void v15[5] = a2;
  void v15[6] = a3;
  id v16 = a7;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  id v17 = v16;
  sub_10003A184();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_100174DD8(unsigned __int8 *a1, char a2, void *a3, uint64_t (*a4)(void, void), uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v13 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v13 - 8);
  int v14 = *a1;
  if (v14 == 1 && (a2 & 1) == 0)
  {
    if (qword_10022C5A8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v56 = (void *)type metadata accessor for ServerDataCacheService();
    Swift::String v54 = a3;
    id v28 = a3;
    id v29 = (id)AMSLogKey();
    if (v29)
    {
      uint64_t v30 = v29;
      uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v33 = v32;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v34._uint64_t countAndFlagsBits = 0;
      v34._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v34);
      sub_100049788(&v54, (uint64_t)v56);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v51 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v51, &qword_10022F490);
      v36._uint64_t countAndFlagsBits = 5972026;
      v36._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v36);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v51 = v31;
      uint64_t v52 = v33;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v51, &qword_10022F490);
      v37._uint64_t countAndFlagsBits = 93;
      v37._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v37);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v43._uint64_t countAndFlagsBits = 0;
      v43._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v43);
      sub_100049788(&v54, (uint64_t)v56);
      uint64_t v44 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v51 = v44;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v51, &qword_10022F490);
      v45._uint64_t countAndFlagsBits = 58;
      v45._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v45);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v54);
    Swift::String v54 = 0;
    unint64_t v55 = 0xE000000000000000;
    _StringGuts.grow(_:)(62);
    v46._uint64_t countAndFlagsBits = 0xD000000000000028;
    v46._object = (void *)0x80000001001D6EE0;
    String.append(_:)(v46);
    v47._uint64_t countAndFlagsBits = a6;
    v47._object = a7;
    String.append(_:)(v47);
    v48._object = (void *)0x80000001001D6F10;
    v48._uint64_t countAndFlagsBits = 0xD000000000000014;
    String.append(_:)(v48);
    uint64_t v56 = &type metadata for String;
    static LogMessage.safe(_:)();
    sub_10002CBB4((uint64_t)&v54, &qword_10022F490);
    uint64_t v49 = static os_log_type_t.info.getter();
    sub_10004841C(v49);
    swift_bridgeObjectRelease();
    uint64_t v16 = 0;
  }
  else
  {
    uint64_t v16 = *((void *)a1 + 1);
    if (qword_10022C5A8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v56 = (void *)type metadata accessor for ServerDataCacheService();
    Swift::String v54 = a3;
    id v17 = a3;
    id v18 = (id)AMSLogKey();
    if (v18)
    {
      uint64_t v19 = v18;
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v21 = a4;
      uint64_t v23 = v22;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v24._uint64_t countAndFlagsBits = 0;
      v24._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v24);
      sub_100049788(&v54, (uint64_t)v56);
      uint64_t v25 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v51 = v25;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v51, &qword_10022F490);
      v26._uint64_t countAndFlagsBits = 5972026;
      v26._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v51 = v20;
      uint64_t v52 = v23;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v51, &qword_10022F490);
      v27._uint64_t countAndFlagsBits = 93;
      v27._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      LogMessage.init(stringInterpolation:)();
      a4 = v21;
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v38._uint64_t countAndFlagsBits = 0;
      v38._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v38);
      sub_100049788(&v54, (uint64_t)v56);
      uint64_t v39 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v51 = v39;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v51, &qword_10022F490);
      v40._uint64_t countAndFlagsBits = 58;
      v40._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v40);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v54);
    Swift::String v54 = 0;
    unint64_t v55 = 0xE000000000000000;
    _StringGuts.grow(_:)(45);
    v41._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
    v41._object = (void *)0x80000001001D6EB0;
    String.append(_:)(v41);
    LOBYTE(v51) = v14;
    uint64_t v52 = v16;
    sub_100043478(&qword_100232EE8);
    _print_unlocked<A, B>(_:_:)();
    uint64_t v56 = &type metadata for String;
    static LogMessage.safe(_:)();
    sub_10002CBB4((uint64_t)&v54, &qword_10022F490);
    uint64_t v42 = static os_log_type_t.info.getter();
    sub_10004841C(v42);
    swift_bridgeObjectRelease();
  }
  return a4(v16, 0);
}

uint64_t sub_1001754A4(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13 = a9;
  int v14 = *a1;
  int v15 = 1;
  uint64_t v16 = (uint64_t *)*((void *)a1 + 1);
  switch(a2)
  {
    case 0:
      int v15 = v14 ^ 1;
      goto LABEL_9;
    case 1:
      if ((v14 & 1) == 0) {
        goto LABEL_9;
      }
      id v17 = 0;
      int v15 = 0;
      break;
    case 2:
    case 3:
      if ((v14 & 1) == 0) {
        goto LABEL_9;
      }
      id v17 = 0;
      int v15 = 2;
      break;
    case 4:
      goto LABEL_9;
    case 5:
      if (v14)
      {
        id v17 = 0;
      }
      else
      {
LABEL_9:
        int v25 = v15;
        uint64_t v18 = a8;
        uint64_t v19 = a7;
        uint64_t v20 = a6;
        Swift::String v26 = v16;
        id v21 = a5;
        uint64_t v22 = a4;
        uint64_t v23 = a3;
        swift_bridgeObjectRetain();
        a3 = v23;
        a4 = v22;
        int v15 = v25;
        a5 = v21;
        id v17 = v26;
        uint64_t v13 = a9;
        a6 = v20;
        a7 = v19;
        a8 = v18;
      }
      break;
    default:
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      JUMPOUT(0x100175620);
  }
  sub_100174960(v17, v15, a3, a4, a5, a6, a7, a8, v13, a10, a11, a12, a13);
  return sub_100019190((uint64_t)v17, v15);
}

void sub_100175638(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, void (*a6)(void, id), uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v20 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v20 - 8);
  id v21 = (uint64_t *)sub_100172754(a1, (uint64_t)_swiftEmptyArrayStorage, a2);
  if ((_BYTE)v22 == 0xFF)
  {
    uint64_t v44 = a1;
    if (qword_10022C5A8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v49 = (void *)type metadata accessor for ServerDataCacheService();
    v48[0] = a3;
    id v25 = a3;
    id v26 = (id)AMSLogKey();
    if (v26)
    {
      Swift::String v27 = v26;
      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v30 = v29;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v31._uint64_t countAndFlagsBits = 0;
      v31._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v31);
      sub_100049788(v48, (uint64_t)v49);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v46[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)v46, &qword_10022F490);
      v33._uint64_t countAndFlagsBits = 5972026;
      v33._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v33);
      uint64_t MetatypeMetadata = &type metadata for String;
      v46[0] = v28;
      v46[1] = v30;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)v46, &qword_10022F490);
      v34._uint64_t countAndFlagsBits = 93;
      v34._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v34);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v35._uint64_t countAndFlagsBits = 0;
      v35._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v35);
      sub_100049788(v48, (uint64_t)v49);
      uint64_t v36 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v46[0] = v36;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)v46, &qword_10022F490);
      v37._uint64_t countAndFlagsBits = 58;
      v37._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v37);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v48);
    v48[0] = 0;
    v48[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(53);
    v38._object = (void *)0x80000001001D6D90;
    v38._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
    String.append(_:)(v38);
    v39._object = a5;
    v39._uint64_t countAndFlagsBits = a4;
    String.append(_:)(v39);
    v40._uint64_t countAndFlagsBits = 8250;
    v40._object = (void *)0xE200000000000000;
    String.append(_:)(v40);
    v46[0] = v44;
    sub_100043478((uint64_t *)&unk_100233150);
    _print_unlocked<A, B>(_:_:)();
    uint64_t v49 = &type metadata for String;
    static LogMessage.safe(_:)();
    sub_10002CBB4((uint64_t)v48, &qword_10022F490);
    uint64_t v41 = static os_log_type_t.error.getter();
    sub_10004841C(v41);
    swift_bridgeObjectRelease();
    swift_getErrorValue();
    id v42 = sub_1000BED94(v45);
    a6(0, v42);
  }
  else
  {
    uint64_t v23 = (uint64_t)v21;
    unsigned __int8 v24 = v22;
    sub_100174960(v21, v22, (uint64_t)a6, a7, a3, a8, a9, a4, (uint64_t)a5, a10, a11, a12, a13);
    sub_10017A360(v23, v24);
  }
}

void sub_100175C08(objc_class *a1, uint64_t a2, uint64_t a3)
{
  Class isa = a1;
  if (a1)
  {
    sub_100043478(&qword_10022D6F0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
  }
  if (a2) {
    uint64_t v6 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = (id)v6;
  (*(void (**)(uint64_t, Class))(a3 + 16))(a3, isa);
}

uint64_t sub_100175CA8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  HIDWORD(v29) = a2;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = a4;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a5;
  *(void *)(v17 + 24) = a6;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a5;
  *(void *)(v18 + 24) = a6;
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = a5;
  void v19[3] = a6;
  void v19[4] = a7;
  v19[5] = a8;
  v19[6] = a9;
  v19[7] = a3;
  v19[8] = a4;
  id v20 = a5;
  id v21 = a6;
  id v22 = v20;
  id v23 = v21;
  swift_retain_n();
  id v24 = v22;
  id v25 = v23;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000187A0(a1, HIDWORD(v29), (uint64_t)sub_100018FFC, v16, (uint64_t)sub_10017AE30, v17, (uint64_t)sub_10017AE68, v18, (uint64_t)sub_10017AEE4, (uint64_t)v19, (uint64_t)&qword_10022D6F0, (uint64_t)&unk_100216540, (uint64_t)&unk_100216568, (uint64_t)sub_10017B12C, (uint64_t)sub_10017B0E4, (uint64_t)&unk_100216590, (uint64_t)sub_10017B098, v27, a9,
    a1,
    v29,
    a10,
    v30,
    v31,
    v32,
    v33,
    v34);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_100175ED8(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100043478(&qword_10022D340);
  uint64_t v9 = sub_1000208F0(v8);
  __chkstk_darwin(v9);
  sub_10004277C();
  uint64_t v10 = type metadata accessor for TaskPriority();
  sub_10002DAB4(v10);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = 0;
  void v11[3] = 0;
  v11[4] = a1;
  v11[5] = a2;
  id v12 = a1;
  id v13 = a2;
  sub_10016D650(v4, a4, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_100175F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_100175FAC, 0, 0);
}

uint64_t sub_100175FAC()
{
  sub_100020958();
  *(void *)(v0 + 32) = sub_10016E260();
  sub_1001A9D4C();
  *(void *)(v0 + 40) = v1;
  sub_100043FD8();
  return _swift_task_switch(v2, v3, v4);
}

void sub_100176024(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1001A9D4C();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  void v13[4] = a1;
  v13[5] = a2;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  void v13[2] = sub_10016D7B4;
  v13[3] = a6;
  id v12 = _Block_copy(v13);
  swift_retain();
  swift_release();
  [a3 updateCacheForAccountDSID:a4 withCacheTypeIDs:isa completion:v12];
  _Block_release(v12);
}

uint64_t sub_100176128(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v12 - 8);
  if (qword_10022C5A8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  Swift::String v47 = (void *)type metadata accessor for ServerDataCacheService();
  unint64_t v45 = (unint64_t)a1;
  id v42 = a1;
  id v13 = (id)AMSLogKey();
  if (v13)
  {
    int v14 = v13;
    uint64_t v15 = a5;
    uint64_t v16 = a7;
    uint64_t v17 = a6;
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v19;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v21._uint64_t countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    sub_100049788(&v45, (uint64_t)v47);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v43[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v43, &qword_10022F490);
    v23._uint64_t countAndFlagsBits = 5972026;
    v23._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    uint64_t MetatypeMetadata = &type metadata for String;
    v43[0] = v18;
    v43[1] = v20;
    a6 = v17;
    a7 = v16;
    a5 = v15;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v43, &qword_10022F490);
    v24._uint64_t countAndFlagsBits = 93;
    v24._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v25._uint64_t countAndFlagsBits = 0;
    v25._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    sub_100049788(&v45, (uint64_t)v47);
    uint64_t v26 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v43[0] = v26;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)v43, &qword_10022F490);
    v27._uint64_t countAndFlagsBits = 58;
    v27._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v45);
  unint64_t v45 = 0;
  unint64_t v46 = 0xE000000000000000;
  _StringGuts.grow(_:)(36);
  swift_bridgeObjectRelease();
  unint64_t v45 = 0xD00000000000001DLL;
  unint64_t v46 = 0x80000001001D73E0;
  id v28 = [a2 description];
  uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v31 = v30;

  v32._uint64_t countAndFlagsBits = v29;
  v32._object = v31;
  String.append(_:)(v32);
  swift_bridgeObjectRelease();
  v33._uint64_t countAndFlagsBits = 2108704;
  v33._object = (void *)0xE300000000000000;
  String.append(_:)(v33);
  v34._uint64_t countAndFlagsBits = Set.description.getter();
  String.append(_:)(v34);
  swift_bridgeObjectRelease();
  Swift::String v47 = &type metadata for String;
  static LogMessage.safe(_:)();
  sub_10002CBB4((uint64_t)&v45, &qword_10022F490);
  uint64_t v35 = static os_log_type_t.info.getter();
  sub_10004841C(v35);
  swift_bridgeObjectRelease();
  sub_10010E658();
  uint64_t v36 = (void *)swift_allocObject();
  v36[2] = a5;
  void v36[3] = v42;
  v36[4] = a6;
  v36[5] = a7;
  v36[6] = a3;
  Swift::String v37 = (void *)swift_allocObject();
  void v37[2] = v42;
  void v37[3] = a6;
  v37[4] = a7;
  v37[5] = a3;
  id v38 = v42;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  id v39 = v38;
  sub_10003A184();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1001765F8(unsigned __int8 *a1, char a2, void *a3, uint64_t (*a4)(void, void))
{
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v8 - 8);
  int v9 = *a1;
  if (v9 == 1 && (a2 & 1) == 0)
  {
    if (qword_10022C5A8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v51 = (void *)type metadata accessor for ServerDataCacheService();
    uint64_t v49 = a3;
    id v23 = a3;
    id v24 = (id)AMSLogKey();
    if (v24)
    {
      Swift::String v25 = v24;
      uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v28 = v27;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v29._uint64_t countAndFlagsBits = 0;
      v29._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v29);
      sub_100049788(&v49, (uint64_t)v51);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v46 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v46, &qword_10022F490);
      v31._uint64_t countAndFlagsBits = 5972026;
      v31._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v31);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v46 = v26;
      uint64_t v47 = v28;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v46, &qword_10022F490);
      v32._uint64_t countAndFlagsBits = 93;
      v32._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v38._uint64_t countAndFlagsBits = 0;
      v38._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v38);
      sub_100049788(&v49, (uint64_t)v51);
      uint64_t v39 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v46 = v39;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v46, &qword_10022F490);
      v40._uint64_t countAndFlagsBits = 58;
      v40._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v40);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v49);
    uint64_t v49 = 0;
    unint64_t v50 = 0xE000000000000000;
    _StringGuts.grow(_:)(58);
    v41._uint64_t countAndFlagsBits = 0xD000000000000024;
    v41._object = (void *)0x80000001001D7460;
    String.append(_:)(v41);
    v42._uint64_t countAndFlagsBits = Set.description.getter();
    String.append(_:)(v42);
    swift_bridgeObjectRelease();
    v43._object = (void *)0x80000001001D6F10;
    v43._uint64_t countAndFlagsBits = 0xD000000000000014;
    String.append(_:)(v43);
    uint64_t v51 = &type metadata for String;
    static LogMessage.safe(_:)();
    sub_10002CBB4((uint64_t)&v49, &qword_10022F490);
    uint64_t v44 = static os_log_type_t.info.getter();
    sub_10004841C(v44);
    swift_bridgeObjectRelease();
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v11 = *((void *)a1 + 1);
    if (qword_10022C5A8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v51 = (void *)type metadata accessor for ServerDataCacheService();
    uint64_t v49 = a3;
    id v12 = a3;
    id v13 = (id)AMSLogKey();
    if (v13)
    {
      int v14 = v13;
      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v16 = a4;
      uint64_t v18 = v17;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v19._uint64_t countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v19);
      sub_100049788(&v49, (uint64_t)v51);
      uint64_t v20 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v46 = v20;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v46, &qword_10022F490);
      v21._uint64_t countAndFlagsBits = 5972026;
      v21._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v21);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v46 = v15;
      uint64_t v47 = v18;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v46, &qword_10022F490);
      v22._uint64_t countAndFlagsBits = 93;
      v22._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v22);
      LogMessage.init(stringInterpolation:)();
      a4 = v16;
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v33._uint64_t countAndFlagsBits = 0;
      v33._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v33);
      sub_100049788(&v49, (uint64_t)v51);
      uint64_t v34 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v46 = v34;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v46, &qword_10022F490);
      v35._uint64_t countAndFlagsBits = 58;
      v35._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v35);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v49);
    uint64_t v49 = 0;
    unint64_t v50 = 0xE000000000000000;
    _StringGuts.grow(_:)(42);
    v36._uint64_t countAndFlagsBits = 0xD000000000000028;
    v36._object = (void *)0x80000001001D7430;
    String.append(_:)(v36);
    LOBYTE(v46) = v9;
    uint64_t v47 = v11;
    sub_100043478(&qword_100232F00);
    _print_unlocked<A, B>(_:_:)();
    uint64_t v51 = &type metadata for String;
    static LogMessage.safe(_:)();
    sub_10002CBB4((uint64_t)&v49, &qword_10022F490);
    uint64_t v37 = static os_log_type_t.info.getter();
    sub_10004841C(v37);
    swift_bridgeObjectRelease();
  }
  return a4(v11, 0);
}

void sub_100176CC8(uint64_t a1, void *a2, void (*a3)(void, void))
{
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v6 - 8);
  uint64_t v49 = a1;
  swift_errorRetain();
  sub_100043478((uint64_t *)&unk_100233150);
  if (swift_dynamicCast() && v48 == 2)
  {
    if (qword_10022C5A8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v47 = (void *)type metadata accessor for ServerDataCacheService();
    unint64_t v45 = (unint64_t)a2;
    id v7 = a2;
    id v8 = (id)AMSLogKey();
    if (v8)
    {
      int v9 = v8;
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v11 = a3;
      uint64_t v13 = v12;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v14._uint64_t countAndFlagsBits = 0;
      v14._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v14);
      sub_100049788(&v45, (uint64_t)v47);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v42 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v42, &qword_10022F490);
      v16._uint64_t countAndFlagsBits = 5972026;
      v16._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v16);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v42 = v10;
      uint64_t v43 = v13;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v42, &qword_10022F490);
      v17._uint64_t countAndFlagsBits = 93;
      v17._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v17);
      LogMessage.init(stringInterpolation:)();
      a3 = v11;
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v36._uint64_t countAndFlagsBits = 0;
      v36._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v36);
      sub_100049788(&v45, (uint64_t)v47);
      uint64_t v37 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v42 = v37;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v42, &qword_10022F490);
      v38._uint64_t countAndFlagsBits = 58;
      v38._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v38);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v45);
    uint64_t v47 = &type metadata for String;
    unint64_t v45 = 0xD000000000000038;
    unint64_t v46 = 0x80000001001D6E70;
    static LogMessage.safe(_:)();
    sub_10002CBB4((uint64_t)&v45, &qword_10022F490);
    uint64_t v39 = static os_log_type_t.info.getter();
    sub_10004841C(v39);
    swift_bridgeObjectRelease();
    a3(_swiftEmptyDictionarySingleton, 0);
    swift_errorRelease();
  }
  else
  {
    Swift::String v40 = (void (*)(void, id))a3;
    swift_errorRelease();
    if (qword_10022C5A8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v47 = (void *)type metadata accessor for ServerDataCacheService();
    unint64_t v45 = (unint64_t)a2;
    id v18 = a2;
    id v19 = (id)AMSLogKey();
    if (v19)
    {
      uint64_t v20 = v19;
      uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v23 = v22;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v24._uint64_t countAndFlagsBits = 0;
      v24._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v24);
      sub_100049788(&v45, (uint64_t)v47);
      uint64_t v25 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v42 = v25;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v42, &qword_10022F490);
      v26._uint64_t countAndFlagsBits = 5972026;
      v26._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v42 = v21;
      uint64_t v43 = v23;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v42, &qword_10022F490);
      v27._uint64_t countAndFlagsBits = 93;
      v27._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v28._uint64_t countAndFlagsBits = 0;
      v28._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      sub_100049788(&v45, (uint64_t)v47);
      uint64_t v29 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v42 = v29;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)&v42, &qword_10022F490);
      v30._uint64_t countAndFlagsBits = 58;
      v30._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v30);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v45);
    unint64_t v45 = 0;
    unint64_t v46 = 0xE000000000000000;
    _StringGuts.grow(_:)(53);
    v31._object = (void *)0x80000001001D7400;
    v31._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
    String.append(_:)(v31);
    v32._uint64_t countAndFlagsBits = Set.description.getter();
    String.append(_:)(v32);
    swift_bridgeObjectRelease();
    v33._uint64_t countAndFlagsBits = 8250;
    v33._object = (void *)0xE200000000000000;
    String.append(_:)(v33);
    uint64_t v42 = a1;
    _print_unlocked<A, B>(_:_:)();
    uint64_t v47 = &type metadata for String;
    static LogMessage.safe(_:)();
    sub_10002CBB4((uint64_t)&v45, &qword_10022F490);
    uint64_t v34 = static os_log_type_t.error.getter();
    sub_10004841C(v34);
    swift_bridgeObjectRelease();
    swift_getErrorValue();
    id v35 = sub_1000BED94(v41);
    v40(0, v35);
  }
}

uint64_t sub_1001773C0(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v16 = *a1;
  int v17 = 1;
  uint64_t v18 = *((void *)a1 + 1);
  switch(a2)
  {
    case 0:
      int v17 = v16 ^ 1;
      goto LABEL_9;
    case 1:
      if ((v16 & 1) == 0) {
        goto LABEL_9;
      }
      uint64_t v18 = 0;
      int v17 = 0;
      break;
    case 2:
    case 3:
      if ((v16 & 1) == 0) {
        goto LABEL_9;
      }
      uint64_t v18 = 0;
      int v17 = 2;
      break;
    case 4:
      goto LABEL_9;
    case 5:
      if (v16) {
        uint64_t v18 = 0;
      }
      else {
LABEL_9:
      }
        swift_bridgeObjectRetain();
      break;
    default:
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      JUMPOUT(0x100177520);
  }
  sub_100175CA8(v18, v17, a3, a4, a5, a6, a7, a8, a9, a10);
  return sub_100019190(v18, v17);
}

void sub_100177538(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v16 - 8);
  uint64_t v17 = sub_100172754(a1, (uint64_t)_swiftEmptyDictionarySingleton, a2);
  if ((_BYTE)v18 == 0xFF)
  {
    uint64_t v42 = (void (*)(void, id))a5;
    if (qword_10022C5A8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v47 = (void *)type metadata accessor for ServerDataCacheService();
    v46[0] = a3;
    id v21 = a3;
    id v22 = (id)AMSLogKey();
    uint64_t v23 = a1;
    if (v22)
    {
      Swift::String v24 = v22;
      uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v27 = v26;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v28._uint64_t countAndFlagsBits = 0;
      v28._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      sub_100049788(v46, (uint64_t)v47);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v44[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)v44, &qword_10022F490);
      v30._uint64_t countAndFlagsBits = 5972026;
      v30._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v30);
      uint64_t MetatypeMetadata = &type metadata for String;
      v44[0] = v25;
      v44[1] = v27;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)v44, &qword_10022F490);
      v31._uint64_t countAndFlagsBits = 93;
      v31._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v31);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v32._uint64_t countAndFlagsBits = 0;
      v32._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      sub_100049788(v46, (uint64_t)v47);
      uint64_t v33 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v44[0] = v33;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)v44, &qword_10022F490);
      v34._uint64_t countAndFlagsBits = 58;
      v34._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v34);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v46);
    v46[0] = 0;
    v46[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(51);
    v35._object = (void *)0x80000001001D73B0;
    v35._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
    String.append(_:)(v35);
    v36._uint64_t countAndFlagsBits = Set.description.getter();
    String.append(_:)(v36);
    swift_bridgeObjectRelease();
    v37._uint64_t countAndFlagsBits = 8250;
    v37._object = (void *)0xE200000000000000;
    String.append(_:)(v37);
    v44[0] = v23;
    sub_100043478((uint64_t *)&unk_100233150);
    _print_unlocked<A, B>(_:_:)();
    uint64_t v47 = &type metadata for String;
    static LogMessage.safe(_:)();
    sub_10002CBB4((uint64_t)v46, &qword_10022F490);
    uint64_t v38 = static os_log_type_t.error.getter();
    sub_10004841C(v38);
    swift_bridgeObjectRelease();
    swift_getErrorValue();
    id v39 = sub_1000BED94(v43);
    v42(0, v39);
  }
  else
  {
    uint64_t v19 = v17;
    unsigned __int8 v20 = v18;
    sub_100175CA8(v17, v18, a5, a6, a3, a7, a4, a8, a9, a10);
    sub_10017A360(v19, v20);
  }
}

void sub_1001779D4(void **a1, void *a2, void (**a3)(void, void, void))
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a3;
  _Block_copy(a3);
  if (qword_10022C5A8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v17 = &type metadata for String;
  aBlock = (void **)0xD00000000000001CLL;
  unint64_t v15 = 0x80000001001D6C60;
  static LogMessage.safe(_:)();
  sub_10002CBB4((uint64_t)&aBlock, &qword_10022F490);
  uint64_t v17 = &type metadata for String;
  aBlock = (void **)0xD00000000000001CLL;
  unint64_t v15 = 0x80000001001D6C80;
  static LogMessage.safe(_:)();
  sub_10002CBB4((uint64_t)&aBlock, &qword_10022F490);
  uint64_t v17 = (void *)sub_10004D510(0, (unint64_t *)&qword_10022D3D8);
  aBlock = a1;
  uint64_t v6 = a1;
  static LogMessage.sensitive(_:)();
  sub_10002CBB4((uint64_t)&aBlock, &qword_10022F490);
  uint64_t v7 = static os_log_type_t.info.getter();
  sub_10004841C(v7);
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, "ams_DSID");
  if (v8)
  {
    int v9 = v8;
    int v18 = sub_10017B094;
    uint64_t v19 = v5;
    aBlock = _NSConcreteStackBlock;
    unint64_t v15 = 1107296256;
    uint64_t v16 = sub_10016D7B4;
    uint64_t v17 = &unk_1002161C0;
    uint64_t v10 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    [a2 setUpCacheForAccountDSID:v9 completion:v10];
    _Block_release(v10);
    swift_release();
  }
  else
  {
    NSString v11 = String._bridgeToObjectiveC()();
    id v12 = (id)AMSError();

    int v9 = (void *)_convertErrorToNSError(_:)();
    ((void (**)(void, void, void *))a3)[2](a3, 0, v9);
    swift_release();
  }
  _Block_release(a3);
}

void sub_100177DA0()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  uint64_t v18 = v2;
  uint64_t v19 = v3;
  uint64_t v5 = v4;
  uint64_t v6 = sub_100043478(&qword_10022D340);
  uint64_t v7 = sub_1000208F0(v6);
  __chkstk_darwin(v7);
  int v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10022C5A8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v10 = type metadata accessor for LogMessage();
  sub_100044798(v10);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  id v21 = &type metadata for String;
  sub_100017E68(0xD000000000000027);
  static LogMessage.safe(_:)();
  sub_10002CBB4((uint64_t)v20, &qword_10022F490);
  id v21 = &type metadata for String;
  v20[0] = 0xD000000000000019;
  v20[1] = 0x80000001001D6BD0;
  static LogMessage.safe(_:)();
  sub_10002CBB4((uint64_t)v20, &qword_10022F490);
  id v21 = (void *)sub_10004D510(0, (unint64_t *)&qword_100231E00);
  v20[0] = v5;
  id v11 = v5;
  static LogMessage.sensitive(_:)();
  sub_10002CBB4((uint64_t)v20, &qword_10022F490);
  uint64_t v12 = static os_log_type_t.default.getter();
  sub_10004841C(v12);
  swift_bridgeObjectRelease();
  uint64_t v13 = type metadata accessor for TaskPriority();
  sub_10002DAB4(v13);
  Swift::String v14 = (void *)swift_allocObject();
  void v14[2] = 0;
  void v14[3] = 0;
  void v14[4] = v11;
  v14[5] = v1;
  uint64_t v15 = v19;
  v14[6] = v18;
  v14[7] = v15;
  id v16 = v11;
  id v17 = v1;
  swift_retain();
  sub_10016D650((uint64_t)v9, (uint64_t)&unk_100232ED8, (uint64_t)v14);
  swift_release();
  sub_100020FDC();
}

uint64_t sub_100177FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[56] = a6;
  v7[57] = a7;
  v7[54] = a4;
  v7[55] = a5;
  type metadata accessor for LogMessage.StringInterpolation();
  v7[58] = swift_task_alloc();
  return _swift_task_switch(sub_100178088, 0, 0);
}

uint64_t sub_100178088()
{
  sub_100041F70();
  if (qword_10022C538 != -1) {
    swift_once();
  }
  v0[59] = qword_100244158;
  if (qword_10022C518 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[54];
  v0[60] = qword_100244150;
  type metadata accessor for MercuryCacheDatabase();
  id v2 = v1;
  sub_1000363B4();
  v0[61] = v3;
  sub_10004D510(0, (unint64_t *)&qword_100232020);
  v0[62] = sub_100045068();
  type metadata accessor for MercuryCacheUpdateStateManager();
  v0[63] = sub_100042BF0();
  swift_defaultActor_initialize();
  sub_100036AA8((uint64_t)&_swiftEmptySetSingleton);
  v0[64] = sub_1000226E0();
  sub_10004D58C();
  return _swift_task_switch(v4, v5, v6);
}

#error "100178238: call analysis failed (funcsize=62)"

uint64_t sub_1001782D8()
{
  sub_100020958();
  sub_1000447B0();
  sub_100044DDC();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_100020EBC();
  *uint64_t v5 = v4;
  *(void *)(v6 + 536) = v0;
  swift_task_dealloc();
  sub_100043E7C();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_1001783B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24)
{
  sub_100049B90();
  a23 = v26;
  a24 = v27;
  a22 = v24;
  if (qword_10022C5A8 != -1) {
    swift_once();
  }
  Swift::String v28 = (void *)v24[55];
  uint64_t v29 = qword_100232E78;
  sub_100043478(&qword_10022E560);
  uint64_t v30 = sub_10002D318();
  sub_100044798(v30);
  uint64_t v31 = sub_100049E94();
  *(_OWORD *)(v31 + 16) = xmmword_1001C3120;
  uint64_t v58 = v31 + v25;
  v24[45] = type metadata accessor for ServerDataCacheService();
  v24[42] = v28;
  id v32 = v28;
  id v33 = (id)AMSLogKey();
  if (v33)
  {
    Swift::String v34 = v33;
    a9 = v29;
    uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v37 = v36;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    uint64_t v38 = sub_10002106C(v24 + 42);
    v24[21] = swift_getMetatypeMetadata();
    v24[18] = v38;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)(v24 + 18), &qword_10022F490);
    sub_100020E44();
    v24[33] = &type metadata for String;
    v24[30] = v35;
    v24[31] = v37;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)(v24 + 30), &qword_10022F490);
    sub_1000208D8();
    sub_100046ED8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    uint64_t v39 = sub_10002106C(v24 + 42);
    v24[29] = swift_getMetatypeMetadata();
    v24[26] = v39;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4((uint64_t)(v24 + 26), &qword_10022F490);
    sub_100020E94();
    sub_100046ED8();
  }
  Swift::String v40 = (void (*)(uint64_t, void))v24[56];
  uint64_t v41 = (void *)v24[54];
  sub_10004377C((uint64_t)(v24 + 42));
  sub_100047730();
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease();
  sub_10017B148();
  id v42 = [v41 description];
  uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v45 = v44;

  v46._uint64_t countAndFlagsBits = v43;
  v46._object = v45;
  String.append(_:)(v46);
  swift_bridgeObjectRelease();
  uint64_t v47 = a12;
  v24[25] = &type metadata for String;
  sub_10004FD14(v47);
  static LogMessage.sensitive(_:)();
  sub_10002CBB4((uint64_t)&a12, &qword_10022F490);
  uint64_t v48 = static os_log_type_t.info.getter();
  sub_10004841C(v48);
  swift_bridgeObjectRelease();
  v40(1, 0);
  swift_release();
  swift_task_dealloc();
  sub_100040954();
  sub_1000212F0();
  return v50(v49, v50, v51, v52, v53, v54, v55, v56, a9, v58, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_10017868C()
{
  uint64_t v25 = v0 + 2;
  if (qword_10022C5A8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v4 = sub_10002D318();
  sub_100044798(v4);
  uint64_t v5 = sub_10002D330();
  *(_OWORD *)(v5 + 16) = xmmword_1001C3130;
  uint64_t v26 = (void *)v5;
  uint64_t v6 = type metadata accessor for ServerDataCacheService();
  sub_100036B14(v6);
  if ((id)AMSLogKey())
  {
    uint64_t v7 = sub_10017B174();
    uint64_t v9 = v8;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    uint64_t v10 = (uint64_t)(v0 + 2);
    sub_100044FF4(v25);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_1000533D4(MetatypeMetadata);
    sub_10002CBB4(v2, &qword_10022F490);
    sub_100020E44();
    v0[41] = (uint64_t)&type metadata for String;
    v0[38] = v7;
    v0[39] = v9;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CBB4(v1, &qword_10022F490);
    sub_1000208D8();
    sub_1000206E8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    uint64_t v10 = (uint64_t)(v0 + 2);
    sub_100044FF4(v25);
    uint64_t v12 = swift_getMetatypeMetadata();
    sub_10017B158(v12);
    sub_10002CBB4((uint64_t)(v0 + 6), &qword_10022F490);
    sub_100020E94();
    sub_1000206E8();
  }
  uint64_t v13 = (void *)v0[54];
  sub_10004377C(v10);
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v13, "description", v0 + 53);
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v17 = v16;

  v18._uint64_t countAndFlagsBits = v15;
  v18._object = v17;
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  sub_100050E0C(0xD000000000000019);
  static LogMessage.sensitive(_:)();
  sub_10017B23C();
  sub_10017B21C();
  v0[17] = v0[47];
  sub_10003BAA4(v0 + 14);
  sub_1000456E0();
  sub_100018FE8();
  v19();
  static LogMessage.safe(_:)();
  sub_10002CBB4((uint64_t)(v0 + 14), &qword_10022F490);
  uint64_t v20 = static os_log_type_t.error.getter();
  sub_10004841C(v20);
  swift_bridgeObjectRelease();
  swift_getErrorValue();
  sub_1000BED94(v0[50]);
  uint64_t v21 = sub_1000307E4();
  v22(v21);
  swift_release();

  swift_errorRelease();
  swift_task_dealloc();
  sub_100040954();
  return v23();
}

void sub_100178AB0()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  uint64_t v14 = v3;
  uint64_t v5 = v4;
  uint64_t v6 = sub_100043478(&qword_10022D340);
  uint64_t v7 = sub_1000208F0(v6);
  __chkstk_darwin(v7);
  sub_100022558();
  if (qword_10022C5A8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v8 = type metadata accessor for LogMessage();
  sub_100044798(v8);
  sub_10003BDEC();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  id v16 = &type metadata for String;
  sub_100017E68(0xD000000000000029);
  static LogMessage.safe(_:)();
  sub_10002CBB4((uint64_t)v15, &qword_10022F490);
  id v16 = &type metadata for String;
  v15[0] = 0xD00000000000001BLL;
  v15[1] = 0x80000001001D6B80;
  static LogMessage.safe(_:)();
  sub_10002CBB4((uint64_t)v15, &qword_10022F490);
  id v16 = (void *)sub_10004D510(0, (unint64_t *)&qword_100231E00);
  v15[0] = v5;
  id v9 = v5;
  static LogMessage.sensitive(_:)();
  sub_10002CBB4((uint64_t)v15, &qword_10022F490);
  uint64_t v10 = static os_log_type_t.default.getter();
  sub_10004841C(v10);
  swift_bridgeObjectRelease();
  uint64_t v11 = type metadata accessor for TaskPriority();
  sub_100021AC0(v0, 1, 1, v11);
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = v9;
  v12[5] = v14;
  void v12[6] = v2;
  id v13 = v9;
  swift_retain();
  sub_10016D650(v0, (uint64_t)&unk_100232EB8, (uint64_t)v12);
  swift_release();
  sub_100020FDC();
}

uint64_t sub_100178CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[22] = a5;
  v6[23] = a6;
  v6[21] = a4;
  return _swift_task_switch(sub_100178D1C, 0, 0);
}

uint64_t sub_100178D1C()
{
  sub_100046D0C();
  if (qword_10022C538 != -1) {
    swift_once();
  }
  if (qword_10022C518 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[21];
  uint64_t v2 = qword_100244150;
  uint64_t v3 = sub_10017AB60(&qword_100232EC8, (void (*)(uint64_t))type metadata accessor for MercuryCacheMetadataStore);
  uint64_t v4 = type metadata accessor for MercuryCacheDatabase();
  id v5 = v1;
  sub_1000363B4();
  v0[5] = v4;
  v0[6] = &off_100213AD0;
  v0[2] = v6;
  sub_10004D510(0, (unint64_t *)&qword_100232020);
  id v7 = sub_100045068();
  v0[24] = v7;
  uint64_t updated = type metadata accessor for MercuryCacheUpdateStateManager();
  uint64_t v9 = sub_100042BF0();
  swift_defaultActor_initialize();
  *(void *)(v9 + 112) = &_swiftEmptySetSingleton;
  v0[10] = updated;
  v0[11] = &off_100214708;
  v0[7] = v9;
  uint64_t v10 = type metadata accessor for DynamicActivityTaskScheduler();
  uint64_t v11 = sub_1000226E0();
  v0[15] = v10;
  v0[16] = &off_10020F2B0;
  v0[12] = v11;
  uint64_t v12 = (void *)swift_task_alloc();
  v0[25] = v12;
  void *v12 = v0;
  v12[1] = sub_100178F5C;
  uint64_t v13 = v0[21];
  return sub_100125974(v13, v2, v3, (uint64_t)(v0 + 2), (uint64_t)v7, (uint64_t)&type metadata for AMPAccountFinder, (uint64_t)&off_10020D790, (uint64_t)&type metadata for MercuryCacheDataFetcher);
}

uint64_t sub_100178F5C()
{
  sub_10004A41C();
  sub_1000447B0();
  uint64_t v3 = v2;
  sub_100044DDC();
  *uint64_t v4 = v3;
  uint64_t v6 = *(void **)(v5 + 192);
  uint64_t v7 = *v1;
  sub_100020EBC();
  void *v8 = v7;
  *(void *)(v3 + 208) = v0;
  swift_task_dealloc();

  sub_10004377C(v3 + 96);
  sub_10004377C(v3 + 56);
  if (!v0) {
    sub_10004377C(v3 + 16);
  }
  sub_100043E7C();
  return _swift_task_switch(v9, v10, v11);
}

uint64_t sub_100179080()
{
  sub_100020958();
  (*(void (**)(BOOL, void))(v0 + 176))(*(void *)(v0 + 208) == 0, 0);
  swift_errorRelease();
  swift_errorRelease();
  sub_100040954();
  return v1();
}

uint64_t sub_1001790FC()
{
  sub_100041F70();
  sub_10004377C(v0 + 16);
  swift_getErrorValue();
  uint64_t v1 = *(void *)(v0 + 144);
  swift_errorRetain();
  id v2 = sub_1000BED94(v1);
  swift_errorRelease();
  (*(void (**)(BOOL, id))(v0 + 176))(*(void *)(v0 + 208) == 0, v2);
  swift_errorRelease();
  swift_errorRelease();
  sub_100040954();
  return v3();
}

uint64_t sub_10017926C()
{
  _Block_release(*(const void **)(v0 + 16));
  uint64_t v1 = sub_100036260();
  return _swift_deallocObject(v1, v2, v3);
}

void sub_10017929C(char a1, uint64_t a2)
{
  sub_1001704F0(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1001792A4()
{
  swift_unknownObjectRelease();

  swift_release();
  uint64_t v1 = sub_10004274C();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_1001792E4()
{
  sub_10004A41C();
  uint64_t v2 = v1;
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)sub_10004DEC4(v8);
  void *v9 = v10;
  v9[1] = sub_100052880;
  return sub_100178CF8(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1001793A0()
{
  sub_100041F70();
  uint64_t v1 = v0;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)sub_10004DEC4(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_10001CAF0;
  return v7(v1);
}

uint64_t sub_100179470()
{
  swift_unknownObjectRelease();

  swift_release();
  uint64_t v1 = sub_100021B30();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_1001794B8()
{
  sub_100046D0C();
  sub_100017EC8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10004DEC4(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100045A38;
  uint64_t v3 = sub_10004A778();
  return sub_100177FF4(v3, v4, v5, v6, v7, v8, v9);
}

void sub_100179558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  sub_1000209F4();
  uint64_t v75 = v23;
  uint64_t v76 = v24;
  uint64_t v26 = v25;
  uint64_t v73 = v27;
  uint64_t v74 = v28;
  uint64_t v30 = v29;
  uint64_t v72 = v31;
  id v33 = v32;
  uint64_t v34 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v35 = sub_1000208F0(v34);
  __chkstk_darwin(v35);
  sub_100020EAC();
  uint64_t v38 = v37 - v36;
  v84[3] = type metadata accessor for MercuryCacheDatabase();
  v84[4] = &off_100213AD0;
  v84[0] = v30;
  void v83[3] = type metadata accessor for MercuryCacheUpdateStateManager();
  v83[4] = &off_100214708;
  v83[0] = a21;
  void v82[3] = type metadata accessor for DynamicActivityTaskScheduler();
  v82[4] = &off_10020F2B0;
  v82[0] = a22;
  swift_beginAccess();
  uint64_t v39 = *(void *)(a23 + 112);
  swift_retain();
  swift_retain();
  swift_retain();
  id v40 = v33;
  swift_bridgeObjectRetain();
  uint64_t v41 = sub_100088B04(v40, v39);

  swift_bridgeObjectRelease();
  if (!v41)
  {
    v71[4] = v38;
    sub_100025334((uint64_t)v84, (uint64_t)v80);
    sub_100025334((uint64_t)v83, (uint64_t)v78);
    sub_100025334((uint64_t)v82, (uint64_t)v77);
    sub_10003660C((uint64_t)v80, updated);
    id v71[3] = v71;
    sub_1000448FC();
    __chkstk_darwin(v42);
    sub_100022558();
    sub_1000361B0();
    v43();
    sub_10003660C((uint64_t)v78, (uint64_t)MetatypeMetadata);
    v71[2] = v71;
    sub_1000448FC();
    __chkstk_darwin(v44);
    sub_100020EAC();
    uint64_t v47 = (uint64_t *)(v46 - v45);
    sub_1000361B0();
    v48();
    sub_10003660C((uint64_t)v77, v77[3]);
    v71[1] = v71;
    sub_1000448FC();
    __chkstk_darwin(v49);
    sub_100020EAC();
    uint64_t v52 = (uint64_t **)(v51 - v50);
    sub_1000361B0();
    v53();
    uint64_t v54 = MEMORY[0];
    uint64_t v55 = *v47;
    uint64_t v56 = *v52;
    id v57 = v40;
    uint64_t v58 = v72;
    swift_retain();
    uint64_t v59 = v73;
    swift_unknownObjectRetain();
    sub_100179B00((uint64_t)v57, v58, v54, v59, v74, v75, v26, v76, v55, v56);
    sub_10004377C((uint64_t)v77);
    sub_10004377C((uint64_t)v78);
    sub_10004377C((uint64_t)v80);
    swift_beginAccess();
    id v60 = v57;
    uint64_t v61 = swift_retain();
    sub_10008B9C0(v61, (uint64_t)v60);
    swift_endAccess();

    if (qword_10022C530 != -1) {
      swift_once();
    }
    uint64_t v76 = qword_1002310D0;
    sub_100043478(&qword_10022E560);
    uint64_t v62 = sub_10002D318();
    sub_100044798(v62);
    sub_10003BDEC();
    *(_OWORD *)(sub_10002D330() + 16) = xmmword_1001C3130;
    uint64_t updated = type metadata accessor for MercuryCacheUpdateCoordinatorProvider();
    v80[0] = a23;
    swift_retain();
    id v63 = (id)AMSLogKey();
    if (v63)
    {
      uint64_t v64 = v63;
      uint64_t v75 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v66 = v65;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      uint64_t v67 = sub_100040FF8(v80);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v78[0] = v67;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)v78, &qword_10022F490);
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      v78[0] = v75;
      v78[1] = v66;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)v78, &qword_10022F490);
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      uint64_t v68 = sub_100040FF8(v80);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v78[0] = v68;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CBB4((uint64_t)v78, &qword_10022F490);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v80);
    LogMessage.init(stringLiteral:)();
    uint64_t updated = sub_10004D510(0, (unint64_t *)&qword_100231E00);
    v80[0] = v60;
    id v69 = v60;
    static LogMessage.sensitive(_:)();
    sub_10002CBB4((uint64_t)v80, &qword_10022F490);
    uint64_t v70 = static os_log_type_t.info.getter();
    sub_10004841C(v70);
    swift_bridgeObjectRelease();
  }
  sub_10004377C((uint64_t)v84);
  sub_10004377C((uint64_t)v83);
  sub_10004377C((uint64_t)v82);
  sub_100020FDC();
}

void *sub_100179B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10)
{
  uint64_t v33 = a7;
  uint64_t v34 = a8;
  uint64_t v16 = *a10;
  uint64_t v42 = type metadata accessor for MercuryCacheDatabase();
  uint64_t v43 = &off_100213AD0;
  v41[0] = a3;
  uint64_t updated = type metadata accessor for MercuryCacheUpdateStateManager();
  id v40 = &off_100214708;
  v38[0] = a9;
  uint64_t v36 = v16;
  uint64_t v37 = &off_10020F2B0;
  v35[0] = a10;
  type metadata accessor for MercuryCacheUpdateCoordinator();
  id v17 = (void *)swift_allocObject();
  uint64_t v18 = sub_10003660C((uint64_t)v41, v42);
  __chkstk_darwin(v18);
  uint64_t v20 = (uint64_t *)((char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v21 + 16))(v20);
  uint64_t v22 = sub_10003660C((uint64_t)v38, updated);
  __chkstk_darwin(v22);
  uint64_t v24 = (uint64_t *)((char *)&v32 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v25 + 16))(v24);
  uint64_t v26 = sub_10003660C((uint64_t)v35, v36);
  __chkstk_darwin(v26);
  uint64_t v28 = (uint64_t *)((char *)&v32 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v29 + 16))(v28);
  uint64_t v30 = sub_100179E04(a1, a2, *v20, a4, a5, a6, v33, v34, *v24, *v28, v17);
  sub_10004377C((uint64_t)v35);
  sub_10004377C((uint64_t)v38);
  sub_10004377C((uint64_t)v41);
  return v30;
}

void *sub_100179E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  uint64_t v17 = sub_10017AB60(&qword_100232EC8, (void (*)(uint64_t))type metadata accessor for MercuryCacheMetadataStore);
  uint64_t v28 = type metadata accessor for MercuryCacheDatabase();
  uint64_t v29 = &off_100213AD0;
  *(void *)&long long v27 = a3;
  uint64_t updated = type metadata accessor for MercuryCacheUpdateStateManager();
  uint64_t v26 = &off_100214708;
  *(void *)&long long v24 = a9;
  uint64_t v22 = type metadata accessor for DynamicActivityTaskScheduler();
  uint64_t v23 = &off_10020F2B0;
  *(void *)&long long v21 = a10;
  swift_defaultActor_initialize();
  a11[19] = a1;
  a11[26] = a2;
  a11[27] = v17;
  sub_100028270(&v27, (uint64_t)(a11 + 21));
  a11[20] = a4;
  a11[28] = a5;
  a11[29] = a6;
  a11[30] = a7;
  a11[31] = a8;
  sub_100028270(&v24, (uint64_t)(a11 + 32));
  sub_100028270(&v21, (uint64_t)(a11 + 14));
  return a11;
}

void sub_100179F38(objc_class *a1, uint64_t a2)
{
  sub_100175C08(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_100179F40()
{
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_100179FA0()
{
  sub_100040B48();
  return sub_1001754A4(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10, v11, v12, v13);
}

uint64_t sub_100179FC4()
{
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 112, 7);
}

void sub_10017A024()
{
  sub_100040B48();
  sub_100175638(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_10017A048(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_10017A074()
{
  return sub_100175ED8(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_100216400, (uint64_t)&unk_100232EF8);
}

void sub_10017A0AC(uint64_t a1, uint64_t a2)
{
  sub_100176024(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), (uint64_t)&off_10020C668, (uint64_t)&unk_1002163C8);
}

uint64_t sub_10017A0D8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  uint64_t v1 = sub_10005260C();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10017A128()
{
  return sub_100174CAC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void **)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80));
}

uint64_t sub_10017A160(char a1)
{
  uint64_t v2 = *(uint64_t (**)(char *))(v1 + 16);
  char v4 = a1;
  return v2(&v4);
}

uint64_t sub_10017A198(char a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(a1 & 1);
}

uint64_t sub_10017A1C8(uint64_t a1)
{
  return sub_10017A4D0(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_100174DD8);
}

#error "10017A230: call analysis failed (funcsize=21)"

uint64_t sub_10017A244()
{
  sub_10004A41C();
  sub_100040A2C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10004DEC4(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100052880;
  uint64_t v3 = sub_100049B74();
  return sub_100174BA4(v3, v4, v5, v6, v7);
}

uint64_t sub_10017A2DC()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = sub_10017B190();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10017A32C()
{
  return sub_1000183D4();
}

uint64_t sub_10017A348()
{
  return sub_10017A65C();
}

uint64_t sub_10017A360(uint64_t a1, unsigned __int8 a2)
{
  if (a2 != 0xFF) {
    return sub_100019190(a1, a2);
  }
  return a1;
}

uint64_t sub_10017A374()
{
  return sub_100175ED8(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_100216630, (uint64_t)&unk_100232F10);
}

void sub_10017A3AC(uint64_t a1, uint64_t a2)
{
  sub_100176024(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), (uint64_t)&off_10020C608, (uint64_t)&unk_1002165F8);
}

uint64_t sub_10017A3D8()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10017A430()
{
  return sub_100172F1C(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72));
}

uint64_t sub_10017A444()
{
  swift_release();
  uint64_t v0 = sub_100044104();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10017A478()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_100021B30();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10017A4B8(uint64_t a1)
{
  return sub_10017A4D0(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1001733BC);
}

uint64_t sub_10017A4D0(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_10017A4EC(uint64_t a1)
{
  return sub_100052518(a1, 43, 37);
}

#error "10017A544: call analysis failed (funcsize=19)"

uint64_t sub_10017A558()
{
  sub_10004A41C();
  sub_100040A2C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10004DEC4(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100052880;
  uint64_t v3 = sub_100049B74();
  return sub_100172E84(v3, v4, v5, v6, v7);
}

uint64_t sub_10017A5F0()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = sub_10017B190();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10017A644()
{
  return sub_10017A65C();
}

uint64_t sub_10017A65C()
{
  sub_10004A0AC();
  return v3(v0, v1, v2);
}

uint64_t sub_10017A694()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_10002068C();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10017A6D4()
{
  return sub_100171440(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_10017A6E0()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_10002068C();
  return _swift_deallocObject(v1, v2, v3);
}

void sub_10017A720(uint64_t a1, uint64_t a2)
{
  sub_100171684(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_10017A72C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v1 = sub_100011DFC();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10017A774()
{
  return sub_10017AEFC((uint64_t (*)(void, void, void, void, void, void, void))sub_1001717C4);
}

uint64_t sub_10017A78C()
{
  swift_release();
  uint64_t v1 = sub_10002068C();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10017A7C4(unsigned __int8 *a1)
{
  return sub_100171C30(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(uint64_t (**)(void, void))(v1 + 32));
}

uint64_t sub_10017A7D4()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_10004274C();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10017A814(uint64_t a1)
{
  return sub_100052518(a1, 44, 38);
}

uint64_t sub_10017A830()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v1 = sub_100021B30();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10017A878()
{
  sub_100046D0C();
  sub_100017EC8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10004DEC4(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100052880;
  uint64_t v3 = sub_10004A778();
  return sub_10017153C(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_10017A91C()
{
  sub_100046D0C();
  sub_10017B1A0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10004DEC4(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100052880;
  uint64_t v3 = sub_100045C00();
  return sub_100170900(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10017A9C0()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = sub_100011DFC();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10017AA10()
{
  sub_100046D0C();
  sub_10017B1A0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10004DEC4(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100052880;
  uint64_t v3 = sub_100045C00();
  return sub_10016F904(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10017AAB0()
{
  swift_unknownObjectWeakDestroy();
  uint64_t v0 = sub_100036260();
  return _swift_deallocObject(v0, v1, v2);
}

void sub_10017AAE0(void *a1, uint64_t a2)
{
}

uint64_t sub_10017AAE8()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_100044104();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10017AB20(char a1, uint64_t a2)
{
  return sub_10016E468(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_10017AB28()
{
  uint64_t v1 = sub_100044104();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10017AB58()
{
  return sub_10016E874(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10017AB60(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10017ABA8()
{
  swift_unknownObjectRelease();

  uint64_t v1 = sub_10002068C();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10017ABE0()
{
  sub_10004A41C();
  sub_100040A2C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10004DEC4(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100052880;
  uint64_t v3 = sub_100049B74();
  return sub_10016ECF8(v3, v4, v5, v6, v7);
}

uint64_t sub_10017AC78()
{
  sub_100041F70();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10004DEC4(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100045A38;
  uint64_t v3 = sub_10004FC64();
  return v4(v3);
}

uint64_t sub_10017AD10()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = sub_10005260C();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10017AD60()
{
  sub_10004D200();
  return sub_1001773C0(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);
}

uint64_t sub_10017AD84()
{
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  uint64_t v1 = sub_10005260C();
  return _swift_deallocObject(v1, v2, v3);
}

void sub_10017ADD4()
{
  sub_10004D200();
  sub_100177538(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_10017ADF8()
{
  uint64_t v1 = sub_100044104();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10017AE30()
{
  return sub_100175ED8(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_100216B30, (uint64_t)&unk_100232F68);
}

void sub_10017AE68(uint64_t a1, uint64_t a2)
{
  sub_100176024(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), (uint64_t)&off_10020C6C8, (uint64_t)&unk_100216AF8);
}

uint64_t sub_10017AE94()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v1 = sub_100011DFC();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10017AEE4()
{
  return sub_10017AEFC((uint64_t (*)(void, void, void, void, void, void, void))sub_100176128);
}

uint64_t sub_10017AEFC(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

uint64_t sub_10017AF18()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_10004274C();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10017AF58(unsigned __int8 *a1)
{
  return sub_1001765F8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(uint64_t (**)(void, void))(v1 + 32));
}

uint64_t sub_10017AF68()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_10002068C();
  return _swift_deallocObject(v1, v2, v3);
}

void sub_10017AFA8(uint64_t a1)
{
  sub_100176CC8(a1, *(void **)(v1 + 16), *(void (**)(void, void))(v1 + 24));
}

uint64_t sub_10017AFB8()
{
  swift_unknownObjectRelease();

  uint64_t v1 = sub_10002068C();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10017AFF8()
{
  sub_10004A41C();
  sub_100040A2C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10004DEC4(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100052880;
  uint64_t v3 = sub_100049B74();
  return sub_100175F8C(v3, v4, v5, v6, v7);
}

uint64_t sub_10017B130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  return sub_10002CBB4((uint64_t)va, v10);
}

uint64_t sub_10017B158(uint64_t a1)
{
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 48) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_10017B174()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10017B190()
{
  return v0;
}

uint64_t sub_10017B1B8()
{
  return type metadata accessor for LogMessage();
}

void sub_10017B1D0()
{
  _StringGuts.grow(_:)(36);
}

uint64_t sub_10017B204()
{
  return swift_allocObject();
}

uint64_t sub_10017B21C()
{
  return swift_getErrorValue();
}

uint64_t sub_10017B23C()
{
  return sub_10002CBB4(v1, v0);
}

uint64_t sub_10017B254()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v2 - 8);
  sub_100020EAC();
  uint64_t v3 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  sub_100020EAC();
  uint64_t v7 = v6 - v5;
  uint64_t result = BYSetupAssistantFinishedDarwinNotification;
  if (BYSetupAssistantFinishedDarwinNotification)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1000438EC();
    (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v7, enum case for DispatchQoS.QoSClass.default(_:), v3);
    uint64_t v9 = static OS_dispatch_queue.global(qos:)();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
    id v40 = sub_10017BEAC;
    uint64_t v41 = v1;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10017BAD4;
    uint64_t v39 = &unk_100216B48;
    uint64_t v10 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    uint64_t v11 = String.utf8CString.getter();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint32_t v12 = notify_register_dispatch((const char *)(v11 + 32), (int *)(v1 + 16), v9, v10);
    swift_endAccess();
    swift_release();
    _Block_release(v10);

    sub_100043478(&qword_10022E560);
    uint64_t v13 = type metadata accessor for LogMessage();
    sub_100044798(v13);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    if (v12)
    {
      uint64_t v39 = (void *)type metadata accessor for SetupAssistantObserver();
      aBlock[0] = v1;
      swift_retain();
      id v14 = (id)AMSLogKey();
      if (v14)
      {
        uint64_t v15 = v14;
        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v18 = v17;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        sub_100044E44();
        sub_100041F7C();
        uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
        sub_1000450B0(MetatypeMetadata);
        sub_1000423CC((uint64_t)&v35);
        sub_100020E44();
        uint64_t v37 = &type metadata for String;
        uint64_t v35 = v16;
        uint64_t v36 = v18;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)&v35);
        v20._uint64_t countAndFlagsBits = 93;
        v20._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v20);
        sub_10004892C();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        sub_100044E44();
        sub_100041F7C();
        uint64_t v28 = swift_getMetatypeMetadata();
        sub_1000450B0(v28);
        sub_1000423CC((uint64_t)&v35);
        v29._uint64_t countAndFlagsBits = 58;
        v29._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v29);
        sub_10004892C();
      }
      sub_10004377C((uint64_t)aBlock);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v30._object = (void *)0x80000001001D74D0;
      v30._uint64_t countAndFlagsBits = 0xD000000000000011;
      LogMessage.StringInterpolation.appendLiteral(_:)(v30);
      uint64_t v39 = &type metadata for UInt32;
      LODWORD(aBlock[0]) = v12;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)aBlock);
      v31._uint64_t countAndFlagsBits = 0;
      v31._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v31);
      sub_10004892C();
      if (qword_10022C460 != -1) {
        swift_once();
      }
      uint64_t v32 = static os_log_type_t.error.getter();
    }
    else
    {
      uint64_t v39 = (void *)type metadata accessor for SetupAssistantObserver();
      aBlock[0] = v1;
      swift_retain();
      id v21 = (id)AMSLogKey();
      if (v21)
      {
        uint64_t v22 = v21;
        uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v25 = v24;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        sub_100044E44();
        sub_100041F7C();
        uint64_t v26 = swift_getMetatypeMetadata();
        sub_1000450B0(v26);
        sub_1000423CC((uint64_t)&v35);
        sub_100020E44();
        uint64_t v37 = &type metadata for String;
        uint64_t v35 = v23;
        uint64_t v36 = v25;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)&v35);
        v27._uint64_t countAndFlagsBits = 93;
        v27._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v27);
        sub_10004892C();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        sub_100044E44();
        sub_100041F7C();
        uint64_t v33 = swift_getMetatypeMetadata();
        sub_1000450B0(v33);
        sub_1000423CC((uint64_t)&v35);
        v34._uint64_t countAndFlagsBits = 58;
        v34._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v34);
        sub_10004892C();
      }
      sub_10004377C((uint64_t)aBlock);
      LogMessage.init(stringLiteral:)();
      if (qword_10022C460 != -1) {
        swift_once();
      }
      uint64_t v32 = static os_log_type_t.default.getter();
    }
    sub_10004841C(v32);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10017B7EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v3 - 8);
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v21 = type metadata accessor for SetupAssistantObserver();
  v20[0] = a2;
  swift_retain();
  id v4 = (id)AMSLogKey();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v9._uint64_t countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v9);
    sub_100049788(v20, v21);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v18[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v18);
    v11._uint64_t countAndFlagsBits = 5972026;
    v11._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    uint64_t MetatypeMetadata = &type metadata for String;
    v18[0] = v6;
    v18[1] = v8;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v18);
    v12._uint64_t countAndFlagsBits = 93;
    v12._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v13._uint64_t countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    sub_100049788(v20, v21);
    uint64_t v14 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v18[0] = v14;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v18);
    v15._uint64_t countAndFlagsBits = 58;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v20);
  LogMessage.init(stringLiteral:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v16 = static os_log_type_t.default.getter();
  sub_10004841C(v16);
  swift_bridgeObjectRelease();
  uint64_t result = BYSetupAssistantNeedsToRun();
  if ((result & 1) == 0) {
    return sub_10017BDE4();
  }
  return result;
}

uint64_t sub_10017BAD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_10017BB28()
{
  uint64_t v1 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v1 - 8);
  sub_100020EAC();
  swift_beginAccess();
  notify_cancel(*(_DWORD *)(v0 + 16));
  sub_100043478(&qword_10022E560);
  uint64_t v2 = type metadata accessor for LogMessage();
  sub_100044798(v2);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v19 = type metadata accessor for SetupAssistantObserver();
  v18[0] = v0;
  swift_retain();
  id v3 = (id)AMSLogKey();
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v8._uint64_t countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v8);
    sub_100049788(v18, v19);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v16[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v16);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v16[0] = v5;
    v16[1] = v7;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v16);
    v10._uint64_t countAndFlagsBits = 93;
    v10._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v10);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v11._uint64_t countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    sub_100049788(v18, v19);
    uint64_t v12 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v16[0] = v12;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v16);
    v13._uint64_t countAndFlagsBits = 58;
    v13._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v18);
  LogMessage.init(stringLiteral:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v14 = static os_log_type_t.default.getter();
  sub_10004841C(v14);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10017BDE4()
{
  id v0 = [objc_allocWithZone((Class)AMSEngagementSyncRequest) init];
  if (qword_10022C430 != -1) {
    swift_once();
  }
  sub_1000B0CFC();

  return swift_release();
}

uint64_t sub_10017BE78()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SetupAssistantObserver()
{
  return self;
}

uint64_t sub_10017BEAC(uint64_t a1)
{
  return sub_10017B7EC(a1, v1);
}

CFPropertyListRef sub_10017BEB4()
{
  char v1 = sub_10017BF3C(*(unsigned char *)(v0 + 25));
  type metadata accessor for Defaults();
  CFPropertyListRef result = sub_1000A38A0(v1);
  if (result)
  {
    if (swift_dynamicCast()) {
      return (CFPropertyListRef)v3;
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10017BF3C(char a1)
{
  return 0xD0C0A0Bu >> (8 * a1);
}

uint64_t sub_10017BF54(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v24[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URLRequest();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  Swift::String v11 = (char *)&v24[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  URLRequest.init(url:cachePolicy:timeoutInterval:)();
  id v12 = [self defaultManager];
  type metadata accessor for JSStackContext();
  URL.path.getter();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v14 = [v12 fileExistsAtPath:v13];

  CFPropertyListRef v15 = sub_10017BEB4();
  if (v16)
  {
    if (v14)
    {
      v17._object = (void *)0x80000001001CCE40;
      v17._uint64_t countAndFlagsBits = 0xD000000000000011;
      URLRequest.addValue(_:forHTTPHeaderField:)(*(Swift::String *)&v15, v17);
    }
    swift_bridgeObjectRelease();
  }
  id v18 = sub_10017D3A0(a1, *(void *)(v2 + OBJC_IVAR____TtC14amsengagementd13SourceFetcher_process), *(void *)(v2 + 16));
  sub_100043478(&qword_100233168);
  Class isa = URLRequest._bridgeToObjectiveC()().super.isa;
  id v20 = [v18 requestByEncodingRequest:isa parameters:0];

  Promise<A>.init(_:)();
  void v24[3] = type metadata accessor for SyncTaskScheduler();
  v24[4] = (uint64_t)&protocol witness table for SyncTaskScheduler;
  sub_10003BAA4(v24);
  SyncTaskScheduler.init()();
  uint64_t v21 = Promise.map<A>(on:_:)();

  swift_release();
  sub_10004377C((uint64_t)v24);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v21;
}

void sub_10017C26C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for URLRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  v5.value._uint64_t countAndFlagsBits = 0x797469746E656469;
  v5.value._object = (void *)0xE800000000000000;
  v6._uint64_t countAndFlagsBits = 0x452D747065636341;
  v6._object = (void *)0xEF676E69646F636ELL;
  URLRequest.setValue(_:forHTTPHeaderField:)(v5, v6);
}

uint64_t sub_10017C318()
{
  sub_100043478((uint64_t *)&unk_100233E60);
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC14amsengagementd13SourceFetcher_urlSession);
  Class isa = URLRequest._bridgeToObjectiveC()().super.isa;
  id v3 = [v1 dataTaskPromiseWithRequest:isa];

  return Promise<A>.init(_:)();
}

uint64_t sub_10017C398(void **a1)
{
  return Promise.resolve(_:)();
}

uint64_t sub_10017C434(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v86 = (int *)type metadata accessor for JetpackOutputWriter();
  __chkstk_darwin(v86);
  id v85 = (void *)((char *)v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v88 = (char *)v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v94 = a1;
  uint64_t v13 = sub_10017D868(a1);
  if (!v13)
  {
    long long v92 = 0u;
    long long v93 = 0u;
    goto LABEL_6;
  }
  uint64_t v14 = v13;
  strcpy((char *)v89, "Last-Modified");
  v89[7] = -4864;
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)&v90, v14, &v92);
  swift_bridgeObjectRelease();
  sub_1000434BC((uint64_t)&v90);
  if (!*((void *)&v93 + 1))
  {
LABEL_6:
    sub_10002CCBC((uint64_t)&v92, &qword_10022F490);
LABEL_7:
    sub_10004D510(0, &qword_100233160);
    id v17 = sub_1000A3218();
    static Date.now.getter();
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    id v19 = [v17 stringForObjectValue:isa];

    if (v19)
    {
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v15 = v20;
    }
    else
    {

      uint64_t v16 = 0;
      unint64_t v15 = 0;
    }
    goto LABEL_10;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_7;
  }
  unint64_t v15 = *((void *)&v90 + 1);
  uint64_t v16 = v90;
LABEL_10:
  unsigned __int8 v21 = *((unsigned char *)v2 + 25);
  char v22 = sub_10017BF3C(v21);
  if (v15)
  {
    swift_bridgeObjectRetain();
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v23 = 0;
  }
  unint64_t v82 = v15;
  type metadata accessor for Defaults();
  sub_1000A3990(v23, v22);
  swift_unknownObjectRelease();
  if (qword_10022C470 != -1) {
    swift_once();
  }
  uint64_t v84 = qword_1002440D8;
  sub_100043478(&qword_10022E560);
  unint64_t v83 = *(void *)(*(void *)(type metadata accessor for LogMessage() - 8) + 72);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  *((void *)&v91 + 1) = v4;
  *(void *)&long long v90 = v2;
  swift_retain();
  id v24 = (id)AMSLogKey();
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v81 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v27 = v26;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v28._uint64_t countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    sub_100049788(&v90, *((uint64_t *)&v91 + 1));
    uint64_t DynamicType = swift_getDynamicType();
    *((void *)&v93 + 1) = swift_getMetatypeMetadata();
    *(void *)&long long v92 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CCBC((uint64_t)&v92, &qword_10022F490);
    v30._uint64_t countAndFlagsBits = 5972026;
    v30._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    *((void *)&v93 + 1) = &type metadata for String;
    *(void *)&long long v92 = v81;
    *((void *)&v92 + 1) = v27;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CCBC((uint64_t)&v92, &qword_10022F490);
    v31._uint64_t countAndFlagsBits = 93;
    v31._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v31);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v32._uint64_t countAndFlagsBits = 0;
    v32._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v32);
    sub_100049788(&v90, *((uint64_t *)&v91 + 1));
    uint64_t v33 = swift_getDynamicType();
    *((void *)&v93 + 1) = swift_getMetatypeMetadata();
    *(void *)&long long v92 = v33;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CCBC((uint64_t)&v92, &qword_10022F490);
    v34._uint64_t countAndFlagsBits = 58;
    v34._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v34);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v90);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v35._uint64_t countAndFlagsBits = 0x646F4D2D7473614CLL;
  v35._object = (void *)0xEF203A6465696669;
  LogMessage.StringInterpolation.appendLiteral(_:)(v35);
  if (v82)
  {
    *((void *)&v91 + 1) = &type metadata for String;
    *(void *)&long long v90 = v16;
    *((void *)&v90 + 1) = v82;
  }
  else
  {
    long long v90 = 0u;
    long long v91 = 0u;
  }
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CCBC((uint64_t)&v90, &qword_10022F490);
  v36._uint64_t countAndFlagsBits = 0;
  v36._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v36);
  LogMessage.init(stringInterpolation:)();
  uint64_t v37 = static os_log_type_t.debug.getter();
  sub_10004841C(v37);
  swift_bridgeObjectRelease();
  uint64_t v38 = sub_10017D868(v94);
  if (!v38)
  {
    long long v92 = 0u;
    long long v93 = 0u;
    goto LABEL_26;
  }
  uint64_t v39 = v38;
  *(void *)&long long v92 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *((void *)&v92 + 1) = v40;
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)&v90, v39, &v92);
  swift_bridgeObjectRelease();
  sub_1000434BC((uint64_t)&v90);
  if (!*((void *)&v93 + 1))
  {
LABEL_26:
    sub_10002CCBC((uint64_t)&v92, &qword_10022F490);
    goto LABEL_27;
  }
  if (swift_dynamicCast())
  {
    uint64_t v75 = *((void *)&v90 + 1);
    v74[0] = v90;
    goto LABEL_28;
  }
LABEL_27:
  v74[0] = 0;
  uint64_t v75 = 0;
LABEL_28:
  uint64_t v41 = *((unsigned __int8 *)v2 + 24);
  uint64_t v79 = (void *)v2[4];
  uint64_t v42 = v2[5];
  unint64_t v83 = v2[6];
  uint64_t v84 = v42;
  unint64_t v77 = v2[7];
  unint64_t v43 = v2[8];
  uint64_t v88 = (char *)v2[9];
  uint64_t v81 = v2[10];
  unint64_t v82 = v43;
  unint64_t v80 = *((unsigned __int8 *)v2 + 88);
  unint64_t v78 = v2[12];
  v74[1] = v21;
  unint64_t v76 = v41 | ((unint64_t)v21 << 8);
  uint64_t v44 = (uint64_t)v2 + OBJC_IVAR____TtC14amsengagementd13SourceFetcher_context;
  uint64_t v45 = (int *)type metadata accessor for JSStackContext();
  uint64_t v46 = v44 + v45[9];
  uint64_t v47 = v85;
  uint64_t v48 = v86;
  uint64_t v49 = (char *)v85 + v86[5];
  uint64_t v50 = type metadata accessor for URL();
  uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16);
  v51(v49, v46, v50);
  uint64_t v52 = (char *)v47 + v48[6];
  uint64_t v53 = v50;
  uint64_t v54 = v88;
  v51(v52, v44 + v45[10], v53);
  char v55 = *(unsigned char *)(v44 + v45[11]);
  unint64_t v56 = v77;
  id v57 = v79;
  *uint64_t v47 = v76;
  v47[1] = (unint64_t)v57;
  unint64_t v58 = v83;
  v47[2] = v84;
  v47[3] = v58;
  unint64_t v59 = v82;
  v47[4] = v56;
  v47[5] = v59;
  uint64_t v60 = v81;
  v47[6] = (unint64_t)v54;
  v47[7] = v60;
  unint64_t v61 = v78;
  v47[8] = v80;
  v47[9] = v61;
  *((unsigned char *)v47 + v48[7]) = v55;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v62 = v57;
  id v63 = objc_msgSend(v94, "data", v74[0]);
  uint64_t v64 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v66 = v65;

  if (v75)
  {
    char v94 = v52;
    uint64_t v67 = self;
    uint64_t v68 = (int *)v62;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v69 = sub_1000BAC24(v67);
    uint64_t v86 = v68;
    if (!v69) {
      uint64_t v69 = Dictionary.init(dictionaryLiteral:)();
    }
    uint64_t v70 = v69;
    swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v90 = v70;
    sub_10008BF2C();
    uint64_t v71 = v90;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10017D7F0(v71, v67, (uint64_t)&type metadata for String, (uint64_t)&type metadata for String, (uint64_t)&protocol witness table for String, (SEL *)&selRef_setJsVersionMap_);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v72 = v87;
  Data.write(to:options:)();
  if (!v72) {
    sub_1000CCA90();
  }
  sub_1000545CC((uint64_t)v47, (void (*)(void))type metadata accessor for JetpackOutputWriter);
  sub_10004B278(v64, v66);
  return swift_bridgeObjectRelease();
}

void sub_10017CF34(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = *a3;
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v6 - 8);
  *(void *)&long long v26 = a1;
  swift_errorRetain();
  sub_100043478((uint64_t *)&unk_100233150);
  type metadata accessor for AMSError(0);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_11;
  }
  id v7 = v24[0];
  sub_10017D7A0();
  uint64_t v8 = _BridgedStoredNSError.userInfo.getter();
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10004D120(v9, v10, v8, &v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v27)
  {

    sub_10002CCBC((uint64_t)&v26, &qword_10022F490);
    goto LABEL_11;
  }
  if ((swift_dynamicCast() & 1) == 0 || v24[0] != (id)304)
  {

LABEL_11:
    Promise.reject(_:)();
    return;
  }
  if (qword_10022C470 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v27 = v5;
  *(void *)&long long v26 = a3;
  swift_retain();
  id v11 = (id)AMSLogKey();
  if (v11)
  {
    id v12 = v11;
    NSString v23 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v15._uint64_t countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    sub_100049788(&v26, v27);
    uint64_t DynamicType = (void *)swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v24[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CCBC((uint64_t)v24, &qword_10022F490);
    v17._uint64_t countAndFlagsBits = 5972026;
    v17._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    uint64_t MetatypeMetadata = &type metadata for String;
    v24[0] = v23;
    v24[1] = v14;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CCBC((uint64_t)v24, &qword_10022F490);
    v18._uint64_t countAndFlagsBits = 93;
    v18._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v19._uint64_t countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    sub_100049788(&v26, v27);
    unint64_t v20 = (void *)swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v24[0] = v20;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CCBC((uint64_t)v24, &qword_10022F490);
    v21._uint64_t countAndFlagsBits = 58;
    v21._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v26);
  LogMessage.init(stringLiteral:)();
  uint64_t v22 = static os_log_type_t.info.getter();
  sub_10004841C(v22);
  swift_bridgeObjectRelease();
  type metadata accessor for JSStackContext();
  Promise.resolve(_:)();
}

id sub_10017D3A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)__dst - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0) + 96;
  __chkstk_darwin(v8);
  id v12 = (char *)__dst - v11 + 96;
  id v13 = [objc_allocWithZone((Class)AMSURLRequestEncoder) initWithBag:a3];
  [v13 setAnisetteType:0];
  [v13 setMescalType:0];
  [v13 setAccount:0];
  [v13 setRequestEncoding:1];
  [v13 setDialogOptions:1];
  [v13 setClientInfo:a2];
  [v13 setDisableResponseDecoding:1];
  sub_100043478((uint64_t *)&unk_10022E570);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3110;
  __dst[0] = 0xD000000000000019;
  __dst[1] = 0x80000001001D7630;
  AnyHashable.init<A>(_:)();
  static Date.now.getter();
  memcpy(__dst, (const void *)(v3 + 24), sizeof(__dst));
  sub_1000792E4((uint64_t)v10);
  Date.timeIntervalSince(_:)();
  uint64_t v16 = v15;
  Swift::String v17 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17(v10, v6);
  v17(v12, v6);
  *(void *)(inited + 96) = &type metadata for Double;
  *(void *)(inited + 72) = v16;
  uint64_t v18 = Dictionary.init(dictionaryLiteral:)();
  sub_10017D7F0(v18, v13, (uint64_t)&type metadata for AnyHashable, (uint64_t)(&type metadata for Any + 1), (uint64_t)&protocol witness table for AnyHashable, (SEL *)&selRef_setAdditionalMetrics_);
  return v13;
}

uint64_t sub_10017D648()
{
  return static URLRequest._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10017D674()
{
  return type metadata accessor for SourceFetcher();
}

uint64_t sub_10017D67C()
{
  uint64_t result = type metadata accessor for JSStackContext();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_10017D734()
{
  unint64_t result = qword_100233140;
  if (!qword_100233140)
  {
    sub_10006026C((uint64_t *)&unk_100233E60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100233140);
  }
  return result;
}

uint64_t sub_10017D78C(void **a1)
{
  return sub_10017C398(a1);
}

void sub_10017D798(uint64_t a1)
{
  sub_10017CF34(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

unint64_t sub_10017D7A0()
{
  unint64_t result = qword_10022CE90;
  if (!qword_10022CE90)
  {
    type metadata accessor for AMSError(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10022CE90);
  }
  return result;
}

void sub_10017D7F0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, SEL *a6)
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(a2, *a6, isa);
}

uint64_t sub_10017D868(void *a1)
{
  id v1 = [a1 responseHeaders];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

unint64_t sub_10017D8D4()
{
  unint64_t result = qword_100233170;
  if (!qword_100233170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100233170);
  }
  return result;
}

uint64_t SQLDatabase.__allocating_init(path:readonly:fileProtection:schemaBlock:corruptionBlock:)(uint64_t a1, uint64_t a2, char a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = swift_allocObject();
  SQLDatabase.init(path:readonly:fileProtection:schemaBlock:corruptionBlock:)(a1, a2, a3, a4, a5, a6, a7, a8);
  return v16;
}

uint64_t sub_10017D9B8()
{
  sub_100043478(&qword_1002333E8);
  swift_allocObject();
  uint64_t result = DispatchSpecificKey.init()();
  qword_1002441A8 = result;
  return result;
}

uint64_t SQLDatabase.databasePath.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SQLDatabase.readonly.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

unint64_t sub_10017DA34()
{
  if (*(unsigned char *)(v0 + 32)) {
    return 0xD00000000000001ALL;
  }
  else {
    return 0xD00000000000001BLL;
  }
}

uint64_t SQLDatabase.__allocating_init(schemaBlock:corruptionBlock:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for SQLDatabase();
  uint64_t v8 = swift_allocObject();
  SQLDatabase.init(path:readonly:fileProtection:schemaBlock:corruptionBlock:)(0x656D3A3A656C6966, 0xED00003A79726F6DLL, 0, 0, a1, a2, a3, a4);
  return v8;
}

void SQLDatabase.query(sql:parameters:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a1;
  v5[4] = a2;
  v5[5] = a3;
  void v5[6] = a4;
  v5[7] = a5;
  sub_1000489E4((void (*)(void))sub_10003DAE0, (uint64_t)v5);
}

void static SQLDatabase.removeDatabase(path:)()
{
  sub_100044DC4();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v6 = sub_1000208F0(v5);
  __chkstk_darwin(v6);
  sub_100011D4C();
  if (qword_10022C468 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v7 = sub_1000208FC();
  sub_100044798(v7);
  *(_OWORD *)(sub_10004759C() + 16) = xmmword_1001C3120;
  Swift::String v32 = (void *)sub_100043478(&qword_100233178);
  id v30 = v0;
  id v8 = (id)AMSLogKey();
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    uint64_t v13 = sub_100044FF4(&v30);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v28[0] = v13;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v28, &qword_10022F490);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v28[0] = v10;
    v28[1] = v12;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v28, &qword_10022F490);
    sub_1000208D8();
    sub_100020BE4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    uint64_t v14 = sub_100044FF4(&v30);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v28[0] = v14;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v28, &qword_10022F490);
    sub_100020E94();
    sub_100020BE4();
  }
  sub_10004377C((uint64_t)&v30);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  sub_10002064C();
  v15._uint64_t countAndFlagsBits = 0xD000000000000013;
  LogMessage.StringInterpolation.appendLiteral(_:)(v15);
  Swift::String v32 = &type metadata for String;
  id v30 = v4;
  uint64_t v31 = v2;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000435D4((uint64_t)&v30, &qword_10022F490);
  sub_100020E60();
  LogMessage.init(stringInterpolation:)();
  uint64_t v16 = static os_log_type_t.debug.getter();
  sub_10004841C(v16);
  swift_bridgeObjectRelease();
  id v17 = [objc_allocWithZone((Class)NSFileManager) init];
  sub_100043478(&qword_10022D738);
  uint64_t inited = swift_initStackObject();
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  *(_OWORD *)(inited + 16) = xmmword_1001C3130;
  *(void *)(inited + 32) = 0;
  *(void *)(inited + 40) = 0xE000000000000000;
  *(void *)(inited + 48) = 1835561773;
  *(void *)(inited + 56) = 0xE400000000000000;
  *(void *)(inited + 64) = 1818326829;
  *(void *)(inited + 72) = 0xE400000000000000;
  while (1)
  {
    Swift::String v21 = *(void **)(inited + v19 + 40);
    id v30 = v4;
    uint64_t v31 = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22._uint64_t countAndFlagsBits = v20;
    v22._object = v21;
    String.append(_:)(v22);
    swift_bridgeObjectRelease();
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v30 = 0;
    LODWORD(v21) = [v17 removeItemAtPath:v23 error:&v30];

    id v24 = v30;
    if (!v21)
    {
      id v26 = v30;
      swift_bridgeObjectRelease();
      _convertNSErrorToError(_:)();

      swift_willThrow();
      goto LABEL_12;
    }
    if (v19 == 32) {
      break;
    }
    uint64_t v20 = *(void *)(inited + v19 + 48);
    id v25 = v30;
    v19 += 16;
  }
  swift_setDeallocating();
  id v27 = v24;
  sub_10017FADC();

LABEL_12:
  sub_100020E2C();
}

void static SQLDatabase.truncate(path:)()
{
  sub_100044DC4();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v7 = sub_1000208F0(v6);
  __chkstk_darwin(v7);
  sub_100011D4C();
  if (qword_10022C468 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v8 = sub_1000208FC();
  sub_100044798(v8);
  *(_OWORD *)(sub_100043CFC() + 16) = xmmword_1001C3120;
  id v24 = (void *)sub_100043478(&qword_100233178);
  v23[0] = v0;
  if ((id)AMSLogKey())
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_100035D70();
    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    uint64_t v9 = sub_100044FF4(v23);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v21[0] = v9;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v21, &qword_10022F490);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v21[0] = v1;
    v21[1] = &type metadata for String;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v21, &qword_10022F490);
    sub_1000208D8();
    sub_100020BE4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    uint64_t v10 = sub_100044FF4(v23);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v21[0] = v10;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v21, &qword_10022F490);
    sub_100020E94();
    sub_100020BE4();
  }
  sub_10004377C((uint64_t)v23);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  sub_10002064C();
  v11._uint64_t countAndFlagsBits = 0xD000000000000015;
  LogMessage.StringInterpolation.appendLiteral(_:)(v11);
  id v24 = &type metadata for String;
  v23[0] = v5;
  v23[1] = v3;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000435D4((uint64_t)v23, &qword_10022F490);
  sub_100020E60();
  LogMessage.init(stringInterpolation:)();
  uint64_t v12 = static os_log_type_t.debug.getter();
  sub_10004841C(v12);
  swift_bridgeObjectRelease();
  v23[0] = 0;
  NSString v13 = String._bridgeToObjectiveC()();
  uint64_t v14 = (const char *)[v13 fileSystemRepresentation];
  id v15 = v13;
  int v16 = sqlite3_open_v2(v14, v23, 2, 0);
  if (!sub_1000416F0(v16))
  {
    LODWORD(v21[0]) = 129;
    id v17 = v23[0];
    int v18 = sqlite3_file_control(v23[0], 0, 101, v21);
    char v19 = sub_1000416F0(v18);
    sqlite3_close(v17);
    if (v19)
    {
      sub_10007CA54();
      sub_100021180();
      *uint64_t v20 = v19;
      swift_willThrow();
    }
  }
  sub_100020E2C();
}

void SQLDatabase.transaction(_:)(void (*a1)(void), uint64_t a2)
{
  uint64_t v5 = swift_retain();
  sub_100040804(v5, v2, a1, a2);
}

uint64_t sub_10017E314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for DispatchWorkItemFlags();
  sub_100020DEC();
  __chkstk_darwin();
  sub_100020EAC();
  uint64_t v18 = type metadata accessor for DispatchQoS();
  sub_100020DEC();
  uint64_t v13 = v12;
  __chkstk_darwin();
  sub_10002D300();
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = a1;
  void v14[3] = a2;
  void v14[4] = a5;
  v14[5] = v5;
  v14[6] = a3;
  v14[7] = a4;
  aBlock[4] = sub_10017FBEC;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CD0C;
  void aBlock[3] = &unk_100216C68;
  id v15 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  sub_10002AFB0((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_10002B720((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);
  sub_100043FB0();
  v16();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v6, v18);
  return swift_release();
}

const char *sub_10017E588(uint64_t countAndFlagsBits, void *object, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin();
  v57._uint64_t countAndFlagsBits = countAndFlagsBits;
  v57._object = object;
  if (a3)
  {
    v55._uint64_t countAndFlagsBits = a3;
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    sub_100043478((uint64_t *)&unk_100233150);
    if ((swift_dynamicCast() & 1) == 0)
    {
      v55._uint64_t countAndFlagsBits = 0;
      v55._object = (void *)0xE000000000000000;
      v27._uint64_t countAndFlagsBits = 0x3A726F7272455B20;
      v27._object = (void *)0xE900000000000020;
      String.append(_:)(v27);
      uint64_t v52 = a3;
      _print_unlocked<A, B>(_:_:)();
LABEL_11:
      String.append(_:)(v55);
      swift_bridgeObjectRelease();
      if (a6 && sub_10004EF18())
      {
        v55._object = (void *)0xE300000000000000;
        v28._uint64_t countAndFlagsBits = a5;
        v28._object = a6;
        String.append(_:)(v28);
        v29._uint64_t countAndFlagsBits = 2108704;
        v29._object = (void *)0xE300000000000000;
        String.append(_:)(v29);
        swift_bridgeObjectRelease();
      }
      v30._uint64_t countAndFlagsBits = 93;
      v30._object = (void *)0xE100000000000000;
      String.append(_:)(v30);
      if (qword_10022C468 != -1) {
        swift_once();
      }
      sub_100043478(&qword_10022E560);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
      unint64_t v56 = (void *)type metadata accessor for SQLDatabase();
      v55._uint64_t countAndFlagsBits = a4;
      swift_retain();
      id v31 = (id)AMSLogKey();
      if (v31)
      {
        Swift::String v32 = v31;
        uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v35 = v34;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v36._uint64_t countAndFlagsBits = 0;
        v36._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v36);
        sub_100049788(&v55, (uint64_t)v56);
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v52 = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000435D4((uint64_t)&v52, &qword_10022F490);
        v38._uint64_t countAndFlagsBits = 5972026;
        v38._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v38);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v52 = v33;
        uint64_t v53 = v35;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000435D4((uint64_t)&v52, &qword_10022F490);
        v39._uint64_t countAndFlagsBits = 93;
        v39._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v39);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v40._uint64_t countAndFlagsBits = 0;
        v40._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v40);
        sub_100049788(&v55, (uint64_t)v56);
        uint64_t v41 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        uint64_t v52 = v41;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000435D4((uint64_t)&v52, &qword_10022F490);
        v42._uint64_t countAndFlagsBits = 58;
        v42._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v42);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)&v55);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v43._object = (void *)0x80000001001D7990;
      v43._uint64_t countAndFlagsBits = 0xD000000000000010;
      LogMessage.StringInterpolation.appendLiteral(_:)(v43);
      unint64_t v56 = &type metadata for String;
      Swift::String v55 = v57;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000435D4((uint64_t)&v55, &qword_10022F490);
      v44._uint64_t countAndFlagsBits = 0;
      v44._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v44);
      LogMessage.init(stringInterpolation:)();
      uint64_t v45 = static os_log_type_t.error.getter();
      sub_10004841C(v45);
      goto LABEL_20;
    }
    v55._uint64_t countAndFlagsBits = 0x3A726F7272455B20;
    v55._object = (void *)0xE900000000000020;
    LODWORD(v52) = dword_1001C811C[(char)v52];
    v12._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    v13._uint64_t countAndFlagsBits = 0x3A726F7272455B20;
    v13._object = (void *)0xE900000000000020;
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    uint64_t v14 = *(sqlite3 **)(a4 + 64);
    if (!v14)
    {
LABEL_20:
      swift_bridgeObjectRelease();
      return (const char *)swift_errorRelease();
    }
    uint64_t result = sqlite3_errmsg(v14);
    if (result)
    {
      v16._uint64_t countAndFlagsBits = String.init(cString:)();
      v55._uint64_t countAndFlagsBits = 2108704;
      v55._object = (void *)0xE300000000000000;
      String.append(_:)(v16);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    __break(1u);
  }
  else
  {
    uint64_t v17 = qword_10022C468;
    swift_bridgeObjectRetain();
    if (v17 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    unint64_t v56 = (void *)type metadata accessor for SQLDatabase();
    v55._uint64_t countAndFlagsBits = a4;
    swift_retain();
    id v18 = (id)AMSLogKey();
    if (v18)
    {
      char v19 = v18;
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v22 = v21;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v23._uint64_t countAndFlagsBits = 0;
      v23._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      sub_100049788(&v55, (uint64_t)v56);
      uint64_t v24 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v52 = v24;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000435D4((uint64_t)&v52, &qword_10022F490);
      v25._uint64_t countAndFlagsBits = 5972026;
      v25._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v52 = v20;
      uint64_t v53 = v22;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000435D4((uint64_t)&v52, &qword_10022F490);
      v26._uint64_t countAndFlagsBits = 93;
      v26._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
      object = v57._object;
      uint64_t countAndFlagsBits = v57._countAndFlagsBits;
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v46._uint64_t countAndFlagsBits = 0;
      v46._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v46);
      sub_100049788(&v55, (uint64_t)v56);
      uint64_t v47 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v52 = v47;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000435D4((uint64_t)&v52, &qword_10022F490);
      v48._uint64_t countAndFlagsBits = 58;
      v48._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v48);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v55);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v49._uint64_t countAndFlagsBits = 0x6573616261746144;
    v49._object = (void *)0xEE00203A676F6C20;
    LogMessage.StringInterpolation.appendLiteral(_:)(v49);
    unint64_t v56 = &type metadata for String;
    v55._uint64_t countAndFlagsBits = countAndFlagsBits;
    v55._object = object;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)&v55, &qword_10022F490);
    v50._uint64_t countAndFlagsBits = 0;
    v50._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v50);
    LogMessage.init(stringInterpolation:)();
    uint64_t v51 = static os_log_type_t.default.getter();
    sub_10004841C(v51);
    return (const char *)swift_bridgeObjectRelease();
  }
  return result;
}

void sub_10017EDCC()
{
  uint64_t v2 = swift_retain();
  sub_10002D078(v2, v0);
  if (v1) {
    swift_errorRelease();
  }
  sub_10017F03C();
  sub_10007CA54();
  sub_100021180();
  *uint64_t v3 = 6;
  swift_willThrow();
}

uint64_t sub_10017EE40()
{
  if (qword_10022C468 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v1 = type metadata accessor for LogMessage();
  sub_100044798(v1);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v8 = (void *)type metadata accessor for SQLDatabase();
  v7[0] = v0;
  swift_retain();
  static LogMessage.safe(_:)();
  sub_1000435D4((uint64_t)v7, &qword_10022F490);
  LogMessage.init(stringLiteral:)();
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v8 = &type metadata for String;
  v7[0] = v3;
  v7[1] = v2;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_1000435D4((uint64_t)v7, &qword_10022F490);
  uint64_t v4 = static os_log_type_t.error.getter();
  sub_10004841C(v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = swift_retain();
  return sub_10017F6D4(v5, v0);
}

void sub_10017EFD4(uint64_t a1)
{
  uint64_t v3 = swift_retain();
  sub_10002D078(v3, v3);
  if (v1)
  {
    swift_errorRelease();
  }
  else
  {
    uint64_t v4 = swift_retain();
    sub_10002D18C(v4, a1);
    sub_10002D520();
  }
  sub_10017EDCC();
}

void sub_10017F03C()
{
  sub_100044DC4();
  unint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  sub_100011D4C();
  uint64_t v5 = *(void (**)(uint64_t))(v0 + 40);
  uint64_t v6 = qword_10022C468;
  if (v5)
  {
    swift_retain();
    if (v6 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v7 = sub_1000208FC();
    sub_100044798(v7);
    *(_OWORD *)(sub_100043CFC() + 16) = xmmword_1001C3130;
    uint64_t v8 = type metadata accessor for SQLDatabase();
    sub_1000441E8(v8);
    id v9 = (id)AMSLogKey();
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v13 = v12;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100046824();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_100045F54(MetatypeMetadata);
      sub_100043DC0();
      sub_100020E44();
      Swift::String v44 = &type metadata for String;
      uint64_t v42 = v11;
      unint64_t v43 = v13;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100043DC0();
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100046824();
      uint64_t v23 = swift_getMetatypeMetadata();
      sub_100045F54(v23);
      sub_1000435D4((uint64_t)&v42, &qword_10022F490);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v45);
    LogMessage.init(stringLiteral:)();
    uint64_t v25 = *(void *)(v0 + 16);
    uint64_t v24 = *(void *)(v0 + 24);
    uint64_t v47 = &type metadata for String;
    uint64_t v45 = v25;
    uint64_t v46 = v24;
    swift_bridgeObjectRetain();
    static LogMessage.safe(_:)();
    sub_1000435D4((uint64_t)&v45, &qword_10022F490);
    uint64_t v26 = static os_log_type_t.error.getter();
    sub_10004841C(v26);
    uint64_t v27 = swift_bridgeObjectRelease();
    v5(v27);
    sub_10003E0EC((uint64_t)v5);
  }
  else if (*(unsigned char *)(v0 + 32))
  {
    if (qword_10022C468 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v15 = sub_1000208FC();
    sub_100044798(v15);
    *(_OWORD *)(sub_100043CFC() + 16) = xmmword_1001C3130;
    uint64_t v16 = type metadata accessor for SQLDatabase();
    sub_1000441E8(v16);
    id v17 = (id)AMSLogKey();
    if (v17)
    {
      id v18 = v17;
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v21 = v20;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100046824();
      uint64_t v22 = swift_getMetatypeMetadata();
      sub_100045F54(v22);
      sub_100043DC0();
      sub_100020E44();
      Swift::String v44 = &type metadata for String;
      uint64_t v42 = v19;
      unint64_t v43 = v21;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100043DC0();
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100046824();
      uint64_t v32 = swift_getMetatypeMetadata();
      sub_100045F54(v32);
      sub_1000435D4((uint64_t)&v42, &qword_10022F490);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v45);
    LogMessage.init(stringLiteral:)();
    uint64_t v34 = *(void *)(v0 + 16);
    uint64_t v33 = *(void *)(v0 + 24);
    uint64_t v47 = &type metadata for String;
    uint64_t v45 = v34;
    uint64_t v46 = v33;
    swift_bridgeObjectRetain();
    static LogMessage.safe(_:)();
    sub_1000435D4((uint64_t)&v45, &qword_10022F490);
    uint64_t v35 = static os_log_type_t.error.getter();
    sub_10004841C(v35);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_10022C468 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v28 = sub_1000208FC();
    sub_100044798(v28);
    unint64_t v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    *(_OWORD *)(sub_100043CFC() + 16) = xmmword_1001C3130;
    uint64_t v48 = type metadata accessor for SQLDatabase();
    sub_1000441E8(v48);
    if ((id)AMSLogKey())
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_100035D70();
      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100046824();
      uint64_t v31 = swift_getMetatypeMetadata();
      sub_100045F54(v31);
      sub_100043DC0();
      sub_100020E44();
      Swift::String v44 = &type metadata for String;
      uint64_t v42 = v2;
      unint64_t v43 = 0xD00000000000001BLL;
      unint64_t v2 = v30;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100043DC0();
      sub_1000208D8();
      sub_100020BE4();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100046824();
      uint64_t v36 = swift_getMetatypeMetadata();
      sub_100045F54(v36);
      sub_1000435D4((uint64_t)&v42, &qword_10022F490);
      sub_100020E94();
      sub_100020BE4();
    }
    sub_10004377C((uint64_t)&v45);
    LogMessage.init(stringLiteral:)();
    uint64_t v37 = *(void *)(v0 + 16);
    uint64_t v38 = *(void *)(v0 + 24);
    uint64_t v47 = &type metadata for String;
    uint64_t v45 = v37;
    uint64_t v46 = v38;
    swift_bridgeObjectRetain();
    static LogMessage.safe(_:)();
    sub_1000435D4((uint64_t)&v45, &qword_10022F490);
    uint64_t v39 = static os_log_type_t.error.getter();
    sub_10004841C(v39);
    swift_bridgeObjectRelease();
    uint64_t v40 = swift_retain();
    unint64_t v41 = v2;
    sub_10002D078(v40, v0);
    if (v2)
    {
      swift_errorRelease();
      unint64_t v41 = 0;
    }
    static SQLDatabase.truncate(path:)();
    if (!v41) {
      static SQLDatabase.removeDatabase(path:)();
    }
  }
  sub_100020E2C();
}

uint64_t sub_10017F6D4(uint64_t a1, uint64_t a2)
{
  sub_1000438EC();
  if (qword_10022C5B0 != -1) {
    swift_once();
  }
  uint64_t v3 = static OS_dispatch_queue.getSpecific<A>(key:)();
  if (v6 != 2 && (v6 & 1) != 0)
  {
    sub_10017EFD4(a2);
    return swift_release();
  }
  else
  {
    __chkstk_darwin(v3);
    OS_dispatch_queue.sync<A>(execute:)();
    return swift_release();
  }
}

void sub_10017F810()
{
  sub_100044DC4();
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v5 = sub_1000208F0(v4);
  __chkstk_darwin(v5);
  sub_100011D4C();
  if (qword_10022C468 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v6 = sub_1000208FC();
  sub_100044798(v6);
  *(_OWORD *)(sub_10004759C() + 16) = xmmword_1001C3120;
  uint64_t v7 = type metadata accessor for SQLDatabase();
  sub_1000441E8(v7);
  if ((id)AMSLogKey())
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_100035D70();
    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100046824();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_100045F54(MetatypeMetadata);
    sub_100043DC0();
    sub_100020E44();
    void v14[3] = &type metadata for String;
    v14[0] = v0;
    v14[1] = v1;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100043DC0();
    sub_1000208D8();
    sub_100020BE4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    sub_100046824();
    uint64_t v9 = swift_getMetatypeMetadata();
    sub_100045F54(v9);
    sub_1000435D4((uint64_t)v14, &qword_10022F490);
    sub_100020E94();
    sub_100020BE4();
  }
  sub_10004377C((uint64_t)&v15);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  sub_10002064C();
  LogMessage.StringInterpolation.appendLiteral(_:)(v10);
  uint64_t v16 = &type metadata for Int;
  v15._uint64_t countAndFlagsBits = v3;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000435D4((uint64_t)&v15, &qword_10022F490);
  sub_100020E60();
  LogMessage.init(stringInterpolation:)();
  uint64_t v11 = static os_log_type_t.debug.getter();
  sub_10004841C(v11);
  swift_bridgeObjectRelease();
  v15._uint64_t countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  sub_100020640();
  v15._uint64_t countAndFlagsBits = 0xD000000000000016;
  v15._object = v12;
  v14[0] = v3;
  v13._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  SQLDatabase.execute(sql:parameters:)(v15, (Swift::OpaquePointer)&_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  sub_100020E2C();
}

uint64_t sub_10017FADC()
{
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Weak()
{
  return sub_10008034C();
}

uint64_t sub_10017FB38()
{
  return sub_100180458(v0);
}

uint64_t sub_10017FB54()
{
  return sub_10017FEEC(v0);
}

uint64_t sub_10017FB70()
{
  uint64_t v0 = sub_100044104();
  return _swift_deallocObject(v0, v1, v2);
}

void sub_10017FB80()
{
  sub_10017EFD4(v0);
}

uint64_t sub_10017FB9C()
{
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 64, 7);
}

const char *sub_10017FBEC()
{
  return sub_10017E588(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56));
}

uint64_t sub_10017FBFC()
{
  swift_arrayDestroy();
  sub_100044104();
  return swift_deallocClassInstance();
}

uint64_t sub_10017FC38()
{
  swift_arrayDestroy();
  sub_100044104();
  return swift_deallocClassInstance();
}

uint64_t sub_10017FC74()
{
  return sub_1001803E8(*(void *)(v0 + 16), *(sqlite3_stmt **)(v0 + 24));
}

void sub_10017FC90()
{
  sub_100044248(*(void *)(v0 + 16), *(sqlite3_stmt **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_10017FCB0()
{
  return sub_100180384(*(void *)(v0 + 16), *(sqlite3_stmt **)(v0 + 24));
}

void sub_10017FCCC()
{
  sub_1001800E8(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_10017FCEC()
{
  return sub_100042554(*(void *)(v0 + 16), *(void *)(v0 + 24), *(_OWORD **)(v0 + 32));
}

uint64_t sub_10017FD0C()
{
  return sub_10004018C(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_10017FD30()
{
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10017FD70()
{
  return sub_1001802C8(*(sqlite3 **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(sqlite3_stmt ***)(v0 + 40), *(uint64_t (**)(void))(v0 + 48));
}

Swift::Int_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SQLRow.integer(column:)(Swift::Int column)
{
  Swift::Int v1 = sub_10017FDF4(column);
  result.value = v1;
  result.is_nil = v2;
  return result;
}

Swift::Int_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SQLRow.integer(name:)(Swift::String name)
{
  Swift::Int v1 = sub_10017FE38();
  result.value = v1;
  result.is_nil = v2;
  return result;
}

Swift::Double_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SQLRow.double(column:)(Swift::Int column)
{
  char v1 = sub_10017FDF4(column);
  result.value = v2;
  result.is_nil = v1;
  return result;
}

uint64_t sub_10017FDF4(uint64_t a1)
{
  uint64_t result = sub_10003F688(a1);
  if (v1) {
    return v3;
  }
  return result;
}

Swift::Double_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SQLRow.double(name:)(Swift::String name)
{
  char v1 = sub_10017FE38();
  result.value = v2;
  result.is_nil = v1;
  return result;
}

uint64_t sub_10017FE38()
{
  uint64_t result = sub_1000491CC();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t SQLRow.data(column:)(uint64_t a1)
{
  uint64_t result = sub_10017FEF4(a1, &v3);
  if (!v1) {
    return v3;
  }
  return result;
}

uint64_t SQLRow.data(name:)()
{
  uint64_t result = sub_10004B6C0(&v2);
  if (!v0) {
    return v2;
  }
  return result;
}

Swift::String_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SQLRow.string(column:)(Swift::Int column)
{
  uint64_t v1 = sub_10017FFEC(column);
  result.value._object = v2;
  result.value._uint64_t countAndFlagsBits = v1;
  return result;
}

Swift::String_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SQLRow.string(name:)(Swift::String name)
{
  uint64_t v1 = sub_10003F9D0();
  result.value._object = v2;
  result.value._uint64_t countAndFlagsBits = v1;
  return result;
}

uint64_t sub_10017FEEC(uint64_t result)
{
  *(void *)(result + 16) = 0;
  return result;
}

uint64_t sub_10017FEF4@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    memset(v10, 0, sizeof(v10));
    uint64_t v6 = swift_retain();
    sub_10004242C(v6, v3, a1, v10);
    swift_release();
    sub_100043410((uint64_t)v10, (uint64_t)&v9);
    sub_100043478(&qword_10022F490);
    if ((swift_dynamicCast() & 1) == 0) {
      *a2 = xmmword_1001C81A0;
    }
    return sub_1000423CC((uint64_t)v10);
  }
  else
  {
    sub_10017D8D4();
    swift_allocError();
    unsigned char *v8 = 1;
    return swift_willThrow();
  }
}

uint64_t sub_10017FFEC(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    memset(v8, 0, sizeof(v8));
    uint64_t v4 = swift_retain();
    sub_10004242C(v4, v2, a1, v8);
    swift_release();
    sub_100043410((uint64_t)v8, (uint64_t)&v7);
    sub_100043478(&qword_10022F490);
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
    sub_1000423CC((uint64_t)v8);
    return v9;
  }
  else
  {
    sub_10017D8D4();
    swift_allocError();
    *uint64_t v6 = 1;
    return swift_willThrow();
  }
}

void sub_1001800E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1000427C4();
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7)
  {
    Swift::String v8 = String.lowercased()();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_100042294(v8._countAndFlagsBits, (uint64_t)v8._object, v7);
    char v11 = v10;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      sub_1000422DC(v9, v12);
      if (!v4) {
        sub_100042698((uint64_t)v12, a4);
      }
    }
  }
}

uint64_t sub_1001801B4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 32);
  return swift_retain();
}

uint64_t sub_100180200(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 32) = v2;
  swift_retain();
  return swift_release();
}

uint64_t SQLStatement.currentRow.getter()
{
  return swift_retain();
}

uint64_t SQLStatement.sql.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1001802C8(sqlite3 *a1, uint64_t a2, uint64_t a3, sqlite3_stmt **a4, uint64_t (*a5)(void))
{
  uint64_t v8 = String.utf8CString.getter();
  sqlite3_prepare_v2(a1, (const char *)(v8 + 32), -1, a4, 0);
  swift_release();
  sub_100045474();
  return a5();
}

uint64_t sub_100180384(uint64_t a1, sqlite3_stmt *a2)
{
  sub_10004119C();
  *(void *)(a1 + 56) = 0;
  sqlite3_finalize(a2);
  sub_100045474();
  return v4();
}

uint64_t sub_1001803E8(uint64_t a1, sqlite3_stmt *a2)
{
  sub_10004119C();
  sqlite3_reset(a2);
  sub_100045474();
  return v3();
}

uint64_t sub_100180458(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 + 32);
  swift_beginAccess();
  if (*(void *)(a1 + 32))
  {
    swift_retain();
    sub_100046A84();
    swift_release();
  }
  *uint64_t v2 = 0;
  return swift_release();
}

uint64_t sub_1001804D8()
{
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SQLite3Status.assertOk()()
{
  if (v0)
  {
    char v1 = v0;
    sub_10007CA54();
    swift_allocError();
    *uint64_t v2 = v1;
    swift_willThrow();
  }
}

void sub_1001805E8()
{
  qword_1002441B0 = -1;
}

uint64_t sub_1001805F8()
{
  return String.init<A>(describing:)();
}

uint64_t sub_100180628(uint64_t a1)
{
  unint64_t v2 = sub_100180E68();
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_100180664(uint64_t a1)
{
  unint64_t v2 = sub_100180E68();
  return Error<>._code.getter(a1, v2);
}

uint64_t sub_1001806A4()
{
  return sub_1001805F8();
}

uint64_t static SQLParameter.== infix(_:_:)(uint64_t a1, unint64_t a2, char a3, uint64_t a4, unint64_t a5, char a6)
{
  switch(a3)
  {
    case 1:
      if (a6 != 1) {
        goto LABEL_22;
      }
      BOOL v12 = a1 == a4;
      goto LABEL_11;
    case 2:
      if (a6 != 2) {
        goto LABEL_22;
      }
      BOOL v12 = *(double *)&a1 == *(double *)&a4;
LABEL_11:
      uint64_t result = v12;
      break;
    case 3:
      if (a6 != 3) {
        goto LABEL_22;
      }
      if (a1 == a4 && a2 == a5)
      {
LABEL_23:
        uint64_t result = 1;
      }
      else
      {
        sub_100049670();
        uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      break;
    case 4:
      if (a6 != 4 || a5 | a4) {
        goto LABEL_22;
      }
      goto LABEL_23;
    default:
      if (a6)
      {
LABEL_22:
        uint64_t result = 0;
      }
      else
      {
        sub_1000A2E28(a1, a2, 0);
        sub_1000A2E28(a4, a5, 0);
        sub_100049670();
        char v10 = static Data.== infix(_:_:)();
        sub_100044D8C(a4, a5, 0);
        sub_100044D8C(a1, a2, 0);
        uint64_t result = v10 & 1;
      }
      break;
  }
  return result;
}

uint64_t sub_100180818(uint64_t a1, uint64_t a2)
{
  return static SQLParameter.== infix(_:_:)(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

const char *SQLite3Status.errorDescription.getter(char a1)
{
  uint64_t result = sqlite3_errstr(dword_1001C84F8[a1]);
  if (result)
  {
    return (const char *)String.init(cString:)();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100180878()
{
  return SQLite3Status.hashValue.getter(*v0);
}

uint64_t sub_100180880(uint64_t a1)
{
  unint64_t v2 = sub_100180EB4();
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_1001808BC(uint64_t a1)
{
  unint64_t v2 = sub_100180EB4();
  return Error<>._code.getter(a1, v2);
}

const char *sub_1001808F8()
{
  return SQLite3Status.errorDescription.getter(*v0);
}

unint64_t sub_100180904()
{
  unint64_t result = qword_100233680;
  if (!qword_100233680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100233680);
  }
  return result;
}

uint64_t sub_100180958(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1000A2E28(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SQLParameter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1000A2E28(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_100044D8C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SQLParameter(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_100044D8C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SQLParameter(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFC && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 251;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 4) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLParameter(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100180AC8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_100180AE0(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)unint64_t result = a2 - 4;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

void type metadata accessor for SQLParameter()
{
}

uint64_t getEnumTagSinglePayload for SQLite3Status(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE2)
  {
    if (a2 + 30 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 30) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 31;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1F;
  int v5 = v6 - 31;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for SQLite3Status(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 30 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 30) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE1)
  {
    unsigned int v6 = ((a2 - 226) >> 8) + 1;
    *unint64_t result = a2 + 30;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100180C58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 30;
        break;
    }
  }
  return result;
}

void type metadata accessor for SQLite3Status()
{
}

uint64_t sub_100180C8C(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 6) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v5 = v6 - 7;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *sub_100180D14(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100180DE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

void type metadata accessor for SQLError()
{
}

unint64_t sub_100180E1C()
{
  unint64_t result = qword_100233688;
  if (!qword_100233688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100233688);
  }
  return result;
}

unint64_t sub_100180E68()
{
  unint64_t result = qword_100233690;
  if (!qword_100233690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100233690);
  }
  return result;
}

unint64_t sub_100180EB4()
{
  unint64_t result = qword_100233698;
  if (!qword_100233698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100233698);
  }
  return result;
}

uint64_t sub_100180F00(uint64_t a1, void (*a2)(void *, uint64_t, uint64_t *))
{
  sub_10005370C(a1, v18);
  uint64_t v3 = v18[0];
  uint64_t v14 = v18[1];
  int64_t v4 = v18[3];
  unint64_t v5 = v18[4];
  int64_t v19 = (unint64_t)(v18[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v7 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v8 = v7 | (v4 << 6);
  while (1)
  {
    Swift::String v13 = *(void **)(*(void *)(v3 + 48) + 8 * v8);
    sub_1001844F8(*(void *)(v3 + 56) + 40 * v8, (uint64_t)&v16, (uint64_t *)&unk_10022E610);
    Swift::String v15 = v13;
    a2(v13, v16, &v17);
    uint64_t result = sub_10002CC0C((uint64_t)&v15, &qword_1002337A8);
    if (v5) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v9 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v9 >= v19) {
      return swift_release();
    }
    unint64_t v10 = *(void *)(v14 + 8 * v9);
    int64_t v11 = v4 + 1;
    if (!v10)
    {
      int64_t v11 = v4 + 2;
      if (v4 + 2 >= v19) {
        return swift_release();
      }
      unint64_t v10 = *(void *)(v14 + 8 * v11);
      if (!v10)
      {
        int64_t v11 = v4 + 3;
        if (v4 + 3 >= v19) {
          return swift_release();
        }
        unint64_t v10 = *(void *)(v14 + 8 * v11);
        if (!v10)
        {
          int64_t v11 = v4 + 4;
          if (v4 + 4 >= v19) {
            return swift_release();
          }
          unint64_t v10 = *(void *)(v14 + 8 * v11);
          if (!v10)
          {
            int64_t v11 = v4 + 5;
            if (v4 + 5 >= v19) {
              return swift_release();
            }
            unint64_t v10 = *(void *)(v14 + 8 * v11);
            if (!v10)
            {
              int64_t v12 = v4 + 6;
              while (v12 < v19)
              {
                unint64_t v10 = *(void *)(v14 + 8 * v12++);
                if (v10)
                {
                  int64_t v11 = v12 - 1;
                  goto LABEL_18;
                }
              }
              return swift_release();
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v5 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
    int64_t v4 = v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001810DC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  int64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1001811A4(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v5 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v3 = v6;
    BOOL v6 = v6 || v5 == v2;
    if (v6) {
      return v3;
    }
  }
  __break(1u);
  return result;
}

void sub_100181204(uint64_t a1, void *a2)
{
}

void sub_10018120C(uint64_t a1, void *a2)
{
}

void sub_100181214(uint64_t a1, void *a2)
{
  BOOL v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_100181280()
{
  type metadata accessor for SubscriptionsController();
  swift_allocObject();
  uint64_t result = sub_1001812BC();
  qword_1002441B8 = result;
  return result;
}

uint64_t sub_1001812BC()
{
  type metadata accessor for AMSSubscriptionEntitlementsMediaType(0);
  sub_10004D510(0, &qword_1002337B0);
  sub_1001845F8(&qword_1002337B8, type metadata accessor for AMSSubscriptionEntitlementsMediaType);
  *(void *)(v0 + 16) = Dictionary.init(dictionaryLiteral:)();
  *(void *)(v0 + 24) = [objc_allocWithZone((Class)NSLock) init];
  sub_100182D34();
  return v0;
}

void sub_10018137C()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  BOOL v3 = v2;
  uint64_t v33 = v4;
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v6 = sub_1000208F0(v5);
  __chkstk_darwin(v6);
  sub_100020EAC();
  if (qword_10022C4C8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v7 = type metadata accessor for LogMessage();
  sub_100044798(v7);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v32 = type metadata accessor for SubscriptionsController();
  uint64_t v38 = (void *)v32;
  v37[0] = v0;
  swift_retain();
  id v8 = (id)AMSLogKey();
  if (v8)
  {
    int64_t v9 = v8;
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100044E44();
    sub_1000211AC();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_100043AFC(MetatypeMetadata);
    sub_10002CC0C((uint64_t)&v34, &qword_10022F490);
    sub_100020E44();
    uint64_t v36 = &type metadata for String;
    uint64_t v34 = v31;
    uint64_t v35 = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v34, &qword_10022F490);
    sub_1000208D8();
    sub_100045E18();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100044E44();
    sub_1000211AC();
    uint64_t v13 = swift_getMetatypeMetadata();
    sub_100043AFC(v13);
    sub_10002CC0C((uint64_t)&v34, &qword_10022F490);
    sub_100020E94();
    sub_100045E18();
  }
  sub_10004377C((uint64_t)v37);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v14._object = (void *)0x80000001001D7D70;
  LogMessage.StringInterpolation.appendLiteral(_:)(v14);
  uint64_t v38 = &type metadata for Int;
  v37[0] = v33;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CC0C((uint64_t)v37, &qword_10022F490);
  sub_1000464C8();
  uint64_t v38 = &type metadata for Int;
  v37[0] = v3;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CC0C((uint64_t)v37, &qword_10022F490);
  v15._uint64_t countAndFlagsBits = 41;
  v15._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v15);
  sub_100045E18();
  uint64_t v16 = static os_log_type_t.info.getter();
  sub_10004841C(v16);
  swift_bridgeObjectRelease();
  if ((sub_1001811A4((uint64_t)v3, (uint64_t)&off_10020C4D0) & 1) == 0) {
    goto LABEL_14;
  }
  uint64_t v17 = *(void **)(v1 + 24);
  swift_retain();
  [v17 lock];
  swift_beginAccess();
  uint64_t v18 = *(void *)(v1 + 16);
  if (*(void *)(v18 + 16) && (unint64_t v19 = sub_1000891B8((Swift::UInt)v33), (v20 & 1) != 0))
  {
    unint64_t v21 = *(void **)(*(void *)(v18 + 56) + 8 * v19);
    id v22 = v21;
  }
  else
  {
    unint64_t v21 = 0;
  }
  objc_msgSend(v17, "unlock", v31);
  swift_release();
  if (v21)
  {
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v38 = (void *)v32;
    v37[0] = v1;
    swift_retain();
    id v23 = (id)AMSLogKey();
    if (v23)
    {
      uint64_t v24 = v23;
      uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v27 = v26;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100044E44();
      sub_1000211AC();
      uint64_t v28 = swift_getMetatypeMetadata();
      sub_100043AFC(v28);
      sub_100048DBC();
      sub_100020E44();
      uint64_t v36 = &type metadata for String;
      uint64_t v34 = v25;
      uint64_t v35 = v27;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100048DBC();
      sub_1000208D8();
      sub_100045E18();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_100044E44();
      sub_1000211AC();
      uint64_t v29 = swift_getMetatypeMetadata();
      sub_100043AFC(v29);
      sub_10002CC0C((uint64_t)&v34, &qword_10022F490);
      sub_100020E94();
      sub_100045E18();
    }
    sub_10004377C((uint64_t)v37);
    LogMessage.init(stringLiteral:)();
    uint64_t v30 = static os_log_type_t.debug.getter();
    sub_10004841C(v30);
    swift_bridgeObjectRelease();
    [self promiseWithResult:v21];
  }
  else
  {
LABEL_14:
    sub_100183660(v33, v3);
  }
  sub_100020FDC();
}

void sub_100181874()
{
  sub_1000209F4();
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  sub_100020DEC();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_100020EAC();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for DispatchQoS();
  sub_100020DEC();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_100020EAC();
  uint64_t v14 = v13 - v12;
  if (qword_10022C588 != -1) {
    swift_once();
  }
  v16[4] = sub_1001845F0;
  v16[5] = v0;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_10002CD0C;
  void v16[3] = &unk_100217008;
  Swift::String v15 = _Block_copy(v16);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  sub_1001845F8((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_1000234D8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v1);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v14, v8);
  swift_release();
  sub_100020FDC();
}

void sub_100181AB4()
{
}

void sub_100181ADC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_10018287C();
  if (v5)
  {
    if (qword_10022C4C8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
    uint64_t v38 = (void *)type metadata accessor for SubscriptionsController();
    aBlock[0] = v1;
    swift_retain();
    id v16 = (id)AMSLogKey();
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v20 = v19;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v21._uint64_t countAndFlagsBits = 0;
      v21._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v21);
      sub_100049788(aBlock, (uint64_t)v38);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v41 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v41, &qword_10022F490);
      v23._uint64_t countAndFlagsBits = 5972026;
      v23._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v41 = v18;
      uint64_t v42 = v20;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v41, &qword_10022F490);
      v24._uint64_t countAndFlagsBits = 93;
      v24._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v24);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v33._uint64_t countAndFlagsBits = 0;
      v33._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v33);
      sub_100049788(aBlock, (uint64_t)v38);
      uint64_t v34 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v41 = v34;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v41, &qword_10022F490);
      v35._uint64_t countAndFlagsBits = 58;
      v35._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v35);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)aBlock);
    LogMessage.init(stringLiteral:)();
    uint64_t v38 = &type metadata for UInt;
    aBlock[0] = a1;
    static LogMessage.safe(_:)();
    sub_10002CC0C((uint64_t)aBlock, &qword_10022F490);
    uint64_t v36 = static os_log_type_t.default.getter();
    sub_10004841C(v36);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = (void **)v4;
    if (qword_10022C4C8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
    uint64_t v38 = (void *)type metadata accessor for SubscriptionsController();
    aBlock[0] = v1;
    swift_retain();
    id v7 = (id)AMSLogKey();
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v11 = v10;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v12._uint64_t countAndFlagsBits = 0;
      v12._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v12);
      sub_100049788(aBlock, (uint64_t)v38);
      uint64_t v13 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v41 = v13;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v41, &qword_10022F490);
      v14._uint64_t countAndFlagsBits = 5972026;
      v14._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v14);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v41 = v9;
      uint64_t v42 = v11;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v41, &qword_10022F490);
      v15._uint64_t countAndFlagsBits = 93;
      v15._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v15);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v25._uint64_t countAndFlagsBits = 0;
      v25._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      sub_100049788(aBlock, (uint64_t)v38);
      uint64_t v26 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v41 = v26;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v41, &qword_10022F490);
      v27._uint64_t countAndFlagsBits = 58;
      v27._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)aBlock);
    LogMessage.init(stringLiteral:)();
    uint64_t v38 = &type metadata for UInt;
    aBlock[0] = a1;
    static LogMessage.safe(_:)();
    sub_10002CC0C((uint64_t)aBlock, &qword_10022F490);
    uint64_t v28 = static os_log_type_t.default.getter();
    sub_10004841C(v28);
    swift_bridgeObjectRelease();
    sub_100182234();
    id v29 = sub_100183660(v6, 0);
    uint64_t v30 = swift_allocObject();
    swift_weakInit();
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = v30;
    *(void *)(v31 + 24) = a1;
    uint64_t v39 = sub_1001845E8;
    uint64_t v40 = v31;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10018120C;
    uint64_t v38 = &unk_100216FE0;
    uint64_t v32 = _Block_copy(aBlock);
    swift_release();
    [v29 addSuccessBlock:v32];
    _Block_release(v32);
  }
}

uint64_t sub_1001821C0(uint64_t a1, uint64_t a2, Swift::UInt a3)
{
  char v5 = *(void **)(a1 + 24);
  [v5 lock];
  sub_10018272C(a2, a3, &v7);
  [v5 unlock];
  swift_release();
  return v7;
}

void sub_100182234()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  sub_100011D4C();
  uint64_t v5 = sub_10018287C();
  if (v6)
  {
    if (qword_10022C4C8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v15 = type metadata accessor for LogMessage();
    sub_100044798(v15);
    *(_OWORD *)(sub_1000471E4() + 16) = xmmword_1001C3120;
    uint64_t v34 = (void *)type metadata accessor for SubscriptionsController();
    v33[0] = v0;
    swift_retain();
    id v16 = (id)AMSLogKey();
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v20 = v19;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      uint64_t v21 = sub_100043D30(v33);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v30 = v21;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v30, &qword_10022F490);
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v30 = v18;
      uint64_t v31 = v20;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v30, &qword_10022F490);
      sub_1000208D8();
      sub_10001D6F8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100049788(v33, (uint64_t)v34);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v30 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v30, &qword_10022F490);
      sub_100020E94();
      sub_10001D6F8();
    }
    sub_10004377C((uint64_t)v33);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v27._uint64_t countAndFlagsBits = 0xD000000000000024;
    v27._object = (void *)0x80000001001D7D20;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    uint64_t v34 = &type metadata for UInt;
    v33[0] = v2;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v33, &qword_10022F490);
    v28._uint64_t countAndFlagsBits = 0x746E656D67657320;
    v28._object = (void *)0xE800000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    LogMessage.init(stringInterpolation:)();
    uint64_t v29 = static os_log_type_t.debug.getter();
    sub_10004841C(v29);
    swift_bridgeObjectRelease();
  }
  else
  {
    Swift::UInt v7 = v5;
    if (qword_10022C4C8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    uint64_t v8 = type metadata accessor for LogMessage();
    sub_100044798(v8);
    *(_OWORD *)(sub_1000460A0() + 16) = xmmword_1001C3120;
    uint64_t v34 = (void *)type metadata accessor for SubscriptionsController();
    v33[0] = v0;
    swift_retain();
    id v9 = (id)AMSLogKey();
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;

      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100049788(v33, (uint64_t)v34);
      uint64_t v14 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v30 = v14;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v30, &qword_10022F490);
      sub_100020E44();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v30 = v11;
      uint64_t v31 = v13;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v30, &qword_10022F490);
      sub_1000208D8();
      sub_100011DB4();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      uint64_t v22 = sub_100043D30(v33);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v30 = v22;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v30, &qword_10022F490);
      sub_100020E94();
      sub_100011DB4();
    }
    sub_10004377C((uint64_t)v33);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v23._object = (void *)0x80000001001D7D50;
    v23._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    uint64_t v34 = &type metadata for UInt;
    v33[0] = v2;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v33, &qword_10022F490);
    sub_100020E60();
    sub_100011DB4();
    uint64_t v24 = static os_log_type_t.debug.getter();
    sub_10004841C(v24);
    swift_bridgeObjectRelease();
    uint64_t v25 = swift_retain();
  }
  sub_100020FDC();
}

uint64_t sub_10018272C@<X0>(uint64_t a1@<X0>, Swift::UInt a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  unint64_t v6 = sub_1000891B8(a2);
  uint64_t v7 = 0;
  if (v8)
  {
    unint64_t v9 = v6;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v5;
    uint64_t v11 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    Swift::Int v12 = *(void *)(v11 + 24);
    sub_100043478(&qword_10022E5F8);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v12);
    uint64_t v7 = *(void *)(*(void *)(v14 + 56) + 8 * v9);
    type metadata accessor for AMSSubscriptionEntitlementsMediaType(0);
    sub_10004D510(0, &qword_1002337B0);
    sub_1001845F8(&qword_1002337B8, type metadata accessor for AMSSubscriptionEntitlementsMediaType);
    _NativeDictionary._delete(at:)();
    *uint64_t v5 = v14;
    swift_bridgeObjectRelease();
  }
  *a3 = v7;
  return swift_endAccess();
}

uint64_t sub_10018287C()
{
  return 3;
}

void sub_100182904()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  sub_100011D4C();
  if (qword_10022C4C8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v5 = type metadata accessor for LogMessage();
  sub_100044798(v5);
  *(_OWORD *)(sub_1000471E4() + 16) = xmmword_1001C3120;
  Swift::String v23 = (void *)type metadata accessor for SubscriptionsController();
  v22[0] = v0;
  swift_retain();
  id v6 = (id)AMSLogKey();
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100049788(v22, (uint64_t)v23);
    swift_getDynamicType();
    swift_getMetatypeMetadata();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100048DBC();
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v20[0] = v8;
    v20[1] = v10;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100048DBC();
    sub_1000208D8();
    sub_10001D6F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    sub_100049788(v22, (uint64_t)v23);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v20[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v20, &qword_10022F490);
    sub_100020E94();
    sub_10001D6F8();
  }
  sub_10004377C((uint64_t)v22);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._uint64_t countAndFlagsBits = 0xD000000000000039;
  v12._object = (void *)0x80000001001D7CC0;
  LogMessage.StringInterpolation.appendLiteral(_:)(v12);
  Swift::String v23 = &type metadata for UInt;
  v22[0] = v2;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CC0C((uint64_t)v22, &qword_10022F490);
  v13._uint64_t countAndFlagsBits = 41;
  v13._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v13);
  sub_10001D6F8();
  uint64_t v14 = static os_log_type_t.default.getter();
  sub_10004841C(v14);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D330);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3130;
  *(void *)(inited + 32) = 0x6E696769726FLL;
  *(void *)(inited + 40) = 0xE600000000000000;
  strcpy((char *)(inited + 48), "amsengagementd");
  *(unsigned char *)(inited + 63) = -18;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = 0x707954746E657665;
  *(void *)(inited + 88) = 0xE900000000000065;
  *(void *)(inited + 96) = 0xD000000000000013;
  *(void *)(inited + 104) = 0x80000001001D7D00;
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 128) = 0x746E656D676573;
  *(void *)(inited + 168) = &type metadata for UInt;
  *(void *)(inited + 136) = 0xE700000000000000;
  *(void *)(inited + 144) = v2;
  uint64_t v16 = Dictionary.init(dictionaryLiteral:)();
  sub_10004D510(0, (unint64_t *)&qword_100232020);
  id v17 = sub_100051DF8();
  id v18 = [objc_allocWithZone((Class)AMSEngagement) initWithBag:v17];

  sub_1000119BC(v16);
  swift_bridgeObjectRelease();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();

  sub_100020FDC();
}

void sub_100182D34()
{
  type metadata accessor for Name(0);
  sub_100043478((uint64_t *)&unk_10022E610);
  sub_1001845F8((unint64_t *)&qword_10022CC50, type metadata accessor for Name);
  uint64_t v23 = Dictionary.init(dictionaryLiteral:)();
  id v0 = sub_100049684(ASDSubscriptionEntitlementsActivityDidChangeNotification);
  sub_1000886B8((uint64_t)v21, v0);
  uint64_t v22 = 0;
  memset(v21, 0, sizeof(v21));
  id v1 = ASDSubscriptionEntitlementsNewsDidChangeNotification;
  sub_10004CF90(v1, v2, v3);
  id v4 = sub_100049684(ASDSubscriptionEntitlementsAppStoreDidChangeNotification);
  sub_10004CF90(v4, v5, v6);
  id v7 = sub_100049684(ASDSubscriptionEntitlementsTVDidChangeNotification);
  sub_10004CF90(v7, v8, v9);
  id v10 = sub_100049684(ASDSubscriptionEntitlementsiCloudDidChangeNotification);
  sub_10004CF90(v10, v11, v12);
  id v13 = sub_100049684(ASDSubscriptionEntitlementsPodcastDidChangeNotification);
  sub_10004CF90(v13, v14, v15);
  id v16 = sub_100049684(ASDSubscriptionEntitlementsHWBundleDidChangeNotification);
  sub_10004CF90(v16, v17, v18);
  uint64_t v19 = swift_bridgeObjectRetain();
  sub_100180F00(v19, (void (*)(void *, uint64_t, uint64_t *))sub_1001844F0);
  swift_bridgeObjectRelease_n();
  id v20 = [self sharedInstance];
}

uint64_t sub_100182EF4(uint64_t a1, void **a2, uint64_t a3, void **a4)
{
  uint64_t v41 = a1;
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v7 - 8);
  Swift::String v50 = a2;
  sub_1001844F8(a3, (uint64_t)v51, &qword_10022F490);
  if (qword_10022C4C8 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_100244130;
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  Swift::String v44 = (void *)type metadata accessor for SubscriptionsController();
  aBlock = a4;
  swift_retain();
  id v9 = (id)AMSLogKey();
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v40 = v8;
    uint64_t v13 = v12;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v14._uint64_t countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    sub_100049788(&aBlock, (uint64_t)v44);
    uint64_t DynamicType = swift_getDynamicType();
    *((void *)&v48 + 1) = swift_getMetatypeMetadata();
    *(void *)&long long v47 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v47, &qword_10022F490);
    v16._uint64_t countAndFlagsBits = 5972026;
    v16._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    *((void *)&v48 + 1) = &type metadata for String;
    *(void *)&long long v47 = v11;
    *((void *)&v47 + 1) = v13;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v47, &qword_10022F490);
    v17._uint64_t countAndFlagsBits = 93;
    v17._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v18._uint64_t countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    sub_100049788(&aBlock, (uint64_t)v44);
    uint64_t v19 = swift_getDynamicType();
    *((void *)&v48 + 1) = swift_getMetatypeMetadata();
    *(void *)&long long v47 = v19;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v47, &qword_10022F490);
    v20._uint64_t countAndFlagsBits = 58;
    v20._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&aBlock);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v21._uint64_t countAndFlagsBits = 0x6E6976726573624FLL;
  v21._object = (void *)0xEA00000000002067;
  LogMessage.StringInterpolation.appendLiteral(_:)(v21);
  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  Swift::String v44 = &type metadata for String;
  aBlock = (void **)v22;
  v43[0] = v23;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CC0C((uint64_t)&aBlock, &qword_10022F490);
  v24._uint64_t countAndFlagsBits = 0x7365676E61686320;
  v24._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v24);
  LogMessage.init(stringInterpolation:)();
  uint64_t v25 = static os_log_type_t.info.getter();
  sub_10004841C(v25);
  swift_bridgeObjectRelease();
  id v26 = [self defaultCenter];
  aBlock = a2;
  sub_1001844F8((uint64_t)v51, (uint64_t)v43, &qword_10022F490);
  Swift::String v27 = v45;
  if (v45)
  {
    Swift::String v28 = sub_100049788(v43, (uint64_t)v45);
    uint64_t v29 = a2;
    uint64_t v30 = *((void *)v27 - 1);
    __chkstk_darwin(v28);
    uint64_t v32 = (char *)&v40 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v30 + 16))(v32);
    uint64_t v33 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t (*)(uint64_t)))(v30 + 8))(v32, v27);
    a2 = v29;
    sub_10004377C((uint64_t)v43);
  }
  else
  {
    uint64_t v33 = 0;
  }
  uint64_t v34 = swift_allocObject();
  swift_weakInit();
  *(void *)&long long v47 = a2;
  sub_1001844F8((uint64_t)v51, (uint64_t)&v47 + 8, &qword_10022F490);
  uint64_t v35 = swift_allocObject();
  long long v36 = v48;
  *(_OWORD *)(v35 + 24) = v47;
  *(void *)(v35 + 16) = v34;
  *(_OWORD *)(v35 + 40) = v36;
  *(void *)(v35 + 56) = v49;
  uint64_t v45 = sub_1001845DC;
  uint64_t v46 = v35;
  aBlock = _NSConcreteStackBlock;
  v43[0] = 1107296256;
  v43[1] = sub_10018356C;
  Swift::String v44 = &unk_100216F90;
  uint64_t v37 = _Block_copy(&aBlock);
  swift_release();
  id v38 = [v26 addObserverForName:v41 object:v33 queue:0 usingBlock:v37];
  _Block_release(v37);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return sub_10002CC0C((uint64_t)&v50, (uint64_t *)&unk_10022E610);
}

uint64_t sub_10018350C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100181ADC(*a3);
    return swift_release();
  }
  return result;
}

uint64_t sub_10018356C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Notification();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id sub_100183660(void **a1, void **a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v7 = sub_1000208F0(v6);
  __chkstk_darwin(v7);
  sub_100011D4C();
  if (qword_10022C4C8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v8 = type metadata accessor for LogMessage();
  sub_100044798(v8);
  *(_OWORD *)(sub_1000460A0() + 16) = xmmword_1001C3120;
  uint64_t v29 = (void *)type metadata accessor for SubscriptionsController();
  aBlock = v2;
  swift_retain();
  id v9 = (id)AMSLogKey();
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100049788(&aBlock, (uint64_t)v29);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v32[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v32, &qword_10022F490);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v32[0] = v11;
    v32[1] = v13;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v32, &qword_10022F490);
    sub_1000208D8();
    sub_100011DB4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    uint64_t v15 = sub_100043D30(&aBlock);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v32[0] = v15;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v32, &qword_10022F490);
    sub_100020E94();
    sub_100011DB4();
  }
  sub_10004377C((uint64_t)&aBlock);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._object = (void *)0x80000001001D7BC0;
  v16._uint64_t countAndFlagsBits = 0xD000000000000019;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  uint64_t v29 = &type metadata for Int;
  aBlock = a1;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CC0C((uint64_t)&aBlock, &qword_10022F490);
  sub_1000464C8();
  uint64_t v29 = &type metadata for Int;
  aBlock = a2;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CC0C((uint64_t)&aBlock, &qword_10022F490);
  v17._uint64_t countAndFlagsBits = 41;
  v17._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v17);
  sub_100011DB4();
  uint64_t v18 = static os_log_type_t.debug.getter();
  sub_10004841C(v18);
  swift_bridgeObjectRelease();
  id v19 = [objc_allocWithZone((Class)AMSSubscriptionEntitlementsTask) initWithMediaType:a1];
  [v19 setCachePolicy:a2];
  id v20 = [v19 performExternalLookup];
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v3;
  *(void *)(v21 + 24) = a1;
  uint64_t v30 = sub_100184444;
  uint64_t v31 = (void *)v21;
  aBlock = _NSConcreteStackBlock;
  uint64_t v27 = 1107296256;
  Swift::String v28 = sub_10018120C;
  uint64_t v29 = &unk_100216EC8;
  uint64_t v22 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  [v20 addSuccessBlock:v22];
  _Block_release(v22);
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = v3;
  void v23[3] = a1;
  v23[4] = a2;
  uint64_t v30 = sub_100184484;
  uint64_t v31 = v23;
  aBlock = _NSConcreteStackBlock;
  uint64_t v27 = 1107296256;
  Swift::String v28 = sub_100181204;
  uint64_t v29 = &unk_100216F18;
  Swift::String v24 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  [v20 addErrorBlock:v24];
  _Block_release(v24);

  return v20;
}

uint64_t sub_100183ACC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)(a2 + 24);
  swift_retain();
  id v7 = a1;
  [v6 lock];
  sub_100183B58(a2, a3, v7);
  [v6 unlock];

  return swift_release();
}

uint64_t sub_100183B58(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v6 - 8);
  if (qword_10022C4C8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v30 = (void *)type metadata accessor for SubscriptionsController();
  v29[0] = a1;
  swift_retain();
  id v7 = (id)AMSLogKey();
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v12._uint64_t countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    sub_100049788(v29, (uint64_t)v30);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v27[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v27, &qword_10022F490);
    v14._uint64_t countAndFlagsBits = 5972026;
    v14._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    uint64_t MetatypeMetadata = &type metadata for String;
    v27[0] = v9;
    v27[1] = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v27, &qword_10022F490);
    v15._uint64_t countAndFlagsBits = 93;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v16._uint64_t countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    sub_100049788(v29, (uint64_t)v30);
    uint64_t v17 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v27[0] = v17;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v27, &qword_10022F490);
    v18._uint64_t countAndFlagsBits = 58;
    v18._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v29);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v19._object = (void *)0x80000001001D7C10;
  v19._uint64_t countAndFlagsBits = 0xD000000000000012;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  uint64_t v30 = &type metadata for Int;
  v29[0] = a2;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CC0C((uint64_t)v29, &qword_10022F490);
  v20._uint64_t countAndFlagsBits = 0x3A746C7573657220;
  v20._object = (void *)0xE900000000000020;
  LogMessage.StringInterpolation.appendLiteral(_:)(v20);
  id v21 = [a3 exportObject];
  uint64_t v22 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v30 = (void *)sub_100043478(&qword_10022D6F0);
  v29[0] = v22;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CC0C((uint64_t)v29, &qword_10022F490);
  v23._uint64_t countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v23);
  LogMessage.init(stringInterpolation:)();
  uint64_t v24 = static os_log_type_t.debug.getter();
  sub_10004841C(v24);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  id v25 = a3;
  sub_10008BD20();
  return swift_endAccess();
}

uint64_t sub_100183F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v7 - 8);
  if (qword_10022C4C8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3FC0;
  uint64_t v32 = (void *)type metadata accessor for SubscriptionsController();
  uint64_t v30 = a2;
  swift_retain();
  id v8 = (id)AMSLogKey();
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v13._uint64_t countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    sub_100049788(&v30, (uint64_t)v32);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v28[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v28, &qword_10022F490);
    v15._uint64_t countAndFlagsBits = 5972026;
    v15._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    uint64_t MetatypeMetadata = &type metadata for String;
    v28[0] = v10;
    v28[1] = v12;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v28, &qword_10022F490);
    v16._uint64_t countAndFlagsBits = 93;
    v16._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v17._uint64_t countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    sub_100049788(&v30, (uint64_t)v32);
    uint64_t v18 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v28[0] = v18;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v28, &qword_10022F490);
    v19._uint64_t countAndFlagsBits = 58;
    v19._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v30);
  LogMessage.init(stringLiteral:)();
  swift_getErrorValue();
  uint64_t v32 = v27;
  Swift::String v20 = sub_10003BAA4(&v30);
  (*(void (**)(uint64_t *))(*(v27 - 1) + 16))(v20);
  static LogMessage.safe(_:)();
  sub_10002CC0C((uint64_t)&v30, &qword_10022F490);
  uint64_t v30 = 0;
  unint64_t v31 = 0xE000000000000000;
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease();
  uint64_t v30 = 0x203A6570797428;
  unint64_t v31 = 0xE700000000000000;
  v28[0] = a3;
  v21._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  v22._uint64_t countAndFlagsBits = 0x6F50656863616320;
  v22._object = (void *)0xEE00203A7963696CLL;
  String.append(_:)(v22);
  v28[0] = a4;
  v23._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  v24._uint64_t countAndFlagsBits = 41;
  v24._object = (void *)0xE100000000000000;
  String.append(_:)(v24);
  uint64_t v32 = &type metadata for String;
  static LogMessage.safe(_:)();
  sub_10002CC0C((uint64_t)&v30, &qword_10022F490);
  uint64_t v25 = static os_log_type_t.error.getter();
  sub_10004841C(v25);
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for SubscriptionsController()
{
  return self;
}

uint64_t sub_10018440C()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100184444(void *a1)
{
  return sub_100183ACC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10018444C()
{
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100184484(uint64_t a1)
{
  return sub_100183F6C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100184490()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100182904();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001844F0(uint64_t a1, void **a2, uint64_t a3)
{
  return sub_100182EF4(a1, a2, a3, v3);
}

uint64_t sub_1001844F8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100043478(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10018455C()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100184594()
{
  swift_release();
  if (*(void *)(v0 + 56)) {
    sub_10004377C(v0 + 32);
  }
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1001845DC(uint64_t a1)
{
  return sub_10018350C(a1, *(void *)(v1 + 16), (uint64_t *)(v1 + 24));
}

uint64_t sub_1001845E8()
{
  return sub_100184490();
}

void sub_1001845F0()
{
}

uint64_t sub_1001845F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100184654()
{
  uint64_t v1 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v1 - 8);
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v19 = sub_100043478(&qword_100233858);
  v18[0] = v0;
  id v2 = (id)AMSLogKey();
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v7._uint64_t countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v7);
    sub_100049788(v18, v19);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v16[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v16);
    v9._uint64_t countAndFlagsBits = 5972026;
    v9._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v9);
    uint64_t MetatypeMetadata = &type metadata for String;
    v16[0] = v4;
    v16[1] = v6;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v16);
    v10._uint64_t countAndFlagsBits = 93;
    v10._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v10);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v11._uint64_t countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    sub_100049788(v18, v19);
    uint64_t v12 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v16[0] = v12;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v16);
    v13._uint64_t countAndFlagsBits = 58;
    v13._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v18);
  LogMessage.init(stringLiteral:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v14 = static os_log_type_t.default.getter();
  sub_10004841C(v14);
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for SyncAction()
{
  return self;
}

uint64_t sub_100184958()
{
  *(void *)&long long v54 = 0x736E6F69746361;
  *((void *)&v54 + 1) = 0xE700000000000000;
  uint64_t v0 = AnyHashable.init<A>(_:)();
  sub_1000496A4(v0, v1, v2, v3, v4, v5, v6, v7, v44, v48[0], v48[1], v49[0], v50, v51, v52, v53, v54);
  sub_1000434BC((uint64_t)v49);
  if (v55)
  {
    sub_100043478(&qword_10022F258);
    sub_100044CF4();
    sub_100046A20();
    if (v9) {
      uint64_t v10 = 0;
    }
    else {
      uint64_t v10 = v8;
    }
  }
  else
  {
    sub_1000423CC((uint64_t)&v54);
    uint64_t v10 = 0;
  }
  strcpy((char *)v48, "allowedEvents");
  HIWORD(v48[1]) = -4864;
  uint64_t v11 = AnyHashable.init<A>(_:)();
  sub_1000496A4(v11, v12, v13, v14, v15, v16, v17, v18, v45, v48[0], v48[1], v49[0], v50, v51, v52, v53, v54);
  sub_1000434BC((uint64_t)v49);
  if (!v55)
  {
    sub_1000423CC((uint64_t)&v54);
LABEL_10:
    uint64_t v19 = AnyHashable.init<A>(_:)();
    sub_1000496A4(v19, v20, v21, v22, v23, v24, v25, v26, v46, 0xD000000000000011, 0x80000001001CDC20, v49[0], v50, v51, v52, v53, v54);
    sub_1000434BC((uint64_t)v49);
    if (v55)
    {
      sub_100043478(&qword_10022F258);
      sub_100044CF4();
      sub_100046A20();
    }
    else
    {
      sub_1000423CC((uint64_t)&v54);
    }
    goto LABEL_13;
  }
  sub_100043478(&qword_10022F258);
  if (!sub_100044CF4()) {
    goto LABEL_10;
  }
LABEL_13:
  *(void *)&long long v54 = 0x676F6C6B636162;
  *((void *)&v54 + 1) = 0xE700000000000000;
  uint64_t v27 = AnyHashable.init<A>(_:)();
  sub_1000496A4(v27, v28, v29, v30, v31, v32, v33, v34, v46, v48[0], v48[1], v49[0], v50, v51, v52, v53, v54);
  sub_1000434BC((uint64_t)v49);
  if (v55)
  {
    sub_100043478(&qword_10022D6F0);
    sub_100044CF4();
    sub_100046A20();
  }
  else
  {
    sub_1000423CC((uint64_t)&v54);
  }
  *(void *)&long long v54 = 0xD000000000000016;
  *((void *)&v54 + 1) = 0x80000001001CB9C0;
  uint64_t v35 = AnyHashable.init<A>(_:)();
  sub_1000496A4(v35, v36, v37, v38, v39, v40, v41, v42, v47, v48[0], v48[1], v49[0], v50, v51, v52, v53, v54);
  swift_bridgeObjectRelease();
  sub_1000434BC((uint64_t)v49);
  if (v55)
  {
    sub_100043478(&qword_100232940);
    sub_100044CF4();
    sub_100046A20();
  }
  else
  {
    sub_1000423CC((uint64_t)&v54);
  }
  return v10;
}

uint64_t sub_100184BE8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v34 = *v1;
  uint64_t v4 = type metadata accessor for OSSignposter();
  sub_100020DEC();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  char v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for OSSignpostID();
  sub_100020DEC();
  uint64_t v11 = v10;
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v34 - v17;
  if (qword_10022C498 != -1) {
    swift_once();
  }
  id v19 = *(id *)(qword_100244100 + 16);
  OSSignposter.init(logHandle:)();
  OSSignposter.logHandle.getter();
  swift_unknownObjectRetain();
  OSSignpostID.init(log:object:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
  sub_100043478(&qword_10022D330);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3110;
  *(void *)(inited + 32) = 0x747865746E6F63;
  *(void *)(inited + 40) = 0xE700000000000000;
  uint64_t v21 = sub_100186138(a1);
  *(void *)(inited + 72) = sub_100043478(&qword_10022D6F0);
  if (!v21) {
    uint64_t v21 = Dictionary.init(dictionaryLiteral:)();
  }
  *(void *)(inited + 48) = v21;
  uint64_t v22 = Dictionary.init(dictionaryLiteral:)();
  uint64_t v39 = v22;
  id v23 = [a1 origin];
  if (v23)
  {
    uint64_t v24 = (uint64_t)v23;
    type metadata accessor for AMSEngagementSyncRequestOrigin(0);
    uint64_t v37 = v25;
    v36[0] = v24;
    sub_10003E698((uint64_t)v36, 0x6E696769726FLL, 0xE600000000000000);
    uint64_t v22 = v39;
  }
  uint64_t v26 = v2[17];
  uint64_t v27 = v2[18];
  unsigned __int8 v28 = *((unsigned char *)v2 + 152);
  sub_100039400(v26, v27, v28);
  sub_100039414(v22);
  sub_100038C90(v26, v27, v28);
  swift_bridgeObjectRelease();
  uint64_t v29 = v35;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v18, v35);
  unint64_t v30 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v2;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v31 + v30, v16, v29);
  *(void *)(v31 + ((v13 + v30 + 7) & 0xFFFFFFFFFFFFFFF8)) = v34;
  uint64_t v37 = type metadata accessor for SyncTaskScheduler();
  uint64_t v38 = &protocol witness table for SyncTaskScheduler;
  sub_10003BAA4(v36);
  swift_retain();
  SyncTaskScheduler.init()();
  sub_1001862DC();
  uint64_t v32 = Promise.map<A>(on:_:)();
  swift_release();
  swift_release();
  sub_10004377C((uint64_t)v36);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v29);
  return v32;
}

void sub_100184FF0(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  unint64_t v30 = a4;
  uint64_t v26 = a3;
  uint64_t v29 = type metadata accessor for OSSignpostID();
  uint64_t v27 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for OSSignposter();
  uint64_t v28 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000119BC(*a1);
  uint64_t v11 = sub_100184958();
  uint64_t v13 = v12;
  sub_100185610(v11, v12, v14, v15);
  memcpy(__dst, (const void *)(a2 + 56), sizeof(__dst));
  sub_1001853AC(v11, v13);
  id v16 = [objc_allocWithZone((Class)AMSEngagementSyncResult) init];
  if (!v11)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(void *)(v11 + 16))
  {
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if (qword_10022C498 != -1) {
    swift_once();
  }
  id v17 = *(id *)(qword_100244100 + 16);
  OSSignposter.init(logHandle:)();
  swift_bridgeObjectRetain();
  uint64_t v18 = OSSignposter.logHandle.getter();
  int v19 = static os_signpost_type_t.event.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    int v25 = v19;
    uint64_t v20 = v27;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v27 + 16))(v7, v26, v29);
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 134217984;
    uint64_t v32 = *(void *)(v11 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    os_signpost_id_t v22 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v18, (os_signpost_type_t)v25, v22, "ActionRunner", "Actions running: %ld", v21, 0xCu);
    swift_slowDealloc();

    (*(void (**)(unsigned char *, uint64_t))(v28 + 8))(v10, v8);
    (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v7, v29);
  }
  else
  {

    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v28 + 8))(v10, v8);
  }
  type metadata accessor for ActionRunner();
  id v23 = sub_1000679FC(v11, (uint64_t)__dst, 0);
  swift_bridgeObjectRelease();
  sub_1000BED1C((uint64_t)v23, v16);
LABEL_11:
  *unint64_t v30 = v16;
}

void sub_1001853AC(uint64_t a1, uint64_t a2)
{
  id v19 = [self loadFromDisk];
  uint64_t v3 = sub_10018631C(v19);
  uint64_t v5 = v4;
  uint64_t v6 = self;
  id v7 = [v6 buildVersion];
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  if (!v5)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  if (v3 == v8 && v5 == v10)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
LABEL_9:
    id v13 = [v6 buildVersion];
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;

    sub_100186380(v14, v16, v19);
    if (!a2) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_12:
  if (!a2) {
    goto LABEL_15;
  }
LABEL_13:
  sub_100043478(&qword_10022D6F0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v19 setAllowedEvents:isa appIdentifier:v18];

LABEL_14:
  [v19 saveToDisk];
LABEL_15:
}

uint64_t sub_100185610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v94 = a3;
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_1000BEBA4(v5 + 16, (uint64_t)&v106);
  if (!v108) {
    return sub_10002CC0C((uint64_t)&v106, &qword_10022F0F0);
  }
  uint64_t v87 = a4;
  sub_100028270(&v106, (uint64_t)v105);
  int v95 = *(unsigned __int8 *)(v5 + 57);
  uint64_t v11 = sub_100043478(&qword_10022E560);
  uint64_t v12 = type metadata accessor for LogMessage();
  sub_100044798(v12);
  uint64_t v14 = *(void *)(v13 + 72);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = (v16 + 32) & ~v16;
  uint64_t v96 = v14;
  uint64_t v93 = v11;
  uint64_t v91 = v17 + 2 * v14;
  uint64_t v90 = v16 | 7;
  uint64_t v18 = swift_allocObject();
  long long v89 = xmmword_1001C3120;
  *(_OWORD *)(v18 + 16) = xmmword_1001C3120;
  uint64_t v92 = v17;
  uint64_t v88 = type metadata accessor for SyncRunner();
  uint64_t v108 = (void *)v88;
  *(void *)&long long v106 = v5;
  swift_retain();
  id v19 = (id)AMSLogKey();
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v21 = a2;
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v24 = v23;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100045480();
    sub_1000496C0();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_100049028(MetatypeMetadata);
    sub_100048350();
    v26._uint64_t countAndFlagsBits = 5972026;
    v26._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    unsigned __int8 v104 = &type metadata for String;
    char v102 = (void *)v22;
    uint64_t v103 = v24;
    a2 = v21;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100048350();
    v27._uint64_t countAndFlagsBits = 93;
    v27._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100045480();
    sub_1000496C0();
    uint64_t v29 = swift_getMetatypeMetadata();
    sub_100049028(v29);
    sub_10002CC0C((uint64_t)&v102, &qword_10022F490);
    v30._uint64_t countAndFlagsBits = 58;
    v30._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v106);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v31._object = (void *)0x80000001001CDD40;
  v31._uint64_t countAndFlagsBits = 0xD000000000000017;
  LogMessage.StringInterpolation.appendLiteral(_:)(v31);
  uint64_t v108 = &unk_10020E0E8;
  LOBYTE(v106) = v95;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_10002CC0C((uint64_t)&v106, &qword_10022F490);
  v32._uint64_t countAndFlagsBits = 3026478;
  v32._object = (void *)0xE300000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v32);
  LogMessage.init(stringInterpolation:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v33 = static os_log_type_t.default.getter();
  sub_10004841C(v33);
  swift_bridgeObjectRelease();
  if (a2)
  {
    uint64_t v34 = *(void *)(a2 + 16);
    uint64_t v35 = _swiftEmptyArrayStorage;
    if (v34)
    {
      v86[0] = v5;
      v86[1] = v10;
      char v102 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_1000734A4(0, v34, 0);
      uint64_t v36 = v102;
      id v98 = self;
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      uint64_t v97 = (char *)&type metadata for Any + 8;
      while (1)
      {
        uint64_t v39 = v36;
        uint64_t v5 = *(void *)(a2 + 8 * v37 + 32);
        swift_bridgeObjectRetain();
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        *(void *)&long long v106 = 0;
        id v41 = [v98 dataWithJSONObject:isa options:0 error:&v106];

        id v42 = (id)v106;
        if (!v41)
        {
          long long v54 = v42;
          _convertNSErrorToError(_:)();

          swift_willThrow();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_21;
        }
        uint64_t v43 = v34;
        uint64_t v44 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v46 = v45;

        type metadata accessor for JSONDecoder();
        swift_allocObject();
        JSONDecoder.init()();
        sub_100083478();
        dispatch thunk of JSONDecoder.decode<A>(_:from:)();
        if (v38) {
          break;
        }
        uint64_t v99 = 0;
        uint64_t v47 = a2;
        sub_10004B278(v44, v46);
        swift_bridgeObjectRelease();
        swift_release();
        char v48 = v106;
        uint64_t v49 = *((void *)&v106 + 1);
        uint64_t v5 = v107;
        uint64_t v50 = v108;
        uint64_t v36 = v39;
        char v102 = v39;
        unint64_t v51 = v39[2];
        unint64_t v52 = v36[3];
        if (v51 >= v52 >> 1)
        {
          sub_1000734A4(v52 > 1, v51 + 1, 1);
          uint64_t v36 = v102;
        }
        v36[2] = v51 + 1;
        uint64_t v53 = &v36[4 * v51];
        *((unsigned char *)v53 + 32) = v48;
        ++v37;
        v53[5] = v49;
        *((unsigned char *)v53 + 48) = v5;
        v53[7] = v50;
        uint64_t v34 = v43;
        a2 = v47;
        uint64_t v38 = v99;
        if (v43 == v37)
        {
          uint64_t v35 = v36;
          swift_bridgeObjectRelease();
          sub_10004896C();
          goto LABEL_22;
        }
      }
      sub_10004B278(v44, v46);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
LABEL_21:
      sub_10004896C();
      goto LABEL_28;
    }
    uint64_t v38 = 0;
  }
  else
  {
    uint64_t v38 = 0;
    uint64_t v35 = _swiftEmptyArrayStorage;
  }
LABEL_22:
  if (v94)
  {
    uint64_t v55 = self;
    Class v56 = Dictionary._bridgeToObjectiveC()().super.isa;
    *(void *)&long long v106 = 0;
    id v57 = [v55 dataWithJSONObject:v56 options:0 error:&v106];

    id v58 = (id)v106;
    if (!v57)
    {
      unint64_t v65 = v58;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
    uint64_t v59 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v61 = v60;

    type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    sub_1000834C4();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    if (v38)
    {
      sub_10004B278(v59, v61);
      swift_bridgeObjectRelease();
      swift_release();
LABEL_28:
      *(_OWORD *)(swift_allocObject() + 16) = v89;
      uint64_t v108 = (void *)v88;
      *(void *)&long long v106 = v5;
      swift_retain();
      id v66 = (id)AMSLogKey();
      if (v66)
      {
        uint64_t v67 = v66;
        uint64_t v68 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v70 = v69;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        sub_100045480();
        sub_1000496C0();
        uint64_t v71 = swift_getMetatypeMetadata();
        sub_100049028(v71);
        sub_100048350();
        v72._uint64_t countAndFlagsBits = 5972026;
        v72._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v72);
        unsigned __int8 v104 = &type metadata for String;
        char v102 = (void *)v68;
        uint64_t v103 = v70;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_100048350();
        v73._uint64_t countAndFlagsBits = 93;
        v73._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v73);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        sub_100045480();
        sub_1000496C0();
        uint64_t v74 = swift_getMetatypeMetadata();
        sub_100049028(v74);
        sub_10002CC0C((uint64_t)&v102, &qword_10022F490);
        v75._uint64_t countAndFlagsBits = 58;
        v75._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v75);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)&v106);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v76._uint64_t countAndFlagsBits = 0x6C696166202E2E2ELL;
      v76._object = (void *)0xEC000000203A6465;
      LogMessage.StringInterpolation.appendLiteral(_:)(v76);
      swift_getErrorValue();
      uint64_t v77 = v100;
      unint64_t v78 = v101;
      uint64_t v108 = v101;
      uint64_t v79 = sub_10003BAA4((uint64_t *)&v106);
      (*(void (**)(uint64_t *, uint64_t, void *))(*(v78 - 1) + 16))(v79, v77, v78);
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_10002CC0C((uint64_t)&v106, &qword_10022F490);
      v80._uint64_t countAndFlagsBits = 0;
      v80._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v80);
      LogMessage.init(stringInterpolation:)();
      uint64_t v81 = static os_log_type_t.error.getter();
      sub_10004841C(v81);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      return sub_10004377C((uint64_t)v105);
    }
    sub_10004B278(v59, v61);
    swift_release();
    uint64_t v64 = v106;
    uint64_t v62 = *((void *)&v106 + 1);
    char v63 = v107;
  }
  else
  {
    uint64_t v62 = 0;
    char v63 = 0;
    uint64_t v64 = 2;
  }
  id v82 = [self buildVersion];
  uint64_t v83 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v85 = v84;

  *(void *)&long long v106 = v35;
  *((void *)&v106 + 1) = v64;
  uint64_t v107 = v62;
  LOBYTE(v108) = v63;
  uint64_t v109 = v83;
  uint64_t v110 = v85;
  uint64_t v111 = v87;
  sub_100049788(v105, v105[3]);
  swift_bridgeObjectRetain();
  sub_100081EDC((uint64_t *)&v106, v95);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_10004377C((uint64_t)v105);
}

uint64_t sub_100186080()
{
  sub_10002CC0C(v0 + 16, &qword_10022F0F0);
  uint64_t v1 = *(void **)(v0 + 64);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_100038C90(*(void *)(v0 + 136), *(void *)(v0 + 144), *(unsigned char *)(v0 + 152));
  return v0;
}

uint64_t sub_1001860E0()
{
  sub_100186080();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SyncRunner()
{
  return self;
}

uint64_t sub_100186138(void *a1)
{
  id v1 = [a1 context];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_1001861A4()
{
  uint64_t v1 = type metadata accessor for OSSignpostID();
  sub_100020DEC();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 24) & ~v6;
  uint64_t v8 = v6 | 7;
  unint64_t v9 = ((*(void *)(v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);
  return _swift_deallocObject(v0, v9, v8);
}

void sub_100186254(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for OSSignpostID();
  sub_100044798(v5);
  sub_100184FF0(a1, *(void *)(v2 + 16), v2 + ((*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), a2);
}

unint64_t sub_1001862DC()
{
  unint64_t result = qword_10022F0C8;
  if (!qword_10022F0C8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10022F0C8);
  }
  return result;
}

uint64_t sub_10018631C(void *a1)
{
  id v1 = [a1 lastSyncedBuild];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void sub_100186380(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 setLastSyncedBuild:v4];
}

uint64_t sub_1001863E4(uint64_t a1)
{
  v3[0] = 0x707041666572;
  v3[1] = 0xE600000000000000;
  AnyHashable.init<A>(_:)();
  sub_100043410(a1, (uint64_t)v3);
  sub_100088240((uint64_t)v3, (uint64_t)v4);
  return sub_10002CC0C(a1, &qword_10022F490);
}

void sub_100186464()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  sub_100011D4C();
  sub_100043478(&qword_10022E560);
  uint64_t v5 = type metadata accessor for LogMessage();
  sub_100044798(v5);
  sub_100045F1C();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v17 = (void *)type metadata accessor for SystemEngagementAction();
  v16[0] = v0;
  swift_retain();
  id v6 = (id)AMSLogKey();
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100022668();
    swift_getMetatypeMetadata();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004C8EC();
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v14[0] = v8;
    v14[1] = v10;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004C8EC();
    sub_1000208D8();
    sub_100040C54();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    uint64_t v11 = sub_1000421AC();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v14[0] = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v14, &qword_10022F490);
    sub_100020E94();
    sub_100040C54();
  }
  sub_10004377C((uint64_t)v16);
  uint64_t v17 = &type metadata for String;
  sub_100051614();
  sub_10002CC0C((uint64_t)v16, &qword_10022F490);
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v12 = static os_log_type_t.default.getter();
  sub_10004841C(v12);
  swift_bridgeObjectRelease();
  id v13 = v2;
  sub_100187A74();

  sub_100020FDC();
}

void sub_10018669C()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  sub_100011D4C();
  sub_100043478(&qword_10022E560);
  uint64_t v5 = type metadata accessor for LogMessage();
  sub_100044798(v5);
  sub_100045F1C();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  id v19 = (void *)type metadata accessor for SystemEngagementAction();
  v18[0] = v0;
  swift_retain();
  id v6 = (id)AMSLogKey();
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100022668();
    swift_getMetatypeMetadata();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004C8EC();
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v16[0] = v8;
    v16[1] = v10;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10004C8EC();
    sub_1000208D8();
    sub_100040C54();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    uint64_t v11 = sub_1000421AC();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v16[0] = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v16, &qword_10022F490);
    sub_100020E94();
    sub_100040C54();
  }
  sub_10004377C((uint64_t)v18);
  id v19 = &type metadata for String;
  sub_100051614();
  sub_10002CC0C((uint64_t)v18, &qword_10022F490);
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v12 = static os_log_type_t.default.getter();
  sub_10004841C(v12);
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(v2 + 16);
  if (v13)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = 0;
    do
    {
      uint64_t v15 = v14 + 1;
      v18[0] = *(void *)(v2 + 8 * v14 + 32);
      swift_bridgeObjectRetain();
      sub_100186914(v18, v0);
      swift_bridgeObjectRelease();
      uint64_t v14 = v15;
    }
    while (v13 != v15);
    swift_bridgeObjectRelease();
  }
  sub_100020FDC();
}

void sub_100186914(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = *a1;
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)&v42, v6, &v45);
  sub_1000434BC((uint64_t)&v42);
  uint64_t v47 = v2;
  if (!MetatypeMetadata) {
    goto LABEL_15;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_16;
  }
  uint64_t v8 = v42;
  uint64_t v7 = v43;
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)&v42, v6, &v45);
  sub_1000434BC((uint64_t)&v42);
  if (!MetatypeMetadata)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    sub_10002CC0C((uint64_t)&v45, &qword_10022F490);
    goto LABEL_16;
  }
  if (swift_dynamicCast())
  {
    uint64_t v10 = v42;
    uint64_t v9 = v43;
    if ((v8 == 0xD000000000000018 && v7 == 0x80000001001D7FC0
       || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      && (v10 == 1802398060 ? (BOOL v11 = v9 == 0xE400000000000000) : (BOOL v11 = 0),
          v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1001870E8();
      if (v33)
      {
        uint64_t v35 = v33;
        uint64_t v36 = v34;
        sub_100187A74();
      }
    }
    else
    {
      sub_100043478(&qword_10022E560);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3FC0;
      uint64_t v44 = (void *)type metadata accessor for SystemEngagementAction();
      uint64_t v42 = a2;
      swift_retain();
      id v25 = (id)AMSLogKey();
      if (v25)
      {
        Swift::String v26 = v25;
        uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v28 = v27;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v29._uint64_t countAndFlagsBits = 0;
        v29._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v29);
        sub_100049788(&v42, (uint64_t)v44);
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        *(void *)&long long v45 = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v45, &qword_10022F490);
        v31._uint64_t countAndFlagsBits = 5972026;
        v31._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v31);
        uint64_t MetatypeMetadata = &type metadata for String;
        *(void *)&long long v45 = v41;
        *((void *)&v45 + 1) = v28;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v45, &qword_10022F490);
        v32._uint64_t countAndFlagsBits = 93;
        v32._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v32);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v37._uint64_t countAndFlagsBits = 0;
        v37._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v37);
        sub_100049788(&v42, (uint64_t)v44);
        uint64_t v38 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        *(void *)&long long v45 = v38;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_10002CC0C((uint64_t)&v45, &qword_10022F490);
        v39._uint64_t countAndFlagsBits = 58;
        v39._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v39);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)&v42);
      LogMessage.init(stringLiteral:)();
      uint64_t v44 = &type metadata for String;
      uint64_t v42 = v8;
      uint64_t v43 = v7;
      static LogMessage.safe(_:)();
      sub_10002CC0C((uint64_t)&v42, &qword_10022F490);
      uint64_t v44 = &type metadata for String;
      uint64_t v42 = v10;
      uint64_t v43 = v9;
      static LogMessage.safe(_:)();
      sub_10002CC0C((uint64_t)&v42, &qword_10022F490);
      if (qword_10022C460 != -1) {
        swift_once();
      }
      uint64_t v40 = static os_log_type_t.default.getter();
      sub_10004841C(v40);
      swift_bridgeObjectRelease();
    }
    return;
  }
  swift_bridgeObjectRelease();
LABEL_16:
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v44 = (void *)type metadata accessor for SystemEngagementAction();
  uint64_t v42 = a2;
  swift_retain();
  id v12 = (id)AMSLogKey();
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v17._uint64_t countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    sub_100049788(&v42, (uint64_t)v44);
    uint64_t v18 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    *(void *)&long long v45 = v18;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v45, &qword_10022F490);
    v19._uint64_t countAndFlagsBits = 5972026;
    v19._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    uint64_t MetatypeMetadata = &type metadata for String;
    *(void *)&long long v45 = v14;
    *((void *)&v45 + 1) = v16;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v45, &qword_10022F490);
    v20._uint64_t countAndFlagsBits = 93;
    v20._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v21._uint64_t countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    sub_100049788(&v42, (uint64_t)v44);
    uint64_t v22 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    *(void *)&long long v45 = v22;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v45, &qword_10022F490);
    v23._uint64_t countAndFlagsBits = 58;
    v23._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v42);
  LogMessage.init(stringLiteral:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v24 = static os_log_type_t.default.getter();
  sub_10004841C(v24);
  swift_bridgeObjectRelease();
}

void sub_1001870E8()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v5 = sub_1000208F0(v4);
  __chkstk_darwin(v5);
  sub_100020EAC();
  uint64_t v6 = sub_100043478(&qword_10022FB40);
  uint64_t v7 = sub_1000208F0(v6);
  __chkstk_darwin(v7);
  sub_100020EAC();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = type metadata accessor for URL();
  sub_1000448FC();
  uint64_t v13 = v12;
  uint64_t v15 = __chkstk_darwin(v14);
  Swift::String v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  Swift::String v19 = (char *)&v47 - v18;
  sub_10004D510(0, (unint64_t *)&qword_10022F260);
  Swift::String v20 = *(void **)(v0 + 16);
  id v21 = v20;
  uint64_t v22 = swift_bridgeObjectRetain();
  id v47 = sub_10006CD7C(v22, 1, v20, 0);
  id v23 = [v47 URL];
  if (v23)
  {
    uint64_t v24 = v23;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    id v25 = *(void (**)(uint64_t, char *, uint64_t))(v13 + 32);
    v25(v10, v17, v11);
    sub_100021AC0(v10, 0, 1, v11);
    if (sub_10004FD40(v10, 1, v11) != 1)
    {
      v25((uint64_t)v19, (char *)v10, v11);
      sub_100187698(0, 1, (uint64_t)v17);
      URL._bridgeToObjectiveC()(v26);
      uint64_t v28 = v27;
      Swift::String v29 = *(void (**)(char *, uint64_t))(v13 + 8);
      v29(v17, v11);
      id v30 = v47;
      [v47 setURL:v28];

      strcpy((char *)&v51, "sourceProcess");
      HIWORD(v51) = -4864;
      AnyHashable.init<A>(_:)();
      sub_100032918((uint64_t)&v48, v3, &v51);
      sub_1000434BC((uint64_t)&v48);
      if (v52)
      {
        int v31 = swift_dynamicCast();
        if (v31) {
          uint64_t v32 = v48;
        }
        else {
          uint64_t v32 = 0;
        }
        if (v31) {
          uint64_t v33 = v49;
        }
        else {
          uint64_t v33 = 0;
        }
      }
      else
      {
        sub_10002CC0C((uint64_t)&v51, &qword_10022F490);
        uint64_t v32 = 0;
        uint64_t v33 = 0;
      }
      unint64_t v46 = (void *)sub_100188ED4(v30);
      if (!v46) {
        unint64_t v46 = _swiftEmptyDictionarySingleton;
      }
      *(void *)&long long v51 = v46;
      if (v33)
      {
        uint64_t v50 = &type metadata for String;
        uint64_t v48 = v32;
        uint64_t v49 = v33;
        swift_bridgeObjectRetain();
        sub_1001863E4((uint64_t)&v48);
        sub_10004D510(0, &qword_10022FDF0);
        sub_100189B58();
        unint64_t v46 = (void *)v51;
      }
      sub_100188F40((uint64_t)v46, v30);
      v29(v19, v11);
      goto LABEL_23;
    }
  }
  else
  {
    sub_100021AC0(v10, 1, 1, v11);
  }
  sub_10002CC0C(v10, &qword_10022FB40);
  sub_100043478(&qword_10022E560);
  uint64_t v34 = type metadata accessor for LogMessage();
  sub_100044798(v34);
  sub_10003BDC8();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v50 = (void *)type metadata accessor for SystemEngagementAction();
  uint64_t v48 = v1;
  swift_retain();
  id v35 = (id)AMSLogKey();
  if (v35)
  {
    uint64_t v36 = v35;
    uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v39 = v38;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v40._uint64_t countAndFlagsBits = 0;
    v40._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v40);
    sub_100020BAC();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_100020BFC(MetatypeMetadata);
    sub_10002CC0C((uint64_t)&v51, &qword_10022F490);
    sub_100020E44();
    unint64_t v52 = &type metadata for String;
    *(void *)&long long v51 = v37;
    *((void *)&v51 + 1) = v39;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v51, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v42._uint64_t countAndFlagsBits = 0;
    v42._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v42);
    sub_100020BAC();
    uint64_t v43 = swift_getMetatypeMetadata();
    sub_100020BFC(v43);
    sub_10002CC0C((uint64_t)&v51, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  id v44 = v47;
  sub_10004377C((uint64_t)&v48);
  sub_100020924();
  LogMessage.init(stringLiteral:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v45 = static os_log_type_t.error.getter();
  sub_10004841C(v45);

  swift_bridgeObjectRelease();
LABEL_23:
  sub_100020FDC();
}

uint64_t sub_100187698@<X0>(char a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  void v28[3] = a2;
  uint64_t v7 = 0x7370747468;
  uint64_t v8 = sub_100043478(&qword_10022FB40);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100043478(&qword_100230480);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for URLComponents();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  Swift::String v17 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    unint64_t v18 = 0xE500000000000000;
  }
  else
  {
    uint64_t v7 = 0x69752D736D61;
    unint64_t v18 = 0xE600000000000000;
  }
  uint64_t v19 = URL.scheme.getter();
  if (v20)
  {
    if (v7 == v19 && v20 == v18)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v22)
    {
LABEL_16:
      URLComponents.init(url:resolvingAgainstBaseURL:)();
      if (sub_10004FD40((uint64_t)v13, 1, v14) == 1)
      {
        sub_10002CC0C((uint64_t)v13, &qword_100230480);
        uint64_t v26 = type metadata accessor for URL();
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(a3, v4, v26);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
        URLComponents.scheme.setter();
        URLComponents.url.getter();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
        uint64_t v27 = type metadata accessor for URL();
        if (sub_10004FD40((uint64_t)v10, 1, v27) == 1)
        {
          sub_10002CC0C((uint64_t)v10, &qword_10022FB40);
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(a3, v4, v27);
        }
        else
        {
          return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v27 - 8) + 32))(a3, v10, v27);
        }
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v23 = type metadata accessor for URL();
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
  return v24(a3, v4, v23);
}

void sub_100187A74()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v6 = sub_1000208F0(v5);
  __chkstk_darwin(v6);
  sub_100011D4C();
  sub_100043478(&qword_10022E560);
  uint64_t v7 = type metadata accessor for LogMessage();
  sub_100044798(v7);
  sub_10003BDC8();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v21 = type metadata accessor for SystemEngagementAction();
  v20[0] = v0;
  swift_retain();
  id v8 = (id)AMSLogKey();
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100049788(v20, v21);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v18[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v18, &qword_10022F490);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v18[0] = v10;
    v18[1] = v12;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v18, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    sub_100049788(v20, v21);
    uint64_t v14 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v18[0] = v14;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v18, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v20);
  sub_100020924();
  LogMessage.init(stringLiteral:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v15 = static os_log_type_t.default.getter();
  sub_10004841C(v15);
  swift_bridgeObjectRelease();
  sub_100049788((void *)(v0 + 24), *(void *)(v0 + 48));
  sub_100189004(v4, 0, v2);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_100188ECC;
  *(void *)(v16 + 24) = v0;
  swift_retain_n();
  sub_10003A184();
  swift_release();
  swift_release();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_100188FF8;
  *(void *)(v17 + 24) = v0;
  swift_retain_n();
  sub_10003A184();
  swift_release();
  swift_release();
  swift_release();
  sub_100020FDC();
}

uint64_t sub_100187E08(void **a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = *a1;
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v25 = type metadata accessor for SystemEngagementAction();
  v24[0] = a2;
  swift_retain();
  id v6 = (id)AMSLogKey();
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v11._uint64_t countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    sub_100049788(v24, v25);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v22[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v22, &qword_10022F490);
    v13._uint64_t countAndFlagsBits = 5972026;
    v13._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    uint64_t MetatypeMetadata = &type metadata for String;
    v22[0] = v8;
    v22[1] = v10;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v22, &qword_10022F490);
    v14._uint64_t countAndFlagsBits = 93;
    v14._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v15._uint64_t countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    sub_100049788(v24, v25);
    uint64_t v16 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v22[0] = v16;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v22, &qword_10022F490);
    v17._uint64_t countAndFlagsBits = 58;
    v17._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v24);
  LogMessage.init(stringLiteral:)();
  id v18 = [v5 userInfo];
  uint64_t v19 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v25 = sub_100043478(&qword_10022D6F0);
  v24[0] = v19;
  static LogMessage.safe(_:)();
  sub_10002CC0C((uint64_t)v24, &qword_10022F490);
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v20 = static os_log_type_t.default.getter();
  sub_10004841C(v20);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100188180(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v3 - 8);
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
  uint64_t v23 = (void *)type metadata accessor for SystemEngagementAction();
  v22[0] = a2;
  swift_retain();
  id v4 = (id)AMSLogKey();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v9._uint64_t countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v9);
    sub_100049788(v22, (uint64_t)v23);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v20[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v20, &qword_10022F490);
    v11._uint64_t countAndFlagsBits = 5972026;
    v11._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    uint64_t MetatypeMetadata = &type metadata for String;
    v20[0] = v6;
    v20[1] = v8;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v20, &qword_10022F490);
    v12._uint64_t countAndFlagsBits = 93;
    v12._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v12);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v13._uint64_t countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    sub_100049788(v22, (uint64_t)v23);
    uint64_t v14 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v20[0] = v14;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)v20, &qword_10022F490);
    v15._uint64_t countAndFlagsBits = 58;
    v15._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v22);
  LogMessage.init(stringLiteral:)();
  swift_getErrorValue();
  uint64_t v16 = Error.localizedDescription.getter();
  uint64_t v23 = &type metadata for String;
  v22[0] = v16;
  v22[1] = v17;
  static LogMessage.safe(_:)();
  sub_10002CC0C((uint64_t)v22, &qword_10022F490);
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v18 = static os_log_type_t.error.getter();
  sub_10004841C(v18);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001884C8()
{
  sub_10004377C(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SystemEngagementAction()
{
  return self;
}

void sub_10018852C()
{
  sub_1000209F4();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  sub_100011D4C();
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)v26, v2, &v29);
  sub_1000434BC((uint64_t)v26);
  if (MetatypeMetadata)
  {
    sub_100043478(&qword_10022D6F0);
    if (sub_100043DD8())
    {
      AnyHashable.init<A>(_:)();
      sub_100032918((uint64_t)v26, 0x74736575716572, &v29);
      sub_1000434BC((uint64_t)v26);
      if (MetatypeMetadata)
      {
        if ((sub_100043DD8() & 1) == 0)
        {
LABEL_16:
          sub_10004D510(0, (unint64_t *)&qword_10022F260);
          id v14 = 0;
          id v15 = sub_10006CD7C(0x74736575716572, 0, 0, 0);
          uint64_t v16 = type metadata accessor for SystemEngagementPerformer();
          uint64_t v17 = swift_allocObject();
          uint64_t v27 = v16;
          uint64_t v28 = &off_1002170C8;
          v26[0] = v17;
          type metadata accessor for SystemEngagementAction();
          uint64_t v18 = (void *)swift_allocObject();
          sub_10003660C((uint64_t)v26, v16);
          sub_1000448FC();
          __chkstk_darwin(v19);
          sub_100020EAC();
          char v22 = (uint64_t *)(v21 - v20);
          (*(void (**)(uint64_t))(v23 + 16))(v21 - v20);
          uint64_t v24 = *v22;
          void v18[6] = v16;
          v18[7] = &off_1002170C8;
          v18[2] = 0;
          void v18[3] = v24;
          id v25 = v14;
          sub_10004377C((uint64_t)v26);
          sub_100186464();

          swift_release();
          goto LABEL_17;
        }
        AnyHashable.init<A>(_:)();
        sub_100032918((uint64_t)v26, 0x746E756F636361, &v29);
        swift_bridgeObjectRelease();
        sub_1000434BC((uint64_t)v26);
        if (MetatypeMetadata)
        {
          if (swift_dynamicCast())
          {
            v26[0] = 1684632420;
            v26[1] = 0;
            swift_bridgeObjectRelease();
          }
          goto LABEL_16;
        }
      }
      sub_10002CC0C((uint64_t)&v29, &qword_10022F490);
      goto LABEL_16;
    }
  }
  else
  {
    sub_10002CC0C((uint64_t)&v29, &qword_10022F490);
  }
  sub_100043478(&qword_10022E560);
  uint64_t v5 = type metadata accessor for LogMessage();
  sub_100044798(v5);
  sub_10003BDC8();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v27 = sub_100043478(&qword_100233A00);
  v26[0] = v0;
  id v6 = (id)AMSLogKey();
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100049788(v26, v27);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    *(void *)&long long v29 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v29, &qword_10022F490);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    *(void *)&long long v29 = v8;
    *((void *)&v29 + 1) = v10;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v29, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    uint64_t v12 = sub_100044C20();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    *(void *)&long long v29 = v12;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_10002CC0C((uint64_t)&v29, &qword_10022F490);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v26);
  sub_100020924();
  LogMessage.init(stringLiteral:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v13 = static os_log_type_t.error.getter();
  sub_10004841C(v13);
  swift_bridgeObjectRelease();
LABEL_17:
  sub_100020FDC();
}

uint64_t sub_100188ECC(void **a1)
{
  return sub_100187E08(a1, v1);
}

uint64_t sub_100188ED4(void *a1)
{
  id v1 = [a1 metricsOverlay];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void sub_100188F40(uint64_t a1, void *a2)
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 setMetricsOverlay:isa];
}

uint64_t sub_100188FC0()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100188FF8(uint64_t a1)
{
  return sub_100188180(a1, v1);
}

uint64_t sub_100189004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = [objc_allocWithZone((Class)AMSSystemEngagementTask) initWithRequest:a1];
  [v5 setBag:a2];
  [v5 setClientInfo:a3];
  sub_100043478(&qword_100233AA8);
  id v6 = [v5 present];
  uint64_t v7 = Promise<A>.init(_:)();

  return v7;
}

uint64_t type metadata accessor for SystemEngagementPerformer()
{
  return self;
}

uint64_t sub_1001890D4(char a1, void (*a2)(void))
{
  if (qword_10022C5C8 != -1) {
    swift_once();
  }
  unint64_t v4 = sub_1001891CC(a1);
  uint64_t v6 = v5;
  sub_10002A570(v4, v5);
  a2();
  sub_10000A734(v4, v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001891A4(uint64_t (*a1)(void))
{
  return a1();
}

unint64_t sub_1001891CC(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x74536E6F6D656164;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x696669746E656469;
      break;
    case 4:
      unint64_t result = 0x4D6B726F7774656ELL;
      break;
    case 5:
      unint64_t result = 0x6144726576726573;
      break;
    case 6:
      unint64_t result = 0x6F69736E65747865;
      break;
    case 7:
      unint64_t result = 0x624F796C696D6166;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100189324()
{
  type metadata accessor for TransactionStore();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_100189368(5.0);
  qword_1002441C0 = v0;
  return result;
}

uint64_t sub_100189368(double a1)
{
  uint64_t v3 = v1;
  type metadata accessor for OS_dispatch_queue.Attributes();
  sub_100043B1C();
  __chkstk_darwin(v5);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v6 - 8);
  sub_100046690();
  uint64_t v7 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  sub_100020DEC();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_10002D300();
  sub_10004D510(0, (unint64_t *)&qword_10022F690);
  (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v2, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v7);
  static DispatchQoS.unspecified.getter();
  sub_10002AFB0((unint64_t *)&qword_10022F470, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100043478((uint64_t *)&unk_100231D60);
  sub_10002B720((unint64_t *)&qword_10022F480, (uint64_t *)&unk_100231D60);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  *(void *)(v1 + 16) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  if (qword_10022C4D0 != -1) {
    swift_once();
  }
  id v11 = *(id *)(qword_100244138 + 16);
  OSSignposter.init(logHandle:)();
  uint64_t v12 = OBJC_IVAR____TtC14amsengagementd16TransactionStore_transactionSet;
  *(void *)(v3 + v12) = [objc_allocWithZone((Class)NSCountedSet) init];
  uint64_t v13 = OBJC_IVAR____TtC14amsengagementd16TransactionStore_transactionSignpostStateStore;
  type metadata accessor for OSSignpostIntervalState();
  *(void *)(v3 + v13) = Dictionary.init(dictionaryLiteral:)();
  uint64_t v14 = OBJC_IVAR____TtC14amsengagementd16TransactionStore_transactionStore;
  sub_100043478(&qword_10022E5F0);
  uint64_t result = Dictionary.init(dictionaryLiteral:)();
  *(void *)(v3 + v14) = result;
  if ((~*(void *)&a1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (a1 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (a1 < 9.22337204e18)
  {
    uint64_t v16 = v3 + OBJC_IVAR____TtC14amsengagementd16TransactionStore_holdTime;
    *(void *)(v3 + OBJC_IVAR____TtC14amsengagementd16TransactionStore_holdTime) = (uint64_t)a1;
    uint64_t v17 = enum case for DispatchTimeInterval.seconds(_:);
    type metadata accessor for DispatchTimeInterval();
    sub_100043B1C();
    (*(void (**)(uint64_t, uint64_t))(v18 + 104))(v16, v17);
    return v3;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1001896E8()
{
  sub_10004D510(0, &qword_100232B70);
  OS_dispatch_queue.sync<A>(execute:)();
  return v1;
}

uint64_t sub_100189760(uint64_t a1)
{
  return swift_dynamicCast();
}

uint64_t sub_1001897FC()
{
  OS_dispatch_queue.sync<A>(execute:)();
  return v1;
}

uint64_t sub_10018985C()
{
  type metadata accessor for DispatchTimeInterval();
  sub_100043B1C();
  sub_100043FB0();
  v1();
  type metadata accessor for OSSignposter();
  sub_100043B1C();
  sub_100043FB0();
  v2();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100189924()
{
  sub_10018985C();
  return swift_deallocClassInstance();
}

uint64_t sub_10018997C()
{
  return type metadata accessor for TransactionStore();
}

uint64_t sub_100189984()
{
  uint64_t result = type metadata accessor for DispatchTimeInterval();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for OSSignposter();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_100189A7C()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_100189A8C@<X0>(void *a1@<X8>)
{
  id result = [*(id *)(v1 + OBJC_IVAR____TtC14amsengagementd16TransactionStore_transactionSet) count];
  *a1 = result;
  return result;
}

uint64_t sub_100189AD0()
{
  return sub_100189760(v0);
}

id sub_100189AEC(uint64_t a1, uint64_t a2, char a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = [(id)swift_getObjCClassFromMetadata() keyWithName:v4 crossDeviceSync:a3 & 1];

  return v5;
}

id sub_100189B58()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithBundleIdentifier:v1];

  return v2;
}

void *sub_100189BCC(char a1)
{
  if (a1) {
    return 0;
  }
  id v2 = *(void **)(v1 + 16);
  if (!v2) {
    return 0;
  }
  id v3 = objc_msgSend(v2, "ams_DSID");
  NSString v4 = v3;
  if (v3)
  {
    id v5 = [v3 description];

    NSString v4 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  return v4;
}

uint64_t sub_100189C80(char a1)
{
  sub_10004D510(0, (unint64_t *)&unk_100233D70);
  if (a1)
  {
    uint64_t v3 = 0x6449746E65696C63;
    uint64_t v4 = 0xE800000000000000;
    char v5 = 0;
  }
  else
  {
    uint64_t v3 = 0x644972657375;
    uint64_t v4 = 0xE600000000000000;
    char v5 = 1;
  }
  id v6 = sub_100189AEC(v3, v4, v5);
  id v7 = [objc_allocWithZone((Class)AMSMetricsIdentifierStore) init];
  [v7 setAccount:*(void *)(v1 + 16)];
  sub_10004D510(0, &qword_10022FDF0);
  id v8 = sub_100189B58();
  [v7 setClientInfo:v8];

  [v7 setResetInterval:0.0];
  id v9 = [v7 identifierForKey:v6];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v10;
}

uint64_t sub_100189DE0()
{
  sub_100051E8C();
  return swift_deallocClassInstance();
}

uint64_t sub_100189E14()
{
  return dispatch thunk of HashFunction.update(bufferPointer:)();
}

void *sub_100189F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v6[0] = a3;
  v6[1] = a4;
  v5[2] = v6;
  return sub_10018A33C((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_10018A53C, (uint64_t)v5, a1, a2);
}

void *sub_100189F94(void *(*a1)(uint64_t *__return_ptr, char *, char *), uint64_t a2)
{
  uint64_t v4 = *v2;
  unint64_t v3 = v2[1];
  char v5 = v2;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)id v2 = xmmword_1001C86C0;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = v4 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_11;
      }
      if (v11 < (int)v4) {
        goto LABEL_16;
      }
      if (__DataStorage._bytes.getter() && __OFSUB__((int)v4, __DataStorage._offset.getter())) {
        goto LABEL_17;
      }
      type metadata accessor for __DataStorage();
      swift_allocObject();
      uint64_t v13 = __DataStorage.init(bytes:length:copy:deallocator:offset:)();
      swift_release();
      uint64_t v9 = v13;
      uint64_t v11 = v4 >> 32;
LABEL_11:
      if (v11 < (int)v4)
      {
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
      }
      id result = sub_10018A3A4((int)v4, v11, a1);
      unint64_t v12 = v9 | 0x4000000000000000;
      *char v5 = v4;
LABEL_13:
      v5[1] = v12;
      return result;
    case 2uLL:
      *(void *)&long long v14 = *v2;
      *((void *)&v14 + 1) = v3 & 0x3FFFFFFFFFFFFFFFLL;
      Data.LargeSlice.ensureUniqueReference()();
      id result = sub_10018A3A4(*(void *)(v14 + 16), *(void *)(v14 + 24), a1);
      unint64_t v12 = *((void *)&v14 + 1) | 0x8000000000000000;
      *id v2 = v14;
      goto LABEL_13;
    case 3uLL:
      *(void *)((char *)&v14 + 7) = 0;
      *(void *)&long long v14 = 0;
      return sub_10018A458((uint64_t)&v14, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))a1, a2, 0);
    default:
      *(void *)&long long v14 = *v2;
      WORD4(v14) = v3;
      BYTE10(v14) = BYTE2(v3);
      BYTE11(v14) = BYTE3(v3);
      BYTE12(v14) = BYTE4(v3);
      BYTE13(v14) = BYTE5(v3);
      BYTE14(v14) = BYTE6(v3);
      id result = sub_10018A458((uint64_t)&v14, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))a1, a2, BYTE6(v3));
      unint64_t v8 = DWORD2(v14) | ((unint64_t)BYTE12(v14) << 32) | ((unint64_t)BYTE13(v14) << 40) | ((unint64_t)BYTE14(v14) << 48);
      *id v2 = v14;
      v2[1] = v8;
      return result;
  }
}

uint64_t sub_10018A240@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    id result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    id result = Data.InlineData.init(_:)();
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    id result = Data.LargeSlice.init(_:)();
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    id result = Data.InlineSlice.init(_:)();
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_10018A2B8(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    id result = _StringGuts.copyUTF8(into:)();
    if ((v1 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_10018A33C(void *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t v6 = a4 - a3;
    uint64_t v7 = a3;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  id result = a1(&v9, v7, v6);
  if (!v4) {
    return (void *)v9;
  }
  return result;
}

char *sub_10018A3A4(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  id result = (char *)__DataStorage._bytes.getter();
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v8 = result;
  id result = (char *)__DataStorage._offset.getter();
  uint64_t v9 = a1 - (void)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v12 = __DataStorage._length.getter();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  id result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3) {
    return (char *)v14;
  }
  return result;
}

void *sub_10018A458(uint64_t a1, void *(*a2)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  id result = a2(&v6, a1, a1 + a4);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

void *sub_10018A4A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  id result = sub_100189F3C(a1, a2, *a3, a3[1]);
  if (!v4)
  {
    *a4 = result;
    a4[1] = v7;
    a4[2] = v8;
    a4[3] = v9;
  }
  return result;
}

void *sub_10018A4DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_10018A4A4(a1, a2, *(uint64_t **)(v3 + 16), a3);
}

uint64_t sub_10018A4F8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10018A2B8(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_10018A53C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10018A4F8(a1, a2);
}

uint64_t sub_10018A55C(Swift::String a1)
{
  v1._rawValue = &off_10020C790;
  return sub_10018C370(a1, v1);
}

uint64_t sub_10018A568(Swift::String a1)
{
  v1._rawValue = &off_10020C7E0;
  return sub_100050CF4(a1, v1);
}

uint64_t sub_10018A588()
{
  uint64_t result = sub_100052520();
  switch(v1)
  {
    case 1:
      uint64_t result = sub_10002130C();
      break;
    case 2:
      uint64_t result = sub_1000473DC();
      break;
    case 3:
      uint64_t result = sub_10004A248();
      break;
    case 4:
      uint64_t result = 1684366707;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10018A5E4()
{
  uint64_t result = sub_100052520();
  switch(v1)
  {
    case 1:
      uint64_t result = sub_10002130C();
      break;
    case 2:
      uint64_t result = sub_1000473DC();
      break;
    case 3:
      uint64_t result = sub_10004A248();
      break;
    case 4:
      uint64_t result = 1684366707;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10018A640(Swift::String a1)
{
  v1._rawValue = &off_10020C878;
  return sub_100050CF4(a1, v1);
}

uint64_t sub_10018A660(char a1)
{
  uint64_t result = 0x656D6954646E65;
  switch(a1)
  {
    case 1:
      uint64_t result = sub_1000473DC();
      break;
    case 2:
      uint64_t result = sub_10004C0B4();
      break;
    case 3:
      uint64_t result = sub_100049BAC();
      break;
    case 4:
      uint64_t result = 0x6E656D7461657274;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10018A6D8(char a1)
{
  uint64_t result = 0x656D6954646E65;
  switch(a1)
  {
    case 1:
      uint64_t result = sub_1000473DC();
      break;
    case 2:
      uint64_t result = sub_10004C0B4();
      break;
    case 3:
      uint64_t result = sub_100049BAC();
      break;
    case 4:
      uint64_t result = 0x6E656D7461657274;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10018A750(Swift::String a1)
{
  v1._rawValue = &off_10020C910;
  return sub_10018C370(a1, v1);
}

uint64_t sub_10018A770(char a1)
{
  if (a1) {
    return 25705;
  }
  else {
    return 0x7374656B637562;
  }
}

uint64_t sub_10018A79C(unsigned __int8 *a1, char *a2)
{
  return sub_10007D9D4(*a1, *a2);
}

Swift::Int sub_10018A7A8()
{
  return sub_10005A078(*v0);
}

uint64_t sub_10018A7B0()
{
  return sub_10005A8CC();
}

Swift::Int sub_10018A7B8(uint64_t a1)
{
  return sub_10005AE98(a1, *v1);
}

uint64_t sub_10018A7C0@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_10020C7E0;
  uint64_t result = sub_100050CF4(*a1, v3);
  *a2 = result;
  return result;
}

uint64_t sub_10018A7F8()
{
  sub_100043A74();
  uint64_t result = sub_10018A588();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_10018A820()
{
  return sub_10018A5E4();
}

uint64_t sub_10018A828@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10018A568(a1);
  *a2 = result;
  return result;
}

void sub_10018A850(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_10018A85C(uint64_t a1)
{
  unint64_t v2 = sub_10018F150();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10018A898(uint64_t a1)
{
  unint64_t v2 = sub_10018F150();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10018A8D4(unsigned __int8 *a1, char *a2)
{
  return sub_10007D828(*a1, *a2);
}

Swift::Int sub_10018A8E0()
{
  return sub_10005A090(*v0);
}

uint64_t sub_10018A8E8()
{
  return sub_10005A7E4();
}

Swift::Int sub_10018A8F0(uint64_t a1)
{
  return sub_10005AEB0(a1, *v1);
}

uint64_t sub_10018A8F8@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_10020C878;
  uint64_t result = sub_100050CF4(*a1, v3);
  *a2 = result;
  return result;
}

uint64_t sub_10018A930()
{
  char v1 = sub_100043A74();
  uint64_t result = sub_10018A660(v1);
  uint64_t *v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_10018A958()
{
  return sub_10018A6D8(*v0);
}

uint64_t sub_10018A960@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10018A640(a1);
  *a2 = result;
  return result;
}

uint64_t sub_10018A988(uint64_t a1)
{
  unint64_t v2 = sub_10018E688();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10018A9C4(uint64_t a1)
{
  unint64_t v2 = sub_10018E688();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10018AA00(char *a1, char *a2)
{
  return sub_10007D7A0(*a1, *a2);
}

Swift::Int sub_10018AA0C()
{
  return sub_10005A0F8();
}

uint64_t sub_10018AA14()
{
  return sub_10005A784();
}

Swift::Int sub_10018AA1C()
{
  return sub_10005AEC8();
}

uint64_t sub_10018AA24@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_10020C910;
  uint64_t result = sub_10018C370(*a1, v3);
  *a2 = result;
  return result;
}

uint64_t sub_10018AA5C()
{
  char v1 = sub_100043A74();
  uint64_t result = sub_10018A770(v1);
  uint64_t *v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_10018AA84()
{
  return sub_10018A770(*v0);
}

uint64_t sub_10018AA8C@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10018A750(a1);
  *a2 = result;
  return result;
}

void sub_10018AAB4(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_10018AAC0(uint64_t a1)
{
  unint64_t v2 = sub_10018F390();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10018AAFC(uint64_t a1)
{
  unint64_t v2 = sub_10018F390();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_10018AB38()
{
  sub_100044DC4();
  sub_100040B7C(v1, v2, v3, v4);
  sub_100043478(&qword_1002340F0);
  sub_100020DEC();
  __chkstk_darwin(v5);
  sub_10004AD54();
  sub_10018F390();
  sub_100020C1C();
  sub_100043478(&qword_1002340D0);
  sub_10018F3DC((uint64_t)&unk_1002340F8);
  sub_100043F0C();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v0) {
    sub_1000460C8();
  }
  uint64_t v6 = sub_100045C50();
  v7(v6);
  sub_100020E2C();
}

uint64_t sub_10018AC58()
{
  sub_100035D8C();
  sub_100043478(&qword_1002340C0);
  sub_100020DEC();
  __chkstk_darwin(v2);
  sub_100043DFC();
  sub_10018F390();
  sub_10004CFA8();
  if (v1)
  {
    sub_10004377C(v0);
  }
  else
  {
    sub_100043478(&qword_1002340D0);
    sub_10018F3DC((uint64_t)&unk_1002340D8);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_10018FE38();
    sub_100020704();
    uint64_t v4 = sub_100048368();
    v5(v4);
    swift_bridgeObjectRetain();
    sub_10004377C(v0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return sub_10004A79C();
}

uint64_t sub_10018ADF0@<X0>(uint64_t *a1@<X8>)
{
  return sub_10018D010(sub_10018AC58, a1);
}

void sub_10018AE1C()
{
}

void sub_10018AE3C()
{
  sub_100044DC4();
  sub_100043478(&qword_100233FE8);
  sub_100020DEC();
  __chkstk_darwin(v1);
  sub_10002D2B0();
  sub_10018E688();
  sub_100043ADC();
  type metadata accessor for Date();
  sub_10018F300((uint64_t)&unk_100233FF0);
  sub_100047748();
  if (!v0)
  {
    type metadata accessor for TreatmentsConfiguration.Area.Experiment();
    KeyedEncodingContainer.encode(_:forKey:)();
    sub_100047748();
    sub_100043478(&qword_100232940);
    sub_10018F454((uint64_t)&qword_10022E048);
    sub_100046EF4();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    sub_100043478(&qword_100233FD0);
    sub_10018E4A4((uint64_t)&unk_100234000);
    sub_100043F0C();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  sub_10003629C();
  v2();
  sub_100020E2C();
}

void sub_10018B098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_100044DC4();
  long long v51 = (void *)v10;
  uint64_t v14 = v13;
  uint64_t v45 = v15;
  uint64_t v49 = type metadata accessor for Date();
  sub_100020DEC();
  uint64_t v46 = v16;
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  char v22 = (char *)&v39 - v21;
  sub_100043478(&qword_100233FB8);
  sub_100020DEC();
  uint64_t v47 = v24;
  uint64_t v48 = v23;
  __chkstk_darwin(v23);
  sub_100042174();
  uint64_t v25 = type metadata accessor for TreatmentsConfiguration.Area.Experiment();
  __chkstk_darwin(v25);
  sub_10002D2D4();
  sub_100049788(v14, v14[3]);
  sub_10018E688();
  uint64_t v50 = v12;
  uint64_t v26 = (uint64_t)v51;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v26)
  {
    sub_10004377C((uint64_t)v14);
  }
  else
  {
    uint64_t v43 = v20;
    id v44 = (int *)v25;
    long long v51 = v14;
    sub_10018F300((uint64_t)&unk_100233FC8);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v27 = *(void (**)(uint64_t, char *, uint64_t))(v46 + 32);
    uint64_t v28 = v22;
    uint64_t v29 = v49;
    v27(v11, v28, v49);
    uint64_t v30 = KeyedDecodingContainer.decode(_:forKey:)();
    Swift::String v40 = v27;
    uint64_t v41 = 0;
    int v31 = v44;
    uint64_t v32 = v44[5];
    uint64_t v42 = v11;
    uint64_t v33 = (uint64_t *)(v11 + v32);
    *uint64_t v33 = v30;
    v33[1] = v34;
    LOBYTE(a10) = 2;
    id v35 = v43;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v40(v42 + v31[6], v35, v29);
    sub_100043478(&qword_100232940);
    char v52 = 3;
    sub_10018F454((uint64_t)&qword_10022E010);
    sub_100045988();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v36 = v42;
    *(void *)(v42 + v31[7]) = a10;
    sub_100043478(&qword_100233FD0);
    char v52 = 4;
    sub_10018E4A4((uint64_t)&unk_100233FD8);
    sub_100045988();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v37 = sub_1000496F8();
    v38(v37);
    *(void *)(v36 + v31[8]) = a10;
    sub_10018E720(v36, v45);
    sub_10004377C((uint64_t)v51);
    sub_10018E784(v36);
  }
  sub_100020E2C();
}

void sub_10018B55C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10018B098(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_10018B574()
{
}

uint64_t sub_10018B58C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73656D614E676162 && a2 == 0xEC00000065636170;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 1701869940 && a2 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_10018B6DC(char a1)
{
  if (!a1) {
    return 0x73656D614E676162;
  }
  if (a1 == 1) {
    return 0x6E69616D6F64;
  }
  return 1701869940;
}

uint64_t sub_10018B730()
{
  sub_100043478(&qword_100234118);
  sub_100020DEC();
  __chkstk_darwin(v1);
  sub_10002D2B0();
  sub_10018F4B0();
  sub_100043ADC();
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (!v0)
  {
    sub_10005020C();
    sub_1000478A8();
    sub_1000478A8();
  }
  uint64_t v2 = sub_100046BEC();
  return v3(v2);
}

void sub_10018B844()
{
  sub_100044DC4();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_100043478(&qword_100234108);
  sub_100020DEC();
  __chkstk_darwin(v5);
  sub_10002D2D4();
  sub_100043DFC();
  sub_10018F4B0();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0)
  {
    sub_10004377C(v2);
  }
  else
  {
    uint64_t v6 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v8 = v7;
    uint64_t v19 = v6;
    sub_10005020C();
    swift_bridgeObjectRetain();
    uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v11 = v10;
    uint64_t v17 = v9;
    swift_bridgeObjectRetain();
    uint64_t v18 = v11;
    uint64_t v12 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v14 = v13;
    uint64_t v15 = v12;
    sub_10003629C();
    v16();
    swift_bridgeObjectRetain();
    sub_10004377C(v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *uint64_t v4 = v19;
    v4[1] = v8;
    v4[2] = v17;
    v4[3] = v18;
    v4[4] = v15;
    v4[5] = v14;
  }
  sub_100020E2C();
}

uint64_t sub_10018BA6C()
{
  sub_100043478(&qword_100234090);
  sub_100020DEC();
  __chkstk_darwin(v1);
  sub_10002D2B0();
  sub_10018F150();
  sub_100043ADC();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v0)
  {
    sub_100043478(&qword_100234050);
    sub_10018F19C((uint64_t)&unk_100234098);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_10004A428(2);
    KeyedEncodingContainer.encode(_:forKey:)();
    sub_10004A428(3);
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    sub_10018F344();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  uint64_t v2 = sub_100046BEC();
  return v3(v2);
}

void sub_10018BC48()
{
  sub_100044DC4();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_100043478(&qword_100234040);
  sub_100020DEC();
  __chkstk_darwin(v5);
  sub_100042174();
  sub_100049788(v2, v2[3]);
  sub_10018F150();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0)
  {
    sub_10004377C((uint64_t)v2);
  }
  else
  {
    LOBYTE(v17) = 0;
    sub_100051634();
    char v6 = KeyedDecodingContainer.decode(_:forKey:)();
    sub_100043478(&qword_100234050);
    sub_10018F19C((uint64_t)&unk_100234058);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    swift_bridgeObjectRetain();
    sub_100051634();
    uint64_t v15 = KeyedDecodingContainer.decode(_:forKey:)();
    char v23 = v6;
    uint64_t v7 = v17;
    LOBYTE(v17) = 3;
    uint64_t v9 = v8;
    swift_bridgeObjectRetain();
    sub_100051634();
    uint64_t v16 = v9;
    uint64_t v14 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v11 = v10;
    sub_10018F21C();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v12 = sub_100048988();
    v13(v12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10004377C((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(unsigned char *)uint64_t v4 = v23 & 1;
    *(void *)(v4 + 8) = v7;
    *(void *)(v4 + 16) = v15;
    *(void *)(v4 + 24) = v16;
    *(void *)(v4 + 32) = v14;
    *(void *)(v4 + 40) = v11;
    *(void *)(v4 + 48) = v17;
    *(void *)(v4 + 56) = v18;
    *(void *)(v4 + 64) = v19;
    *(void *)(v4 + 72) = v20;
    *(void *)(v4 + 80) = v21;
    *(void *)(v4 + 88) = v22;
  }
  sub_100020E2C();
}

uint64_t sub_10018BFE0(Swift::String a1)
{
  v1._rawValue = &off_10020C960;
  return sub_10018C370(a1, v1);
}

uint64_t sub_10018C000(char a1)
{
  if (a1) {
    return 0x73644961657261;
  }
  else {
    return 25705;
  }
}

void sub_10018C02C()
{
  sub_100044DC4();
  sub_100043478(&qword_1002340B0);
  sub_100020DEC();
  __chkstk_darwin(v1);
  sub_10004AD54();
  sub_10018F268();
  sub_100020C1C();
  sub_1000478A8();
  if (!v0)
  {
    sub_10005020C();
    sub_100043478(&qword_100232940);
    sub_10018F454((uint64_t)&qword_10022E048);
    sub_100049EC0();
  }
  uint64_t v2 = sub_100040D3C();
  v3(v2);
  sub_100020E2C();
}

void sub_10018C16C()
{
  sub_100044DC4();
  sub_100035D8C();
  sub_100043478(&qword_100234070);
  sub_100020DEC();
  __chkstk_darwin(v2);
  sub_100049788(v0, v0[3]);
  sub_10018F268();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    sub_10004377C((uint64_t)v0);
  }
  else
  {
    KeyedDecodingContainer.decode(_:forKey:)();
    sub_100043478(&qword_100232940);
    sub_10005020C();
    sub_10018F454((uint64_t)&qword_10022E010);
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_10003629C();
    v3();
    sub_10004377C((uint64_t)v0);
    swift_bridgeObjectRelease();
  }
  sub_100020E2C();
}

uint64_t sub_10018C370(Swift::String a1, Swift::OpaquePointer a2)
{
  Swift::Int v2 = sub_100050E20(a1, a2);
  swift_bridgeObjectRelease();
  if (v2 == 1) {
    unsigned int v3 = 1;
  }
  else {
    unsigned int v3 = 2;
  }
  if (v2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t sub_10018C3B0(Swift::String a1)
{
  v1._rawValue = &off_10020C9B0;
  return sub_10018C370(a1, v1);
}

uint64_t sub_10018C3D0(char a1)
{
  if (a1) {
    return 25705;
  }
  else {
    return 0x73644961657261;
  }
}

void sub_10018C3FC()
{
  sub_100044DC4();
  sub_100040B7C(v1, v2, v3, v4);
  sub_100043478(&qword_1002340B8);
  sub_100020DEC();
  __chkstk_darwin(v5);
  sub_10004AD54();
  sub_10018F2B4();
  sub_100020C1C();
  sub_100043478(&qword_100232940);
  sub_10018F454((uint64_t)&qword_10022E048);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v0) {
    sub_1000460C8();
  }
  uint64_t v6 = sub_100045C50();
  v7(v6);
  sub_100020E2C();
}

uint64_t sub_10018C528()
{
  sub_100035D8C();
  sub_100043478(&qword_100234080);
  sub_100020DEC();
  __chkstk_darwin(v2);
  sub_100043DFC();
  sub_10018F2B4();
  sub_10004CFA8();
  if (v1)
  {
    sub_10004377C(v0);
  }
  else
  {
    sub_100043478(&qword_100232940);
    sub_10018F454((uint64_t)&qword_10022E010);
    sub_1000410CC();
    sub_10018FE38();
    sub_100020704();
    uint64_t v4 = sub_100048368();
    v5(v4);
    swift_bridgeObjectRetain();
    sub_10004377C(v0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return sub_10004A79C();
}

uint64_t sub_10018C6AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7361657261 && a2 == 0xE500000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x63617073656D616ELL && a2 == 0xEA00000000007365;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x736369706F74 && a2 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_10018C7F8(char a1)
{
  if (!a1) {
    return 0x7361657261;
  }
  if (a1 == 1) {
    return 0x63617073656D616ELL;
  }
  return 0x736369706F74;
}

void sub_10018C84C()
{
  sub_100044DC4();
  sub_100043478(&qword_100233F80);
  sub_100020DEC();
  __chkstk_darwin(v1);
  sub_10004AD54();
  sub_10018E40C();
  sub_100020C1C();
  sub_100043478(&qword_100233F38);
  sub_10018E4A4((uint64_t)&unk_100233F88);
  sub_100046EF4();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v0)
  {
    sub_100043478(&qword_100233F50);
    sub_10018E4A4((uint64_t)&unk_100233F98);
    sub_100049EC0();
    sub_100043478(&qword_100233F68);
    sub_10018E4A4((uint64_t)&unk_100233FA8);
    sub_100049EC0();
  }
  uint64_t v2 = sub_100040D3C();
  v3(v2);
  sub_100020E2C();
}

void sub_10018CA5C()
{
  sub_100044DC4();
  sub_100035D8C();
  sub_100043478(&qword_100233F28);
  sub_100020DEC();
  __chkstk_darwin(v2);
  sub_100043DFC();
  sub_10018E40C();
  sub_10004CFA8();
  if (v1)
  {
    sub_10004377C(v0);
  }
  else
  {
    sub_100043478(&qword_100233F38);
    sub_10018E4A4((uint64_t)&unk_100233F40);
    sub_1000410CC();
    sub_100043478(&qword_100233F50);
    sub_10018E4A4((uint64_t)&unk_100233F58);
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_100043478(&qword_100233F68);
    sub_10018E4A4((uint64_t)&unk_100233F70);
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_10003629C();
    v3();
    swift_bridgeObjectRetain();
    sub_10004377C(v0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_100020E2C();
}

uint64_t sub_10018CD50()
{
  return sub_10018B6DC(*v0);
}

uint64_t sub_10018CD58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10018B58C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10018CD80(uint64_t a1)
{
  unint64_t v2 = sub_10018F4B0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10018CDBC(uint64_t a1)
{
  unint64_t v2 = sub_10018F4B0();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_10018CDF8@<D0>(_OWORD *a1@<X8>)
{
  sub_10018B844();
  if (!v1)
  {
    *a1 = v4;
    a1[1] = v5;
    double result = *(double *)&v6;
    a1[2] = v6;
  }
  return result;
}

uint64_t sub_10018CE3C()
{
  return sub_10018B730();
}

void sub_10018CE54(void *a1@<X8>)
{
  sub_10018BC48();
  if (!v1) {
    memcpy(a1, v3, 0x60uLL);
  }
}

uint64_t sub_10018CEA0()
{
  return sub_10018BA6C();
}

uint64_t sub_10018CEB8(char *a1, char *a2)
{
  return sub_10007D690(*a1, *a2);
}

Swift::Int sub_10018CEC4()
{
  return sub_10005A104();
}

uint64_t sub_10018CECC()
{
  return sub_10005A6C4();
}

Swift::Int sub_10018CED4()
{
  return sub_10005AF90();
}

uint64_t sub_10018CEDC@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_10020C960;
  uint64_t result = sub_10018C370(*a1, v3);
  *a2 = result;
  return result;
}

uint64_t sub_10018CF14()
{
  char v1 = sub_100043A74();
  uint64_t result = sub_10018C000(v1);
  uint64_t *v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_10018CF3C()
{
  return sub_10018C000(*v0);
}

uint64_t sub_10018CF44@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10018BFE0(a1);
  *a2 = result;
  return result;
}

uint64_t sub_10018CF6C(uint64_t a1)
{
  unint64_t v2 = sub_10018F268();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10018CFA8(uint64_t a1)
{
  unint64_t v2 = sub_10018F268();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10018CFE4@<X0>(uint64_t *a1@<X8>)
{
  return sub_10018D010((uint64_t (*)(void))sub_10018C16C, a1);
}

uint64_t sub_10018D010@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

void sub_10018D044()
{
}

uint64_t sub_10018D064(char *a1, char *a2)
{
  return sub_10007D718(*a1, *a2);
}

Swift::Int sub_10018D070()
{
  return sub_10005A110();
}

uint64_t sub_10018D078()
{
  return sub_10005A724();
}

Swift::Int sub_10018D080()
{
  return sub_10005AF2C();
}

uint64_t sub_10018D088@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_10020C9B0;
  uint64_t result = sub_10018C370(*a1, v3);
  *a2 = result;
  return result;
}

uint64_t sub_10018D0C0()
{
  char v1 = sub_100043A74();
  uint64_t result = sub_10018C3D0(v1);
  uint64_t *v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_10018D0E8()
{
  return sub_10018C3D0(*v0);
}

uint64_t sub_10018D0F0@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10018C3B0(a1);
  *a2 = result;
  return result;
}

uint64_t sub_10018D118(uint64_t a1)
{
  unint64_t v2 = sub_10018F2B4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10018D154(uint64_t a1)
{
  unint64_t v2 = sub_10018F2B4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10018D190@<X0>(uint64_t *a1@<X8>)
{
  return sub_10018D010(sub_10018C528, a1);
}

void sub_10018D1BC()
{
}

uint64_t sub_10018D1DC()
{
  return sub_10018C7F8(*v0);
}

uint64_t sub_10018D1E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10018C6AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10018D20C(uint64_t a1)
{
  unint64_t v2 = sub_10018E40C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10018D248(uint64_t a1)
{
  unint64_t v2 = sub_10018E40C();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_10018D284(void *a1@<X8>)
{
  sub_10018CA5C();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
    a1[2] = v5;
  }
}

void sub_10018D2B4()
{
}

uint64_t sub_10018D2D4()
{
  sub_100043478(&qword_10022FAD8);
  id v1 = [*(id *)(v0 + 16) URLForKey:*(void *)(v0 + 24)];
  id v2 = [v1 valuePromise];

  Promise<A>.init(_:)();
  uint64_t v3 = type metadata accessor for SyncTaskScheduler();
  uint64_t v7 = v3;
  char v8 = &protocol witness table for SyncTaskScheduler;
  sub_10003BAA4(v6);
  swift_retain();
  SyncTaskScheduler.init()();
  sub_100043478((uint64_t *)&unk_100233E60);
  sub_10017D734();
  Promise.flatMap<A>(on:_:)();
  swift_release();
  sub_10004377C((uint64_t)v6);
  uint64_t v7 = v3;
  char v8 = &protocol witness table for SyncTaskScheduler;
  sub_10003BAA4(v6);
  SyncTaskScheduler.init()();
  uint64_t v4 = Promise.map<A>(on:_:)();
  swift_release();
  swift_release();
  sub_10004377C((uint64_t)v6);
  return v4;
}

uint64_t sub_10018D444(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100043478((uint64_t *)&unk_100232000);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for URLRequest();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  URLRequest.init(url:cachePolicy:timeoutInterval:)();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v10, v7);
  sub_100021AC0((uint64_t)v5, 0, 1, v7);
  uint64_t v11 = *(void *)(a2 + 16);
  objc_allocWithZone((Class)AMSURLRequest);
  swift_unknownObjectRetain();
  id v12 = sub_10018DA78((uint64_t)v5, v11);
  if (v12)
  {
    uint64_t v13 = v12;
    id v14 = [*(id *)(a2 + 32) dataTaskPromiseWithRequest:v12];
    sub_100043478((uint64_t *)&unk_100233E60);
    uint64_t v15 = Promise<A>.init(_:)();
  }
  else
  {
    sub_100043478((uint64_t *)&unk_100233E60);
    sub_10018D994();
    swift_allocError();
    *(void *)uint64_t v16 = 0;
    *(unsigned char *)(v16 + 8) = 1;
    uint64_t v15 = Promise.__allocating_init(error:)();
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v15;
}

void sub_10018D6B8(id *a1)
{
  uint64_t v2 = type metadata accessor for JSONDecoder.DateDecodingStrategy();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = *a1;
  id v7 = [*a1 response];
  if (!v7) {
    goto LABEL_6;
  }
  uint64_t v8 = v7;
  self;
  uint64_t v9 = (void *)swift_dynamicCastObjCClass();
  if (!v9)
  {

LABEL_6:
    sub_10018D994();
    swift_allocError();
    *(void *)uint64_t v13 = 1;
    *(unsigned char *)(v13 + 8) = 1;
    swift_willThrow();
    return;
  }
  uint64_t v10 = (char *)[v9 statusCode];
  if ((unint64_t)(v10 - 300) >= 0xFFFFFFFFFFFFFF9CLL)
  {
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for JSONDecoder.DateDecodingStrategy.secondsSince1970(_:), v2);
    dispatch thunk of JSONDecoder.dateDecodingStrategy.setter();
    id v14 = [v6 data];
    uint64_t v15 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v17 = v16;

    sub_10018D9E0();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    sub_10004B278(v15, v17);

    swift_release();
  }
  else
  {
    uint64_t v11 = v10;
    sub_10018D994();
    swift_allocError();
    *(void *)uint64_t v12 = v11;
    *(unsigned char *)(v12 + 8) = 0;
    swift_willThrow();
  }
}

uint64_t sub_10018D904()
{
  swift_unknownObjectRelease();

  return v0;
}

uint64_t sub_10018D934()
{
  sub_10018D904();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TreatmentsConfigurationProvider()
{
  return self;
}

uint64_t sub_10018D98C(uint64_t a1)
{
  return sub_10018D444(a1, v1);
}

unint64_t sub_10018D994()
{
  unint64_t result = qword_100233E70;
  if (!qword_100233E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100233E70);
  }
  return result;
}

unint64_t sub_10018D9E0()
{
  unint64_t result = qword_100233E78;
  if (!qword_100233E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100233E78);
  }
  return result;
}

uint64_t sub_10018DA2C(uint64_t a1, char a2, uint64_t a3, char a4)
{
  BOOL v5 = (a4 & 1) == 0 && a1 == a3;
  unsigned int v6 = a4 & 1;
  if (a3) {
    int v7 = a4 & 1;
  }
  else {
    int v7 = 0;
  }
  if (a3) {
    unsigned int v6 = 0;
  }
  if (a1) {
    unsigned int v6 = v7;
  }
  if (a2) {
    return v6;
  }
  else {
    return v5;
  }
}

uint64_t sub_10018DA5C(uint64_t a1, uint64_t a2)
{
  return sub_10018DA2C(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned char *)(a2 + 8));
}

id sub_10018DA78(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for URLRequest();
  Class isa = 0;
  if (sub_10004FD40(a1, 1, v6) != 1)
  {
    Class isa = URLRequest._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  }
  id v8 = [v3 initWithRequest:isa bag:a2];

  swift_unknownObjectRelease();
  return v8;
}

void type metadata accessor for TreatmentsConfigurationProviderError()
{
}

void *sub_10018DB4C(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10018DB9C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10018DC14(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for TreatmentsConfiguration()
{
}

char *sub_10018DC78(char *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    id v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    uint64_t v11 = &a1[v9];
    uint64_t v12 = (uint64_t *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    *(void *)uint64_t v11 = *v12;
    *((void *)v11 + 1) = v13;
    id v14 = &a1[v10];
    uint64_t v15 = (char *)a2 + v10;
    swift_bridgeObjectRetain();
    v8(v14, v15, v7);
    uint64_t v16 = a3[8];
    *(void *)&a1[a3[7]] = *(uint64_t *)((char *)a2 + a3[7]);
    *(void *)&a1[v16] = *(uint64_t *)((char *)a2 + v16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10018DDA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  v5(a1 + *(int *)(a2 + 24), v4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10018DE60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = (void *)(a1 + v8);
  uint64_t v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = a1 + v9;
  uint64_t v14 = a2 + v9;
  swift_bridgeObjectRetain();
  v7(v13, v14, v6);
  uint64_t v15 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10018DF3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  void *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7(a1 + a3[6], a2 + a3[6], v6);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10018E040(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v7(a1 + v8, a2 + v8, v6);
  uint64_t v9 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  return a1;
}

uint64_t sub_10018E0F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  void *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v7(a1 + a3[6], a2 + a3[6], v6);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10018E1D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10018E1E4);
}

uint64_t sub_10018E1E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Date();
  sub_100044124();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return sub_10004FD40(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_10018E274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10018E288);
}

void sub_10018E288(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Date();
  sub_100044124();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    sub_100021AC0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
}

uint64_t type metadata accessor for TreatmentsConfiguration.Area.Experiment()
{
  uint64_t result = qword_100233EE0;
  if (!qword_100233EE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10018E35C()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_10018E40C()
{
  unint64_t result = qword_100233F30;
  if (!qword_100233F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100233F30);
  }
  return result;
}

unint64_t sub_10018E458()
{
  unint64_t result = qword_100233F48;
  if (!qword_100233F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100233F48);
  }
  return result;
}

unint64_t sub_10018E4A4(uint64_t a1)
{
  unint64_t result = sub_10004A4A0(a1);
  if (!result)
  {
    int v5 = v4;
    sub_10006026C(v3);
    v5();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_10018E50C()
{
  unint64_t result = qword_100233F60;
  if (!qword_100233F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100233F60);
  }
  return result;
}

unint64_t sub_10018E558()
{
  unint64_t result = qword_100233F78;
  if (!qword_100233F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100233F78);
  }
  return result;
}

unint64_t sub_10018E5A4()
{
  unint64_t result = qword_100233F90;
  if (!qword_100233F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100233F90);
  }
  return result;
}

unint64_t sub_10018E5F0()
{
  unint64_t result = qword_100233FA0;
  if (!qword_100233FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100233FA0);
  }
  return result;
}

unint64_t sub_10018E63C()
{
  unint64_t result = qword_100233FB0;
  if (!qword_100233FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100233FB0);
  }
  return result;
}

unint64_t sub_10018E688()
{
  unint64_t result = qword_100233FC0;
  if (!qword_100233FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100233FC0);
  }
  return result;
}

unint64_t sub_10018E6D4()
{
  unint64_t result = qword_100233FE0;
  if (!qword_100233FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100233FE0);
  }
  return result;
}

uint64_t sub_10018E720(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TreatmentsConfiguration.Area.Experiment();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10018E784(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TreatmentsConfiguration.Area.Experiment();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10018E7E0()
{
  unint64_t result = qword_100234008;
  if (!qword_100234008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234008);
  }
  return result;
}

void type metadata accessor for TreatmentsConfiguration.Area.Experiment.CodingKeys()
{
}

ValueMetadata *type metadata accessor for TreatmentsConfiguration.CodingKeys()
{
  return &type metadata for TreatmentsConfiguration.CodingKeys;
}

void type metadata accessor for TreatmentsConfiguration.Topic()
{
}

void type metadata accessor for TreatmentsConfiguration.Namespace()
{
}

uint64_t sub_10018E87C()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_10018E8B8(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10018E8F8(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_10018E960(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10018E9A8(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10018E9E8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for TreatmentsConfiguration.Area.Experiment.Treatment()
{
}

uint64_t sub_10018EA34()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_10018EA78(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10018EAD0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_10018EB60(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10018EBB8(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10018EBF8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for TreatmentsConfiguration.Area.Seed()
{
}

uint64_t sub_10018EC50()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10018ECAC(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10018ED44(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_10018EE34(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x60uLL);
}

uint64_t sub_10018EE3C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10018EECC(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 96))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10018EF0C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for TreatmentsConfiguration.Area()
{
}

unint64_t sub_10018EF74()
{
  unint64_t result = qword_100234010;
  if (!qword_100234010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234010);
  }
  return result;
}

unint64_t sub_10018EFC4()
{
  unint64_t result = qword_100234018;
  if (!qword_100234018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234018);
  }
  return result;
}

unint64_t sub_10018F014()
{
  unint64_t result = qword_100234020;
  if (!qword_100234020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234020);
  }
  return result;
}

unint64_t sub_10018F064()
{
  unint64_t result = qword_100234028;
  if (!qword_100234028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234028);
  }
  return result;
}

unint64_t sub_10018F0B4()
{
  unint64_t result = qword_100234030;
  if (!qword_100234030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234030);
  }
  return result;
}

unint64_t sub_10018F104()
{
  unint64_t result = qword_100234038;
  if (!qword_100234038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234038);
  }
  return result;
}

unint64_t sub_10018F150()
{
  unint64_t result = qword_100234048;
  if (!qword_100234048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234048);
  }
  return result;
}

unint64_t sub_10018F19C(uint64_t a1)
{
  unint64_t result = sub_10004A4A0(a1);
  if (!result)
  {
    uint64_t v4 = v3;
    sub_10006026C(&qword_100234050);
    sub_10018F300(v4);
    unint64_t result = sub_100042798();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_10018F21C()
{
  unint64_t result = qword_100234068;
  if (!qword_100234068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234068);
  }
  return result;
}

unint64_t sub_10018F268()
{
  unint64_t result = qword_100234078;
  if (!qword_100234078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234078);
  }
  return result;
}

unint64_t sub_10018F2B4()
{
  unint64_t result = qword_100234088;
  if (!qword_100234088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234088);
  }
  return result;
}

unint64_t sub_10018F300(uint64_t a1)
{
  unint64_t result = sub_10004A4A0(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_10018F344()
{
  unint64_t result = qword_1002340A8;
  if (!qword_1002340A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002340A8);
  }
  return result;
}

unint64_t sub_10018F390()
{
  unint64_t result = qword_1002340C8;
  if (!qword_1002340C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002340C8);
  }
  return result;
}

unint64_t sub_10018F3DC(uint64_t a1)
{
  unint64_t result = sub_10004A4A0(a1);
  if (!result)
  {
    uint64_t v4 = v3;
    sub_10006026C(&qword_1002340D0);
    sub_10018F454(v4);
    unint64_t result = sub_100042798();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_10018F454(uint64_t a1)
{
  unint64_t result = sub_10004A4A0(a1);
  if (!result)
  {
    sub_10006026C(v3);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_10018F4B0()
{
  unint64_t result = qword_100234110;
  if (!qword_100234110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234110);
  }
  return result;
}

uint64_t _s14amsengagementd23TreatmentsConfigurationV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_10004FC80(-1);
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_10004FC80((*a1 | (v4 << 8)) - 3);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_10004FC80((*a1 | (v4 << 8)) - 3);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_10004FC80((*a1 | (v4 << 8)) - 3);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return sub_10004FC80(v8);
}

unsigned char *_s14amsengagementd23TreatmentsConfigurationV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)sub_100022840((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)sub_10004C238((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10018F63CLL);
      case 4:
        unint64_t result = (unsigned char *)sub_100040A48((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = sub_10004D21C(result, a2 + 2);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TreatmentsConfiguration.Area.Seed.CodingKeys()
{
  return &type metadata for TreatmentsConfiguration.Area.Seed.CodingKeys;
}

void type metadata accessor for TreatmentsConfiguration.Area.Experiment.Treatment.CodingKeys()
{
}

void type metadata accessor for TreatmentsConfiguration.Topic.CodingKeys()
{
}

uint64_t sub_10018F694(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_10004FC80(-1);
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_10004FC80((*a1 | (v4 << 8)) - 2);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_10004FC80((*a1 | (v4 << 8)) - 2);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_10004FC80((*a1 | (v4 << 8)) - 2);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return sub_10004FC80(v8);
}

unsigned char *sub_10018F718(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)sub_100022840((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)sub_10004C238((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10018F7D4);
      case 4:
        unint64_t result = (unsigned char *)sub_100040A48((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = sub_10004D21C(result, a2 + 1);
        break;
    }
  }
  return result;
}

void type metadata accessor for TreatmentsConfiguration.Namespace.CodingKeys()
{
}

uint64_t sub_10018F808(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_10004FC80(-1);
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_10004FC80((*a1 | (v4 << 8)) - 5);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_10004FC80((*a1 | (v4 << 8)) - 5);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_10004FC80((*a1 | (v4 << 8)) - 5);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return sub_10004FC80(v8);
}

unsigned char *sub_10018F88C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)sub_100022840((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)sub_10004C238((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10018F948);
      case 4:
        unint64_t result = (unsigned char *)sub_100040A48((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = sub_10004D21C(result, a2 + 4);
        break;
    }
  }
  return result;
}

void type metadata accessor for TreatmentsConfiguration.Area.CodingKeys()
{
}

unint64_t sub_10018F980()
{
  unint64_t result = qword_100234120;
  if (!qword_100234120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234120);
  }
  return result;
}

unint64_t sub_10018F9D0()
{
  unint64_t result = qword_100234128;
  if (!qword_100234128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234128);
  }
  return result;
}

unint64_t sub_10018FA20()
{
  unint64_t result = qword_100234130;
  if (!qword_100234130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234130);
  }
  return result;
}

unint64_t sub_10018FA70()
{
  unint64_t result = qword_100234138;
  if (!qword_100234138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234138);
  }
  return result;
}

unint64_t sub_10018FAC0()
{
  unint64_t result = qword_100234140;
  if (!qword_100234140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234140);
  }
  return result;
}

unint64_t sub_10018FB10()
{
  unint64_t result = qword_100234148;
  if (!qword_100234148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234148);
  }
  return result;
}

unint64_t sub_10018FB60()
{
  unint64_t result = qword_100234150;
  if (!qword_100234150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234150);
  }
  return result;
}

unint64_t sub_10018FBB0()
{
  unint64_t result = qword_100234158;
  if (!qword_100234158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234158);
  }
  return result;
}

unint64_t sub_10018FC00()
{
  unint64_t result = qword_100234160;
  if (!qword_100234160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234160);
  }
  return result;
}

unint64_t sub_10018FC50()
{
  unint64_t result = qword_100234168;
  if (!qword_100234168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234168);
  }
  return result;
}

unint64_t sub_10018FCA0()
{
  unint64_t result = qword_100234170;
  if (!qword_100234170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234170);
  }
  return result;
}

unint64_t sub_10018FCF0()
{
  unint64_t result = qword_100234178;
  if (!qword_100234178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234178);
  }
  return result;
}

unint64_t sub_10018FD40()
{
  unint64_t result = qword_100234180;
  if (!qword_100234180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234180);
  }
  return result;
}

unint64_t sub_10018FD90()
{
  unint64_t result = qword_100234188;
  if (!qword_100234188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234188);
  }
  return result;
}

unint64_t sub_10018FDE0()
{
  unint64_t result = qword_100234190;
  if (!qword_100234190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234190);
  }
  return result;
}

uint64_t sub_10018FE38()
{
  *(unsigned char *)(v0 - 74) = 1;
  return swift_bridgeObjectRetain();
}

NSString sub_10018FE58()
{
  uint64_t v0 = sub_100021AF4();
  *(void *)(v0 + 16) = 0;
  uint64_t v1 = sub_100021AF4();
  *(void *)(v1 + 16) = 0;
  int v2 = (void *)(v1 + 16);
  dispatch_semaphore_t v3 = dispatch_semaphore_create(0);
  unsigned int v4 = (void *)swift_allocObject();
  v4[2] = v1;
  v4[3] = v0;
  v4[4] = v3;
  swift_retain();
  swift_retain();
  uint64_t v5 = v3;
  sub_1000AE70C();
  swift_release();
  OS_dispatch_semaphore.wait()();
  sub_10002CAAC();
  NSString v6 = *(NSString *)(v0 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    swift_release();
    swift_release();
  }
  else
  {
    sub_10002CAAC();
    if (!*v2)
    {
      NSString v6 = sub_10004B608();
      sub_1000421E4();
      (id)sub_10004C0D0();
    }
    swift_errorRetain();
    swift_willThrow();
    swift_release();
    swift_release();
  }
  return v6;
}

void sub_10018FFE8(_OWORD *a1@<X8>)
{
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  uint64_t v3 = sub_100021AF4();
  *(void *)(v3 + 16) = 0;
  dispatch_semaphore_t v4 = dispatch_semaphore_create(0);
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = v3;
  void v5[3] = v2;
  v5[4] = v4;
  swift_retain();
  swift_retain();
  NSString v6 = v4;
  sub_1000AFA54();
  swift_release();
  OS_dispatch_semaphore.wait()();
  sub_10002CAAC();
  sub_10004FDC8(v2 + 16, (uint64_t)&v9, &qword_10022F118);
  if (*((void *)&v10 + 1))
  {

    long long v7 = v10;
    *a1 = v9;
    a1[1] = v7;
    swift_release();
    swift_release();
  }
  else
  {
    sub_10002CC68((uint64_t)&v9, &qword_10022F118);
    sub_10002CAAC();
    if (!*(void *)(v3 + 16))
    {
      NSString v8 = sub_10004B608();
      sub_1000421E4();
      (id)sub_10004C0D0();
    }
    swift_errorRetain();
    swift_willThrow();
    swift_release();
    swift_release();
  }
}

void sub_1001901B8()
{
  uint64_t v0 = swift_allocObject();
  *(unsigned char *)(v0 + 16) = 1;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0;
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  uint64_t v3 = (void *)swift_allocObject();
  v3[2] = v1;
  v3[3] = v0;
  void v3[4] = v2;
  swift_retain();
  swift_retain();
  dispatch_semaphore_t v4 = v2;
  sub_1000AEABC();
  swift_release();
  OS_dispatch_semaphore.wait()();
  swift_beginAccess();
  if (*(unsigned char *)(v0 + 16))
  {
    swift_beginAccess();
    if (!*(void *)(v1 + 16))
    {
      NSString v5 = String._bridgeToObjectiveC()();
      NSString v6 = String._bridgeToObjectiveC()();
      (id)AMSError();
    }
    swift_errorRetain();
    swift_willThrow();
  }
  swift_release();
  swift_release();
}

Swift::Int sub_10019038C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a3 + 16) = a2;
  swift_errorRetain();
  swift_errorRelease();
  swift_beginAccess();
  *(void *)(a4 + 16) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return OS_dispatch_semaphore.signal()();
}

Swift::Int sub_10019043C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a4 + 16;
  swift_beginAccess();
  *(void *)(a3 + 16) = a2;
  swift_errorRetain();
  swift_errorRelease();
  swift_beginAccess();
  sub_100192398(a1, v7);
  return OS_dispatch_semaphore.signal()();
}

Swift::Int sub_1001904D4(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a3 + 16) = a2;
  swift_errorRetain();
  swift_errorRelease();
  swift_beginAccess();
  *(unsigned char *)(a4 + 16) = a1 & 1;
  return OS_dispatch_semaphore.signal()();
}

uint64_t sub_100190574()
{
  return StringProtocol.hash.getter();
}

uint64_t sub_1001905C8()
{
  type metadata accessor for Treatment(0);
  return String.hash(into:)();
}

uint64_t sub_100190610(uint64_t a1, uint64_t a2)
{
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for Treatment(0) + 20);
  uint64_t v5 = *(void *)(a1 + v4);
  uint64_t v6 = *(void *)(a1 + v4 + 8);
  uint64_t v7 = (void *)(a2 + v4);
  BOOL v8 = v5 == *v7 && v6 == v7[1];
  if (!v8 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  return static Date.== infix(_:_:)();
}

Swift::Int sub_1001906B4()
{
  return Hasher._finalize()();
}

uint64_t sub_100190704(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = URL.path.getter();
  uint64_t v6 = v5;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  type metadata accessor for SQLDatabase();
  swift_allocObject();
  swift_retain();
  return SQLDatabase.init(path:readonly:fileProtection:schemaBlock:corruptionBlock:)(v4, v6, 0, 0, (uint64_t)sub_10002DBC8, v7, (uint64_t)sub_1001922B8, a1);
}

uint64_t sub_1001907D4()
{
  return swift_release();
}

uint64_t sub_100190818(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v13 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  sub_100020DEC();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_10002D300();
  type metadata accessor for OS_dispatch_queue.Attributes();
  sub_100043B1C();
  __chkstk_darwin(v7);
  sub_100020EAC();
  uint64_t v8 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v8 - 8);
  sub_100020EAC();
  sub_10004D510(0, (unint64_t *)&qword_10022F690);
  if (qword_10022C590 != -1) {
    swift_once();
  }
  id v9 = (id)qword_100244188;
  static DispatchQoS.unspecified.getter();
  sub_100192208((unint64_t *)&qword_10022F470, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100043478((uint64_t *)&unk_100231D60);
  sub_10002B720((unint64_t *)&qword_10022F480, (uint64_t *)&unk_100231D60);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v2, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v13);
  sub_10002064C();
  *(void *)(v1 + 16) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)(v1 + 24) = 0;
  uint64_t v10 = v1 + OBJC_IVAR____TtC14amsengagementd17TreatmentsStorage_storageURL;
  type metadata accessor for URL();
  sub_100043B1C();
  (*(void (**)(uint64_t, uint64_t))(v11 + 32))(v10, a1);
  return v3;
}

uint64_t sub_100190A98()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  sub_100020DEC();
  uint64_t v18 = v2;
  __chkstk_darwin(v3);
  sub_100020EAC();
  uint64_t v6 = v5 - v4;
  uint64_t v17 = type metadata accessor for DispatchQoS();
  sub_100020DEC();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_10002D300();
  sub_100043478(&qword_10022F198);
  uint64_t v10 = Promise.__allocating_init()();
  uint64_t v11 = URL.path.getter();
  uint64_t v13 = v12;
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = v11;
  void v14[3] = v13;
  void v14[4] = v10;
  aBlock[4] = sub_1001921FC;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CD0C;
  void aBlock[3] = &unk_100217990;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  sub_100192208((unint64_t *)&qword_100231DA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_10002B720((unint64_t *)&qword_100231DB0, (uint64_t *)&unk_10022F4C0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v6, v1);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0, v17);
  swift_release();
  return v10;
}

uint64_t sub_100190D14()
{
  return Promise.resolve(_:)();
}

uint64_t sub_100190E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100190F18(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100190E38);
}

uint64_t sub_100190E38()
{
  sub_10004549C();
  swift_bridgeObjectRelease();
  sub_100050044();
  sub_100043478(&qword_10022D780);
  uint64_t inited = (__n128 *)swift_initStackObject();
  sub_100049BCC(inited, (__n128)xmmword_1001C3120);
  swift_bridgeObjectRetain();
  sub_10002064C();
  sub_100044204(61, v1);
  swift_setDeallocating();
  sub_1000500CC();
  return swift_release();
}

uint64_t sub_100190EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100190F18(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100190FCC);
}

uint64_t sub_100190F18(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(result + 16);
  if (v6)
  {
    for (uint64_t i = (uint64_t *)(swift_bridgeObjectRetain() + 40); ; i += 2)
    {
      uint64_t v11 = *(i - 1);
      uint64_t v12 = *i;
      swift_bridgeObjectRetain();
      a4(v11, v12, a2, a3);
      if (v5) {
        break;
      }
      swift_bridgeObjectRelease();
      if (!--v6) {
        return swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100190FCC()
{
  sub_10004549C();
  swift_bridgeObjectRelease();
  sub_100050044();
  sub_100043478(&qword_10022D780);
  uint64_t inited = (__n128 *)swift_initStackObject();
  sub_100049BCC(inited, (__n128)xmmword_1001C3120);
  swift_bridgeObjectRetain();
  sub_10002064C();
  sub_100044204(53, v1);
  swift_setDeallocating();
  sub_1000500CC();
  return swift_release();
}

uint64_t sub_100191080(uint64_t a1)
{
  _StringGuts.grow(_:)(60);
  sub_10004AD78();
  v2._uint64_t countAndFlagsBits = 0x7361657261;
  v2._object = (void *)0xE500000000000000;
  String.append(_:)(v2);
  v3._uint64_t countAndFlagsBits = 10272;
  v3._object = (void *)0xE200000000000000;
  String.append(_:)(v3);
  v4._uint64_t countAndFlagsBits = 0x6C62616568636163;
  v4._object = (void *)0xE900000000000065;
  String.append(_:)(v4);
  sub_100045D68();
  v5._uint64_t countAndFlagsBits = sub_100043E1C();
  String.append(_:)(v5);
  sub_100045D68();
  v6._uint64_t countAndFlagsBits = 1953259891;
  v6._object = (void *)0xE400000000000000;
  String.append(_:)(v6);
  sub_100045D68();
  sub_10002064C();
  v7._uint64_t countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v7);
  sub_100045D68();
  v8._uint64_t countAndFlagsBits = 0x616D6F4464656573;
  v8._object = (void *)0xEA00000000006E69;
  String.append(_:)(v8);
  sub_100045D68();
  v9._uint64_t countAndFlagsBits = 0x6570795464656573;
  v9._object = (void *)0xE800000000000000;
  String.append(_:)(v9);
  sub_10002064C();
  String.append(_:)(v10);
  sub_100050044();
  sub_100043478(&qword_10022D780);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C5FB0;
  *(void *)(inited + 32) = *(unsigned char *)a1 & 1;
  *(void *)(inited + 40) = 0;
  *(unsigned char *)(inited + 48) = 1;
  uint64_t v12 = *(void *)(a1 + 16);
  *(void *)(inited + 56) = *(void *)(a1 + 8);
  *(void *)(inited + 64) = v12;
  *(unsigned char *)(inited + 72) = 3;
  sub_10000A4BC(a1 + 24, (uint64_t)v28);
  sub_10000A4BC((uint64_t)v28, (uint64_t)&v29);
  uint64_t v14 = v29;
  uint64_t v13 = v30;
  if (v30)
  {
    char v15 = 3;
  }
  else
  {
    uint64_t v14 = 0;
    char v15 = 4;
  }
  *(void *)(inited + 80) = v14;
  *(void *)(inited + 88) = v13;
  *(unsigned char *)(inited + 96) = v15;
  long long v16 = *(_OWORD *)(a1 + 56);
  long long v24 = *(_OWORD *)(a1 + 40);
  long long v25 = v16;
  long long v26 = *(_OWORD *)(a1 + 72);
  sub_10000A4BC((uint64_t)&v24, (uint64_t)v27);
  sub_10000A4BC((uint64_t)v27, (uint64_t)&v31);
  uint64_t v18 = v31;
  uint64_t v17 = v32;
  if (v32)
  {
    char v19 = 3;
  }
  else
  {
    uint64_t v18 = 0;
    char v19 = 4;
  }
  *(void *)(inited + 104) = v18;
  *(void *)(inited + 112) = v17;
  *(unsigned char *)(inited + 120) = v19;
  uint64_t v20 = *((void *)&v25 + 1);
  *(void *)(inited + 128) = v25;
  *(void *)(inited + 136) = v20;
  *(unsigned char *)(inited + 144) = 3;
  uint64_t v21 = *((void *)&v26 + 1);
  *(void *)(inited + 152) = v26;
  *(void *)(inited + 160) = v21;
  *(unsigned char *)(inited + 168) = 3;
  swift_bridgeObjectRetain();
  sub_10002AB90((uint64_t)v28);
  sub_10002AB90((uint64_t)v27);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22._uint64_t countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  SQLDatabase.execute(sql:parameters:)(v22, (Swift::OpaquePointer)inited);
  swift_setDeallocating();
  sub_1000500CC();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_100191354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _StringGuts.grow(_:)(67);
  sub_10004AD78();
  v11._object = (void *)0xEA00000000007374;
  v11._uint64_t countAndFlagsBits = 0x6E656D7461657274;
  String.append(_:)(v11);
  v12._uint64_t countAndFlagsBits = 10272;
  v12._object = (void *)0xE200000000000000;
  String.append(_:)(v12);
  v13._uint64_t countAndFlagsBits = sub_100051648();
  String.append(_:)(v13);
  sub_100045D68();
  v14._object = (void *)0xE900000000000078;
  v14._uint64_t countAndFlagsBits = 0x614D74656B637562;
  String.append(_:)(v14);
  sub_100045D68();
  v15._object = (void *)0xE90000000000006ELL;
  v15._uint64_t countAndFlagsBits = 0x694D74656B637562;
  String.append(_:)(v15);
  sub_100045D68();
  v16._uint64_t countAndFlagsBits = 0x65746144646E65;
  v16._object = (void *)0xE700000000000000;
  String.append(_:)(v16);
  sub_100045D68();
  v17._uint64_t countAndFlagsBits = sub_100043E1C();
  v17._object = (void *)0xEA00000000007265;
  String.append(_:)(v17);
  sub_100045D68();
  v18._uint64_t countAndFlagsBits = 0x7461447472617473;
  v18._object = (void *)0xE900000000000065;
  String.append(_:)(v18);
  sub_100045D68();
  v19._object = (void *)0xEA0000000000746ELL;
  v19._uint64_t countAndFlagsBits = 0x6F726665726F7473;
  String.append(_:)(v19);
  sub_10002064C();
  v20._uint64_t countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v20);
  sub_100050044();
  sub_100043478(&qword_10022D780);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C74E0;
  *(void *)(inited + 32) = a2;
  *(void *)(inited + 40) = a3;
  *(unsigned char *)(inited + 48) = 3;
  *(void *)(inited + 56) = a4;
  *(void *)(inited + 64) = 0;
  *(unsigned char *)(inited + 72) = 1;
  *(void *)(inited + 80) = a5;
  *(void *)(inited + 88) = 0;
  *(unsigned char *)(inited + 96) = 1;
  swift_bridgeObjectRetain();
  Date.timeIntervalSinceReferenceDate.getter();
  *(void *)(inited + 104) = v22;
  *(void *)(inited + 112) = 0;
  *(unsigned char *)(inited + 120) = 2;
  char v23 = (uint64_t *)(a1 + *(int *)(type metadata accessor for Treatment(0) + 20));
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *(void *)(inited + 128) = v25;
  *(void *)(inited + 136) = v24;
  *(unsigned char *)(inited + 144) = 3;
  swift_bridgeObjectRetain();
  Date.timeIntervalSinceReferenceDate.getter();
  *(void *)(inited + 152) = v26;
  *(void *)(inited + 160) = 0;
  *(unsigned char *)(inited + 168) = 2;
  uint64_t v27 = a6;
  if (a7)
  {
    char v28 = 3;
  }
  else
  {
    uint64_t v27 = 0;
    char v28 = 4;
  }
  *(void *)(inited + 176) = v27;
  *(void *)(inited + 184) = a7;
  *(unsigned char *)(inited + 192) = v28;
  swift_bridgeObjectRetain();
  v29._uint64_t countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  SQLDatabase.execute(sql:parameters:)(v29, (Swift::OpaquePointer)inited);
  swift_setDeallocating();
  sub_1000500CC();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1001915E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v56 = a7;
  v50[0] = a6;
  uint64_t v55 = a5;
  uint64_t v51 = a1;
  uint64_t v10 = sub_100043478(&qword_1002344F0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  Swift::String v13 = (char *)v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  Swift::String v15 = (char *)v50 - v14;
  uint64_t v16 = type metadata accessor for Date();
  sub_100020DEC();
  uint64_t v54 = v17;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v53 = (char *)v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)v50 - v21;
  sub_100049EE0();
  swift_bridgeObjectRelease();
  v57._uint64_t countAndFlagsBits = 0xD000000000000036;
  v57._object = (void *)0x80000001001D8410;
  sub_1000464F8(a4);
  if (!v23)
  {
    v24._object = (void *)0x80000001001D8500;
    v24._uint64_t countAndFlagsBits = 0xD000000000000013;
    String.append(_:)(v24);
  }
  sub_1000464F8(v55);
  if (!v23)
  {
    v25._uint64_t countAndFlagsBits = 0xD000000000000015;
    v25._object = (void *)0x80000001001D84E0;
    String.append(_:)(v25);
  }
  unint64_t v58 = 0;
  unint64_t v59 = 0xE000000000000000;
  if (v56)
  {
    _StringGuts.grow(_:)(31);
    swift_bridgeObjectRelease();
    unint64_t v26 = 0xD00000000000002FLL;
    uint64_t v27 = " AND ((storefront IS null) OR (storefront = ?))";
  }
  else
  {
    _StringGuts.grow(_:)(17);
    swift_bridgeObjectRelease();
    unint64_t v26 = 0xD000000000000019;
    uint64_t v27 = " AND (storefront IS null)";
  }
  unint64_t v28 = (unint64_t)(v27 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&v26);
  sub_100049EE0();
  swift_bridgeObjectRelease();
  unint64_t v58 = 0xD00000000000003DLL;
  unint64_t v59 = 0x80000001001D8470;
  String.append(_:)(v57);
  swift_bridgeObjectRelease();
  v29._uint64_t countAndFlagsBits = 41;
  v29._object = (void *)0xE100000000000000;
  String.append(_:)(v29);
  unint64_t v52 = v58;
  v50[1] = v59;
  sub_100043478(&qword_10022D780);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3130;
  *(void *)(inited + 32) = v51;
  *(void *)(inited + 40) = a2;
  uint64_t v31 = sub_100043B2C(inited);
  *(void *)(v31 + 56) = a3;
  *(void *)(v31 + 64) = 0;
  *(unsigned char *)(v31 + 72) = 1;
  *(void *)(v31 + 80) = a3;
  *(void *)(v31 + 88) = 0;
  *(unsigned char *)(v31 + 96) = 1;
  sub_10004FDC8(a4, (uint64_t)v15, &qword_1002344F0);
  sub_1000464F8((uint64_t)v15);
  if (v23)
  {
    swift_bridgeObjectRetain();
    sub_10002CC68((uint64_t)v15, &qword_1002344F0);
    uint64_t v32 = v54;
  }
  else
  {
    uint64_t v32 = v54;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v22, v15, v16);
    swift_bridgeObjectRetain();
    Date.timeIntervalSinceReferenceDate.getter();
    uint64_t v34 = v33;
    sub_100052734(1, 4, 1, inited);
    uint64_t inited = v35;
    *(void *)(v35 + 16) = 4;
    *(void *)(v35 + 104) = v34;
    *(void *)(v35 + 112) = 0;
    *(unsigned char *)(v35 + 120) = 2;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v22, v16);
  }
  sub_10004FDC8(v55, (uint64_t)v13, &qword_1002344F0);
  sub_1000464F8((uint64_t)v13);
  if (v23)
  {
    sub_10002CC68((uint64_t)v13, &qword_1002344F0);
    sub_10004DED4();
    if (!v22) {
      goto LABEL_21;
    }
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v53, v13, v16);
  Date.timeIntervalSinceReferenceDate.getter();
  uint64_t v37 = v36;
  unint64_t v38 = *(void *)(inited + 16);
  if (v38 >= *(void *)(inited + 24) >> 1)
  {
    sub_100020C38();
    uint64_t inited = v49;
  }
  sub_10004DED4();
  *(void *)(inited + 16) = v38 + 1;
  uint64_t v39 = inited + 24 * v38;
  *(void *)(v39 + 32) = v37;
  *(void *)(v39 + 40) = 0;
  *(unsigned char *)(v39 + 48) = 2;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v53, v16);
  if (v22)
  {
LABEL_18:
    unint64_t v41 = *(void *)(inited + 16);
    unint64_t v40 = *(void *)(inited + 24);
    swift_bridgeObjectRetain();
    if (v41 >= v40 >> 1)
    {
      sub_100020C38();
      uint64_t inited = v48;
    }
    *(void *)(inited + 16) = v41 + 1;
    uint64_t v42 = inited + 24 * v41;
    *(void *)(v42 + 32) = v50[0];
    *(void *)(v42 + 40) = v22;
    *(unsigned char *)(v42 + 48) = 3;
  }
LABEL_21:
  uint64_t v43 = sub_100021AF4();
  *(void *)(v43 + 16) = &_swiftEmptySetSingleton;
  uint64_t v44 = sub_100050044();
  uint64_t v45 = __chkstk_darwin(v44);
  unint64_t v46 = v52;
  v50[-6] = v45;
  v50[-5] = v46;
  v50[-4] = v13;
  v50[-3] = inited;
  v50[-2] = sub_100192090;
  v50[-1] = v43;
  sub_1000489E4((void (*)(void))sub_10003DAE0, (uint64_t)&v50[-8]);
  swift_release();
  if (a3)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10002CAAC();
    uint64_t inited = *(void *)(v43 + 16);
    swift_bridgeObjectRetain();
    swift_release();
  }
  return inited;
}

uint64_t sub_100191BE8()
{
  uint64_t v1 = type metadata accessor for Treatment(0);
  uint64_t v2 = __chkstk_darwin(v1);
  Swift::String v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  Swift::String v7 = (char *)&v19 - v6;
  __chkstk_darwin(v5);
  Swift::String v9 = (char *)&v19 - v8;
  sub_10003F764();
  if (!v0)
  {
    if (v10)
    {
      sub_1001920B0();
      swift_allocError();
      long long v15 = xmmword_1001C9340;
    }
    else
    {
      uint64_t v11 = sub_10003F9D0();
      uint64_t v13 = v12;
      if (v12)
      {
        uint64_t v19 = v11;
        sub_10003F764();
        if ((v17 & 1) == 0)
        {
          Date.init(timeIntervalSinceReferenceDate:)();
          Date.init(timeIntervalSinceReferenceDate:)();
          uint64_t v18 = &v9[*(int *)(v1 + 20)];
          *(void *)uint64_t v18 = v19;
          *((void *)v18 + 1) = v13;
          sub_1001920FC((uint64_t)v9, (uint64_t)v4);
          swift_beginAccess();
          sub_1001A5064();
          swift_endAccess();
          sub_100192160((uint64_t)v7);
          sub_100192160((uint64_t)v9);
          return 1;
        }
        swift_bridgeObjectRelease();
        sub_1001920B0();
        swift_allocError();
        long long v15 = xmmword_1001C9350;
      }
      else
      {
        sub_1001920B0();
        swift_allocError();
        long long v15 = xmmword_1001C9360;
      }
    }
    long long *v14 = v15;
    swift_willThrow();
  }
  return 1;
}

uint64_t sub_100191E7C()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC14amsengagementd17TreatmentsStorage_storageURL;
  type metadata accessor for URL();
  sub_100043B1C();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  return v0;
}

uint64_t sub_100191EE8()
{
  sub_100191E7C();
  return swift_deallocClassInstance();
}

uint64_t sub_100191F40()
{
  return type metadata accessor for TreatmentsStorage(0);
}

uint64_t type metadata accessor for TreatmentsStorage(uint64_t a1)
{
  return sub_1000514B4(a1, qword_1002342B0);
}

uint64_t sub_100191F68()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100192010()
{
  return sub_100192208(&qword_1002343D0, (void (*)(uint64_t))type metadata accessor for Treatment);
}

uint64_t sub_100192058()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100192090()
{
  return sub_100191BE8() & 1;
}

unint64_t sub_1001920B0()
{
  unint64_t result = qword_1002343D8;
  if (!qword_1002343D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002343D8);
  }
  return result;
}

uint64_t sub_1001920FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Treatment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100192160(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Treatment(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001921BC()
{
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001921FC()
{
  return sub_100190D14();
}

uint64_t sub_100192208(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100192250()
{
  if (*(void *)(v0 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_1001922AC()
{
  return sub_100021278(v0, 24);
}

uint64_t sub_1001922B8()
{
  return sub_1001907D4();
}

uint64_t sub_1001922D4()
{
  return sub_100021278(v0, 17);
}

uint64_t sub_1001922E0()
{
  swift_errorRelease();
  return _swift_deallocObject(v0, 24, 7);
}

Swift::Int sub_100192318(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10019038C(*a1, a2, a3, a4);
}

Swift::Int sub_100192320(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001904D4(*a1, a2, a3, a4);
}

Swift::Int sub_10019232C(char *a1, uint64_t a2)
{
  return sub_100192320(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

Swift::Int sub_10019233C(uint64_t *a1, uint64_t a2)
{
  return sub_100192318(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_100192348()
{
  if (*(void *)(v0 + 40)) {
    sub_10004377C(v0 + 16);
  }
  return _swift_deallocObject(v0, 48, 7);
}

Swift::Int sub_10019238C(uint64_t a1, uint64_t a2)
{
  return sub_10019043C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_100192398(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_10022F118);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100192400(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t sub_100192450(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void *sub_1001924A4(void *result, int a2)
{
  if (a2 < 0)
  {
    *uint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

void type metadata accessor for TreatmentsStorageError()
{
}

uint64_t sub_1001924D0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100192524(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1001925AC(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_100192684(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

uint64_t sub_10019268C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10019270C(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10019274C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for TreatmentsArea()
{
}

char *sub_1001927AC(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = &a1[v9];
    uint64_t v12 = (uint64_t *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    *(void *)uint64_t v11 = *v12;
    *((void *)v11 + 1) = v13;
    uint64_t v14 = &a1[v10];
    long long v15 = (char *)a2 + v10;
    swift_bridgeObjectRetain();
    v8(v14, v15, v7);
  }
  return a1;
}

uint64_t sub_1001928B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  void *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t sub_10019297C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  v7(a1 + v8, a2 + v8, v6);
  return a1;
}

uint64_t sub_100192A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  void *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t sub_100192AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Date();
  sub_100044124();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return sub_10004FD40(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

void sub_100192B60(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Date();
  sub_100044124();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    sub_100021AC0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
}

uint64_t sub_100192BEC()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for TreatmentsArea.Seed()
{
}

uint64_t sub_100192C98(uint64_t a1)
{
  type metadata accessor for AMSAccountMediaType(0);
  sub_1000505D0(&qword_10022C710, type metadata accessor for AMSAccountMediaType);
  uint64_t v2 = Set.init(minimumCapacity:)();
  uint64_t v9 = v2;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      int v5 = *(void **)(a1 + 8 * i + 32);
      sub_1001A4C9C(&v8, v5);
    }
    swift_bridgeObjectRelease();
    return v9;
  }
  else
  {
    uint64_t v6 = v2;
    swift_bridgeObjectRelease();
  }
  return v6;
}

void *sub_100192D7C(uint64_t a1)
{
  return sub_100192D94(a1, (void *(*)(void *__return_ptr, uint64_t))sub_10005370C);
}

void *sub_100192D94(uint64_t a1, void *(*a2)(void *__return_ptr, uint64_t))
{
  uint64_t v20 = Set.init(minimumCapacity:)();
  uint64_t result = a2(v21, a1);
  uint64_t v5 = v21[0];
  uint64_t v6 = v21[1];
  int64_t v7 = v21[3];
  unint64_t v8 = v22;
  int64_t v9 = (unint64_t)(v21[2] + 64) >> 6;
  if (!v22) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v11 = v10 | (v7 << 6);
  while (1)
  {
    uint64_t v16 = (Swift::Int *)(*(void *)(v5 + 48) + 16 * v11);
    Swift::Int v17 = *v16;
    Swift::Int v18 = v16[1];
    swift_bridgeObjectRetain();
    sub_10004A8EC(&v19, v17, v18);
    uint64_t result = (void *)swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v12 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_21;
    }
    unint64_t v13 = *(void *)(v6 + 8 * v12);
    int64_t v14 = v7 + 1;
    if (!v13)
    {
      int64_t v14 = v7 + 2;
      if (v7 + 2 >= v9) {
        goto LABEL_21;
      }
      unint64_t v13 = *(void *)(v6 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v7 + 3;
        if (v7 + 3 >= v9) {
          goto LABEL_21;
        }
        unint64_t v13 = *(void *)(v6 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = v7 + 4;
          if (v7 + 4 >= v9) {
            goto LABEL_21;
          }
          unint64_t v13 = *(void *)(v6 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v7 + 5;
            if (v7 + 5 >= v9) {
              goto LABEL_21;
            }
            unint64_t v13 = *(void *)(v6 + 8 * v14);
            if (!v13)
            {
              int64_t v15 = v7 + 6;
              while (v15 < v9)
              {
                unint64_t v13 = *(void *)(v6 + 8 * v15++);
                if (v13)
                {
                  int64_t v14 = v15 - 1;
                  goto LABEL_18;
                }
              }
LABEL_21:
              swift_release();
              return (void *)v20;
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
    int64_t v7 = v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_100192F1C(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  sub_10004D510(0, &qword_100234570);
  sub_10019CB64();
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v4 = result;
  uint64_t v15 = result;
  if (!v2)
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_5;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return v4;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_13;
  }
LABEL_5:
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(a1 + 8 * i + 32);
      }
      sub_1001A5314((uint64_t)&v14, (uint64_t)v7, v8, v9, v10, v11, v12, v13, (uint64_t)v14, v15);
    }
    swift_bridgeObjectRelease();
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_100193070()
{
  sub_100020958();
  v1[36] = v2;
  v1[37] = v0;
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  sub_1000208F0(v3);
  v1[38] = sub_10003634C();
  sub_100043FD8();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_1001930EC()
{
  uint64_t v1 = v0;
  id v2 = (id)AMSSetLogKeyIfNeeded();
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;

  *(void *)(v1 + 312) = v3;
  *(void *)(v1 + 320) = v5;
  if (qword_10022C4D8 != -1) {
    swift_once();
  }
  uint64_t v6 = *(void *)(v1 + 296);
  uint64_t v17 = *(void *)(v1 + 288);
  Swift::Int v18 = (uint64_t (*)(void))qword_100244140;
  *(void *)(v1 + 328) = sub_100043478(&qword_10022E560);
  uint64_t v7 = type metadata accessor for LogMessage();
  sub_100044798(v7);
  *(void *)(v1 + 336) = *(void *)(v8 + 72);
  *(_DWORD *)(v1 + 376) = *(_DWORD *)(v9 + 80);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v10 = type metadata accessor for TreatmentStoreService();
  *(void *)(v1 + 344) = v10;
  *(void *)(v1 + 40) = v10;
  *(void *)(v1 + 16) = v6;
  swift_bridgeObjectRetain_n();
  swift_retain();
  sub_1000208BC();
  sub_100020E60();
  sub_100049788((void *)(v1 + 16), v10);
  uint64_t DynamicType = swift_getDynamicType();
  *(void *)(v1 + 72) = swift_getMetatypeMetadata();
  *(void *)(v1 + 48) = DynamicType;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100036AC0();
  sub_100020E44();
  *(void *)(v1 + 104) = &type metadata for String;
  *(void *)(v1 + 80) = v3;
  *(void *)(v1 + 88) = v5;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100036AC0();
  sub_1000208D8();
  LogMessage.init(stringInterpolation:)();
  swift_bridgeObjectRelease();
  sub_10004377C(v1 + 16);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  sub_10002064C();
  v12._uint64_t countAndFlagsBits = 0xD000000000000027;
  LogMessage.StringInterpolation.appendLiteral(_:)(v12);
  *(void *)(v1 + 136) = &type metadata for Int;
  *(void *)(v1 + 112) = v17;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000435D4(v1 + 112, &qword_10022F490);
  sub_10002D4AC();
  sub_100011CC0();
  uint64_t v13 = static os_log_type_t.info.getter();
  sub_10004841C(v13);
  swift_bridgeObjectRelease();
  sub_10003BB2C(v17);
  *(void *)(v1 + 352) = v14;
  uint64_t v15 = (void *)sub_10019D70C();
  *(void *)(v1 + 360) = v15;
  void *v15 = v1;
  v15[1] = sub_1001933CC;
  return v18();
}

uint64_t sub_1001933CC()
{
  sub_100020958();
  sub_1000447B0();
  uint64_t v3 = v2;
  sub_100044DDC();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_100020EBC();
  *uint64_t v6 = v5;
  *(void *)(v3 + 368) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 296);
    uint64_t v8 = (uint64_t (*)())sub_100193530;
  }
  else
  {
    uint64_t v9 = *(void *)(v3 + 296);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v8 = sub_1001934CC;
    uint64_t v7 = v9;
  }
  return _swift_task_switch(v8, v7, 0);
}

uint64_t sub_1001934CC()
{
  sub_100020958();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v1(1);
}

#error "100193664: call analysis failed (funcsize=137)"

uint64_t sub_10019376C(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return sub_100044BDC((uint64_t)sub_100193784);
}

uint64_t sub_100193784()
{
  sub_100020958();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10003BDFC(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100193834;
  sub_1000454D4();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)();
}

uint64_t sub_100193834()
{
  sub_100020958();
  sub_1000447B0();
  sub_100044DDC();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_100020EBC();
  *uint64_t v5 = v4;
  *(void *)(v6 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_100043E7C();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    sub_100040954();
    return v10();
  }
}

uint64_t sub_10019392C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100193944()
{
  *(void *)(v1 + 24) = v0;
  return sub_100044BDC((uint64_t)sub_10019395C);
}

uint64_t sub_10019395C()
{
  sub_100020958();
  uint64_t v1 = swift_task_alloc();
  sub_100021AB4(v1);
  sub_100043478(&qword_100230818);
  sub_10019D674();
  void *v0 = v2;
  v0[1] = sub_1000170C0;
  sub_1000454D4();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)();
}

uint64_t sub_100193A14()
{
  *(void *)(v1 + 24) = v0;
  return sub_100044BDC((uint64_t)sub_100193A2C);
}

uint64_t sub_100193A2C()
{
  sub_100020958();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10003BDFC(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100193AE0;
  sub_1000454D4();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)();
}

uint64_t sub_100193AE0()
{
  sub_100020958();
  sub_1000447B0();
  uint64_t v3 = v2;
  sub_100044DDC();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_100020EBC();
  *uint64_t v6 = v5;
  *(void *)(v3 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_100043E7C();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    sub_100040954();
    return v10();
  }
}

uint64_t sub_100193BDC()
{
  *(void *)(v1 + 24) = v0;
  return sub_100044BDC((uint64_t)sub_100193BF4);
}

uint64_t sub_100193BF4()
{
  sub_100020958();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10003BDFC(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1000170C0;
  sub_1000454D4();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)();
}

uint64_t sub_100193CA8()
{
  *(void *)(v1 + 24) = v0;
  return _swift_task_switch(sub_100193CC8, 0, 0);
}

uint64_t sub_100193CC8()
{
  sub_100020958();
  uint64_t v1 = swift_task_alloc();
  sub_100021AB4(v1);
  sub_100043478(&qword_1002345E0);
  sub_10019D674();
  void *v0 = v2;
  v0[1] = sub_1000170C0;
  sub_1000454D4();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)();
}

uint64_t sub_100193D80()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_100193DA0, 0, 0);
}

uint64_t sub_100193DA0()
{
  sub_100020958();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100193E5C;
  sub_1000454D4();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)();
}

uint64_t sub_100193E5C()
{
  sub_100020958();
  sub_1000447B0();
  uint64_t v3 = v2;
  sub_100044DDC();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_100020EBC();
  *uint64_t v6 = v5;
  *(void *)(v3 + 32) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_100043E7C();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    uint64_t v10 = *(unsigned __int8 *)(v3 + 40);
    uint64_t v11 = *(uint64_t (**)(uint64_t))(v5 + 8);
    return v11(v10);
  }
}

uint64_t sub_100193F5C()
{
  return (*(uint64_t (**)(void))(v0 + 8))(0);
}

uint64_t sub_100193F78()
{
  *(void *)(v1 + 24) = v0;
  return _swift_task_switch(sub_100193F98, 0, 0);
}

uint64_t sub_100193F98()
{
  sub_100020958();
  uint64_t v1 = swift_task_alloc();
  sub_100021AB4(v1);
  sub_100043478(&qword_100234538);
  sub_10019D674();
  void *v0 = v2;
  v0[1] = sub_1000170C0;
  sub_1000454D4();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)();
}

uint64_t sub_100194050(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a2;
  uint64_t v17 = a1;
  uint64_t v3 = sub_100043478(&qword_100234588);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = __chkstk_darwin(v3);
  Swift::Int v18 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v9((char *)&v16 - v7, a1, v3);
  unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
  v12(v11 + v10, v8, v3);
  uint64_t v13 = v18;
  v9(v18, v17, v3);
  uint64_t v14 = swift_allocObject();
  v12(v14 + v10, v13, v3);
  sub_10003A184();
  swift_release();
  return swift_release();
}

uint64_t sub_100194238(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a2;
  uint64_t v17 = a1;
  uint64_t v3 = sub_100043478(&qword_1002346D8);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = __chkstk_darwin(v3);
  Swift::Int v18 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v9((char *)&v16 - v7, a1, v3);
  unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
  v12(v11 + v10, v8, v3);
  uint64_t v13 = v18;
  v9(v18, v17, v3);
  uint64_t v14 = swift_allocObject();
  v12(v14 + v10, v13, v3);
  sub_10003A184();
  swift_release();
  return swift_release();
}

uint64_t sub_100194420(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a2;
  uint64_t v17 = a1;
  uint64_t v3 = sub_100043478(&qword_1002346B8);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = __chkstk_darwin(v3);
  Swift::Int v18 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v9((char *)&v16 - v7, a1, v3);
  unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
  v12(v11 + v10, v8, v3);
  uint64_t v13 = v18;
  v9(v18, v17, v3);
  uint64_t v14 = swift_allocObject();
  v12(v14 + v10, v13, v3);
  sub_10003A184();
  swift_release();
  return swift_release();
}

uint64_t sub_100194608(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a2;
  uint64_t v17 = a1;
  uint64_t v3 = sub_100043478(&qword_1002346C8);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = __chkstk_darwin(v3);
  Swift::Int v18 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v9((char *)&v16 - v7, a1, v3);
  unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
  v12(v11 + v10, v8, v3);
  uint64_t v13 = v18;
  v9(v18, v17, v3);
  uint64_t v14 = swift_allocObject();
  v12(v14 + v10, v13, v3);
  sub_10003A184();
  swift_release();
  return swift_release();
}

uint64_t sub_1001947F0(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a2;
  uint64_t v17 = a1;
  uint64_t v3 = sub_100043478(&qword_1002345E8);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = __chkstk_darwin(v3);
  Swift::Int v18 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v9((char *)&v16 - v7, a1, v3);
  unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
  v12(v11 + v10, v8, v3);
  uint64_t v13 = v18;
  v9(v18, v17, v3);
  uint64_t v14 = swift_allocObject();
  v12(v14 + v10, v13, v3);
  sub_10003A184();
  swift_release();
  return swift_release();
}

uint64_t sub_1001949D8(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a2;
  uint64_t v17 = a1;
  uint64_t v3 = sub_100043478(&qword_100234540);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = __chkstk_darwin(v3);
  Swift::Int v18 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v9((char *)&v16 - v7, a1, v3);
  unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
  v12(v11 + v10, v8, v3);
  uint64_t v13 = v18;
  v9(v18, v17, v3);
  uint64_t v14 = swift_allocObject();
  v12(v14 + v10, v13, v3);
  sub_10003A184();
  swift_release();
  return swift_release();
}

uint64_t sub_100194BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a2;
  uint64_t v17 = a1;
  uint64_t v3 = sub_100043478(&qword_100234580);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = __chkstk_darwin(v3);
  Swift::Int v18 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v9((char *)&v16 - v7, a1, v3);
  unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
  v12(v11 + v10, v8, v3);
  uint64_t v13 = v18;
  v9(v18, v17, v3);
  uint64_t v14 = swift_allocObject();
  v12(v14 + v10, v13, v3);
  sub_10003A184();
  swift_release();
  return swift_release();
}

uint64_t sub_100194DA8()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_100194DDC()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_100194E20()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_100194E64()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_100194EA8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return CheckedContinuation.resume(throwing:)();
}

uint64_t sub_100194EF0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  sub_100050044();
  uint64_t v5 = swift_retain();
  sub_10002D18C(v5, v5);
  sub_10002D520();
  swift_release();
  a3(a1);
  Promise.resolve(_:)();
  sub_100050044();
  uint64_t v6 = swift_retain();
  sub_10002D078(v6, v6);
  return swift_release();
}

uint64_t sub_100195218(uint64_t a1, uint64_t a2, void (*a3)(void *__return_ptr, uint64_t))
{
  sub_100050044();
  uint64_t v5 = swift_retain();
  sub_10002D18C(v5, v5);
  sub_10002D520();
  swift_release();
  a3(v8, a1);
  Promise.resolve(_:)();
  swift_bridgeObjectRelease();
  sub_100050044();
  uint64_t v6 = swift_retain();
  sub_10002D078(v6, v6);
  return swift_release();
}

uint64_t sub_100195528(uint64_t a1, uint64_t a2, void (*a3)(void *__return_ptr, uint64_t))
{
  sub_100050044();
  uint64_t v5 = swift_retain();
  sub_10002D18C(v5, v5);
  sub_10002D520();
  swift_release();
  a3(v8, a1);
  Promise.resolve(_:)();
  swift_bridgeObjectRelease();
  sub_100050044();
  uint64_t v6 = swift_retain();
  sub_10002D078(v6, v6);
  return swift_release();
}

void sub_100195838()
{
}

void sub_100195898()
{
}

void sub_1001958F8()
{
}

void sub_100195958()
{
}

id sub_1001959B8()
{
  id result = sub_1001959D8();
  qword_1002441C8 = (uint64_t)result;
  return result;
}

id sub_1001959D8()
{
  uint64_t v0 = type metadata accessor for URL.DirectoryHint();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100043478(&qword_10022FB40);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v28 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v28 - v15;
  sub_10004D510(0, (unint64_t *)&qword_100232020);
  id v29 = sub_100051DF8();
  sub_10003C948();
  if (sub_10004FD40((uint64_t)v6, 1, v7) == 1)
  {
    sub_10003CF18();
    sub_1000435D4((uint64_t)v6, &qword_10022FB40);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v16, v6, v7);
  }
  uint64_t v30 = 0x6E656D7461657274;
  unint64_t v31 = 0xEA00000000007374;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for URL.DirectoryHint.inferFromPath(_:), v0);
  sub_10003C8FC();
  URL.appending<A>(path:directoryHint:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRelease();
  uint64_t v17 = self;
  id v18 = v29;
  id v19 = [v17 defaultSession];
  NSString v20 = String._bridgeToObjectiveC()();
  type metadata accessor for TreatmentsConfigurationProvider();
  uint64_t v21 = (void *)swift_allocObject();
  _OWORD v21[2] = v18;
  void v21[3] = v20;
  void v21[4] = v19;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v14, v7);
  type metadata accessor for TreatmentsStorage(0);
  swift_allocObject();
  uint64_t v22 = sub_100190818((uint64_t)v11);
  uint64_t v23 = type metadata accessor for DeviceDetails();
  type metadata accessor for TreatmentStoreService();
  Swift::String v24 = (void *)swift_allocObject();
  id v25 = sub_10019D5A0((uint64_t)v18, (uint64_t)v21, v22, v23, (uint64_t)&protocol witness table for DeviceDetails, v24);
  unint64_t v26 = *(void (**)(char *, uint64_t))(v8 + 8);
  v26(v14, v7);
  v26(v16, v7);
  return v25;
}

uint64_t sub_100195DF8(uint64_t a1)
{
  *(void *)(v1 + 152) = a1;
  return swift_release();
}

uint64_t sub_100195E08()
{
  uint64_t v1 = type metadata accessor for DispatchQoS.QoSClass();
  sub_100020DEC();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v14[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (dispatch thunk of static DeviceInformation.deviceIsRunningInternalBuild()())
  {
    NSString v7 = String._bridgeToObjectiveC()();
    sub_100043478(&qword_1002346A8);
    id v8 = [*(id *)(v0 + 112) BOOLForKey:v7];
    id v9 = [v8 valuePromise];

    Promise<A>.init(_:)();
    void v14[3] = type metadata accessor for SyncTaskScheduler();
    void v14[4] = (uint64_t)&protocol witness table for SyncTaskScheduler;
    sub_10003BAA4(v14);
    SyncTaskScheduler.init()();
    Promise.map<A>(on:_:)();
    swift_release();
    sub_10004377C((uint64_t)v14);
    sub_10004D510(0, (unint64_t *)&qword_10022F690);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, enum case for DispatchQoS.QoSClass.default(_:), v1);
    uint64_t v10 = (void *)static OS_dispatch_queue.global(qos:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v1);
    uint64_t v11 = sub_100021E20((uint64_t)sub_100196084, 0, v10);

    swift_release();
  }
  else
  {
    sub_100043478(&qword_1002346A0);
    LOBYTE(v14[0]) = 0;
    return Promise.__allocating_init(value:)();
  }
  return v11;
}

id sub_100196048@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 BOOLValue];
  *a2 = (_BYTE)result;
  return result;
}

void sub_100196084(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void sub_10019608C()
{
  sub_1000209F4();
  uint64_t v2 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = type metadata accessor for DispatchQoS.QoSClass();
  sub_100020DEC();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10002D300();
  sub_10002064C();
  NSString v17 = String._bridgeToObjectiveC()();
  id v8 = (id)AMSSetLogKeyIfNeeded();
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  sub_100043478(&qword_100234698);
  id v12 = [*(id *)(v2 + 112) stringForKey:v17];
  id v13 = [v12 valuePromise];

  Promise<A>.init(_:)();
  uint64_t v14 = (void *)sub_1000526E4();
  void v14[2] = v2;
  void v14[3] = v9;
  void v14[4] = v11;
  uint64_t v14[5] = ObjectType;
  void v18[3] = type metadata accessor for SyncTaskScheduler();
  v18[4] = (uint64_t)&protocol witness table for SyncTaskScheduler;
  sub_10003BAA4(v18);
  swift_retain();
  swift_bridgeObjectRetain();
  SyncTaskScheduler.init()();
  Promise.map<A>(on:_:)();
  swift_release();
  swift_release();
  sub_10004377C((uint64_t)v18);
  uint64_t v15 = (void *)sub_1000526E4();
  v15[2] = v2;
  void v15[3] = v9;
  v15[4] = v11;
  void v15[5] = ObjectType;
  sub_10004D510(0, (unint64_t *)&qword_10022F690);
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v1, enum case for DispatchQoS.QoSClass.default(_:), v4);
  swift_retain();
  uint64_t v16 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_100021E20((uint64_t)sub_10019D424, (uint64_t)v15, v16);

  swift_release();
  swift_release();
  sub_100020FDC();
}

uint64_t sub_10019630C@<X0>(uint64_t *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  unint64_t v82 = a2;
  uint64_t v83 = a4;
  uint64_t v9 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_100043478(&qword_1002344F0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v81 = (char *)v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v66 - v13;
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  Swift::String v80 = (char *)v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)v66 - v20;
  __chkstk_darwin(v19);
  uint64_t v84 = (char *)v66 - v22;
  uint64_t v23 = *a1;
  id v91 = [objc_allocWithZone((Class)NSISO8601DateFormatter) init];
  id v24 = [v91 dateFromString:v23];
  if (!v24)
  {
    sub_100021AC0((uint64_t)v14, 1, 1, v15);
    goto LABEL_10;
  }
  id v25 = v24;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v79 = v16;
  uint64_t v28 = *(void (**)(void, void, void))(v16 + 32);
  uint64_t v27 = v16 + 32;
  unint64_t v26 = (void (*)(char *, uint64_t, uint64_t))v28;
  v28(v14, v21, v15);
  sub_100021AC0((uint64_t)v14, 0, 1, v15);
  if (sub_10004FD40((uint64_t)v14, 1, v15) == 1)
  {
LABEL_10:

    uint64_t result = sub_1000435D4((uint64_t)v14, &qword_1002344F0);
    char v65 = 0;
    goto LABEL_11;
  }
  uint64_t v76 = a3;
  uint64_t v77 = a5;
  uint64_t v78 = v5;
  Swift::String v73 = v26;
  uint64_t v74 = v27;
  v26(v84, (uint64_t)v14, v15);
  if (qword_10022C4D8 != -1) {
    swift_once();
  }
  uint64_t v75 = qword_100244140;
  uint64_t v29 = sub_100043478(&qword_10022E560);
  uint64_t v30 = *(void *)(type metadata accessor for LogMessage() - 8);
  uint64_t v31 = *(void *)(v30 + 72);
  uint64_t v32 = *(unsigned __int8 *)(v30 + 80);
  uint64_t v33 = (v32 + 32) & ~v32;
  uint64_t v71 = v29;
  uint64_t v69 = v33 + 2 * v31;
  uint64_t v68 = v32 | 7;
  uint64_t v34 = swift_allocObject();
  long long v67 = xmmword_1001C3120;
  *(_OWORD *)(v34 + 16) = xmmword_1001C3120;
  uint64_t v70 = v33;
  uint64_t v35 = type metadata accessor for TreatmentStoreService();
  uint64_t v90 = (void *)v35;
  unint64_t v88 = v82;
  swift_retain();
  uint64_t v36 = v83;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v37._uint64_t countAndFlagsBits = 0;
  v37._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v37);
  sub_100049788(&v88, v35);
  Swift::String v72 = (void *)v35;
  uint64_t DynamicType = swift_getDynamicType();
  uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
  uint64_t v85 = DynamicType;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000435D4((uint64_t)&v85, &qword_10022F490);
  v39._uint64_t countAndFlagsBits = 5972026;
  v39._object = (void *)0xE300000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v39);
  uint64_t MetatypeMetadata = &type metadata for String;
  uint64_t v85 = v76;
  uint64_t v86 = v36;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000435D4((uint64_t)&v85, &qword_10022F490);
  v40._uint64_t countAndFlagsBits = 93;
  v40._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v40);
  LogMessage.init(stringInterpolation:)();
  sub_10004377C((uint64_t)&v88);
  v66[1] = v31;
  unint64_t v88 = 0;
  unint64_t v89 = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  unint64_t v88 = 0xD000000000000017;
  unint64_t v89 = 0x80000001001D8B90;
  uint64_t v41 = sub_1000505D0(&qword_100232B90, (void (*)(uint64_t))&type metadata accessor for Date);
  v42._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v42);
  swift_bridgeObjectRelease();
  uint64_t v90 = &type metadata for String;
  static LogMessage.safe(_:)();
  sub_1000435D4((uint64_t)&v88, &qword_10022F490);
  uint64_t v43 = static os_log_type_t.debug.getter();
  sub_10004841C(v43);
  swift_bridgeObjectRelease();
  id v44 = [self standardUserDefaults];
  NSString v45 = String._bridgeToObjectiveC()();
  id v46 = [v44 stringForKey:v45];

  if (!v46)
  {

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v84, v15);
    char v65 = 1;
    a5 = v77;
    goto LABEL_11;
  }
  id v47 = [v91 dateFromString:v46];

  a5 = v77;
  if (!v47)
  {
    uint64_t v48 = (uint64_t)v81;
    sub_100021AC0((uint64_t)v81, 1, 1, v15);
    uint64_t v51 = v84;
    goto LABEL_14;
  }
  uint64_t v75 = v41;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v48 = (uint64_t)v81;
  uint64_t v49 = v73;
  v73(v81, (uint64_t)v21, v15);
  sub_100021AC0(v48, 0, 1, v15);
  int v50 = sub_10004FD40(v48, 1, v15);
  uint64_t v51 = v84;
  if (v50 == 1)
  {
LABEL_14:

    (*(void (**)(char *, uint64_t))(v79 + 8))(v51, v15);
    uint64_t result = sub_1000435D4(v48, &qword_1002344F0);
    char v65 = 1;
    goto LABEL_11;
  }
  unint64_t v52 = v80;
  v49(v80, v48, v15);
  uint64_t v81 = (char *)qword_100244140;
  *(_OWORD *)(swift_allocObject() + 16) = v67;
  uint64_t v53 = (uint64_t)v72;
  uint64_t v90 = v72;
  unint64_t v88 = v82;
  swift_retain();
  uint64_t v54 = v83;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v55._uint64_t countAndFlagsBits = 0;
  v55._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v55);
  sub_100049788(&v88, v53);
  uint64_t v56 = swift_getDynamicType();
  uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
  uint64_t v85 = v56;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000435D4((uint64_t)&v85, &qword_10022F490);
  v57._uint64_t countAndFlagsBits = 5972026;
  v57._object = (void *)0xE300000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v57);
  uint64_t MetatypeMetadata = &type metadata for String;
  uint64_t v85 = v76;
  uint64_t v86 = v54;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000435D4((uint64_t)&v85, &qword_10022F490);
  v58._uint64_t countAndFlagsBits = 93;
  v58._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v58);
  LogMessage.init(stringInterpolation:)();
  sub_10004377C((uint64_t)&v88);
  unint64_t v88 = 0;
  unint64_t v89 = 0xE000000000000000;
  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease();
  unint64_t v88 = 0xD00000000000001BLL;
  unint64_t v89 = 0x80000001001D8BB0;
  v59._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v59);
  swift_bridgeObjectRelease();
  uint64_t v90 = &type metadata for String;
  static LogMessage.safe(_:)();
  sub_1000435D4((uint64_t)&v88, &qword_10022F490);
  uint64_t v60 = static os_log_type_t.debug.getter();
  sub_10004841C(v60);
  a5 = v77;
  swift_bridgeObjectRelease();
  unint64_t v61 = v84;
  char v62 = static Date.> infix(_:_:)();

  char v63 = *(void (**)(char *, uint64_t))(v79 + 8);
  v63(v52, v15);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v63)(v61, v15);
  char v65 = v62 & 1;
LABEL_11:
  *a5 = v65;
  return result;
}

void sub_100196C4C(unint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, unsigned char *a4@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v7 - 8);
  id v8 = (void *)_convertErrorToNSError(_:)();
  if ([v8 code] != (id)204) {
    goto LABEL_8;
  }
  id v9 = [v8 domain];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  if (v10 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v12 == v13)
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_12;
  }
  char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15)
  {
  }
  else
  {
LABEL_8:
    if (qword_10022C4D8 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v30 = (void *)type metadata accessor for TreatmentStoreService();
    unint64_t v28 = a1;
    swift_retain();
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v16._uint64_t countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    sub_100049788(&v28, (uint64_t)v30);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v26[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v26, &qword_10022F490);
    v18._uint64_t countAndFlagsBits = 5972026;
    v18._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    uint64_t MetatypeMetadata = &type metadata for String;
    v26[0] = v31;
    v26[1] = a3;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v26, &qword_10022F490);
    v19._uint64_t countAndFlagsBits = 93;
    v19._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    LogMessage.init(stringInterpolation:)();
    sub_10004377C((uint64_t)&v28);
    unint64_t v28 = 0;
    unint64_t v29 = 0xE000000000000000;
    _StringGuts.grow(_:)(34);
    swift_bridgeObjectRelease();
    unint64_t v28 = 0xD000000000000043;
    unint64_t v29 = 0x80000001001D8B40;
    id v20 = [v8 description];
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;

    v24._uint64_t countAndFlagsBits = v21;
    v24._object = v23;
    String.append(_:)(v24);
    swift_bridgeObjectRelease();
    uint64_t v30 = &type metadata for String;
    static LogMessage.safe(_:)();
    sub_1000435D4((uint64_t)&v28, &qword_10022F490);
    uint64_t v25 = static os_log_type_t.error.getter();
    sub_10004841C(v25);
    swift_bridgeObjectRelease();
  }
LABEL_12:
  *a4 = 0;
}

void sub_100197010()
{
  sub_1000209F4();
  uint64_t v1 = (void *)type metadata accessor for Date();
  sub_100020DEC();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v8 = sub_1000208F0(v7);
  __chkstk_darwin(v8);
  uint64_t v9 = type metadata accessor for OSSignpostID();
  sub_100020DEC();
  uint64_t v11 = v10;
  uint64_t v13 = __chkstk_darwin(v12);
  char v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v69 - v16;
  type metadata accessor for OSSignposter();
  sub_100020DEC();
  uint64_t v19 = __chkstk_darwin(v18);
  __chkstk_darwin(v19);
  uint64_t v25 = (char *)&v69 - v24;
  if (!*(void *)(v0 + 152))
  {
    uint64_t v76 = v3;
    id v77 = v1;
    unint64_t v79 = v20;
    uint64_t v83 = v23;
    uint64_t v85 = v22;
    uint64_t v86 = v21;
    if (qword_10022C4D8 != -1) {
      swift_once();
    }
    uint64_t v75 = v6;
    uint64_t v81 = v0;
    id v26 = *(id *)(qword_100244140 + 16);
    OSSignposter.init(logHandle:)();
    OSSignposter.logHandle.getter();
    OSSignpostID.init(log:)();
    uint64_t v84 = v25;
    uint64_t v27 = OSSignposter.logHandle.getter();
    os_signpost_type_t v28 = static os_signpost_type_t.begin.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      unint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v29 = 0;
      os_signpost_id_t v30 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v27, v28, v30, "TreatmentStoreService", "Synchronizing treatments", v29, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v17, v9);
    type metadata accessor for OSSignpostIntervalState();
    swift_allocObject();
    uint64_t v80 = OSSignpostIntervalState.init(id:isOpen:)();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v9);
    id v31 = (id)AMSSetLogKeyIfNeeded();
    uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v34 = v33;

    uint64_t v74 = qword_100244140;
    sub_100043478(&qword_10022E560);
    uint64_t v35 = type metadata accessor for LogMessage();
    sub_100044798(v35);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v36 = type metadata accessor for TreatmentStoreService();
    uint64_t v88 = v36;
    uint64_t v37 = v81;
    v87[0] = v81;
    swift_bridgeObjectRetain_n();
    swift_retain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v38._uint64_t countAndFlagsBits = 0;
    v38._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v38);
    sub_100049788(v87, v36);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v90[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v90, &qword_10022F490);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v82 = v32;
    v90[0] = v32;
    v90[1] = v34;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)v90, &qword_10022F490);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    uint64_t v78 = v34;
    swift_bridgeObjectRelease();
    sub_10004377C((uint64_t)v87);
    LogMessage.init(stringLiteral:)();
    uint64_t v40 = static os_log_type_t.default.getter();
    sub_10004841C(v40);
    swift_bridgeObjectRelease();
    id v41 = [objc_allocWithZone((Class)NSISO8601DateFormatter) init];
    static Date.now.getter();
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    sub_100043FB0();
    v43();
    id v77 = v41;
    NSString v44 = [v41 stringFromDate:isa];

    if (!v44)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v44 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    id v45 = [self standardUserDefaults];
    sub_10002064C();
    NSString v46 = String._bridgeToObjectiveC()();
    [v45 setObject:v44 forKey:v46];

    sub_10018D2D4();
    uint64_t v88 = type metadata accessor for SyncTaskScheduler();
    unint64_t v89 = &protocol witness table for SyncTaskScheduler;
    sub_10003BAA4(v87);
    swift_retain();
    SyncTaskScheduler.init()();
    sub_100043478(&qword_10022F198);
    sub_10002B6DC(&qword_100234660, &qword_10022F198);
    Promise.flatMap<A>(on:_:)();
    swift_release();
    swift_release();
    sub_10004377C((uint64_t)v87);
    uint64_t v47 = v85;
    uint64_t v48 = *(void (**)(uint64_t, char *, uint64_t))(v85 + 16);
    uint64_t v75 = (char *)(v85 + 16);
    uint64_t v76 = v48;
    uint64_t v49 = v83;
    uint64_t v50 = v86;
    v48(v83, v84, v86);
    uint64_t v51 = *(unsigned __int8 *)(v47 + 80);
    uint64_t v73 = v51 | 7;
    uint64_t v52 = (v51 + 16) & ~v51;
    uint64_t v74 = v52;
    unint64_t v53 = (v79 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v71 = v53;
    unint64_t v54 = (v53 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v70 = v54;
    unint64_t v79 = ((v54 + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    unint64_t v72 = (v54 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v55 = swift_allocObject();
    uint64_t v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32);
    v56(v55 + v52, v49, v50);
    uint64_t v57 = v80;
    *(void *)(v55 + v53) = v80;
    *(void *)(v55 + v54) = v37;
    Swift::String v58 = (uint64_t *)(v55 + ((v54 + 15) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v59 = v78;
    *Swift::String v58 = v82;
    v58[1] = v59;
    uint64_t v60 = sub_100035CB8();
    *(void *)(v60 + 16) = sub_10019D0C4;
    *(void *)(v60 + 24) = v55;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10003A184();
    swift_release();
    swift_release();
    swift_retain();
    sub_1000AEABC();
    swift_release();
    uint64_t v61 = v83;
    uint64_t v62 = v86;
    v76(v83, v84, v86);
    uint64_t v63 = swift_allocObject();
    v56(v63 + v74, v61, v62);
    *(void *)(v63 + v71) = v57;
    *(void *)(v63 + v70) = v37;
    uint64_t v64 = (uint64_t *)(v63 + v72);
    *uint64_t v64 = v82;
    v64[1] = v59;
    uint64_t v65 = sub_100035CB8();
    *(void *)(v65 + 16) = sub_10019D210;
    *(void *)(v65 + 24) = v63;
    uint64_t v66 = sub_100035CB8();
    *(void *)(v66 + 16) = sub_10001B5FC;
    *(void *)(v66 + 24) = v65;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10003A184();
    swift_release();
    swift_release();
    uint64_t v67 = swift_retain();
    sub_100195DF8(v67);
    swift_release();

    sub_100043FB0();
    v68();
  }
  swift_retain();
  sub_100020FDC();
}

uint64_t sub_100197998(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  sub_100190A98();
  uint64_t v6 = (void *)swift_allocObject();
  void v6[2] = a2;
  uint64_t v6[3] = v4;
  v6[4] = v3;
  v6[5] = v5;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_10019D2CC;
  *(void *)(v7 + 24) = v6;
  v10[3] = type metadata accessor for SyncTaskScheduler();
  v10[4] = (uint64_t)&protocol witness table for SyncTaskScheduler;
  sub_10003BAA4(v10);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  SyncTaskScheduler.init()();
  sub_100043478(&qword_10022F198);
  sub_10002B6DC(&qword_100234660, &qword_10022F198);
  uint64_t v8 = Promise.flatMap<A>(on:_:)();
  swift_release();
  swift_release();
  sub_10004377C((uint64_t)v10);
  return v8;
}

uint64_t sub_100197B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = a2;
  void v7[3] = a3;
  v7[4] = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000502F8();
  uint64_t v9 = v8;
  swift_release();
  return v9;
}

uint64_t sub_100197BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v123 = a2;
  uint64_t v142 = a1;
  uint64_t v135 = type metadata accessor for Treatment(0);
  __chkstk_darwin(v135);
  uint64_t v143 = (char *)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v138 - 8);
  uint64_t v10 = __chkstk_darwin(v138);
  uint64_t v137 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  long long v136 = (char *)&v104 - v12;
  uint64_t v121 = type metadata accessor for TreatmentsConfiguration.Area.Experiment();
  uint64_t v122 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  uint64_t v124 = (uint64_t)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a3 + 16);
  if (v14)
  {
    swift_bridgeObjectRetain();
    char v15 = (uint64_t *)(a3 + 48);
    while (1)
    {
      uint64_t v16 = *(v15 - 1);
      uint64_t v17 = *v15;
      uint64_t v18 = *(v15 - 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100190E0C(v18, v16, v17);
      if (v5) {
        goto LABEL_66;
      }
      v15 += 3;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!--v14)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  uint64_t v19 = *(void *)(a4 + 16);
  if (v19)
  {
    swift_bridgeObjectRetain();
    unint64_t v20 = (uint64_t *)(a4 + 48);
    while (1)
    {
      uint64_t v21 = *(v20 - 1);
      uint64_t v22 = *v20;
      uint64_t v23 = *(v20 - 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100190EEC(v23, v21, v22);
      if (v5) {
        break;
      }
      v20 += 3;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!--v19)
      {
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
    }
LABEL_66:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
LABEL_11:
  uint64_t result = v123;
  uint64_t v25 = *(void *)(v123 + 16);
  if (v25)
  {
    uint64_t v26 = v123 + 32;
    uint64_t v133 = (void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    uint64_t v115 = (void (**)(char *, uint64_t))(v9 + 8);
    swift_bridgeObjectRetain();
    uint64_t v27 = 0;
    uint64_t v105 = v25;
    uint64_t v104 = v26;
    while (1)
    {
      uint64_t v107 = v27;
      os_signpost_type_t v28 = (char *)(v26 + 96 * v27);
      uint64_t v30 = *((void *)v28 + 1);
      uint64_t v29 = *((void *)v28 + 2);
      uint64_t v31 = *((void *)v28 + 10);
      uint64_t v32 = *((void *)v28 + 11);
      uint64_t v33 = *((void *)v28 + 9);
      uint64_t v35 = *((void *)v28 + 3);
      uint64_t v34 = *((void *)v28 + 4);
      v150[0] = *v28;
      uint64_t v130 = v29;
      uint64_t v151 = v29;
      uint64_t v152 = v35;
      uint64_t v153 = v34;
      long long v36 = *(_OWORD *)(v28 + 56);
      long long v154 = *(_OWORD *)(v28 + 40);
      long long v155 = v36;
      uint64_t v156 = v33;
      uint64_t v157 = v31;
      uint64_t v158 = v32;
      uint64_t v37 = v154;
      uint64_t v38 = v36;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_100191080((uint64_t)v150);
      if (v5)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v108 = *(void *)(v30 + 16);
      if (v108) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_62:
      uint64_t v27 = v107 + 1;
      uint64_t v26 = v104;
      if (v107 + 1 == v105) {
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t v39 = v30 + ((*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80));
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v40 = 0;
    uint64_t v114 = v30;
    uint64_t v132 = v35;
    uint64_t v113 = v37;
    uint64_t v112 = v38;
    uint64_t v111 = v33;
    uint64_t v110 = v32;
    uint64_t v106 = v39;
    while (v40 < *(void *)(v30 + 16))
    {
      uint64_t v41 = *(void *)(v122 + 72);
      unint64_t v109 = v40;
      uint64_t v42 = v124;
      sub_10019D380(v39 + v41 * v40, v124, (void (*)(void))type metadata accessor for TreatmentsConfiguration.Area.Experiment);
      uint64_t v43 = *v133;
      uint64_t v44 = v138;
      (*v133)(v136, v42, v138);
      uint64_t v45 = v121;
      uint64_t v46 = v42 + *(int *)(v121 + 24);
      uint64_t v131 = v43;
      v43(v137, v46, v44);
      uint64_t v47 = *(void *)(v42 + *(int *)(v45 + 32));
      uint64_t v116 = *(void *)(v47 + 16);
      if (v116)
      {
        uint64_t v119 = *(int *)(v45 + 28);
        uint64_t v118 = v47 + 32;
        uint64_t result = swift_bridgeObjectRetain();
        unint64_t v48 = 0;
        uint64_t v49 = (uint64_t)v143;
        uint64_t v117 = result;
        while (v48 < *(void *)(result + 16))
        {
          unint64_t v120 = v48;
          uint64_t v50 = (uint64_t *)(v118 + 24 * v48);
          uint64_t v51 = *v50;
          uint64_t v134 = v50[1];
          uint64_t v52 = *(void *)(v124 + v119);
          uint64_t v139 = v50[2];
          uint64_t v129 = v51;
          uint64_t v128 = v52;
          if (v52 && (uint64_t v140 = *(uint64_t **)(v52 + 16)) != 0)
          {
            uint64_t v141 = v5;
            uint64_t v127 = *(void *)(v51 + 16);
            if (v127)
            {
              uint64_t v126 = v51 + 32;
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              uint64_t result = swift_bridgeObjectRetain();
              unint64_t v53 = 0;
              uint64_t v125 = (uint64_t *)(v52 + 40);
              unint64_t v54 = &_swiftEmptyArrayStorage;
              while (v53 < *(void *)(v51 + 16))
              {
                uint64_t v55 = *(void *)(v126 + 8 * v53);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                uint64_t v56 = v125;
                uint64_t v57 = v140;
                do
                {
                  uint64_t v58 = *(v56 - 1);
                  uint64_t v59 = *v56;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    sub_1000711D8(0, v54[2] + 1, 1, (uint64_t)v54);
                    unint64_t v54 = v63;
                  }
                  unint64_t v61 = v54[2];
                  unint64_t v60 = v54[3];
                  if (v61 >= v60 >> 1)
                  {
                    sub_1000711D8(v60 > 1, v61 + 1, 1, (uint64_t)v54);
                    unint64_t v54 = v64;
                  }
                  v56 += 2;
                  _OWORD v54[2] = v61 + 1;
                  uint64_t v62 = &v54[3 * v61];
                  void v62[4] = v55;
                  v62[5] = v58;
                  v62[6] = v59;
                  uint64_t v57 = (uint64_t *)((char *)v57 - 1);
                }
                while (v57);
                swift_bridgeObjectRelease();
                uint64_t result = swift_bridgeObjectRelease();
                ++v53;
                uint64_t v49 = (uint64_t)v143;
                uint64_t v51 = v129;
                if (v53 == v127)
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_41;
                }
              }
              goto LABEL_71;
            }
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            unint64_t v54 = &_swiftEmptyArrayStorage;
LABEL_41:
            uint64_t v72 = v54[2];
            if (v72)
            {
              uint64_t v159 = (uint64_t *)&_swiftEmptyArrayStorage;
              sub_100073668(0, v72, 0);
              uint64_t v66 = v159;
              uint64_t v73 = v54 + 6;
              do
              {
                uint64_t v74 = *(v73 - 1);
                uint64_t v75 = *v73;
                uint64_t v144 = *(v73 - 2);
                uint64_t v145 = v74;
                uint64_t v146 = v75;
                swift_bridgeObjectRetain_n();
                swift_bridgeObjectRetain_n();
                sub_100043478(&qword_10022D770);
                sub_100043478(&qword_100234690);
                swift_dynamicCast();
                uint64_t v76 = v147;
                uint64_t v77 = v148;
                uint64_t v78 = v149;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v140 = v78;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  sub_100073668(0, v66[2] + 1, 1);
                  uint64_t v66 = v159;
                }
                unint64_t v81 = v66[2];
                unint64_t v80 = v66[3];
                if (v81 >= v80 >> 1)
                {
                  sub_100073668(v80 > 1, v81 + 1, 1);
                  uint64_t v66 = v159;
                }
                v73 += 3;
                void v66[2] = v81 + 1;
                uint64_t v82 = &v66[3 * v81];
                v82[4] = (uint64_t)v76;
                void v82[5] = v77;
                v82[6] = (uint64_t)v140;
                --v72;
                uint64_t v49 = (uint64_t)v143;
              }
              while (v72);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v5 = v141;
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v66 = (uint64_t *)&_swiftEmptyArrayStorage;
              uint64_t v5 = v141;
            }
          }
          else
          {
            uint64_t v65 = *(void *)(v51 + 16);
            if (v65)
            {
              uint64_t v147 = (uint64_t *)&_swiftEmptyArrayStorage;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_100073668(0, v65, 0);
              uint64_t v66 = v147;
              uint64_t v67 = (uint64_t *)(v51 + 32);
              do
              {
                uint64_t v68 = *v67;
                uint64_t v147 = v66;
                unint64_t v70 = v66[2];
                unint64_t v69 = v66[3];
                swift_bridgeObjectRetain();
                if (v70 >= v69 >> 1)
                {
                  sub_100073668(v69 > 1, v70 + 1, 1);
                  uint64_t v66 = v147;
                }
                void v66[2] = v70 + 1;
                unint64_t v71 = &v66[3 * v70];
                void v71[5] = 0;
                v71[6] = 0;
                v71[4] = v68;
                ++v67;
                --v65;
              }
              while (v65);
              swift_bridgeObjectRelease();
              uint64_t v49 = (uint64_t)v143;
            }
            else
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v66 = (uint64_t *)&_swiftEmptyArrayStorage;
            }
          }
          uint64_t v83 = v66[2];
          if (v83)
          {
            uint64_t v141 = v5;
            swift_bridgeObjectRetain();
            uint64_t v140 = v66;
            uint64_t v84 = v66 + 6;
            while (1)
            {
              uint64_t v86 = (void *)*(v84 - 2);
              uint64_t v85 = *(v84 - 1);
              uint64_t v87 = *v84;
              uint64_t v88 = v49;
              uint64_t v89 = v138;
              uint64_t v90 = v131;
              v131((char *)v88, (uint64_t)v136, v138);
              uint64_t v91 = v135;
              uint64_t v92 = v89;
              uint64_t v49 = (uint64_t)v143;
              uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v90)(&v143[*(int *)(v135 + 24)], v137, v92);
              uint64_t v93 = (void *)(v49 + *(int *)(v91 + 20));
              uint64_t v94 = v139;
              *uint64_t v93 = v134;
              v93[1] = v94;
              if (v86[2] < 2uLL) {
                break;
              }
              uint64_t v96 = v86[4];
              uint64_t v95 = v86[5];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v97 = v95;
              uint64_t v98 = v141;
              sub_100191354(v49, v130, v132, v97, v96, v85, v87);
              uint64_t v141 = v98;
              if (v98)
              {
                sub_1000507E8(v49, (void (*)(void))type metadata accessor for Treatment);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1000507E8(v124, (void (*)(void))type metadata accessor for TreatmentsConfiguration.Area.Experiment);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                char v102 = *v115;
                uint64_t v103 = v138;
                (*v115)(v137, v138);
                v102(v136, v103);
                swift_bridgeObjectRelease();
                return swift_bridgeObjectRelease();
              }
              v84 += 3;
              sub_1000507E8(v49, (void (*)(void))type metadata accessor for Treatment);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (!--v83)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v5 = v141;
                goto LABEL_56;
              }
            }
            __break(1u);
LABEL_71:
            __break(1u);
            break;
          }
          swift_bridgeObjectRelease();
LABEL_56:
          unint64_t v48 = v120 + 1;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t result = v117;
          if (v48 == v116)
          {
            swift_bridgeObjectRelease();
            goto LABEL_59;
          }
        }
        __break(1u);
        break;
      }
LABEL_59:
      unint64_t v99 = v109 + 1;
      sub_1000507E8(v124, (void (*)(void))type metadata accessor for TreatmentsConfiguration.Area.Experiment);
      uint64_t v100 = *v115;
      uint64_t v101 = v138;
      (*v115)(v137, v138);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v100)(v136, v101);
      unint64_t v40 = v99;
      uint64_t v30 = v114;
      uint64_t v39 = v106;
      if (v99 == v108)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_62;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1001989F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v48 = a5;
  uint64_t v49 = a6;
  uint64_t v47 = a4;
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for OSSignpostError();
  uint64_t v44 = *(const char **)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for OSSignpostID();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v46 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v41 - v15;
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v17 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  int v45 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    os_log_t v42 = v17;
    uint64_t v43 = a1;
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v18 = v44;
    if ((*((unsigned int (**)(char *, uint64_t))v44 + 11))(v10, v8) == enum case for OSSignpostError.doubleEnd(_:))
    {
      char v19 = 0;
      char v20 = 0;
      uint64_t v44 = "[Error] Interval already ended";
    }
    else
    {
      (*((void (**)(char *, uint64_t))v18 + 1))(v10, v8);
      uint64_t v44 = "Failed to synchronize treatments (error: %@)";
      char v20 = 2;
      char v19 = 1;
    }
    uint64_t v21 = v46;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v46, v16, v11);
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = (void *)swift_slowAlloc();
    *(unsigned char *)uint64_t v22 = v20;
    *(unsigned char *)(v22 + 1) = v19;
    *(_WORD *)(v22 + 2) = 2112;
    swift_errorRetain();
    uint64_t v24 = _swift_stdlib_bridgeErrorToNSError();
    v54[0] = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v23 = v24;
    swift_errorRelease();
    swift_errorRelease();
    os_signpost_id_t v25 = OSSignpostID.rawValue.getter();
    os_log_t v26 = v42;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v42, (os_signpost_type_t)v45, v25, "TreatmentStoreService", v44, (uint8_t *)v22, 0xCu);
    sub_100043478((uint64_t *)&unk_100234680);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v27 = *(void (**)(char *, uint64_t))(v12 + 8);
    v27(v16, v11);
    v27(v21, v11);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
  }
  if (qword_10022C4D8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v28 = type metadata accessor for TreatmentStoreService();
  uint64_t v55 = v28;
  v54[0] = v47;
  swift_retain();
  uint64_t v29 = v49;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v30._uint64_t countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v30);
  sub_100049788(v54, v28);
  uint64_t DynamicType = swift_getDynamicType();
  uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
  v52[0] = DynamicType;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000435D4((uint64_t)v52, &qword_10022F490);
  v32._uint64_t countAndFlagsBits = 5972026;
  v32._object = (void *)0xE300000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v32);
  uint64_t MetatypeMetadata = &type metadata for String;
  v52[0] = v48;
  v52[1] = v29;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000435D4((uint64_t)v52, &qword_10022F490);
  v33._uint64_t countAndFlagsBits = 93;
  v33._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v33);
  LogMessage.init(stringInterpolation:)();
  sub_10004377C((uint64_t)v54);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v34._object = (void *)0x80000001001D8980;
  v34._uint64_t countAndFlagsBits = 0xD000000000000029;
  LogMessage.StringInterpolation.appendLiteral(_:)(v34);
  swift_getErrorValue();
  uint64_t v35 = v50;
  uint64_t v36 = v51;
  uint64_t v55 = v51;
  uint64_t v37 = sub_10003BAA4(v54);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v37, v35, v36);
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000435D4((uint64_t)v54, &qword_10022F490);
  v38._uint64_t countAndFlagsBits = 41;
  v38._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v38);
  LogMessage.init(stringInterpolation:)();
  uint64_t v39 = static os_log_type_t.error.getter();
  sub_10004841C(v39);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10019905C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v29 = a4;
  uint64_t v30 = a5;
  uint64_t v28 = a3;
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for OSSignpostError();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v26[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for OSSignpostID();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v26[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  int v27 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    if ((*(unsigned int (**)(unsigned char *, uint64_t))(v7 + 88))(v9, v6) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v15 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
      uint64_t v15 = "Synchronized treatments successfully";
    }
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    os_signpost_id_t v17 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v14, (os_signpost_type_t)v27, v17, "TreatmentStoreService", v15, v16, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
  if (qword_10022C4D8 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v18 = type metadata accessor for TreatmentStoreService();
  void v33[3] = v18;
  v33[0] = v28;
  swift_retain();
  uint64_t v19 = v30;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v20._uint64_t countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v20);
  sub_100049788(v33, v18);
  uint64_t DynamicType = swift_getDynamicType();
  uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
  v31[0] = DynamicType;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000435D4((uint64_t)v31, &qword_10022F490);
  v22._uint64_t countAndFlagsBits = 5972026;
  v22._object = (void *)0xE300000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v22);
  uint64_t MetatypeMetadata = &type metadata for String;
  v31[0] = v29;
  v31[1] = v19;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000435D4((uint64_t)v31, &qword_10022F490);
  v23._uint64_t countAndFlagsBits = 93;
  v23._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v23);
  LogMessage.init(stringInterpolation:)();
  sub_10004377C((uint64_t)v33);
  LogMessage.init(stringLiteral:)();
  uint64_t v24 = static os_log_type_t.default.getter();
  sub_10004841C(v24);
  return swift_bridgeObjectRelease();
}

void sub_1001994D4()
{
}

uint64_t sub_100199524()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_100199564()
{
  sub_100199524();
  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_100199590()
{
  uint64_t v1 = v0[52];
  swift_release();
  v0[40] = v1;
  swift_errorRetain();
  sub_100043478((uint64_t *)&unk_100233150);
  uint64_t v2 = sub_10004D510(0, (unint64_t *)&qword_100234520);
  if (swift_dynamicCast())
  {
    uint64_t v3 = v0[49];
    uint64_t v4 = v0[46];
    uint64_t v11 = v0[45];
    uint64_t v5 = v0[43];
    swift_errorRelease();
    uint64_t v12 = (void *)v0[39];
    *(_OWORD *)(sub_100045C68() + 16) = xmmword_1001C3120;
    v0[34] = v3;
    v0[31] = v5;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1000208BC();
    sub_100020E60();
    sub_100049788(v0 + 31, v3);
    uint64_t DynamicType = swift_getDynamicType();
    v0[38] = swift_getMetatypeMetadata();
    v0[35] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)(v0 + 35), &qword_10022F490);
    sub_100020E44();
    v0[30] = &type metadata for String;
    v0[27] = v11;
    v0[28] = v4;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)(v0 + 27), &qword_10022F490);
    sub_1000208D8();
    sub_100011DB4();
    swift_bridgeObjectRelease();
    sub_10004377C((uint64_t)(v0 + 31));
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_10004A50C((uint64_t)"Failed to fetch areas (error: ");
    v0[23] = v12;
    v0[26] = v2;
    id v7 = v12;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000435D4((uint64_t)(v0 + 23), &qword_10022F490);
    sub_10002D4AC();
    LogMessage.init(stringInterpolation:)();
    uint64_t v8 = static os_log_type_t.error.getter();
    sub_10004841C(v8);
    swift_bridgeObjectRelease();
    objc_msgSend(v7, "ams_sanitizedForSecureCoding");
    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_errorRelease();
  swift_task_dealloc();
  sub_100040954();
  return v9();
}

uint64_t sub_100199848()
{
  sub_100020958();
  uint64_t v3 = sub_1000225D0(v1, v2);
  sub_1000208F0(v3);
  *(void *)(v0 + 352) = sub_10003634C();
  sub_100043FD8();
  return _swift_task_switch(v4, v5, v6);
}

#error "1001999B4: call analysis failed (funcsize=172)"

uint64_t sub_100199BA8(uint64_t a1, uint64_t a2)
{
  *(void *)(swift_allocObject() + 16) = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000502F8();
  uint64_t v3 = v2;
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_100199C7C@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v37 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 56);
  int64_t v38 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v9 = _swiftEmptyDictionarySingleton;
  while (v7)
  {
    unint64_t v10 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v11 = v10 | (v8 << 6);
LABEL_17:
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    swift_bridgeObjectRetain();
    sub_10004FE38(v17, v16, v40);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    sub_100043890((uint64_t)v40, (uint64_t)v41, (uint64_t *)&unk_100234560);
    if (v42)
    {
      unsigned __int8 v43 = v41[0];
      sub_10004D510(0, &qword_1002345C0);
      swift_bridgeObjectRetain();
      id v18 = sub_1000BC5A4();
      [v18 setCacheable:v43];
      sub_1000516F0(v40);
      id v34 = v18;
      char isUnique = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v39 = v9;
      unint64_t v19 = sub_100042ADC(v17, v16);
      uint64_t v20 = v9[2];
      int v44 = v21;
      BOOL v22 = (v21 & 1) == 0;
      Swift::Int v23 = v20 + v22;
      if (__OFADD__(v20, v22)) {
        goto LABEL_36;
      }
      unint64_t v36 = v19;
      sub_100043478(&qword_1002345F0);
      Swift::Bool v24 = _NativeDictionary.ensureUnique(isUnique:capacity:)(isUnique, v23);
      char v25 = v44;
      if (v24)
      {
        unint64_t v36 = sub_100042ADC(v17, v16);
        if ((v25 & 1) != (v26 & 1)) {
          goto LABEL_38;
        }
      }
      if (v25)
      {
        uint64_t v9 = v39;
        uint64_t v27 = v39[7];

        uint64_t v28 = v34;
        *(void *)(v27 + 8 * v36) = v34;
      }
      else
      {
        v39[(v36 >> 6) + 8] |= 1 << v36;
        uint64_t v29 = (uint64_t *)(v39[6] + 16 * v36);
        *uint64_t v29 = v17;
        v29[1] = v16;
        uint64_t v28 = v34;
        *(void *)(v39[7] + 8 * v36) = v34;
        uint64_t v30 = v39[2];
        BOOL v12 = __OFADD__(v30, 1);
        uint64_t v31 = v30 + 1;
        if (v12) {
          goto LABEL_37;
        }
        uint64_t v9 = v39;
        v39[2] = v31;
        swift_bridgeObjectRetain();
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  BOOL v12 = __OFADD__(v8++, 1);
  if (v12)
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v8 >= v38) {
    goto LABEL_33;
  }
  unint64_t v13 = *(void *)(v37 + 8 * v8);
  if (v13)
  {
LABEL_16:
    unint64_t v7 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v8 << 6);
    goto LABEL_17;
  }
  int64_t v14 = v8 + 1;
  if (v8 + 1 >= v38) {
    goto LABEL_33;
  }
  unint64_t v13 = *(void *)(v37 + 8 * v14);
  if (v13) {
    goto LABEL_15;
  }
  int64_t v14 = v8 + 2;
  if (v8 + 2 >= v38) {
    goto LABEL_33;
  }
  unint64_t v13 = *(void *)(v37 + 8 * v14);
  if (v13) {
    goto LABEL_15;
  }
  int64_t v14 = v8 + 3;
  if (v8 + 3 >= v38)
  {
LABEL_33:
    uint64_t result = swift_release();
    *a2 = v9;
    return result;
  }
  unint64_t v13 = *(void *)(v37 + 8 * v14);
  if (v13)
  {
LABEL_15:
    int64_t v8 = v14;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v8 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v8 >= v38) {
      goto LABEL_33;
    }
    unint64_t v13 = *(void *)(v37 + 8 * v8);
    ++v14;
    if (v13) {
      goto LABEL_16;
    }
  }
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10019A030(int a1, int a2, void *aBlock, uint64_t a4)
{
  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  v4[4] = static Set._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  v4[5] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_10019A114;
  return sub_100199848();
}

uint64_t sub_10019A114()
{
  sub_10019D6B0();
  sub_10004A41C();
  uint64_t v2 = v0;
  sub_1000447B0();
  uint64_t v4 = v3;
  sub_100044DDC();
  *uint64_t v5 = v4;
  uint64_t v6 = *v1;
  sub_100020EBC();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  if (v2)
  {
    uint64_t v8 = _convertErrorToNSError(_:)();
    swift_errorRelease();
    uint64_t v9 = (void *)v8;
  }
  else
  {
    sub_10004D510(0, &qword_1002345C0);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v9 = isa;
  }
  uint64_t v11 = sub_1000226F8();
  v12(v11);

  _Block_release(v4);
  sub_100040954();
  sub_100049FEC();
  return v14(v13, v14, v15, v16, v17, v18, v19, v20);
}

uint64_t sub_10019A320(int a1, void *aBlock, uint64_t a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  void v3[4] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_10019A3DC;
  return sub_100193070();
}

uint64_t sub_10019A3DC()
{
  sub_10004A41C();
  uint64_t v2 = v0;
  char v4 = v3;
  uint64_t v5 = *v1;
  uint64_t v6 = *v1;
  sub_100020EBC();
  *uint64_t v7 = v6;
  uint64_t v8 = *v1;
  *uint64_t v7 = *v1;
  swift_task_dealloc();
  swift_release();
  uint64_t v9 = *(void *)(v5 + 24);
  if (v2)
  {
    unint64_t v10 = (void *)_convertErrorToNSError(_:)();
    swift_errorRelease();
    (*(void (**)(uint64_t, void, void *))(v9 + 16))(v9, 0, v10);
  }
  else
  {
    (*(void (**)(uint64_t, void, void))(v9 + 16))(v9, v4 & 1, 0);
  }
  _Block_release(*(const void **)(v6 + 24));
  uint64_t v11 = *(uint64_t (**)(void))(v8 + 8);
  return v11();
}

uint64_t sub_10019A564()
{
  sub_100020958();
  v1[39] = v2;
  v1[40] = v0;
  v1[37] = v3;
  v1[38] = v4;
  v1[36] = v5;
  v1[41] = swift_getObjectType();
  uint64_t v6 = sub_100043478(&qword_1002344F0);
  sub_100044798(v6);
  v1[42] = v7;
  v1[43] = *(void *)(v8 + 64);
  v1[44] = swift_task_alloc();
  v1[45] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for LogMessage.StringInterpolation();
  sub_1000208F0(v9);
  v1[46] = sub_10003634C();
  sub_100043FD8();
  return _swift_task_switch(v10, v11, v12);
}

uint64_t sub_10019A644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_100049B90();
  sub_100020724();
  uint64_t v17 = v16;
  id v18 = (id)AMSSetLogKeyIfNeeded();
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  *(void *)(v17 + 376) = v19;
  *(void *)(v17 + 384) = v21;
  if (qword_10022C4D8 != -1) {
    swift_once();
  }
  uint64_t v22 = *(void *)(v17 + 320);
  uint64_t v40 = *(void *)(v17 + 288);
  uint64_t v41 = qword_100244140;
  uint64_t v42 = *(void *)(v17 + 296);
  *(void *)(v17 + 392) = sub_100043478(&qword_10022E560);
  uint64_t v23 = type metadata accessor for LogMessage();
  sub_100044798(v23);
  *(void *)(v17 + 400) = *(void *)(v24 + 72);
  *(_DWORD *)(v17 + 488) = *(_DWORD *)(v25 + 80);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v26 = type metadata accessor for TreatmentStoreService();
  *(void *)(v17 + 408) = v26;
  *(void *)(v17 + 40) = v26;
  *(void *)(v17 + 16) = v22;
  swift_bridgeObjectRetain_n();
  swift_retain();
  sub_1000208BC();
  sub_100020E60();
  sub_100049788((void *)(v17 + 16), v26);
  uint64_t DynamicType = swift_getDynamicType();
  *(void *)(v17 + 72) = swift_getMetatypeMetadata();
  *(void *)(v17 + 48) = DynamicType;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100036AC0();
  sub_100020E44();
  *(void *)(v17 + 104) = &type metadata for String;
  *(void *)(v17 + 80) = v19;
  *(void *)(v17 + 88) = v21;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100036AC0();
  sub_1000208D8();
  LogMessage.init(stringInterpolation:)();
  swift_bridgeObjectRelease();
  sub_10004377C(v17 + 16);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  sub_10019D6D4((uint64_t)"Fetching treatments (areas: ");
  *(void *)(v17 + 136) = sub_100043478(&qword_100230818);
  *(void *)(v17 + 112) = v40;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000435D4(v17 + 112, &qword_10022F490);
  sub_10002D4AC();
  sub_100011CC0();
  uint64_t v28 = static os_log_type_t.info.getter();
  sub_10004841C(v28);
  swift_bridgeObjectRelease();
  sub_10003BB2C(v42);
  *(void *)(v17 + 416) = v29;
  uint64_t v30 = (void *)sub_10004776C();
  *(void *)(v17 + 424) = v30;
  *uint64_t v30 = v17;
  v30[1] = sub_10019A910;
  sub_1000212F0();
  return v31(v31, v32, v33, v34, v35, v36, v37, v38, a9, v19, v40, v41, v42, a14, a15, a16);
}

uint64_t sub_10019A910()
{
  sub_100020958();
  sub_1000447B0();
  uint64_t v3 = v2;
  sub_100044DDC();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_100020EBC();
  *uint64_t v6 = v5;
  *(void *)(v3 + 432) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 320);
    uint64_t v8 = (uint64_t (*)())sub_10019AF00;
  }
  else
  {
    uint64_t v9 = *(void *)(v3 + 320);
    swift_release();
    uint64_t v8 = sub_10019AA04;
    uint64_t v7 = v9;
  }
  return _swift_task_switch(v8, v7, 0);
}

uint64_t sub_10019AA04()
{
  sub_100020958();
  *(void *)(v0 + 440) = sub_100195E08();
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_100234528 + dword_100234528);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 448) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10019AAB0;
  return v3();
}

uint64_t sub_10019AAB0()
{
  sub_100041F70();
  char v3 = v2;
  sub_1000447B0();
  uint64_t v5 = v4;
  sub_100044DDC();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_100020EBC();
  void *v8 = v7;
  *(void *)(v5 + 456) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v9 = *(void *)(v5 + 320);
    uint64_t v10 = (uint64_t (*)())sub_10019B0A4;
  }
  else
  {
    uint64_t v11 = *(void *)(v5 + 320);
    swift_release();
    *(unsigned char *)(v5 + 492) = v3 & 1;
    uint64_t v10 = sub_10019ABC0;
    uint64_t v9 = v11;
  }
  return _swift_task_switch(v10, v9, 0);
}

uint64_t sub_10019ABC0()
{
  char v16 = *(unsigned char *)(v0 + 492);
  uint64_t v2 = *(void *)(v0 + 352);
  uint64_t v1 = *(void *)(v0 + 360);
  uint64_t v3 = *(void *)(v0 + 336);
  uint64_t v4 = *(void *)(v0 + 344);
  uint64_t v15 = *(void *)(v0 + 328);
  uint64_t v5 = *(void *)(v0 + 312);
  uint64_t v6 = *(void *)(v0 + 288);
  uint64_t v17 = *(uint64_t (**)(void))(*(void *)(v0 + 320) + 144);
  sub_10011D5E8(*(void *)(v0 + 304), v1, &qword_1002344F0);
  sub_10011D5E8(v5, v2, &qword_1002344F0);
  uint64_t v7 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = (v7 + 24) & ~v7;
  uint64_t v9 = (v4 + v7 + v8) & ~v7;
  uint64_t v10 = v9 + v4;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v6;
  sub_100043890(v1, v11 + v8, &qword_1002344F0);
  sub_100043890(v2, v11 + v9, &qword_1002344F0);
  *(unsigned char *)(v11 + v10) = v16;
  *(void *)((v10 & 0xFFFFFFFFFFFFFFF8) + v11 + 8) = v15;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1000502F8();
  *(void *)(v0 + 464) = v12;
  swift_release();
  swift_release();
  uint64_t v13 = (void *)sub_10019D70C();
  *(void *)(v0 + 472) = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_10019ADC0;
  return v17();
}

uint64_t sub_10019ADC0()
{
  sub_10019D6B0();
  sub_10004A41C();
  sub_1000447B0();
  uint64_t v3 = v2;
  sub_100044DDC();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_100020EBC();
  *uint64_t v6 = v5;
  *(void *)(v3 + 480) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_100049FEC();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1000475F0();
    sub_100049FEC();
    return v13(v11, v12, v13, v14, v15, v16, v17, v18);
  }
}

#error "10019AFD8: call analysis failed (funcsize=100)"

#error "10019B17C: call analysis failed (funcsize=100)"

#error "10019B320: call analysis failed (funcsize=100)"

uint64_t sub_10019B3EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, void *a6@<X8>)
{
  uint64_t v7 = v6;
  int v120 = a5;
  uint64_t v99 = a3;
  uint64_t v100 = a4;
  uint64_t v101 = a6;
  uint64_t v116 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v116 - 8);
  uint64_t v11 = __chkstk_darwin(v116);
  uint64_t v115 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v114 = (char *)&v95 - v13;
  uint64_t v123 = type metadata accessor for Treatment(0);
  uint64_t v118 = *(void *)(v123 - 8);
  uint64_t v14 = __chkstk_darwin(v123);
  uint64_t v122 = (char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v117 = (uint64_t)&v95 - v16;
  id v17 = objc_msgSend(self, "ams_sharedAccountStore");
  id v18 = objc_msgSend(v17, "ams_activeiTunesAccount");

  sub_10004D510(0, (unint64_t *)&qword_100232020);
  id v19 = v18;
  id v20 = sub_100051DF8();
  type metadata accessor for TreatmentsCalculator();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v18;
  *(void *)(inited + 24) = v20;
  if (v19)
  {
    uint64_t v98 = sub_100052800(v19);
    uint64_t v102 = v22;
  }
  else
  {
    uint64_t v98 = 0;
    uint64_t v102 = 0;
  }
  uint64_t v23 = a2;
  uint64_t v24 = *(void *)(a2 + 56);
  uint64_t v127 = a2 + 56;
  uint64_t v25 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v26 = -1;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  unint64_t v27 = v26 & v24;
  int64_t v128 = (unint64_t)(v25 + 63) >> 6;
  uint64_t v112 = (void (**)(char *, char *, uint64_t))(v10 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v29 = 0;
  uint64_t v103 = _swiftEmptyDictionarySingleton;
  long long v107 = xmmword_1001C3110;
  uint64_t v119 = a1;
  uint64_t v113 = inited;
  uint64_t v30 = (uint64_t)v122;
  id v121 = v19;
  if (!v27) {
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v130 = (v27 - 1) & v27;
  int64_t v131 = v29;
  for (unint64_t i = __clz(__rbit64(v27)) | (v29 << 6); ; unint64_t i = __clz(__rbit64(v34)) + (v33 << 6))
  {
    uint64_t v36 = (uint64_t *)(*(void *)(v23 + 48) + 16 * i);
    uint64_t v37 = *v36;
    uint64_t v38 = v36[1];
    swift_bridgeObjectRetain();
    uint64_t v129 = v37;
    sub_10004FE38(v37, v38, v133);
    if (v7)
    {
      swift_bridgeObjectRelease();
      swift_release();

      swift_bridgeObjectRelease();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    sub_100043890((uint64_t)v133, (uint64_t)v134, (uint64_t *)&unk_100234560);
    if (!v134[2]) {
      goto LABEL_23;
    }
    memcpy(__dst, v134, 0x58uLL);
    uint64_t v39 = sub_100050B58(__dst);
    if (!v40)
    {
      sub_1000516F0(v133);
LABEL_23:
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_24;
    }
    uint64_t v105 = v39;
    uint64_t v106 = v40;
    uint64_t v41 = sub_100050E74((uint64_t)v39, v40);
    type metadata accessor for TreatmentsRandomGenerator();
    swift_initStackObject();
    sub_1000509CC(v41);
    uint64_t v42 = sub_1000509FC(10000);
    swift_release();
    uint64_t v104 = v42;
    uint64_t v43 = sub_1001915E4(v129, v38, v42, v99, v100, v98, v102);
    uint64_t v44 = *(void *)(v43 + 16);
    uint64_t v97 = v23;
    if (v44) {
      break;
    }
    sub_1000516F0(v133);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v91 = _swiftEmptyArrayStorage;
    id v19 = v121;
LABEL_48:
    sub_100192F1C((unint64_t)v91);
    uint64_t v92 = v103;
    swift_isUniquelyReferenced_nonNull_native();
    long long v136 = v92;
    sub_10008CF30();
    uint64_t v103 = v136;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v23 = v97;
LABEL_24:
    unint64_t v27 = v130;
    int64_t v29 = v131;
    if (v130) {
      goto LABEL_7;
    }
LABEL_8:
    BOOL v32 = __OFADD__(v29, 1);
    int64_t v33 = v29 + 1;
    if (v32)
    {
      __break(1u);
      goto LABEL_52;
    }
    if (v33 >= v128) {
      goto LABEL_50;
    }
    unint64_t v34 = *(void *)(v127 + 8 * v33);
    if (!v34)
    {
      int64_t v35 = v33 + 1;
      if (v33 + 1 >= v128) {
        goto LABEL_50;
      }
      unint64_t v34 = *(void *)(v127 + 8 * v35);
      if (!v34)
      {
        int64_t v35 = v33 + 2;
        if (v33 + 2 >= v128) {
          goto LABEL_50;
        }
        unint64_t v34 = *(void *)(v127 + 8 * v35);
        if (!v34)
        {
          int64_t v35 = v33 + 3;
          if (v33 + 3 >= v128)
          {
LABEL_50:

            swift_release();
            uint64_t v93 = v101;
            uint64_t v94 = v103;
            swift_bridgeObjectRelease();
            swift_setDeallocating();
            sub_100051E8C();
            uint64_t result = swift_deallocClassInstance();
            *uint64_t v93 = v94;
            return result;
          }
          unint64_t v34 = *(void *)(v127 + 8 * v35);
          if (!v34)
          {
            while (1)
            {
              int64_t v33 = v35 + 1;
              if (__OFADD__(v35, 1)) {
                goto LABEL_55;
              }
              if (v33 >= v128) {
                goto LABEL_50;
              }
              unint64_t v34 = *(void *)(v127 + 8 * v33);
              ++v35;
              if (v34) {
                goto LABEL_18;
              }
            }
          }
        }
      }
      int64_t v33 = v35;
    }
LABEL_18:
    uint64_t v130 = (v34 - 1) & v34;
    int64_t v131 = v33;
  }
  uint64_t v96 = 0;
  long long v136 = _swiftEmptyArrayStorage;
  uint64_t v111 = v43;
  uint64_t v126 = v44;
  specialized ContiguousArray.reserveCapacity(_:)();
  uint64_t v45 = v111;
  uint64_t result = sub_10019C9E0(v111);
  int64_t v47 = result;
  int v49 = v48 & 1;
  uint64_t v110 = v45 + 56;
  while ((v47 & 0x8000000000000000) == 0 && v47 < 1 << *(unsigned char *)(v45 + 32))
  {
    if (((*(void *)(v110 + (((unint64_t)v47 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v47) & 1) == 0) {
      goto LABEL_53;
    }
    if (*(_DWORD *)(v45 + 36) != v46) {
      goto LABEL_54;
    }
    int v124 = v49;
    uint64_t v125 = v46;
    uint64_t v50 = *(void *)(v45 + 48);
    uint64_t v51 = v117;
    sub_10019D380(v50 + *(void *)(v118 + 72) * v47, v117, (void (*)(void))type metadata accessor for Treatment);
    sub_100050944(v51, v30);
    if (v120)
    {
      sub_100043478(&qword_10022D738);
      uint64_t v52 = swift_allocObject();
      *(_OWORD *)(v52 + 16) = v107;
      unint64_t v53 = (void *)(v30 + *(int *)(v123 + 20));
      uint64_t v54 = v53[1];
      *(void *)(v52 + 32) = *v53;
      *(void *)(v52 + 40) = v54;
      swift_bridgeObjectRetain();
      uint64_t v55 = v106;
      swift_bridgeObjectRetain();
      sub_1000502C4(1, 2, 1, v52);
      uint64_t v57 = v56;
      v56[2] = 2;
      v56[6] = v105;
      v56[7] = v55;
      uint64_t v58 = __dst[7];
      uint64_t v59 = __dst[8];
      uint64_t v61 = __dst[9];
      uint64_t v60 = __dst[10];
      unint64_t v62 = v56[3];
      swift_bridgeObjectRetain();
      if (v62 <= 5)
      {
        sub_1000502C4(v62 > 1, 3, 1, (uint64_t)v57);
        uint64_t v57 = v88;
      }
      v57[2] = 3;
      v57[8] = v58;
      v57[9] = v59;
      unint64_t v63 = v57[3];
      swift_bridgeObjectRetain();
      if (v63 <= 7)
      {
        sub_1000502C4(v63 > 1, 4, 1, (uint64_t)v57);
        uint64_t v57 = v89;
      }
      v57[2] = 4;
      v57[10] = v61;
      v57[11] = v60;
      uint64_t v132 = (void *)v104;
      uint64_t v64 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v66 = v65;
      unint64_t v68 = v57[2];
      unint64_t v67 = v57[3];
      if (v68 >= v67 >> 1)
      {
        sub_1000502C4(v67 > 1, v68 + 1, 1, (uint64_t)v57);
        uint64_t v57 = v90;
      }
      v57[2] = v68 + 1;
      unint64_t v69 = &v57[2 * v68];
      v69[4] = v64;
      v69[5] = v66;
      uint64_t v132 = v57;
      sub_100043478(&qword_100232940);
      sub_10002B6DC((unint64_t *)&qword_10022D988, &qword_100232940);
      uint64_t v70 = BidirectionalCollection<>.joined(separator:)();
      uint64_t v108 = v71;
      uint64_t v109 = v70;
      swift_bridgeObjectRelease();
      uint64_t v72 = *v112;
      uint64_t v73 = (uint64_t)v114;
      uint64_t v30 = (uint64_t)v122;
      uint64_t v74 = v116;
      (*v112)(v114, v122, v116);
      uint64_t v75 = (uint64_t)v115;
      v72(v115, (char *)(v30 + *(int *)(v123 + 24)), v74);
      id v76 = objc_allocWithZone((Class)AMSTreatment);
      sub_1000506F0(v73, v109, v108, v75);
      id v19 = v121;
    }
    else
    {
      uint64_t v77 = *v112;
      uint64_t v78 = v114;
      uint64_t v79 = v116;
      (*v112)(v114, (char *)v30, v116);
      uint64_t v80 = *(int *)(v123 + 24);
      unint64_t v81 = (uint64_t *)(v30 + *(int *)(v123 + 20));
      uint64_t v82 = v81[1];
      uint64_t v109 = *v81;
      uint64_t v83 = (char *)(v30 + v80);
      uint64_t v84 = v115;
      v77(v115, v83, v79);
      objc_allocWithZone((Class)AMSTreatment);
      swift_bridgeObjectRetain();
      uint64_t v85 = (uint64_t)v78;
      uint64_t v86 = (uint64_t)v84;
      id v19 = v121;
      uint64_t v30 = (uint64_t)v122;
      sub_1000506F0(v85, v109, v82, v86);
    }
    sub_1000507E8(v30, (void (*)(void))type metadata accessor for Treatment);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    uint64_t v45 = v111;
    uint64_t result = sub_10019C8F8(v47, v125, v124 & 1, v111);
    int64_t v47 = result;
    int v49 = v87 & 1;
    if (!--v126)
    {
      sub_100105484(result, v46, v49);
      uint64_t v91 = v136;
      sub_1000516F0(v133);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = v96;
      goto LABEL_48;
    }
  }
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
  return result;
}

uint64_t sub_10019BEF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const void *a5, uint64_t a6)
{
  void v6[2] = a6;
  sub_100043478(&qword_1002344F0);
  uint64_t v10 = swift_task_alloc();
  uint64_t v6[3] = v10;
  uint64_t v11 = swift_task_alloc();
  v6[4] = v11;
  v6[5] = _Block_copy(a5);
  v6[6] = static Set._unconditionallyBridgeFromObjectiveC(_:)();
  if (a3)
  {
    static Date._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v12 = 1;
  }
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = 1;
  sub_100021AC0(v11, v12, 1, v13);
  if (a4)
  {
    static Date._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = 0;
  }
  sub_100021AC0(v10, v14, 1, v13);
  swift_retain();
  uint64_t v15 = (void *)swift_task_alloc();
  v6[7] = v15;
  void *v15 = v6;
  v15[1] = sub_10019C0B0;
  return sub_10019A564();
}

uint64_t sub_10019C0B0()
{
  uint64_t v2 = v0;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  sub_100020EBC();
  *uint64_t v5 = v4;
  uint64_t v6 = *v1;
  *uint64_t v5 = *v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v7 = *(void *)(v3 + 32);
  sub_1000435D4(*(void *)(v3 + 24), &qword_1002344F0);
  sub_1000435D4(v7, &qword_1002344F0);
  if (v2)
  {
    uint64_t v8 = _convertErrorToNSError(_:)();
    swift_errorRelease();
    Class isa = 0;
    uint64_t v10 = (void *)v8;
  }
  else
  {
    sub_100043478((uint64_t *)&unk_100234500);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v8 = 0;
    uint64_t v10 = isa;
  }
  uint64_t v11 = *(void (***)(void, void, void))(v4 + 40);
  ((void (**)(void, Class, uint64_t))v11)[2](v11, isa, v8);

  _Block_release(v11);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v6 + 8);
  return v12();
}

uint64_t sub_10019C2D4()
{
  _Block_release(*(const void **)(v0 + 48));
  swift_release();
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10019C32C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v6 = (const void *)v0[6];
  uint64_t v5 = v0[7];
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)sub_10002219C(v7);
  void *v8 = v9;
  v8[1] = sub_100045A38;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, const void *, uint64_t))((char *)&dword_1002344A8
                                                                                          + dword_1002344A8);
  return v10(v1, v2, v3, v4, v6, v5);
}

uint64_t sub_10019C404()
{
  uint64_t v1 = sub_100043478(&qword_1002344F0);
  sub_100044798(v1);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = (v6 + v3 + v4) & ~v3;
  swift_bridgeObjectRelease();
  uint64_t v8 = v0 + v4;
  uint64_t v9 = type metadata accessor for Date();
  if (!sub_10004FD40(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  if (!sub_10004FD40(v0 + v7, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v0 + v7, v9);
  }
  return _swift_deallocObject(v0, ((v7 + v6) & 0xFFFFFFFFFFFFFFF8) + 16, v3 | 7);
}

uint64_t sub_10019C538@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_100043478(&qword_1002344F0);
  sub_100044798(v5);
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  return sub_10019B3EC(a1, *(void *)(v2 + 16), v2 + ((v10 + 24) & ~v10), v2 + ((*(void *)(v9 + 64) + v10 + ((v10 + 24) & ~v10)) & ~v10), *(unsigned __int8 *)(v2 + ((*(void *)(v9 + 64) + v10 + ((v10 + 24) & ~v10)) & ~v10) + *(void *)(v9 + 64)), a2);
}

uint64_t sub_10019C5DC(uint64_t a1)
{
  return sub_1001949D8(a1, v1);
}

unint64_t sub_10019C5E4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100043478((uint64_t *)&unk_100234670);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10011D5E8(v6, (uint64_t)&v15, &qword_10022D848);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_10019C71C(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_100043510(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10019C71C(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();
  return sub_10019C794(a1, a2, v4);
}

unint64_t sub_10019C794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_10019C8DC(uint64_t a1, uint64_t (*a2)(void))
{
  return sub_1000B9FD8(a2);
}

uint64_t sub_10019C8EC()
{
  return sub_1000B9598();
}

int64_t sub_10019C8F8(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (unint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  if (v5 + 1 < (unint64_t)(result + 63) >> 6)
  {
    unint64_t v10 = *(void *)(v6 + 8 * v9);
    if (v10) {
      return __clz(__rbit64(v10)) + (v9 << 6);
    }
    unint64_t v11 = (unint64_t)(result + 63) >> 6;
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v11)
    {
      unint64_t v10 = *(void *)(v6 + 8 * v9);
      if (v10) {
        return __clz(__rbit64(v10)) + (v9 << 6);
      }
      while (v5 + 3 < v11)
      {
        unint64_t v10 = *(void *)(a4 + 80 + 8 * v5++);
        if (v10)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v10)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_10019C9E0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  uint64_t v2 = 64;
  for (uint64_t i = 9; i - 7 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    unint64_t v1 = *(void *)(a1 + 8 * i);
    v2 += 64;
    if (v1) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_10019CA60(uint64_t *a1, uint64_t a2)
{
  return sub_1000164C0(*a1, a2, &qword_1002346D8);
}

uint64_t sub_10019CA84()
{
  return sub_100194DDC();
}

uint64_t sub_10019CA90()
{
  return sub_100194E20();
}

uint64_t sub_10019CA98(uint64_t *a1, uint64_t a2)
{
  return sub_1000164C0(*a1, a2, &qword_1002345E8);
}

uint64_t sub_10019CABC(uint64_t *a1, uint64_t a2)
{
  return sub_1000164C0(*a1, a2, &qword_100234540);
}

uint64_t sub_10019CAE0()
{
  return sub_10000A6B4(&qword_100234540);
}

uint64_t sub_10019CAEC(uint64_t a1)
{
  return sub_10019D530(a1, &qword_100234540, (uint64_t (*)(uint64_t))sub_10019CABC);
}

uint64_t sub_10019CB0C()
{
  return sub_10000A6B4(&qword_100234540);
}

uint64_t sub_10019CB18(uint64_t a1)
{
  return sub_10019CC40(a1, &qword_100234540);
}

uint64_t sub_10019CB28()
{
  return sub_10019CF18((uint64_t (*)(void, void, void, void, void, void))sub_100195528);
}

uint64_t sub_10019CB40()
{
  return sub_10004ADA4((void (*)(void))&_swift_release);
}

void sub_10019CB58()
{
}

unint64_t sub_10019CB64()
{
  unint64_t result = qword_100234578;
  if (!qword_100234578)
  {
    sub_10004D510(255, &qword_100234570);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234578);
  }
  return result;
}

uint64_t sub_10019CBC4(uint64_t a1)
{
  return sub_100194BC0(a1, v1);
}

uint64_t sub_10019CBCC()
{
  return sub_100194E64();
}

uint64_t sub_10019CBD4()
{
  return sub_10000A6B4(&qword_100234580);
}

uint64_t sub_10019CBE0()
{
  uint64_t v0 = sub_100043478(&qword_100234580);
  sub_100044E90(v0);
  sub_10004DD48();
  return sub_10019CBCC();
}

uint64_t sub_10019CC28()
{
  return sub_10000A6B4(&qword_100234580);
}

uint64_t sub_10019CC34(uint64_t a1)
{
  return sub_10019CC40(a1, &qword_100234580);
}

uint64_t sub_10019CC40(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = sub_100043478(a2);
  sub_100044E90(v5);
  return sub_100194EA8(a1, v2 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), a2);
}

uint64_t sub_10019CC94(uint64_t a1)
{
  return sub_100194050(a1, v1);
}

uint64_t sub_10019CC9C()
{
  return sub_10000A6B4(&qword_100234588);
}

uint64_t sub_10019CCA8()
{
  uint64_t v0 = sub_100043478(&qword_100234588);
  sub_100044E90(v0);
  return sub_100194DA8();
}

uint64_t sub_10019CCEC()
{
  return sub_10000A6B4(&qword_100234588);
}

uint64_t sub_10019CCF8(uint64_t a1)
{
  return sub_10019CC40(a1, &qword_100234588);
}

uint64_t sub_10019CD04()
{
  _Block_release(*(const void **)(v0 + 24));
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10019CD44()
{
  sub_100041F70();
  uint64_t v1 = v0[2];
  uint64_t v2 = (void *)v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_10002219C(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_100052880;
  unint64_t v7 = (uint64_t (*)(int, void *, uint64_t))((char *)&dword_100234590 + dword_100234590);
  return v7(v1, v2, v3);
}

uint64_t sub_10019CDF4()
{
  sub_10019D6B0();
  sub_10004A41C();
  sub_10005261C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10002219C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100052880;
  sub_1000473E8();
  sub_100049FEC();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10019CE8C()
{
  return sub_100199BA8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10019CE94(uint64_t a1)
{
  return sub_1001947F0(a1, v1);
}

uint64_t sub_10019CE9C()
{
  return sub_10000A6B4(&qword_1002345E8);
}

uint64_t sub_10019CEA8(uint64_t a1)
{
  return sub_10019D530(a1, &qword_1002345E8, (uint64_t (*)(uint64_t))sub_10019CA98);
}

uint64_t sub_10019CEC8()
{
  return sub_10000A6B4(&qword_1002345E8);
}

uint64_t sub_10019CED4(uint64_t a1)
{
  return sub_10019CC40(a1, &qword_1002345E8);
}

uint64_t sub_10019CEE0@<X0>(void *a1@<X8>)
{
  return sub_100199C7C(*(void *)(v1 + 16), a1);
}

uint64_t sub_10019CF00()
{
  return sub_10019CF18((uint64_t (*)(void, void, void, void, void, void))sub_100195218);
}

uint64_t sub_10019CF18(uint64_t (*a1)(void, void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_10019CF30()
{
  return sub_10004ADA4((void (*)(void))&_swift_release);
}

void sub_10019CF48()
{
}

uint64_t sub_10019CF54()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10019CF94()
{
  return sub_10000A6B4(&qword_100234630);
}

uint64_t sub_10019CFA0()
{
  return sub_10000A6B4(&qword_100234630);
}

uint64_t sub_10019CFAC(uint64_t a1)
{
  return sub_10019CC40(a1, &qword_100234630);
}

uint64_t sub_10019CFB8()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10019CFF4()
{
  return sub_10004ADA4((void (*)(void))&_swift_release);
}

void sub_10019D00C()
{
}

uint64_t sub_10019D01C()
{
  _Block_release(*(const void **)(v0 + 32));
  swift_release();
  uint64_t v1 = sub_10002068C();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10019D060()
{
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10019D0A0()
{
  return sub_10004ADA4((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_10019D0B8(uint64_t *a1)
{
  return sub_100197998(a1, v1);
}

uint64_t sub_10019D0C4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for OSSignposter();
  sub_100044798(v3);
  sub_100022848();
  uint64_t v6 = *(void *)(v1 + v5);
  uint64_t v8 = *(void *)(v1 + v7);
  uint64_t v10 = *(void *)(v1 + v9);
  uint64_t v11 = *(void *)(v1 + v9 + 8);
  return sub_1001989F4(a1, v1 + v4, v6, v8, v10, v11);
}

uint64_t sub_10019D140()
{
  return sub_100195DF8(0);
}

uint64_t sub_10019D14C()
{
  type metadata accessor for OSSignposter();
  sub_100043B1C();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = v2 | 7;
  unint64_t v4 = (((((*(void *)(v1 + 64) + ((v2 + 16) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_100043FB0();
  v5();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, v4 + 16, v3);
}

uint64_t sub_10019D210()
{
  uint64_t v1 = type metadata accessor for OSSignposter();
  sub_100044798(v1);
  sub_100022848();
  uint64_t v4 = *(void *)(v0 + v3);
  uint64_t v6 = *(void *)(v0 + v5);
  uint64_t v8 = *(void *)(v0 + v7);
  uint64_t v9 = *(void *)(v0 + v7 + 8);
  return sub_10019905C(v0 + v2, v4, v6, v8, v9);
}

uint64_t sub_10019D27C()
{
  return sub_1000B9FD8(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_10019D284()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_10002068C();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10019D2CC()
{
  return sub_100197B00(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_10019D2D8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10019D320(uint64_t a1)
{
  return sub_100197BD8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10019D344()
{
  return sub_10019CF18((uint64_t (*)(void, void, void, void, void, void))sub_100194EF0);
}

uint64_t sub_10019D35C()
{
  return sub_10004ADA4((void (*)(void))&_swift_release);
}

void sub_10019D374()
{
}

uint64_t sub_10019D380(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100043B1C();
  uint64_t v4 = sub_10002D450();
  v5(v4);
  return a2;
}

uint64_t sub_10019D3D4()
{
  return sub_100042C08((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_10019D3EC@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_10019630C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_10019D40C()
{
  return sub_100042C08((void (*)(void))&_swift_bridgeObjectRelease);
}

void sub_10019D424(unsigned char *a1@<X8>)
{
  sub_100196C4C(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_10019D444()
{
  return sub_10019C8EC();
}

uint64_t sub_10019D44C()
{
  return sub_10004ADA4((void (*)(void))&_swift_release);
}

uint64_t sub_10019D464(uint64_t a1)
{
  return sub_100194420(a1, v1);
}

uint64_t sub_10019D46C()
{
  return sub_10000A6B4(&qword_1002346B8);
}

uint64_t sub_10019D478(uint64_t a1)
{
  return sub_10019D530(a1, &qword_1002346B8, (uint64_t (*)(uint64_t))sub_10019CA84);
}

uint64_t sub_10019D498()
{
  return sub_10000A6B4(&qword_1002346B8);
}

uint64_t sub_10019D4A4(uint64_t a1)
{
  return sub_10019CC40(a1, &qword_1002346B8);
}

uint64_t sub_10019D4B0(uint64_t a1)
{
  return sub_100194608(a1, v1);
}

uint64_t sub_10019D4B8()
{
  return sub_10000A6B4(&qword_1002346C8);
}

uint64_t sub_10019D4C4(uint64_t a1)
{
  return sub_10019D530(a1, &qword_1002346C8, (uint64_t (*)(uint64_t))sub_10019CA90);
}

uint64_t sub_10019D4E4()
{
  return sub_10000A6B4(&qword_1002346C8);
}

uint64_t sub_10019D4F0(uint64_t a1)
{
  return sub_10019CC40(a1, &qword_1002346C8);
}

uint64_t sub_10019D4FC(uint64_t a1)
{
  return sub_100194238(a1, v1);
}

uint64_t sub_10019D504()
{
  return sub_10000A6B4(&qword_1002346D8);
}

uint64_t sub_10019D510(uint64_t a1)
{
  return sub_10019D530(a1, &qword_1002346D8, (uint64_t (*)(uint64_t))sub_10019CA60);
}

uint64_t sub_10019D530(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3 = sub_100043478(a2);
  sub_100044E90(v3);
  uint64_t v4 = sub_10004DD48();
  return a3(v4);
}

uint64_t sub_10019D588()
{
  return sub_10000A6B4(&qword_1002346D8);
}

uint64_t sub_10019D594(uint64_t a1)
{
  return sub_10019CC40(a1, &qword_1002346D8);
}

id sub_10019D5A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  swift_defaultActor_initialize();
  a6[14] = a1;
  a6[15] = a2;
  a6[16] = a4;
  a6[17] = a5;
  a6[18] = a3;
  a6[19] = 0;
  v13.receiver = a6;
  v13.super_class = (Class)type metadata accessor for TreatmentStoreService();
  return objc_msgSendSuper2(&v13, "init");
}

uint64_t sub_10019D684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return a13;
}

uint64_t *sub_10019D694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  *(void *)(v7 + 40) = a1;
  *(void *)(v7 + 48) = a2;
  return sub_10003BAA4(a7);
}

uint64_t sub_10019D6C4()
{
  return v0 + 8;
}

void sub_10019D6D4(uint64_t a1@<X8>)
{
  unint64_t v3 = 0xD00000000000001CLL;
  unint64_t v2 = (a1 - 32) | 0x8000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v3);
}

uint64_t sub_10019D6F4()
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t sub_10019D70C()
{
  return swift_task_alloc();
}

id sub_10019D72C(uint64_t a1, void *a2, uint64_t a3)
{
  sub_10005370C(a1, v17);
  uint64_t v5 = v17[0];
  uint64_t v6 = v17[1];
  int64_t v7 = v17[3];
  unint64_t v8 = v17[4];
  int64_t v9 = (unint64_t)(v17[2] + 64) >> 6;
  id result = (id)swift_bridgeObjectRetain();
  if (!v8) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v12 = v11 | (v7 << 6);
  while (1)
  {
    id result = [a2 addObserver:a3 selector:"storeDidChangeExternallyWithNotification:" name:NSUbiquitousKeyValueStoreDidChangeExternallyNotification object:*(void *)(*(void *)(v5 + 56) + 8 * v12)];
    if (v8) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v13 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      break;
    }
    if (v13 >= v9) {
      goto LABEL_21;
    }
    unint64_t v14 = *(void *)(v6 + 8 * v13);
    int64_t v15 = v7 + 1;
    if (!v14)
    {
      int64_t v15 = v7 + 2;
      if (v7 + 2 >= v9) {
        goto LABEL_21;
      }
      unint64_t v14 = *(void *)(v6 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v7 + 3;
        if (v7 + 3 >= v9) {
          goto LABEL_21;
        }
        unint64_t v14 = *(void *)(v6 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v7 + 4;
          if (v7 + 4 >= v9) {
            goto LABEL_21;
          }
          unint64_t v14 = *(void *)(v6 + 8 * v15);
          if (!v14)
          {
            int64_t v15 = v7 + 5;
            if (v7 + 5 >= v9) {
              goto LABEL_21;
            }
            unint64_t v14 = *(void *)(v6 + 8 * v15);
            if (!v14)
            {
              int64_t v16 = v7 + 6;
              while (v16 < v9)
              {
                unint64_t v14 = *(void *)(v6 + 8 * v16++);
                if (v14)
                {
                  int64_t v15 = v16 - 1;
                  goto LABEL_18;
                }
              }
LABEL_21:

              swift_release();
              return (id)swift_release();
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v7 = v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_10019D8B0(uint64_t a1, void *a2)
{
  sub_10005370C(a1, v16);
  uint64_t v4 = v16[0];
  uint64_t v3 = v16[1];
  int64_t v5 = v16[3];
  unint64_t v6 = v16[4];
  int64_t v7 = (unint64_t)(v16[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v5 << 6);
      goto LABEL_20;
    }
    int64_t v11 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (v11 >= v7) {
      goto LABEL_22;
    }
    unint64_t v12 = *(void *)(v3 + 8 * v11);
    int64_t v13 = v5 + 1;
    if (!v12)
    {
      int64_t v13 = v5 + 2;
      if (v5 + 2 >= v7) {
        goto LABEL_22;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v5 + 3;
        if (v5 + 3 >= v7) {
          goto LABEL_22;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v5 + 4;
          if (v5 + 4 >= v7) {
            goto LABEL_22;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v13);
          if (!v12)
          {
            int64_t v13 = v5 + 5;
            if (v5 + 5 >= v7) {
              goto LABEL_22;
            }
            unint64_t v12 = *(void *)(v3 + 8 * v13);
            if (!v12)
            {
              int64_t v14 = v5 + 6;
              while (v14 < v7)
              {
                unint64_t v12 = *(void *)(v3 + 8 * v14++);
                if (v12)
                {
                  int64_t v13 = v14 - 1;
                  goto LABEL_19;
                }
              }
LABEL_22:

              swift_release();
              return 0;
            }
          }
        }
      }
    }
LABEL_19:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v5 = v13;
LABEL_20:
    if (*(void **)(*(void *)(v4 + 56) + 8 * v10) == a2)
    {
      uint64_t v15 = *(unsigned __int8 *)(*(void *)(v4 + 48) + v10);
      swift_release();
      return v15;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10019DA20()
{
  type metadata accessor for UbiquitousKeyValueStoreController();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_10019DA5C();
  qword_1002441D0 = v0;
  return result;
}

uint64_t sub_10019DA5C()
{
  sub_10004D510(0, &qword_10022E5C8);
  sub_10008E56C();
  *(void *)(v0 + 16) = Dictionary.init(dictionaryLiteral:)();
  *(unsigned char *)(v0 + 24) = 0;
  sub_10019DB0C(0, 0);
  sub_10019E25C();
  return v0;
}

uint64_t sub_10019DAD0()
{
  sub_10019ED70();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void sub_10019DB0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_10022C550 != -1) {
    swift_once();
  }
  id v6 = [sub_1001353A4() queryDeviceToDeviceEncryptionAvailability];
  swift_unknownObjectRelease();
  int64_t v7 = (void *)swift_allocObject();
  v7[2] = v3;
  void v7[3] = a1;
  v7[4] = a2;
  v9[4] = sub_1001A0A74;
  v9[5] = v7;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_10006D514;
  v9[3] = &unk_100218760;
  unint64_t v8 = _Block_copy(v9);
  swift_retain();
  sub_100050578(a1);
  swift_release();
  [v6 addFinishBlock:v8];
  _Block_release(v8);
}

uint64_t sub_10019DC6C(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(BOOL), uint64_t a5)
{
  uint64_t v46 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  int64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t result = __chkstk_darwin(v16 - 8);
  if (a1)
  {
    uint64_t v41 = v13;
    uint64_t v42 = v12;
    uint64_t v43 = v9;
    uint64_t v44 = a5;
    uint64_t v45 = a4;
    LOBYTE(v47) = [a1 integerValue] & 3;
    uint64_t v47 = v47;
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    int v49 = (void *)type metadata accessor for UbiquitousKeyValueStoreController();
    aBlock[0] = a3;
    uint64_t v40 = a3;
    swift_retain();
    id v18 = (id)AMSLogKey();
    if (v18)
    {
      id v19 = v18;
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v22 = v21;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v23._uint64_t countAndFlagsBits = 0;
      v23._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      sub_100049788(aBlock, (uint64_t)v49);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v52[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v52);
      v25._uint64_t countAndFlagsBits = 5972026;
      v25._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t MetatypeMetadata = &type metadata for String;
      v52[0] = v20;
      v52[1] = v22;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v52);
      v26._uint64_t countAndFlagsBits = 93;
      v26._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v27._uint64_t countAndFlagsBits = 0;
      v27._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      sub_100049788(aBlock, (uint64_t)v49);
      uint64_t v28 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v52[0] = v28;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v52);
      v29._uint64_t countAndFlagsBits = 58;
      v29._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v29);
      LogMessage.init(stringInterpolation:)();
    }
    BOOL v30 = v47 == 3;
    sub_10004377C((uint64_t)aBlock);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v31._object = (void *)0x80000001001D8F20;
    v31._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v31);
    int v49 = &type metadata for Bool;
    LOBYTE(aBlock[0]) = v30;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)aBlock);
    v32._uint64_t countAndFlagsBits = 0;
    v32._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v32);
    LogMessage.init(stringInterpolation:)();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v33 = static os_log_type_t.debug.getter();
    sub_10004841C(v33);
    swift_bridgeObjectRelease();
    uint64_t v34 = v43;
    uint64_t v35 = v40;
    uint64_t v36 = v41;
    if (qword_10022C590 != -1) {
      swift_once();
    }
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = v35;
    *(unsigned char *)(v37 + 24) = v30;
    uint64_t v50 = sub_1001A0AB8;
    uint64_t v51 = v37;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002CD0C;
    int v49 = &unk_1002187B0;
    uint64_t v38 = _Block_copy(aBlock);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    v52[0] = _swiftEmptyArrayStorage;
    sub_10002352C();
    sub_100043478((uint64_t *)&unk_10022F4C0);
    sub_1000234D8();
    uint64_t v39 = v46;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v38);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v39);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v42);
    uint64_t result = swift_release();
    if (v45) {
      return v45(v47 == 3);
    }
  }
  return result;
}

uint64_t sub_10019E25C()
{
  uint64_t v1 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v2 = sub_1000208F0(v1);
  __chkstk_darwin(v2);
  sub_100020658();
  uint64_t v3 = sub_100078E48();
  uint64_t v4 = (char *)v3[2];
  if (v4)
  {
    int64_t v5 = (char *)(v3 + 4);
    do
    {
      unsigned __int8 v6 = *v5++;
      v14[0] = v6;
      sub_10019E5BC(v14, v0);
      --v4;
    }
    while (v4);
  }
  swift_bridgeObjectRelease();
  sub_10019EA98();
  BOOL v7 = sub_100057CE8();
  sub_100043478(&qword_10022E560);
  uint64_t v8 = type metadata accessor for LogMessage();
  sub_100044798(v8);
  sub_10004222C();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  if (v7)
  {
    uint64_t v15 = type metadata accessor for UbiquitousKeyValueStoreController();
    *(void *)uint64_t v14 = v0;
    swift_retain();
    if ((id)AMSLogKey()) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v15 = type metadata accessor for UbiquitousKeyValueStoreController();
    *(void *)uint64_t v14 = v0;
    swift_retain();
    if ((id)AMSLogKey())
    {
LABEL_8:
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_100044224();
      swift_bridgeObjectRetain();
      sub_100049814();
      sub_100044E44();
      sub_100020F04(v14);
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_100043C38(MetatypeMetadata);
      sub_1000423CC((uint64_t)v13);
      sub_100020E44();
      v13[3] = &type metadata for String;
      v13[0] = v4;
      v13[1] = v7;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v13);
      sub_1000208D8();
      sub_10004892C();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
  }
  sub_100020ECC();
  sub_100044E44();
  sub_100020F04(v14);
  uint64_t v10 = swift_getMetatypeMetadata();
  sub_100043C38(v10);
  sub_1000423CC((uint64_t)v13);
  sub_100020E94();
  sub_10004892C();
LABEL_10:
  sub_10004377C((uint64_t)v14);
  sub_100020924();
  LogMessage.init(stringLiteral:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v11 = static os_log_type_t.info.getter();
  sub_10004841C(v11);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10019E5BC(unsigned __int8 *a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = *a1;
  unint64_t v6 = 0xE900000000000073;
  uint64_t v7 = 0x636974796C616E61;
  switch(v5)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v7 = 0x6C616E7265746E69;
      break;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v7 = 0x7379656E72756F6ALL;
      break;
    case 3:
      unint64_t v6 = 0xEF736E6F69746164;
      uint64_t v7 = 0x6E656D6D6F636572;
      break;
    default:
      break;
  }
  unint64_t v31 = 0x80000001001D4BF0;
  unint64_t v8 = v6;
  String.append(_:)(*(Swift::String *)&v7);
  swift_bridgeObjectRelease();
  unint64_t v33 = 0xD000000000000019;
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  Swift::String v32 = (void *)type metadata accessor for UbiquitousKeyValueStoreController();
  unint64_t v30 = a2;
  swift_retain();
  id v9 = (id)AMSLogKey();
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v14._uint64_t countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    sub_100049788(&v30, (uint64_t)v32);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v28[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v28);
    v16._uint64_t countAndFlagsBits = 5972026;
    v16._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    uint64_t MetatypeMetadata = &type metadata for String;
    v28[0] = v11;
    v28[1] = v13;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v28);
    v17._uint64_t countAndFlagsBits = 93;
    v17._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v18._uint64_t countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    sub_100049788(&v30, (uint64_t)v32);
    uint64_t v19 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v28[0] = v19;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v28);
    v20._uint64_t countAndFlagsBits = 58;
    v20._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v30);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v21._uint64_t countAndFlagsBits = 0xD000000000000021;
  v21._object = (void *)0x80000001001D8EF0;
  LogMessage.StringInterpolation.appendLiteral(_:)(v21);
  Swift::String v32 = &type metadata for String;
  unint64_t v30 = v33;
  unint64_t v31 = 0x80000001001D4BF0;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000423CC((uint64_t)&v30);
  v22._uint64_t countAndFlagsBits = 32;
  v22._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v22);
  LogMessage.init(stringInterpolation:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v23 = static os_log_type_t.info.getter();
  sub_10004841C(v23);
  swift_bridgeObjectRelease();
  uint64_t v24 = self;
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v26 = objc_msgSend(v24, "ams_encryptedAllPlatformsStoreWithIdentifier:", v25);

  swift_beginAccess();
  if (v26) {
    sub_10008BE28();
  }
  else {

  }
  return swift_endAccess();
}

uint64_t sub_10019EA98()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v3 = sub_1000208F0(v2);
  __chkstk_darwin(v3);
  sub_100011D4C();
  sub_100043478(&qword_10022E560);
  uint64_t v4 = type metadata accessor for LogMessage();
  sub_100044798(v4);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v17 = type metadata accessor for UbiquitousKeyValueStoreController();
  v16[0] = v0;
  swift_retain();
  id v5 = (id)AMSLogKey();
  if (v5)
  {
    unint64_t v6 = v5;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    sub_100049788(v16, v17);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    v14[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v14);
    sub_100020E44();
    sub_100051698((uint64_t)&type metadata for String);
    sub_1000423CC((uint64_t)v14);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    sub_100049788(v16, v17);
    uint64_t v8 = swift_getDynamicType();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    v14[0] = v8;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v14);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)v16);
  sub_100020924();
  LogMessage.init(stringLiteral:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v9 = static os_log_type_t.info.getter();
  sub_10004841C(v9);
  swift_bridgeObjectRelease();
  id v10 = [self defaultCenter];
  swift_beginAccess();
  swift_retain();
  id v11 = v10;
  uint64_t v12 = swift_bridgeObjectRetain();
  sub_10019D72C(v12, v11, v1);

  return swift_bridgeObjectRelease();
}

void sub_10019ED70()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];
}

void sub_10019EDD4(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v6 = sub_1000208F0(v5);
  __chkstk_darwin(v6);
  sub_100020658();
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  sub_100020DEC();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_100047480();
  if (qword_10022C590 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_100244188;
  *uint64_t v2 = qword_100244188;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v2, enum case for DispatchPredicate.onQueue(_:), v7);
  id v12 = (id)v11;
  LOBYTE(v11) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v9 + 8))(v2, v7);
  if ((v11 & 1) == 0)
  {
    __break(1u);
LABEL_58:
    swift_once();
LABEL_15:
    uint64_t v27 = static os_log_type_t.debug.getter();
    sub_10004841C(v27);
    goto LABEL_16;
  }
  Notification.object.getter();
  if (!v80)
  {
    sub_1000423CC((uint64_t)v79);
    goto LABEL_11;
  }
  sub_10004D510(0, &qword_10022E5C8);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_11;
  }
  swift_beginAccess();
  id v13 = (id)v81;
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v78 = sub_10019D8B0(v14, v13);
  Swift::String v16 = v15;
  swift_bridgeObjectRelease();
  if (!v16)
  {

LABEL_11:
    sub_100043478(&qword_10022E560);
    uint64_t v24 = type metadata accessor for LogMessage();
    sub_100044798(v24);
    sub_10004222C();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v80 = (void *)type metadata accessor for UbiquitousKeyValueStoreController();
    v79[0] = v3;
    swift_retain();
    if ((id)AMSLogKey())
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_100044224();
      swift_bridgeObjectRetain();
      sub_100049814();
      sub_100044E44();
      sub_100044D18();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_100044FB8(MetatypeMetadata);
      sub_1000423CC((uint64_t)&v81);
      sub_100020E44();
      sub_100051698((uint64_t)&type metadata for String);
      sub_1000423CC((uint64_t)&v81);
      sub_1000208D8();
      sub_10004892C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020ECC();
      sub_100044E44();
      sub_100044D18();
      uint64_t v26 = swift_getMetatypeMetadata();
      sub_100044FB8(v26);
      sub_1000423CC((uint64_t)&v81);
      sub_100020E94();
      sub_10004892C();
    }
    sub_10004377C((uint64_t)v79);
    LogMessage.init(stringLiteral:)();
    if (qword_10022C460 == -1) {
      goto LABEL_15;
    }
    goto LABEL_58;
  }
  uint64_t v77 = v13;

  sub_100043478(&qword_10022E560);
  uint64_t v17 = type metadata accessor for LogMessage();
  sub_100044798(v17);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v80 = (void *)type metadata accessor for UbiquitousKeyValueStoreController();
  v79[0] = v3;
  swift_retain();
  id v18 = (id)AMSLogKey();
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v22 = v21;

    swift_bridgeObjectRetain();
    sub_100049814();
    sub_100044E44();
    sub_100044D18();
    uint64_t v23 = swift_getMetatypeMetadata();
    sub_100044FB8(v23);
    sub_1000423CC((uint64_t)&v81);
    sub_100020E44();
    *((void *)&v82 + 1) = &type metadata for String;
    *(void *)&long long v81 = v20;
    *((void *)&v81 + 1) = v22;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v81);
    sub_1000208D8();
    sub_10004892C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020ECC();
    sub_100044E44();
    sub_100044D18();
    uint64_t v28 = swift_getMetatypeMetadata();
    sub_100044FB8(v28);
    sub_1000423CC((uint64_t)&v81);
    sub_100020E94();
    sub_10004892C();
  }
  sub_10004C11C();
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v29._uint64_t countAndFlagsBits = 0xD000000000000027;
  v29._object = (void *)0x80000001001D8D50;
  LogMessage.StringInterpolation.appendLiteral(_:)(v29);
  sub_100040D74();
  sub_1000423CC((uint64_t)v79);
  v30._uint64_t countAndFlagsBits = 1886413088;
  v30._object = (void *)0xE400000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v30);
  sub_10004892C();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v31 = static os_log_type_t.default.getter();
  sub_10004841C(v31);
  swift_bridgeObjectRelease();
  uint64_t v32 = Notification.userInfo.getter();
  if (!v32)
  {
    long long v81 = 0u;
    long long v82 = 0u;
    goto LABEL_27;
  }
  uint64_t v33 = v32;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)v79, v33, &v81);
  swift_bridgeObjectRelease();
  sub_1000434BC((uint64_t)v79);
  if (!*((void *)&v82 + 1))
  {
LABEL_27:
    sub_1000423CC((uint64_t)&v81);
    goto LABEL_28;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_28:
    uint64_t v36 = sub_1000483B0();
    sub_10004ADAC(v36);
    if ((id)AMSLogKey())
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_100044224();
      swift_bridgeObjectRetain();
      sub_100049814();
      sub_100044E44();
      sub_100044D18();
      uint64_t v37 = swift_getMetatypeMetadata();
      sub_100044FB8(v37);
      sub_1000423CC((uint64_t)&v81);
      sub_100020E44();
      sub_100051698((uint64_t)&type metadata for String);
      sub_1000423CC((uint64_t)&v81);
      sub_1000208D8();
      sub_10004892C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020ECC();
      sub_100044E44();
      sub_100044D18();
      uint64_t v38 = swift_getMetatypeMetadata();
      sub_100044FB8(v38);
      sub_1000423CC((uint64_t)&v81);
      sub_100020E94();
      sub_10004892C();
    }
    sub_10004377C((uint64_t)v79);
    LogMessage.init(stringLiteral:)();
    uint64_t v39 = static os_log_type_t.debug.getter();
    sub_10004841C(v39);

    goto LABEL_16;
  }
  uint64_t v34 = v79[0];
  switch(v79[0])
  {
    case 0:
      *(_OWORD *)(sub_1000483B0() + 16) = xmmword_1001C3120;
      sub_10002132C();
      id v35 = (id)AMSLogKey();
      if (!v35) {
        goto LABEL_43;
      }
      goto LABEL_35;
    case 1:
      *(_OWORD *)(sub_1000483B0() + 16) = xmmword_1001C3120;
      sub_10002132C();
      id v35 = (id)AMSLogKey();
      if (v35)
      {
LABEL_35:
        uint64_t v47 = v35;
        uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v50 = v49;

        swift_bridgeObjectRetain();
        sub_100049814();
        sub_100044E44();
        sub_100044D18();
        uint64_t v51 = swift_getMetatypeMetadata();
        sub_100044FB8(v51);
        sub_1000423CC((uint64_t)&v81);
        sub_100020E44();
        *((void *)&v82 + 1) = &type metadata for String;
        *(void *)&long long v81 = v48;
        *((void *)&v81 + 1) = v50;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)&v81);
        sub_1000208D8();
        sub_10002D4C4();
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_43:
        sub_100020ECC();
        sub_100044E44();
        sub_100044D18();
        uint64_t v65 = swift_getMetatypeMetadata();
        sub_100044FB8(v65);
        sub_1000423CC((uint64_t)&v81);
        sub_100020E94();
        sub_10002D4C4();
      }
      sub_10004377C((uint64_t)v79);
      sub_100020924();
      LogMessage.init(stringLiteral:)();
      uint64_t v66 = static os_log_type_t.debug.getter();
      sub_10004841C(v66);
      swift_bridgeObjectRelease();
      uint64_t v67 = Notification.userInfo.getter();
      if (!v67)
      {
        long long v81 = 0u;
        long long v82 = 0u;
        goto LABEL_50;
      }
      uint64_t v68 = v67;
      *(void *)&long long v81 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *((void *)&v81 + 1) = v69;
      AnyHashable.init<A>(_:)();
      sub_100032918((uint64_t)v79, v68, &v81);
      swift_bridgeObjectRelease();
      sub_1000434BC((uint64_t)v79);
      if (!*((void *)&v82 + 1))
      {
LABEL_50:
        sub_1000423CC((uint64_t)&v81);
        uint64_t v70 = 0;
        goto LABEL_51;
      }
      sub_100043478(&qword_100232940);
      if (swift_dynamicCast()) {
        uint64_t v70 = v79[0];
      }
      else {
        uint64_t v70 = 0;
      }
LABEL_51:
      sub_10019FB64(v78, v70);

LABEL_16:
      swift_bridgeObjectRelease();
      return;
    case 2:
      uint64_t v52 = sub_1000483B0();
      sub_10004ADAC(v52);
      if ((id)AMSLogKey())
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_100044224();
        swift_bridgeObjectRetain();
        sub_100049814();
        sub_100044E44();
        sub_100044D18();
        uint64_t v53 = swift_getMetatypeMetadata();
        sub_100044FB8(v53);
        sub_1000423CC((uint64_t)&v81);
        sub_100020E44();
        *((void *)&v82 + 1) = &type metadata for String;
        *(void *)&long long v81 = a1;
        *((void *)&v81 + 1) = v3;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)&v81);
        sub_1000208D8();
        sub_10004892C();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100020ECC();
        sub_100044E44();
        sub_100044D18();
        uint64_t v71 = swift_getMetatypeMetadata();
        sub_100044FB8(v71);
        sub_1000423CC((uint64_t)&v81);
        sub_100020E94();
        sub_10004892C();
      }
      sub_10004C11C();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v72._object = (void *)0x80000001001D8E00;
      v72._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v72);
      sub_100040D74();
      sub_1000423CC((uint64_t)v79);
      v73._uint64_t countAndFlagsBits = 0x65726F747320;
      v73._object = (void *)0xE600000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v73);
      sub_10004892C();
      uint64_t v74 = static os_log_type_t.error.getter();
      sub_10004841C(v74);
      swift_bridgeObjectRelease();

      return;
    case 3:
      uint64_t v54 = sub_1000483B0();
      sub_10004ADAC(v54);
      id v55 = (id)AMSLogKey();
      if (v55)
      {
        uint64_t v56 = v55;
        uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v59 = v58;

        swift_bridgeObjectRetain();
        sub_100049814();
        sub_100044E44();
        sub_100044D18();
        uint64_t v60 = swift_getMetatypeMetadata();
        sub_100044FB8(v60);
        sub_1000423CC((uint64_t)&v81);
        sub_100020E44();
        *((void *)&v82 + 1) = &type metadata for String;
        *(void *)&long long v81 = v57;
        *((void *)&v81 + 1) = v59;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)&v81);
        sub_1000208D8();
        sub_10004892C();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100020ECC();
        sub_100044E44();
        sub_100044D18();
        uint64_t v75 = swift_getMetatypeMetadata();
        sub_100044FB8(v75);
        sub_1000423CC((uint64_t)&v81);
        sub_100020E94();
        sub_10004892C();
      }
      sub_10004377C((uint64_t)v79);
      LogMessage.init(stringLiteral:)();
      uint64_t v76 = static os_log_type_t.debug.getter();
      sub_10004841C(v76);
      swift_bridgeObjectRelease();
      *(unsigned char *)(v3 + 24) = 0;
      sub_10019DB0C(0, 0);
      goto LABEL_56;
    default:
      uint64_t v40 = sub_1000483B0();
      sub_10004ADAC(v40);
      id v41 = (id)AMSLogKey();
      if (v41)
      {
        uint64_t v42 = v41;
        uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v45 = v44;

        swift_bridgeObjectRetain();
        sub_100049814();
        sub_100044E44();
        sub_100044D18();
        uint64_t v46 = swift_getMetatypeMetadata();
        sub_100044FB8(v46);
        sub_1000423CC((uint64_t)&v81);
        sub_100020E44();
        *((void *)&v82 + 1) = &type metadata for String;
        *(void *)&long long v81 = v43;
        *((void *)&v81 + 1) = v45;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)&v81);
        sub_1000208D8();
        sub_10004892C();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100020ECC();
        sub_100044E44();
        sub_100044D18();
        uint64_t v61 = swift_getMetatypeMetadata();
        sub_100044FB8(v61);
        sub_1000423CC((uint64_t)&v81);
        sub_100020E94();
        sub_10004892C();
      }
      sub_10004C11C();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v62._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
      v62._object = (void *)0x80000001001D8DC0;
      LogMessage.StringInterpolation.appendLiteral(_:)(v62);
      uint64_t v80 = &type metadata for Int;
      v79[0] = v34;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v79);
      v63._uint64_t countAndFlagsBits = 0xD000000000000013;
      v63._object = (void *)0x80000001001D8DE0;
      LogMessage.StringInterpolation.appendLiteral(_:)(v63);
      sub_10004892C();
      uint64_t v64 = static os_log_type_t.debug.getter();
      sub_10004841C(v64);
      swift_bridgeObjectRelease();
LABEL_56:

      return;
  }
}

uint64_t sub_10019FB64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)v2;
  uint64_t v52 = a2;
  uint64_t v55 = a1;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  sub_100020DEC();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for DispatchQoS();
  sub_100020DEC();
  uint64_t v53 = v11;
  __chkstk_darwin(v12);
  sub_10004277C();
  uint64_t v13 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v14 = sub_1000208F0(v13);
  __chkstk_darwin(v14);
  sub_100011D4C();
  uint64_t v15 = type metadata accessor for DispatchPredicate();
  sub_100020DEC();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  uint64_t v20 = (void *)((char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10022C590 != -1) {
    swift_once();
  }
  uint64_t v21 = qword_100244188;
  *uint64_t v20 = qword_100244188;
  (*(void (**)(void *, void, uint64_t))(v17 + 104))(v20, enum case for DispatchPredicate.onQueue(_:), v15);
  id v22 = (id)v21;
  LOBYTE(v21) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v17 + 8))(v20, v15);
  if ((v21 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_8;
  }
  uint64_t v50 = v7;
  uint64_t v51 = v5;
  sub_100043478(&qword_10022E560);
  uint64_t v23 = type metadata accessor for LogMessage();
  sub_100044798(v23);
  uint64_t v24 = swift_allocObject();
  long long v49 = xmmword_1001C3120;
  *(_OWORD *)(v24 + 16) = xmmword_1001C3120;
  uint64_t v58 = (void *)type metadata accessor for UbiquitousKeyValueStoreController();
  aBlock[0] = v2;
  swift_retain();
  id v25 = (id)AMSLogKey();
  uint64_t v4 = &type metadata for String;
  if (v25)
  {
    uint64_t v26 = v25;
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v29 = v28;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    sub_100049788(aBlock, (uint64_t)v58);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v61[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v61);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v61[0] = v27;
    v61[1] = v29;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v61);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    sub_100020E60();
    sub_100049788(aBlock, (uint64_t)v58);
    uint64_t v31 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v61[0] = v31;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v61);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  uint64_t v20 = (void *)0xD000000000000014;
  sub_10004377C((uint64_t)aBlock);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v32._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v32._object = (void *)0x80000001001D8CB0;
  LogMessage.StringInterpolation.appendLiteral(_:)(v32);
  uint64_t v58 = &unk_10020E0E8;
  LOBYTE(aBlock[0]) = v55;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000423CC((uint64_t)aBlock);
  v33._object = (void *)0x80000001001D8CD0;
  v33._uint64_t countAndFlagsBits = 0xD000000000000014;
  LogMessage.StringInterpolation.appendLiteral(_:)(v33);
  LogMessage.init(stringInterpolation:)();
  if (qword_10022C460 != -1) {
    goto LABEL_14;
  }
LABEL_8:
  uint64_t v34 = static os_log_type_t.default.getter();
  sub_10004841C(v34);
  swift_bridgeObjectRelease();
  sub_100043478(&qword_10022D330);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = v49;
  *(void *)(inited + 32) = 0x656372756F73;
  *(void *)(inited + 40) = 0xE600000000000000;
  strcpy((char *)(inited + 48), "amsengagementd");
  *(unsigned char *)(inited + 63) = -18;
  *(void *)(inited + 72) = v4;
  *(void *)(inited + 80) = 0x707954746E657665;
  *(void *)(inited + 120) = v4;
  *(void *)(inited + 88) = 0xE900000000000065;
  *(void *)(inited + 96) = (char *)v20 + 2;
  *(void *)(inited + 104) = 0x80000001001D8CF0;
  v61[0] = Dictionary.init(dictionaryLiteral:)();
  uint64_t v36 = v50;
  uint64_t v37 = v52;
  if (v52)
  {
    uint64_t v58 = (void *)sub_100043478(&qword_100232940);
    aBlock[0] = v37;
    swift_bridgeObjectRetain();
    sub_10003E698((uint64_t)aBlock, 0x4B6465676E616863, 0xEB00000000737965);
  }
  id v38 = [objc_allocWithZone((Class)AMSEngagementEnqueueRequest) init];
  sub_100043478(&qword_100231DE0);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1001C4B80;
  uint64_t v40 = v51;
  uint64_t v41 = v39;
  sub_10004D510(0, &qword_10022EC18);
  *(void *)(v41 + 32) = sub_1000BC5A4();
  aBlock[0] = v41;
  specialized Array._endMutation()();
  sub_1000BD0F4(aBlock[0], v38);
  sub_100043478(&qword_10022D798);
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_1001C3110;
  sub_1000119BC(v61[0]);
  uint64_t v44 = v43;
  swift_bridgeObjectRelease();
  *(void *)(v42 + 32) = v44;
  sub_1000BD07C(v42, v38);
  if (qword_10022C588 != -1) {
    swift_once();
  }
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = v38;
  uint64_t v59 = sub_1001A0A24;
  uint64_t v60 = v45;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10002CD0C;
  uint64_t v58 = &unk_100218710;
  uint64_t v46 = _Block_copy(aBlock);
  id v47 = v38;
  static DispatchQoS.unspecified.getter();
  uint64_t v56 = _swiftEmptyArrayStorage;
  sub_10002352C();
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_1000234D8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v46);

  (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v40);
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v3, v54);
  return swift_release();
}

void sub_1001A0434(uint64_t a1)
{
  sub_10004D510(0, (unint64_t *)&qword_100232020);
  id v2 = sub_100051DF8();
  id v3 = [objc_allocWithZone((Class)AMSEngagement) initWithBag:v2];
}

uint64_t sub_1001A0500(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  sub_100020DEC();
  uint64_t v22 = v5;
  __chkstk_darwin(v6);
  sub_100047480();
  uint64_t v21 = type metadata accessor for DispatchQoS();
  sub_100020DEC();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_10004277C();
  uint64_t v10 = type metadata accessor for Notification();
  sub_100020DEC();
  uint64_t v12 = v11;
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v15);
  if (qword_10022C590 != -1) {
    swift_once();
  }
  v20[1] = qword_100244188;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  unint64_t v16 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v20[2];
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v17 + v16, (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = sub_1001A0988;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CD0C;
  uint64_t aBlock[3] = &unk_1002186C0;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v23 = _swiftEmptyArrayStorage;
  sub_10002352C();
  sub_100043478((uint64_t *)&unk_10022F4C0);
  sub_1000234D8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v1, v4);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v2, v21);
  return swift_release();
}

uint64_t type metadata accessor for UbiquitousKeyValueStoreController()
{
  return self;
}

uint64_t sub_1001A08E4()
{
  uint64_t v1 = type metadata accessor for Notification();
  sub_100020DEC();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 24) & ~v6;
  uint64_t v8 = v7 + *(void *)(v5 + 64);
  uint64_t v9 = v6 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);
  return _swift_deallocObject(v0, v8, v9);
}

void sub_1001A0988()
{
  uint64_t v1 = *(void *)(type metadata accessor for Notification() - 8);
  sub_10019EDD4(v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t sub_1001A09EC()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001A0A24()
{
  sub_1001A0434(*(void *)(v0 + 16));
}

uint64_t sub_1001A0A2C()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001A0A74(void *a1, uint64_t a2)
{
  return sub_10019DC6C(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(BOOL))(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1001A0A80()
{
  swift_release();
  return _swift_deallocObject(v0, 25, 7);
}

void sub_1001A0AB8()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 24) = *(unsigned char *)(v0 + 24);
}

unsigned char *storeEnumTagSinglePayload for UbiquitousKeyValueStoreError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001A0B94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UbiquitousKeyValueStoreError()
{
  return &type metadata for UbiquitousKeyValueStoreError;
}

unint64_t sub_1001A0BD4()
{
  unint64_t result = qword_100234800;
  if (!qword_100234800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234800);
  }
  return result;
}

uint64_t sub_1001A0C38(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v5 = result + 56;
  uint64_t v4 = *(void *)(result + 56);
  uint64_t v19 = a2;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v4;
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  if ((v7 & v4) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v10 | (v3 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v3 << 6))
  {
    uint64_t v15 = *(void *)(v2 + 48) + 40 * i;
    char v16 = *(unsigned char *)(v15 + 32);
    long long v17 = *(_OWORD *)(v15 + 16);
    v20[0] = *(_OWORD *)v15;
    v20[1] = v17;
    char v21 = v16;
    sub_1001AA93C((uint64_t)v20);
    sub_1001A44D8((uint64_t)&v18, (uint64_t)v20);
    swift_bridgeObjectRelease();
    unint64_t result = swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v9) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v3;
    if (!v13)
    {
      int64_t v3 = v12 + 1;
      if (v12 + 1 >= v9) {
        goto LABEL_23;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v3);
      if (!v13)
      {
        int64_t v3 = v12 + 2;
        if (v12 + 2 >= v9) {
          goto LABEL_23;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v3);
        if (!v13)
        {
          int64_t v3 = v12 + 3;
          if (v12 + 3 >= v9) {
            goto LABEL_23;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v3);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v9)
  {
LABEL_23:
    swift_release();
    return v19;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v3 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v3 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v3 >= v9) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v3);
    ++v14;
    if (v13) {
      goto LABEL_20;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1001A0DD0(uint64_t a1, Swift::Int a2)
{
  int64_t v3 = 0;
  v18[2] = a2;
  uint64_t v4 = a1 + 56;
  sub_100046A2C();
  uint64_t v7 = v6 & v5;
  int64_t v9 = (unint64_t)(v8 + 63) >> 6;
  if ((v6 & v5) == 0) {
    goto LABEL_3;
  }
LABEL_2:
  sub_100052720();
  for (unint64_t i = v10 | (v3 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v3 << 6))
  {
    uint64_t v15 = (Swift::Int *)(*(void *)(a1 + 48) + 16 * i);
    Swift::Int v16 = *v15;
    Swift::Int v17 = v15[1];
    swift_bridgeObjectRetain();
    sub_10004A8EC(v18, v16, v17);
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v12 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v12 >= v9) {
      goto LABEL_21;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v12);
    ++v3;
    if (!v13)
    {
      int64_t v3 = v12 + 1;
      if (v12 + 1 >= v9) {
        goto LABEL_21;
      }
      unint64_t v13 = *(void *)(v4 + 8 * v3);
      if (!v13)
      {
        int64_t v3 = v12 + 2;
        if (v12 + 2 >= v9) {
          goto LABEL_21;
        }
        unint64_t v13 = *(void *)(v4 + 8 * v3);
        if (!v13)
        {
          int64_t v3 = v12 + 3;
          if (v12 + 3 >= v9) {
            goto LABEL_21;
          }
          unint64_t v13 = *(void *)(v4 + 8 * v3);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_18:
    uint64_t v7 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v9)
  {
LABEL_21:
    swift_release();
    return;
  }
  unint64_t v13 = *(void *)(v4 + 8 * v14);
  if (v13)
  {
    int64_t v3 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v3 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v3 >= v9) {
      goto LABEL_21;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v3);
    ++v14;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_1001A0F34(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = a2;
  uint64_t result = sub_10005370C(a1, v19);
  uint64_t v3 = v19[0];
  uint64_t v4 = v19[1];
  int64_t v5 = v19[3];
  uint64_t v6 = v20;
  int64_t v7 = (unint64_t)(v19[2] + 64) >> 6;
  if (!v20) {
    goto LABEL_3;
  }
LABEL_2:
  sub_100052720();
  unint64_t v9 = v8 | (v5 << 6);
  while (1)
  {
    int64_t v14 = (Swift::Int *)(*(void *)(v3 + 48) + 16 * v9);
    Swift::Int v15 = *v14;
    Swift::Int v16 = v14[1];
    swift_bridgeObjectRetain();
    sub_10004A8EC(&v17, v15, v16);
    uint64_t result = swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v10 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (v10 >= v7) {
      goto LABEL_21;
    }
    unint64_t v11 = *(void *)(v4 + 8 * v10);
    int64_t v12 = v5 + 1;
    if (!v11)
    {
      int64_t v12 = v5 + 2;
      if (v5 + 2 >= v7) {
        goto LABEL_21;
      }
      unint64_t v11 = *(void *)(v4 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v5 + 3;
        if (v5 + 3 >= v7) {
          goto LABEL_21;
        }
        unint64_t v11 = *(void *)(v4 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v5 + 4;
          if (v5 + 4 >= v7) {
            goto LABEL_21;
          }
          unint64_t v11 = *(void *)(v4 + 8 * v12);
          if (!v11)
          {
            int64_t v12 = v5 + 5;
            if (v5 + 5 >= v7) {
              goto LABEL_21;
            }
            unint64_t v11 = *(void *)(v4 + 8 * v12);
            if (!v11)
            {
              int64_t v13 = v5 + 6;
              while (v13 < v7)
              {
                unint64_t v11 = *(void *)(v4 + 8 * v13++);
                if (v11)
                {
                  int64_t v12 = v13 - 1;
                  goto LABEL_18;
                }
              }
LABEL_21:
              swift_release();
              return v18;
            }
          }
        }
      }
    }
LABEL_18:
    uint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
    int64_t v5 = v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001A1088(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_1001A55AC(a1, (uint64_t)sub_100120C88, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

void sub_1001A1114(uint64_t a1)
{
  uint64_t v2 = Dictionary.init(dictionaryLiteral:)();
  uint64_t v42 = a1 + 56;
  sub_100045FCC();
  unint64_t v5 = v4 & v3;
  int64_t v43 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v44 = a1;
  long long v49 = v53;
  uint64_t v50 = (char *)&v52 + 8;
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  uint64_t v8 = &_swiftEmptySetSingleton;
  if (!v5) {
    goto LABEL_3;
  }
LABEL_2:
  uint64_t v45 = (v5 - 1) & v5;
  uint64_t v46 = v7;
  unint64_t v9 = __clz(__rbit64(v5)) | (v7 << 6);
  while (2)
  {
    uint64_t v18 = (uint64_t *)(*(void *)(v44 + 48) + 24 * v9);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = v18[2];
    uint64_t v47 = v21 + 56;
    sub_100045FCC();
    uint64_t v24 = v23 & v22;
    int64_t v48 = (unint64_t)(v25 + 63) >> 6;
    swift_bridgeObjectRetain();
    uint64_t v51 = v21;
    swift_bridgeObjectRetain();
    int64_t v26 = 0;
    if (v24)
    {
LABEL_19:
      sub_1000362C8();
      goto LABEL_34;
    }
    while (1)
    {
      int64_t v28 = v26 + 1;
      if (__OFADD__(v26, 1))
      {
        __break(1u);
        goto LABEL_40;
      }
      if (v28 >= v48) {
        goto LABEL_36;
      }
      ++v26;
      if (!*(void *)(v47 + 8 * v28))
      {
        int64_t v26 = v28 + 1;
        if (v28 + 1 >= v48) {
          goto LABEL_36;
        }
        if (!*(void *)(v47 + 8 * v26))
        {
          int64_t v26 = v28 + 2;
          if (v28 + 2 >= v48) {
            goto LABEL_36;
          }
          if (!*(void *)(v47 + 8 * v26)) {
            break;
          }
        }
      }
LABEL_33:
      sub_1001AADD0();
      uint64_t v27 = v30 + (v26 << 6);
LABEL_34:
      uint64_t v31 = (long long *)(*(void *)(v51 + 48) + 48 * v27);
      long long v32 = *(long long *)((char *)v31 + 25);
      long long v33 = v31[1];
      long long v52 = *v31;
      v53[0] = v33;
      *(_OWORD *)((char *)v53 + 9) = v32;
      uint64_t v54 = v52;
      sub_100043890((uint64_t)v50, (uint64_t)&v55, &qword_10022CCD8);
      sub_100043890((uint64_t)v49, (uint64_t)v56, &qword_10022D698);
      sub_10008378C((uint64_t)&v54);
      sub_10008378C((uint64_t)&v55);
      sub_10008378C((uint64_t)v56);
      uint64_t v34 = sub_1001A14D8(v20, v19, (uint64_t *)&v52);
      uint64_t v36 = v35;
      uint64_t v38 = v37;
      sub_1000BC204((uint64_t)&v54);
      sub_1000BC204((uint64_t)&v55);
      sub_1000BC204((uint64_t)v56);
      sub_1001A15E4(v20, v19, v34, v36, v38, 3, (uint64_t)v8, v2, v42, v43, v44, v45, v46, v47, v48, (uint64_t)v49, (uint64_t)v50, v51, v52,
        *((void **)&v52 + 1),
        *(uint64_t *)&v53[0],
        *((uint64_t *)&v53[0] + 1),
        *(uint64_t *)&v53[1],
        *((uint64_t *)&v53[1] + 1),
        v54,
        v55,
        v56[0],
        v56[1],
        v56[2],
        v56[3],
        v56[4],
        v56[5],
        v56[6],
        v56[7]);
      uint64_t v8 = v39;
      uint64_t v41 = v40;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v2 = v41;
      if (v24) {
        goto LABEL_19;
      }
    }
    int64_t v29 = v28 + 3;
    if (v29 >= v48)
    {
LABEL_36:
      swift_bridgeObjectRelease();
      swift_release();
      unint64_t v5 = v45;
      uint64_t v7 = v46;
      if (!v45)
      {
LABEL_3:
        if (__OFADD__(v7, 1)) {
          goto LABEL_41;
        }
        sub_100046D30();
        if (v11 == v12) {
          goto LABEL_38;
        }
        if (!*(void *)(v42 + 8 * v10))
        {
          if (v10 + 1 >= v43) {
            goto LABEL_38;
          }
          if (*(void *)(v42 + 8 * (v10 + 1))) {
            goto LABEL_17;
          }
          if (v10 + 2 >= v43)
          {
LABEL_38:
            swift_release();
            sub_10004C258();
            return;
          }
          if (!*(void *)(v42 + 8 * (v10 + 2)))
          {
            sub_100046D30();
            if (v11 == v12) {
              goto LABEL_38;
            }
            if (!*(void *)(v42 + 8 * v13))
            {
              do
              {
                int64_t v14 = v13 + 1;
                if (__OFADD__(v13, 1)) {
                  goto LABEL_42;
                }
                if (v14 >= v43) {
                  goto LABEL_38;
                }
                ++v13;
              }
              while (!*(void *)(v42 + 8 * v14));
            }
          }
        }
LABEL_17:
        sub_10003637C();
        uint64_t v45 = v15;
        uint64_t v46 = v16;
        unint64_t v9 = v17 + (v16 << 6);
        continue;
      }
      goto LABEL_2;
    }
    break;
  }
  if (*(void *)(v47 + 8 * v29))
  {
    int64_t v26 = v29;
    goto LABEL_33;
  }
  while (1)
  {
    int64_t v26 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v26 >= v48) {
      goto LABEL_36;
    }
    ++v29;
    if (*(void *)(v47 + 8 * v26)) {
      goto LABEL_33;
    }
  }
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
}

uint64_t sub_1001A14D8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  sub_100043478(&qword_100234860);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3110;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1001AA720(inited);
  uint64_t v9 = a3[1];
  __int16 v10 = *((_WORD *)a3 + 12);
  uint64_t v11 = a3[4];
  char v12 = *((unsigned char *)a3 + 40);
  sub_100043478(&qword_100234868);
  uint64_t v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_1001C3110;
  *(void *)(v13 + 32) = v8;
  *(void *)(v13 + 40) = v9;
  *(_WORD *)(v13 + 48) = 3;
  *(_WORD *)(v13 + 50) = v10;
  *(void *)(v13 + 56) = v11;
  *(unsigned char *)(v13 + 64) = v12;
  swift_bridgeObjectRetain();
  sub_1001A9ED8(v13);
  swift_bridgeObjectRetain();
  return v6;
}

void sub_1001A15E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  sub_10004A000();
  a33 = v34;
  a34 = v35;
  uint64_t v37 = v36;
  __int16 v39 = v38;
  uint64_t v41 = v40;
  uint64_t v108 = v42;
  uint64_t v44 = v43;
  Swift::Int v46 = v45;
  Swift::Int v48 = v47;
  a22 = v49;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10004A8EC((Swift::Int *)&a20, v48, v46);
  swift_bridgeObjectRelease();
  uint64_t v104 = v44 + 56;
  sub_100046A2C();
  uint64_t v52 = v51 & v50;
  int64_t v105 = (unint64_t)(v53 + 63) >> 6;
  uint64_t v107 = v44;
  swift_bridgeObjectRetain();
  int64_t v54 = 0;
  __int16 v101 = v39;
  uint64_t v106 = v41;
  if (!v52) {
    goto LABEL_3;
  }
LABEL_2:
  sub_10004FD2C();
  uint64_t v109 = v52;
  for (int64_t i = v55 | (v54 << 6); ; int64_t i = v60 + (v54 << 6))
  {
    uint64_t v61 = (uint64_t *)(*(void *)(v107 + 48) + 16 * i);
    uint64_t v63 = *v61;
    uint64_t v62 = v61[1];
    uint64_t v64 = v37[2];
    swift_bridgeObjectRetain();
    if (v64)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v65 = sub_100043F54();
      if (v66)
      {
        uint64_t v67 = (uint64_t *)(v37[7] + 24 * v65);
        uint64_t v68 = *v67;
        uint64_t v69 = v67[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRelease();
        uint64_t v70 = swift_bridgeObjectRetain();
        uint64_t v102 = sub_1001A0C38(v70, v68);
        int64_t v103 = v54;
        if (v69)
        {
          if (v41)
          {
            swift_bridgeObjectRetain();
            uint64_t v71 = swift_bridgeObjectRetain();
            uint64_t v72 = sub_1001A1088(v71, v69);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v69 = v72;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v69 = v41;
        }
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        a20 = v37;
        unint64_t v91 = sub_100043F54();
        uint64_t v93 = v37[2];
        BOOL v94 = (v92 & 1) == 0;
        Swift::Int v95 = v93 + v94;
        if (__OFADD__(v93, v94)) {
          goto LABEL_50;
        }
        unint64_t v96 = v91;
        char v97 = v92;
        sub_100043478(&qword_100234840);
        __int16 v39 = v101;
        if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v95))
        {
          unint64_t v98 = sub_100042ADC(v63, v62);
          if ((v97 & 1) != (v99 & 1)) {
            goto LABEL_52;
          }
          unint64_t v96 = v98;
        }
        uint64_t v84 = a20;
        if (v97)
        {
          uint64_t v100 = a20[7] + 24 * v96;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(void *)uint64_t v100 = v102;
          *(void *)(v100 + 8) = v69;
          *(_WORD *)(v100 + 16) = 3;
        }
        else
        {
          sub_10008D56C(v96, v63, v62, v102, v69, 3, a20);
          swift_bridgeObjectRetain();
        }
        int64_t v54 = v103;
        uint64_t v52 = v109;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v41 = v106;
        goto LABEL_44;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v73 = swift_isUniquelyReferenced_nonNull_native();
    a20 = v37;
    unint64_t v74 = sub_100043F54();
    uint64_t v76 = v37[2];
    BOOL v77 = (v75 & 1) == 0;
    Swift::Int v78 = v76 + v77;
    if (__OFADD__(v76, v77))
    {
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    unint64_t v79 = v74;
    char v80 = v75;
    sub_100043478(&qword_100234840);
    Swift::Bool v81 = _NativeDictionary.ensureUnique(isUnique:capacity:)(v73, v78);
    uint64_t v41 = v106;
    if (v81)
    {
      unint64_t v82 = sub_100042ADC(v63, v62);
      if ((v80 & 1) != (v83 & 1)) {
        goto LABEL_52;
      }
      unint64_t v79 = v82;
    }
    uint64_t v84 = a20;
    if (v80)
    {
      uint64_t v85 = a20[7] + 24 * v79;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)uint64_t v85 = v108;
      *(void *)(v85 + 8) = v106;
      *(_WORD *)(v85 + 16) = v39;
    }
    else
    {
      a20[(v79 >> 6) + 8] |= 1 << v79;
      uint64_t v86 = (uint64_t *)(v84[6] + 16 * v79);
      *uint64_t v86 = v63;
      v86[1] = v62;
      uint64_t v87 = v84[7] + 24 * v79;
      *(void *)uint64_t v87 = v108;
      *(void *)(v87 + 8) = v106;
      *(_WORD *)(v87 + 16) = v39;
      uint64_t v88 = v84[2];
      BOOL v57 = __OFADD__(v88, 1);
      uint64_t v89 = v88 + 1;
      if (v57) {
        goto LABEL_49;
      }
      v84[2] = v89;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v52 = v109;
LABEL_44:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v37 = v84;
    if (v52) {
      goto LABEL_2;
    }
LABEL_3:
    BOOL v57 = __OFADD__(v54++, 1);
    if (v57) {
      goto LABEL_48;
    }
    if (v54 >= v105) {
      goto LABEL_46;
    }
    if (!*(void *)(v104 + 8 * v54)) {
      break;
    }
LABEL_13:
    sub_100042244();
    uint64_t v109 = v59;
  }
  int64_t v58 = v54 + 1;
  if (v54 + 1 >= v105) {
    goto LABEL_46;
  }
  if (*(void *)(v104 + 8 * v58)) {
    goto LABEL_12;
  }
  int64_t v58 = v54 + 2;
  if (v54 + 2 >= v105) {
    goto LABEL_46;
  }
  if (*(void *)(v104 + 8 * v58)) {
    goto LABEL_12;
  }
  int64_t v58 = v54 + 3;
  if (v54 + 3 >= v105)
  {
LABEL_46:
    swift_release();
    sub_100022868();
    return;
  }
  if (*(void *)(v104 + 8 * v58))
  {
LABEL_12:
    int64_t v54 = v58;
    goto LABEL_13;
  }
  while (1)
  {
    int64_t v54 = v58 + 1;
    if (__OFADD__(v58, 1)) {
      break;
    }
    if (v54 >= v105) {
      goto LABEL_46;
    }
    ++v58;
    if (*(void *)(v104 + 8 * v54)) {
      goto LABEL_13;
    }
  }
LABEL_51:
  __break(1u);
LABEL_52:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

void sub_1001A1ADC()
{
  sub_100047408();
  uint64_t v1 = v0;
  uint64_t v2 = Dictionary.init(dictionaryLiteral:)();
  __int16 v39 = v1 + 8;
  sub_100046A2C();
  unint64_t v5 = v4 & v3;
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  uint64_t v40 = v1;
  if (!v5) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v7 = __clz(__rbit64(v5));
  uint64_t v8 = (v5 - 1) & v5;
  uint64_t v42 = v6;
  for (unint64_t i = v7 | (v6 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v10 << 6))
  {
    uint64_t v15 = (uint64_t *)(v1[6] + 16 * i);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    type metadata accessor for JSONEncoder();
    swift_allocObject();
    swift_bridgeObjectRetain();
    JSONEncoder.init()();
    unint64_t v41 = v8;
    uint64_t v43 = v16;
    if (v1[2])
    {
      swift_bridgeObjectRetain();
      unint64_t v18 = sub_100042ADC(v16, v17);
      if (v19)
      {
        uint64_t v20 = *(void *)(v1[7] + 24 * v18);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v20 = 0;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = 0;
    }
    sub_100043478(&qword_100234818);
    sub_1001A438C();
    uint64_t v21 = dispatch thunk of JSONEncoder.encode<A>(_:)();
    unint64_t v23 = v22;
    sub_1001A444C(v20);
    sub_10004EA44(v21, v23);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v44 = (void *)v2;
    unint64_t v25 = sub_100042ADC(v43, v17);
    uint64_t v27 = *(void *)(v2 + 16);
    BOOL v28 = (v26 & 1) == 0;
    Swift::Int v29 = v27 + v28;
    if (__OFADD__(v27, v28))
    {
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    unint64_t v30 = v25;
    char v31 = v26;
    sub_100043478(&qword_100234838);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v29))
    {
      unint64_t v32 = sub_100042ADC(v43, v17);
      if ((v31 & 1) != (v33 & 1)) {
        goto LABEL_50;
      }
      unint64_t v30 = v32;
    }
    uint64_t v2 = (uint64_t)v44;
    if (v31)
    {
      uint64_t v34 = v44[7] + 16 * v30;
      sub_10004B278(*(void *)v34, *(void *)(v34 + 8));
      *(void *)uint64_t v34 = v21;
      *(void *)(v34 + 8) = v23;
    }
    else
    {
      v44[(v30 >> 6) + 8] |= 1 << v30;
      uint64_t v35 = (uint64_t *)(v44[6] + 16 * v30);
      *uint64_t v35 = v43;
      v35[1] = v17;
      uint64_t v36 = (uint64_t *)(v44[7] + 16 * v30);
      *uint64_t v36 = v21;
      v36[1] = v23;
      uint64_t v37 = v44[2];
      BOOL v12 = __OFADD__(v37, 1);
      uint64_t v38 = v37 + 1;
      if (v12) {
        goto LABEL_47;
      }
      void v44[2] = v38;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10004B278(v21, v23);
    swift_release();
    uint64_t v1 = v40;
    unint64_t v5 = v41;
    uint64_t v6 = v42;
    if (v41) {
      goto LABEL_2;
    }
LABEL_3:
    if (__OFADD__(v6, 1)) {
      goto LABEL_48;
    }
    sub_10004FCA8();
    if (v11 == v12) {
      goto LABEL_45;
    }
    unint64_t v13 = v39[v10];
    if (!v13) {
      break;
    }
LABEL_23:
    uint64_t v8 = (v13 - 1) & v13;
    uint64_t v42 = v10;
  }
  sub_10004A550();
  if (v11 == v12) {
    goto LABEL_45;
  }
  sub_10004423C();
  if (v13) {
    goto LABEL_22;
  }
  sub_10004A550();
  if (v11 == v12) {
    goto LABEL_45;
  }
  sub_10004423C();
  if (v13) {
    goto LABEL_22;
  }
  sub_10004A550();
  if (v11 == v12) {
    goto LABEL_45;
  }
  sub_10004423C();
  if (v13) {
    goto LABEL_22;
  }
  sub_10004A550();
  if (v11 == v12) {
    goto LABEL_45;
  }
  sub_10004423C();
  if (v13) {
    goto LABEL_22;
  }
  sub_10004A550();
  if (v11 == v12)
  {
LABEL_45:
    swift_release();
    sub_10004CFCC();
    return;
  }
  sub_10004423C();
  if (v13)
  {
LABEL_22:
    uint64_t v10 = v14;
    goto LABEL_23;
  }
  while (!__OFADD__(v14, 1))
  {
    sub_10004FCA8();
    if (v11 == v12) {
      goto LABEL_45;
    }
    sub_10004D730();
    if (v13) {
      goto LABEL_23;
    }
  }
LABEL_49:
  __break(1u);
LABEL_50:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

void sub_1001A1F60(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return;
  }
  uint64_t v3 = a2;
  sub_100049710();
  if (!v5) {
    return;
  }
  uint64_t v6 = 0;
  uint64_t v57 = v4 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  int64_t v58 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v65 = v3 + 56;
  if ((v8 & *(void *)(v4 + 56)) == 0) {
    goto LABEL_9;
  }
LABEL_8:
  sub_10004A8D8();
  uint64_t v59 = v11;
  uint64_t v60 = v12;
  for (uint64_t i = v13 | (v12 << 6); ; uint64_t i = v20 + (v19 << 6))
  {
    uint64_t v21 = (long long *)(*(void *)(v9 + 48) + 48 * i);
    long long v22 = v21[1];
    long long v69 = *v21;
    *(_OWORD *)(v10 + 16) = v22;
    *(_OWORD *)(v10 + 25) = *(long long *)((char *)v21 + 25);
    long long v23 = v69;
    uint64_t v24 = v70;
    Hasher.init(_seed:)();
    uint64_t v62 = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10006AE0C(v66);
    unint64_t v25 = Hasher._finalize()() & ~(-1 << *(unsigned char *)(v3 + 32));
    if (((*(void *)(v65 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
      goto LABEL_63;
    }
    char v26 = (long long *)(*(void *)(v3 + 48) + 48 * v25);
    long long v27 = *(long long *)((char *)v26 + 25);
    long long v28 = v26[1];
    long long v67 = *v26;
    v68[0] = v28;
    *(_OWORD *)((char *)v68 + 9) = v27;
    uint64_t v75 = v67;
    sub_100043890((uint64_t)&v67 + 8, (uint64_t)v76, &qword_10022CCD8);
    sub_100043890((uint64_t)v68, (uint64_t)v77, &qword_10022D698);
    sub_10008378C((uint64_t)&v75);
    sub_10008378C((uint64_t)v76);
    sub_10008378C((uint64_t)v77);
    char v29 = sub_10006AF44((uint64_t)&v67, (uint64_t)&v69);
    sub_1000BC204((uint64_t)&v75);
    sub_1000BC204((uint64_t)v76);
    sub_1000BC204((uint64_t)v77);
    if ((v29 & 1) == 0)
    {
      sub_100043AA4();
      if ((v30 & 1) == 0)
      {
LABEL_63:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
      int v61 = v71;
      int v56 = v72;
      HIDWORD(v55) = v74;
      uint64_t v54 = v73;
      while (1)
      {
        uint64_t v31 = v3;
        uint64_t v32 = *(void *)(v3 + 48) + 48 * v2;
        uint64_t v33 = *(void *)v32;
        uint64_t v34 = *(void *)(v32 + 8);
        uint64_t v35 = *(void *)(v32 + 16);
        int v36 = *(unsigned __int8 *)(v32 + 24);
        int v37 = *(unsigned __int8 *)(v32 + 25);
        uint64_t v38 = *(void *)(v32 + 32);
        char v39 = *(unsigned char *)(v32 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1001A2710(v33, v23, v40, v41, v42, v43, v44, v45, v53, v54, v55);
        if ((v46 & 1) == 0)
        {
LABEL_38:
          swift_bridgeObjectRelease();
LABEL_39:
          swift_bridgeObjectRelease();
          uint64_t v3 = v31;
LABEL_40:
          swift_bridgeObjectRelease();
          goto LABEL_41;
        }
        if (v34)
        {
          if (!*((void *)&v23 + 1))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v3 = v31;
            goto LABEL_40;
          }
          int v63 = v36;
          swift_bridgeObjectRetain();
          uint64_t v47 = swift_bridgeObjectRetain();
          sub_1001A3210(v47, *((uint64_t *)&v23 + 1));
          char v49 = v48;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v49 & 1) == 0) {
            goto LABEL_38;
          }
        }
        else
        {
          int v63 = v36;
          if (*((void *)&v23 + 1)) {
            goto LABEL_39;
          }
        }
        if (!v35) {
          break;
        }
        if (!v62) {
          goto LABEL_38;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1001A3B6C();
        char v64 = v50;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        uint64_t v3 = v31;
        if (v64) {
          goto LABEL_45;
        }
LABEL_41:
        sub_100043AA4();
        if ((v51 & 1) == 0) {
          goto LABEL_63;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = v31;
      if (v62) {
        goto LABEL_41;
      }
LABEL_45:
      if (v63 == 2)
      {
        if (v61 != 2) {
          goto LABEL_41;
        }
      }
      else if (v61 == 2 || ((((v63 & 1) == 0) ^ v61) & 1) == 0)
      {
        goto LABEL_41;
      }
      if (v37 == 2)
      {
        if (v56 != 2) {
          goto LABEL_41;
        }
      }
      else if (v56 == 2 || ((((v37 & 1) == 0) ^ v56) & 1) == 0)
      {
        goto LABEL_41;
      }
      if (v39)
      {
        if ((v55 & 0x100000000) != 0) {
          goto LABEL_24;
        }
      }
      else
      {
        char v52 = BYTE4(v55);
        if (v38 != v54) {
          char v52 = 1;
        }
        if ((v52 & 1) == 0) {
          goto LABEL_24;
        }
      }
      goto LABEL_41;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v60;
    if (v59) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v15 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_65;
    }
    if (v15 >= v58) {
      return;
    }
    if (!*(void *)(v57 + 8 * v15))
    {
      if (v6 + 2 >= v58) {
        return;
      }
      if (!*(void *)(v57 + 8 * (v6 + 2)))
      {
        if (v6 + 3 >= v58) {
          return;
        }
        if (!*(void *)(v57 + 8 * (v6 + 3)))
        {
          uint64_t v16 = v6 + 4;
          if (v6 + 4 >= v58) {
            return;
          }
          if (!*(void *)(v57 + 8 * v16)) {
            break;
          }
        }
      }
    }
LABEL_21:
    sub_100042244();
    uint64_t v59 = v18;
    uint64_t v60 = v19;
  }
  while (1)
  {
    int64_t v17 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v17 >= v58) {
      return;
    }
    ++v16;
    if (*(void *)(v57 + 8 * v17)) {
      goto LABEL_21;
    }
  }
LABEL_65:
  __break(1u);
}

void sub_1001A24A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  sub_10004A000();
  a33 = v35;
  a34 = v37;
  if (v38 != v36 && (uint64_t v39 = v36, sub_100049710(), v70))
  {
    uint64_t v74 = v40 + 56;
    sub_100035D98();
    uint64_t v44 = v39 + 56;
    if ((v43 & v42) == 0) {
      goto LABEL_6;
    }
LABEL_5:
    sub_10004A8D8();
    uint64_t v75 = v46;
    uint64_t v76 = v47;
    for (uint64_t i = v48 | (v47 << 6); ; uint64_t i = v60 + (v59 << 6))
    {
      int v61 = (uint64_t *)(*(void *)(v45 + 48) + 24 * i);
      uint64_t v63 = *v61;
      uint64_t v62 = v61[1];
      uint64_t v64 = v61[2];
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_10005E404((uint64_t)&a14, v64);
      swift_bridgeObjectRelease();
      Swift::Int v65 = Hasher._finalize()();
      uint64_t v66 = v34 << *(unsigned char *)(v39 + 32);
      unint64_t v67 = v65 & ~v66;
      if (((*(void *)(v44 + ((v67 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v67) & 1) == 0)
      {
LABEL_37:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_38;
      }
      uint64_t v68 = ~v66;
      while (1)
      {
        long long v69 = (void *)(*(void *)(v39 + 48) + 24 * v67);
        BOOL v70 = *v69 == v63 && v69[1] == v62;
        if (v70 || (sub_1001AAE04() & 1) != 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v71 = swift_bridgeObjectRetain();
          sub_1001A1F60(v71, v64);
          char v73 = v72;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v73) {
            break;
          }
        }
        unint64_t v67 = (v67 + 1) & v68;
        if (((*(void *)(v44 + ((v67 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v67) & 1) == 0) {
          goto LABEL_37;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v34 = -1;
      uint64_t v41 = v76;
      if (v75) {
        goto LABEL_5;
      }
LABEL_6:
      if (__OFADD__(v41, 1))
      {
        __break(1u);
        goto LABEL_40;
      }
      sub_10004A550();
      if (v50 == v51) {
        goto LABEL_38;
      }
      sub_10004423C();
      if (!v52)
      {
        sub_10004FCA8();
        if (v50 == v51) {
          goto LABEL_38;
        }
        if (!*(void *)(v74 + 8 * v53))
        {
          sub_10004FCA8();
          if (v50 == v51) {
            goto LABEL_38;
          }
          if (!*(void *)(v74 + 8 * v54))
          {
            sub_10004A550();
            if (v50 == v51) {
              goto LABEL_38;
            }
            sub_10004423C();
            if (!v56) {
              break;
            }
          }
        }
      }
LABEL_23:
      sub_100042244();
      uint64_t v75 = v58;
      uint64_t v76 = v59;
    }
    while (!__OFADD__(v55, 1))
    {
      sub_10004FCA8();
      if (v50 == v51) {
        goto LABEL_38;
      }
      sub_10004D730();
      if (v57) {
        goto LABEL_23;
      }
    }
LABEL_40:
    __break(1u);
  }
  else
  {
LABEL_38:
    sub_100022868();
  }
}

void sub_1001A2710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  sub_100047408();
  if (v16 != v15 && (uint64_t v17 = v15, sub_100049710(), v29))
  {
    sub_1000483D8();
    if (!v14) {
      goto LABEL_6;
    }
LABEL_5:
    sub_100041108();
    while (1)
    {
      sub_10004A7B4();
      swift_bridgeObjectRetain_n();
      sub_100052544();
      swift_bridgeObjectRelease();
      Hasher._finalize()();
      sub_1000516B4();
      if ((v26 & 1) == 0) {
        goto LABEL_41;
      }
      uint64_t v27 = *(void *)(v17 + 48);
      sub_100049F2C(v27 + 16 * v11);
      BOOL v29 = v29 && v28 == v12;
      if (!v29 && (sub_10004B638() & 1) == 0)
      {
        uint64_t v30 = ~v13;
        for (uint64_t i = v11 + 1; ; uint64_t i = v13 + 1)
        {
          uint64_t v13 = i & v30;
          sub_1000489A0();
          if ((v32 & 1) == 0) {
            break;
          }
          sub_100049F2C(v27 + 16 * v13);
          BOOL v34 = v29 && v33 == v12;
          if (v34 || (sub_10004B638() & 1) != 0) {
            goto LABEL_30;
          }
        }
LABEL_41:
        swift_bridgeObjectRelease();
        goto LABEL_42;
      }
LABEL_30:
      swift_bridgeObjectRelease();
      uint64_t v18 = a11;
      if (v14) {
        goto LABEL_5;
      }
LABEL_6:
      if (__OFADD__(v18, 1))
      {
        __break(1u);
        goto LABEL_44;
      }
      sub_100024554();
      if (v20 == v21) {
        goto LABEL_42;
      }
      if (!*(void *)(a9 + 8 * v19))
      {
        sub_10004778C();
        if (v20 == v21) {
          goto LABEL_42;
        }
        sub_10003BE0C();
        if (!v22)
        {
          sub_10004778C();
          if (v20 == v21) {
            goto LABEL_42;
          }
          sub_10003BE0C();
          if (!v23)
          {
            sub_100024554();
            if (v20 == v21) {
              goto LABEL_42;
            }
            if (!*(void *)(a9 + 8 * v24)) {
              break;
            }
          }
        }
      }
LABEL_23:
      sub_10004A440();
    }
    while (!__OFADD__(v24, 1))
    {
      sub_10004778C();
      if (v20 == v21) {
        goto LABEL_42;
      }
      sub_10004D730();
      if (v25) {
        goto LABEL_23;
      }
    }
LABEL_44:
    __break(1u);
  }
  else
  {
LABEL_42:
    sub_10004CFCC();
  }
}

void sub_1001A2898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  sub_100047408();
  if (v16 != v15 && (uint64_t v17 = v15, sub_100049710(), v29))
  {
    sub_1000483D8();
    if (!v14) {
      goto LABEL_6;
    }
LABEL_5:
    sub_100041108();
    while (1)
    {
      sub_10004A7B4();
      swift_bridgeObjectRetain();
      sub_100052544();
      Hasher._finalize()();
      sub_1000516B4();
      if ((v26 & 1) == 0) {
        goto LABEL_41;
      }
      uint64_t v27 = *(void *)(v17 + 48);
      sub_100049F2C(v27 + 16 * v11);
      BOOL v29 = v29 && v28 == v12;
      if (!v29 && (sub_10004B638() & 1) == 0)
      {
        uint64_t v30 = ~v13;
        for (uint64_t i = v11 + 1; ; uint64_t i = v13 + 1)
        {
          uint64_t v13 = i & v30;
          sub_1000489A0();
          if ((v32 & 1) == 0) {
            break;
          }
          sub_100049F2C(v27 + 16 * v13);
          BOOL v34 = v29 && v33 == v12;
          if (v34 || (sub_10004B638() & 1) != 0) {
            goto LABEL_30;
          }
        }
LABEL_41:
        swift_bridgeObjectRelease();
        goto LABEL_42;
      }
LABEL_30:
      swift_bridgeObjectRelease();
      uint64_t v18 = a11;
      if (v14) {
        goto LABEL_5;
      }
LABEL_6:
      if (__OFADD__(v18, 1))
      {
        __break(1u);
        goto LABEL_44;
      }
      sub_100024554();
      if (v20 == v21) {
        goto LABEL_42;
      }
      if (!*(void *)(a9 + 8 * v19))
      {
        sub_10004778C();
        if (v20 == v21) {
          goto LABEL_42;
        }
        sub_10003BE0C();
        if (!v22)
        {
          sub_10004778C();
          if (v20 == v21) {
            goto LABEL_42;
          }
          sub_10003BE0C();
          if (!v23)
          {
            sub_100024554();
            if (v20 == v21) {
              goto LABEL_42;
            }
            if (!*(void *)(a9 + 8 * v24)) {
              break;
            }
          }
        }
      }
LABEL_23:
      sub_10004A440();
    }
    while (!__OFADD__(v24, 1))
    {
      sub_10004778C();
      if (v20 == v21) {
        goto LABEL_42;
      }
      sub_10004D730();
      if (v25) {
        goto LABEL_23;
      }
    }
LABEL_44:
    __break(1u);
  }
  else
  {
LABEL_42:
    sub_10004CFCC();
  }
}

void sub_1001A2A14(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return;
  }
  uint64_t v3 = a2;
  sub_100049710();
  if (!v52) {
    return;
  }
  sub_100035D98();
  unint64_t v9 = v8 & v7;
  int64_t v11 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v12 = v3 + 56;
  int64_t v81 = v11;
  uint64_t v82 = v5;
  if (v9)
  {
LABEL_5:
    uint64_t v78 = (v9 - 1) & v9;
    uint64_t v79 = v6;
    unint64_t v13 = __clz(__rbit64(v9)) | (v6 << 6);
  }
  else
  {
LABEL_6:
    int64_t v14 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_124;
    }
    if (v14 >= v11) {
      return;
    }
    if (!*(void *)(v5 + 8 * v14))
    {
      if (v6 + 2 >= v11) {
        return;
      }
      if (!*(void *)(v5 + 8 * (v6 + 2)))
      {
        if (v6 + 3 >= v11) {
          return;
        }
        if (!*(void *)(v5 + 8 * (v6 + 3)))
        {
          if (v6 + 4 >= v11) {
            return;
          }
          if (!*(void *)(v5 + 8 * (v6 + 4)))
          {
            uint64_t v15 = v6 + 5;
            if (v6 + 5 >= v11) {
              return;
            }
            if (!*(void *)(v5 + 8 * v15))
            {
              do
              {
                int64_t v16 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_125;
                }
                if (v16 >= v11) {
                  return;
                }
                ++v15;
              }
              while (!*(void *)(v5 + 8 * v16));
            }
          }
        }
      }
    }
    sub_10003637C();
    uint64_t v78 = v17;
    uint64_t v79 = v18;
    unint64_t v13 = v19 + (v18 << 6);
  }
  uint64_t v80 = v4;
  uint64_t v20 = *(void *)(v4 + 48) + 40 * v13;
  char v21 = *(unsigned char *)(v20 + 32);
  long long v22 = *(_OWORD *)(v20 + 16);
  long long v105 = *(_OWORD *)v20;
  long long v106 = v22;
  char v107 = v21;
  Hasher.init(_seed:)();
  sub_1001AA93C((uint64_t)&v105);
  sub_100058B84();
  Swift::Int v23 = Hasher._finalize()();
  uint64_t v24 = v2 << *(unsigned char *)(v3 + 32);
  unint64_t v25 = v23 & ~v24;
  if (((*(void *)(v12 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
  {
LABEL_122:
    sub_1001AA970((uint64_t)&v105);
    return;
  }
  uint64_t v26 = ~v24;
  uint64_t v27 = v105;
  uint64_t v83 = v12;
  uint64_t v84 = v3;
  uint64_t v88 = v105;
  uint64_t v89 = ~v24;
  while (1)
  {
    uint64_t v28 = *(void *)(v3 + 48) + 40 * v25;
    uint64_t v29 = *(void *)(v28 + 8);
    __int16 v104 = *(_WORD *)(v28 + 16);
    int v102 = *(unsigned __int8 *)(v28 + 19);
    int v103 = *(unsigned __int8 *)(v28 + 18);
    uint64_t v30 = *(void *)(v28 + 24);
    char v31 = *(unsigned char *)(v28 + 32);
    swift_bridgeObjectRetain();
    uint64_t v32 = swift_bridgeObjectRetain();
    sub_1001A2710(v32, v27, v33, v34, v35, v36, v37, v38, v77, v78, v79);
    if ((v39 & 1) == 0)
    {
LABEL_75:
      swift_bridgeObjectRelease();
LABEL_76:
      swift_bridgeObjectRelease();
      goto LABEL_77;
    }
    char v101 = v31;
    uint64_t v40 = *((void *)&v105 + 1);
    if (!v29)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __int16 v74 = v104;
      if (v40) {
        goto LABEL_77;
      }
      goto LABEL_83;
    }
    if (!*((void *)&v105 + 1)) {
      goto LABEL_75;
    }
    uint64_t v41 = *(void *)(v29 + 16);
    if (v41 != *(void *)(*((void *)&v105 + 1) + 16)) {
      goto LABEL_75;
    }
    if (v41 && v29 != *((void *)&v105 + 1)) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_82:
    __int16 v74 = v104;
LABEL_83:
    if (v74 == 3)
    {
      if (v106 != 3) {
        goto LABEL_77;
      }
    }
    else
    {
      if (v106 == 3) {
        goto LABEL_77;
      }
      if (v74 == 2)
      {
        if (v106 != 2) {
          goto LABEL_77;
        }
      }
      else if (v106 == 2 || ((((v74 & 1) == 0) ^ (unsigned __int16)v106) & 1) == 0)
      {
        goto LABEL_77;
      }
      int v75 = BYTE1(v106);
      if ((v74 & 0xFF00) == 0x200)
      {
        if (v75 != 2) {
          goto LABEL_77;
        }
      }
      else if (v75 == 2 || ((((v74 & 0x100) == 0) ^ ((unsigned __int16)(v106 & 0x100) >> 8)) & 1) == 0)
      {
        goto LABEL_77;
      }
    }
    if (v103 == 2)
    {
      if (BYTE2(v106) != 2) {
        goto LABEL_77;
      }
    }
    else if (BYTE2(v106) == 2 || ((((v103 & 1) == 0) ^ BYTE2(v106)) & 1) == 0)
    {
      goto LABEL_77;
    }
    if (v102 == 2)
    {
      if (BYTE3(v106) != 2) {
        goto LABEL_77;
      }
    }
    else if (BYTE3(v106) == 2 || ((((v102 & 1) == 0) ^ BYTE3(v106)) & 1) == 0)
    {
      goto LABEL_77;
    }
    char v76 = v107;
    if (v101)
    {
      if (v107) {
        goto LABEL_119;
      }
    }
    else
    {
      if (v30 != *((void *)&v106 + 1)) {
        char v76 = 1;
      }
      if ((v76 & 1) == 0)
      {
LABEL_119:
        sub_1001AA970((uint64_t)&v105);
        uint64_t v4 = v80;
        int64_t v11 = v81;
        uint64_t v5 = v82;
        uint64_t v2 = -1;
        unint64_t v9 = v78;
        uint64_t v6 = v79;
        if (v78) {
          goto LABEL_5;
        }
        goto LABEL_6;
      }
    }
LABEL_77:
    unint64_t v25 = (v25 + 1) & v26;
    if (((*(void *)(v12 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
      goto LABEL_122;
    }
  }
  uint64_t v86 = *(void *)(v29 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v42 = 0;
  unint64_t v43 = 0;
  uint64_t v87 = v30;
  uint64_t v90 = v40;
  while (v43 < *(void *)(v40 + 16))
  {
    uint64_t v44 = *(void *)(v29 + v42 + 40);
    uint64_t v100 = *(void *)(v29 + v42 + 48);
    uint64_t v45 = *(void *)(v29 + v42 + 64);
    int v46 = *(unsigned __int8 *)(v29 + v42 + 73);
    int v94 = *(unsigned __int8 *)(v29 + v42 + 74);
    uint64_t v92 = *(void *)(v29 + v42 + 56);
    uint64_t v93 = v42;
    uint64_t v47 = v40 + v42;
    uint64_t v49 = *(void *)(v40 + v42 + 40);
    uint64_t v48 = *(void *)(v47 + 48);
    uint64_t v50 = *(void *)(v47 + 64);
    int v51 = *(unsigned __int8 *)(v47 + 73);
    int v98 = *(unsigned __int8 *)(v47 + 74);
    int v99 = *(unsigned __int8 *)(v29 + v42 + 72);
    int v97 = *(unsigned __int8 *)(v47 + 72);
    uint64_t v91 = *(void *)(v47 + 56);
    if (v44)
    {
      if (!v49
        || (*(void *)(v29 + v42 + 32) == *(void *)(v47 + 32) ? (BOOL v52 = v44 == v49) : (BOOL v52 = 0),
            !v52
         && (v85 = *(void *)(v47 + 64), v53 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t v50 = v85, (v53 & 1) == 0)))
      {
LABEL_53:
        swift_bridgeObjectRelease();
        goto LABEL_117;
      }
    }
    else if (v49)
    {
      goto LABEL_53;
    }
    unint64_t v95 = v43;
    int v96 = v51;
    if (v100)
    {
      if (!v48) {
        goto LABEL_53;
      }
      uint64_t v54 = v50;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1001A3DA0(v100, v48, v55, v56, v57, v58, v59, v60, v77, v78);
      char v62 = v61;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v62 & 1) == 0)
      {
LABEL_116:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_117:
        swift_bridgeObjectRelease();
        uint64_t v27 = v88;
        uint64_t v26 = v89;
LABEL_118:
        swift_bridgeObjectRelease();
        uint64_t v12 = v83;
        uint64_t v3 = v84;
        goto LABEL_76;
      }
    }
    else
    {
      if (v48) {
        goto LABEL_53;
      }
      uint64_t v54 = v50;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v40 = v90;
    if (!v45)
    {
      if (v54) {
        goto LABEL_116;
      }
      swift_bridgeObjectRelease_n();
      goto LABEL_57;
    }
    if (!v54) {
      goto LABEL_116;
    }
    if (v92 == v91 && v45 == v54)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_57:
      int v65 = v96;
      int v66 = v46;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_58;
    }
    char v64 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v65 = v96;
    int v66 = v46;
    if ((v64 & 1) == 0) {
      goto LABEL_53;
    }
LABEL_58:
    if (v99 == 2)
    {
      int v67 = v98;
      uint64_t v27 = v88;
      uint64_t v26 = v89;
      uint64_t v68 = v86;
      uint64_t v30 = v87;
      unint64_t v69 = v95;
      if (v97 != 2) {
        goto LABEL_102;
      }
    }
    else
    {
      uint64_t v27 = v88;
      uint64_t v26 = v89;
      uint64_t v30 = v87;
      unint64_t v69 = v95;
      if (v97 == 2 || (sub_1001AADC4(), ((v70 ^ v71) & 1) == 0))
      {
LABEL_102:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_118;
      }
    }
    if (v66 == 2)
    {
      if (v65 != 2) {
        goto LABEL_102;
      }
    }
    else if (v65 == 2 || ((((v66 & 1) == 0) ^ v65) & 1) == 0)
    {
      goto LABEL_102;
    }
    if (v94 == 2)
    {
      if (v67 != 2) {
        goto LABEL_102;
      }
    }
    else
    {
      if (v67 == 2) {
        goto LABEL_102;
      }
      sub_1001AADC4();
      if (((v72 ^ v73) & 1) == 0) {
        goto LABEL_102;
      }
    }
    unint64_t v43 = v69 + 1;
    uint64_t v42 = v93 + 48;
    if (v68 == v43)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v12 = v83;
      uint64_t v3 = v84;
      goto LABEL_82;
    }
  }
  __break(1u);
LABEL_124:
  __break(1u);
LABEL_125:
  __break(1u);
}

void sub_1001A3210(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16) || !v2 || a1 == a2) {
    return;
  }
  uint64_t v3 = (unsigned __int8 *)(a1 + 74);
  for (uint64_t i = (unsigned __int8 *)(a2 + 74); ; i += 48)
  {
    uint64_t v5 = *(void *)(v3 - 34);
    uint64_t v35 = *(void *)(v3 - 26);
    uint64_t v6 = *(void *)(v3 - 10);
    uint64_t v7 = *(void *)(i - 34);
    uint64_t v8 = *(void *)(i - 26);
    uint64_t v9 = *(void *)(i - 10);
    int v10 = *i;
    int v31 = *(v3 - 1);
    int v32 = *v3;
    int v30 = *(i - 1);
    int v33 = *(i - 2);
    int v34 = *(v3 - 2);
    uint64_t v27 = *(void *)(i - 18);
    uint64_t v28 = *(void *)(v3 - 18);
    if (v5)
    {
      if (!v7) {
        return;
      }
      BOOL v11 = *(void *)(v3 - 42) == *(void *)(i - 42) && v5 == v7;
      if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        return;
      }
    }
    else if (v7)
    {
      return;
    }
    int v29 = v10;
    if (v35) {
      break;
    }
    if (v8) {
      return;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v6) {
      goto LABEL_27;
    }
LABEL_18:
    if (!v9) {
      goto LABEL_49;
    }
    if (v28 == v27 && v6 == v9)
    {
      swift_bridgeObjectRelease();
LABEL_30:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0) {
      return;
    }
LABEL_31:
    if (v34 == 2)
    {
      int v22 = v32;
      int v23 = v29;
      if (v33 != 2) {
        return;
      }
    }
    else
    {
      sub_1001AADC4();
      if (v33 == 2) {
        return;
      }
      int v23 = v29;
      int v22 = v32;
      if (((v24 ^ v33) & 1) == 0) {
        return;
      }
    }
    if (v31 == 2)
    {
      if (v30 != 2) {
        return;
      }
    }
    else
    {
      sub_1001AADC4();
      if (v30 == 2 || ((v25 ^ v30) & 1) == 0) {
        return;
      }
    }
    if (v22 == 2)
    {
      if (v23 != 2) {
        return;
      }
    }
    else if (v23 == 2 || ((((v22 & 1) == 0) ^ v23) & 1) == 0)
    {
      return;
    }
    v3 += 48;
    if (!--v2) {
      return;
    }
  }
  if (!v8) {
    return;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001A3DA0(v35, v8, v12, v13, v14, v15, v16, v17, v26, v27);
  char v19 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v19 & 1) == 0)
  {
LABEL_49:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_52;
  }
  if (v6) {
    goto LABEL_18;
  }
LABEL_27:
  swift_bridgeObjectRelease();
  if (!v9) {
    goto LABEL_30;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_52:
  swift_bridgeObjectRelease();
}

uint64_t sub_1001A35A8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v5 != v6) {
    return 0;
  }
  if (!v5) {
    return 1;
  }
  uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0) {
    uint64_t v7 = a1;
  }
  if (v4) {
    uint64_t v8 = v7;
  }
  uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v10 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v10 = v9;
  }
  if (v8 == v10) {
    return 1;
  }
  if (v5 < 0)
  {
LABEL_41:
    __break(1u);
  }
  else
  {
    sub_1000BA1D0(0, (a1 & 0xC000000000000001) == 0, a1);
    unint64_t v25 = a1 & 0xC000000000000001;
    if ((a1 & 0xC000000000000001) == 0)
    {
      id v11 = *(id *)(a1 + 32);
      goto LABEL_19;
    }
  }
  id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_19:
  uint64_t v12 = v11;
  sub_1000BA1D0(0, (a2 & 0xC000000000000001) == 0, a2);
  if ((a2 & 0xC000000000000001) != 0) {
    id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v13 = *(id *)(a2 + 32);
  }
  uint64_t v14 = v13;
  sub_10004D510(0, (unint64_t *)&qword_10022D3D8);
  char v15 = static NSObject.== infix(_:_:)();

  if ((v15 & 1) == 0) {
    return 0;
  }
  uint64_t v16 = 1 - v5;
  uint64_t v17 = 5;
  do
  {
    uint64_t v5 = v16 + v17 == 5;
    if (v16 + v17 == 5) {
      break;
    }
    unint64_t v18 = v17 - 4;
    if (v25)
    {
      id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v18 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
      id v19 = *(id *)(a1 + 8 * v17);
    }
    uint64_t v20 = v19;
    if ((a2 & 0xC000000000000001) != 0)
    {
      id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v18 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_40;
      }
      id v21 = *(id *)(a2 + 8 * v17);
    }
    int v22 = v21;
    char v23 = static NSObject.== infix(_:_:)();

    ++v17;
  }
  while ((v23 & 1) != 0);
  return v5;
}

#error "1001A3938: call analysis failed (funcsize=92)"

void sub_1001A3998()
{
  sub_1000209F4();
  sub_100049710();
  if (v3 && v2 && v0 != v1 && *(unsigned __int8 *)(v0 + 32) == *(unsigned __int8 *)(v1 + 32))
  {
    uint64_t v4 = v0 + 56;
    uint64_t v5 = (unsigned __int8 *)(v1 + 64);
    for (uint64_t i = v2 - 1; ; --i)
    {
      int v7 = *(v5 - 16);
      char v8 = *(unsigned char *)(v4 - 8);
      uint64_t v9 = *(void *)(v4 - 16);
      uint64_t v10 = *((void *)v5 - 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v8)
      {
        if (!v7) {
          goto LABEL_20;
        }
      }
      else
      {
        if (v9 == v10) {
          char v11 = v7;
        }
        else {
          char v11 = 1;
        }
        if (v11)
        {
LABEL_20:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        }
      }
      sub_1001A3F00();
      char v13 = v12;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0 || !i || *(unsigned __int8 *)(v4 + 8) != *v5) {
        break;
      }
      v5 += 32;
      v4 += 32;
    }
  }
  sub_100020FDC();
}

uint64_t sub_1001A3A9C(void *a1, void *a2)
{
  unint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t result = a1[4];
  if (result != a2[4] || a1[5] != a2[5])
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = 0;
    if ((v7 & 1) == 0) {
      return result;
    }
  }
  if (v2 == 1) {
    return 1;
  }
  char v8 = a1 + 7;
  uint64_t v9 = a2 + 7;
  unint64_t v10 = 1;
  while (v10 < v2)
  {
    uint64_t result = *(v8 - 1);
    if (result != *(v9 - 1) || *v8 != *v9)
    {
      uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      if ((result & 1) == 0) {
        return 0;
      }
    }
    ++v10;
    v8 += 2;
    v9 += 2;
    if (v2 == v10) {
      return 1;
    }
  }
  __break(1u);
  return result;
}

void sub_1001A3B6C()
{
  sub_100048C48();
  if (v0 == v1 || (v2 = v1, uint64_t v3 = v0, sub_100049710(), !v26))
  {
LABEL_52:
    sub_100044F80();
    return;
  }
  int64_t v4 = 0;
  uint64_t v5 = v3 + 64;
  sub_100046A2C();
  uint64_t v8 = v7 & v6;
  int64_t v32 = (unint64_t)(v9 + 63) >> 6;
  if ((v7 & v6) == 0) {
    goto LABEL_6;
  }
LABEL_5:
  sub_1000533F0();
  for (int64_t i = v10 | (v4 << 6); ; int64_t i = v16 + (v4 << 6))
  {
    uint64_t v17 = (uint64_t *)(*(void *)(v3 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = *(void **)(*(void *)(v3 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_100042ADC(v18, v19);
    char v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0 || (unsigned __int8 v24 = *(void **)(*(void *)(v2 + 56) + 8 * v21), v25 = v24[2], v25 != v20[2]))
    {
LABEL_51:
      swift_bridgeObjectRelease();
      goto LABEL_52;
    }
    if (v25) {
      BOOL v26 = v24 == v20;
    }
    else {
      BOOL v26 = 1;
    }
    if (!v26)
    {
      BOOL v27 = v24[4] == v20[4] && v24[5] == v20[5];
      if (!v27 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        goto LABEL_51;
      }
      if (v25 != 1)
      {
        BOOL v28 = v24[6] == v20[6] && v24[7] == v20[7];
        if (!v28 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
          goto LABEL_51;
        }
        if (v25 != 2)
        {
          uint64_t v29 = 0;
          unint64_t v30 = 2;
          while (v30 < v25)
          {
            BOOL v31 = v24[v29 + 8] == v20[v29 + 8] && v24[v29 + 9] == v20[v29 + 9];
            if (!v31 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
              goto LABEL_51;
            }
            ++v30;
            v29 += 2;
            if (v25 == v30) {
              goto LABEL_48;
            }
          }
          __break(1u);
LABEL_54:
          __break(1u);
          goto LABEL_55;
        }
      }
    }
LABEL_48:
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v4, 1)) {
      goto LABEL_54;
    }
    sub_100024554();
    if (v13 == v14) {
      goto LABEL_52;
    }
    int64_t v4 = v12;
    if (!*(void *)(v5 + 8 * v12))
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v32) {
        goto LABEL_52;
      }
      if (!*(void *)(v5 + 8 * v4))
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v32) {
          goto LABEL_52;
        }
        if (!*(void *)(v5 + 8 * v4)) {
          break;
        }
      }
    }
LABEL_21:
    sub_1000361DC();
  }
  sub_100024554();
  if (v13 == v14) {
    goto LABEL_52;
  }
  if (*(void *)(v5 + 8 * v15))
  {
    int64_t v4 = v15;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v32) {
      goto LABEL_52;
    }
    ++v15;
    if (*(void *)(v5 + 8 * v4)) {
      goto LABEL_21;
    }
  }
LABEL_55:
  __break(1u);
}

void sub_1001A3DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_100048C48();
  if (v16 == v17 || (sub_100049710(), !v27))
  {
LABEL_33:
    sub_100044F80();
    return;
  }
  sub_100044D50();
  while (1)
  {
    if (v14)
    {
      sub_10004C140();
      goto LABEL_23;
    }
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    sub_100024554();
    if (v19 == v20) {
      goto LABEL_33;
    }
    uint64_t v15 = v18;
    if (!*(void *)(v13 + 8 * v18))
    {
      uint64_t v15 = v18 + 1;
      if (v18 + 1 >= a10) {
        goto LABEL_33;
      }
      if (!*(void *)(v13 + 8 * v15))
      {
        uint64_t v15 = v18 + 2;
        if (v18 + 2 >= a10) {
          goto LABEL_33;
        }
        if (!*(void *)(v13 + 8 * v15)) {
          break;
        }
      }
    }
LABEL_22:
    sub_100020730();
    uint64_t v14 = v23 & v22;
LABEL_23:
    sub_100050E40();
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_100042ADC(v11, v12);
    char v25 = v24;
    swift_bridgeObjectRelease();
    if ((v25 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_33;
    }
    sub_100040D94();
    BOOL v27 = v27 && v26 == v10;
    if (v27)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v28 = sub_1001AADA8();
      swift_bridgeObjectRelease();
      if ((v28 & 1) == 0) {
        goto LABEL_33;
      }
    }
  }
  sub_100024554();
  if (v19 == v20) {
    goto LABEL_33;
  }
  if (*(void *)(v13 + 8 * v21))
  {
    uint64_t v15 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    uint64_t v15 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v15 >= a10) {
      goto LABEL_33;
    }
    ++v21;
    if (*(void *)(v13 + 8 * v15)) {
      goto LABEL_22;
    }
  }
LABEL_35:
  __break(1u);
}

void sub_1001A3F00()
{
  sub_100048C48();
  if (v6 == v7 || (sub_100049710(), !v18))
  {
LABEL_39:
    sub_100044F80();
    return;
  }
  sub_100044D50();
  while (1)
  {
    if (v4)
    {
      sub_10004C140();
      goto LABEL_29;
    }
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    sub_100046D30();
    if (v9 == v10) {
      goto LABEL_39;
    }
    uint64_t v5 = v8;
    if (!*(void *)(v3 + 8 * v8))
    {
      uint64_t v5 = v8 + 1;
      sub_100020C58();
      if (v9 == v10) {
        goto LABEL_39;
      }
      if (!*(void *)(v3 + 8 * v5))
      {
        uint64_t v5 = v11 + 2;
        sub_100020C58();
        if (v9 == v10) {
          goto LABEL_39;
        }
        if (!*(void *)(v3 + 8 * v5))
        {
          uint64_t v5 = v12 + 3;
          sub_100020C58();
          if (v9 == v10) {
            goto LABEL_39;
          }
          if (!*(void *)(v3 + 8 * v5)) {
            break;
          }
        }
      }
    }
LABEL_28:
    sub_100022714();
LABEL_29:
    sub_100050E40();
    swift_bridgeObjectRetain();
    unint64_t v1 = sub_100042ADC(v1, v2);
    char v16 = v15;
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_39;
    }
    sub_100040D94();
    BOOL v18 = v18 && v17 == v0;
    if (v18)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v19 = sub_1001AADA8();
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0) {
        goto LABEL_39;
      }
    }
  }
  sub_100046D30();
  if (v9 == v10) {
    goto LABEL_39;
  }
  if (*(void *)(v3 + 8 * v13))
  {
    uint64_t v5 = v13;
    goto LABEL_28;
  }
  while (1)
  {
    uint64_t v5 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    sub_100020C58();
    if (v9 == v10) {
      goto LABEL_39;
    }
    uint64_t v13 = v14 + 1;
    if (*(void *)(v3 + 8 * v5)) {
      goto LABEL_28;
    }
  }
LABEL_41:
  __break(1u);
}

void sub_1001A4060()
{
  sub_1000209F4();
  if (v0 == v1 || (v2 = v1, uint64_t v3 = v0, sub_100049710(), !v4))
  {
LABEL_28:
    sub_100020FDC();
    return;
  }
  int64_t v5 = 0;
  uint64_t v6 = v3 + 64;
  sub_100046A2C();
  unint64_t v9 = v8 & v7;
  int64_t v11 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v5 << 6);
      goto LABEL_23;
    }
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v14 >= v11) {
      goto LABEL_28;
    }
    ++v5;
    if (!*(void *)(v6 + 8 * v14))
    {
      int64_t v5 = v14 + 1;
      if (v14 + 1 >= v11) {
        goto LABEL_28;
      }
      if (!*(void *)(v6 + 8 * v5))
      {
        int64_t v5 = v14 + 2;
        if (v14 + 2 >= v11) {
          goto LABEL_28;
        }
        if (!*(void *)(v6 + 8 * v5))
        {
          int64_t v5 = v14 + 3;
          if (v14 + 3 >= v11) {
            goto LABEL_28;
          }
          if (!*(void *)(v6 + 8 * v5)) {
            break;
          }
        }
      }
    }
LABEL_22:
    sub_1001AADD0();
    unint64_t v13 = v16 + (v5 << 6);
LABEL_23:
    uint64_t v17 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    char v20 = *(void **)(*(void *)(v3 + 56) + 8 * v13);
    swift_bridgeObjectRetain();
    id v21 = v20;
    unint64_t v22 = sub_100042ADC(v18, v19);
    char v24 = v23;
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0)
    {

      goto LABEL_28;
    }
    sub_10004D510(0, (unint64_t *)&qword_100231E00);
    id v25 = *(id *)(*(void *)(v2 + 56) + 8 * v22);
    char v26 = static NSObject.== infix(_:_:)();

    if ((v26 & 1) == 0) {
      goto LABEL_28;
    }
  }
  int64_t v15 = v14 + 4;
  if (v15 >= v11) {
    goto LABEL_28;
  }
  if (*(void *)(v6 + 8 * v15))
  {
    int64_t v5 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v5 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v5 >= v11) {
      goto LABEL_28;
    }
    ++v15;
    if (*(void *)(v6 + 8 * v5)) {
      goto LABEL_22;
    }
  }
LABEL_30:
  __break(1u);
}

void sub_1001A4220()
{
  sub_100048C48();
  if (v3 == v4 || (uint64_t v5 = v3, sub_100049710(), !v19))
  {
LABEL_39:
    sub_100044F80();
    return;
  }
  sub_100044D50();
  while (1)
  {
    if (v1)
    {
      sub_10004C140();
      goto LABEL_29;
    }
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    sub_100046D30();
    if (v8 == v9) {
      goto LABEL_39;
    }
    uint64_t v2 = v7;
    if (!*(void *)(v0 + 8 * v7))
    {
      uint64_t v2 = v7 + 1;
      sub_100020C58();
      if (v8 == v9) {
        goto LABEL_39;
      }
      if (!*(void *)(v0 + 8 * v2))
      {
        uint64_t v2 = v10 + 2;
        sub_100020C58();
        if (v8 == v9) {
          goto LABEL_39;
        }
        if (!*(void *)(v0 + 8 * v2))
        {
          uint64_t v2 = v11 + 3;
          sub_100020C58();
          if (v8 == v9) {
            goto LABEL_39;
          }
          if (!*(void *)(v0 + 8 * v2)) {
            break;
          }
        }
      }
    }
LABEL_28:
    sub_100022714();
LABEL_29:
    uint64_t v14 = *(void *)(*(void *)(v5 + 56) + 16 * v6 + 8);
    id v15 = *(id *)(*(void *)(v5 + 48) + 8 * v6);
    swift_bridgeObjectRetain();
    sub_100088F04(v15);
    char v17 = v16;

    if ((v17 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_39;
    }
    sub_100040D94();
    BOOL v19 = v19 && v18 == v14;
    if (v19)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v20 = sub_1001AADA8();
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0) {
        goto LABEL_39;
      }
    }
  }
  sub_100046D30();
  if (v8 == v9) {
    goto LABEL_39;
  }
  if (*(void *)(v0 + 8 * v12))
  {
    uint64_t v2 = v12;
    goto LABEL_28;
  }
  while (1)
  {
    uint64_t v2 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    sub_100020C58();
    if (v8 == v9) {
      goto LABEL_39;
    }
    uint64_t v12 = v13 + 1;
    if (*(void *)(v0 + 8 * v2)) {
      goto LABEL_28;
    }
  }
LABEL_41:
  __break(1u);
}

unint64_t sub_1001A438C()
{
  unint64_t result = qword_100234820;
  if (!qword_100234820)
  {
    sub_10006026C(&qword_100234818);
    sub_1001A4400();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234820);
  }
  return result;
}

unint64_t sub_1001A4400()
{
  unint64_t result = qword_100234828;
  if (!qword_100234828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234828);
  }
  return result;
}

uint64_t sub_1001A444C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1001A448C()
{
  unint64_t result = qword_100234830;
  if (!qword_100234830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234830);
  }
  return result;
}

uint64_t sub_1001A44D8(uint64_t a1, uint64_t a2)
{
  uint64_t v68 = a1;
  uint64_t v4 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  sub_100058B84();
  Swift::Int v5 = Hasher._finalize()();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  uint64_t v8 = v4 + 56;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_97:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v90 = *(void *)v67;
    *(void *)uint64_t v67 = 0x8000000000000000;
    sub_1001AA93C(a2);
    sub_1001A74D0(a2, v7, isUniquelyReferenced_nonNull_native);
    *(void *)uint64_t v67 = v90;
    swift_bridgeObjectRelease();
    long long v60 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)uint64_t v68 = *(_OWORD *)a2;
    *(_OWORD *)(v68 + 16) = v60;
    *(unsigned char *)(v68 + 32) = *(unsigned char *)(a2 + 32);
    return 1;
  }
  uint64_t v9 = ~v6;
  uint64_t v87 = *(void *)a2;
  uint64_t v82 = ~v6;
  uint64_t v66 = a2;
  uint64_t v70 = v4;
  uint64_t v71 = v4 + 56;
  while (1)
  {
    uint64_t v10 = *(void *)(v4 + 48) + 40 * v7;
    uint64_t v11 = *(void *)(v10 + 8);
    int v88 = *(unsigned __int8 *)(v10 + 18);
    __int16 v89 = *(_WORD *)(v10 + 16);
    uint64_t v12 = *(void *)(v10 + 24);
    char v85 = *(unsigned char *)(v10 + 32);
    int v86 = *(unsigned __int8 *)(v10 + 19);
    swift_bridgeObjectRetain();
    uint64_t v13 = swift_bridgeObjectRetain();
    sub_1001A2710(v13, v87, v14, v15, v16, v17, v18, v19, v66, v67, v68);
    if ((v20 & 1) == 0)
    {
LABEL_95:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_96;
    }
    uint64_t v84 = v12;
    uint64_t v21 = *(void *)(a2 + 8);
    if (!v11)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __int16 v51 = v89;
      if (v21) {
        goto LABEL_96;
      }
      goto LABEL_59;
    }
    if (!v21) {
      goto LABEL_95;
    }
    uint64_t v22 = *(void *)(v11 + 16);
    if (v22 != *(void *)(v21 + 16)) {
      goto LABEL_95;
    }
    if (v22 && v11 != v21) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_58:
    __int16 v51 = v89;
LABEL_59:
    unsigned int v52 = *(unsigned __int16 *)(a2 + 16);
    int v53 = *(_WORD *)(a2 + 16);
    if (v51 == 3)
    {
      if (v53 != 3) {
        goto LABEL_96;
      }
    }
    else
    {
      if (v53 == 3) {
        goto LABEL_96;
      }
      int v55 = *(_WORD *)(a2 + 16);
      if (v51 == 2)
      {
        if (v55 != 2) {
          goto LABEL_96;
        }
      }
      else if (v55 == 2 || ((((v51 & 1) == 0) ^ v52) & 1) == 0)
      {
        goto LABEL_96;
      }
      unsigned int v57 = v52 >> 8;
      if ((v51 & 0xFF00) == 0x200)
      {
        if (v57 != 2) {
          goto LABEL_96;
        }
      }
      else if (v57 == 2 || ((((v51 & 0x100) == 0) ^ ((unsigned __int16)(v52 & 0x100) >> 8)) & 1) == 0)
      {
        goto LABEL_96;
      }
    }
    int v54 = *(unsigned __int8 *)(a2 + 18);
    if (v88 == 2)
    {
      if (v54 != 2) {
        goto LABEL_96;
      }
    }
    else if (v54 == 2 || ((((v88 & 1) == 0) ^ v54) & 1) == 0)
    {
      goto LABEL_96;
    }
    int v56 = *(unsigned __int8 *)(a2 + 19);
    if (v86 == 2)
    {
      if (v56 == 2) {
        goto LABEL_81;
      }
    }
    else if (v56 != 2 && ((((v86 & 1) == 0) ^ v56) & 1) != 0)
    {
LABEL_81:
      char v58 = *(unsigned char *)(a2 + 32);
      if (v85)
      {
        if (*(unsigned char *)(a2 + 32)) {
          goto LABEL_98;
        }
      }
      else
      {
        if (v84 != *(void *)(a2 + 24)) {
          char v58 = 1;
        }
        if ((v58 & 1) == 0)
        {
LABEL_98:
          swift_bridgeObjectRelease();
          sub_1001AA970(a2);
          uint64_t v61 = *(void *)(*(void *)v67 + 48) + 40 * v7;
          uint64_t v63 = *(void *)v61;
          uint64_t v62 = *(void *)(v61 + 8);
          int v64 = *(_DWORD *)(v61 + 16);
          uint64_t v65 = *(void *)(v61 + 24);
          LOBYTE(v61) = *(unsigned char *)(v61 + 32);
          *(void *)uint64_t v68 = v63;
          *(void *)(v68 + 8) = v62;
          *(_DWORD *)(v68 + 16) = v64;
          *(void *)(v68 + 24) = v65;
          *(unsigned char *)(v68 + 32) = v61;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          return 0;
        }
      }
    }
LABEL_96:
    unint64_t v7 = (v7 + 1) & v9;
    if (((*(void *)(v8 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
      goto LABEL_97;
    }
  }
  uint64_t v69 = *(void *)(v11 + 16);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v24 = 0;
  unint64_t v25 = 0;
  uint64_t v72 = v21;
  while (v25 < *(void *)(v21 + 16))
  {
    uint64_t v26 = *(void *)(v11 + v24 + 40);
    uint64_t v83 = *(void *)(v11 + v24 + 48);
    uint64_t v27 = v21;
    uint64_t v28 = *(void *)(v11 + v24 + 64);
    int v76 = *(unsigned __int8 *)(v11 + v24 + 74);
    int v77 = *(unsigned __int8 *)(v11 + v24 + 73);
    uint64_t v74 = *(void *)(v11 + v24 + 56);
    uint64_t v75 = v24;
    uint64_t v30 = *(void *)(v27 + v24 + 40);
    uint64_t v29 = *(void *)(v27 + v24 + 48);
    uint64_t v31 = *(void *)(v27 + v24 + 64);
    int v32 = *(unsigned __int8 *)(v27 + v24 + 73);
    unint64_t v79 = v25;
    int v78 = *(unsigned __int8 *)(v27 + v24 + 74);
    int v80 = *(unsigned __int8 *)(v27 + v24 + 72);
    int v81 = *(unsigned __int8 *)(v11 + v24 + 72);
    uint64_t v73 = *(void *)(v27 + v24 + 56);
    if (v26)
    {
      if (!v30
        || (*(void *)(v11 + v24 + 32) == *(void *)(v27 + v24 + 32) ? (BOOL v33 = v26 == v30) : (BOOL v33 = 0),
            !v33
         && (uint64_t v34 = *(void *)(v27 + v24 + 64),
             char v35 = _stringCompareWithSmolCheck(_:_:expecting:)(),
             uint64_t v31 = v34,
             (v35 & 1) == 0)))
      {
LABEL_84:
        swift_bridgeObjectRelease();
LABEL_92:
        swift_bridgeObjectRelease();
        a2 = v66;
        uint64_t v4 = v70;
        uint64_t v8 = v71;
LABEL_93:
        uint64_t v9 = v82;
        goto LABEL_95;
      }
    }
    else if (v30)
    {
      goto LABEL_84;
    }
    if (v83)
    {
      if (!v29) {
        goto LABEL_84;
      }
      uint64_t v36 = v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1001A3DA0(v83, v29, v37, v38, v39, v40, v41, v42, v66, v67);
      char v44 = v43;
      swift_bridgeObjectRelease();
      uint64_t v45 = v28;
      swift_bridgeObjectRelease();
      if ((v44 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_92;
      }
    }
    else
    {
      if (v29) {
        goto LABEL_84;
      }
      uint64_t v36 = v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v45 = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v21 = v72;
    if (!v45)
    {
      uint64_t v9 = v82;
      if (v36)
      {
LABEL_94:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a2 = v66;
        uint64_t v4 = v70;
        uint64_t v8 = v71;
        goto LABEL_95;
      }
      swift_bridgeObjectRelease_n();
      goto LABEL_37;
    }
    uint64_t v9 = v82;
    if (!v36) {
      goto LABEL_94;
    }
    if (v74 == v73 && v45 == v36)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_37:
      uint64_t v4 = v70;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v8 = v71;
      goto LABEL_38;
    }
    char v47 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v4 = v70;
    uint64_t v8 = v71;
    if ((v47 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a2 = v66;
      goto LABEL_93;
    }
LABEL_38:
    if (v81 == 2)
    {
      uint64_t v9 = v82;
      if (v80 != 2) {
        goto LABEL_78;
      }
    }
    else
    {
      uint64_t v9 = v82;
      if (v80 == 2 || ((((v81 & 1) == 0) ^ v80) & 1) == 0)
      {
LABEL_78:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a2 = v66;
        goto LABEL_95;
      }
    }
    if (v77 == 2)
    {
      uint64_t v48 = v69;
      unint64_t v49 = v79;
      int v50 = v78;
      if (v32 != 2) {
        goto LABEL_78;
      }
    }
    else
    {
      uint64_t v48 = v69;
      unint64_t v49 = v79;
      int v50 = v78;
      if (v32 == 2 || ((((v77 & 1) == 0) ^ v32) & 1) == 0) {
        goto LABEL_78;
      }
    }
    if (v76 == 2)
    {
      if (v50 != 2) {
        goto LABEL_78;
      }
    }
    else if (v50 == 2 || ((((v76 & 1) == 0) ^ v50) & 1) == 0)
    {
      goto LABEL_78;
    }
    unint64_t v25 = v49 + 1;
    uint64_t v24 = v75 + 48;
    if (v48 == v25)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      a2 = v66;
      goto LABEL_58;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1001A4C9C(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v7 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  sub_1000489A0();
  if ((v10 & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_100040B94();
    id v26 = a2;
    sub_1001A7C14((uint64_t)v26, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v28;
    swift_bridgeObjectRelease();
    *a1 = v26;
    return 1;
  }
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;
  if (v11 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v13 == v14)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v16 = sub_100050218();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      uint64_t v17 = ~v8;
      do
      {
        unint64_t v9 = (v9 + 1) & v17;
        sub_1000489A0();
        if ((v18 & 1) == 0) {
          goto LABEL_15;
        }
        uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v21 = v20;
        if (v19 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v21 == v22) {
          goto LABEL_16;
        }
        char v24 = sub_100050218();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v24 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease();
  sub_1001AADE4();
  return 0;
}

void sub_1001A4E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  sub_100047408();
  a31 = v33;
  a32 = v34;
  uint64_t v36 = v35;
  Swift::Int v38 = v37;
  Swift::Int v40 = v39;
  int v56 = v41;
  uint64_t v42 = *v32;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10005E404((uint64_t)&a12, v36);
  swift_bridgeObjectRelease();
  Swift::Int v43 = Hasher._finalize()();
  uint64_t v44 = -1 << *(unsigned char *)(v42 + 32);
  unint64_t v45 = v43 & ~v44;
  if ((*(void *)(v42 + 56 + ((v45 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v45))
  {
    uint64_t v46 = ~v44;
    while (1)
    {
      char v47 = (void *)(*(void *)(v42 + 48) + 24 * v45);
      BOOL v48 = *v47 == v40 && v47[1] == v38;
      if (v48 || (sub_1001AAE04() & 1) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v49 = swift_bridgeObjectRetain();
        sub_1001A1F60(v49, v36);
        char v51 = v50;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v51) {
          break;
        }
      }
      unint64_t v45 = (v45 + 1) & v46;
      if (((*(void *)(v42 + 56 + ((v45 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v45) & 1) == 0) {
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v53 = (Swift::Int *)(*(void *)(*v32 + 48) + 24 * v45);
    Swift::Int v54 = v53[1];
    Swift::Int v55 = v53[2];
    *int v56 = *v53;
    v56[1] = v54;
    v56[2] = v55;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    a12 = *v32;
    *int v32 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001A7E44(v40, v38, v36, v45, isUniquelyReferenced_nonNull_native);
    *int v32 = a12;
    swift_bridgeObjectRelease();
    *int v56 = v40;
    v56[1] = v38;
    v56[2] = v36;
  }
  sub_10004CFCC();
}

void sub_1001A5064()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for Treatment(0);
  sub_100020DEC();
  uint64_t v30 = v7;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v26 - v12;
  uint64_t v14 = *v0;
  Hasher.init(_seed:)();
  uint64_t v15 = (void *)(v3 + *(int *)(v6 + 20));
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v16 = Hasher._finalize()();
  uint64_t v17 = -1 << *(unsigned char *)(v14 + 32);
  unint64_t v18 = v16 & ~v17;
  if ((*(void *)(v14 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18))
  {
    uint64_t v27 = v13;
    uint64_t v28 = v0;
    uint64_t v29 = v5;
    uint64_t v19 = ~v17;
    uint64_t v20 = *(void *)(v30 + 72);
    while (1)
    {
      sub_1001AAD48(*(void *)(v14 + 48) + v20 * v18, (uint64_t)v11, (void (*)(void))type metadata accessor for Treatment);
      if (static Date.== infix(_:_:)())
      {
        uint64_t v21 = &v11[*(int *)(v6 + 20)];
        BOOL v22 = *(void *)v21 == *v15 && *((void *)v21 + 1) == v15[1];
        if (v22 || (_stringCompareWithSmolCheck(_:_:expecting:)())
          && (static Date.== infix(_:_:)() & 1) != 0)
        {
          break;
        }
      }
      sub_10005083C((uint64_t)v11, (void (*)(void))type metadata accessor for Treatment);
      unint64_t v18 = (v18 + 1) & v19;
      if (((*(void *)(v14 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v1 = v28;
        uint64_t v5 = v29;
        uint64_t v13 = v27;
        goto LABEL_13;
      }
    }
    sub_10005083C((uint64_t)v11, (void (*)(void))type metadata accessor for Treatment);
    swift_bridgeObjectRelease();
    uint64_t v24 = sub_10004C258();
    sub_10005083C(v24, v25);
    sub_1001AAD48(*(void *)(*v28 + 48) + v20 * v18, v29, (void (*)(void))type metadata accessor for Treatment);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_13:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1001AAD48(v3, (uint64_t)v13, (void (*)(void))type metadata accessor for Treatment);
    uint64_t v31 = *v1;
    *uint64_t v1 = 0x8000000000000000;
    sub_1001A8038((uint64_t)v13, v18, isUniquelyReferenced_nonNull_native);
    *uint64_t v1 = v31;
    swift_bridgeObjectRelease();
    sub_100050944(v3, v5);
  }
  sub_100020FDC();
}

void sub_1001A5314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_100048C48();
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v16 = *v10;
  if ((*v10 & 0xC000000000000001) == 0)
  {
    Swift::Int v20 = *(void *)(v16 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v21 = NSObject._rawHashValue(seed:)(v20);
    uint64_t v22 = -1 << *(unsigned char *)(v16 + 32);
    unint64_t v23 = v21 & ~v22;
    sub_1000489A0();
    if (v24)
    {
      sub_10004D510(0, &qword_100234570);
      id v25 = *(id *)(*(void *)(v16 + 48) + 8 * v23);
      char v26 = static NSObject.== infix(_:_:)();

      if (v26)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        sub_1001AADE4();
        goto LABEL_21;
      }
      uint64_t v27 = ~v22;
      while (1)
      {
        unint64_t v23 = (v23 + 1) & v27;
        sub_1000489A0();
        if ((v28 & 1) == 0) {
          break;
        }
        id v29 = *(id *)(*(void *)(v16 + 48) + 8 * v23);
        char v30 = static NSObject.== infix(_:_:)();

        if (v30) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_100040B94();
    id v18 = v13;
    sub_1001A82C0((uint64_t)v18, v23, isUniquelyReferenced_nonNull_native);
    *uint64_t v11 = a10;
    goto LABEL_20;
  }
  if (v16 < 0) {
    uint64_t v17 = *v10;
  }
  else {
    uint64_t v17 = v16 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  id v18 = v13;
  uint64_t v19 = __CocoaSet.member(for:)();

  if (v19)
  {
    swift_bridgeObjectRelease();

    sub_10004D510(0, &qword_100234570);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    void *v15 = a10;
    swift_unknownObjectRelease();
LABEL_21:
    sub_100044F80();
    return;
  }
  uint64_t v31 = __CocoaSet.count.getter();
  if (!__OFADD__(v31, 1))
  {
    Swift::Int v32 = sub_1001A63A8(v17, v31 + 1);
    Swift::Int v37 = (void *)v32;
    if (*(void *)(v32 + 24) <= *(void *)(v32 + 16))
    {
      id v36 = v18;
      sub_1001A71B0();
      uint64_t v33 = v37;
    }
    else
    {
      uint64_t v33 = (void *)v32;
      id v34 = v18;
    }
    sub_1001A744C((uint64_t)v18, v33);
    *uint64_t v11 = v33;
LABEL_20:
    swift_bridgeObjectRelease();
    void *v15 = v18;
    goto LABEL_21;
  }
  __break(1u);
}

uint64_t sub_1001A5564(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *a1 = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_10004C258();
}

uint64_t sub_1001A55AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  sub_1001AA900(a1, a2, a3, &v31);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = sub_1001AA9AC();
  if (v8)
  {
    uint64_t v10 = v7;
    uint64_t v11 = v8;
    uint64_t v12 = v9;
    while (1)
    {
      uint64_t v13 = (void *)*a5;
      unint64_t v15 = sub_100042ADC(v10, v11);
      uint64_t v16 = v13[2];
      BOOL v17 = (v14 & 1) == 0;
      if (__OFADD__(v16, v17)) {
        break;
      }
      char v18 = v14;
      if (v13[3] >= v16 + v17)
      {
        if ((a4 & 1) == 0)
        {
          sub_100043478(&qword_100234848);
          _NativeDictionary.copy()();
        }
      }
      else
      {
        sub_1001A59F0();
        unint64_t v19 = sub_100042ADC(v10, v11);
        if ((v18 & 1) != (v20 & 1)) {
          goto LABEL_17;
        }
        unint64_t v15 = v19;
      }
      Swift::Int v21 = (void *)*a5;
      if (v18)
      {
        uint64_t v22 = *(void *)(v21[7] + 8 * v15);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v23 = v21[7];
        swift_bridgeObjectRelease();
        *(void *)(v23 + 8 * v15) = v22;
      }
      else
      {
        v21[(v15 >> 6) + 8] |= 1 << v15;
        char v24 = (uint64_t *)(v21[6] + 16 * v15);
        *char v24 = v10;
        v24[1] = v11;
        *(void *)(v21[7] + 8 * v15) = v12;
        uint64_t v25 = v21[2];
        BOOL v26 = __OFADD__(v25, 1);
        uint64_t v27 = v25 + 1;
        if (v26) {
          goto LABEL_16;
        }
        _OWORD v21[2] = v27;
      }
      uint64_t v10 = sub_1001AA9AC();
      uint64_t v11 = v28;
      uint64_t v12 = v29;
      a4 = 1;
      if (!v28) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
    swift_release();
    sub_100011E28();
    return swift_release();
  }
  return result;
}

void sub_1001A57CC()
{
  sub_100048C48();
  sub_1000478C4();
  sub_100043478(&qword_10022DBB0);
  sub_10004C258();
  uint64_t v3 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v4 = (void *)v3;
  if (*(void *)(v1 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = *(void *)(v1 + 64);
    char v30 = v0;
    uint64_t v31 = v1 + 64;
    uint64_t v7 = 1 << *(unsigned char *)(v1 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    uint64_t v9 = v8 & v6;
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = v3 + 64;
    if ((v8 & v6) == 0) {
      goto LABEL_7;
    }
LABEL_6:
    sub_1000362C8();
    while (1)
    {
      int v18 = *(_DWORD *)(*(void *)(v1 + 48) + 4 * v12);
      uint64_t v19 = *(void *)(*(void *)(v1 + 56) + 8 * v12);
      if ((v2 & 1) == 0) {
        swift_unknownObjectRetain();
      }
      static Hasher._hash(seed:bytes:count:)();
      sub_100045C84();
      if (v20)
      {
        sub_10004ABAC();
        while (1)
        {
          sub_1000427B8();
          if (v20)
          {
            if (v22) {
              break;
            }
          }
          if (v23 == v24) {
            uint64_t v23 = 0;
          }
          if (*(void *)(v11 + 8 * v23) != -1)
          {
            sub_10004D6A0();
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        return;
      }
      sub_1000499B8();
LABEL_31:
      sub_10004C92C(v21);
      *(_DWORD *)(v4[6] + 4 * v25) = v18;
      *(void *)(v4[7] + 8 * v25) = v19;
      ++v4[2];
      if (v9) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v13 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        goto LABEL_42;
      }
      if (v13 >= v10) {
        goto LABEL_33;
      }
      ++v5;
      if (!*(void *)(v31 + 8 * v13))
      {
        int64_t v5 = v13 + 1;
        if (v13 + 1 >= v10) {
          goto LABEL_33;
        }
        if (!*(void *)(v31 + 8 * v5))
        {
          int64_t v14 = v13 + 2;
          if (v14 >= v10)
          {
LABEL_33:
            if ((v2 & 1) == 0)
            {
              swift_release();
              uint64_t v0 = v30;
              goto LABEL_40;
            }
            sub_100046518();
            if (v28 != v29) {
              void *v26 = -1 << v27;
            }
            else {
              sub_1001A638C(0, (unint64_t)(v27 + 63) >> 6, v26);
            }
            uint64_t v0 = v30;
            *(void *)(v1 + 16) = 0;
            break;
          }
          if (!*(void *)(v31 + 8 * v14))
          {
            while (1)
            {
              int64_t v5 = v14 + 1;
              if (__OFADD__(v14, 1)) {
                goto LABEL_43;
              }
              if (v5 >= v10) {
                goto LABEL_33;
              }
              ++v14;
              if (*(void *)(v31 + 8 * v5)) {
                goto LABEL_18;
              }
            }
          }
          int64_t v5 = v14;
        }
      }
LABEL_18:
      sub_100020730();
      uint64_t v9 = v16 & v15;
      uint64_t v12 = v17 + (v5 << 6);
    }
  }
  swift_release();
LABEL_40:
  void *v0 = v4;
  sub_100044F80();
}

void sub_1001A59D8()
{
}

void sub_1001A59E4()
{
}

void sub_1001A59F0()
{
  sub_10004A000();
  sub_1000478C4();
  sub_100043478(v3);
  sub_10004C258();
  char v35 = v2;
  uint64_t v4 = static _DictionaryStorage.resize(original:capacity:move:)();
  if (!*(void *)(v1 + 16)) {
    goto LABEL_40;
  }
  sub_1000459E0();
  id v34 = v7;
  if (v5 < 64) {
    uint64_t v8 = ~(-1 << v5);
  }
  else {
    uint64_t v8 = -1;
  }
  uint64_t v9 = v8 & v6;
  int64_t v33 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v4 + 64;
  swift_retain();
  int64_t v11 = 0;
  if (!v9) {
    goto LABEL_7;
  }
LABEL_6:
  sub_1000533F0();
  for (int64_t i = v12 | (v11 << 6); ; int64_t i = v17 + (v11 << 6))
  {
    int v18 = (uint64_t *)(*(void *)(v1 + 48) + 16 * i);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    if ((v35 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    unint64_t v21 = Hasher._finalize()() & ~(-1 << *(unsigned char *)(v4 + 32));
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) == 0)
    {
      sub_10004ABAC();
      while (1)
      {
        sub_1000427B8();
        if (v25)
        {
          if (v22) {
            break;
          }
        }
        if (v23 == v24) {
          uint64_t v23 = 0;
        }
        if (*(void *)(v10 + 8 * v23) != -1)
        {
          sub_10004D6A0();
          goto LABEL_31;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return;
    }
    sub_1000499B8();
LABEL_31:
    sub_100046F38();
    *(void *)(v10 + v26) |= v27;
    char v29 = (void *)(*(void *)(v4 + 48) + 16 * v28);
    *char v29 = v20;
    v29[1] = v19;
    sub_100042C10(v28);
    if (v9) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_42;
    }
    if (v14 >= v33)
    {
      swift_release();
      uint64_t v15 = v34;
      goto LABEL_35;
    }
    uint64_t v15 = v34;
    ++v11;
    if (!v34[v14])
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v33) {
        goto LABEL_33;
      }
      if (!v34[v11]) {
        break;
      }
    }
LABEL_18:
    sub_1000361DC();
  }
  int64_t v16 = v14 + 2;
  if (v16 < v33)
  {
    if (!v34[v16])
    {
      while (1)
      {
        int64_t v11 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_43;
        }
        if (v11 >= v33) {
          goto LABEL_33;
        }
        ++v16;
        if (v34[v11]) {
          goto LABEL_18;
        }
      }
    }
    int64_t v11 = v16;
    goto LABEL_18;
  }
LABEL_33:
  swift_release();
LABEL_35:
  if (v35)
  {
    sub_100046518();
    if (v31 != v32) {
      void *v15 = -1 << v30;
    }
    else {
      sub_10002CB94(v30);
    }
    *(void *)(v1 + 16) = 0;
  }
LABEL_40:
  swift_release();
  uint64_t *v0 = v4;
  sub_100022868();
}

void sub_1001A5C3C()
{
  sub_10004A268();
  sub_100043478((uint64_t *)&unk_100234670);
  uint64_t v3 = sub_100052178();
  if (v1[2])
  {
    uint64_t v30 = v0;
    sub_1000459E0();
    char v32 = v6;
    if (v4 < 64) {
      uint64_t v7 = ~(-1 << v4);
    }
    else {
      uint64_t v7 = -1;
    }
    uint64_t v8 = v7 & v5;
    int64_t v31 = (unint64_t)(v4 + 63) >> 6;
    uint64_t v9 = v3 + 64;
    swift_retain();
    int64_t v10 = 0;
    if (!v8) {
      goto LABEL_7;
    }
LABEL_6:
    sub_100040A50();
    while (1)
    {
      int64_t v14 = (uint64_t *)(v1[6] + 16 * v11);
      uint64_t v16 = *v14;
      uint64_t v15 = v14[1];
      uint64_t v17 = (_OWORD *)(v1[7] + 32 * v11);
      if (v2)
      {
        sub_100043510(v17, v33);
      }
      else
      {
        sub_100043520((uint64_t)v17, (uint64_t)v33);
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      String.hash(into:)();
      unint64_t v18 = Hasher._finalize()() & ~(-1 << *(unsigned char *)(v3 + 32));
      if (((-1 << v18) & ~*(void *)(v9 + 8 * (v18 >> 6))) == 0)
      {
        sub_10004ABAC();
        while (1)
        {
          sub_1000427B8();
          if (v22)
          {
            if (v19) {
              break;
            }
          }
          if (v20 == v21) {
            uint64_t v20 = 0;
          }
          if (*(void *)(v9 + 8 * v20) != -1)
          {
            sub_10004D6A0();
            goto LABEL_32;
          }
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return;
      }
      sub_1000499B8();
LABEL_32:
      sub_100046F38();
      *(void *)(v9 + v23) |= v24;
      uint64_t v26 = (void *)(*(void *)(v3 + 48) + 16 * v25);
      void *v26 = v16;
      v26[1] = v15;
      sub_100043510(v33, (_OWORD *)(*(void *)(v3 + 56) + 32 * v25));
      ++*(void *)(v3 + 16);
      if (v8) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v12 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_41;
      }
      if (v12 >= v31) {
        goto LABEL_34;
      }
      ++v10;
      if (!v32[v12])
      {
        int64_t v10 = v12 + 1;
        if (v12 + 1 >= v31) {
          goto LABEL_34;
        }
        if (!v32[v10])
        {
          int64_t v13 = v12 + 2;
          if (v13 >= v31)
          {
LABEL_34:
            swift_release();
            uint64_t v0 = v30;
            if (v2)
            {
              sub_100046518();
              if (v28 != v29) {
                *char v32 = -1 << v27;
              }
              else {
                sub_1001A638C(0, (unint64_t)(v27 + 63) >> 6, v32);
              }
              v1[2] = 0;
            }
            break;
          }
          if (!v32[v13])
          {
            while (1)
            {
              int64_t v10 = v13 + 1;
              if (__OFADD__(v13, 1)) {
                goto LABEL_42;
              }
              if (v10 >= v31) {
                goto LABEL_34;
              }
              ++v13;
              if (v32[v10]) {
                goto LABEL_18;
              }
            }
          }
          int64_t v10 = v13;
        }
      }
LABEL_18:
      sub_10004D224();
    }
  }
  swift_release();
  uint64_t *v0 = v3;
}

void sub_1001A5EA0()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  int v3 = v2;
  uint64_t v42 = type metadata accessor for URL();
  sub_100020DEC();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void *)*v0;
  sub_100043478(&qword_100234898);
  sub_10004C258();
  int v41 = v3;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  if (v9[2])
  {
    Swift::Int v37 = v1;
    int64_t v11 = 0;
    Swift::Int v39 = v9 + 8;
    sub_100045FCC();
    uint64_t v14 = v13 & v12;
    int64_t v38 = (unint64_t)(v15 + 63) >> 6;
    Swift::Int v40 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v16 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
    uint64_t v17 = v10 + 64;
    if ((v13 & v12) == 0) {
      goto LABEL_4;
    }
LABEL_3:
    sub_100040A50();
    while (1)
    {
      uint64_t v21 = *(void *)(v9[6] + 8 * v18);
      uint64_t v22 = v5;
      uint64_t v23 = *(void *)(v5 + 72);
      uint64_t v24 = v9[7] + v23 * v18;
      if (v41) {
        (*v16)(v8, v24, v42);
      }
      else {
        (*v40)(v8, v24, v42);
      }
      unint64_t v25 = static Hasher._hash(seed:_:)() & ~(-1 << *(unsigned char *)(v10 + 32));
      if (((-1 << v25) & ~*(void *)(v17 + 8 * (v25 >> 6))) == 0)
      {
        sub_10004ABAC();
        while (1)
        {
          sub_1000427B8();
          if (v29)
          {
            if (v26) {
              break;
            }
          }
          if (v27 == v28) {
            uint64_t v27 = 0;
          }
          if (*(void *)(v17 + 8 * v27) != -1)
          {
            sub_10004D6A0();
            goto LABEL_29;
          }
        }
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return;
      }
      sub_1000499B8();
LABEL_29:
      sub_100046F38();
      *(void *)(v17 + v30) |= v31;
      *(void *)(*(void *)(v10 + 48) + 8 * v32) = v21;
      (*v16)((char *)(*(void *)(v10 + 56) + v23 * v32), (uint64_t)v8, v42);
      ++*(void *)(v10 + 16);
      uint64_t v5 = v22;
      if (v14) {
        goto LABEL_3;
      }
LABEL_4:
      int64_t v19 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v19 >= v38) {
        goto LABEL_31;
      }
      ++v11;
      if (!v39[v19])
      {
        int64_t v11 = v19 + 1;
        if (v19 + 1 >= v38) {
          goto LABEL_31;
        }
        if (!v39[v11])
        {
          int64_t v20 = v19 + 2;
          if (v20 >= v38)
          {
LABEL_31:
            if ((v41 & 1) == 0)
            {
              swift_release();
              uint64_t v1 = v37;
              goto LABEL_38;
            }
            sub_100046518();
            if (v35 != v36) {
              *int64_t v33 = -1 << v34;
            }
            else {
              sub_1001A638C(0, (unint64_t)(v34 + 63) >> 6, v33);
            }
            uint64_t v1 = v37;
            v9[2] = 0;
            break;
          }
          if (!v39[v20])
          {
            while (1)
            {
              int64_t v11 = v20 + 1;
              if (__OFADD__(v20, 1)) {
                goto LABEL_41;
              }
              if (v11 >= v38) {
                goto LABEL_31;
              }
              ++v20;
              if (v39[v11]) {
                goto LABEL_15;
              }
            }
          }
          int64_t v11 = v20;
        }
      }
LABEL_15:
      sub_10004D224();
    }
  }
  swift_release();
LABEL_38:
  *uint64_t v1 = v10;
  sub_100020FDC();
}

void sub_1001A6194()
{
}

void sub_1001A61A0()
{
}

void sub_1001A61AC()
{
  sub_100048C48();
  sub_10004A268();
  sub_100043478(v3);
  uint64_t v4 = sub_100052178();
  if (*(void *)(v1 + 16))
  {
    sub_1000459E0();
    uint64_t v31 = v7;
    if (v5 < 64) {
      uint64_t v8 = ~(-1 << v5);
    }
    else {
      uint64_t v8 = -1;
    }
    uint64_t v9 = v8 & v6;
    int64_t v10 = (unint64_t)(v5 + 63) >> 6;
    swift_retain();
    int64_t v11 = 0;
    if (!v9) {
      goto LABEL_7;
    }
LABEL_6:
    sub_10004FD2C();
    for (int64_t i = v12 | (v11 << 6); ; int64_t i = v19 + (v11 << 6))
    {
      int64_t v20 = *(void **)(*(void *)(v1 + 48) + 8 * i);
      if ((v2 & 1) == 0)
      {
        id v21 = v20;
        swift_retain();
      }
      NSObject._rawHashValue(seed:)(*(void *)(v4 + 40));
      sub_100045C84();
      if (v22)
      {
        sub_10004ABAC();
        while (1)
        {
          sub_1000427B8();
          if (v22)
          {
            if (v24) {
              break;
            }
          }
          if (v25 == v26) {
            uint64_t v25 = 0;
          }
          if (*(void *)(v4 + 64 + 8 * v25) != -1)
          {
            sub_10004D6A0();
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        return;
      }
      sub_1000499B8();
LABEL_31:
      sub_10004C92C(v23);
      *(void *)(*(void *)(v4 + 48) + 8 * v27) = v20;
      sub_100042C10(v27);
      if (v9) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_42;
      }
      if (v14 >= v10) {
        break;
      }
      uint64_t v15 = v31;
      ++v11;
      if (!v31[v14])
      {
        int64_t v11 = v14 + 1;
        if (v14 + 1 >= v10) {
          goto LABEL_33;
        }
        if (!v31[v11])
        {
          int64_t v16 = v14 + 2;
          if (v16 >= v10)
          {
LABEL_33:
            swift_release();
            if ((v2 & 1) == 0) {
              goto LABEL_40;
            }
            goto LABEL_36;
          }
          if (!v31[v16])
          {
            while (1)
            {
              int64_t v11 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                goto LABEL_43;
              }
              if (v11 >= v10) {
                goto LABEL_33;
              }
              ++v16;
              if (v31[v11]) {
                goto LABEL_18;
              }
            }
          }
          int64_t v11 = v16;
        }
      }
LABEL_18:
      sub_100020730();
      uint64_t v9 = v18 & v17;
    }
    swift_release();
    uint64_t v15 = v31;
    if ((v2 & 1) == 0) {
      goto LABEL_40;
    }
LABEL_36:
    sub_100046518();
    if (v29 != v30) {
      void *v15 = -1 << v28;
    }
    else {
      sub_10002CB94(v28);
    }
    *(void *)(v1 + 16) = 0;
  }
LABEL_40:
  swift_release();
  uint64_t *v0 = v4;
  sub_100044F80();
}

uint64_t sub_1001A638C(uint64_t result, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

Swift::Int sub_1001A63A8(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  sub_100043478(&qword_100234878);
  uint64_t v2 = static _SetStorage.convert(_:capacity:)();
  uint64_t v14 = v2;
  __CocoaSet.makeIterator()();
  if (!__CocoaSet.Iterator.next()())
  {
LABEL_16:
    swift_release();
    return v2;
  }
  sub_10004D510(0, &qword_100234570);
  while (1)
  {
    swift_dynamicCast();
    uint64_t v2 = v14;
    if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
    {
      sub_1001A71B0();
      uint64_t v2 = v14;
    }
    Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
    uint64_t v4 = v2 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v6 = result & ~v5;
    unint64_t v7 = v6 >> 6;
    if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) == 0) {
      break;
    }
    unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
LABEL_15:
    *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
    ++*(void *)(v2 + 16);
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_16;
    }
  }
  char v9 = 0;
  unint64_t v10 = (unint64_t)(63 - v5) >> 6;
  while (++v7 != v10 || (v9 & 1) == 0)
  {
    BOOL v11 = v7 == v10;
    if (v7 == v10) {
      unint64_t v7 = 0;
    }
    v9 |= v11;
    uint64_t v12 = *(void *)(v4 + 8 * v7);
    if (v12 != -1)
    {
      unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1001A6590()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100043478(&qword_100234858);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    if (!v8) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
    {
      uint64_t v18 = *(void *)(v2 + 48) + 40 * i;
      long long v29 = *(_OWORD *)v18;
      long long v30 = *(_OWORD *)(v18 + 16);
      char v31 = *(unsigned char *)(v18 + 32);
      Hasher.init(_seed:)();
      sub_100058B84();
      uint64_t result = Hasher._finalize()();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) == 0)
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          BOOL v25 = v21 == v24;
          if (v21 == v24) {
            unint64_t v21 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v21);
          if (v26 != -1)
          {
            unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      uint64_t v27 = *(void *)(v4 + 48) + 40 * v22;
      *(_OWORD *)uint64_t v27 = v29;
      *(_OWORD *)(v27 + 16) = v30;
      *(unsigned char *)(v27 + 32) = v31;
      ++*(void *)(v4 + 16);
      if (v8) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v15 = v12 + 1;
      if (__OFADD__(v12, 1)) {
        goto LABEL_38;
      }
      if (v15 >= v9) {
        goto LABEL_32;
      }
      unint64_t v16 = v6[v15];
      ++v12;
      if (!v16)
      {
        int64_t v12 = v15 + 1;
        if (v15 + 1 >= v9) {
          goto LABEL_32;
        }
        unint64_t v16 = v6[v12];
        if (!v16)
        {
          int64_t v12 = v15 + 2;
          if (v15 + 2 >= v9) {
            goto LABEL_32;
          }
          unint64_t v16 = v6[v12];
          if (!v16)
          {
            int64_t v17 = v15 + 3;
            if (v17 >= v9)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
              if (v28 > 63) {
                sub_1001A638C(0, (unint64_t)(v28 + 63) >> 6, (void *)(v2 + 56));
              }
              else {
                *unint64_t v6 = -1 << v28;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v16 = v6[v17];
            if (!v16)
            {
              while (1)
              {
                int64_t v12 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_39;
                }
                if (v12 >= v9) {
                  goto LABEL_32;
                }
                unint64_t v16 = v6[v12];
                ++v17;
                if (v16) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v12 = v17;
          }
        }
      }
LABEL_20:
      unint64_t v8 = (v16 - 1) & v16;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1001A686C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100043478(&qword_100234890);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v27 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    long long v29 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v28 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
    {
      uint64_t v16 = *(void *)(*(void *)(v2 + 48) + 8 * i);
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      Hasher.init(_seed:)();
      String.hash(into:)();
      Swift::Int v17 = Hasher._finalize()();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v19 = v17 & ~v18;
      unint64_t v20 = v19 >> 6;
      if (((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6))) == 0)
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v18) >> 6;
        while (++v20 != v23 || (v22 & 1) == 0)
        {
          BOOL v24 = v20 == v23;
          if (v20 == v23) {
            unint64_t v20 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v8 + 8 * v20);
          if (v25 != -1)
          {
            unint64_t v21 = __clz(__rbit64(~v25)) + (v20 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v8 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      *(void *)(*(void *)(v4 + 48) + 8 * v21) = v16;
      ++*(void *)(v4 + 16);
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v13 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_38;
      }
      if (v13 >= v28) {
        goto LABEL_32;
      }
      unint64_t v14 = v29[v13];
      ++v10;
      if (!v14)
      {
        int64_t v10 = v13 + 1;
        if (v13 + 1 >= v28) {
          goto LABEL_32;
        }
        unint64_t v14 = v29[v10];
        if (!v14)
        {
          int64_t v10 = v13 + 2;
          if (v13 + 2 >= v28) {
            goto LABEL_32;
          }
          unint64_t v14 = v29[v10];
          if (!v14)
          {
            int64_t v15 = v13 + 3;
            if (v15 >= v28)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v27;
              uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
              if (v26 > 63) {
                sub_1001A638C(0, (unint64_t)(v26 + 63) >> 6, v29);
              }
              else {
                *long long v29 = -1 << v26;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v14 = v29[v15];
            if (!v14)
            {
              while (1)
              {
                int64_t v10 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_39;
                }
                if (v10 >= v28) {
                  goto LABEL_32;
                }
                unint64_t v14 = v29[v10];
                ++v15;
                if (v14) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v10 = v15;
          }
        }
      }
LABEL_20:
      unint64_t v7 = (v14 - 1) & v14;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_1001A6B7C()
{
  uint64_t v1 = *v0;
  sub_100043478(&qword_1002348A0);
  uint64_t v2 = static _SetStorage.resize(original:capacity:move:)();
  if (*(void *)(v1 + 16))
  {
    uint64_t v3 = 1 << *(unsigned char *)(v1 + 32);
    uint64_t v4 = (void *)(v1 + 56);
    if (v3 < 64) {
      uint64_t v5 = ~(-1 << v3);
    }
    else {
      uint64_t v5 = -1;
    }
    unint64_t v6 = v5 & *(void *)(v1 + 56);
    int64_t v7 = (unint64_t)(v3 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v9 = 0;
    if (!v6) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v10 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    for (unint64_t i = v10 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v9 << 6))
    {
      uint64_t v15 = *(void *)(v1 + 48) + 24 * i;
      uint64_t v16 = *(void *)v15;
      long long v19 = *(_OWORD *)(v15 + 8);
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_10005E404((uint64_t)v20, *((uint64_t *)&v19 + 1));
      swift_bridgeObjectRelease();
      Hasher._finalize()();
      unint64_t result = _HashTable.nextHole(atOrAfter:)();
      *(void *)(v2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      uint64_t v17 = *(void *)(v2 + 48) + 24 * result;
      *(void *)uint64_t v17 = v16;
      *(_OWORD *)(v17 + 8) = v19;
      ++*(void *)(v2 + 16);
      if (v6) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v12 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
LABEL_29:
        __break(1u);
        return result;
      }
      if (v12 >= v7) {
        goto LABEL_23;
      }
      unint64_t v13 = v4[v12];
      ++v9;
      if (!v13)
      {
        int64_t v9 = v12 + 1;
        if (v12 + 1 >= v7) {
          goto LABEL_23;
        }
        unint64_t v13 = v4[v9];
        if (!v13)
        {
          int64_t v9 = v12 + 2;
          if (v12 + 2 >= v7) {
            goto LABEL_23;
          }
          unint64_t v13 = v4[v9];
          if (!v13)
          {
            int64_t v14 = v12 + 3;
            if (v14 >= v7)
            {
LABEL_23:
              swift_release();
              uint64_t v18 = 1 << *(unsigned char *)(v1 + 32);
              if (v18 > 63) {
                sub_1001A638C(0, (unint64_t)(v18 + 63) >> 6, (void *)(v1 + 56));
              }
              else {
                *uint64_t v4 = -1 << v18;
              }
              *(void *)(v1 + 16) = 0;
              break;
            }
            unint64_t v13 = v4[v14];
            if (!v13)
            {
              while (1)
              {
                int64_t v9 = v14 + 1;
                if (__OFADD__(v14, 1)) {
                  goto LABEL_29;
                }
                if (v9 >= v7) {
                  goto LABEL_23;
                }
                unint64_t v13 = v4[v9];
                ++v14;
                if (v13) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v9 = v14;
          }
        }
      }
LABEL_20:
      unint64_t v6 = (v13 - 1) & v13;
    }
  }
  unint64_t result = swift_release();
  uint64_t *v0 = v2;
  return result;
}

uint64_t sub_1001A6E28()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Treatment(0);
  uint64_t v34 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_100043478(&qword_100234880);
  uint64_t v6 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    char v31 = v0;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = *(void *)(v5 + 56);
    int64_t v33 = (void *)(v5 + 56);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & v9;
    int64_t v32 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v12 = v6 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    if (!v11) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v15 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    for (unint64_t i = v15 | (v14 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v14 << 6))
    {
      uint64_t v20 = *(void *)(v34 + 72);
      sub_100050944(*(void *)(v5 + 48) + v20 * i, (uint64_t)v4);
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v21 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6))) == 0)
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v21) >> 6;
        while (++v23 != v26 || (v25 & 1) == 0)
        {
          BOOL v27 = v23 == v26;
          if (v23 == v26) {
            unint64_t v23 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v23);
          if (v28 != -1)
          {
            unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
      uint64_t result = sub_100050944((uint64_t)v4, *(void *)(v7 + 48) + v24 * v20);
      ++*(void *)(v7 + 16);
      if (v11) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v17 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        goto LABEL_38;
      }
      if (v17 >= v32) {
        goto LABEL_32;
      }
      unint64_t v18 = v33[v17];
      ++v14;
      if (!v18)
      {
        int64_t v14 = v17 + 1;
        if (v17 + 1 >= v32) {
          goto LABEL_32;
        }
        unint64_t v18 = v33[v14];
        if (!v18)
        {
          int64_t v14 = v17 + 2;
          if (v17 + 2 >= v32) {
            goto LABEL_32;
          }
          unint64_t v18 = v33[v14];
          if (!v18)
          {
            int64_t v19 = v17 + 3;
            if (v19 >= v32)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v31;
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 > 63) {
                sub_1001A638C(0, (unint64_t)(v29 + 63) >> 6, v33);
              }
              else {
                *int64_t v33 = -1 << v29;
              }
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v33[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v14 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_39;
                }
                if (v14 >= v32) {
                  goto LABEL_32;
                }
                unint64_t v18 = v33[v14];
                ++v19;
                if (v18) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v14 = v19;
          }
        }
      }
LABEL_20:
      unint64_t v11 = (v18 - 1) & v18;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v7;
  return result;
}

uint64_t sub_1001A71B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100043478(&qword_100234878);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    if (!v8) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
    {
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * i);
      uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v4 + 40));
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) == 0)
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          BOOL v25 = v21 == v24;
          if (v21 == v24) {
            unint64_t v21 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v21);
          if (v26 != -1)
          {
            unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(void *)(*(void *)(v4 + 48) + 8 * v22) = v18;
      ++*(void *)(v4 + 16);
      if (v8) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v15 = v12 + 1;
      if (__OFADD__(v12, 1)) {
        goto LABEL_38;
      }
      if (v15 >= v9) {
        goto LABEL_32;
      }
      unint64_t v16 = v6[v15];
      ++v12;
      if (!v16)
      {
        int64_t v12 = v15 + 1;
        if (v15 + 1 >= v9) {
          goto LABEL_32;
        }
        unint64_t v16 = v6[v12];
        if (!v16)
        {
          int64_t v12 = v15 + 2;
          if (v15 + 2 >= v9) {
            goto LABEL_32;
          }
          unint64_t v16 = v6[v12];
          if (!v16)
          {
            int64_t v17 = v15 + 3;
            if (v17 >= v9)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v28;
              uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
              if (v27 > 63) {
                sub_1001A638C(0, (unint64_t)(v27 + 63) >> 6, (void *)(v2 + 56));
              }
              else {
                *uint64_t v6 = -1 << v27;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v16 = v6[v17];
            if (!v16)
            {
              while (1)
              {
                int64_t v12 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_39;
                }
                if (v12 >= v9) {
                  goto LABEL_32;
                }
                unint64_t v16 = v6[v12];
                ++v17;
                if (v16) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v12 = v17;
          }
        }
      }
LABEL_20:
      unint64_t v8 = (v16 - 1) & v16;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_1001A744C(uint64_t a1, void *a2)
{
  NSObject._rawHashValue(seed:)(a2[5]);
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

Swift::Int sub_1001A74D0(Swift::Int result, unint64_t a2, char a3)
{
  Swift::Int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_105;
  }
  if (a3)
  {
    sub_1001A6590();
  }
  else
  {
    if (v7 > v6)
    {
      unint64_t result = (Swift::Int)sub_1001A8448();
LABEL_105:
      uint64_t v59 = *v78;
      *(void *)(*v78 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      uint64_t v60 = *(void *)(v59 + 48) + 40 * a2;
      long long v61 = *(_OWORD *)(v5 + 16);
      *(_OWORD *)uint64_t v60 = *(_OWORD *)v5;
      *(_OWORD *)(v60 + 16) = v61;
      *(unsigned char *)(v60 + 32) = *(unsigned char *)(v5 + 32);
      uint64_t v62 = *(void *)(v59 + 16);
      BOOL v63 = __OFADD__(v62, 1);
      uint64_t v64 = v62 + 1;
      if (v63) {
        goto LABEL_108;
      }
      *(void *)(v59 + 16) = v64;
      return result;
    }
    sub_1001A8F58();
  }
  uint64_t v8 = *v3;
  Hasher.init(_seed:)();
  sub_100058B84();
  unint64_t result = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  uint64_t v10 = v8 + 56;
  if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
    goto LABEL_105;
  }
  uint64_t v11 = ~v9;
  uint64_t v12 = *(void *)v5;
  uint64_t v69 = v8;
  Swift::Int v70 = v5;
  uint64_t v67 = ~v9;
  uint64_t v68 = v8 + 56;
  uint64_t v66 = *(void *)v5;
  while (1)
  {
    uint64_t v13 = *(void *)(v8 + 48) + 40 * a2;
    uint64_t v14 = *(void *)(v13 + 8);
    __int16 v87 = *(_WORD *)(v13 + 16);
    int v85 = *(unsigned __int8 *)(v13 + 19);
    int v86 = *(unsigned __int8 *)(v13 + 18);
    uint64_t v15 = *(void *)(v13 + 24);
    char v84 = *(unsigned char *)(v13 + 32);
    swift_bridgeObjectRetain();
    uint64_t v16 = swift_bridgeObjectRetain();
    sub_1001A2710(v16, v12, v17, v18, v19, v20, v21, v22, v65, v66, v67);
    if ((v23 & 1) == 0)
    {
LABEL_62:
      swift_bridgeObjectRelease();
LABEL_63:
      unint64_t result = swift_bridgeObjectRelease();
      goto LABEL_64;
    }
    uint64_t v83 = v15;
    uint64_t v24 = *(void *)(v5 + 8);
    if (!v14)
    {
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
      __int16 v51 = v87;
      if (v24) {
        goto LABEL_64;
      }
      goto LABEL_70;
    }
    if (!v24) {
      goto LABEL_62;
    }
    uint64_t v25 = *(void *)(v14 + 16);
    if (v25 != *(void *)(v24 + 16)) {
      goto LABEL_62;
    }
    if (v25 && v14 != v24) {
      break;
    }
    swift_bridgeObjectRelease();
    unint64_t result = swift_bridgeObjectRelease();
LABEL_69:
    __int16 v51 = v87;
LABEL_70:
    unsigned int v52 = *(unsigned __int16 *)(v5 + 16);
    int v53 = *(_WORD *)(v5 + 16);
    if (v51 == 3)
    {
      if (v53 != 3) {
        goto LABEL_64;
      }
    }
    else
    {
      if (v53 == 3) {
        goto LABEL_64;
      }
      int v55 = *(_WORD *)(v5 + 16);
      if (v51 == 2)
      {
        if (v55 != 2) {
          goto LABEL_64;
        }
      }
      else if (v55 == 2 || ((((v51 & 1) == 0) ^ v52) & 1) == 0)
      {
        goto LABEL_64;
      }
      unsigned int v57 = v52 >> 8;
      if ((v51 & 0xFF00) == 0x200)
      {
        if (v57 != 2) {
          goto LABEL_64;
        }
      }
      else if (v57 == 2 || ((((v51 & 0x100) == 0) ^ ((unsigned __int16)(v52 & 0x100) >> 8)) & 1) == 0)
      {
        goto LABEL_64;
      }
    }
    int v54 = *(unsigned __int8 *)(v5 + 18);
    if (v86 == 2)
    {
      if (v54 != 2) {
        goto LABEL_64;
      }
    }
    else if (v54 == 2 || ((((v86 & 1) == 0) ^ v54) & 1) == 0)
    {
      goto LABEL_64;
    }
    int v56 = *(unsigned __int8 *)(v5 + 19);
    if (v85 == 2)
    {
      if (v56 == 2) {
        goto LABEL_93;
      }
    }
    else if (v56 != 2 && ((((v85 & 1) == 0) ^ v56) & 1) != 0)
    {
LABEL_93:
      char v58 = *(unsigned char *)(v5 + 32);
      if (v84)
      {
        if (*(unsigned char *)(v5 + 32)) {
          goto LABEL_109;
        }
      }
      else
      {
        if (v83 != *(void *)(v5 + 24)) {
          char v58 = 1;
        }
        if ((v58 & 1) == 0) {
          goto LABEL_109;
        }
      }
    }
LABEL_64:
    a2 = (a2 + 1) & v11;
    if (((*(void *)(v10 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
      goto LABEL_105;
    }
  }
  uint64_t v71 = *(void *)(v14 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v26 = 0;
  unint64_t v27 = 0;
  while (v27 < *(void *)(v24 + 16))
  {
    uint64_t v74 = v26;
    unint64_t v75 = v27;
    uint64_t v28 = *(void *)(v14 + v26 + 40);
    uint64_t v29 = *(void *)(v14 + v26 + 48);
    uint64_t v82 = *(void *)(v14 + v26 + 64);
    int v77 = *(unsigned __int8 *)(v14 + v26 + 73);
    int v76 = *(unsigned __int8 *)(v14 + v26 + 74);
    uint64_t v31 = *(void *)(v24 + v26 + 40);
    uint64_t v30 = *(void *)(v24 + v26 + 48);
    uint64_t v32 = *(void *)(v24 + v26 + 64);
    int v33 = *(unsigned __int8 *)(v24 + v26 + 74);
    int v80 = *(unsigned __int8 *)(v14 + v26 + 72);
    int v81 = *(unsigned __int8 *)(v24 + v26 + 73);
    int v79 = *(unsigned __int8 *)(v24 + v26 + 72);
    uint64_t v72 = *(void *)(v24 + v26 + 56);
    uint64_t v73 = *(void *)(v14 + v26 + 56);
    if (v28)
    {
      if (!v31
        || (*(void *)(v14 + v26 + 32) == *(void *)(v24 + v26 + 32) ? (BOOL v34 = v28 == v31) : (BOOL v34 = 0),
            !v34
         && (uint64_t v35 = *(void *)(v24 + v26 + 64),
             char v36 = _stringCompareWithSmolCheck(_:_:expecting:)(),
             uint64_t v32 = v35,
             (v36 & 1) == 0)))
      {
LABEL_79:
        swift_bridgeObjectRelease();
        goto LABEL_80;
      }
    }
    else if (v31)
    {
      goto LABEL_79;
    }
    if (v29)
    {
      if (!v30) {
        goto LABEL_79;
      }
      uint64_t v37 = v32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v38 = v82;
      swift_bridgeObjectRetain();
      sub_1001A3DA0(v29, v30, v39, v40, v41, v42, v43, v44, v65, v66);
      char v46 = v45;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v46 & 1) == 0)
      {
LABEL_30:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_80:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v8 = v69;
        Swift::Int v5 = v70;
        uint64_t v11 = v67;
        uint64_t v10 = v68;
        uint64_t v12 = v66;
        goto LABEL_63;
      }
    }
    else
    {
      if (v30) {
        goto LABEL_79;
      }
      uint64_t v37 = v32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v38 = v82;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    if (!v38)
    {
      if (v37) {
        goto LABEL_30;
      }
      swift_bridgeObjectRelease_n();
      goto LABEL_44;
    }
    if (!v37) {
      goto LABEL_30;
    }
    if (v73 == v72 && v38 == v37)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_44:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_45;
    }
    char v48 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v48 & 1) == 0) {
      goto LABEL_79;
    }
LABEL_45:
    if (v80 == 2)
    {
      uint64_t v49 = v71;
      int v50 = v81;
      if (v79 != 2) {
        goto LABEL_79;
      }
    }
    else
    {
      uint64_t v49 = v71;
      int v50 = v81;
      if (v79 == 2 || ((((v80 & 1) == 0) ^ v79) & 1) == 0) {
        goto LABEL_79;
      }
    }
    if (v77 == 2)
    {
      if (v50 != 2) {
        goto LABEL_79;
      }
    }
    else if (v50 == 2 || ((((v77 & 1) == 0) ^ v50) & 1) == 0)
    {
      goto LABEL_79;
    }
    if (v76 == 2)
    {
      if (v33 != 2) {
        goto LABEL_79;
      }
    }
    else if (v33 == 2 || ((((v76 & 1) == 0) ^ v33) & 1) == 0)
    {
      goto LABEL_79;
    }
    unint64_t v27 = v75 + 1;
    uint64_t v26 = v74 + 48;
    if (v49 == v75 + 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      unint64_t result = swift_bridgeObjectRelease();
      uint64_t v8 = v69;
      Swift::Int v5 = v70;
      uint64_t v11 = v67;
      uint64_t v10 = v68;
      uint64_t v12 = v66;
      goto LABEL_69;
    }
  }
  __break(1u);
LABEL_108:
  __break(1u);
LABEL_109:
  unint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1001A7C14(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_22;
  }
  if (a3)
  {
    sub_1001A686C();
  }
  else
  {
    if (v8 > v7)
    {
      unint64_t result = (uint64_t)sub_1001A8620();
LABEL_22:
      uint64_t v25 = *v4;
      *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(void *)(*(void *)(v25 + 48) + 8 * a2) = v6;
      uint64_t v26 = *(void *)(v25 + 16);
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (!v27)
      {
        *(void *)(v25 + 16) = v28;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_1001A9208();
  }
  uint64_t v9 = *v3;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v10 = Hasher._finalize()();
  unint64_t result = swift_bridgeObjectRelease();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;
  if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  unint64_t result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    uint64_t v18 = ~v11;
    do
    {
      a2 = (a2 + 1) & v18;
      if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_22;
      }
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v21 = v20;
      if (v19 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v21 == v22) {
        goto LABEL_25;
      }
      char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
    }
    while ((v24 & 1) == 0);
  }
LABEL_26:
  type metadata accessor for AMSAccountMediaType(0);
  unint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

Swift::Int sub_1001A7E44(Swift::Int result, Swift::Int a2, uint64_t a3, unint64_t a4, char a5)
{
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v5 + 16);
  unint64_t v10 = *(void *)(*v5 + 24);
  if (v10 > v9 && (a5 & 1) != 0) {
    goto LABEL_17;
  }
  if (a5)
  {
    sub_1001A6B7C();
  }
  else
  {
    if (v10 > v9)
    {
      unint64_t result = (Swift::Int)sub_1001A87CC();
      goto LABEL_17;
    }
    sub_1001A94E4();
  }
  uint64_t v11 = *v5;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10005E404((uint64_t)v26, a3);
  swift_bridgeObjectRelease();
  unint64_t result = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a4 = result & ~v12;
  if ((*(void *)(v11 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4))
  {
    uint64_t v13 = ~v12;
    do
    {
      uint64_t v14 = (void *)(*(void *)(v11 + 48) + 24 * a4);
      BOOL v15 = *v14 == v8 && v14[1] == a2;
      if (v15 || (unint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
      {
        swift_bridgeObjectRetain();
        uint64_t v16 = swift_bridgeObjectRetain();
        sub_1001A1F60(v16, a3);
        char v18 = v17;
        swift_bridgeObjectRelease();
        unint64_t result = swift_bridgeObjectRelease();
        if (v18) {
          goto LABEL_20;
        }
      }
      a4 = (a4 + 1) & v13;
    }
    while (((*(void *)(v11 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
  }
LABEL_17:
  uint64_t v19 = *v24;
  *(void *)(*v24 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  uint64_t v20 = (Swift::Int *)(*(void *)(v19 + 48) + 24 * a4);
  *uint64_t v20 = v8;
  v20[1] = a2;
  _OWORD v20[2] = a3;
  uint64_t v21 = *(void *)(v19 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (!v22)
  {
    *(void *)(v19 + 16) = v23;
    return result;
  }
  __break(1u);
LABEL_20:
  unint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1001A8038(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Treatment(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  uint64_t v27 = v9;
  if (v13 > v12 && (a3 & 1) != 0) {
    goto LABEL_18;
  }
  if (a3)
  {
    sub_1001A6E28();
  }
  else
  {
    if (v13 > v12)
    {
      sub_1001A8B5C();
      goto LABEL_18;
    }
    sub_1001A9774();
  }
  uint64_t v14 = *v4;
  Hasher.init(_seed:)();
  BOOL v15 = (void *)(a1 + *(int *)(v8 + 20));
  String.hash(into:)();
  Swift::Int v16 = Hasher._finalize()();
  uint64_t v17 = -1 << *(unsigned char *)(v14 + 32);
  a2 = v16 & ~v17;
  if ((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v18 = ~v17;
    uint64_t v19 = *(void *)(v9 + 72);
    do
    {
      sub_1001AAD48(*(void *)(v14 + 48) + v19 * a2, (uint64_t)v11, (void (*)(void))type metadata accessor for Treatment);
      if (static Date.== infix(_:_:)())
      {
        uint64_t v20 = &v11[*(int *)(v8 + 20)];
        BOOL v21 = *(void *)v20 == *v15 && *((void *)v20 + 1) == v15[1];
        if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)())
          && (static Date.== infix(_:_:)() & 1) != 0)
        {
          goto LABEL_21;
        }
      }
      sub_10005083C((uint64_t)v11, (void (*)(void))type metadata accessor for Treatment);
      a2 = (a2 + 1) & v18;
    }
    while (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_18:
  uint64_t v22 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_100050944(a1, *(void *)(v22 + 48) + *(void *)(v27 + 72) * a2);
  uint64_t v24 = *(void *)(v22 + 16);
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (!v25)
  {
    *(void *)(v22 + 16) = v26;
    return result;
  }
  __break(1u);
LABEL_21:
  sub_10005083C((uint64_t)v11, (void (*)(void))type metadata accessor for Treatment);
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_1001A82C0(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1001A71B0();
  }
  else
  {
    if (v7 > v6)
    {
      sub_1001A8DAC();
      goto LABEL_14;
    }
    sub_1001A9AD4();
  }
  uint64_t v8 = *v3;
  Swift::Int v9 = NSObject._rawHashValue(seed:)(*(void *)(*v3 + 40));
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_10004D510(0, &qword_100234570);
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = static NSObject.== infix(_:_:)();

    if (v12)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = static NSObject.== infix(_:_:)();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

void *sub_1001A8448()
{
  uint64_t v1 = v0;
  sub_100043478(&qword_100234858);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = 5 * i;
    uint64_t v21 = *(void *)(v2 + 48) + 8 * v20;
    uint64_t v23 = *(void *)v21;
    uint64_t v22 = *(void *)(v21 + 8);
    int v24 = *(_DWORD *)(v21 + 16);
    uint64_t v25 = *(void *)(v21 + 24);
    LOBYTE(v21) = *(unsigned char *)(v21 + 32);
    uint64_t v26 = *(void *)(v4 + 48) + 8 * v20;
    *(void *)uint64_t v26 = v23;
    *(void *)(v26 + 8) = v22;
    *(_DWORD *)(v26 + 16) = v24;
    *(void *)(v26 + 24) = v25;
    *(unsigned char *)(v26 + 32) = v21;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1001A8620()
{
  uint64_t v1 = v0;
  sub_100043478(&qword_100234890);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    *(void *)(*(void *)(v4 + 48) + 8 * i) = v20;
    id result = v20;
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1001A87CC()
{
  uint64_t v1 = v0;
  sub_100043478(&qword_1002348A0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = 3 * i;
    uint64_t v21 = *(void *)(v2 + 48) + 8 * v20;
    long long v22 = *(_OWORD *)(v21 + 8);
    uint64_t v23 = *(void *)(v4 + 48) + 8 * v20;
    *(void *)uint64_t v23 = *(void *)v21;
    *(_OWORD *)(v23 + 8) = v22;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1001A89A8()
{
  uint64_t v1 = v0;
  sub_100043478(&qword_100231680);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = (void *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v21 = v20[1];
    long long v22 = (void *)(*(void *)(v4 + 48) + 16 * i);
    *long long v22 = *v20;
    v22[1] = v21;
    id result = (void *)swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1001A8B5C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Treatment(0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  Swift::Int v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100043478(&qword_100234880);
  uint64_t v6 = *v0;
  uint64_t v7 = static _SetStorage.copy(original:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v8;
    return result;
  }
  id result = (void *)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11) {
    id result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  }
  int64_t v13 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v15 = *(void *)(v6 + 56);
  uint64_t v16 = -1;
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  unint64_t v17 = v16 & v15;
  int64_t v18 = (unint64_t)(v14 + 63) >> 6;
  if ((v16 & v15) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v19 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (unint64_t i = v19 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v13 << 6))
  {
    unint64_t v24 = *(void *)(v3 + 72) * i;
    sub_1001AAD48(*(void *)(v6 + 48) + v24, (uint64_t)v5, (void (*)(void))type metadata accessor for Treatment);
    id result = (void *)sub_100050944((uint64_t)v5, *(void *)(v8 + 48) + v24);
    if (v17) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v18) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v18) {
        goto LABEL_28;
      }
      unint64_t v22 = *(void *)(v10 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v18) {
          goto LABEL_28;
        }
        unint64_t v22 = *(void *)(v10 + 8 * v13);
        if (!v22) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v17 = (v22 - 1) & v22;
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v18) {
    goto LABEL_28;
  }
  unint64_t v22 = *(void *)(v10 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v18) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v10 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1001A8DAC()
{
  uint64_t v1 = v0;
  sub_100043478(&qword_100234878);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    *(void *)(*(void *)(v4 + 48) + 8 * i) = v20;
    id result = v20;
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1001A8F58()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100043478(&qword_100234858);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    uint64_t v18 = *(void *)(v2 + 48) + 40 * i;
    char v19 = *(unsigned char *)(v18 + 32);
    long long v20 = *(_OWORD *)(v18 + 16);
    long long v32 = *(_OWORD *)v18;
    long long v33 = v20;
    char v34 = v19;
    Hasher.init(_seed:)();
    sub_1001AA93C((uint64_t)&v32);
    sub_100058B84();
    uint64_t result = Hasher._finalize()();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) == 0)
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      while (++v23 != v26 || (v25 & 1) == 0)
      {
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v10 + 8 * v23);
        if (v28 != -1)
        {
          unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v10 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    uint64_t v29 = *(void *)(v4 + 48) + 40 * v24;
    long long v30 = v32;
    long long v31 = v33;
    *(unsigned char *)(v29 + 32) = v34;
    *(_OWORD *)uint64_t v29 = v30;
    *(_OWORD *)(v29 + 16) = v31;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_36;
    }
    if (v15 >= v9) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v12;
    if (!v16)
    {
      int64_t v12 = v15 + 1;
      if (v15 + 1 >= v9) {
        goto LABEL_32;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v12);
      if (!v16)
      {
        int64_t v12 = v15 + 2;
        if (v15 + 2 >= v9) {
          goto LABEL_32;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v12);
        if (!v16) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v16 - 1) & v16;
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v9)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v12 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1001A9208()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100043478(&qword_100234890);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  BOOL v27 = v0;
  uint64_t v28 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  if (!v7) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    unint64_t v16 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    id v17 = v16;
    String.hash(into:)();
    Swift::Int v18 = Hasher._finalize()();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = v18 & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6))) == 0)
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v8 + 8 * v21);
        if (v26 != -1)
        {
          unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v8 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(void *)(*(void *)(v4 + 48) + 8 * v22) = v17;
    ++*(void *)(v4 + 16);
    if (v7) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_36;
    }
    if (v13 >= v29) {
      goto LABEL_32;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v29) {
        goto LABEL_32;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v29) {
          goto LABEL_32;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v10);
        if (!v14) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v7 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v29)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v27;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v29) {
      goto LABEL_32;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_1001A94E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100043478(&qword_1002348A0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    unint64_t result = swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v20 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  unint64_t result = swift_retain();
  int64_t v11 = 0;
  if (!v7) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    uint64_t v17 = *(void *)(v2 + 48) + 24 * i;
    uint64_t v18 = *(void *)v17;
    long long v21 = *(_OWORD *)(v17 + 8);
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_10005E404((uint64_t)v22, *((uint64_t *)&v21 + 1));
    swift_bridgeObjectRelease();
    Hasher._finalize()();
    unint64_t result = _HashTable.nextHole(atOrAfter:)();
    *(void *)(v9 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v19 = *(void *)(v4 + 48) + 24 * result;
    *(void *)uint64_t v19 = v18;
    *(_OWORD *)(v19 + 8) = v21;
    ++*(void *)(v4 + 16);
    if (v7) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v20 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v20 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v20 + 8 * v11);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v7 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    uint64_t v1 = v0;
    goto LABEL_24;
  }
  unint64_t v15 = *(void *)(v20 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v20 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1001A9774()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Treatment(0);
  uint64_t v33 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_100043478(&qword_100234880);
  uint64_t v6 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 56);
  long long v30 = v0;
  uint64_t v31 = v5 + 56;
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  int64_t v32 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  if (!v11) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v15 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v15 | (v14 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v14 << 6))
  {
    uint64_t v20 = *(void *)(v33 + 72);
    sub_1001AAD48(*(void *)(v5 + 48) + v20 * i, (uint64_t)v4, (void (*)(void))type metadata accessor for Treatment);
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v21 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6))) == 0)
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      while (++v23 != v26 || (v25 & 1) == 0)
      {
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v23);
        if (v28 != -1)
        {
          unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    uint64_t result = sub_100050944((uint64_t)v4, *(void *)(v7 + 48) + v24 * v20);
    ++*(void *)(v7 + 16);
    if (v11) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v17 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      goto LABEL_36;
    }
    if (v17 >= v32) {
      goto LABEL_32;
    }
    unint64_t v18 = *(void *)(v31 + 8 * v17);
    ++v14;
    if (!v18)
    {
      int64_t v14 = v17 + 1;
      if (v17 + 1 >= v32) {
        goto LABEL_32;
      }
      unint64_t v18 = *(void *)(v31 + 8 * v14);
      if (!v18)
      {
        int64_t v14 = v17 + 2;
        if (v17 + 2 >= v32) {
          goto LABEL_32;
        }
        unint64_t v18 = *(void *)(v31 + 8 * v14);
        if (!v18) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v32)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v30;
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v31 + 8 * v19);
  if (v18)
  {
    int64_t v14 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v14 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v14 >= v32) {
      goto LABEL_32;
    }
    unint64_t v18 = *(void *)(v31 + 8 * v14);
    ++v19;
    if (v18) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1001A9AD4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100043478(&qword_100234878);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v28 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    Swift::Int v18 = *(void *)(v4 + 40);
    id v19 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    uint64_t result = NSObject._rawHashValue(seed:)(v18);
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) == 0)
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v22);
        if (v27 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v10 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(void *)(*(void *)(v4 + 48) + 8 * v23) = v19;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_36;
    }
    if (v15 >= v9) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v12;
    if (!v16)
    {
      int64_t v12 = v15 + 1;
      if (v15 + 1 >= v9) {
        goto LABEL_32;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v12);
      if (!v16)
      {
        int64_t v12 = v15 + 2;
        if (v15 + 2 >= v9) {
          goto LABEL_32;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v12);
        if (!v16) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v16 - 1) & v16;
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v9)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v28;
    goto LABEL_34;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v12 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_1001A9D4C()
{
  sub_100047408();
  uint64_t v1 = v0;
  if (!*(void *)(v0 + 16)
    || (sub_100043478(&qword_100231680),
        uint64_t v2 = static _SetStorage.allocate(capacity:)(),
        uint64_t v3 = v2,
        (uint64_t v25 = *(void *)(v1 + 16)) == 0))
  {
LABEL_23:
    swift_bridgeObjectRelease();
    sub_10004CFCC();
    return;
  }
  unint64_t v4 = 0;
  uint64_t v5 = v2 + 56;
  while (v4 < *(void *)(v1 + 16))
  {
    uint64_t v6 = (uint64_t *)(v1 + 32 + 16 * v4);
    uint64_t v8 = *v6;
    uint64_t v7 = v6[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    sub_100052544();
    Swift::Int v9 = Hasher._finalize()();
    uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v11 = v9 & ~v10;
    unint64_t v12 = v11 >> 6;
    uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
    uint64_t v14 = 1 << v11;
    if (((1 << v11) & v13) != 0)
    {
      uint64_t v15 = *(void *)(v3 + 48);
      sub_100049F2C(v15 + 16 * v11);
      BOOL v17 = v17 && v16 == v7;
      if (v17 || (sub_10004B638() & 1) != 0)
      {
LABEL_11:
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
      uint64_t v18 = ~v10;
      while (1)
      {
        unint64_t v11 = (v11 + 1) & v18;
        unint64_t v12 = v11 >> 6;
        uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
        uint64_t v14 = 1 << v11;
        if ((v13 & (1 << v11)) == 0) {
          break;
        }
        sub_100049F2C(v15 + 16 * v11);
        BOOL v20 = v17 && v19 == v7;
        if (v20 || (sub_10004B638() & 1) != 0) {
          goto LABEL_11;
        }
      }
    }
    *(void *)(v5 + 8 * v12) = v14 | v13;
    unint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
    *unint64_t v21 = v8;
    v21[1] = v7;
    uint64_t v22 = *(void *)(v3 + 16);
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_25;
    }
    *(void *)(v3 + 16) = v24;
LABEL_22:
    if (++v4 == v25) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
}

uint64_t sub_1001A9ED8(uint64_t a1)
{
  uint64_t v1 = a1;
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptySetSingleton;
    goto LABEL_109;
  }
  sub_100043478(&qword_100234858);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  uint64_t v3 = (unsigned char *)result;
  uint64_t v65 = *(void *)(v1 + 16);
  if (!v65)
  {
LABEL_109:
    swift_bridgeObjectRelease();
    return (uint64_t)v3;
  }
  unint64_t v4 = 0;
  uint64_t v5 = result + 56;
  uint64_t v64 = v1 + 32;
  uint64_t v59 = v1;
  uint64_t v61 = result + 56;
  uint64_t v62 = (unsigned char *)result;
LABEL_4:
  if (v4 >= *(void *)(v1 + 16)) {
    goto LABEL_111;
  }
  uint64_t v6 = (long long *)(v64 + 40 * v4);
  long long v7 = v6[1];
  long long v90 = *v6;
  long long v91 = v7;
  char v92 = *((unsigned char *)v6 + 32);
  Hasher.init(_seed:)();
  sub_1001AA93C((uint64_t)&v90);
  sub_100058B84();
  uint64_t result = Hasher._finalize()();
  uint64_t v8 = -1 << v3[32];
  unint64_t v9 = result & ~v8;
  unint64_t v10 = v9 >> 6;
  uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
  uint64_t v12 = 1 << v9;
  if (((1 << v9) & v11) == 0) {
    goto LABEL_103;
  }
  unint64_t v67 = v4;
  uint64_t v13 = ~v8;
  uint64_t v60 = *((void *)&v91 + 1);
  char v63 = v92;
  int v66 = BYTE3(v91);
  uint64_t v14 = *((void *)&v90 + 1);
  uint64_t v88 = v90;
  unsigned int v68 = (unsigned __int16)v91;
  int v69 = BYTE2(v91);
  int v74 = v91;
  uint64_t v72 = *((void *)&v90 + 1);
  uint64_t v73 = ~v8;
  do
  {
    uint64_t v15 = *((void *)v3 + 6) + 40 * v9;
    uint64_t v16 = *(void *)(v15 + 8);
    __int16 v17 = *(_WORD *)(v15 + 16);
    int v89 = *(unsigned __int8 *)(v15 + 18);
    uint64_t v85 = *(void *)(v15 + 24);
    char v86 = *(unsigned char *)(v15 + 32);
    int v87 = *(unsigned __int8 *)(v15 + 19);
    swift_bridgeObjectRetain();
    uint64_t v18 = swift_bridgeObjectRetain();
    sub_1001A2710(v18, v88, v19, v20, v21, v22, v23, v24, v59, v60, v61);
    if ((v25 & 1) == 0) {
      goto LABEL_99;
    }
    if (!v16)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_100;
      }
      goto LABEL_62;
    }
    if (!v14) {
      goto LABEL_99;
    }
    uint64_t v26 = *(void *)(v16 + 16);
    if (v26 != *(void *)(v14 + 16)) {
      goto LABEL_99;
    }
    if (!v26 || v16 == v14)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
LABEL_62:
      if (v17 == 3)
      {
        if (v74 != 3) {
          goto LABEL_100;
        }
      }
      else
      {
        if (v74 == 3) {
          goto LABEL_100;
        }
        if (v17 == 2)
        {
          if (v74 != 2) {
            goto LABEL_100;
          }
        }
        else if (v74 == 2 || ((v68 ^ ((v17 & 1) == 0)) & 1) == 0)
        {
          goto LABEL_100;
        }
        unsigned int v51 = v68 >> 8;
        if ((v17 & 0xFF00) == 0x200)
        {
          if (v51 != 2) {
            goto LABEL_100;
          }
        }
        else if (v51 == 2 || ((((v17 & 0x100) == 0) ^ ((unsigned __int16)(v68 & 0x100) >> 8)) & 1) == 0)
        {
          goto LABEL_100;
        }
      }
      if (v89 == 2)
      {
        if (v69 != 2) {
          goto LABEL_100;
        }
      }
      else if (v69 == 2 || ((v69 ^ ((v89 & 1) == 0)) & 1) == 0)
      {
        goto LABEL_100;
      }
      if (v87 == 2)
      {
        if (v66 != 2) {
          goto LABEL_100;
        }
      }
      else if (v66 == 2 || ((v66 ^ ((v87 & 1) == 0)) & 1) == 0)
      {
        goto LABEL_100;
      }
      if (v86)
      {
        if ((v63 & 1) == 0) {
          goto LABEL_100;
        }
      }
      else
      {
        char v52 = v63;
        if (v85 != v60) {
          char v52 = 1;
        }
        if (v52) {
          goto LABEL_100;
        }
      }
      uint64_t result = sub_1001AA970((uint64_t)&v90);
      uint64_t v1 = v59;
      unint64_t v4 = v67;
LABEL_105:
      if (++v4 == v65) {
        goto LABEL_109;
      }
      goto LABEL_4;
    }
    uint64_t v70 = *(void *)(v16 + 16);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v27 = 0;
    unint64_t v28 = 0;
    __int16 v71 = v17;
    while (1)
    {
      if (v28 >= *(void *)(v14 + 16))
      {
        __break(1u);
LABEL_111:
        __break(1u);
        goto LABEL_112;
      }
      uint64_t v29 = *(void *)(v16 + v27 + 40);
      uint64_t v83 = *(void *)(v16 + v27 + 64);
      uint64_t v84 = *(void *)(v16 + v27 + 48);
      int v30 = *(unsigned __int8 *)(v16 + v27 + 73);
      uint64_t v31 = v14;
      uint64_t v32 = v14 + v27;
      uint64_t v33 = *(void *)(v14 + v27 + 40);
      uint64_t v34 = *(void *)(v32 + 48);
      uint64_t v35 = *(void *)(v32 + 64);
      int v78 = *(unsigned __int8 *)(v32 + 74);
      int v79 = *(unsigned __int8 *)(v16 + v27 + 74);
      int v80 = *(unsigned __int8 *)(v32 + 73);
      int v81 = *(unsigned __int8 *)(v32 + 72);
      int v82 = *(unsigned __int8 *)(v16 + v27 + 72);
      uint64_t v76 = *(void *)(v16 + v27 + 56);
      unint64_t v77 = v28;
      uint64_t v75 = *(void *)(v32 + 56);
      if (v29)
      {
        if (!v33
          || (*(void *)(v16 + v27 + 32) == *(void *)(v32 + 32) ? (BOOL v36 = v29 == v33) : (BOOL v36 = 0),
              !v36
           && (uint64_t v37 = *(void *)(v32 + 64),
               char v38 = _stringCompareWithSmolCheck(_:_:expecting:)(),
               uint64_t v35 = v37,
               (v38 & 1) == 0)))
        {
LABEL_87:
          swift_bridgeObjectRelease();
          uint64_t v14 = v31;
          goto LABEL_98;
        }
      }
      else if (v33)
      {
        goto LABEL_87;
      }
      if (v84) {
        break;
      }
      if (v34) {
        goto LABEL_87;
      }
      uint64_t v39 = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v40 = v83;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_30:
      if (!v40)
      {
        if (v39) {
          goto LABEL_97;
        }
        swift_bridgeObjectRelease_n();
        goto LABEL_41;
      }
      if (!v39) {
        goto LABEL_97;
      }
      if (v76 == v75 && v40 == v39)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_41:
        __int16 v17 = v71;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v13 = v73;
        goto LABEL_42;
      }
      char v50 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v13 = v73;
      __int16 v17 = v71;
      if ((v50 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v14 = v72;
        swift_bridgeObjectRelease();
        uint64_t v5 = v61;
        uint64_t v3 = v62;
        goto LABEL_99;
      }
LABEL_42:
      if (v82 == 2)
      {
        if (v81 != 2) {
          goto LABEL_91;
        }
      }
      else if (v81 == 2 || ((((v82 & 1) == 0) ^ v81) & 1) == 0)
      {
LABEL_91:
        swift_bridgeObjectRelease();
        uint64_t v14 = v72;
        goto LABEL_92;
      }
      uint64_t v14 = v72;
      if (v30 != 2)
      {
        if (v80 != 2 && ((((v30 & 1) == 0) ^ v80) & 1) != 0) {
          goto LABEL_52;
        }
LABEL_81:
        swift_bridgeObjectRelease();
LABEL_92:
        swift_bridgeObjectRelease();
        uint64_t v5 = v61;
        uint64_t v3 = v62;
        goto LABEL_99;
      }
      if (v80 != 2) {
        goto LABEL_81;
      }
LABEL_52:
      if (v79 == 2)
      {
        if (v78 != 2) {
          goto LABEL_81;
        }
      }
      else if (v78 == 2 || ((((v79 & 1) == 0) ^ v78) & 1) == 0)
      {
        goto LABEL_81;
      }
      unint64_t v28 = v77 + 1;
      v27 += 48;
      if (v70 == v77 + 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v5 = v61;
        uint64_t v3 = v62;
        goto LABEL_62;
      }
    }
    if (!v34) {
      goto LABEL_87;
    }
    uint64_t v39 = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v40 = v83;
    swift_bridgeObjectRetain();
    sub_1001A3DA0(v84, v34, v41, v42, v43, v44, v45, v46, v59, v60);
    char v48 = v47;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v48) {
      goto LABEL_30;
    }
LABEL_97:
    swift_bridgeObjectRelease();
    uint64_t v14 = v72;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_98:
    swift_bridgeObjectRelease();
    uint64_t v5 = v61;
    uint64_t v3 = v62;
    uint64_t v13 = v73;
LABEL_99:
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
LABEL_100:
    unint64_t v9 = (v9 + 1) & v13;
    unint64_t v10 = v9 >> 6;
    uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
    uint64_t v12 = 1 << v9;
  }
  while ((v11 & (1 << v9)) != 0);
  uint64_t v1 = v59;
  unint64_t v4 = v67;
LABEL_103:
  *(void *)(v5 + 8 * v10) = v12 | v11;
  uint64_t v53 = *((void *)v3 + 6) + 40 * v9;
  long long v54 = v90;
  long long v55 = v91;
  *(unsigned char *)(v53 + 32) = v92;
  *(_OWORD *)uint64_t v53 = v54;
  *(_OWORD *)(v53 + 16) = v55;
  uint64_t v56 = *((void *)v3 + 2);
  BOOL v57 = __OFADD__(v56, 1);
  uint64_t v58 = v56 + 1;
  if (!v57)
  {
    *((void *)v3 + 2) = v58;
    goto LABEL_105;
  }
LABEL_112:
  __break(1u);
  return result;
}

uint64_t sub_1001AA720(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptySetSingleton;
    goto LABEL_25;
  }
  sub_100043478(&qword_100234870);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  uint64_t v3 = (unsigned char *)result;
  uint64_t v24 = *(void *)(a1 + 16);
  if (!v24)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return (uint64_t)v3;
  }
  unint64_t v4 = 0;
  uint64_t v5 = result + 56;
  while (v4 < *(void *)(a1 + 16))
  {
    uint64_t v6 = (uint64_t *)(a1 + 32 + 16 * v4);
    uint64_t v8 = *v6;
    uint64_t v7 = v6[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain_n();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    uint64_t result = Hasher._finalize()();
    uint64_t v9 = -1 << v3[32];
    unint64_t v10 = result & ~v9;
    unint64_t v11 = v10 >> 6;
    uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
    uint64_t v13 = 1 << v10;
    if (((1 << v10) & v12) != 0)
    {
      uint64_t v14 = *((void *)v3 + 6);
      uint64_t v15 = (void *)(v14 + 16 * v10);
      BOOL v16 = *v15 == v8 && v15[1] == v7;
      if (v16 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
      {
LABEL_11:
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_22;
      }
      uint64_t v17 = ~v9;
      while (1)
      {
        unint64_t v10 = (v10 + 1) & v17;
        unint64_t v11 = v10 >> 6;
        uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
        uint64_t v13 = 1 << v10;
        if ((v12 & (1 << v10)) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * v10);
        if (*v18 != v8 || v18[1] != v7)
        {
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_11;
      }
    }
    *(void *)(v5 + 8 * v11) = v13 | v12;
    uint64_t v20 = (void *)(*((void *)v3 + 6) + 16 * v10);
    *uint64_t v20 = v8;
    v20[1] = v7;
    uint64_t v21 = *((void *)v3 + 2);
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_27;
    }
    *((void *)v3 + 2) = v23;
LABEL_22:
    if (++v4 == v24) {
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1001AA900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  *a4 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v6 = v7;
  a4[1] = result;
  a4[2] = ~v4;
  if (-v4 < 64) {
    uint64_t v8 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v8 = -1;
  }
  a4[3] = 0;
  a4[4] = v8 & v6;
  a4[5] = a2;
  a4[6] = a3;
  return result;
}

uint64_t sub_1001AA93C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001AA970(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001AA9AC()
{
  void (*v11)(uint64_t *__return_ptr, void *);
  uint64_t result;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  void v20[3];

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    uint64_t v7 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v6);
    uint64_t v8 = *v7;
    uint64_t v9 = v7[1];
    uint64_t v10 = *(void *)(*(void *)(v1 + 56) + 8 * v6);
    v0[3] = v4;
    v0[4] = v5;
    unint64_t v11 = (void (*)(uint64_t *__return_ptr, void *))v0[5];
    v20[0] = v8;
    v20[1] = v9;
    _OWORD v20[2] = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(&v19, v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v19;
  }
  uint64_t v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = (unint64_t)(v0[2] + 64) >> 6;
    if (v13 < v14)
    {
      uint64_t v15 = v0[1];
      BOOL v16 = *(void *)(v15 + 8 * v13);
      if (v16)
      {
LABEL_7:
        uint64_t v5 = (v16 - 1) & v16;
        unint64_t v6 = __clz(__rbit64(v16)) + (v13 << 6);
        int64_t v4 = v13;
        goto LABEL_3;
      }
      uint64_t v17 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v14)
      {
        BOOL v16 = *(void *)(v15 + 8 * v17);
        if (v16)
        {
LABEL_10:
          uint64_t v13 = v17;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v14)
        {
          BOOL v16 = *(void *)(v15 + 8 * (v3 + 3));
          if (v16)
          {
            uint64_t v13 = v3 + 3;
            goto LABEL_7;
          }
          uint64_t v17 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v14)
          {
            BOOL v16 = *(void *)(v15 + 8 * v17);
            if (v16) {
              goto LABEL_10;
            }
            uint64_t v13 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v14)
            {
              BOOL v16 = *(void *)(v15 + 8 * v13);
              if (v16) {
                goto LABEL_7;
              }
              int64_t v4 = v14 - 1;
              uint64_t v18 = v3 + 6;
              while (v18 < v14)
              {
                BOOL v16 = *(void *)(v15 + 8 * v18++);
                if (v16)
                {
                  uint64_t v13 = v18 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    uint64_t result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

uint64_t destroy for DataEncoding.AASAEncodingError()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_errorRelease();
}

uint64_t initializeWithCopy for DataEncoding.AASAEncodingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  *(void *)(a1 + 24) = v4;
  return a1;
}

uint64_t assignWithCopy for DataEncoding.AASAEncodingError(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  swift_errorRetain();
  *(void *)(a1 + 24) = v4;
  swift_errorRelease();
  return a1;
}

uint64_t assignWithTake for DataEncoding.AASAEncodingError(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_errorRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DataEncoding.AASAEncodingError(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DataEncoding.AASAEncodingError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DataEncoding.AASAEncodingError()
{
  return &type metadata for DataEncoding.AASAEncodingError;
}

uint64_t sub_1001AAD48(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100043B1C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1001AADA8()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

id sub_1001AADE4()
{
  uint64_t v4 = *(void **)(*(void *)(*(void *)v1 + 48) + 8 * v2);
  void *v0 = v4;
  return v4;
}

uint64_t sub_1001AAE04()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

id sub_1001AAE24()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UniversalLinksService();
  return objc_msgSendSuper2(&v2, "init");
}

id sub_1001AAE7C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UniversalLinksService();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for UniversalLinksService()
{
  return self;
}

void sub_1001AAED4(uint64_t a1, const void *a2)
{
  uint64_t v3 = (void *)type metadata accessor for UniversalLinksUpdater();
  sub_1001ABE34(v3, a2);
}

void sub_1001AAF10(char a1, uint64_t a2, void (*a3)(id, uint64_t))
{
  if (a2)
  {
    swift_errorRetain();
    a3(0, a2);
    swift_errorRelease();
  }
  else
  {
    id v6 = [objc_allocWithZone((Class)AMSUniversalLinksUpdateResult) init];
    [v6 setSuccess:a1 & 1];
    id v7 = v6;
    a3(v6, 0);
  }
}

void sub_1001AB054(void *a1)
{
  uint64_t v4 = sub_10004B654(__stack_chk_guard);
  __chkstk_darwin(v4 - 8);
  sub_100022558();
  sub_10004D510(0, (unint64_t *)&qword_100232020);
  id v5 = sub_100045068();
  NSString v6 = sub_100049044();
  id v7 = [v5 dictionaryForKey:v6];

  aBlock[0] = 0;
  id v8 = [v7 valueWithError:aBlock];

  if (v8)
  {
    sub_100043478(&qword_100234970);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1001C3110;
    *(void *)(v9 + 56) = &type metadata for String;
    *(void *)(v9 + 32) = v2;
    *(void *)(v9 + 40) = v1;
    uint64_t v10 = sub_10004D510(0, &qword_1002314F0);
    sub_100042258(v10);
    id v11 = v8;
    uint64_t v12 = NSDictionary.init(dictionaryLiteral:)();
    id v13 = sub_1001AC754((uint64_t)v12);
    sub_1001A1114((uint64_t)v13);
    sub_100040BA8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001A1ADC();
    uint64_t v15 = v14;
    char v17 = v16;
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      sub_100040DA8(v2);
      self;
      Class isa = Set._bridgeToObjectiveC()().super.isa;
      Class v19 = Dictionary._bridgeToObjectiveC()().super.isa;
      uint64_t v20 = (void *)swift_allocObject();
      _OWORD v20[2] = a1;
      void v20[3] = nullsub_1;
      void v20[4] = 0;
      uint64_t v44 = sub_1001AD038;
      uint64_t v45 = v20;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = (id)1107296256;
      aBlock[2] = sub_10016D7B4;
      uint64_t v43 = &unk_100218A10;
      uint64_t v21 = _Block_copy(aBlock);
      uint64_t v22 = swift_release();
      sub_100047604(v22, "setAdditionalServiceDetailsForApplicationIdentifiers:usingContentsOfDictionary:completionHandler:");
      swift_bridgeObjectRelease();

      sub_1001ACF50(v15, 0);
      _Block_release(v21);

      return;
    }
    swift_bridgeObjectRelease();
    sub_100040DA8(v2);
    sub_100043478(&qword_10022E560);
    uint64_t v36 = sub_10002D318();
    sub_100044798(v36);
    *(_OWORD *)(sub_10002134C() + 16) = xmmword_1001C3130;
    uint64_t v43 = (void *)sub_100043478(&qword_100234968);
    aBlock[0] = a1;
    swift_errorRetain();
    if ((id)AMSLogKey())
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_10004A694();
      swift_bridgeObjectRetain();
      sub_10004ADD8();
      sub_1000448B8();
      sub_1000420D0();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_100046A48(MetatypeMetadata);
      sub_1000423CC((uint64_t)v46);
      sub_100020E44();
      sub_100020C64((uint64_t)&type metadata for String);
      sub_1000423CC((uint64_t)v46);
      sub_1000208D8();
      sub_100041050();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10004DF34();
      sub_1000448B8();
      sub_1000420D0();
      uint64_t v38 = swift_getMetatypeMetadata();
      sub_100046A48(v38);
      sub_1000423CC((uint64_t)v46);
      sub_100020E94();
      sub_100041050();
    }
    sub_10004377C((uint64_t)aBlock);
    sub_100047424();
    sub_10002D4DC();
    sub_1000478E0();
    sub_1000459F8();
    sub_1000460F8();
    v39();
    sub_1000516D8();
    sub_1000423CC((uint64_t)aBlock);
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v40 = static os_log_type_t.error.getter();
    sub_10004841C(v40);
    swift_bridgeObjectRelease();
    swift_errorRetain();

    sub_10004C94C();
    swift_errorRelease();
  }
  else
  {
    id v23 = aBlock[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_100043478(&qword_10022E560);
    uint64_t v24 = sub_10002D318();
    sub_100044798(v24);
    char v25 = (__n128 *)sub_100049BF8();
    sub_100045CA0(v25, (__n128)xmmword_1001C3130);
    uint64_t v43 = (void *)sub_100043478(&qword_100234968);
    aBlock[0] = a1;
    id v26 = (id)AMSLogKey();
    if (v26)
    {
      uint64_t v27 = v26;
      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v30 = v29;

      swift_bridgeObjectRetain();
      sub_10004ADD8();
      sub_1000448B8();
      sub_1000420D0();
      uint64_t v31 = swift_getMetatypeMetadata();
      sub_100046A48(v31);
      sub_1000423CC((uint64_t)v46);
      sub_100020E44();
      void v46[3] = &type metadata for String;
      v46[0] = v28;
      v46[1] = v30;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v46);
      sub_1000208D8();
      sub_1000439F4();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10004DF34();
      sub_1000448B8();
      sub_1000420D0();
      uint64_t v32 = swift_getMetatypeMetadata();
      sub_100046A48(v32);
      sub_1000423CC((uint64_t)v46);
      sub_100020E94();
      sub_1000439F4();
    }
    sub_10004377C((uint64_t)aBlock);
    sub_100046F4C();
    LogMessage.init(stringLiteral:)();
    sub_10004A45C();
    uint64_t v43 = v41;
    sub_10003BAA4((uint64_t *)aBlock);
    sub_100047798();
    v33();
    sub_1000516D8();
    sub_1000423CC((uint64_t)aBlock);
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v34 = static os_log_type_t.error.getter();
    sub_10004841C(v34);
    swift_bridgeObjectRelease();
    uint64_t v35 = (void *)_convertErrorToNSError(_:)();
  }
  swift_errorRelease();
}

void sub_1001AB744(void *a1)
{
  uint64_t v4 = sub_10004B654(__stack_chk_guard);
  __chkstk_darwin(v4 - 8);
  sub_100022558();
  sub_10004D510(0, (unint64_t *)&qword_100232020);
  id v5 = sub_100045068();
  NSString v6 = sub_100049044();
  id v7 = [v5 dictionaryForKey:v6];

  aBlock[0] = 0;
  id v8 = [v7 valueWithError:aBlock];

  if (v8)
  {
    sub_100043478(&qword_100234970);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1001C3110;
    *(void *)(v9 + 56) = &type metadata for String;
    *(void *)(v9 + 32) = v2;
    *(void *)(v9 + 40) = v1;
    uint64_t v10 = sub_10004D510(0, &qword_1002314F0);
    sub_100042258(v10);
    id v11 = v8;
    uint64_t v12 = NSDictionary.init(dictionaryLiteral:)();
    id v13 = sub_1001AC754((uint64_t)v12);
    sub_1001A1114((uint64_t)v13);
    sub_100040BA8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001A1ADC();
    uint64_t v15 = v14;
    char v17 = v16;
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      sub_100040DA8(v2);
      self;
      Class isa = Set._bridgeToObjectiveC()().super.isa;
      Class v19 = Dictionary._bridgeToObjectiveC()().super.isa;
      uint64_t v20 = (void *)swift_allocObject();
      _OWORD v20[2] = a1;
      void v20[3] = nullsub_1;
      void v20[4] = 0;
      uint64_t v44 = sub_1001ACF44;
      uint64_t v45 = v20;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = (id)1107296256;
      aBlock[2] = sub_10016D7B4;
      uint64_t v43 = &unk_100218920;
      uint64_t v21 = _Block_copy(aBlock);
      uint64_t v22 = swift_release();
      sub_100047604(v22, "setAdditionalServiceDetailsForApplicationIdentifiers:usingContentsOfDictionary:completionHandler:");
      swift_bridgeObjectRelease();

      sub_1001ACF50(v15, 0);
      _Block_release(v21);

      return;
    }
    swift_bridgeObjectRelease();
    sub_100040DA8(v2);
    sub_100043478(&qword_10022E560);
    uint64_t v36 = sub_10002D318();
    sub_100044798(v36);
    *(_OWORD *)(sub_10002134C() + 16) = xmmword_1001C3130;
    uint64_t v43 = (void *)sub_100043478(&qword_100234968);
    aBlock[0] = a1;
    swift_errorRetain();
    if ((id)AMSLogKey())
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_10004A694();
      swift_bridgeObjectRetain();
      sub_10004ADD8();
      sub_1000448B8();
      sub_1000420D0();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_100046A48(MetatypeMetadata);
      sub_1000423CC((uint64_t)v46);
      sub_100020E44();
      sub_100020C64((uint64_t)&type metadata for String);
      sub_1000423CC((uint64_t)v46);
      sub_1000208D8();
      sub_100041050();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10004DF34();
      sub_1000448B8();
      sub_1000420D0();
      uint64_t v38 = swift_getMetatypeMetadata();
      sub_100046A48(v38);
      sub_1000423CC((uint64_t)v46);
      sub_100020E94();
      sub_100041050();
    }
    sub_10004377C((uint64_t)aBlock);
    sub_100047424();
    sub_10002D4DC();
    sub_1000478E0();
    sub_1000459F8();
    sub_1000460F8();
    v39();
    sub_1000516D8();
    sub_1000423CC((uint64_t)aBlock);
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v40 = static os_log_type_t.error.getter();
    sub_10004841C(v40);
    swift_bridgeObjectRelease();
    swift_errorRetain();

    sub_10004C94C();
    swift_errorRelease();
  }
  else
  {
    id v23 = aBlock[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_100043478(&qword_10022E560);
    uint64_t v24 = sub_10002D318();
    sub_100044798(v24);
    char v25 = (__n128 *)sub_100049BF8();
    sub_100045CA0(v25, (__n128)xmmword_1001C3130);
    uint64_t v43 = (void *)sub_100043478(&qword_100234968);
    aBlock[0] = a1;
    id v26 = (id)AMSLogKey();
    if (v26)
    {
      uint64_t v27 = v26;
      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v30 = v29;

      swift_bridgeObjectRetain();
      sub_10004ADD8();
      sub_1000448B8();
      sub_1000420D0();
      uint64_t v31 = swift_getMetatypeMetadata();
      sub_100046A48(v31);
      sub_1000423CC((uint64_t)v46);
      sub_100020E44();
      void v46[3] = &type metadata for String;
      v46[0] = v28;
      v46[1] = v30;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v46);
      sub_1000208D8();
      sub_1000439F4();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10004DF34();
      sub_1000448B8();
      sub_1000420D0();
      uint64_t v32 = swift_getMetatypeMetadata();
      sub_100046A48(v32);
      sub_1000423CC((uint64_t)v46);
      sub_100020E94();
      sub_1000439F4();
    }
    sub_10004377C((uint64_t)aBlock);
    sub_100046F4C();
    LogMessage.init(stringLiteral:)();
    sub_10004A45C();
    uint64_t v43 = v41;
    sub_10003BAA4((uint64_t *)aBlock);
    sub_100047798();
    v33();
    sub_1000516D8();
    sub_1000423CC((uint64_t)aBlock);
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v34 = static os_log_type_t.error.getter();
    sub_10004841C(v34);
    swift_bridgeObjectRelease();
    uint64_t v35 = (void *)_convertErrorToNSError(_:)();
  }
  swift_errorRelease();
}

void sub_1001ABE34(void *a1, const void *a2)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_1001ACFE0;
  *(void *)(v6 + 24) = v5;
  sub_10004D510(0, (unint64_t *)&qword_100232020);
  _Block_copy(a2);
  _Block_copy(a2);
  swift_retain();
  id v7 = sub_100045068();
  NSString v8 = sub_100049044();
  char v63 = v7;
  id v9 = [v7 dictionaryForKey:v8];

  aBlock[0] = 0;
  id v10 = [v9 valueWithError:aBlock];

  if (!v10)
  {
    id v29 = aBlock[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_100043478(&qword_10022E560);
    uint64_t v30 = sub_10002D318();
    sub_100044798(v30);
    uint64_t v31 = (__n128 *)sub_100049BF8();
    sub_100045CA0(v31, (__n128)xmmword_1001C3130);
    uint64_t v65 = (void *)sub_100043478(&qword_100234968);
    aBlock[0] = a1;
    id v32 = (id)AMSLogKey();
    if (v32)
    {
      uint64_t v33 = v32;
      uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v36 = v35;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_1000480D0();
      sub_1000420D0();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_1000457EC(MetatypeMetadata);
      sub_1000423CC((uint64_t)&v68);
      sub_100020E44();
      uint64_t v70 = &type metadata for String;
      uint64_t v68 = v34;
      uint64_t v69 = v36;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v68);
      sub_1000208D8();
      sub_10004A7DC();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_1000480D0();
      sub_1000420D0();
      uint64_t v38 = swift_getMetatypeMetadata();
      sub_1000457EC(v38);
      sub_1000423CC((uint64_t)&v68);
      sub_100020E94();
      sub_10004A7DC();
    }
    sub_10004377C((uint64_t)aBlock);
    sub_100046F4C();
    LogMessage.init(stringLiteral:)();
    swift_getErrorValue();
    sub_1000478E0();
    sub_1000459F8();
    sub_1000460F8();
    v39();
    sub_1000516D8();
    sub_1000423CC((uint64_t)aBlock);
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v40 = static os_log_type_t.error.getter();
    sub_10004841C(v40);
    swift_bridgeObjectRelease();
    uint64_t v41 = (void *)_convertErrorToNSError(_:)();
    id v42 = objc_msgSend(v41, "ams_sanitizedForSecureCoding");

    _Block_copy(a2);
    id v43 = v42;
    uint64_t v44 = (void *)_convertErrorToNSError(_:)();
    uint64_t v45 = sub_10004A284();
    v46(v45);

    _Block_release(a2);
    goto LABEL_19;
  }
  sub_100043478(&qword_100234970);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1001C3110;
  *(void *)(v11 + 56) = &type metadata for String;
  *(void *)(v11 + 32) = 0x6173726576696E75;
  *(void *)(v11 + 40) = 0xEF736B6E696C5F6CLL;
  uint64_t v12 = sub_10004D510(0, &qword_1002314F0);
  sub_100042258(v12);
  id v62 = v10;
  uint64_t v61 = NSDictionary.init(dictionaryLiteral:)();
  id v13 = sub_1001AC754((uint64_t)v61);
  sub_1001A1114((uint64_t)v13);
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  char v19 = v18;
  swift_bridgeObjectRelease();
  if (v19)
  {
LABEL_13:
    sub_100043478(&qword_10022E560);
    uint64_t v47 = sub_10002D318();
    sub_100044798(v47);
    char v48 = (__n128 *)sub_100049BF8();
    sub_100045CA0(v48, (__n128)xmmword_1001C3130);
    uint64_t v65 = (void *)sub_100043478(&qword_100234968);
    aBlock[0] = a1;
    swift_errorRetain();
    id v49 = (id)AMSLogKey();
    if (v49)
    {
      char v50 = v49;
      uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v53 = v52;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_1000480D0();
      sub_1000420D0();
      uint64_t v54 = swift_getMetatypeMetadata();
      sub_1000457EC(v54);
      sub_1000423CC((uint64_t)&v68);
      sub_100020E44();
      uint64_t v70 = &type metadata for String;
      uint64_t v68 = v51;
      uint64_t v69 = v53;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v68);
      sub_1000208D8();
      sub_10004A7DC();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_1000480D0();
      sub_1000420D0();
      uint64_t v55 = swift_getMetatypeMetadata();
      sub_1000457EC(v55);
      sub_1000423CC((uint64_t)&v68);
      sub_100020E94();
      sub_10004A7DC();
    }
    sub_10004377C((uint64_t)aBlock);
    sub_100047424();
    sub_10002D4DC();
    sub_1000478E0();
    sub_1000459F8();
    sub_1000460F8();
    v56();
    sub_1000516D8();
    sub_1000423CC((uint64_t)aBlock);
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v57 = static os_log_type_t.error.getter();
    sub_10004841C(v57);
    swift_bridgeObjectRelease();
    swift_errorRetain();
    _Block_copy(a2);
    swift_errorRetain();
    uint64_t v58 = (void *)_convertErrorToNSError(_:)();
    uint64_t v59 = sub_10004A284();
    v60(v59);

    swift_errorRelease();
    _Block_release(a2);

    sub_10004C94C();
    swift_errorRelease();
LABEL_19:
    swift_errorRelease();
    swift_release();
    swift_release();
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001A1ADC();
  uint64_t v21 = v20;
  char v23 = v22;
  swift_bridgeObjectRelease();
  if (v23)
  {
    swift_bridgeObjectRelease();
    sub_1001ACEC0(v15, v17, 0);
    goto LABEL_13;
  }
  sub_1001ACEC0(v15, v17, 0);
  uint64_t v24 = self;
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  Class v26 = Dictionary._bridgeToObjectiveC()().super.isa;
  uint64_t v27 = (void *)swift_allocObject();
  void v27[2] = a1;
  void v27[3] = sub_1001AD020;
  void v27[4] = v6;
  int v66 = sub_1001AD038;
  unint64_t v67 = v27;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10016D7B4;
  uint64_t v65 = &unk_1002189C0;
  uint64_t v28 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v24 setAdditionalServiceDetailsForApplicationIdentifiers:isa usingContentsOfDictionary:v26 completionHandler:v28];
  swift_bridgeObjectRelease();

  sub_1001ACF50(v21, 0);
  _Block_release(v28);
  swift_release();
  swift_release();

LABEL_20:
  _Block_release(a2);
  _Block_release(a2);
}

id sub_1001AC754(uint64_t a1)
{
  id v9 = 0;
  id v2 = [self dataWithJSONObject:a1 options:0 error:&v9];
  id v3 = v9;
  if (v2)
  {
    uint64_t v4 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v6 = v5;

    type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    sub_1001ACF5C();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    sub_10004B278(v4, v6);
    id result = (id)swift_release();
    if (!v1) {
      return v9;
    }
  }
  else
  {
    NSString v8 = v3;
    _convertNSErrorToError(_:)();

    return (id)swift_willThrow();
  }
  return result;
}

void sub_1001AC890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

uint64_t sub_1001AC900(char a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, void))
{
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v8 - 8);
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  if (a1)
  {
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    *((void *)&v43 + 1) = sub_100043478(&qword_100234968);
    *(void *)&long long v42 = a3;
    id v9 = (id)AMSLogKey();
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = a4;
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v15._uint64_t countAndFlagsBits = 0;
      v15._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v15);
      sub_100049788(&v42, *((uint64_t *)&v43 + 1));
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v39 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v39);
      v17._uint64_t countAndFlagsBits = 5972026;
      v17._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v17);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v39 = v12;
      uint64_t v40 = v14;
      a4 = v11;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v39);
      v18._uint64_t countAndFlagsBits = 93;
      v18._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v29._uint64_t countAndFlagsBits = 0;
      v29._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v29);
      sub_100049788(&v42, *((uint64_t *)&v43 + 1));
      uint64_t v30 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v39 = v30;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v39);
      v31._uint64_t countAndFlagsBits = 58;
      v31._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v31);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v42);
    LogMessage.init(stringLiteral:)();
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v32 = static os_log_type_t.default.getter();
  }
  else
  {
    char v19 = a4;
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
    *((void *)&v43 + 1) = sub_100043478(&qword_100234968);
    *(void *)&long long v42 = a3;
    id v20 = (id)AMSLogKey();
    if (v20)
    {
      uint64_t v21 = v20;
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v24 = v23;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v25._uint64_t countAndFlagsBits = 0;
      v25._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      sub_100049788(&v42, *((uint64_t *)&v43 + 1));
      uint64_t v26 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v39 = v26;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v39);
      v27._uint64_t countAndFlagsBits = 5972026;
      v27._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v39 = v22;
      uint64_t v40 = v24;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v39);
      v28._uint64_t countAndFlagsBits = 93;
      v28._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v33._uint64_t countAndFlagsBits = 0;
      v33._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v33);
      sub_100049788(&v42, *((uint64_t *)&v43 + 1));
      uint64_t v34 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v39 = v34;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v39);
      v35._uint64_t countAndFlagsBits = 58;
      v35._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v35);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v42);
    LogMessage.init(stringLiteral:)();
    if (a2)
    {
      swift_getErrorValue();
      *((void *)&v43 + 1) = v38;
      uint64_t v36 = sub_10003BAA4((uint64_t *)&v42);
      (*(void (**)(uint64_t *))(*(void *)(v38 - 8) + 16))(v36);
    }
    else
    {
      long long v42 = 0u;
      long long v43 = 0u;
    }
    a4 = v19;
    static LogMessage.safe(_:)();
    sub_1000423CC((uint64_t)&v42);
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v32 = static os_log_type_t.error.getter();
  }
  sub_10004841C(v32);
  swift_bridgeObjectRelease();
  return a4(a1 & 1, a2);
}

uint64_t type metadata accessor for UniversalLinksUpdater()
{
  return self;
}

uint64_t sub_1001ACEC0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    return swift_errorRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1001ACF0C()
{
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001ACF44(char a1, uint64_t a2)
{
  return sub_1001AC900(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(void, void))(v2 + 24));
}

uint64_t sub_1001ACF50(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

unint64_t sub_1001ACF5C()
{
  unint64_t result = qword_100234978;
  if (!qword_100234978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234978);
  }
  return result;
}

uint64_t sub_1001ACFA8()
{
  _Block_release(*(const void **)(v0 + 16));
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001ACFE0(uint64_t a1, uint64_t a2)
{
  sub_1001AC890(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1001ACFE8()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001AD020(char a1, uint64_t a2)
{
  sub_1001AAF10(a1, a2, *(void (**)(id, uint64_t))(v2 + 16));
}

id sub_1001AD03C()
{
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 fileExistsAtPath:v1];

  return v2;
}

unint64_t sub_1001AD080()
{
  unint64_t result = qword_10022D5B8;
  if (!qword_10022D5B8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10022D5B8);
  }
  return result;
}

void sub_1001AD0C0()
{
  sub_1000209F4();
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v4 = sub_1000208F0(v3);
  __chkstk_darwin(v4);
  sub_100011D4C();
  uint64_t v5 = sub_100043478(&qword_10022FB40);
  uint64_t v6 = sub_1000208F0(v5);
  __chkstk_darwin(v6);
  sub_10002257C();
  __chkstk_darwin(v7);
  uint64_t v8 = sub_100042274();
  sub_100020DEC();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_1000464AC();
  __chkstk_darwin(v12);
  sub_1000477AC();
  id v13 = objc_msgSend(self, "ams_cachesDirectory");
  if (v13)
  {
    uint64_t v14 = v13;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    Swift::String v15 = *(void (**)(void))(v10 + 32);
    sub_100045500();
    v15();
    sub_100021AC0(v2, 0, 1, v8);
    sub_100049074(v2);
    if (!v16)
    {
      sub_100045500();
      v15();
      v17._uint64_t countAndFlagsBits = 0x7363697274654DLL;
      v17._object = (void *)0xE700000000000000;
      URL.appendPathComponent(_:)(v17);
      sub_10002064C();
      v18._uint64_t countAndFlagsBits = 0xD000000000000013;
      URL.appendPathComponent(_:)(v18);
      id v19 = [self defaultManager];
      sub_1000478F8();

      sub_100049074(v0);
      if (v16)
      {
        sub_100045500();
        v15();
        sub_10002CBB4(v0, &qword_10022FB40);
      }
      else
      {
        uint64_t v28 = sub_100040BC8();
        v29(v28);
        sub_100045500();
        v15();
      }
      goto LABEL_13;
    }
  }
  else
  {
    sub_10004C968();
  }
  sub_10002CBB4(v2, &qword_10022FB40);
  sub_100043478(&qword_10022E560);
  uint64_t v20 = type metadata accessor for LogMessage();
  sub_100044798(v20);
  *(_OWORD *)(sub_10002D4F8() + 16) = xmmword_1001C3120;
  void v31[3] = sub_100043478(&qword_100234980);
  v31[0] = v8;
  id v21 = (id)AMSLogKey();
  if (v21)
  {
    uint64_t v22 = v21;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100020E60();
    sub_100043C78();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_1000472AC(MetatypeMetadata);
    sub_100047624();
    sub_100020E44();
    sub_100043AC0((uint64_t)&type metadata for String);
    sub_100047624();
    sub_1000208D8();
    sub_100040C54();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100020E60();
    sub_100045EA4();
    uint64_t v24 = swift_getMetatypeMetadata();
    sub_100040FDC(v24);
    sub_10002CBB4((uint64_t)&v30, &qword_10022F490);
    sub_100020E94();
    sub_100040C54();
  }
  sub_10004377C((uint64_t)v31);
  LogMessage.init(stringLiteral:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v25 = static os_log_type_t.fault.getter();
  sub_10004841C(v25);
  swift_bridgeObjectRelease();
  id v26 = [self defaultManager];
  id v27 = [v26 temporaryDirectory];

  static URL._unconditionallyBridgeFromObjectiveC(_:)();
LABEL_13:
  sub_100020FDC();
}

void sub_1001AD4CC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)&v40, a1, &v43);
  sub_1000434BC((uint64_t)&v40);
  if (!v44)
  {
    sub_1000423CC((uint64_t)&v43);
LABEL_8:
    sub_100043478(&qword_10022E560);
    uint64_t v11 = type metadata accessor for LogMessage();
    sub_100044798(v11);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v42 = sub_100043478(&qword_100234A20);
    uint64_t v40 = v2;
    uint64_t v12 = *(void *)(a2 + 32);
    if (v12)
    {
      uint64_t v13 = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100049720();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_100046A68(MetatypeMetadata);
      sub_1000423CC((uint64_t)&v43);
      sub_100020E44();
      uint64_t v44 = &type metadata for String;
      *(void *)&long long v43 = v13;
      *((void *)&v43 + 1) = v12;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v43);
      uint64_t v15 = 93;
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100049788(&v40, v42);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t v44 = (void *)swift_getMetatypeMetadata();
      *(void *)&long long v43 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v43);
      uint64_t v15 = 58;
    }
    unint64_t v17 = 0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v15);
    LogMessage.init(stringInterpolation:)();
    sub_10004377C((uint64_t)&v40);
    LogMessage.init(stringLiteral:)();
    if (qword_10022C460 == -1) {
      goto LABEL_19;
    }
LABEL_26:
    swift_once();
LABEL_19:
    uint64_t v25 = static os_log_type_t.error.getter();
    sub_10004841C(v25);
    swift_bridgeObjectRelease();
    return;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_8;
  }
  AnyHashable.init<A>(_:)();
  sub_100032918((uint64_t)&v40, a1, &v43);
  sub_1000434BC((uint64_t)&v40);
  if (!v44)
  {
    swift_bridgeObjectRelease();
    sub_1000423CC((uint64_t)&v43);
    goto LABEL_15;
  }
  uint64_t v6 = sub_100043478(&qword_10022D6F0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    sub_100043478(&qword_10022E560);
    uint64_t v18 = type metadata accessor for LogMessage();
    sub_100044798(v18);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    uint64_t v42 = sub_100043478(&qword_100234A20);
    uint64_t v40 = v2;
    uint64_t v19 = *(void *)(a2 + 32);
    if (v19)
    {
      uint64_t v20 = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      sub_1000208BC();
      sub_100020E60();
      sub_100049720();
      uint64_t v21 = swift_getMetatypeMetadata();
      sub_100046A68(v21);
      sub_1000423CC((uint64_t)&v43);
      sub_100020E44();
      uint64_t v44 = &type metadata for String;
      *(void *)&long long v43 = v20;
      *((void *)&v43 + 1) = v19;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v43);
      uint64_t v22 = 93;
    }
    else
    {
      sub_100020E78();
      sub_100020E60();
      sub_100049788(&v40, v42);
      uint64_t v23 = swift_getDynamicType();
      uint64_t v44 = (void *)swift_getMetatypeMetadata();
      *(void *)&long long v43 = v23;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v43);
      uint64_t v22 = 58;
    }
    unint64_t v24 = 0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v22);
    LogMessage.init(stringInterpolation:)();
    sub_10004377C((uint64_t)&v40);
    LogMessage.init(stringLiteral:)();
    if (qword_10022C460 == -1) {
      goto LABEL_19;
    }
    goto LABEL_26;
  }
  sub_100043478(&qword_10022E560);
  uint64_t v7 = type metadata accessor for LogMessage();
  sub_100044798(v7);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v42 = sub_100043478(&qword_100234A20);
  uint64_t v40 = v2;
  uint64_t v8 = *(void *)(a2 + 32);
  if (v8)
  {
    uint64_t v39 = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    sub_1000208BC();
    sub_100020E60();
    sub_100049720();
    uint64_t v9 = swift_getMetatypeMetadata();
    sub_100046A68(v9);
    sub_1000423CC((uint64_t)&v43);
    sub_100020E44();
    uint64_t v44 = &type metadata for String;
    *(void *)&long long v43 = v39;
    *((void *)&v43 + 1) = v8;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v43);
    uint64_t v10 = 93;
  }
  else
  {
    sub_100020E78();
    sub_100020E60();
    sub_100049720();
    uint64_t v26 = swift_getMetatypeMetadata();
    sub_100046A68(v26);
    sub_1000423CC((uint64_t)&v43);
    uint64_t v10 = 58;
  }
  unint64_t v27 = 0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v10);
  LogMessage.init(stringInterpolation:)();
  sub_10004377C((uint64_t)&v40);
  LogMessage.init(stringLiteral:)();
  if (qword_10022C460 != -1) {
    swift_once();
  }
  uint64_t v28 = static os_log_type_t.default.getter();
  sub_10004841C(v28);
  swift_bridgeObjectRelease();
  sub_100043478((uint64_t *)&unk_10022E570);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001C3130;
  uint64_t v40 = 49;
  unint64_t v41 = 0xE100000000000000;
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 96) = &type metadata for Int;
  *(void *)(inited + 72) = 22;
  uint64_t v40 = 50;
  unint64_t v41 = 0xE100000000000000;
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 168) = &type metadata for String;
  *(void *)(inited + 144) = 0x4449656C646E7562;
  *(void *)(inited + 152) = 0xE800000000000000;
  uint64_t v40 = 7565409;
  unint64_t v41 = 0xE300000000000000;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 240) = v6;
  *(void *)(inited + 216) = 1635017060;
  Dictionary.init(dictionaryLiteral:)();
  if (qword_10022C3E0 != -1) {
    swift_once();
  }
  uint64_t v30 = qword_10022D990;
  sub_10004D510(0, (unint64_t *)&unk_10022E580);
  swift_unknownObjectRetain();
  id v31 = sub_100088E54();
  id v32 = [objc_allocWithZone((Class)AMSPushConfiguration) init];
  sub_10004D510(0, (unint64_t *)&unk_100234A28);
  id v33 = v31;
  id v34 = v32;
  id v35 = sub_1001ADD84(v33, v32);
  uint64_t v36 = self;
  NSString v37 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v38 = [v36 postNotification:v35 bag:v30 centerBundleId:v37];
  swift_unknownObjectRelease();
}

id sub_1001ADD84(void *a1, void *a2)
{
  id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithPayload:a1 andConfig:a2];

  return v4;
}

uint64_t type metadata accessor for UserNotificationAction()
{
  return self;
}

void sub_1001ADE08()
{
  sub_1000209F4();
  uint64_t v2 = sub_1000463B8();
  uint64_t v3 = sub_1000208F0(v2);
  __chkstk_darwin(v3);
  sub_100011D4C();
  if (qword_10022C4E0 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v4 = type metadata accessor for LogMessage();
  sub_100044798(v4);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v19 = (void *)sub_100043478((uint64_t *)&unk_100234A38);
  v18[0] = &unk_100218BE0;
  id v5 = (id)AMSLogKey();
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100020E60();
    sub_100049788(v18, (uint64_t)v19);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v16[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v16);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v16[0] = v7;
    v16[1] = v9;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v16);
    sub_1000208D8();
    sub_10001D6F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100020E60();
    uint64_t v11 = sub_100043C78();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v16[0] = v11;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v16);
    sub_100020E94();
    sub_10001D6F8();
  }
  sub_10004377C((uint64_t)v18);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._object = (void *)0x80000001001D9400;
  v12._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v12);
  uint64_t v19 = &type metadata for String;
  v18[0] = v1;
  v18[1] = v0;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000423CC((uint64_t)v18);
  v13._uint64_t countAndFlagsBits = 41;
  v13._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v13);
  sub_10001D6F8();
  uint64_t v14 = static os_log_type_t.default.getter();
  sub_10004841C(v14);
  swift_bridgeObjectRelease();
  uint64_t v15 = String.utf8CString.getter();
  xpc_activity_unregister((const char *)(v15 + 32));
  swift_release();
  sub_100020FDC();
}

void sub_1001AE0D0()
{
  sub_1000209F4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  id v5 = v4;
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation();
  uint64_t v7 = sub_1000208F0(v6);
  __chkstk_darwin(v7);
  if (qword_10022C4E0 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v8 = type metadata accessor for LogMessage();
  sub_100044798(v8);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  id v33 = v5;
  id v34 = v3;
  id v35 = v1;
  uint64_t v36 = &unk_100218BE0;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  id v9 = (id)AMSLogKey();
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = v3;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100044E44();
    sub_100041F7C();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_1000450B0(MetatypeMetadata);
    sub_1000423CC((uint64_t)&v30);
    sub_100020E44();
    id v32 = &type metadata for String;
    uint64_t v30 = v12;
    uint64_t v3 = v11;
    uint64_t v31 = v14;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v30);
    sub_1000208D8();
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100044E44();
    sub_100041F7C();
    uint64_t v16 = swift_getMetatypeMetadata();
    sub_1000450B0(v16);
    sub_1000423CC((uint64_t)&v30);
    sub_100020E94();
    LogMessage.init(stringInterpolation:)();
  }
  sub_10004377C((uint64_t)&v33);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v17._object = (void *)0x80000001001D93B0;
  v17._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v17);
  uint64_t v36 = &type metadata for String;
  id v33 = v3;
  id v34 = v1;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000423CC((uint64_t)&v33);
  v18._uint64_t countAndFlagsBits = 41;
  v18._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v18);
  LogMessage.init(stringInterpolation:)();
  uint64_t v19 = static os_log_type_t.default.getter();
  sub_10004841C(v19);
  swift_bridgeObjectRelease();
  if (!xpc_activity_set_state(v5, 5))
  {
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    id v33 = v5;
    id v34 = v3;
    id v35 = v1;
    uint64_t v36 = &unk_100218BE0;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    id v20 = (id)AMSLogKey();
    if (v20)
    {
      uint64_t v21 = v20;
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v24 = v23;

      swift_bridgeObjectRetain();
      sub_100020F60();
      sub_100044E44();
      sub_100041F7C();
      uint64_t v25 = swift_getMetatypeMetadata();
      sub_1000450B0(v25);
      sub_1000423CC((uint64_t)&v30);
      sub_100020E44();
      id v32 = &type metadata for String;
      uint64_t v30 = v22;
      uint64_t v31 = v24;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)&v30);
      sub_1000208D8();
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100020980();
      sub_100044E44();
      sub_100041F7C();
      uint64_t v26 = swift_getMetatypeMetadata();
      sub_1000450B0(v26);
      sub_1000423CC((uint64_t)&v30);
      sub_100020E94();
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)&v33);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v27._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
    v27._object = (void *)0x80000001001D93D0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    uint64_t v36 = &type metadata for String;
    id v33 = v3;
    id v34 = v1;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)&v33);
    v28._uint64_t countAndFlagsBits = 41;
    v28._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    LogMessage.init(stringInterpolation:)();
    uint64_t v29 = static os_log_type_t.error.getter();
    sub_10004841C(v29);
    swift_bridgeObjectRelease();
  }
  sub_100020FDC();
}

uint64_t sub_1001AE554(_xpc_activity_s *a1)
{
  unint64_t state = xpc_activity_get_state(a1);
  if (state >= 6) {
    return 0;
  }
  else {
    return (0x40203050601uLL >> (8 * state));
  }
}

void sub_1001AE588()
{
  sub_1000209F4();
  uint64_t v3 = v2;
  uint64_t v22 = v4;
  uint64_t v6 = v5;
  uint64_t v7 = sub_1000463B8();
  uint64_t v8 = sub_1000208F0(v7);
  __chkstk_darwin(v8);
  sub_100011D4C();
  if (qword_10022C4E0 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v9 = type metadata accessor for LogMessage();
  sub_100044798(v9);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v26 = (void *)sub_100043478((uint64_t *)&unk_100234A38);
  v25[0] = &unk_100218BE0;
  id v10 = (id)AMSLogKey();
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v21 = v1;
    uint64_t v13 = v3;
    uint64_t v15 = v14;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100020E60();
    uint64_t v16 = sub_100043C78();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v23[0] = v16;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v23);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v23[0] = v12;
    v23[1] = v15;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v23);
    sub_1000208D8();
    sub_1000474F0();
    uint64_t v3 = v13;
    uint64_t v1 = v21;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100020E60();
    uint64_t v17 = sub_1000421AC();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v23[0] = v17;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v23);
    sub_100020E94();
    sub_1000474F0();
  }
  sub_10004377C((uint64_t)v25);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  sub_100045A18((uint64_t)"Checking in activity: ");
  uint64_t v26 = &type metadata for String;
  v25[0] = v1;
  v25[1] = v0;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000423CC((uint64_t)v25);
  sub_100020E60();
  sub_10001D6F8();
  uint64_t v18 = static os_log_type_t.default.getter();
  sub_10004841C(v18);
  swift_bridgeObjectRelease();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v1;
  *(void *)(v19 + 24) = v0;
  *(void *)(v19 + 32) = v22;
  *(void *)(v19 + 40) = v3;
  long long v20 = v6[1];
  *(_OWORD *)(v19 + 48) = *v6;
  *(_OWORD *)(v19 + 64) = v20;
  *(_OWORD *)(v19 + 80) = v6[2];
  *(_OWORD *)(v19 + 92) = *(_OWORD *)((char *)v6 + 44);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1001AFA98(v1, v0, XPC_ACTIVITY_CHECK_IN, (uint64_t)sub_1001AFA88, v19);
  swift_release();
  sub_100020FDC();
}

void sub_1001AE884()
{
  sub_1000209F4();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_1000463B8();
  uint64_t v7 = sub_1000208F0(v6);
  __chkstk_darwin(v7);
  sub_100011D4C();
  if (qword_10022C4E0 != -1) {
    swift_once();
  }
  sub_100043478(&qword_10022E560);
  uint64_t v8 = type metadata accessor for LogMessage();
  sub_100044798(v8);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  uint64_t v25 = (void *)sub_100043478((uint64_t *)&unk_100234A38);
  v24[0] = &unk_100218BE0;
  id v9 = (id)AMSLogKey();
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v21 = v1;
    uint64_t v12 = v3;
    uint64_t v13 = v5;
    uint64_t v15 = v14;

    swift_bridgeObjectRetain();
    sub_100020F60();
    sub_100020E60();
    uint64_t v16 = sub_1000421AC();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v22[0] = v16;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v22);
    sub_100020E44();
    uint64_t MetatypeMetadata = &type metadata for String;
    v22[0] = v11;
    v22[1] = v15;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v22);
    sub_1000208D8();
    sub_1000474F0();
    uint64_t v5 = v13;
    uint64_t v3 = v12;
    uint64_t v1 = v21;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100020980();
    sub_100020E60();
    sub_100049788(v24, (uint64_t)v25);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v22[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v22);
    sub_100020E94();
    sub_1000474F0();
  }
  sub_10004377C((uint64_t)v24);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  sub_100045A18((uint64_t)"Registering activity: ");
  uint64_t v25 = &type metadata for String;
  v24[0] = v1;
  v24[1] = v0;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000423CC((uint64_t)v24);
  sub_100020E60();
  LogMessage.init(stringInterpolation:)();
  uint64_t v18 = static os_log_type_t.default.getter();
  sub_10004841C(v18);
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_1001B00E8();
  long long v20 = (void *)swift_allocObject();
  _OWORD v20[2] = v1;
  void v20[3] = v0;
  void v20[4] = v5;
  v20[5] = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1001AFA98(v1, v0, v19, (uint64_t)sub_1001AFC90, (uint64_t)v20);
  swift_unknownObjectRelease();
  swift_release();
  sub_100020FDC();
}

uint64_t sub_1001AEB94(_xpc_activity_s *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_xpc_activity_s *, uint64_t, unint64_t, BOOL), uint64_t a7)
{
  uint64_t v82 = a7;
  uint64_t v83 = a6;
  uint64_t v86 = a4;
  uint64_t v87 = a5;
  int v96 = a1;
  uint64_t v80 = type metadata accessor for OSSignpostError();
  uint64_t v79 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  int v89 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for OSSignposter();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  long long v90 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v76 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v76 - v18;
  uint64_t v20 = type metadata accessor for OSSignpostID();
  uint64_t v97 = *(void *)(v20 - 8);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v88 = (char *)&v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v84 = (char *)&v76 - v24;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v76 - v25;
  if (qword_10022C4E0 != -1) {
    swift_once();
  }
  id v27 = *(id *)(qword_100244148 + 16);
  OSSignposter.init(logHandle:)();
  String._bridgeToObjectiveC()();
  uint64_t v91 = a2;
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:object:)();
  Swift::String v28 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v98 = v12 + 8;
  unint64_t v95 = v28;
  v28(v19, v11);
  id v29 = *(id *)(qword_100244148 + 16);
  OSSignposter.init(logHandle:)();
  uint64_t v30 = v96;
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v31 = OSSignposter.logHandle.getter();
  int v32 = static os_signpost_type_t.begin.getter();
  char v33 = OS_os_log.signpostsEnabled.getter();
  char v92 = v26;
  uint64_t v93 = v20;
  uint64_t v94 = v11;
  unint64_t v81 = a3;
  uint64_t v85 = v17;
  if (v33)
  {
    int v78 = *(void (**)(char *, char *, uint64_t))(v97 + 16);
    int v77 = v32;
    id v34 = v84;
    v78(v84, v26, v20);
    uint64_t v35 = swift_slowAlloc();
    uint64_t v76 = swift_slowAlloc();
    v101[0] = v76;
    *(_DWORD *)uint64_t v35 = 136315394;
    swift_bridgeObjectRetain();
    v99[0] = sub_100024E94(v91, a3, v101);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v35 + 12) = 2080;
    LOBYTE(v99[0]) = sub_1001AE554(v30);
    uint64_t v36 = String.init<A>(describing:)();
    v99[0] = sub_100024E94(v36, v37, v101);
    uint64_t v38 = v93;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_unknownObjectRelease_n();
    uint64_t v39 = v92;
    swift_bridgeObjectRelease();
    os_signpost_id_t v40 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v31, (os_signpost_type_t)v77, v40, "Activity", "%s beginning with %s state", (uint8_t *)v35, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v11 = v94;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v97 + 8))(v34, v38);
    v78(v34, v39, v38);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_unknownObjectRelease_n();

    (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v84, v26, v20);
  }
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  OSSignpostIntervalState.init(id:isOpen:)();
  v95(v85, v11);
  sub_100043478(&qword_10022E560);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
  int v102 = (void *)sub_100043478((uint64_t *)&unk_100234A38);
  v101[0] = (uint64_t)&unk_100218BE0;
  id v41 = (id)AMSLogKey();
  if (v41)
  {
    uint64_t v42 = v41;
    uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v45 = v44;

    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v46._uint64_t countAndFlagsBits = 0;
    v46._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v46);
    sub_100049788(v101, (uint64_t)v102);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v99[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v99);
    v48._uint64_t countAndFlagsBits = 5972026;
    v48._object = (void *)0xE300000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v48);
    uint64_t MetatypeMetadata = &type metadata for String;
    v99[0] = v43;
    v99[1] = v45;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v99);
    v49._uint64_t countAndFlagsBits = 93;
    v49._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v49);
    LogMessage.init(stringInterpolation:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v50._uint64_t countAndFlagsBits = 0;
    v50._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v50);
    sub_100049788(v101, (uint64_t)v102);
    uint64_t v51 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v99[0] = v51;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v99);
    v52._uint64_t countAndFlagsBits = 58;
    v52._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v52);
    LogMessage.init(stringInterpolation:)();
  }
  uint64_t v53 = v89;
  sub_10004377C((uint64_t)v101);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v54._object = (void *)0x80000001001D9370;
  v54._uint64_t countAndFlagsBits = 0xD000000000000010;
  LogMessage.StringInterpolation.appendLiteral(_:)(v54);
  int v102 = &type metadata for String;
  v101[0] = v86;
  v101[1] = v87;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000423CC((uint64_t)v101);
  v55._uint64_t countAndFlagsBits = 0x203A657461747320;
  v55._object = (void *)0xE800000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v55);
  uint64_t v56 = v96;
  char v57 = sub_1001AE554(v96);
  int v102 = &unk_100218B68;
  LOBYTE(v101[0]) = v57;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_1000423CC((uint64_t)v101);
  v58._uint64_t countAndFlagsBits = 0;
  v58._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v58);
  LogMessage.init(stringInterpolation:)();
  uint64_t v59 = static os_log_type_t.default.getter();
  sub_10004841C(v59);
  swift_bridgeObjectRelease();
  if (sub_1001AE554(v56) == 5 || sub_1001AE554(v56) == 4)
  {
    BOOL v60 = sub_1001AE554(v56) == 5;
    v83(v56, v91, v81, v60);
  }
  id v61 = *(id *)(qword_100244148 + 16);
  id v62 = v90;
  OSSignposter.init(logHandle:)();
  char v63 = OSSignposter.logHandle.getter();
  uint64_t v64 = v88;
  OSSignpostIntervalState.signpostID.getter();
  os_signpost_type_t v65 = static os_signpost_type_t.end.getter();
  char v66 = OS_os_log.signpostsEnabled.getter();
  uint64_t v68 = v92;
  uint64_t v67 = v93;
  if (v66)
  {
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v69 = v79;
    uint64_t v70 = v80;
    if ((*(unsigned int (**)(char *, uint64_t))(v79 + 88))(v53, v80) == enum case for OSSignpostError.doubleEnd(_:))
    {
      __int16 v71 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v69 + 8))(v53, v70);
      __int16 v71 = "";
    }
    uint64_t v72 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v72 = 0;
    os_signpost_id_t v73 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v63, v65, v73, "Activity", v71, v72, 2u);
    swift_slowDealloc();
  }

  int v74 = *(void (**)(char *, uint64_t))(v97 + 8);
  v74(v64, v67);
  v95(v62, v94);
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v74)(v68, v67);
}

void sub_1001AF668(_xpc_activity_s *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_xpc_activity_s *, uint64_t, unint64_t, BOOL), uint64_t a7)
{
  uint64_t v14 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v14 - 8);
  if (xpc_activity_copy_criteria(a1))
  {
    swift_unknownObjectRelease();
    sub_1001AEB94(a1, a2, a3, a4, a5, a6, a7);
  }
  else
  {
    if (qword_10022C4E0 != -1) {
      swift_once();
    }
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3120;
    char v33 = (void *)sub_100043478((uint64_t *)&unk_100234A38);
    v32[0] = &unk_100218BE0;
    id v15 = (id)AMSLogKey();
    if (v15)
    {
      uint64_t v16 = v15;
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v19 = v18;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v20._uint64_t countAndFlagsBits = 0;
      v20._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      sub_100049788(v32, (uint64_t)v33);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v30[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v30);
      v22._uint64_t countAndFlagsBits = 5972026;
      v22._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v22);
      uint64_t MetatypeMetadata = &type metadata for String;
      v30[0] = v17;
      v30[1] = v19;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v30);
      v23._uint64_t countAndFlagsBits = 93;
      v23._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v24._uint64_t countAndFlagsBits = 0;
      v24._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v24);
      sub_100049788(v32, (uint64_t)v33);
      uint64_t v25 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v30[0] = v25;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v30);
      v26._uint64_t countAndFlagsBits = 58;
      v26._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v32);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v27._object = (void *)0x80000001001D9330;
    v27._uint64_t countAndFlagsBits = 0xD000000000000032;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    char v33 = &type metadata for String;
    v32[0] = a4;
    v32[1] = a5;
    swift_bridgeObjectRetain();
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_1000423CC((uint64_t)v32);
    v28._uint64_t countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    LogMessage.init(stringInterpolation:)();
    uint64_t v29 = static os_log_type_t.debug.getter();
    sub_10004841C(v29);
    swift_bridgeObjectRelease();
    sub_1001AE884();
  }
}

uint64_t sub_1001AFA58()
{
  return sub_10000E818((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release, 108);
}

void sub_1001AFA88(_xpc_activity_s *a1, uint64_t a2, unint64_t a3)
{
  sub_1001AF668(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void (**)(_xpc_activity_s *, uint64_t, unint64_t, BOOL))(v3 + 32), *(void *)(v3 + 40));
}

void sub_1001AFA98(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  _OWORD v10[2] = a4;
  v10[3] = a5;
  v10[4] = a1;
  uint64_t v10[5] = a2;
  void v13[4] = sub_1001AFC58;
  v13[5] = v10;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  void v13[2] = sub_10013F894;
  v13[3] = &unk_100218A98;
  uint64_t v11 = _Block_copy(v13);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v12 = String.utf8CString.getter();
  xpc_activity_register((const char *)(v12 + 32), a3, v11);
  swift_release();
  _Block_release(v11);
}

uint64_t sub_1001AFBAC(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  a2(a1, a4, a5);
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_1001AFC2C()
{
  return sub_10004B68C((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1001AFC58(uint64_t a1)
{
  return sub_1001AFBAC(a1, *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1001AFC64()
{
  return sub_10004B68C((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1001AFC90(_xpc_activity_s *a1, uint64_t a2, unint64_t a3)
{
  return sub_1001AEB94(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void (**)(_xpc_activity_s *, uint64_t, unint64_t, BOOL))(v3 + 32), *(void *)(v3 + 40));
}

unsigned char *sub_1001AFC9C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001AFD68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

void type metadata accessor for XPCActivity.State()
{
}

uint64_t sub_1001AFDA0()
{
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_1001AFDDC(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1001AFE1C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1001AFE84(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for XPCActivity()
{
}

unsigned char *sub_1001AFED8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001AFFA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for XPCActivity.RegistrationType()
{
}

unint64_t sub_1001AFFDC()
{
  unint64_t result = qword_100234A48;
  if (!qword_100234A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234A48);
  }
  return result;
}

unint64_t sub_1001B002C()
{
  unint64_t result = qword_100234A50;
  if (!qword_100234A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234A50);
  }
  return result;
}

uint64_t sub_1001B0078(char a1)
{
  uint64_t result = 0x746C7561666564;
  switch(a1)
  {
    case 1:
      uint64_t result = 65;
      break;
    case 2:
      uint64_t result = 66;
      break;
    case 3:
      uint64_t result = 67;
      break;
    default:
      return result;
  }
  return result;
}

void *sub_1001B00E8()
{
  xpc_object_t v1 = xpc_dictionary_create(0, 0, 0);
  uint64_t v2 = v1;
  if (v0[58]) {
    int v3 = (const char **)&XPC_ACTIVITY_PRIORITY_UTILITY;
  }
  else {
    int v3 = (const char **)&XPC_ACTIVITY_PRIORITY_MAINTENANCE;
  }
  xpc_dictionary_set_string(v1, XPC_ACTIVITY_PRIORITY, *v3);
  if (!v0[57])
  {
    if (!XPC_ACTIVITY_REQUIRE_NETWORK_CONNECTIVITY)
    {
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    BOOL v6 = 1;
    sub_100049094(v4, XPC_ACTIVITY_REQUIRE_NETWORK_CONNECTIVITY);
    uint64_t v5 = (const char *)XPC_ACTIVITY_REQUIRE_INEXPENSIVE_NETWORK_CONNECTIVITY;
    if (!XPC_ACTIVITY_REQUIRE_INEXPENSIVE_NETWORK_CONNECTIVITY)
    {
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
      JUMPOUT(0x1001B03C8);
    }
LABEL_11:
    xpc_dictionary_set_BOOL(v2, v5, v6);
    goto LABEL_12;
  }
  if (v0[57])
  {
    if (!XPC_ACTIVITY_REQUIRE_NETWORK_CONNECTIVITY)
    {
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    sub_100049094(v4, XPC_ACTIVITY_REQUIRE_NETWORK_CONNECTIVITY);
    uint64_t v5 = (const char *)XPC_ACTIVITY_REQUIRE_INEXPENSIVE_NETWORK_CONNECTIVITY;
    if (!XPC_ACTIVITY_REQUIRE_INEXPENSIVE_NETWORK_CONNECTIVITY)
    {
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
    BOOL v6 = 0;
    goto LABEL_11;
  }
LABEL_12:
  switch(v0[1])
  {
    case 1:
      uint64_t v7 = (const char *)XPC_ACTIVITY_REQUIRES_CLASS_A;
      if (XPC_ACTIVITY_REQUIRES_CLASS_A) {
        goto LABEL_18;
      }
      __break(1u);
LABEL_15:
      uint64_t v7 = (const char *)XPC_ACTIVITY_REQUIRES_CLASS_B;
      if (!XPC_ACTIVITY_REQUIRES_CLASS_B)
      {
        __break(1u);
LABEL_17:
        uint64_t v7 = (const char *)XPC_ACTIVITY_REQUIRES_CLASS_C;
        if (!XPC_ACTIVITY_REQUIRES_CLASS_C) {
          goto LABEL_60;
        }
      }
LABEL_18:
      sub_100049094(v4, v7);
LABEL_19:
      sub_100049094(v4, XPC_ACTIVITY_PREVENT_DEVICE_SLEEP);
      xpc_dictionary_set_BOOL(v2, XPC_ACTIVITY_REPEATING, v0[59]);
      if (!XPC_ACTIVITY_EXPECTED_DURATION) {
        goto LABEL_55;
      }
      sub_100049758();
      if (v9)
      {
        __break(1u);
        goto LABEL_44;
      }
      if (v8 <= -9.22337204e18)
      {
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
      sub_100042B54();
      if (!v13) {
        goto LABEL_45;
      }
      sub_100045510(v12, v10, v11);
      xpc_dictionary_set_BOOL(v2, XPC_ACTIVITY_ALLOW_BATTERY, *v0);
      sub_1001B0458((uint64_t)(v0 + 8), (uint64_t)v26);
      sub_1001B0458((uint64_t)v26, (uint64_t)&v27);
      if ((v28 & 1) == 0)
      {
        sub_100049758();
        if (v9)
        {
LABEL_46:
          __break(1u);
          goto LABEL_47;
        }
        if (v14 <= -9.22337204e18)
        {
LABEL_47:
          __break(1u);
          goto LABEL_48;
        }
        sub_100042B54();
        if (!v13) {
          goto LABEL_49;
        }
        sub_100045510(v16, v15, XPC_ACTIVITY_DELAY);
      }
      sub_1001B0458((uint64_t)(v0 + 48), (uint64_t)v25);
      sub_1001B0458((uint64_t)v25, (uint64_t)&v29);
      if ((v30 & 1) == 0)
      {
        sub_100049758();
        if (v9)
        {
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
          goto LABEL_50;
        }
        if (v17 <= -9.22337204e18)
        {
LABEL_50:
          __break(1u);
          goto LABEL_51;
        }
        sub_100042B54();
        if (!v13) {
          goto LABEL_52;
        }
        sub_100045510(v19, v18, XPC_ACTIVITY_INTERVAL);
      }
      sub_1001B0458((uint64_t)(v0 + 32), (uint64_t)v24);
      sub_1001B0458((uint64_t)v24, (uint64_t)&v31);
      if ((v32 & 1) == 0)
      {
        sub_100049758();
        if (v9)
        {
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
          goto LABEL_53;
        }
        if (v20 <= -9.22337204e18)
        {
LABEL_53:
          __break(1u);
          goto LABEL_54;
        }
        sub_100042B54();
        if (!v13)
        {
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
          goto LABEL_56;
        }
        sub_100045510(v22, v21, XPC_ACTIVITY_GRACE_PERIOD);
      }
      return v2;
    case 2:
      goto LABEL_15;
    case 3:
      goto LABEL_17;
    default:
      goto LABEL_19;
  }
}

uint64_t sub_1001B03D8(unsigned __int8 *a1, char *a2)
{
  return sub_10007D188(*a1, *a2);
}

Swift::Int sub_1001B03E4()
{
  return sub_10005A11C(*v0);
}

uint64_t sub_1001B03EC()
{
  return sub_10005A310();
}

Swift::Int sub_1001B03F4(uint64_t a1)
{
  return sub_10005B0EC(a1, *v1);
}

unint64_t sub_1001B03FC@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100012474(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001B042C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1001B0078(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1001B0458(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100043478(&qword_100234A60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *sub_1001B04C0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001B058CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for DataClass()
{
}

unint64_t sub_1001B05C4()
{
  unint64_t result = qword_100234A68;
  if (!qword_100234A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234A68);
  }
  return result;
}

unsigned char *sub_1001B0610(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001B06DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for XPCActivityCriteria.Priority()
{
}

__n128 sub_1001B0710(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 44) = *(_OWORD *)(a2 + 44);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1001B072C(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && a1[60])
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *a1;
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1001B0778(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 60) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 60) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

void type metadata accessor for XPCActivityCriteria()
{
}

unsigned char *sub_1001B07D8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001B08A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for XPCActivityCriteria.NetworkRequirement()
{
}

unint64_t sub_1001B08DC()
{
  unint64_t result = qword_100234A70;
  if (!qword_100234A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234A70);
  }
  return result;
}

unint64_t sub_1001B092C()
{
  unint64_t result = qword_100234A78;
  if (!qword_100234A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100234A78);
  }
  return result;
}

unint64_t sub_1001B0978(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_21;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v3) {
    return 0;
  }
  while (1)
  {
    sub_1000BA1D0(0, (a2 & 0xC000000000000001) == 0, a2);
    id v4 = (a2 & 0xC000000000000001) != 0
       ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
       : *(id *)(a2 + 32);
    uint64_t v5 = v4;
    sub_10004D510(0, &qword_100234B40);
    char v6 = static NSObject.== infix(_:_:)();

    if (v6) {
      return 0;
    }
    for (uint64_t i = 0; ; ++i)
    {
      unint64_t v7 = i + 1;
      if (__OFADD__(i, 1)) {
        break;
      }
      if (v7 == v3) {
        return 0;
      }
      if ((a2 & 0xC000000000000001) != 0)
      {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if ((v7 & 0x8000000000000000) != 0) {
          goto LABEL_19;
        }
        if (v7 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_20;
        }
        id v9 = *(id *)(a2 + 32 + 8 * v7);
      }
      uint64_t v10 = v9;
      char v11 = static NSObject.== infix(_:_:)();

      if (v11) {
        return v7;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v3) {
      return 0;
    }
  }
}

void sub_1001B0B14(uint64_t a1)
{
}

void sub_1001B0B20(uint64_t a1)
{
}

char *sub_1001B0B2C()
{
  *(void *)&v0[OBJC_IVAR____TtC14amsengagementd18XPCServiceProvider_connections] = _swiftEmptyArrayStorage;
  uint64_t v1 = OBJC_IVAR____TtC14amsengagementd18XPCServiceProvider_connectionsLock;
  id v2 = objc_allocWithZone((Class)NSLock);
  uint64_t v3 = v0;
  *(void *)&v0[v1] = [v2 init];
  *(void *)&v3[OBJC_IVAR____TtC14amsengagementd18XPCServiceProvider_exportedInterface] = 0;
  id v4 = &v3[OBJC_IVAR____TtC14amsengagementd18XPCServiceProvider_exportedObject];
  *(_OWORD *)id v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *(void *)&v3[OBJC_IVAR____TtC14amsengagementd18XPCServiceProvider_remoteObjectInterface] = 0;
  sub_10004D510(0, &qword_100234B38);
  *(void *)&v3[OBJC_IVAR____TtC14amsengagementd18XPCServiceProvider_listener] = sub_1001B0C50();

  v7.receiver = v3;
  v7.super_class = (Class)type metadata accessor for XPCServiceProvider();
  uint64_t v5 = (char *)objc_msgSendSuper2(&v7, "init");
  [*(id *)&v5[OBJC_IVAR____TtC14amsengagementd18XPCServiceProvider_listener] setDelegate:v5];
  return v5;
}

id sub_1001B0C50()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithMachServiceName:v1];

  return v2;
}

id sub_1001B0CC4()
{
  [*(id *)&v0[OBJC_IVAR____TtC14amsengagementd18XPCServiceProvider_listener] invalidate];
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for XPCServiceProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_1001B0DC4()
{
}

void sub_1001B0E04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (unint64_t *)(a1 + OBJC_IVAR____TtC14amsengagementd18XPCServiceProvider_connections);
  swift_beginAccess();
  unint64_t v4 = *v3;
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_1001B0978(a2, v4);
  char v7 = v6;
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
    swift_beginAccess();
    double v8 = (void *)sub_1001B0EAC(v5);
    swift_endAccess();
  }
}

uint64_t sub_1001B0EAC(unint64_t a1)
{
  unint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *NSString v1 = v3;
  if (!result || (v3 & 0x8000000000000000) != 0 || (v3 & 0x4000000000000000) != 0)
  {
    uint64_t result = sub_1001B1724(v3);
    unint64_t v3 = result;
    *NSString v1 = result;
  }
  uint64_t v5 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = v6 - 1 - a1;
    uint64_t v9 = v5 + 8 * a1;
    uint64_t v10 = *(void *)(v9 + 32);
    sub_100072670((char *)(v9 + 40), v8, (char *)(v9 + 32));
    *(void *)(v5 + 16) = v7;
    specialized Array._endMutation()();
    return v10;
  }
  return result;
}

uint64_t sub_1001B0F38(uint64_t a1, int a2)
{
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v3 - 8);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = (void *)result;
    sub_100043478(&qword_10022E560);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
    Swift::String v23 = (void *)type metadata accessor for XPCServiceProvider();
    v22[0] = v5;
    id v6 = v5;
    id v7 = (id)AMSLogKey();
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v11 = v10;

      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v12._uint64_t countAndFlagsBits = 0;
      v12._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v12);
      sub_100049788(v22, (uint64_t)v23);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v20[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v20);
      v14._uint64_t countAndFlagsBits = 5972026;
      v14._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v14);
      uint64_t MetatypeMetadata = &type metadata for String;
      v20[0] = v9;
      v20[1] = v11;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v20);
      v15._uint64_t countAndFlagsBits = 93;
      v15._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v15);
      LogMessage.init(stringInterpolation:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v16._uint64_t countAndFlagsBits = 0;
      v16._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v16);
      sub_100049788(v22, (uint64_t)v23);
      uint64_t v17 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v20[0] = v17;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_1000423CC((uint64_t)v20);
      v18._uint64_t countAndFlagsBits = 58;
      v18._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      LogMessage.init(stringInterpolation:)();
    }
    sub_10004377C((uint64_t)v22);
    LogMessage.init(stringLiteral:)();
    Swift::String v23 = &type metadata for Int32;
    LODWORD(v22[0]) = a2;
    static LogMessage.safe(_:)();
    sub_1000423CC((uint64_t)v22);
    if (qword_10022C460 != -1) {
      swift_once();
    }
    uint64_t v19 = static os_log_type_t.error.getter();
    sub_10004841C(v19);

    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1001B1274(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v6 = (void *)Strong;
    swift_beginAccess();
    uint64_t v7 = swift_unknownObjectWeakLoadStrong();
    if (v7)
    {
      uint64_t v8 = (void *)v7;
      sub_100043478(&qword_10022E560);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001C3130;
      char v32 = (void *)type metadata accessor for XPCServiceProvider();
      v31[0] = v6;
      uint64_t v9 = v6;
      id v10 = (id)AMSLogKey();
      if (v10)
      {
        uint64_t v11 = v10;
        char v28 = v8;
        Swift::String v12 = v9;
        int v13 = a3;
        uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v16 = v15;

        swift_bridgeObjectRetain();
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v17._uint64_t countAndFlagsBits = 0;
        v17._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v17);
        sub_100049788(v31, (uint64_t)v32);
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v29[0] = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)v29);
        v19._uint64_t countAndFlagsBits = 5972026;
        v19._object = (void *)0xE300000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v19);
        uint64_t MetatypeMetadata = &type metadata for String;
        v29[0] = v14;
        v29[1] = v16;
        a3 = v13;
        uint64_t v9 = v12;
        uint64_t v8 = v28;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)v29);
        v20._uint64_t countAndFlagsBits = 93;
        v20._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v20);
        LogMessage.init(stringInterpolation:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v21._uint64_t countAndFlagsBits = 0;
        v21._object = (void *)0xE000000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v21);
        sub_100049788(v31, (uint64_t)v32);
        uint64_t v22 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v29[0] = v22;
        LogMessage.StringInterpolation.appendInterpolation(safe:)();
        sub_1000423CC((uint64_t)v29);
        v23._uint64_t countAndFlagsBits = 58;
        v23._object = (void *)0xE100000000000000;
        LogMessage.StringInterpolation.appendLiteral(_:)(v23);
        LogMessage.init(stringInterpolation:)();
      }
      sub_10004377C((uint64_t)v31);
      LogMessage.init(stringLiteral:)();
      char v32 = &type metadata for Int32;
      LODWORD(v31[0]) = a3;
      static LogMessage.safe(_:)();
      sub_1000423CC((uint64_t)v31);
      if (qword_10022C460 != -1) {
        swift_once();
      }
      uint64_t v24 = static os_log_type_t.default.getter();
      sub_10004841C(v24);
      swift_bridgeObjectRelease();
      uint64_t v25 = *(void **)&v9[OBJC_IVAR____TtC14amsengagementd18XPCServiceProvider_connectionsLock];
      Swift::String v26 = v9;
      id v27 = v8;
      [v25 lock];
      sub_1001B0E04((uint64_t)v26, (uint64_t)v27);
      [v25 unlock];
    }
  }
}

uint64_t sub_1001B1648()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001B1680()
{
  swift_release();
  return _swift_deallocObject(v0, 28, 7);
}

uint64_t sub_1001B16B8()
{
  return sub_1001B0F38(*(void *)(v0 + 16), *(_DWORD *)(v0 + 24));
}

uint64_t sub_1001B16C4()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 36, 7);
}

void sub_1001B1704()
{
  sub_1001B1274(*(void *)(v0 + 16), *(void *)(v0 + 24), *(_DWORD *)(v0 + 32));
}

void sub_1001B1710(uint64_t a1)
{
}

uint64_t sub_1001B1724(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

id AMSDTranslateCloudKitError(void *a1)
{
  id v1 = a1;
  objc_super v2 = v1;
  if (v1)
  {
    if ((objc_msgSend(v1, "amsd_isCKChangeTokenExpiredError") & 1) == 0
      && (objc_msgSend(v2, "amsd_isCKManateeUnavailable") & 1) == 0
      && (objc_msgSend(v2, "amsd_isCKMissingManateeIdentity") & 1) == 0
      && (objc_msgSend(v2, "amsd_isCKPartialFailureError") & 1) == 0
      && (objc_msgSend(v2, "amsd_isCKServerRecordChangedError") & 1) == 0
      && (objc_msgSend(v2, "amsd_isCKThrottledError") & 1) == 0)
    {
      objc_msgSend(v2, "amsd_isCKUnknownItemError");
    }
    id v4 = objc_alloc_init((Class)NSMutableDictionary);
    uint64_t v5 = [v2 userInfo];
    id v6 = [v5 objectForKeyedSubscript:CKPartialErrorsByItemIDKey];

    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      id v7 = v6;
    }
    else {
      id v7 = 0;
    }

    if (v7)
    {
      uint64_t v8 = objc_msgSend(v7, "ams_mapWithTransform:", &stru_100218FE8);
      [v4 setObject:v8 forKeyedSubscript:@"AMSCloudDataPartialFailureErrorsKey"];
    }
    uint64_t v9 = [v2 userInfo];
    id v10 = [v9 objectForKeyedSubscript:CKErrorRetryAfterKey];

    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      id v11 = v10;
    }
    else {
      id v11 = 0;
    }

    if (v11) {
      [v4 setObject:v11 forKeyedSubscript:@"AMSCloudDataRetryAfterKey"];
    }
    Swift::String v12 = objc_msgSend(v2, "ams_title");
    int v13 = objc_msgSend(v2, "ams_message");
    uint64_t v3 = AMSCustomError();
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

AMSPair *__cdecl sub_1001B1F20(id a1, id a2, NSError *a3)
{
  id v4 = a3;
  id v5 = a2;
  id v6 = objc_alloc((Class)AMSPair);
  id v7 = AMSDTranslateCloudKitError(v4);

  id v8 = [v6 initWithFirst:v5 second:v7];
  return (AMSPair *)v8;
}

id sub_1001B36D0(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) _acceptShareWithShareMetadata:a2];
}

id sub_1001B3788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) finishWithResult:a2 error:a3];
}

void sub_1001B3844(uint64_t a1, void *a2, void *a3)
{
  id v4 = *(void **)(a1 + 32);
  id v5 = a3;
  +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [a2 deviceToDeviceEncryptionAvailability]);
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  [v4 finishWithResult:v6 error:v5];
}

id sub_1001B3A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v4 = *(void **)(a1 + 32);
  if (a3) {
    return objc_msgSend(v4, "finishWithResult:");
  }
  else {
    return [v4 finishWithError:a4];
  }
}

id sub_1001B3C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v4 = *(void **)(a1 + 32);
  if (a3) {
    return objc_msgSend(v4, "finishWithResult:");
  }
  else {
    return [v4 finishWithError:a4];
  }
}

void sub_1001B3F3C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v11 = a2;
  id v7 = a3;
  id v8 = AMSDTranslateCloudKitError(a4);
  uint64_t v9 = v8;
  if (v8 && !objc_msgSend(v8, "ams_hasDomain:code:", @"AMSCloudDataErrorDomain", 4))
  {
    [*(id *)(a1 + 32) finishWithError:v9];
  }
  else
  {
    id v10 = [[AMSCloudDataSavedRecordsResult alloc] initWithSavedRecords:v11 deletedRecords:v7 error:v9];
    [*(id *)(a1 + 32) finishWithResult:v10];
  }
}

AMSPromise *__cdecl sub_1001B4010(id a1, NSError *a2)
{
  objc_super v2 = AMSDTranslateCloudKitError(a2);
  uint64_t v3 = +[AMSPromise promiseWithError:v2];

  return (AMSPromise *)v3;
}

void sub_1001B438C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v10 = a3;
  id v6 = a4;
  id v7 = [v10 count];
  id v8 = *(void **)(a1 + 32);
  if (v7)
  {
    uint64_t v9 = [v10 firstObject];
    [v8 finishWithResult:v9];
LABEL_3:

    goto LABEL_6;
  }
  if (!v6)
  {
    uint64_t v9 = AMSError();
    [v8 finishWithError:v9];
    goto LABEL_3;
  }
  [v8 finishWithError:v6];
LABEL_6:
}

AMSPromise *__cdecl sub_1001B4460(id a1, NSError *a2)
{
  objc_super v2 = AMSDTranslateCloudKitError(a2);
  uint64_t v3 = +[AMSPromise promiseWithError:v2];

  return (AMSPromise *)v3;
}

void sub_1001B460C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v10 = a3;
  id v6 = a4;
  id v7 = [v10 count];
  id v8 = *(void **)(a1 + 32);
  if (v7)
  {
    [v8 finishWithResult:v10];
  }
  else if (v6)
  {
    [v8 finishWithError:v6];
  }
  else
  {
    uint64_t v9 = AMSError();
    [v8 finishWithError:v9];
  }
}

AMSPromise *__cdecl sub_1001B46D0(id a1, NSError *a2)
{
  objc_super v2 = AMSDTranslateCloudKitError(a2);
  uint64_t v3 = +[AMSPromise promiseWithError:v2];

  return (AMSPromise *)v3;
}

id sub_1001B4808(id a1, AMSCloudDataRecordZoneIdentifier *a2)
{
  objc_super v2 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }

  return v3;
}

id sub_1001B4878(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_opt_class();
  id v5 = [*(id *)(a1 + 32) scope];
  id v6 = [v3 zoneName];

  id v7 = [v4 _fetchChangeTokenWithDatabaseScope:v5 recordZoneName:v6];

  return v7;
}

id sub_1001B4A00(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (objc_msgSend(v3, "amsd_isCKChangeTokenExpiredError"))
  {
    [*(id *)(a1 + 32) persistChangedRecordZonesChangeToken:0];
    [*(id *)(a1 + 32) _fetchChangedRecordZonesWithServerChangeToken:0];
  }
  else
  {
    +[AMSPromise promiseWithError:v3];
  id v4 = };

  return v4;
}

AMSPromise *__cdecl sub_1001B4A80(id a1, NSError *a2)
{
  objc_super v2 = AMSDTranslateCloudKitError(a2);
  id v3 = +[AMSPromise promiseWithError:v2];

  return (AMSPromise *)v3;
}

void sub_1001B4D60(uint64_t a1, void *a2, void *a3)
{
  id v14 = a3;
  id v5 = [a2 objectForKeyedSubscript:*(void *)(a1 + 32)];
  if (v5)
  {
    [*(id *)(a1 + 40) finishWithResult:v5];
  }
  else
  {
    id v6 = v14;
    if (objc_msgSend(v6, "amsd_isCKPartialFailureError"))
    {
      id v7 = [v6 userInfo];
      id v8 = [v7 objectForKeyedSubscript:CKPartialErrorsByItemIDKey];

      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        id v9 = v8;
      }
      else {
        id v9 = 0;
      }

      id v10 = [v9 objectForKeyedSubscript:*(void *)(a1 + 32)];

      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        id v11 = v10;
      }
      else {
        id v11 = 0;
      }

      id v6 = v11;
    }
    Swift::String v12 = *(void **)(a1 + 40);
    if (v6)
    {
      [v12 finishWithError:v6];
    }
    else
    {
      int v13 = AMSError();
      [v12 finishWithError:v13];
    }
  }
}

AMSPromise *__cdecl sub_1001B4EF4(id a1, NSError *a2)
{
  objc_super v2 = AMSDTranslateCloudKitError(a2);
  id v3 = +[AMSPromise promiseWithError:v2];

  return (AMSPromise *)v3;
}

void sub_1001B5084(uint64_t a1, void *a2, void *a3)
{
  id v13 = a2;
  id v5 = AMSDTranslateCloudKitError(a3);
  id v6 = v5;
  if (v5 && !objc_msgSend(v5, "ams_hasDomain:code:", @"AMSCloudDataErrorDomain", 4))
  {
    [*(id *)(a1 + 32) finishWithError:v6];
  }
  else
  {
    id v7 = [v6 userInfo];
    id v8 = [v7 objectForKeyedSubscript:@"AMSCloudDataPartialFailureErrorsKey"];

    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      id v9 = v8;
    }
    else {
      id v9 = 0;
    }

    id v10 = [AMSCloudDataFetchResult alloc];
    if (v13) {
      id v11 = v13;
    }
    else {
      id v11 = &__NSDictionary0__struct;
    }
    Swift::String v12 = [(AMSCloudDataFetchResult *)v10 initWithResults:v11 failures:v9];
    [*(id *)(a1 + 32) finishWithResult:v12];
  }
}

void sub_1001B51B4(uint64_t a1, void *a2)
{
  id v3 = [a2 failures];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1001B5244;
  v4[3] = &unk_1002192B8;
  v4[4] = *(void *)(a1 + 32);
  [v3 enumerateKeysAndObjectsUsingBlock:v4];
}

id sub_1001B5244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return +[AMSCloudDataManager handleRecordZoneFetchFailed:a2 inDatabase:*(void *)(a1 + 32) withError:a3];
}

void sub_1001B5520(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (v2)
  {
    id v3 = +[AMSLogConfig sharedAccountsDaemonConfig];
    if (!v3)
    {
      id v3 = +[AMSLogConfig sharedConfig];
    }
    id v4 = [v3 OSLogObject];
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v5 = objc_opt_class();
      id v6 = AMSLogKey();
      id v7 = AMSHashIfNeeded();
      id v8 = AMSHashIfNeeded();
      int v9 = 138544130;
      uint64_t v10 = v5;
      __int16 v11 = 2114;
      Swift::String v12 = v6;
      __int16 v13 = 2114;
      id v14 = v7;
      __int16 v15 = 2114;
      uint64_t v16 = v8;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%{public}@: [%{public}@] Failed to save a database change token. database = %{public}@ | error = %{public}@", (uint8_t *)&v9, 0x2Au);
    }
  }
}

void sub_1001B5A64(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = +[AMSLogConfig sharedAccountsDaemonConfig];
    if (!v4)
    {
      id v4 = +[AMSLogConfig sharedConfig];
    }
    uint64_t v5 = [v4 OSLogObject];
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = objc_opt_class();
      id v7 = AMSLogKey();
      id v8 = [*(id *)(a1 + 32) scope];
      int v9 = AMSHashIfNeeded();
      uint64_t v10 = AMSHashIfNeeded();
      int v11 = 138544386;
      uint64_t v12 = v6;
      __int16 v13 = 2114;
      id v14 = v7;
      __int16 v15 = 2048;
      id v16 = v8;
      __int16 v17 = 2114;
      Swift::String v18 = v9;
      __int16 v19 = 2114;
      Swift::String v20 = v10;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "%{public}@: [%{public}@] Failed to save a record zone change token. databaseScope = %ld | zoneName = %{public}@ | error = %{public}@", (uint8_t *)&v11, 0x34u);
    }
  }
}

void sub_1001B5D7C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v10 = a2;
  id v6 = a4;
  id v7 = [v10 count];
  id v8 = *(void **)(a1 + 32);
  if (v7)
  {
    int v9 = [v10 firstObject];
    [v8 finishWithResult:v9];
LABEL_3:

    goto LABEL_6;
  }
  if (!v6)
  {
    int v9 = AMSError();
    [v8 finishWithError:v9];
    goto LABEL_3;
  }
  [v8 finishWithError:v6];
LABEL_6:
}

AMSPromise *__cdecl sub_1001B5E50(id a1, NSError *a2)
{
  id v2 = AMSDTranslateCloudKitError(a2);
  id v3 = +[AMSPromise promiseWithError:v2];

  return (AMSPromise *)v3;
}

void sub_1001B6054(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v10 = a2;
  id v6 = a4;
  id v7 = [v10 count];
  id v8 = *(void **)(a1 + 32);
  if (v7)
  {
    int v9 = [v10 firstObject];
    [v8 finishWithResult:v9];
LABEL_3:

    goto LABEL_6;
  }
  if (!v6)
  {
    int v9 = AMSError();
    [v8 finishWithError:v9];
    goto LABEL_3;
  }
  [v8 finishWithError:v6];
LABEL_6:
}

AMSPromise *__cdecl sub_1001B6128(id a1, NSError *a2)
{
  id v2 = AMSDTranslateCloudKitError(a2);
  id v3 = +[AMSPromise promiseWithError:v2];

  return (AMSPromise *)v3;
}

void sub_1001B6588(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v10 = a2;
  id v6 = a4;
  id v7 = [v10 count];
  id v8 = *(void **)(a1 + 32);
  if (v7)
  {
    int v9 = [v10 firstObject];
    [v8 finishWithResult:v9];
LABEL_3:

    goto LABEL_6;
  }
  if (!v6)
  {
    int v9 = AMSError();
    [v8 finishWithError:v9];
    goto LABEL_3;
  }
  [v8 finishWithError:v6];
LABEL_6:
}

id sub_1001B665C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = +[AMSLogConfig sharedAccountsDaemonConfig];
  id v7 = (void *)v6;
  if (a2)
  {
    if (!v6)
    {
      id v7 = +[AMSLogConfig sharedConfig];
    }
    id v8 = [v7 OSLogObject];
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = objc_opt_class();
      id v10 = AMSLogKey();
      *(_DWORD *)buf = 138543618;
      uint64_t v43 = v9;
      __int16 v44 = 2114;
      uint64_t v45 = v10;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%{public}@: [%{public}@] Successfully setup the database subscription.", buf, 0x16u);
    }
    int v11 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 56) + 1];
    id v12 = +[AMSPromise promiseWithResult:v11];
  }
  else
  {
    if (!v6)
    {
      id v7 = +[AMSLogConfig sharedConfig];
    }
    __int16 v13 = [v7 OSLogObject];
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      uint64_t v14 = objc_opt_class();
      __int16 v15 = AMSLogKey();
      id v16 = AMSLogableError();
      *(_DWORD *)buf = 138543874;
      uint64_t v43 = v14;
      __int16 v44 = 2114;
      uint64_t v45 = v15;
      __int16 v46 = 2114;
      double v47 = *(double *)&v16;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "%{public}@: [%{public}@] Failed to setup the database subscription. error = %{public}@", buf, 0x20u);
    }
    unint64_t v17 = *(void *)(a1 + 56);
    if (v17 > 9)
    {
      uint64_t v31 = +[AMSLogConfig sharedAccountsDaemonConfig];
      if (!v31)
      {
        uint64_t v31 = +[AMSLogConfig sharedConfig];
      }
      char v32 = [v31 OSLogObject];
      if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
      {
        uint64_t v33 = objc_opt_class();
        id v34 = AMSLogKey();
        *(_DWORD *)buf = 138543618;
        uint64_t v43 = v33;
        __int16 v44 = 2114;
        uint64_t v45 = v34;
        _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_ERROR, "%{public}@: [%{public}@] Attempted to setup the database subscription too many times. Refusing to try again.", buf, 0x16u);
      }
      id v12 = +[AMSPromise promiseWithError:v5];
    }
    else
    {
      unint64_t v18 = v17 + 1;
      double v19 = exp2((double)(v17 + 1));
      Swift::String v20 = +[AMSLogConfig sharedAccountsDaemonConfig];
      if (!v20)
      {
        Swift::String v20 = +[AMSLogConfig sharedConfig];
      }
      Swift::String v21 = [v20 OSLogObject];
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v22 = objc_opt_class();
        Swift::String v23 = AMSLogKey();
        *(_DWORD *)buf = 138543874;
        uint64_t v43 = v22;
        __int16 v44 = 2114;
        uint64_t v45 = v23;
        __int16 v46 = 2048;
        double v47 = v19;
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "%{public}@: [%{public}@] Scheduling another attempt to setup the database subscription. timeInterval = %f", buf, 0x20u);
      }
      id v24 = objc_alloc_init((Class)AMSPromise);
      dispatch_time_t v25 = dispatch_time(0, (uint64_t)(v19 * 1000000000.0));
      Swift::String v26 = dispatch_get_global_queue(0, 0);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_1001B6AFC;
      block[3] = &unk_100219398;
      id v27 = v24;
      uint64_t v28 = *(void *)(a1 + 32);
      uint64_t v29 = *(void **)(a1 + 40);
      id v37 = v27;
      uint64_t v38 = v28;
      id v39 = v29;
      id v40 = *(id *)(a1 + 48);
      unint64_t v41 = v18;
      dispatch_after(v25, v26, block);

      char v30 = v40;
      id v12 = v27;
    }
  }

  return v12;
}

void sub_1001B6AFC(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id v2 = [*(id *)(a1 + 40) _subscribeWithIdentifier:*(void *)(a1 + 48) recordZoneIdentifier:*(void *)(a1 + 56) attempt:*(void *)(a1 + 64)];
  [v1 finishWithPromise:v2];
}

id sub_1001B6DE0(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

id sub_1001B6DEC(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

void sub_1001B6DF8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7 = a2;
  if (a4)
  {
    [*(id *)(a1 + 32) finishWithError:a4];
  }
  else
  {
    uint64_t v6 = [[AMSCloudDataChangedRecordZonesResult alloc] initWithChangedRecordZones:*(void *)(a1 + 40) deletedRecordZones:*(void *)(a1 + 48) changeToken:v7];
    [*(id *)(a1 + 32) finishWithResult:v6];
  }
}

void sub_1001B7268(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1001B7288(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc_init((Class)CKFetchRecordZoneChangesConfiguration);
  id v5 = [*(id *)(a1 + 32) objectForKeyedSubscript:v3];

  [v4 setPreviousServerChangeToken:v5];
  return v4;
}

void sub_1001B7308(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  id v11 = v3;
  id v5 = [v3 recordID];
  uint64_t v6 = [v5 zoneID];
  id v7 = [v4 objectForKeyedSubscript:v6];

  if (!v7)
  {
    id v7 = objc_alloc_init((Class)NSMutableArray);
    id v8 = *(void **)(a1 + 32);
    uint64_t v9 = [v11 recordID];
    id v10 = [v9 zoneID];
    [v8 setObject:v7 forKeyedSubscript:v10];
  }
  [v7 addObject:v11];
}

void sub_1001B73E8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  id v9 = v3;
  id v5 = [v3 zoneID];
  id v6 = [v4 objectForKeyedSubscript:v5];

  if (!v6)
  {
    id v6 = objc_alloc_init((Class)NSMutableArray);
    id v7 = *(void **)(a1 + 32);
    id v8 = [v9 zoneID];
    [v7 setObject:v6 forKeyedSubscript:v8];
  }
  [v6 addObject:v9];
}

void sub_1001B74A8(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, void *a6)
{
  id v15 = a6;
  if (v15)
  {
    id v9 = *(void **)(a1 + 40);
    id v10 = a2;
    [v9 setObject:0 forKeyedSubscript:v10];
    [*(id *)(a1 + 48) setObject:0 forKeyedSubscript:v10];
    id v11 = *(void **)(a1 + 56);
    id v12 = v15;
    id v13 = v10;
  }
  else
  {
    uint64_t v14 = *(void **)(a1 + 32);
    id v13 = a2;
    id v11 = v14;
    id v12 = a3;
  }
  [v11 setObject:v12 forKeyedSubscript:v13];
}

void sub_1001B7558(id *a1, void *a2)
{
  id v3 = a2;
  id v4 = (id)AMSSetLogKey();
  if ([a1[5] count]
    || [a1[6] count]
    || [a1[7] count]
    || (id v14 = [a1[8] count], !v3)
    || v14)
  {
    if (v3)
    {
      id v5 = +[AMSLogConfig sharedAccountsDaemonConfig];
      if (!v5)
      {
        id v5 = +[AMSLogConfig sharedConfig];
      }
      id v6 = [v5 OSLogObject];
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      {
        id WeakRetained = objc_loadWeakRetained(a1 + 10);
        uint64_t v8 = objc_opt_class();
        id v9 = AMSLogKey();
        id v10 = AMSHashIfNeeded();
        int v15 = 138543874;
        uint64_t v16 = v8;
        __int16 v17 = 2114;
        unint64_t v18 = v9;
        __int16 v19 = 2114;
        Swift::String v20 = v10;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%{public}@: [%{public}@] Received both valid data and an error when fetching record zone changes. error = %{public}@", (uint8_t *)&v15, 0x20u);
      }
      id v11 = objc_loadWeakRetained(a1 + 10);
      [v11 _handleError:v3 andErrors:a1[7]];
    }
    id v12 = objc_msgSend(a1[7], "ams_mapWithTransform:", &stru_1002194C8);
    id v13 = [[AMSCloudDataChangedRecordsResult alloc] initWithChangedRecords:a1[5] deletedRecords:a1[6] errors:v12 changeTokens:a1[8]];
    [a1[9] finishWithResult:v13];
  }
  else
  {
    [a1[9] finishWithError:v3];
  }
}

AMSPair *__cdecl sub_1001B7760(id a1, CKRecordZoneID *a2, NSError *a3)
{
  id v4 = a3;
  id v5 = a2;
  id v6 = objc_alloc((Class)AMSPair);
  id v7 = AMSDTranslateCloudKitError(v4);

  id v8 = [v6 initWithFirst:v5 second:v7];
  return (AMSPair *)v8;
}

AMSPromise *__cdecl sub_1001B77F0(id a1, NSError *a2)
{
  id v2 = AMSDTranslateCloudKitError(a2);
  id v3 = +[AMSPromise promiseWithError:v2];

  return (AMSPromise *)v3;
}

BOOL sub_1001B7E2C(id a1, id a2, id a3)
{
  id v3 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

void sub_1001B8548(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  AMSHashIfNeeded();
  id v8 = (id)objc_claimAutoreleasedReturnValue();
  id v5 = [*(id *)(a1 + 40) encryptedValuesByKey];
  id v6 = [v5 objectForKeyedSubscript:v4];

  id v7 = AMSHashIfNeeded();
  [v3 appendFormat:@"\n  %@ = %@,", v8, v7];
}

uint64_t sub_1001B8BB8()
{
  sub_100020958();
  v0[4] = v1;
  v0[5] = v2;
  v0[3] = v3;
  uint64_t v4 = type metadata accessor for URL();
  v0[6] = v4;
  v0[7] = *(void *)(v4 - 8);
  v0[8] = swift_task_alloc();
  v0[9] = swift_task_alloc();
  return _swift_task_switch(sub_1001B8CB4, 0, 0);
}

uint64_t sub_1001B8CB4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = self;
  *(void *)(v0 + 16) = 0;
  id v3 = [v2 dataWithPropertyList:v1 format:100 options:0 error:v0 + 16];
  id v4 = *(id *)(v0 + 16);
  if (v3)
  {
    uint64_t v5 = *(void *)(v0 + 64);
    uint64_t v6 = *(void *)(v0 + 48);
    uint64_t v7 = *(void *)(v0 + 56);
    uint64_t v8 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    sub_1001B8EA8();
    URL.appendingPathComponent(_:)();
    id v11 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v11(v5, v6);
    Data.write(to:options:)();
    uint64_t v13 = sub_100021378();
    ((void (*)(uint64_t))v11)(v13);
    sub_10004B278(v8, v10);
  }
  else
  {
    id v12 = v4;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  id v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

void sub_1001B8EA8()
{
  uint64_t v0 = sub_100043478(&qword_1002350C0);
  __chkstk_darwin(v0 - 8);
  sub_100011EC0();
  uint64_t v3 = v1 - v2;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v22 - v5;
  uint64_t v7 = type metadata accessor for URL();
  sub_100020DEC();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_100011EC0();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v22 - v12;
  id v14 = objc_msgSend(self, "ams_cachesDirectory");
  if (!v14)
  {
    sub_100021AC0((uint64_t)v6, 1, 1, v7);
    goto LABEL_6;
  }
  int v15 = v14;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v16 = *(void (**)(void))(v9 + 32);
  sub_1000489D4();
  v16();
  sub_100021AC0((uint64_t)v6, 0, 1, v7);
  if (sub_10004FD40((uint64_t)v6, 1, v7) == 1)
  {
LABEL_6:
    sub_10002CC68((uint64_t)v6, &qword_1002350C0);
    id v20 = [self defaultManager];
    id v21 = [v20 temporaryDirectory];

    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    return;
  }
  sub_1000489D4();
  v16();
  v17._uint64_t countAndFlagsBits = 0x7363697274654DLL;
  v17._object = (void *)0xE700000000000000;
  URL.appendPathComponent(_:)(v17);
  v18._object = (void *)0x80000001001D9C60;
  v18._uint64_t countAndFlagsBits = 0xD000000000000015;
  URL.appendPathComponent(_:)(v18);
  id v19 = [self defaultManager];
  sub_1001B985C(1, 0, v3);

  if (sub_10004FD40(v3, 1, v7) == 1)
  {
    sub_1000489D4();
    v16();
    sub_10002CC68(v3, &qword_1002350C0);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v7);
    sub_1000489D4();
    v16();
  }
}

uint64_t sub_1001B9224(void *a1, int a2, void *aBlock, void *a4)
{
  v4[2] = a1;
  v4[3] = a4;
  v4[4] = _Block_copy(aBlock);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  void v4[5] = v7;
  id v8 = a1;
  id v9 = a4;
  uint64_t v10 = (void *)swift_task_alloc();
  v4[6] = v10;
  *uint64_t v10 = v4;
  v10[1] = sub_1001B930C;
  return sub_1001B8BB8();
}

uint64_t sub_1001B930C()
{
  uint64_t v2 = v0;
  uint64_t v3 = (void *)*v1;
  uint64_t v4 = (void *)*v1;
  sub_100020EBC();
  *uint64_t v5 = v4;
  uint64_t v6 = (void *)v3[3];
  uint64_t v7 = (void *)v3[2];
  id v8 = (void *)*v1;
  *uint64_t v5 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  uint64_t v9 = v3[4];
  if (v2)
  {
    uint64_t v10 = (void *)_convertErrorToNSError(_:)();
    swift_errorRelease();
    (*(void (**)(uint64_t, void *))(v9 + 16))(v9, v10);
  }
  else
  {
    (*(void (**)(uint64_t, void))(v9 + 16))(v9, 0);
  }
  _Block_release((const void *)v4[4]);
  uint64_t v11 = (uint64_t (*)(void))v8[1];
  return v11();
}

uint64_t sub_1001B94C4()
{
  uint64_t v0 = type metadata accessor for URL();
  sub_100020DEC();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_100011EC0();
  uint64_t v6 = v4 - v5;
  __chkstk_darwin(v7);
  sub_1001B8EA8();
  URL.appendingPathComponent(_:)();
  id v8 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v8(v6, v0);
  uint64_t v9 = Data.init(contentsOf:options:)();
  unint64_t v11 = v10;
  uint64_t v12 = self;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  *(void *)&v21[0] = 0;
  id v14 = [v12 propertyListWithData:isa options:0 format:0 error:v21];

  id v15 = *(id *)&v21[0];
  if (v14)
  {
    _bridgeAnyObjectToAny(_:)();
    sub_10004B278(v9, v11);
    swift_unknownObjectRelease();
    uint64_t v16 = sub_100045414();
    ((void (*)(uint64_t))v8)(v16);
    sub_100043510(&v22, v21);
    sub_1001B9C00();
    if (swift_dynamicCast()) {
      return v20;
    }
    else {
      return 0;
    }
  }
  else
  {
    Swift::String v18 = v15;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_10004B278(v9, v11);
    uint64_t v19 = sub_100045414();
    ((void (*)(uint64_t))v8)(v19);
    swift_errorRelease();
    return 0;
  }
}

id TokenStorage.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return [v1 init];
}

id TokenStorage.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TokenStorage();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for TokenStorage()
{
  return self;
}

id TokenStorage.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TokenStorage();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_1001B985C@<X0>(char a1@<W1>, Class isa@<X2>, uint64_t a3@<X8>)
{
  URL.path.getter();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v8 = [v3 fileExistsAtPath:v7];

  if (v8)
  {
    type metadata accessor for URL();
    sub_100043B1C();
    uint64_t v9 = sub_10004B694();
    v10(v9);
    uint64_t v11 = sub_10004ADF4();
    return (id)sub_100021AC0(v11, v12, v13, v14);
  }
  else
  {
    id v16 = [self defaultManager];
    URL._bridgeToObjectiveC()(v17);
    uint64_t v19 = v18;
    if (isa)
    {
      _s3__C16FileAttributeKeyVMa_0();
      sub_1001B9F00(&qword_1002350C8);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    }
    id v30 = 0;
    unsigned int v20 = [v16 createDirectoryAtURL:v19 withIntermediateDirectories:a1 & 1 attributes:isa error:&v30];

    id v29 = v30;
    if (v20)
    {
      type metadata accessor for URL();
      sub_100043B1C();
      uint64_t v21 = sub_10004B694();
      v22(v21);
      uint64_t v23 = sub_10004ADF4();
      sub_100021AC0(v23, v24, v25, v26);
      return v29;
    }
    else
    {
      id v27 = v30;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRelease();
      uint64_t v28 = type metadata accessor for URL();
      return (id)sub_100021AC0(a3, 1, 1, v28);
    }
  }
}

uint64_t sub_1001B9AFC()
{
  return sub_1001B9B64(*v0, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_1001B9B34()
{
  return sub_1001B9B64(*v0, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_1001B9B64(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = a2(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1001B9BA4()
{
  return sub_1001B9BAC();
}

uint64_t sub_1001B9BAC()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1001B9C00()
{
  unint64_t result = qword_1002350B8;
  if (!qword_1002350B8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1002350B8);
  }
  return result;
}

void _s3__C16FileAttributeKeyVMa_0()
{
  if (!qword_100235118)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_100235118);
    }
  }
}

uint64_t sub_1001B9C8C()
{
  _Block_release(*(const void **)(v0 + 32));
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001B9CDC()
{
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10002219C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1000699CC;
  uint64_t v3 = sub_1000473E8();
  return v4(v3);
}

uint64_t sub_1001B9D80()
{
  return sub_10005F0A4();
}

uint64_t sub_1001B9D8C(uint64_t a1)
{
  uint64_t v2 = sub_1001B9F00(&qword_1002350C8);
  uint64_t v3 = sub_1001B9F00(&qword_100235138);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1001B9E2C()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B9E64()
{
  return sub_1001B9F00(&qword_100235120);
}

uint64_t sub_1001B9E98()
{
  return sub_1001B9F00(&qword_100235128);
}

uint64_t sub_1001B9ECC()
{
  return sub_1001B9F00(&qword_100235130);
}

uint64_t sub_1001B9F00(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    _s3__C16FileAttributeKeyVMa_0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1001B9F48()
{
  uint64_t v0 = abort_report_np();
  sub_1001B9F70(v0);
}

void sub_1001B9F70()
{
  uint64_t v0 = abort_report_np();
  sub_1001B9F98(v0);
}

void sub_1001B9F98()
{
}

uint64_t CocoaError._nsError.getter()
{
  return CocoaError._nsError.getter();
}

uint64_t static CocoaError.Code.fileReadNoSuchFile.getter()
{
  return static CocoaError.Code.fileReadNoSuchFile.getter();
}

uint64_t type metadata accessor for CocoaError.Code()
{
  return type metadata accessor for CocoaError.Code();
}

uint64_t type metadata accessor for CocoaError()
{
  return type metadata accessor for CocoaError();
}

uint64_t URLRequest.httpMethod.setter()
{
  return URLRequest.httpMethod.setter();
}

uint64_t URLRequest.cachePolicy.setter()
{
  return URLRequest.cachePolicy.setter();
}

NSURLRequest __swiftcall URLRequest._bridgeToObjectiveC()()
{
  uint64_t v0 = (objc_class *)URLRequest._bridgeToObjectiveC()();
  result._internal = v1;
  result.super.Class isa = v0;
  return result;
}

uint64_t URLRequest.allHTTPHeaderFields.setter()
{
  return URLRequest.allHTTPHeaderFields.setter();
}

uint64_t URLRequest.allowsCellularAccess.setter()
{
  return URLRequest.allowsCellularAccess.setter();
}

uint64_t URLRequest.allowsExpensiveNetworkAccess.setter()
{
  return URLRequest.allowsExpensiveNetworkAccess.setter();
}

uint64_t URLRequest.allowsConstrainedNetworkAccess.setter()
{
  return URLRequest.allowsConstrainedNetworkAccess.setter();
}

uint64_t static URLRequest._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static URLRequest._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t URLRequest.init(url:cachePolicy:timeoutInterval:)()
{
  return URLRequest.init(url:cachePolicy:timeoutInterval:)();
}

uint64_t URLRequest.url.getter()
{
  return URLRequest.url.getter();
}

Swift::Void __swiftcall URLRequest.addValue(_:forHTTPHeaderField:)(Swift::String _, Swift::String forHTTPHeaderField)
{
}

uint64_t URLRequest.httpBody.setter()
{
  return URLRequest.httpBody.setter();
}

Swift::Void __swiftcall URLRequest.setValue(_:forHTTPHeaderField:)(Swift::String_optional _, Swift::String forHTTPHeaderField)
{
}

uint64_t type metadata accessor for URLRequest()
{
  return type metadata accessor for URLRequest();
}

uint64_t type metadata accessor for JSONDecoder.DateDecodingStrategy()
{
  return type metadata accessor for JSONDecoder.DateDecodingStrategy();
}

uint64_t dispatch thunk of JSONDecoder.dateDecodingStrategy.setter()
{
  return dispatch thunk of JSONDecoder.dateDecodingStrategy.setter();
}

uint64_t dispatch thunk of JSONDecoder.decode<A>(_:from:)()
{
  return dispatch thunk of JSONDecoder.decode<A>(_:from:)();
}

uint64_t JSONDecoder.init()()
{
  return JSONDecoder.init()();
}

uint64_t type metadata accessor for JSONDecoder()
{
  return type metadata accessor for JSONDecoder();
}

uint64_t dispatch thunk of JSONEncoder.encode<A>(_:)()
{
  return dispatch thunk of JSONEncoder.encode<A>(_:)();
}

uint64_t JSONEncoder.init()()
{
  return JSONEncoder.init()();
}

uint64_t type metadata accessor for JSONEncoder()
{
  return type metadata accessor for JSONEncoder();
}

uint64_t static CharacterSet.urlHostAllowed.getter()
{
  return static CharacterSet.urlHostAllowed.getter();
}

uint64_t type metadata accessor for CharacterSet()
{
  return type metadata accessor for CharacterSet();
}

uint64_t static Notification._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Notification.object.getter()
{
  return Notification.object.getter();
}

uint64_t Notification.userInfo.getter()
{
  return Notification.userInfo.getter();
}

uint64_t type metadata accessor for Notification()
{
  return type metadata accessor for Notification();
}

uint64_t static CustomNSError.errorDomain.getter()
{
  return static CustomNSError.errorDomain.getter();
}

uint64_t CustomNSError.errorUserInfo.getter()
{
  return CustomNSError.errorUserInfo.getter();
}

uint64_t CustomNSError.errorCode.getter()
{
  return CustomNSError.errorCode.getter();
}

NSURLComponents __swiftcall URLComponents._bridgeToObjectiveC()()
{
  return (NSURLComponents)URLComponents._bridgeToObjectiveC()();
}

uint64_t URLComponents.init(url:resolvingAgainstBaseURL:)()
{
  return URLComponents.init(url:resolvingAgainstBaseURL:)();
}

uint64_t URLComponents.url.getter()
{
  return URLComponents.url.getter();
}

uint64_t URLComponents.scheme.setter()
{
  return URLComponents.scheme.setter();
}

uint64_t URLComponents.init(string:)()
{
  return URLComponents.init(string:)();
}

uint64_t type metadata accessor for URLComponents()
{
  return type metadata accessor for URLComponents();
}

uint64_t __DataStorage.init(bytes:length:copy:deallocator:offset:)()
{
  return __DataStorage.init(bytes:length:copy:deallocator:offset:)();
}

uint64_t __DataStorage._bytes.getter()
{
  return __DataStorage._bytes.getter();
}

uint64_t __DataStorage._length.getter()
{
  return __DataStorage._length.getter();
}

uint64_t __DataStorage._offset.getter()
{
  return __DataStorage._offset.getter();
}

uint64_t type metadata accessor for __DataStorage()
{
  return type metadata accessor for __DataStorage();
}

uint64_t dispatch thunk of LocalizedError.failureReason.getter()
{
  return dispatch thunk of LocalizedError.failureReason.getter();
}

uint64_t dispatch thunk of LocalizedError.errorDescription.getter()
{
  return dispatch thunk of LocalizedError.errorDescription.getter();
}

uint64_t dispatch thunk of LocalizedError.recoverySuggestion.getter()
{
  return dispatch thunk of LocalizedError.recoverySuggestion.getter();
}

uint64_t LocalizedError.helpAnchor.getter()
{
  return LocalizedError.helpAnchor.getter();
}

uint64_t LocalizedError.failureReason.getter()
{
  return LocalizedError.failureReason.getter();
}

uint64_t LocalizedError.recoverySuggestion.getter()
{
  return LocalizedError.recoverySuggestion.getter();
}

uint64_t dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)()
{
  return dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)();
}

Swift::String __swiftcall NSLocalizedString(_:tableName:bundle:value:comment:)(Swift::String _, Swift::String_optional tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  uint64_t v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(_._countAndFlagsBits, _._object, tableName.value._countAndFlagsBits, tableName.value._object, bundle.super.isa, value._countAndFlagsBits, value._object, comment._countAndFlagsBits);
  result._object = v6;
  result._uint64_t countAndFlagsBits = v5;
  return result;
}

uint64_t dispatch thunk of PropertyListDecoder.decode<A>(_:from:)()
{
  return dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
}

uint64_t PropertyListDecoder.init()()
{
  return PropertyListDecoder.init()();
}

uint64_t type metadata accessor for PropertyListDecoder()
{
  return type metadata accessor for PropertyListDecoder();
}

uint64_t dispatch thunk of PropertyListEncoder.encode<A>(_:)()
{
  return dispatch thunk of PropertyListEncoder.encode<A>(_:)();
}

uint64_t PropertyListEncoder.init()()
{
  return PropertyListEncoder.init()();
}

uint64_t type metadata accessor for PropertyListEncoder()
{
  return type metadata accessor for PropertyListEncoder();
}

uint64_t _BridgedStoredNSError.userInfo.getter()
{
  return _BridgedStoredNSError.userInfo.getter();
}

uint64_t _BridgedStoredNSError.init(_:userInfo:)()
{
  return _BridgedStoredNSError.init(_:userInfo:)();
}

uint64_t _convertErrorToNSError(_:)()
{
  return _convertErrorToNSError(_:)();
}

uint64_t _convertNSErrorToError(_:)()
{
  return _convertNSErrorToError(_:)();
}

uint64_t NSFastEnumerationIterator.next()()
{
  return NSFastEnumerationIterator.next()();
}

uint64_t type metadata accessor for NSFastEnumerationIterator()
{
  return type metadata accessor for NSFastEnumerationIterator();
}

uint64_t URL.isFileURL.getter()
{
  return URL.isFileURL.getter();
}

uint64_t type metadata accessor for URL.DirectoryHint()
{
  return type metadata accessor for URL.DirectoryHint();
}

uint64_t URL.pathExtension.getter()
{
  return URL.pathExtension.getter();
}

uint64_t URL.absoluteString.getter()
{
  return URL.absoluteString.getter();
}

uint64_t URL.init(fileURLWithPath:isDirectory:)()
{
  return URL.init(fileURLWithPath:isDirectory:)();
}

uint64_t URL.init(fileURLWithPath:)()
{
  return URL.init(fileURLWithPath:)();
}

uint64_t URL.lastPathComponent.getter()
{
  return URL.lastPathComponent.getter();
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
}

Swift::Void __swiftcall URL.appendPathComponent(_:)(Swift::String a1)
{
}

Swift::Void __swiftcall URL.appendPathExtension(_:)(Swift::String a1)
{
}

uint64_t URL.deletingPathExtension()()
{
  return URL.deletingPathExtension()();
}

uint64_t URL.appendingPathComponent(_:isDirectory:)()
{
  return URL.appendingPathComponent(_:isDirectory:)();
}

uint64_t URL.appendingPathComponent(_:)()
{
  return URL.appendingPathComponent(_:)();
}

uint64_t URL.appendingPathExtension(_:)()
{
  return URL.appendingPathExtension(_:)();
}

uint64_t static URL._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

Swift::String __swiftcall URL.path(percentEncoded:)(Swift::Bool percentEncoded)
{
  uint64_t v1 = URL.path(percentEncoded:)(percentEncoded);
  result._object = v2;
  result._uint64_t countAndFlagsBits = v1;
  return result;
}

uint64_t URL.path.getter()
{
  return URL.path.getter();
}

uint64_t URL.scheme.getter()
{
  return URL.scheme.getter();
}

uint64_t URL.init(string:)()
{
  return URL.init(string:)();
}

uint64_t URL.appending<A>(path:directoryHint:)()
{
  return URL.appending<A>(path:directoryHint:)();
}

uint64_t type metadata accessor for URL()
{
  return type metadata accessor for URL();
}

uint64_t Data.InlineData.init(_:)()
{
  return Data.InlineData.init(_:)();
}

Swift::Void __swiftcall Data.LargeSlice.ensureUniqueReference()()
{
}

uint64_t Data.LargeSlice.init(_:)()
{
  return Data.LargeSlice.init(_:)();
}

uint64_t Data.init(contentsOf:options:)()
{
  return Data.init(contentsOf:options:)();
}

uint64_t Data.InlineSlice.init(_:)()
{
  return Data.InlineSlice.init(_:)();
}

uint64_t Data._Representation.replaceSubrange(_:with:count:)()
{
  return Data._Representation.replaceSubrange(_:with:count:)();
}

uint64_t Data._Representation.init(count:)()
{
  return Data._Representation.init(count:)();
}

uint64_t Data._Representation.append(contentsOf:)()
{
  return Data._Representation.append(contentsOf:)();
}

uint64_t Data._Representation.init(_:)()
{
  return Data._Representation.init(_:)();
}

NSData __swiftcall Data._bridgeToObjectiveC()()
{
  return (NSData)Data._bridgeToObjectiveC()();
}

Swift::String __swiftcall Data.base64EncodedString(options:)(NSDataBase64EncodingOptions options)
{
  uint64_t v1 = Data.base64EncodedString(options:)(options);
  result._object = v2;
  result._uint64_t countAndFlagsBits = v1;
  return result;
}

uint64_t static Data.== infix(_:_:)()
{
  return static Data.== infix(_:_:)();
}

uint64_t static Data._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Data.init(bytes:count:)()
{
  return Data.init(bytes:count:)();
}

uint64_t Data.count.getter()
{
  return Data.count.getter();
}

uint64_t Data.write(to:options:)()
{
  return Data.write(to:options:)();
}

uint64_t Date.init(timeIntervalSinceReferenceDate:)()
{
  return Date.init(timeIntervalSinceReferenceDate:)();
}

uint64_t Date.timeIntervalSinceReferenceDate.getter()
{
  return Date.timeIntervalSinceReferenceDate.getter();
}

uint64_t static Date.timeIntervalSinceReferenceDate.getter()
{
  return static Date.timeIntervalSinceReferenceDate.getter();
}

uint64_t static Date.distantPast.getter()
{
  return static Date.distantPast.getter();
}

Swift::Void __swiftcall Date.addTimeInterval(_:)(Swift::Double a1)
{
}

uint64_t Date.timeIntervalSince(_:)()
{
  return Date.timeIntervalSince(_:)();
}

uint64_t Date.addingTimeInterval(_:)()
{
  return Date.addingTimeInterval(_:)();
}

NSDate __swiftcall Date._bridgeToObjectiveC()()
{
  return (NSDate)Date._bridgeToObjectiveC()();
}

uint64_t static Date.> infix(_:_:)()
{
  return static Date.> infix(_:_:)();
}

uint64_t static Date.< infix(_:_:)()
{
  return static Date.< infix(_:_:)();
}

uint64_t static Date.+ infix(_:_:)()
{
  return static Date.+ infix(_:_:)();
}

uint64_t Date.init(timeIntervalSinceNow:)()
{
  return Date.init(timeIntervalSinceNow:)();
}

uint64_t Date.timeIntervalSinceNow.getter()
{
  return Date.timeIntervalSinceNow.getter();
}

uint64_t Date.timeIntervalSince1970.getter()
{
  return Date.timeIntervalSince1970.getter();
}

uint64_t static Date.== infix(_:_:)()
{
  return static Date.== infix(_:_:)();
}

uint64_t static Date._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t static Date.now.getter()
{
  return static Date.now.getter();
}

uint64_t Date.init()()
{
  return Date.init()();
}

uint64_t type metadata accessor for Date()
{
  return type metadata accessor for Date();
}

uint64_t UUID.uuidString.getter()
{
  return UUID.uuidString.getter();
}

uint64_t static UUID.== infix(_:_:)()
{
  return static UUID.== infix(_:_:)();
}

uint64_t static UUID._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t UUID.init()()
{
  return UUID.init()();
}

uint64_t type metadata accessor for UUID()
{
  return type metadata accessor for UUID();
}

uint64_t TimeZone.init(identifier:)()
{
  return TimeZone.init(identifier:)();
}

uint64_t TimeZone.secondsFromGMT(for:)()
{
  return TimeZone.secondsFromGMT(for:)();
}

uint64_t TimeZone.init(secondsFromGMT:)()
{
  return TimeZone.init(secondsFromGMT:)();
}

NSTimeZone __swiftcall TimeZone._bridgeToObjectiveC()()
{
  return (NSTimeZone)TimeZone._bridgeToObjectiveC()();
}

uint64_t static TimeZone.current.getter()
{
  return static TimeZone.current.getter();
}

uint64_t type metadata accessor for TimeZone()
{
  return type metadata accessor for TimeZone();
}

uint64_t isFeatureEnabled(_:)()
{
  return isFeatureEnabled(_:)();
}

uint64_t static DeviceDetails.deviceIsRunningInternalBuild()()
{
  return static DeviceDetails.deviceIsRunningInternalBuild()();
}

uint64_t type metadata accessor for DeviceDetails()
{
  return type metadata accessor for DeviceDetails();
}

uint64_t dispatch thunk of static DeviceInformation.deviceIsRunningInternalBuild()()
{
  return dispatch thunk of static DeviceInformation.deviceIsRunningInternalBuild()();
}

uint64_t os_log(_:dso:log:type:_:)()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t OSSignpostID.init(log:object:)()
{
  return OSSignpostID.init(log:object:)();
}

uint64_t OSSignpostID.init(log:)()
{
  return OSSignpostID.init(log:)();
}

uint64_t OSSignpostID.rawValue.getter()
{
  return OSSignpostID.rawValue.getter();
}

uint64_t type metadata accessor for OSSignpostID()
{
  return type metadata accessor for OSSignpostID();
}

uint64_t OSSignposter.init(logHandle:)()
{
  return OSSignposter.init(logHandle:)();
}

uint64_t OSSignposter.logHandle.getter()
{
  return OSSignposter.logHandle.getter();
}

uint64_t type metadata accessor for OSSignposter()
{
  return type metadata accessor for OSSignposter();
}

uint64_t type metadata accessor for OSSignpostError()
{
  return type metadata accessor for OSSignpostError();
}

uint64_t OSSignpostIntervalState.signpostID.getter()
{
  return OSSignpostIntervalState.signpostID.getter();
}

uint64_t OSSignpostIntervalState.init(id:isOpen:)()
{
  return OSSignpostIntervalState.init(id:isOpen:)();
}

uint64_t type metadata accessor for OSSignpostIntervalState()
{
  return type metadata accessor for OSSignpostIntervalState();
}

uint64_t checkForErrorAndConsumeState(state:)()
{
  return checkForErrorAndConsumeState(state:)();
}

Swift::Void __swiftcall AnyCancellable.cancel()()
{
}

uint64_t type metadata accessor for AnyCancellable()
{
  return type metadata accessor for AnyCancellable();
}

uint64_t PassthroughSubject.send(_:)()
{
  return PassthroughSubject.send(_:)();
}

uint64_t PassthroughSubject.init()()
{
  return PassthroughSubject.init()();
}

uint64_t CurrentValueSubject.send(_:)()
{
  return CurrentValueSubject.send(_:)();
}

uint64_t CurrentValueSubject.value.getter()
{
  return CurrentValueSubject.value.getter();
}

uint64_t CurrentValueSubject.init(_:)()
{
  return CurrentValueSubject.init(_:)();
}

uint64_t Subject<>.send()()
{
  return Subject<>.send()();
}

uint64_t Publisher.sink(receiveCompletion:receiveValue:)()
{
  return Publisher.sink(receiveCompletion:receiveValue:)();
}

uint64_t Publisher.filter(_:)()
{
  return Publisher.filter(_:)();
}

uint64_t Publisher.receive<A>(on:options:)()
{
  return Publisher.receive<A>(on:options:)();
}

uint64_t Publisher.debounce<A>(for:scheduler:options:)()
{
  return Publisher.debounce<A>(for:scheduler:options:)();
}

uint64_t Publisher<>.sink(receiveValue:)()
{
  return Publisher<>.sink(receiveValue:)();
}

uint64_t NWPathMonitor.currentPath.getter()
{
  return NWPathMonitor.currentPath.getter();
}

uint64_t NWPathMonitor.pathUpdateHandler.setter()
{
  return NWPathMonitor.pathUpdateHandler.setter();
}

uint64_t NWPathMonitor.start(queue:)()
{
  return NWPathMonitor.start(queue:)();
}

Swift::Void __swiftcall NWPathMonitor.cancel()()
{
}

uint64_t NWPathMonitor.init()()
{
  return NWPathMonitor.init()();
}

uint64_t type metadata accessor for NWPathMonitor()
{
  return type metadata accessor for NWPathMonitor();
}

uint64_t static NWPath.Status.== infix(_:_:)()
{
  return static NWPath.Status.== infix(_:_:)();
}

uint64_t type metadata accessor for NWPath.Status()
{
  return type metadata accessor for NWPath.Status();
}

uint64_t NWPath.status.getter()
{
  return NWPath.status.getter();
}

uint64_t type metadata accessor for NWPath()
{
  return type metadata accessor for NWPath();
}

uint64_t DispatchSpecificKey.init()()
{
  return DispatchSpecificKey.init()();
}

uint64_t type metadata accessor for DispatchTimeInterval()
{
  return type metadata accessor for DispatchTimeInterval();
}

uint64_t type metadata accessor for DispatchWorkItemFlags()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t type metadata accessor for DispatchQoS.QoSClass()
{
  return type metadata accessor for DispatchQoS.QoSClass();
}

uint64_t static DispatchQoS.background.getter()
{
  return static DispatchQoS.background.getter();
}

uint64_t static DispatchQoS.unspecified.getter()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t static DispatchQoS.utility.getter()
{
  return static DispatchQoS.utility.getter();
}

uint64_t type metadata accessor for DispatchQoS()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t static DispatchTime.now()()
{
  return static DispatchTime.now()();
}

uint64_t type metadata accessor for DispatchTime()
{
  return type metadata accessor for DispatchTime();
}

uint64_t type metadata accessor for DispatchPredicate()
{
  return type metadata accessor for DispatchPredicate();
}

uint64_t + infix(_:_:)()
{
  return + infix(_:_:)();
}

{
  return + infix(_:_:)();
}

uint64_t _dispatchPreconditionTest(_:)()
{
  return _dispatchPreconditionTest(_:)();
}

uint64_t dispatch thunk of HashFunction.update(bufferPointer:)()
{
  return dispatch thunk of HashFunction.update(bufferPointer:)();
}

uint64_t dispatch thunk of HashFunction.finalize()()
{
  return dispatch thunk of HashFunction.finalize()();
}

uint64_t dispatch thunk of HashFunction.init()()
{
  return dispatch thunk of HashFunction.init()();
}

uint64_t type metadata accessor for SHA256Digest()
{
  return type metadata accessor for SHA256Digest();
}

uint64_t Digest.makeIterator()()
{
  return Digest.makeIterator()();
}

uint64_t type metadata accessor for SHA256()
{
  return type metadata accessor for SHA256();
}

uint64_t DiskJetPackLoader.init(signingPolicy:keyProvider:)()
{
  return DiskJetPackLoader.init(signingPolicy:keyProvider:)();
}

uint64_t static DiskJetPackLoader.sharedUnpackQueue.getter()
{
  return static DiskJetPackLoader.sharedUnpackQueue.getter();
}

uint64_t DiskJetPackLoader.bundle(from:baseURL:automaticallyCleanUp:on:)()
{
  return DiskJetPackLoader.bundle(from:baseURL:automaticallyCleanUp:on:)();
}

uint64_t type metadata accessor for DiskJetPackLoader()
{
  return type metadata accessor for DiskJetPackLoader();
}

uint64_t static DiskJetPackResourceBundle.cleanUpOldSessions(baseURL:)()
{
  return static DiskJetPackResourceBundle.cleanUpOldSessions(baseURL:)();
}

uint64_t DiskJetPackResourceBundle.memoryMappedSource(atPath:virtualMachine:cacheURL:)()
{
  return DiskJetPackResourceBundle.memoryMappedSource(atPath:virtualMachine:cacheURL:)();
}

uint64_t DiskJetPackResourceBundle.fileData(atPath:)()
{
  return DiskJetPackResourceBundle.fileData(atPath:)();
}

uint64_t type metadata accessor for DiskJetPackResourceBundle()
{
  return type metadata accessor for DiskJetPackResourceBundle();
}

uint64_t type metadata accessor for JetPackSigningPolicy()
{
  return type metadata accessor for JetPackSigningPolicy();
}

uint64_t JetPackFileStreamSource.init(path:)()
{
  return JetPackFileStreamSource.init(path:)();
}

uint64_t type metadata accessor for JetPackFileStreamSource()
{
  return type metadata accessor for JetPackFileStreamSource();
}

uint64_t JetPackManagedKeyProvider.init()()
{
  return JetPackManagedKeyProvider.init()();
}

uint64_t type metadata accessor for JetPackManagedKeyProvider()
{
  return type metadata accessor for JetPackManagedKeyProvider();
}

uint64_t static JetPackPath.sourcePath.getter()
{
  return static JetPackPath.sourcePath.getter();
}

uint64_t type metadata accessor for JetPackPath()
{
  return type metadata accessor for JetPackPath();
}

uint64_t JetPackPath.init(_:)()
{
  return JetPackPath.init(_:)();
}

uint64_t JSCallable.call(_:)()
{
  return JSCallable.call(_:)();
}

uint64_t type metadata accessor for JSCallable()
{
  return type metadata accessor for JSCallable();
}

uint64_t JSONObject.init(deserializing:)()
{
  return JSONObject.init(deserializing:)();
}

uint64_t JSONObject.untyped.getter()
{
  return JSONObject.untyped.getter();
}

uint64_t JSONObject.init(wrapping:)()
{
  return JSONObject.init(wrapping:)();
}

uint64_t type metadata accessor for JSONObject()
{
  return type metadata accessor for JSONObject();
}

uint64_t JSResponse.body.getter()
{
  return JSResponse.body.getter();
}

uint64_t type metadata accessor for JSResponse()
{
  return type metadata accessor for JSResponse();
}

uint64_t LogMessage.init(stringLiteral:)()
{
  return LogMessage.init(stringLiteral:)();
}

uint64_t static LogMessage.isRedactionEnabled.getter()
{
  return static LogMessage.isRedactionEnabled.getter();
}

uint64_t LogMessage.StringInterpolation.appendInterpolation(safe:)()
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

uint64_t LogMessage.StringInterpolation.appendInterpolation(sensitive:)()
{
  return LogMessage.StringInterpolation.appendInterpolation(sensitive:)();
}

Swift::Void __swiftcall LogMessage.StringInterpolation.appendLiteral(_:)(Swift::String a1)
{
}

uint64_t LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t type metadata accessor for LogMessage.StringInterpolation()
{
  return type metadata accessor for LogMessage.StringInterpolation();
}

uint64_t LogMessage.init(stringInterpolation:)()
{
  return LogMessage.init(stringInterpolation:)();
}

uint64_t static LogMessage.safe(_:)()
{
  return static LogMessage.safe(_:)();
}

uint64_t static LogMessage.describe(contentsOf:withRedaction:separator:)()
{
  return static LogMessage.describe(contentsOf:withRedaction:separator:)();
}

uint64_t static LogMessage.sensitive(_:)()
{
  return static LogMessage.sensitive(_:)();
}

uint64_t type metadata accessor for LogMessage()
{
  return type metadata accessor for LogMessage();
}

uint64_t JSONContext.init()()
{
  return JSONContext.init()();
}

uint64_t type metadata accessor for JSONContext()
{
  return type metadata accessor for JSONContext();
}

uint64_t PipelineTask.andThen<A>(_:)()
{
  return PipelineTask.andThen<A>(_:)();
}

uint64_t CoarselyTimed.contained.getter()
{
  return CoarselyTimed.contained.getter();
}

uint64_t type metadata accessor for JetpackBundle.Resource()
{
  return type metadata accessor for JetpackBundle.Resource();
}

uint64_t JetpackBundle.init(bundleURL:)()
{
  return JetpackBundle.init(bundleURL:)();
}

uint64_t type metadata accessor for JetpackBundle()
{
  return type metadata accessor for JetpackBundle();
}

uint64_t static PipelinePhase.cacheValueIfSuccessful()()
{
  return static PipelinePhase.cacheValueIfSuccessful()();
}

uint64_t PipelinePhase.init(mapOutput:)()
{
  return PipelinePhase.init(mapOutput:)();
}

{
  return PipelinePhase.init(mapOutput:)();
}

uint64_t static PipelinePhase<>.urlForResource(_:)()
{
  return static PipelinePhase<>.urlForResource(_:)();
}

uint64_t static PipelinePhase<>.unpackJetpack(keyURLs:bundleOutputURL:artifactStoreURL:verifySignature:)()
{
  return static PipelinePhase<>.unpackJetpack(keyURLs:bundleOutputURL:artifactStoreURL:verifySignature:)();
}

uint64_t JSPackageIndex.properties.getter()
{
  return JSPackageIndex.properties.getter();
}

uint64_t JSPackageIndex.init(deserializing:using:from:)()
{
  return JSPackageIndex.init(deserializing:using:from:)();
}

uint64_t type metadata accessor for JSPackageIndex()
{
  return type metadata accessor for JSPackageIndex();
}

uint64_t static BaseObjectGraph.build(withName:)()
{
  return static BaseObjectGraph.build(withName:)();
}

uint64_t type metadata accessor for BaseObjectGraph()
{
  return type metadata accessor for BaseObjectGraph();
}

uint64_t dispatch thunk of MapPipelineTask.run()()
{
  return dispatch thunk of MapPipelineTask.run()();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> JSBytecodeSource.cacheBytecode()()
{
}

uint64_t JSBytecodeSource.isUsingBytecodeCache.getter()
{
  return JSBytecodeSource.isUsingBytecodeCache.getter();
}

uint64_t JSBytecodeSource.init(fileURL:sourceURL:cacheURL:virtualMachine:)()
{
  return JSBytecodeSource.init(fileURL:sourceURL:cacheURL:virtualMachine:)();
}

uint64_t type metadata accessor for JSBytecodeSource()
{
  return type metadata accessor for JSBytecodeSource();
}

uint64_t SyncTaskScheduler.init()()
{
  return SyncTaskScheduler.init()();
}

uint64_t type metadata accessor for SyncTaskScheduler()
{
  return type metadata accessor for SyncTaskScheduler();
}

uint64_t static RunLoopWorkerThread.current.getter()
{
  return static RunLoopWorkerThread.current.getter();
}

uint64_t dispatch thunk of RunLoopWorkerThread.schedule(task:)()
{
  return dispatch thunk of RunLoopWorkerThread.schedule(task:)();
}

uint64_t type metadata accessor for RunLoopWorkerThread()
{
  return type metadata accessor for RunLoopWorkerThread();
}

uint64_t dispatch thunk of AsyncObjectGraphBuilder.makeObjectGraph()()
{
  return dispatch thunk of AsyncObjectGraphBuilder.makeObjectGraph()();
}

uint64_t dispatch thunk of AsyncObjectGraphBuilder.satisfying<A>(_:with:)()
{
  return dispatch thunk of AsyncObjectGraphBuilder.satisfying<A>(_:with:)();
}

uint64_t AsyncObjectGraphBuilder.satisfying<A>(_:with:)()
{
  return AsyncObjectGraphBuilder.satisfying<A>(_:with:)();
}

{
  return AsyncObjectGraphBuilder.satisfying<A>(_:with:)();
}

uint64_t static ClassicDataVaultUtilities.createDataVault(at:for:)()
{
  return static ClassicDataVaultUtilities.createDataVault(at:for:)();
}

uint64_t Bag.amsBag.getter()
{
  return Bag.amsBag.getter();
}

uint64_t Bag.subscript.getter()
{
  return Bag.subscript.getter();
}

{
  return Bag.subscript.getter();
}

{
  return Bag.subscript.getter();
}

{
  return Bag.subscript.getter();
}

{
  return Bag.subscript.getter();
}

uint64_t Bag.init(from:)()
{
  return Bag.init(from:)();
}

uint64_t Bag.Value.currentOrNil()()
{
  return Bag.Value.currentOrNil()();
}

uint64_t type metadata accessor for Bag()
{
  return type metadata accessor for Bag();
}

uint64_t inject<A, B>(_:from:)()
{
  return inject<A, B>(_:from:)();
}

uint64_t JSError.line.getter()
{
  return JSError.line.getter();
}

uint64_t JSError.column.getter()
{
  return JSError.column.getter();
}

uint64_t JSError.message.getter()
{
  return JSError.message.getter();
}

uint64_t JSError.init(badValue:expected:)()
{
  return JSError.init(badValue:expected:)();
}

uint64_t JSError.sourceURL.getter()
{
  return JSError.sourceURL.getter();
}

uint64_t JSRoute.init(service:function:)()
{
  return JSRoute.init(service:function:)();
}

uint64_t JSRoute.service.getter()
{
  return JSRoute.service.getter();
}

uint64_t JSRoute.function.getter()
{
  return JSRoute.function.getter();
}

uint64_t type metadata accessor for JSRoute()
{
  return type metadata accessor for JSRoute();
}

uint64_t type metadata accessor for JSStack.Prerequisite()
{
  return type metadata accessor for JSStack.Prerequisite();
}

uint64_t JSStack.performRequest(_:)()
{
  return JSStack.performRequest(_:)();
}

uint64_t JSStack.withUnsafeContext(_:)()
{
  return JSStack.withUnsafeContext(_:)();
}

Swift::Void __swiftcall JSStack.makeRemoteInspectable()()
{
}

Swift::Void __swiftcall JSStack.requestGarbageCollection()()
{
}

uint64_t static JSStack.StandardGlobalConfiguration.default.getter()
{
  return static JSStack.StandardGlobalConfiguration.default.getter();
}

uint64_t type metadata accessor for JSStack.StandardGlobalConfiguration()
{
  return type metadata accessor for JSStack.StandardGlobalConfiguration();
}

uint64_t JSStack.__allocating_init(asPartOf:virtualMachine:configuration:customPrerequisites:qualityOfService:)()
{
  return JSStack.__allocating_init(asPartOf:virtualMachine:configuration:customPrerequisites:qualityOfService:)();
}

uint64_t type metadata accessor for JSStack()
{
  return type metadata accessor for JSStack();
}

uint64_t Promise.invalidate(_:)()
{
  return Promise.invalidate(_:)();
}

uint64_t Promise.makeCompletionAdapter()()
{
  return Promise.makeCompletionAdapter()();
}

uint64_t Promise.map<A>(on:_:)()
{
  return Promise.map<A>(on:_:)();
}

uint64_t Promise.join<A>(with:)()
{
  return Promise.join<A>(with:)();
}

uint64_t Promise.then(perform:orCatchError:on:)()
{
  return Promise.then(perform:orCatchError:on:)();
}

uint64_t Promise.__allocating_init(error:)()
{
  return Promise.__allocating_init(error:)();
}

uint64_t Promise.__allocating_init(value:)()
{
  return Promise.__allocating_init(value:)();
}

uint64_t Promise.always(on:perform:)()
{
  return Promise.always(on:perform:)();
}

uint64_t Promise.reject(_:)()
{
  return Promise.reject(_:)();
}

uint64_t Promise.flatMap<A>(on:_:)()
{
  return Promise.flatMap<A>(on:_:)();
}

uint64_t Promise.resolve(_:)()
{
  return Promise.resolve(_:)();
}

uint64_t Promise<A>.init(_:)()
{
  return Promise<A>.init(_:)();
}

uint64_t Promise.__allocating_init()()
{
  return Promise.__allocating_init()();
}

uint64_t static Pipeline.start<A>(with:)()
{
  return static Pipeline.start<A>(with:)();
}

uint64_t JSPromise.init(in:executor:)()
{
  return JSPromise.init(in:executor:)();
}

uint64_t JSPromise.value.getter()
{
  return JSPromise.value.getter();
}

uint64_t type metadata accessor for JSPromise()
{
  return type metadata accessor for JSPromise();
}

uint64_t JSRequest.timeoutInterval.getter()
{
  return JSRequest.timeoutInterval.getter();
}

uint64_t JSRequest.init(route:timeoutInterval:version:)()
{
  return JSRequest.init(route:timeoutInterval:version:)();
}

uint64_t JSRequest.route.getter()
{
  return JSRequest.route.getter();
}

uint64_t JSRequest.options.getter()
{
  return JSRequest.options.getter();
}

uint64_t JSRequest.addOption(_:withName:)()
{
  return JSRequest.addOption(_:withName:)();
}

uint64_t type metadata accessor for JSRequest()
{
  return type metadata accessor for JSRequest();
}

NSDictionary __swiftcall Dictionary._bridgeToObjectiveC()()
{
  return (NSDictionary)Dictionary._bridgeToObjectiveC()();
}

uint64_t static Dictionary._forceBridgeFromObjectiveC(_:result:)()
{
  return static Dictionary._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static Dictionary._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Dictionary.description.getter()
{
  return Dictionary.description.getter();
}

uint64_t Dictionary.init(dictionaryLiteral:)()
{
  return Dictionary.init(dictionaryLiteral:)();
}

Swift::Void __swiftcall Dictionary._Variant.removeAll(keepingCapacity:)(Swift::Bool keepingCapacity)
{
}

uint64_t dispatch thunk of Hashable.hash(into:)()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t BidirectionalCollection<>.joined(separator:)()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t dispatch thunk of static Comparable.< infix(_:_:)()
{
  return dispatch thunk of static Comparable.< infix(_:_:)();
}

uint64_t static Comparable.> infix(_:_:)()
{
  return static Comparable.> infix(_:_:)();
}

uint64_t static Comparable.>= infix(_:_:)()
{
  return static Comparable.>= infix(_:_:)();
}

uint64_t static Comparable.<= infix(_:_:)()
{
  return static Comparable.<= infix(_:_:)();
}

uint64_t MutableCollection.swapAt(_:_:)()
{
  return MutableCollection.swapAt(_:_:)();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)String._bridgeToObjectiveC()();
}

uint64_t static String._forceBridgeFromObjectiveC(_:result:)()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t String.data(using:allowLossyConversion:)()
{
  return String.data(using:allowLossyConversion:)();
}

uint64_t String.init(data:encoding:)()
{
  return String.init(data:encoding:)();
}

uint64_t String.init(format:_:)()
{
  return String.init(format:_:)();
}

uint64_t static String.Encoding.utf8.getter()
{
  return static String.Encoding.utf8.getter();
}

uint64_t String.Encoding.rawValue.getter()
{
  return String.Encoding.rawValue.getter();
}

uint64_t type metadata accessor for String.Encoding()
{
  return type metadata accessor for String.Encoding();
}

uint64_t String.init<A>(describing:)()
{
  return String.init<A>(describing:)();
}

Swift::String __swiftcall String.lowercased()()
{
  uint64_t v0 = String.lowercased()();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t String.utf8CString.getter()
{
  return String.utf8CString.getter();
}

uint64_t static String._fromSubstring(_:)()
{
  return static String._fromSubstring(_:)();
}

uint64_t static String._uncheckedFromUTF8(_:)()
{
  return static String._uncheckedFromUTF8(_:)();
}

uint64_t String.hash(into:)()
{
  return String.hash(into:)();
}

uint64_t String.count.getter()
{
  return String.count.getter();
}

uint64_t String.index(after:)()
{
  return String.index(after:)();
}

uint64_t String.index(_:offsetBy:limitedBy:)()
{
  return String.index(_:offsetBy:limitedBy:)();
}

Swift::Void __swiftcall String.append(_:)(Swift::String a1)
{
}

uint64_t String.init(cString:)()
{
  return String.init(cString:)();
}

{
  return String.init(cString:)();
}

Swift::Int __swiftcall String.UTF8View._foreignCount()()
{
  return String.UTF8View._foreignCount()();
}

uint64_t String.UTF8View._foreignIndex(after:)()
{
  return String.UTF8View._foreignIndex(after:)();
}

uint64_t String.UTF8View._foreignIndex(_:offsetBy:)()
{
  return String.UTF8View._foreignIndex(_:offsetBy:)();
}

uint64_t String.UTF8View._foreignSubscript(position:)()
{
  return String.UTF8View._foreignSubscript(position:)();
}

uint64_t String.UTF16View.index(_:offsetBy:)()
{
  return String.UTF16View.index(_:offsetBy:)();
}

Swift::Bool __swiftcall String.hasPrefix(_:)(Swift::String a1)
{
  return String.hasPrefix(_:)(a1._countAndFlagsBits, a1._object);
}

Swift::String __swiftcall String.init(repeating:count:)(Swift::String repeating, Swift::Int count)
{
  uint64_t v2 = String.init(repeating:count:)(repeating._countAndFlagsBits, repeating._object, count);
  result._object = v3;
  result._uint64_t countAndFlagsBits = v2;
  return result;
}

uint64_t String.subscript.getter()
{
  return String.subscript.getter();
}

{
  return String.subscript.getter();
}

uint64_t String.init<A>(_:)()
{
  return String.init<A>(_:)();
}

uint64_t Sequence._copyContents(initializing:)()
{
  return Sequence._copyContents(initializing:)();
}

uint64_t Sequence._copyToContiguousArray()()
{
  return Sequence._copyToContiguousArray()();
}

uint64_t Sequence.withContiguousStorageIfAvailable<A>(_:)()
{
  return Sequence.withContiguousStorageIfAvailable<A>(_:)();
}

uint64_t RawRepresentable<>.encode(to:)()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t RawRepresentable<>.init(from:)()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t specialized Array._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray __swiftcall Array._bridgeToObjectiveC()()
{
  return (NSArray)Array._bridgeToObjectiveC()();
}

uint64_t static Array._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Array._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static Array._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t specialized Array._endMutation()()
{
  return specialized Array._endMutation()();
}

uint64_t specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t static Array._allocateUninitialized(_:)()
{
  return static Array._allocateUninitialized(_:)();
}

uint64_t static Array._allocateBufferUninitialized(minimumCapacity:)()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

NSNumber __swiftcall Bool._bridgeToObjectiveC()()
{
  return (NSNumber)Bool._bridgeToObjectiveC()();
}

uint64_t dispatch thunk of Actor.unownedExecutor.getter()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t CheckedContinuation.resume(throwing:)()
{
  return CheckedContinuation.resume(throwing:)();
}

uint64_t CheckedContinuation.resume(returning:)()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t TaskPriority.rawValue.getter()
{
  return TaskPriority.rawValue.getter();
}

uint64_t type metadata accessor for TaskPriority()
{
  return type metadata accessor for TaskPriority();
}

NSNumber __swiftcall Double._bridgeToObjectiveC()()
{
  return (NSNumber)Double._bridgeToObjectiveC()();
}

uint64_t Double.description.getter()
{
  return Double.description.getter();
}

uint64_t Double.sign.getter()
{
  return Double.sign.getter();
}

uint64_t Double.write<A>(to:)()
{
  return Double.write<A>(to:)();
}

NSSet __swiftcall Set._bridgeToObjectiveC()()
{
  return (NSSet)Set._bridgeToObjectiveC()();
}

uint64_t static Set._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Set._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static Set._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Set.description.getter()
{
  return Set.description.getter();
}

uint64_t Set.init(minimumCapacity:)()
{
  return Set.init(minimumCapacity:)();
}

uint64_t Set.Index._asCocoa.modify()
{
  return Set.Index._asCocoa.modify();
}

uint64_t static Int._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Int._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t dispatch thunk of Collection.startIndex.getter()
{
  return dispatch thunk of Collection.startIndex.getter();
}

uint64_t dispatch thunk of Collection.count.getter()
{
  return dispatch thunk of Collection.count.getter();
}

uint64_t dispatch thunk of Collection.formIndex(after:)()
{
  return dispatch thunk of Collection.formIndex(after:)();
}

uint64_t Collection.isEmpty.getter()
{
  return Collection.isEmpty.getter();
}

uint64_t dispatch thunk of Collection.subscript.read()
{
  return dispatch thunk of Collection.subscript.read();
}

uint64_t RangeReplaceableCollection<>.removeLast()()
{
  return RangeReplaceableCollection<>.removeLast()();
}

CKRecordID __swiftcall CKRecordID.init(recordName:zoneID:)(Swift::String recordName, CKRecordZoneID zoneID)
{
  return (CKRecordID)CKRecordID.init(recordName:zoneID:)(recordName._countAndFlagsBits, recordName._object, zoneID.super.isa);
}

uint64_t NSPredicate.init(format:_:)()
{
  return NSPredicate.init(format:_:)();
}

uint64_t NSDictionary.makeIterator()()
{
  return NSDictionary.makeIterator()();
}

uint64_t NSDictionary.init(dictionaryLiteral:)()
{
  return NSDictionary.init(dictionaryLiteral:)();
}

uint64_t type metadata accessor for NSDictionary.Iterator()
{
  return type metadata accessor for NSDictionary.Iterator();
}

uint64_t static os_log_type_t.info.getter()
{
  return static os_log_type_t.info.getter();
}

uint64_t static os_log_type_t.debug.getter()
{
  return static os_log_type_t.debug.getter();
}

uint64_t static os_log_type_t.error.getter()
{
  return static os_log_type_t.error.getter();
}

uint64_t static os_log_type_t.fault.getter()
{
  return static os_log_type_t.fault.getter();
}

uint64_t static os_log_type_t.default.getter()
{
  return static os_log_type_t.default.getter();
}

CKRecordZoneID __swiftcall CKRecordZoneID.init(zoneName:ownerName:)(Swift::String zoneName, Swift::String ownerName)
{
  return (CKRecordZoneID)CKRecordZoneID.init(zoneName:ownerName:)(zoneName._countAndFlagsBits, zoneName._object, ownerName._countAndFlagsBits, ownerName._object);
}

uint64_t static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)()
{
  return static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)();
}

uint64_t OS_dispatch_group.notify(qos:flags:queue:execute:)()
{
  return OS_dispatch_group.notify(qos:flags:queue:execute:)();
}

uint64_t type metadata accessor for OS_dispatch_queue.Attributes()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t static OS_dispatch_queue.getSpecific<A>(key:)()
{
  return static OS_dispatch_queue.getSpecific<A>(key:)();
}

uint64_t OS_dispatch_queue.setSpecific<A>(key:value:)()
{
  return OS_dispatch_queue.setSpecific<A>(key:value:)();
}

uint64_t type metadata accessor for OS_dispatch_queue.SchedulerOptions()
{
  return type metadata accessor for OS_dispatch_queue.SchedulerOptions();
}

uint64_t static OS_dispatch_queue.SchedulerTimeType.Stride.milliseconds(_:)()
{
  return static OS_dispatch_queue.SchedulerTimeType.Stride.milliseconds(_:)();
}

uint64_t static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)()
{
  return static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
}

uint64_t type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride()
{
  return type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
}

uint64_t type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t static OS_dispatch_queue.main.getter()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t OS_dispatch_queue.sync<A>(execute:)()
{
  return OS_dispatch_queue.sync<A>(execute:)();
}

uint64_t OS_dispatch_queue.async(group:qos:flags:execute:)()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t static OS_dispatch_queue.global(qos:)()
{
  return static OS_dispatch_queue.global(qos:)();
}

uint64_t static OS_dispatch_source.makeSignalSource(signal:queue:)()
{
  return static OS_dispatch_source.makeSignalSource(signal:queue:)();
}

uint64_t OS_dispatch_source.setEventHandler(qos:flags:handler:)()
{
  return OS_dispatch_source.setEventHandler(qos:flags:handler:)();
}

Swift::Void __swiftcall OS_dispatch_source.cancel()()
{
}

Swift::Void __swiftcall OS_dispatch_source.activate()()
{
}

uint64_t static os_signpost_type_t.end.getter()
{
  return static os_signpost_type_t.end.getter();
}

uint64_t static os_signpost_type_t.begin.getter()
{
  return static os_signpost_type_t.begin.getter();
}

uint64_t static os_signpost_type_t.event.getter()
{
  return static os_signpost_type_t.event.getter();
}

uint64_t type metadata accessor for NSNotificationCenter.Publisher()
{
  return type metadata accessor for NSNotificationCenter.Publisher();
}

uint64_t NSNotificationCenter.publisher(for:object:)()
{
  return NSNotificationCenter.publisher(for:object:)();
}

Swift::Void __swiftcall OS_dispatch_semaphore.wait()()
{
}

Swift::Int __swiftcall OS_dispatch_semaphore.signal()()
{
  return OS_dispatch_semaphore.signal()();
}

uint64_t JSValue.int.getter()
{
  return JSValue.int.getter();
}

uint64_t JSValue.BOOL.getter()
{
  return JSValue.BOOL.getter();
}

uint64_t JSValue.string.getter()
{
  return JSValue.string.getter();
}

uint64_t JSValue.subscript.getter()
{
  return JSValue.subscript.getter();
}

uint64_t NSArray.makeIterator()()
{
  return NSArray.makeIterator()();
}

CKRecord __swiftcall CKRecord.init(recordType:recordID:)(Swift::String recordType, CKRecordID recordID)
{
  return (CKRecord)CKRecord.init(recordType:recordID:)(recordType._countAndFlagsBits, recordType._object, recordID.super.isa);
}

Swift::Int __swiftcall NSObject._rawHashValue(seed:)(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t static NSObject.== infix(_:_:)()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t NSObject.hash(into:)()
{
  return NSObject.hash(into:)();
}

uint64_t NSObject.hashValue.getter()
{
  return NSObject.hashValue.getter();
}

uint64_t static JSContext.requiredCurrent.getter()
{
  return static JSContext.requiredCurrent.getter();
}

uint64_t JSContext.propagateErrorsToExceptions(_:)()
{
  return JSContext.propagateErrorsToExceptions(_:)();
}

uint64_t OS_os_log.signpostsEnabled.getter()
{
  return OS_os_log.signpostsEnabled.getter();
}

uint64_t OS_os_log.init(subsystem:category:)()
{
  return OS_os_log.init(subsystem:category:)();
}

uint64_t type metadata accessor for Optional()
{
  return type metadata accessor for Optional();
}

uint64_t dispatch thunk of IteratorProtocol.next()()
{
  return dispatch thunk of IteratorProtocol.next()();
}

uint64_t UnsafeMutableRawBufferPointer.copyMemory(from:)()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t UnsafeMutableRawBufferPointer.subscript.setter()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)()
{
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
}

uint64_t StringProtocol.addingPercentEncoding(withAllowedCharacters:)()
{
  return StringProtocol.addingPercentEncoding(withAllowedCharacters:)();
}

uint64_t StringProtocol.removingPercentEncoding.getter()
{
  return StringProtocol.removingPercentEncoding.getter();
}

uint64_t StringProtocol.hash.getter()
{
  return StringProtocol.hash.getter();
}

uint64_t _bridgeAnyObjectToAny(_:)()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t dispatch thunk of SetAlgebra.init<A>(_:)()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t _HashTable.previousHole(before:)()
{
  return _HashTable.previousHole(before:)();
}

uint64_t _HashTable.occupiedBucket(after:)()
{
  return _HashTable.occupiedBucket(after:)();
}

uint64_t _HashTable.nextHole(atOrAfter:)()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t __CocoaSet.startIndex.getter()
{
  return __CocoaSet.startIndex.getter();
}

uint64_t __CocoaSet.makeIterator()()
{
  return __CocoaSet.makeIterator()();
}

uint64_t __CocoaSet.Index.handleBitPattern.getter()
{
  return __CocoaSet.Index.handleBitPattern.getter();
}

uint64_t __CocoaSet.Index.age.getter()
{
  return __CocoaSet.Index.age.getter();
}

uint64_t __CocoaSet.Index.element.getter()
{
  return __CocoaSet.Index.element.getter();
}

uint64_t __CocoaSet.count.getter()
{
  return __CocoaSet.count.getter();
}

uint64_t __CocoaSet.member(for:)()
{
  return __CocoaSet.member(for:)();
}

uint64_t __CocoaSet.element(at:)()
{
  return __CocoaSet.element(at:)();
}

uint64_t __CocoaSet.Iterator.next()()
{
  return __CocoaSet.Iterator.next()();
}

uint64_t __CocoaSet.formIndex(after:isUnique:)()
{
  return __CocoaSet.formIndex(after:isUnique:)();
}

uint64_t _expectEnd<A>(of:is:)()
{
  return _expectEnd<A>(of:is:)();
}

Swift::Int __swiftcall AnyHashable._rawHashValue(seed:)(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t static AnyHashable.== infix(_:_:)()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t AnyHashable.init<A>(_:)()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t static _SetStorage.copy(original:)()
{
  return static _SetStorage.copy(original:)();
}

uint64_t static _SetStorage.resize(original:capacity:move:)()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t static _SetStorage.convert(_:capacity:)()
{
  return static _SetStorage.convert(_:capacity:)();
}

uint64_t static _SetStorage.allocate(capacity:)()
{
  return static _SetStorage.allocate(capacity:)();
}

Swift::Void __swiftcall _StringGuts.grow(_:)(Swift::Int a1)
{
}

uint64_t _StringGuts.copyUTF8(into:)()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t specialized _ArrayBuffer._getElementSlowPath(_:)()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t _StringObject.sharedUTF8.getter()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t specialized ContiguousArray._endMutation()()
{
  return specialized ContiguousArray._endMutation()();
}

Swift::Void __swiftcall ContiguousArray.reserveCapacity(_:)(Swift::Int a1)
{
}

uint64_t specialized ContiguousArray.reserveCapacity(_:)()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

Swift::Void __swiftcall ContiguousArray._makeMutableAndUnique()()
{
}

uint64_t specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t ContiguousArray.count.getter()
{
  return ContiguousArray.count.getter();
}

uint64_t ContiguousArray.append(_:)()
{
  return ContiguousArray.append(_:)();
}

uint64_t ContiguousArray.init()()
{
  return ContiguousArray.init()();
}

uint64_t type metadata accessor for ContiguousArray()
{
  return type metadata accessor for ContiguousArray();
}

uint64_t ContiguousArray.subscript.getter()
{
  return ContiguousArray.subscript.getter();
}

uint64_t _print_unlocked<A, B>(_:_:)()
{
  return _print_unlocked<A, B>(_:_:)();
}

Swift::Bool __swiftcall _NativeDictionary.ensureUnique(isUnique:capacity:)(Swift::Bool isUnique, Swift::Int capacity)
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(isUnique, capacity);
}

Swift::Void __swiftcall _NativeDictionary.copy()()
{
}

uint64_t _NativeDictionary._delete(at:)()
{
  return _NativeDictionary._delete(at:)();
}

uint64_t __CocoaDictionary.makeIterator()()
{
  return __CocoaDictionary.makeIterator()();
}

uint64_t __CocoaDictionary.count.getter()
{
  return __CocoaDictionary.count.getter();
}

uint64_t __CocoaDictionary.lookup(_:)()
{
  return __CocoaDictionary.lookup(_:)();
}

uint64_t __CocoaDictionary.Iterator.next()()
{
  return __CocoaDictionary.Iterator.next()();
}

uint64_t _assertionFailure(_:_:file:line:flags:)()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t _CocoaArrayWrapper.endIndex.getter()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t static _DictionaryStorage.copy(original:)()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t static _DictionaryStorage.resize(original:capacity:move:)()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t static _DictionaryStorage.convert(_:capacity:)()
{
  return static _DictionaryStorage.convert(_:capacity:)();
}

uint64_t static _DictionaryStorage.allocate(capacity:)()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t _fatalErrorMessage(_:_:file:line:flags:)()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

Swift::Int __swiftcall _findStringSwitchCase(cases:string:)(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases._rawValue, string._countAndFlagsBits, string._object);
}

uint64_t KeyedDecodingContainer.decodeIfPresent(_:forKey:)()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decode(_:forKey:)()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decode<A>(_:forKey:)()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t KeyedDecodingContainer.allKeys.getter()
{
  return KeyedDecodingContainer.allKeys.getter();
}

uint64_t KeyedEncodingContainer.encodeIfPresent(_:forKey:)()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encode(_:forKey:)()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encode<A>(_:forKey:)()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

Swift::Int __swiftcall _minimumMergeRunLength(_:)(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t dispatch thunk of CustomStringConvertible.description.getter()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t _getErrorEmbeddedNSError<A>(_:)()
{
  return _getErrorEmbeddedNSError<A>(_:)();
}

uint64_t _bridgeAnythingToObjectiveC<A>(_:)()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t dispatch thunk of SingleValueDecodingContainer.decode(_:)()
{
  return dispatch thunk of SingleValueDecodingContainer.decode(_:)();
}

uint64_t dispatch thunk of SingleValueEncodingContainer.encode(_:)()
{
  return dispatch thunk of SingleValueEncodingContainer.encode(_:)();
}

uint64_t type metadata accessor for __ContiguousArrayStorageBase()
{
  return type metadata accessor for __ContiguousArrayStorageBase();
}

uint64_t _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()
{
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
}

uint64_t ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t Error.localizedDescription.getter()
{
  return Error.localizedDescription.getter();
}

uint64_t Error._getEmbeddedNSError()()
{
  return Error._getEmbeddedNSError()();
}

uint64_t Error._code.getter()
{
  return Error._code.getter();
}

uint64_t Error._domain.getter()
{
  return Error._domain.getter();
}

uint64_t Error._userInfo.getter()
{
  return Error._userInfo.getter();
}

uint64_t static Hasher._hash(seed:bytes:count:)()
{
  return static Hasher._hash(seed:bytes:count:)();
}

uint64_t static Hasher._hash(seed:_:)()
{
  return static Hasher._hash(seed:_:)();
}

uint64_t Hasher.init(_seed:)()
{
  return Hasher.init(_seed:)();
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt8 a1)
{
}

Swift::Int __swiftcall Hasher.finalize()()
{
  return Hasher.finalize()();
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return Hasher._finalize()();
}

uint64_t Hasher.init()()
{
  return Hasher.init()();
}

uint64_t dispatch thunk of Decoder.singleValueContainer()()
{
  return dispatch thunk of Decoder.singleValueContainer()();
}

uint64_t dispatch thunk of Decoder.container<A>(keyedBy:)()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t dispatch thunk of Encoder.singleValueContainer()()
{
  return dispatch thunk of Encoder.singleValueContainer()();
}

uint64_t dispatch thunk of Encoder.container<A>(keyedBy:)()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t AMSCustomError()
{
  return _AMSCustomError();
}

uint64_t AMSError()
{
  return _AMSError();
}

uint64_t AMSGenerateLogCorrelationKey()
{
  return _AMSGenerateLogCorrelationKey();
}

uint64_t AMSHashIfNeeded()
{
  return _AMSHashIfNeeded();
}

uint64_t AMSLogKey()
{
  return _AMSLogKey();
}

uint64_t AMSLogableError()
{
  return _AMSLogableError();
}

uint64_t AMSSetLogKey()
{
  return _AMSSetLogKey();
}

uint64_t AMSSetLogKeyIfNeeded()
{
  return _AMSSetLogKeyIfNeeded();
}

uint64_t BYSetupAssistantNeedsToRun()
{
  return _BYSetupAssistantNeedsToRun();
}

CFTypeID CFArrayGetTypeID(void)
{
  return _CFArrayGetTypeID();
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return _CFGetTypeID(cf);
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return _CFNotificationCenterGetDarwinNotifyCenter();
}

Boolean CFPreferencesAppSynchronize(CFStringRef applicationID)
{
  return _CFPreferencesAppSynchronize(applicationID);
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return _CFPreferencesCopyAppValue(key, applicationID);
}

CFPropertyListRef CFPreferencesCopyValue(CFStringRef key, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return _CFPreferencesCopyValue(key, applicationID, userName, hostName);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return _CFPreferencesGetAppBooleanValue(key, applicationID, keyExistsAndHasValidFormat);
}

CFIndex CFPreferencesGetAppIntegerValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return _CFPreferencesGetAppIntegerValue(key, applicationID, keyExistsAndHasValidFormat);
}

void CFPreferencesSetAppValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID)
{
}

CFRunLoopRunResult CFRunLoopRunInMode(CFRunLoopMode mode, CFTimeInterval seconds, Boolean returnAfterSourceHandled)
{
  return _CFRunLoopRunInMode(mode, seconds, returnAfterSourceHandled);
}

JSContextGroupRef JSContextGetGroup(JSContextRef ctx)
{
  return _JSContextGetGroup(ctx);
}

uint64_t MGGetBoolAnswer()
{
  return _MGGetBoolAnswer();
}

uint64_t MGGetStringAnswer()
{
  return _MGGetStringAnswer();
}

uint64_t MKBDeviceUnlockedSinceBoot()
{
  return _MKBDeviceUnlockedSinceBoot();
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

CFTypeRef SecTaskCopyValueForEntitlement(SecTaskRef task, CFStringRef entitlement, CFErrorRef *error)
{
  return _SecTaskCopyValueForEntitlement(task, entitlement, error);
}

SecTaskRef SecTaskCreateFromSelf(CFAllocatorRef allocator)
{
  return _SecTaskCreateFromSelf(allocator);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

{
}

{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _sl_dlopen()
{
  return __sl_dlopen();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

uint64_t abort_report_np()
{
  return _abort_report_np();
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return _dispatch_group_create();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

void exit(int a1)
{
}

long double exp2(long double __x)
{
  return _exp2(__x);
}

void free(void *a1)
{
}

long double log2(long double __x)
{
  return _log2(__x);
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

uint32_t notify_cancel(int token)
{
  return _notify_cancel(token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return _notify_register_dispatch(name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

id objc_begin_catch(void *exc_buf)
{
  return _objc_begin_catch(exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_end_catch(void)
{
}

void objc_enumerationMutation(id obj)
{
}

Class objc_getClass(const char *name)
{
  return _objc_getClass(name);
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return _objc_msgSendSuper2(a1, a2);
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

uint64_t os_transaction_create()
{
  return _os_transaction_create();
}

int setenv(const char *__name, const char *__value, int __overwrite)
{
  return _setenv(__name, __value, __overwrite);
}

int sqlite3_bind_blob(sqlite3_stmt *a1, int a2, const void *a3, int n, void (__cdecl *a5)(void *))
{
  return _sqlite3_bind_blob(a1, a2, a3, n, a5);
}

int sqlite3_bind_double(sqlite3_stmt *a1, int a2, double a3)
{
  return _sqlite3_bind_double(a1, a2, a3);
}

int sqlite3_bind_int64(sqlite3_stmt *a1, int a2, sqlite3_int64 a3)
{
  return _sqlite3_bind_int64(a1, a2, a3);
}

int sqlite3_bind_null(sqlite3_stmt *a1, int a2)
{
  return _sqlite3_bind_null(a1, a2);
}

int sqlite3_bind_text(sqlite3_stmt *a1, int a2, const char *a3, int a4, void (__cdecl *a5)(void *))
{
  return _sqlite3_bind_text(a1, a2, a3, a4, a5);
}

int sqlite3_busy_timeout(sqlite3 *a1, int ms)
{
  return _sqlite3_busy_timeout(a1, ms);
}

int sqlite3_clear_bindings(sqlite3_stmt *a1)
{
  return _sqlite3_clear_bindings(a1);
}

int sqlite3_close(sqlite3 *a1)
{
  return _sqlite3_close(a1);
}

const void *__cdecl sqlite3_column_blob(sqlite3_stmt *a1, int iCol)
{
  return _sqlite3_column_blob(a1, iCol);
}

int sqlite3_column_bytes(sqlite3_stmt *a1, int iCol)
{
  return _sqlite3_column_bytes(a1, iCol);
}

int sqlite3_column_count(sqlite3_stmt *pStmt)
{
  return _sqlite3_column_count(pStmt);
}

double sqlite3_column_double(sqlite3_stmt *a1, int iCol)
{
  return _sqlite3_column_double(a1, iCol);
}

sqlite3_int64 sqlite3_column_int64(sqlite3_stmt *a1, int iCol)
{
  return _sqlite3_column_int64(a1, iCol);
}

const char *__cdecl sqlite3_column_name(sqlite3_stmt *a1, int N)
{
  return _sqlite3_column_name(a1, N);
}

const unsigned __int8 *__cdecl sqlite3_column_text(sqlite3_stmt *a1, int iCol)
{
  return _sqlite3_column_text(a1, iCol);
}

int sqlite3_column_type(sqlite3_stmt *a1, int iCol)
{
  return _sqlite3_column_type(a1, iCol);
}

const char *__cdecl sqlite3_errmsg(sqlite3 *a1)
{
  return _sqlite3_errmsg(a1);
}

const char *__cdecl sqlite3_errstr(int a1)
{
  return _sqlite3_errstr(a1);
}

int sqlite3_exec(sqlite3 *a1, const char *sql, int (__cdecl *callback)(void *, int, char **, char **), void *a4, char **errmsg)
{
  return _sqlite3_exec(a1, sql, callback, a4, errmsg);
}

int sqlite3_file_control(sqlite3 *a1, const char *zDbName, int op, void *a4)
{
  return _sqlite3_file_control(a1, zDbName, op, a4);
}

int sqlite3_finalize(sqlite3_stmt *pStmt)
{
  return _sqlite3_finalize(pStmt);
}

int sqlite3_open_v2(const char *filename, sqlite3 **ppDb, int flags, const char *zVfs)
{
  return _sqlite3_open_v2(filename, ppDb, flags, zVfs);
}

int sqlite3_prepare_v2(sqlite3 *db, const char *zSql, int nByte, sqlite3_stmt **ppStmt, const char **pzTail)
{
  return _sqlite3_prepare_v2(db, zSql, nByte, ppStmt, pzTail);
}

int sqlite3_reset(sqlite3_stmt *pStmt)
{
  return _sqlite3_reset(pStmt);
}

int sqlite3_step(sqlite3_stmt *a1)
{
  return _sqlite3_step(a1);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return _swift_allocateGenericClassMetadata();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_asyncLet_begin()
{
  return _swift_asyncLet_begin();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_checkMetadataState()
{
  return _swift_checkMetadataState();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_deallocPartialClassInstance()
{
  return _swift_deallocPartialClassInstance();
}

uint64_t swift_defaultActor_destroy()
{
  return _swift_defaultActor_destroy();
}

uint64_t swift_defaultActor_initialize()
{
  return _swift_defaultActor_initialize();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastMetatype()
{
  return _swift_dynamicCastMetatype();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getDynamicType()
{
  return _swift_getDynamicType();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getMetatypeMetadata()
{
  return _swift_getMetatypeMetadata();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStaticObject()
{
  return _swift_initStaticObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_nonNull()
{
  return _swift_isUniquelyReferenced_nonNull();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_projectBox()
{
  return _swift_projectBox();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return _swift_stdlib_isStackAllocationSafe();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unexpectedError()
{
  return _swift_unexpectedError();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_unknownObjectWeakCopyAssign()
{
  return _swift_unknownObjectWeakCopyAssign();
}

uint64_t swift_unknownObjectWeakCopyInit()
{
  return _swift_unknownObjectWeakCopyInit();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_unknownObjectWeakTakeAssign()
{
  return _swift_unknownObjectWeakTakeAssign();
}

uint64_t swift_unknownObjectWeakTakeInit()
{
  return _swift_unknownObjectWeakTakeInit();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakAssign()
{
  return _swift_weakAssign();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

xpc_object_t xpc_activity_copy_criteria(xpc_activity_t activity)
{
  return _xpc_activity_copy_criteria(activity);
}

xpc_activity_state_t xpc_activity_get_state(xpc_activity_t activity)
{
  return _xpc_activity_get_state(activity);
}

void xpc_activity_register(const char *identifier, xpc_object_t criteria, xpc_activity_handler_t handler)
{
}

BOOL xpc_activity_set_state(xpc_activity_t activity, xpc_activity_state_t state)
{
  return _xpc_activity_set_state(activity, state);
}

void xpc_activity_unregister(const char *identifier)
{
}

xpc_object_t xpc_dictionary_create(const char *const *keys, xpc_object_t *values, size_t count)
{
  return _xpc_dictionary_create(keys, values, count);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_string(xdict, key);
}

void xpc_dictionary_set_BOOL(xpc_object_t xdict, const char *key, BOOL value)
{
}

void xpc_dictionary_set_int64(xpc_object_t xdict, const char *key, int64_t value)
{
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
}

void xpc_set_event_stream_handler(const char *stream, dispatch_queue_t targetq, xpc_handler_t handler)
{
}

id objc_msgSend_OSLogObject(void *a1, const char *a2, ...)
{
  return _[a1 OSLogObject];
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return _[a1 URL];
}

id objc_msgSend_URLForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLForKey:");
}

id objc_msgSend__addCampaignToken_andGroup_toURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addCampaignToken:andGroup:toURL:");
}

id objc_msgSend__bag(void *a1, const char *a2, ...)
{
  return _[a1 _bag];
}

id objc_msgSend__changeTokenKeyForDatabaseScope_recordZoneName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_changeTokenKeyForDatabaseScope:recordZoneName:");
}

id objc_msgSend__fetchChangeTokenWithDatabaseScope_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchChangeTokenWithDatabaseScope:");
}

id objc_msgSend__fetchChangeTokenWithDatabaseScope_recordZoneName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchChangeTokenWithDatabaseScope:recordZoneName:");
}

id objc_msgSend__fetchChangedRecordZonesWithServerChangeToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchChangedRecordZonesWithServerChangeToken:");
}

id objc_msgSend__fetchChangedRecordsInRecordZonesWithWithRecordZoneIDs_changeTokens_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchChangedRecordsInRecordZonesWithWithRecordZoneIDs:changeTokens:");
}

id objc_msgSend__fetchShareMetadataForURL_withToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchShareMetadataForURL:withToken:");
}

id objc_msgSend__handleError_andErrors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleError:andErrors:");
}

id objc_msgSend__hasArcadeSubscription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasArcadeSubscription:");
}

id objc_msgSend__hasFitnessPlusSubscription(void *a1, const char *a2, ...)
{
  return _[a1 _hasFitnessPlusSubscription];
}

id objc_msgSend__hasMusicSubscription(void *a1, const char *a2, ...)
{
  return _[a1 _hasMusicSubscription];
}

id objc_msgSend__hasTVSubscription(void *a1, const char *a2, ...)
{
  return _[a1 _hasTVSubscription];
}

id objc_msgSend__stringForDatabaseScope_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stringForDatabaseScope:");
}

id objc_msgSend__subscribeWithIdentifier_recordZoneIdentifier_attempt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_subscribeWithIdentifier:recordZoneIdentifier:attempt:");
}

id objc_msgSend__zoneIdentifiersWithExpiredTokensFrom_andErrors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_zoneIdentifiersWithExpiredTokensFrom:andErrors:");
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return _[a1 absoluteString];
}

id objc_msgSend_acceptanceStatus(void *a1, const char *a2, ...)
{
  return _[a1 acceptanceStatus];
}

id objc_msgSend_accountInfoWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountInfoWithCompletionHandler:");
}

id objc_msgSend_accountStatus(void *a1, const char *a2, ...)
{
  return _[a1 accountStatus];
}

id objc_msgSend_addBagKey_valueType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addBagKey:valueType:");
}

id objc_msgSend_addFinishBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addFinishBlock:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:selector:name:object:");
}

id objc_msgSend_addOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOperation:");
}

id objc_msgSend_addSuccessBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSuccessBlock:");
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _[a1 allKeys];
}

id objc_msgSend_ams_activeiTunesAccount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_activeiTunesAccount");
}

id objc_msgSend_ams_filterUsingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_filterUsingTest:");
}

id objc_msgSend_ams_firstObjectPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_firstObjectPassingTest:");
}

id objc_msgSend_ams_hasDomain_code_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_hasDomain:code:");
}

id objc_msgSend_ams_invertedDictionaryUsingTransform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_invertedDictionaryUsingTransform:");
}

id objc_msgSend_ams_invertedDictionaryUsingTransformIgnoresNil_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_invertedDictionaryUsingTransformIgnoresNil:");
}

id objc_msgSend_ams_mapWithTransform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_mapWithTransform:");
}

id objc_msgSend_ams_mapWithTransformIgnoresNil_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_mapWithTransformIgnoresNil:");
}

id objc_msgSend_ams_message(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_message");
}

id objc_msgSend_ams_sharedAccountStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_sharedAccountStore");
}

id objc_msgSend_ams_title(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_title");
}

id objc_msgSend_amsd_isCKChangeTokenExpiredError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "amsd_isCKChangeTokenExpiredError");
}

id objc_msgSend_amsd_isCKManateeUnavailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "amsd_isCKManateeUnavailable");
}

id objc_msgSend_amsd_isCKMissingManateeIdentity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "amsd_isCKMissingManateeIdentity");
}

id objc_msgSend_amsd_isCKPartialFailureError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "amsd_isCKPartialFailureError");
}

id objc_msgSend_amsd_isCKServerRecordChangedError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "amsd_isCKServerRecordChangedError");
}

id objc_msgSend_amsd_isCKThrottledError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "amsd_isCKThrottledError");
}

id objc_msgSend_amsd_isCKUnknownItemError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "amsd_isCKUnknownItemError");
}

id objc_msgSend_appendFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendFormat:");
}

id objc_msgSend_appendString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendString:");
}

id objc_msgSend_archivedDataWithRootObject_requiringSecureCoding_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "archivedDataWithRootObject:requiringSecureCoding:error:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_bagForProfile_profileVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bagForProfile:profileVersion:");
}

id objc_msgSend_bagKeySet(void *a1, const char *a2, ...)
{
  return _[a1 bagKeySet];
}

id objc_msgSend_binaryPromiseAdapter(void *a1, const char *a2, ...)
{
  return _[a1 binaryPromiseAdapter];
}

id objc_msgSend_buttonActions(void *a1, const char *a2, ...)
{
  return _[a1 buttonActions];
}

id objc_msgSend_catchWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "catchWithBlock:");
}

id objc_msgSend_changeToken(void *a1, const char *a2, ...)
{
  return _[a1 changeToken];
}

id objc_msgSend_changeTokens(void *a1, const char *a2, ...)
{
  return _[a1 changeTokens];
}

id objc_msgSend_changedRecordZones(void *a1, const char *a2, ...)
{
  return _[a1 changedRecordZones];
}

id objc_msgSend_changedRecords(void *a1, const char *a2, ...)
{
  return _[a1 changedRecords];
}

id objc_msgSend_clientIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 clientIdentifier];
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _[a1 code];
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:");
}

id objc_msgSend_componentsWithURL_resolvingAgainstBaseURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsWithURL:resolvingAgainstBaseURL:");
}

id objc_msgSend_containerWithContainerIdentifier_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containerWithContainerIdentifier:options:");
}

id objc_msgSend_containers(void *a1, const char *a2, ...)
{
  return _[a1 containers];
}

id objc_msgSend_continueWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "continueWithBlock:");
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_dataSource(void *a1, const char *a2, ...)
{
  return _[a1 dataSource];
}

id objc_msgSend_dataSourceAccountDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataSourceAccountDidChange:");
}

id objc_msgSend_dataSourceDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataSourceDidChange:");
}

id objc_msgSend_databaseScope(void *a1, const char *a2, ...)
{
  return _[a1 databaseScope];
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _[a1 date];
}

id objc_msgSend_defaultAction(void *a1, const char *a2, ...)
{
  return _[a1 defaultAction];
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCenter];
}

id objc_msgSend_defaultRecordZone(void *a1, const char *a2, ...)
{
  return _[a1 defaultRecordZone];
}

id objc_msgSend_defaultURL(void *a1, const char *a2, ...)
{
  return _[a1 defaultURL];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_deleteRecordWithRecordIdentifier_missingEncryptionIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteRecordWithRecordIdentifier:missingEncryptionIdentity:");
}

id objc_msgSend_deleteRecordZonesWithRecordZoneIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteRecordZonesWithRecordZoneIdentifiers:");
}

id objc_msgSend_deletedRecordZones(void *a1, const char *a2, ...)
{
  return _[a1 deletedRecordZones];
}

id objc_msgSend_deletedRecords(void *a1, const char *a2, ...)
{
  return _[a1 deletedRecords];
}

id objc_msgSend_deviceToDeviceEncryptionAvailability(void *a1, const char *a2, ...)
{
  return _[a1 deviceToDeviceEncryptionAvailability];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _[a1 dictionary];
}

id objc_msgSend_dictionaryForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryForKey:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_encryptedValuesByKey(void *a1, const char *a2, ...)
{
  return _[a1 encryptedValuesByKey];
}

id objc_msgSend_enumerateKeysAndObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateKeysAndObjectsUsingBlock:");
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateObjectsUsingBlock:");
}

id objc_msgSend_error(void *a1, const char *a2, ...)
{
  return _[a1 error];
}

id objc_msgSend_errors(void *a1, const char *a2, ...)
{
  return _[a1 errors];
}

id objc_msgSend_expiryDate(void *a1, const char *a2, ...)
{
  return _[a1 expiryDate];
}

id objc_msgSend_failures(void *a1, const char *a2, ...)
{
  return _[a1 failures];
}

id objc_msgSend_familyID(void *a1, const char *a2, ...)
{
  return _[a1 familyID];
}

id objc_msgSend_familyName(void *a1, const char *a2, ...)
{
  return _[a1 familyName];
}

id objc_msgSend_fetchAllRecordZonesOperation(void *a1, const char *a2, ...)
{
  return _[a1 fetchAllRecordZonesOperation];
}

id objc_msgSend_fetchRecordWithRecordIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchRecordWithRecordIdentifier:");
}

id objc_msgSend_fetchSubscriptionData_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchSubscriptionData:completion:");
}

id objc_msgSend_fetchUserRecordIDWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchUserRecordIDWithCompletionHandler:");
}

id objc_msgSend_finishWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishWithError:");
}

id objc_msgSend_finishWithPromise_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishWithPromise:");
}

id objc_msgSend_finishWithResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishWithResult:");
}

id objc_msgSend_finishWithResult_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishWithResult:error:");
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _[a1 firstObject];
}

id objc_msgSend_getSubscriptionEntitlementsForSegment_ignoreCaches_withResultHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSubscriptionEntitlementsForSegment:ignoreCaches:withResultHandler:");
}

id objc_msgSend_getSubscriptionStatusWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSubscriptionStatusWithCompletionHandler:");
}

id objc_msgSend_givenName(void *a1, const char *a2, ...)
{
  return _[a1 givenName];
}

id objc_msgSend_handlePushNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlePushNotification:");
}

id objc_msgSend_hashedDescription(void *a1, const char *a2, ...)
{
  return _[a1 hashedDescription];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _[a1 identifier];
}

id objc_msgSend_initWithChangedRecordZones_deletedRecordZones_changeToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithChangedRecordZones:deletedRecordZones:changeToken:");
}

id objc_msgSend_initWithChangedRecords_deletedRecords_errors_changeTokens_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithChangedRecords:deletedRecords:errors:changeTokens:");
}

id objc_msgSend_initWithContainerID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContainerID:");
}

id objc_msgSend_initWithContainerID_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContainerID:options:");
}

id objc_msgSend_initWithContainerIdentifier_environment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContainerIdentifier:environment:");
}

id objc_msgSend_initWithEnabledActionTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEnabledActionTypes:");
}

id objc_msgSend_initWithFirst_second_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFirst:second:");
}

id objc_msgSend_initWithPayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPayload:");
}

id objc_msgSend_initWithPayload_andConfig_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPayload:andConfig:");
}

id objc_msgSend_initWithPreviousServerChangeToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPreviousServerChangeToken:");
}

id objc_msgSend_initWithPushNotificationTopic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPushNotificationTopic:");
}

id objc_msgSend_initWithRecordIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordIDs:");
}

id objc_msgSend_initWithRecordName_zoneID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordName:zoneID:");
}

id objc_msgSend_initWithRecordType_recordID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordType:recordID:");
}

id objc_msgSend_initWithRecordZoneID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordZoneID:");
}

id objc_msgSend_initWithRecordZoneIDs_configurationsByRecordZoneID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordZoneIDs:configurationsByRecordZoneID:");
}

id objc_msgSend_initWithRecordZonesToSave_recordZoneIDsToDelete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordZonesToSave:recordZoneIDsToDelete:");
}

id objc_msgSend_initWithRecordsToSave_recordIDsToDelete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordsToSave:recordIDsToDelete:");
}

id objc_msgSend_initWithResults_failures_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithResults:failures:");
}

id objc_msgSend_initWithSavedRecords_deletedRecords_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSavedRecords:deletedRecords:error:");
}

id objc_msgSend_initWithShareMetadatas_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithShareMetadatas:");
}

id objc_msgSend_initWithShareURLs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithShareURLs:");
}

id objc_msgSend_initWithShareURLs_invitationTokensByShareURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithShareURLs:invitationTokensByShareURL:");
}

id objc_msgSend_initWithStoreIdentifier_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStoreIdentifier:type:");
}

id objc_msgSend_initWithSubscriptionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSubscriptionID:");
}

id objc_msgSend_initWithSubscriptionsToSave_subscriptionIDsToDelete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSubscriptionsToSave:subscriptionIDsToDelete:");
}

id objc_msgSend_initWithTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTimeout:");
}

id objc_msgSend_initWithZoneID_subscriptionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithZoneID:subscriptionID:");
}

id objc_msgSend_initWithZoneName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithZoneName:");
}

id objc_msgSend_initWithZoneName_ownerName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithZoneName:ownerName:");
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualToDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToDictionary:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isPrivateDatabase(void *a1, const char *a2, ...)
{
  return _[a1 isPrivateDatabase];
}

id objc_msgSend_isSharedDatabase(void *a1, const char *a2, ...)
{
  return _[a1 isSharedDatabase];
}

id objc_msgSend_isTVPlusSubscriber(void *a1, const char *a2, ...)
{
  return _[a1 isTVPlusSubscriber];
}

id objc_msgSend_loadWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadWithName:");
}

id objc_msgSend_metricsEvent(void *a1, const char *a2, ...)
{
  return _[a1 metricsEvent];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _[a1 name];
}

id objc_msgSend_nameComponents(void *a1, const char *a2, ...)
{
  return _[a1 nameComponents];
}

id objc_msgSend_notificationFromRemoteNotificationDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationFromRemoteNotificationDictionary:");
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInteger:");
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInteger:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_ownerName(void *a1, const char *a2, ...)
{
  return _[a1 ownerName];
}

id objc_msgSend_participantRole(void *a1, const char *a2, ...)
{
  return _[a1 participantRole];
}

id objc_msgSend_participantStatus(void *a1, const char *a2, ...)
{
  return _[a1 participantStatus];
}

id objc_msgSend_persistChangedRecordZonesChangeToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistChangedRecordZonesChangeToken:");
}

id objc_msgSend_persistChangedRecordsChangeToken_forRecordZoneIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistChangedRecordsChangeToken:forRecordZoneIdentifier:");
}

id objc_msgSend_postNotification_bag_centerBundleId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotification:bag:centerBundleId:");
}

id objc_msgSend_promiseWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "promiseWithError:");
}

id objc_msgSend_promiseWithResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "promiseWithResult:");
}

id objc_msgSend_pushNotificationTopic(void *a1, const char *a2, ...)
{
  return _[a1 pushNotificationTopic];
}

id objc_msgSend_queryItemWithName_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryItemWithName:value:");
}

id objc_msgSend_queryItems(void *a1, const char *a2, ...)
{
  return _[a1 queryItems];
}

id objc_msgSend_recordID(void *a1, const char *a2, ...)
{
  return _[a1 recordID];
}

id objc_msgSend_recordZoneEncryption(void *a1, const char *a2, ...)
{
  return _[a1 recordZoneEncryption];
}

id objc_msgSend_registerBagKeySet_forProfile_profileVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerBagKeySet:forProfile:profileVersion:");
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:");
}

id objc_msgSend_resultWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resultWithError:");
}

id objc_msgSend_results(void *a1, const char *a2, ...)
{
  return _[a1 results];
}

id objc_msgSend_role(void *a1, const char *a2, ...)
{
  return _[a1 role];
}

id objc_msgSend_runUntilIdleExit(void *a1, const char *a2, ...)
{
  return _[a1 runUntilIdleExit];
}

id objc_msgSend_save_name_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "save:name:completionHandler:");
}

id objc_msgSend_savedRecords(void *a1, const char *a2, ...)
{
  return _[a1 savedRecords];
}

id objc_msgSend_scope(void *a1, const char *a2, ...)
{
  return _[a1 scope];
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _[a1 set];
}

id objc_msgSend_setAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccount:");
}

id objc_msgSend_setAtomic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAtomic:");
}

id objc_msgSend_setCategoryIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCategoryIdentifier:");
}

id objc_msgSend_setDefaultURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefaultURL:");
}

id objc_msgSend_setFetchDatabaseChangesCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchDatabaseChangesCompletionBlock:");
}

id objc_msgSend_setFetchRecordZoneChangesCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchRecordZoneChangesCompletionBlock:");
}

id objc_msgSend_setFetchRecordZonesCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchRecordZonesCompletionBlock:");
}

id objc_msgSend_setFetchRecordsCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchRecordsCompletionBlock:");
}

id objc_msgSend_setMarkAsParticipantNeedsNewInvitationToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMarkAsParticipantNeedsNewInvitationToken:");
}

id objc_msgSend_setMetricsEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMetricsEvent:");
}

id objc_msgSend_setModifyRecordZonesCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModifyRecordZonesCompletionBlock:");
}

id objc_msgSend_setModifyRecordsCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModifyRecordsCompletionBlock:");
}

id objc_msgSend_setModifySubscriptionsCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModifySubscriptionsCompletionBlock:");
}

id objc_msgSend_setNotificationInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotificationInfo:");
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKey:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_setPerShareCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPerShareCompletionBlock:");
}

id objc_msgSend_setPerShareMetadataBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPerShareMetadataBlock:");
}

id objc_msgSend_setPreviousServerChangeToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviousServerChangeToken:");
}

id objc_msgSend_setPushNotificationTopic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPushNotificationTopic:");
}

id objc_msgSend_setQuery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQuery:");
}

id objc_msgSend_setQueryItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQueryItems:");
}

id objc_msgSend_setRecordChangedBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecordChangedBlock:");
}

id objc_msgSend_setRecordWithIDWasDeletedBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecordWithIDWasDeletedBlock:");
}

id objc_msgSend_setRecordZoneFetchCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecordZoneFetchCompletionBlock:");
}

id objc_msgSend_setRecordZoneWithIDChangedBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecordZoneWithIDChangedBlock:");
}

id objc_msgSend_setRecordZoneWithIDWasDeletedBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecordZoneWithIDWasDeletedBlock:");
}

id objc_msgSend_setSavePolicy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSavePolicy:");
}

id objc_msgSend_setShouldSendContentAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldSendContentAvailable:");
}

id objc_msgSend_setUseZoneWidePCS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUseZoneWidePCS:");
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithArray:");
}

id objc_msgSend_shareForRecordZoneIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shareForRecordZoneIdentifier:");
}

id objc_msgSend_sharedAccountsDaemonConfig(void *a1, const char *a2, ...)
{
  return _[a1 sharedAccountsDaemonConfig];
}

id objc_msgSend_sharedAccountsMultiUserConfig(void *a1, const char *a2, ...)
{
  return _[a1 sharedAccountsMultiUserConfig];
}

id objc_msgSend_sharedConfig(void *a1, const char *a2, ...)
{
  return _[a1 sharedConfig];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _[a1 sharedInstance];
}

id objc_msgSend_sharedStatusController(void *a1, const char *a2, ...)
{
  return _[a1 sharedStatusController];
}

id objc_msgSend_statusType(void *a1, const char *a2, ...)
{
  return _[a1 statusType];
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingString:");
}

id objc_msgSend_stringForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringForKey:");
}

id objc_msgSend_stringValue(void *a1, const char *a2, ...)
{
  return _[a1 stringValue];
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_supportsDeviceToDeviceEncryption(void *a1, const char *a2, ...)
{
  return _[a1 supportsDeviceToDeviceEncryption];
}

id objc_msgSend_thenWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thenWithBlock:");
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return _[a1 type];
}

id objc_msgSend_unarchivedObjectOfClass_fromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unarchivedObjectOfClass:fromData:error:");
}

id objc_msgSend_underlyingErrors(void *a1, const char *a2, ...)
{
  return _[a1 underlyingErrors];
}

id objc_msgSend_unionBagKeySet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unionBagKeySet:");
}

id objc_msgSend_unionSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unionSet:");
}

id objc_msgSend_useSandboxEnvironment(void *a1, const char *a2, ...)
{
  return _[a1 useSandboxEnvironment];
}

id objc_msgSend_userIdentity(void *a1, const char *a2, ...)
{
  return _[a1 userIdentity];
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _[a1 userInfo];
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return _[a1 value];
}

id objc_msgSend_valueForKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKeyPath:");
}

id objc_msgSend_valueWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithError:");
}

id objc_msgSend_zoneID(void *a1, const char *a2, ...)
{
  return _[a1 zoneID];
}

id objc_msgSend_zoneIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 zoneIdentifier];
}

id objc_msgSend_zoneName(void *a1, const char *a2, ...)
{
  return _[a1 zoneName];
}